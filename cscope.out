cscope 15 C:\PokittoLib_Git\PokittoLib_curr"               0001561521
	@C:\PokittoLib_Git\PokittoLib_curr\Examples\3Dblobs\3Dblobs.cpp

174 
	~"pokôto.h
"

175 
	~"m©h.h
"

176 
	gPokôto
::
C‹e
 
game
;

179 
	gxp
=55;

180 sig√d 
	gxo
=0;

181 
	gyp
=80;

183 
	g∑πIndx
=0;

184 
	sP¨ti˛e
 {

185 
	mx
;

186 
	my
;

187 
	mdx
;

188 
	mdy
;

189 
	mli„
=9999;

191 c⁄° 
	gMAX_PART
=200;

192 
P¨ti˛e
 
	g∑πi˛es
[
MAX_PART
];

194 
	gPAL_FILE
[5]={
C_YELLOW
,
C_ORANGE
,
C_RED
,
C_BROWN
,
C_DARKGRAY
};

196 
	$addP¨ti˛e
(
x
,
y
)

198 
∑πi˛es
[
∑πIndx
].
x
=x;

199 
∑πi˛es
[
∑πIndx
].
y
=y;

200 
∑πi˛es
[
∑πIndx
].
dx
=
	`øndom
(-100,100)/300.0;

201 
∑πi˛es
[
∑πIndx
].
dy
=
	`øndom
(-100,-80)/80.0;

202 
∑πi˛es
[
∑πIndx
].
li„
=0;

203 
∑πIndx
++;

204 i‡(
∑πIndx
>
MAX_PART
) {partIndx=0;}

205 
	}
}

207 
	$ªndîP¨ti˛es
()

209 
i
=0;i<
MAX_PART
;i++)

211 if(
∑πi˛es
[
i
].
li„
<50)

214 
game
.
di•œy
.
cﬁ‹
=
PAL_FILE
[(()
∑πi˛es
[
i
].
li„
/10)];

215 
∑πi˛es
[
i
].
li„
++;

216 
∑πi˛es
[
i
].
x
+ı¨ti˛es[i].
dx
;

217 
∑πi˛es
[
i
].
y
+ı¨ti˛es[i].
dy
;

219 
ødius

∑πi˛es
[
i
].
li„
/10;

220 
game
.
di•œy
.
	`fûlCú˛e
(
∑πi˛es
[
i
].
x
,∑πi˛es[i].
y
,
ødius
);

221 if(
∑πi˛es
[
i
].
li„
>10){

222 
game
.
di•œy
.
cﬁ‹
=
C_BLACK
;

223 
game
.
di•œy
.
	`døwCú˛e
(
∑πi˛es
[
i
].
x
,∑πi˛es[i].
y
,
ødius
);

227 
	}
}

229 
	$maö
 () {

230 
game
.
	`begö
();

231 
game
.
di•œy
.
	`lﬂd565PÆëã
(
def565∑Àâe
);

232 
game
.
	`isRu¬ög
()) {

233 i‡(
game
.
	`upd©e
()) {

235 i‡(
game
.
buâ⁄s
.
	`upBä
()Ë{
yp
-=2;}

236 i‡(
game
.
buâ⁄s
.
	`downBä
()Ë{
yp
+=2;}

237 i‡(
game
.
buâ⁄s
.
	`rightBä
()Ë{
xp
+=2;}

238 i‡(
game
.
buâ⁄s
.
	`À·Bä
()Ë{
xp
-=2;}

241 
	`ªndîP¨ti˛es
();

244 
game
.
di•œy
.
cﬁ‹
=
C_RED
;

245 
xo
=-15*
	`sö
(
game
.
‰ameCou¡
/10.0);

246 
	`addP¨ti˛e
(
xp
+
xo
,
yp
);

247 
	`addP¨ti˛e
(
xp
+
xo
,
yp
);

248 
	`addP¨ti˛e
(
xp
+
xo
,
yp
);

249 
game
.
di•œy
.
	`døwCú˛e
((
xp
+
xo
),
yp
,2);

252 
game
.
di•œy
.
	`døwLöe
(
xp
-1,
yp
,xp+1,yp);

253 
game
.
di•œy
.
	`døwLöe
(
xp
,
yp
-1,xp,yp+1);

257 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Aquarium256\My_settings.h

1 
	~"PokôtoMi¸o.h
"

3 
	#PROJ_SHOW_FPS_COUNTER


	)

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Aquarium256\PokittoMicro.cpp

1 
	~"PokôtoMi¸o.h
"

3 
	~"Pokôto.h
"

5 
usög
 
«me•a˚
 
	gPokôto
;

7 
wrôe_comm™d_16
(
uöt16_t
 
d©a
);

8 
wrôe_d©a_16
(
uöt16_t
 
d©a
);

10 
lcdª‰esh
();

12 c⁄° 
	gMAX_SPRITES
 = 11;

14 
uöt32_t
 *
	g∑Àâe
 = 
ªöãΩªt_ˇ°
<uint32_t *>(0x20000000);

15 c⁄° ** 
	gtûes
 = 
ªöãΩªt_ˇ°
<const **>(0x20000000+256*4);

17 
«me•a˚
 
	gPokôtoMi¸o
 {

19 c⁄° 
uöt8_t
 *
	gcmds
[220][
MAX_SPRITES
];

20 
uöt8_t
 
	gm≠
[15*12] = {0};

21 
uöt8_t
 
	gå™•¨ítCﬁ‹
;

23 
ölöe
 c⁄° 
uöt8_t
 *
∑ck±r
–c⁄° uöt8_à*
±r
, uöt8_à
d©a
, uöt8_à
Êags
 ){

26 c⁄° 
uöt8_t
 *
	g±r
;

27 
uöt32_t
 
	gu32
;

28 
uöt8_t
 
	gu8
[4];

29 } 
	gu
;

31 
	gu
.
	g±r
 = 
±r
;

32 
	gu
.
	gu8
[2] |
Êags
<<4;

33 
	gu
.
	gu32
 = (
u
.
u32
<<8Ë+ 
d©a
;

35  
	gu
.
	g±r
;

39 
ölöe
 
uöt8_t
 
gëd©a
–c⁄° uöt8_à*
±r
 ){

41 c⁄° 
uöt8_t
 *
	g±r
;

42 
uöt8_t
 
	gu8
[4];

43 } 
	gu
;

44 
	gu
.
	g±r
 = 
±r
;

45  
	gu
.
	gu8
[0];

48 
ölöe
 
u≈ack
–c⁄° 
uöt8_t
 *
±r
, 
öt32_t
 &
d©a
, i¡32_à&
Êags
, c⁄° uöt8_à*&
øw
 ){

51 c⁄° 
uöt8_t
 *
	g±r
;

52 
uöt32_t
 
	gu32
;

53 
uöt8_t
 
	gu8
[4];

54 } 
	gu
;

56 
	gu
.
	g±r
 = 
±r
;

58 
	gd©a
 = 
u
.
u8
[0];

60 
	gÊags
 = 
u
.
u8
[3]>>4;

62 
	gu
.
	gu8
[3] &= 0x0F;

64 
	gu
.
	gu32
 >>= 8;

65 
	gøw
 = 
u
.
±r
;

69 
˛ór
(){

70 c⁄° 
uöt8_t
 *
	g±r
 = 
∑ck±r
–
nuŒ±r
, 176, 0 );

71  
	gi
=0; i<220; ++i ){

72  
	gj
=0; j<10; ++j )

73 
	gcmds
[
i
][
j
] = 
±r
;

77 
£tTøn•¨ítCﬁ‹
–
cﬁ‹
 ){

78 
	gå™•¨ítCﬁ‹
 = 
cﬁ‹
;

81 
lﬂd8BôPÆëã
–c⁄° *
∑l
 ){

82 
uöt32_t
 *
	gout
 = 
∑Àâe
;

83  
	gi
=0; i<256; ++i ){

84 *
	gout
++ = 
uöt32_t
(*
∑l
++)<<3;

88 
£tTûeImage
–
id
, c⁄° *
tûe
 ){

89 
	gtûes
[
id
] = 
tûe
;

92 
uöt32_t
 
	g°¨tTime
;

93 
uöt32_t
 
	g‰ameEnd
;

94 
uöt32_t
 
	g‰ameTime
;

96 
begö
–
‰ameR©e
 ){

98 
	gC‹e
::
begö
();

100 *
	gªöãΩªt_ˇ°
<
	guöt32_t
 *>(0x40048080) |= 3 << 26;

102 
	gDi•œy
::
íabÀDúe˘Prötög
(
åue
);

104 
˛ór
();

107 
	g‰ameTime
 = 1000 / 
‰ameR©e
;

109 
£tWödow
–0, 0, 
POK_LCD_H
-1, 
POK_LCD_W
-1 );

111 
	g°¨tTime
 = 
C‹e
::
gëTime
();

112 
	g‰ameEnd
 = 0;

116 
uöt32_t
 
	g‰ameCou¡
 = 0;

117 
	gtimeText
[10] = {0};

119 
upd©e
–
Upd©eFunc
 
func
 ){

120 
boﬁ
 
	gwasInô
 = 
Ál£
;

122  
	gfunc
 ){

124 
uöt32_t
 
	gnow
 = 
C‹e
::
gëTime
();

126 if–
	gnow
 < 
	g‰ameEnd
 )

129 
	g‰ameEnd
 = 
now
 + 
‰ameTime
;

131 autÿ
	g√wFunc
 = (*
func
)–
wasInô
 );

132 
	gwasInô
 = 
√wFunc
 =
func
;

133 
	gfunc
 = 
√wFunc
;

135 
lcdª‰esh
();

137 
˛ór
();

139 
	g‰ameCou¡
++;

140 if–
	g‰ameCou¡
 == 100 ){

141 
‰ameCou¡
 = 0;

142 
•rötf
–
timeText
, "%u", 
°©ic_ˇ°
<>(100000/(
now
 - 
°¨tTime
)) );

143 
	g°¨tTime
 = 
C‹e
::
gëTime
();

146 
	gDi•œy
::
£tCurs‹
( 0, 0 );

147 
	gDi•œy
::
¥öt
(
timeText
);

153 
blô
–
y
, 
x
, c⁄° *
•rôe
, 
BlôOp
 
›
 ){

154 
öt32_t
 
	gw
 = *
•rôe
++;

155 
öt32_t
 
	gh
 = *
•rôe
++;

157 if–
	gy
+
	gh
 < 0 || y>=220 || 
x
 >176 || x+
w
 < 0 )

160 c⁄° 
uöt8_t
 *
	g°rùLígths
 = 
•rôe
;

161 
öt32_t
 
	ghdñè
 = 1;

163 
	g•rôe
 +
w
<<1;

165 if–
uöt32_t
(
›
Ë& uöt32_t(
BlôOp
::
FLIP_HORIZONTAL
) ){

166 
hdñè
 = -1;

167 
	gy
 +
h
 - 1;

170 
öt32_t
 
	g§x
 = 0, 
	gîx
 = 
w
;

171 
uöt32_t
 
	gacc
 = 0;

173 if–
uöt32_t
(
›
Ë& uöt32_t(
BlôOp
::
FLIP_VERTICAL
) ){

176  ; 
	gh
>0; 
	gy
 +
hdñè
, --h ){

178 
öt32_t
 
	goff£t
 = *
°rùLígths
++;

179 
öt32_t
 
	gÀngth
 = *
°rùLígths
++;

180 
	g§x
 = 
x
 + 
off£t
;

181 
	gîx
 = 
mö
–176, 
§x
+
Àngth
 );

183 if–
	g§x
 < 0 ){

184 
	g•rôe
 -
§x
;

185 
	gÀngth
 +
§x
;

186 
	g§x
 = 0;

189 if–
	gy
>=0 && 
y
<220 && 
Àngth
 > 0 )  
c
=0; 
	gc
<
	gMAX_SPRITES
-1; ++c ){

191 
uöt8_t
 
	gcmdyc
 = 
gëd©a
(
cmds
[
y
][
c
]);

193 if–
	gcmdyc
 < 
	g§x
 )

196 
öt32_t
 
	gîa£
 = 0;

197  
	gj
=
c
+1; j<
	gMAX_SPRITES
; ++j ){

198 if–
gëd©a
(
cmds
[
y
][
j
]Ë<
îx
 ) 
îa£
++;

202 
	gshi·
 = 1-
îa£
;

204 
öt32_t
 
	g√xtd©a
, 
	g√xtÊags
;

205 c⁄° 
uöt8_t
 * 
	g√xt
;

206 
u≈ack
–
cmds
[
y
][
c
+
îa£
], 
√xtd©a
, 
√xtÊags
, 
√xt
 );

208 if–
	g√xtd©a
 <
îx
 ){

210 if–
√xt
 ){

212 if–
√xtÊags
 )

213 
√xt
 -
îx
 - 
√xtd©a
;

215 
	g√xt
 +
îx
 - 
√xtd©a
;

219 
	gcmds
[
y
][
c
+
îa£
] = 
∑ck±r
–
√xt
, 
îx
, 
√xtÊags
 );

222 
	gshi·
++;

225 if–
	gshi·
>0 ){

227  
	gj
=
MAX_SPRITES
-1; j>=
c
+
shi·
; --j )

228 
	gcmds
[
y
][
j
] = 
cmds
[y][j-
shi·
];

230 }if–
	gshi·
<0 ){

232  
	gj
=
c
+1; j<
	gMAX_SPRITES
+
	gshi·
; ++j )

233 
	gcmds
[
y
][
j
] = 
cmds
[y][j-
shi·
];

237 
	gcmds
[
y
][
c
] = 
∑ck±r
–
•rôe
, 
§x
, 0 );

239 if–
	g√xtd©a
 > 
	g§x
+
	gÀngth
 ){

240 
	gcmds
[
y
][
c
+1] = 
∑ck±r
–
nuŒ±r
, 
îx
, 0 );

247 
	g•rôe
 +
Àngth
;

257 
	#PLOTTILE
 \

258 *
ªöãΩªt_ˇ°
<
uöt32_t
 *>(0xA0002188Ë
∑Àâe
[*
tûe
++]; \

259 *
ªöãΩªt_ˇ°
<
uöt32_t
 *>(0xA0002284Ë1 << 
LCD_WR_PIN
; \

260 *
ªöãΩªt_ˇ°
<
uöt32_t
 *>(0xA0002204Ë1 << 
LCD_WR_PIN
;

	)

263 
	$lcdª‰esh
(){

265 
	`wrôe_comm™d
(0x20); 
	`wrôe_d©a
(0);

266 
	`wrôe_comm™d
(0x21); 
	`wrôe_d©a
(0);

267 
	`wrôe_comm™d
(0x22);

268 
CLR_CS_SET_CD_RD_WR
;

270 
SET_MASK_P2
;

272 
°ride
=1, 
√xt°ride
;

274  
y
=0; y<220; ++y ){

276 
c
=0;

277 c⁄° 
uöt8_t
 *
√xçå
;

278 
öt32_t
 
tx
, 
Êags
;

279 c⁄°áutÿ*
cmd
 = &
PokôtoMi¸o
::
cmds
[
y
][0];

280 
PokôtoMi¸o
::
	`u≈ack
–*
cmd
, 
tx
, 
Êags
, 
√xçå
 );

281 c⁄° 
uöt8_t
 *
±r
 = 
nuŒ±r
;

283 
√xt°ride
 = 
Êags
 & 1 ? -1 : 1;

285  
x
=0; x<176; ){

287 if–
x
>=
tx
 ){

288 
±r
 = 
√xçå
;

289 
°ride
 = 
√xt°ride
;

290 
c
++;

291 if–
c
>=
MAX_SPRITES
 ){

292 
±r
 = 
√xçå
 = 
nuŒ±r
;

293 
tx
 = 176;

294 
c
 = 10;

296 
cmd
++;

297 
PokôtoMi¸o
::
	`u≈ack
–*
cmd
, 
tx
, 
Êags
, 
√xçå
 );

298 
√xt°ride
 = 
Êags
 & 1 ? -1 : 1;

303 
ªp
 = 
tx
 - 
x
;

305 if–
ªp
 <= 0 ){

306 
tx
 = 
x
;

310 if–
±r
 ){

314  
ªp
-- ){

316 autÿ
cﬁ‹
 = *
±r
;

318 if–
cﬁ‹
 =
PokôtoMi¸o
::
å™•¨ítCﬁ‹
 )

319 
cﬁ‹
 = 
tûes
[ 
PokôtoMi¸o
::
m≠
[(
x
>>4)*15+(
y
>>4)] ][ (x&0xF) + (y&0xF)*16 ];

321 *
ªöãΩªt_ˇ°
<
uöt32_t
 *>(0xA0002188Ë
∑Àâe
[ 
cﬁ‹
 ];

322 
±r
 +
°ride
;

323 *
ªöãΩªt_ˇ°
<
uöt32_t
 *>(0xA0002284Ë1 << 
LCD_WR_PIN
;

324 *
ªöãΩªt_ˇ°
<
uöt32_t
 *>(0xA0002204Ë1 << 
LCD_WR_PIN
;

326 
x
++;

332  
ªp
>0 ){

334 
åï
 = 
	`mö
–
ªp
, 16-(
x
&0xF) );

336 c⁄° 
uöt8_t
 *
tûe
 = 
tûes
[ 
PokôtoMi¸o
::
m≠
[(
x
>>4)*15+(
y
>>4)] ] + (x&0xF) + (y&0xF)*16;

337 
x
 +
åï
;

339 
ªp
 -
åï
;

341  
åï
 ){

343 16: 
PLOTTILE


344 15: 
PLOTTILE


345 14: 
PLOTTILE


346 13: 
PLOTTILE


347 12: 
PLOTTILE


348 11: 
PLOTTILE


349 10: 
PLOTTILE


350 9: 
PLOTTILE


351 8: 
PLOTTILE


352 7: 
PLOTTILE


353 6: 
PLOTTILE


354 5: 
PLOTTILE


355 4: 
PLOTTILE


356 3: 
PLOTTILE


357 2: 
PLOTTILE


358 1: 
PLOTTILE


371 
CLR_MASK_P2
;

373 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Aquarium256\PokittoMicro.h

1 #i‚de‡
_POKITTO_MICRO


2 
	#_POKITTO_MICRO


	)

4 
	#PROJ_TILEDMODE
 1

	)

5 
	#POK_BITFRAME
 0

	)

7 
	#PROJ_STREAMING_MUSIC
 0

	)

9 
	#PROJ_HIRES
 0

	)

10 
	#DISABLE_SOUND_WARNING


	)

11 
	#SCROLL_TEXT
 1

	)

12 
	#PROJ_ENABLE_SOUNDS
 0

	)

14 
«me•a˚
 
	gPokôtoMi¸o
 {

16 ˛as†
	cBlôOp
 {

17 
	gNORMAL
=0,

18 
	gFLIP_HORIZONTAL
=1,

19 
	gFLIP_VERTICAL
=2

22 
	gUpd©e
;

23 
	$Upd©e
 (*
	tUpd©eFunc
)–
	tboﬁ
 
	twasInô
 );

25 
	sUpd©e


28 
Upd©eFunc
 
p
;

30 
	`Upd©e
–
Upd©eFunc
 
µ
 ) : 
	`p
(Öp ) { }

31 
›î©‹
 
	`Upd©eFunc
(Ë{  
p
; }

33 
	}
};

35 
m≠
[];

38 
begö
–
‰ameR©e
=60 );

39 
lﬂd8BôPÆëã
–c⁄° *
∑l
 );

40 
£tTøn•¨ítCﬁ‹
–
cﬁ‹
 );

41 
£tTûeImage
–
id
, c⁄° *
tûe
 );

42 
blô
–
x
, 
y
, c⁄° *
•rôe
, 
BlôOp
 
›
 );

43 
upd©e
–
Upd©eFunc
 );

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Aquarium256\bitmaps.h

4 c⁄° 
	g∑Àâe
[] = {0x00,0xe716,0xe6f5,0xe6f5,0x9e9c,0xb6da,0xc6f9,0xdf18,0xf757,0xe6f6,0xe716,0xef16,0xef16,0xef36,0xe6f6,0xe6f6,0xccb8,0xdcbc,0xcc5a,0xe6f5,0xe6b6,0xf4a0,0xf4a0,0xfca0,0xf545,0xec60,0xee0c,0x2e0d,0x6674,0x2c58,0x3e2f,0xad5a,0xc419,0xbc99,0xec60,0x4650,0x254b,0x252b,0xcc5a,0xd49b,0xd4bc,0xc53b,0x34ba,0x351c,0xf545,0x7676,0x35ee,0x55b1,0xc439,0xdc9c,0xd47b,0xbbf7,0xccbb,0x2c78,0x34fc,0x7e77,0x1c08,0x24ca,0xc459,0xdcbc,0x2dcc,0xa69c,0x967b,0x2c58,0x3e0f,0x256b,0x65f3,0x5e53,0x45af,0x969b,0x75ba,0xac92,0xac51,0xabc7,0xad72,0xb9e5,0x9c2c,0xbc08,0xbc28,0xa367,0x9d74,0xb227,0xc1e6,0xd226,0xc491,0xddce,0xf568,0xed89,0x9b66,0xb30b,0x9e19,0xca06,0xe247,0xea67,0xb555,0xae78,0xecc3,0xeca2,0xece4,0x9b66,0xa387,0xaba7,0xa4d3,0xe440,0xcd08,0xf4e2,0x9534,0xd226,0xf480,0xc52e,0xa387,0xc46a,0x9e7b,0xa5f7,0xb638,0xd226,0xf4a0,0xd4e7,0xceb6,0xe6d5,0xaeba,0xda47,0xcd2a,0xf4a0,0xe481,0x9d95,0xf4c0,0xce12,0xc613,0xdeb5,0xc6b8};

32 c⁄° 
	gfish1_•rôe8
[] = {

55 c⁄° 
	gfish1_tûe8
[] = {

79 #i‚de‡
PROGMEM


80 
	#PROGMEM


	)

84 c⁄° 
PROGMEM
 
	gfish1_bôm≠
[] = {

92 c⁄° 
PROGMEM
 
	gfish1_mask
[] = {

99 c⁄° 
PROGMEM
 
	gfish1_∂us_mask
[] = {

107 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish1_comp_w
[] = {

110 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish1_comp_b
[] = {

113 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish1_comp_a
[] = {

143 c⁄° 
	gfish2_•rôe8
[] = {

166 c⁄° 
	gfish2_tûe8
[] = {

190 #i‚de‡
PROGMEM


191 
	#PROGMEM


	)

195 c⁄° 
PROGMEM
 
	gfish2_bôm≠
[] = {

203 c⁄° 
PROGMEM
 
	gfish2_mask
[] = {

210 c⁄° 
PROGMEM
 
	gfish2_∂us_mask
[] = {

218 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish2_comp_w
[] = {

221 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish2_comp_b
[] = {

224 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish2_comp_a
[] = {

254 c⁄° 
	gfish3_•rôe8
[] = {

277 c⁄° 
	gfish3_tûe8
[] = {

301 #i‚de‡
PROGMEM


302 
	#PROGMEM


	)

306 c⁄° 
PROGMEM
 
	gfish3_bôm≠
[] = {

314 c⁄° 
PROGMEM
 
	gfish3_mask
[] = {

321 c⁄° 
PROGMEM
 
	gfish3_∂us_mask
[] = {

329 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish3_comp_w
[] = {

332 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish3_comp_b
[] = {

335 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish3_comp_a
[] = {

365 c⁄° 
	gfish4_•rôe8
[] = {

388 c⁄° 
	gfish4_tûe8
[] = {

412 #i‚de‡
PROGMEM


413 
	#PROGMEM


	)

417 c⁄° 
PROGMEM
 
	gfish4_bôm≠
[] = {

425 c⁄° 
PROGMEM
 
	gfish4_mask
[] = {

432 c⁄° 
PROGMEM
 
	gfish4_∂us_mask
[] = {

440 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish4_comp_w
[] = {

443 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish4_comp_b
[] = {

446 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish4_comp_a
[] = {

476 c⁄° 
	gfish5_•rôe8
[] = {

499 c⁄° 
	gfish5_tûe8
[] = {

523 #i‚de‡
PROGMEM


524 
	#PROGMEM


	)

528 c⁄° 
PROGMEM
 
	gfish5_bôm≠
[] = {

536 c⁄° 
PROGMEM
 
	gfish5_mask
[] = {

543 c⁄° 
PROGMEM
 
	gfish5_∂us_mask
[] = {

551 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish5_comp_w
[] = {

554 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish5_comp_b
[] = {

557 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish5_comp_a
[] = {

587 c⁄° 
	gfish6_•rôe8
[] = {

608 c⁄° 
	gfish6_tûe8
[] = {

632 #i‚de‡
PROGMEM


633 
	#PROGMEM


	)

637 c⁄° 
PROGMEM
 
	gfish6_bôm≠
[] = {

645 c⁄° 
PROGMEM
 
	gfish6_mask
[] = {

652 c⁄° 
PROGMEM
 
	gfish6_∂us_mask
[] = {

660 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish6_comp_w
[] = {

664 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish6_comp_b
[] = {

668 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish6_comp_a
[] = {

700 c⁄° 
	gfish7_•rôe8
[] = {

717 c⁄° 
	gfish7_tûe8
[] = {

741 #i‚de‡
PROGMEM


742 
	#PROGMEM


	)

746 c⁄° 
PROGMEM
 
	gfish7_bôm≠
[] = {

754 c⁄° 
PROGMEM
 
	gfish7_mask
[] = {

761 c⁄° 
PROGMEM
 
	gfish7_∂us_mask
[] = {

769 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish7_comp_w
[] = {

773 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish7_comp_b
[] = {

776 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish7_comp_a
[] = {

807 c⁄° 
	gfish8_•rôe8
[] = {

828 c⁄° 
	gfish8_tûe8
[] = {

852 #i‚de‡
PROGMEM


853 
	#PROGMEM


	)

857 c⁄° 
PROGMEM
 
	gfish8_bôm≠
[] = {

865 c⁄° 
PROGMEM
 
	gfish8_mask
[] = {

872 c⁄° 
PROGMEM
 
	gfish8_∂us_mask
[] = {

880 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish8_comp_w
[] = {

884 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish8_comp_b
[] = {

887 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish8_comp_a
[] = {

918 c⁄° 
	gfish9_•rôe8
[] = {

939 c⁄° 
	gfish9_tûe8
[] = {

963 #i‚de‡
PROGMEM


964 
	#PROGMEM


	)

968 c⁄° 
PROGMEM
 
	gfish9_bôm≠
[] = {

976 c⁄° 
PROGMEM
 
	gfish9_mask
[] = {

983 c⁄° 
PROGMEM
 
	gfish9_∂us_mask
[] = {

991 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish9_comp_w
[] = {

995 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish9_comp_b
[] = {

999 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish9_comp_a
[] = {

1031 c⁄° 
	gfish10_•rôe8
[] = {

1051 c⁄° 
	gfish10_tûe8
[] = {

1075 #i‚de‡
PROGMEM


1076 
	#PROGMEM


	)

1080 c⁄° 
PROGMEM
 
	gfish10_bôm≠
[] = {

1088 c⁄° 
PROGMEM
 
	gfish10_mask
[] = {

1095 c⁄° 
PROGMEM
 
	gfish10_∂us_mask
[] = {

1103 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish10_comp_w
[] = {

1107 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish10_comp_b
[] = {

1111 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish10_comp_a
[] = {

1142 c⁄° 
	gfish11_•rôe8
[] = {

1163 c⁄° 
	gfish11_tûe8
[] = {

1187 #i‚de‡
PROGMEM


1188 
	#PROGMEM


	)

1192 c⁄° 
PROGMEM
 
	gfish11_bôm≠
[] = {

1200 c⁄° 
PROGMEM
 
	gfish11_mask
[] = {

1207 c⁄° 
PROGMEM
 
	gfish11_∂us_mask
[] = {

1215 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish11_comp_w
[] = {

1219 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish11_comp_b
[] = {

1222 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish11_comp_a
[] = {

1254 c⁄° 
	gfish12_•rôe8
[] = {

1274 c⁄° 
	gfish12_tûe8
[] = {

1298 #i‚de‡
PROGMEM


1299 
	#PROGMEM


	)

1303 c⁄° 
PROGMEM
 
	gfish12_bôm≠
[] = {

1311 c⁄° 
PROGMEM
 
	gfish12_mask
[] = {

1318 c⁄° 
PROGMEM
 
	gfish12_∂us_mask
[] = {

1326 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish12_comp_w
[] = {

1330 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish12_comp_b
[] = {

1333 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish12_comp_a
[] = {

1364 c⁄° 
	gfish13_•rôe8
[] = {

1387 c⁄° 
	gfish13_tûe8
[] = {

1411 #i‚de‡
PROGMEM


1412 
	#PROGMEM


	)

1416 c⁄° 
PROGMEM
 
	gfish13_bôm≠
[] = {

1424 c⁄° 
PROGMEM
 
	gfish13_mask
[] = {

1431 c⁄° 
PROGMEM
 
	gfish13_∂us_mask
[] = {

1439 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish13_comp_w
[] = {

1442 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish13_comp_b
[] = {

1445 c⁄° 
uöt8_t
 
PROGMEM
 
	gfish13_comp_a
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Aquarium256\main.cpp

2 
	~"PokôtoMi¸o.h
"

4 
	~"Pokôto.h
"

6 
	~"bôm≠s.h
"

8 
usög
 
«me•a˚
 
	gPokôtoMi¸o
;

10 
uöt32_t
 
	$noi£
–
uöt32_t
 
j§
 ){

11 
j§
 ^= jsr << 17;

12 
j§
 ^= jsr >> 13;

13 
j§
 ^= jsr << 5;

14  
j§
;

15 
	}
}

17 
	g£ed
 = 0xF00DBEEF;

19 c⁄° 
	gÊyCou¡
 = 10;

21 
	sFly
 {

22 
	mx
, 
	my
, 
	msx
, 
	msy
;

23 c⁄° 
uöt8_t
 *
	m•rôe
;

24 } 
	gÊõs
[ 
ÊyCou¡
 ];

26 
Upd©e
 
	$°©eS∂ash
–
boﬁ
 
wasInô
 ){

28  
i
=0; i<
ÊyCou¡
; ++i ){

29 autÿ&
Êy
 = 
Êõs
[
i
];

31 
Êy
.
x
 +Êy.
sx
;

32 
Êy
.
y
 +Êy.
sy
;

34 
d
 = (
Êy
.
x
 - 110Ë* (Êy.x - 110Ë+ (Êy.
y
 - 88) * (fly.y - 88);

36 if–
d
 > 800 ){

38 if–
Êy
.
x
 < 110 ) fly.
sx
+=0.1;

39 if–
Êy
.
x
 > 110 ) fly.
sx
-=0.1;

40 if–
Êy
.
y
 < 88 ) fly.
sy
+=0.1;

41 if–
Êy
.
y
 > 88 ) fly.
sy
-=0.1;

45 
Êy
.
sx
 +
	`øndom
(0, 200) / 100.0f - 1.0f;

46 
Êy
.
sy
 +
	`øndom
(0, 200) / 100.0f - 1.0f;

50 
Êy
.
sx
 *= 0.98;

51 
Êy
.
sy
 *= 0.98;

53 
	`blô
–
Êy
.
x
, fly.
y
, fly.
•rôe
, (Êy.
sx
 < 0)?
BlôOp
::
FLIP_HORIZONTAL
:BlôOp::
NORMAL
 );

57  
°©eS∂ash
;

58 
	}
}

60 
	$maö
 () {

62 
	`begö
(60);

64 
	`lﬂd8BôPÆëã
(
∑Àâe
);

66 
	`£tTûeImage
–0, 
fish1_tûe8
 );

67 
	`£tTûeImage
–1, 
fish2_tûe8
 );

68 
	`£tTûeImage
–2, 
fish3_tûe8
 );

69 
	`£tTûeImage
–3, 
fish4_tûe8
 );

70 
	`£tTûeImage
–4, 
fish5_tûe8
 );

71 
	`£tTûeImage
–5, 
fish13_tûe8
 );

73  
y
=0; y<12; ++y ){

74  
x
=0; x<15; ++x ){

75 
m≠
[
y
*15+
x
] = y < 7 ? 5 : ( y > 7 ? ( (
	`noi£
(
£ed
*(x*47+y*16))&0xFF)>200?3+(x&1):0) : ( 1+(x&1) ) );

79 
	`£tTøn•¨ítCﬁ‹
( 0 );

81 c⁄° 
uöt8_t
 *
•rôes
[] = {

82 
fish6_•rôe8
,

83 
fish7_•rôe8
,

84 
fish8_•rôe8
,

85 
fish9_•rôe8
,

86 
fish10_•rôe8
,

87 
fish11_•rôe8
,

88 
fish12_•rôe8


91  
i
=0; i<
ÊyCou¡
; ++i ){

92 
Êõs
[
i
].
x
 = 
	`øndom
(0, 220);

93 
Êõs
[
i
].
y
 = 
	`øndom
(0, 176);

94 
Êõs
[
i
].
sx
 = flõs[i].
sy
 = 0;

95 
Êõs
[
i
].
•rôe
 = 
•rôes
[i%7];

98 
	`upd©e
–
°©eS∂ash
 );

100 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Bitmap\My_settings.h

12 #i‚de‡
MY_SETTINGS_H


13 
	#MY_SETTINGS_H


	)

15 
	#PROJ_HIRES
 0

16 
	#PROJ_ENABLE_SOUND
 0

17 

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Bitmap\bitmap.cpp

3 
	~"Pokôto.h
"

4 
	~"pokôto_ic⁄.h
"

6 
	gPokôto
::
C‹e
 
mygame
;

8 
	$maö
 () {

9 
mygame
.
	`begö
();

10 
mygame
.
di•œy
.
	`lﬂd565PÆëã
(
pokôto_ic⁄_∑l
);

11 
mygame
.
di•œy
.
bgcﬁ‹
=0;

13 
mygame
.
	`isRu¬ög
()) {

15 i‡(
mygame
.
	`upd©e
()) {

16 
mygame
.
di•œy
.
	`døwBôm≠
(0,0,
pokôto_ic⁄
);

21 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Bitmap\pokitto_icon.h

1 
	~<°döt.h
>

4 c⁄° 
uöt16_t
 
	gpokôto_ic⁄_∑l
[] = {

8 c⁄° 
uöt8_t
 
	gpokôto_ic⁄
[] =

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Chip8\CHIP8Editor.cpp

1 
	~"CHIP8Edô‹.h
"

6 
	gCHIP8Edô‹
::
	$CHIP8Edô‹
(Ë{ 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Chip8\CHIP8Editor.h

1 #i‚de‡
CHIP8_EDITOR_H


2 
	#CHIP8_EDITOR_H


	)

4 
	~"pokôto.h
"

9 ˛as†
	cCHIP8Edô‹
 {

11 
	mpublic
:

13 
uöt8_t
 
x
;

14 
uöt8_t
 
	my
;

16 
CHIP8Edô‹
();

18 
	m¥iv©e
:

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Chip8\CHIP8Player.cpp

24 
	~"CHIP8Pœyî.h
"

25 
	~"PokôtoDisk.h
"

30 
	gCHIP8Pœyî
::
	$CHIP8Pœyî
(Ë{ 
	}
}

35 
CHIP8Pœyî
::
	$öô
(
Pokôto
::
C‹e
 *
pokôtoC‹e
) {

37 
pokôto
 = 
pokôtoC‹e
;

38 
uöt16_t
 
i
;

39 
›codeSour˚
[32];

42 
mem
[0]=0xF0; mem[1]=0x90; mem[2]=0x90; mem[3]=0x90; mem[4]=0xF0;

43 
mem
[5]=0x20; mem[6]=0x60; mem[7]=0x20; mem[8]=0x20; mem[9]=0x70;

44 
mem
[10]=0xF0; mem[11]=0x10; mem[12]=0xF0; mem[13]=0x80; mem[14]=0xF0;

45 
mem
[15]=0xF0; mem[16]=0x10; mem[17]=0xF0; mem[18]=0x10; mem[19]=0xF0;

46 
mem
[20]=0x90; mem[21]=0x90; mem[22]=0xF0; mem[23]=0x10; mem[24]=0x10;

47 
mem
[25]=0xF0; mem[26]=0x80; mem[27]=0xF0; mem[28]=0x10; mem[29]=0xF0;

48 
mem
[30]=0xF0; mem[31]=0x80; mem[32]=0xF0; mem[33]=0x90; mem[34]=0xF0;

49 
mem
[35]=0xF0; mem[36]=0x10; mem[37]=0x20; mem[38]=0x40; mem[39]=0x40;

50 
mem
[40]=0xF0; mem[41]=0x90; mem[42]=0xF0; mem[43]=0x90; mem[44]=0xF0;

51 
mem
[45]=0xF0; mem[46]=0x90; mem[47]=0xF0; mem[48]=0x10; mem[49]=0xF0;

52 
mem
[50]=0xF0; mem[51]=0x90; mem[52]=0xF0; mem[53]=0x90; mem[54]=0x90;

53 
mem
[55]=0xE0; mem[56]=0x90; mem[57]=0xE0; mem[58]=0x90; mem[59]=0xE0;

54 
mem
[60]=0xF0; mem[61]=0x80; mem[62]=0x80; mem[63]=0x80; mem[64]=0xF0;

55 
mem
[65]=0xE0; mem[66]=0x90; mem[67]=0x90; mem[68]=0x90; mem[69]=0xE0;

56 
mem
[70]=0xF0; mem[71]=0x80; mem[72]=0xF0; mem[73]=0x80; mem[74]=0xF0;

57 
mem
[75]=0xF0; mem[76]=0x80; mem[77]=0xF0; mem[78]=0x80; mem[79]=0x80;

60 
›codesIds
[0]=0x0FFF; 
›codesMasks
[0]= 0x0000;

61 
›codesIds
[1]=0x00E0; 
›codesMasks
[1]= 0xFFFF;

62 
›codesIds
[2]=0x00EE; 
›codesMasks
[2]= 0xFFFF;

63 
›codesIds
[3]=0x1000; 
›codesMasks
[3]= 0xF000;

64 
›codesIds
[4]=0x2000; 
›codesMasks
[4]= 0xF000;

65 
›codesIds
[5]=0x3000; 
›codesMasks
[5]= 0xF000;

66 
›codesIds
[6]=0x4000; 
›codesMasks
[6]= 0xF000;

67 
›codesIds
[7]=0x5000; 
›codesMasks
[7]= 0xF00F;

68 
›codesIds
[8]=0x6000; 
›codesMasks
[8]= 0xF000;

69 
›codesIds
[9]=0x7000; 
›codesMasks
[9]= 0xF000;

70 
›codesIds
[10]=0x8000; 
›codesMasks
[10]= 0xF00F;

71 
›codesIds
[11]=0x8001; 
›codesMasks
[11]= 0xF00F;

72 
›codesIds
[12]=0x8002; 
›codesMasks
[12]= 0xF00F;

73 
›codesIds
[13]=0x8003; 
›codesMasks
[13]= 0xF00F;

74 
›codesIds
[14]=0x8004; 
›codesMasks
[14]= 0xF00F;

75 
›codesIds
[15]=0x8005; 
›codesMasks
[15]= 0xF00F;

76 
›codesIds
[16]=0x8006; 
›codesMasks
[16]= 0xF00F;

77 
›codesIds
[17]=0x8007; 
›codesMasks
[17]= 0xF00F;

78 
›codesIds
[18]=0x800E; 
›codesMasks
[18]= 0xF00F;

79 
›codesIds
[19]=0x9000; 
›codesMasks
[19]= 0xF00F;

80 
›codesIds
[20]=0xA000; 
›codesMasks
[20]= 0xF000;

81 
›codesIds
[21]=0xB000; 
›codesMasks
[21]= 0xF000;

82 
›codesIds
[22]=0xC000; 
›codesMasks
[22]= 0xF000;

83 
›codesIds
[23]=0xD000; 
›codesMasks
[23]= 0xF000;

84 
›codesIds
[24]=0xE09E; 
›codesMasks
[24]= 0xF0FF;

85 
›codesIds
[25]=0xE0A1; 
›codesMasks
[25]= 0xF0FF;

86 
›codesIds
[26]=0xF007; 
›codesMasks
[26]= 0xF0FF;

87 
›codesIds
[27]=0xF00A; 
›codesMasks
[27]= 0xF0FF;

88 
›codesIds
[28]=0xF015; 
›codesMasks
[28]= 0xF0FF;

89 
›codesIds
[29]=0xF018; 
›codesMasks
[29]= 0xF0FF;

90 
›codesIds
[30]=0xF01E; 
›codesMasks
[30]= 0xF0FF;

91 
›codesIds
[31]=0xF029; 
›codesMasks
[31]= 0xF0FF;

92 
›codesIds
[32]=0xF033; 
›codesMasks
[32]= 0xF0FF;

93 
›codesIds
[33]=0xF055; 
›codesMasks
[33]= 0xF0FF;

94 
›codesIds
[34]=0xF065; 
›codesMasks
[34]= 0xF0FF;

97 
	`öôEdô‹
();

100 
	`öôPœyî
();

103 
s¸ìnWidth
 = 
CHIP8_SCREEN_WIDTH
;

104 
s¸ìnHeight
 = 
CHIP8_SCREEN_HEIGHT
;

106 
›codeIndex
 = 0;

107 
•ìd
 = 16;

108 
s¸ìnIsInEdôMode
 = 
Ál£
;

109 
°©e
 = 
STATE_MAIN_MENU
;

112 
maöMíu
.
	`öô
(
pokôto
, 
MAIN_MENU_X
, 
MAIN_MENU_Y
, 
MAIN_MENU_WIDTH
, 
MAIN_MENU_HEIGHT
, 8, 1);

113 
maöMíu
.
	`addIãm
("PLAY !");

114 
maöMíu
.
	`addIãm
("EDITOR");

115 
maöMíu
.
	`addIãm
("SETTINGS");

116 
maöMíu
.
	`addIãm
("CREDITS");

117 
maöMíu
.
	`addIãm
("NEW");

118 
maöMíu
.
	`addIãm
("LOAD");

119 
maöMíu
.
	`addIãm
("SAVE");

120 
maöMíu
.
	`addIãm
("LOAD DEMO");

121 
maöMíu
.
£À˘edIãm
 = 1;

124 
edô‹Võw
.
	`öô
(
pokôto
, 
EDITOR_X
, 
EDITOR_Y
, 
EDITOR_WIDTH
, 
EDITOR_HEIGHT
, EDITOR_HEIGHT, 
LB_HIDE_BORDER
);

127 
c⁄ãxtMíu
.
	`öô
(
pokôto
, 
CONTEXT_MENU_X
, 
CONTEXT_MENU_Y
, 
CONTEXT_MENU_WIDTH
, 
CONTEXT_MENU_HEIGHT
, 6, 0);

128 
c⁄ãxtMíu
.
	`addIãm
("ADD...");

129 
c⁄ãxtMíu
.
	`addIãm
("DELETE");

130 
c⁄ãxtMíu
.
	`addIãm
("MOVE UP");

131 
c⁄ãxtMíu
.
	`addIãm
("MOVE DOWN");

132 
c⁄ãxtMíu
.
	`addIãm
("EDIT AS SPRITE");

133 
c⁄ãxtMíu
.
	`addIãm
("EDIT AS DATA");

136 
addMíu
.
	`öô
(
pokôto
, 
MENU_X
, 
MENU_Y
, 
MENU_WIDTH
, 
MENU_HEIGHT
, 17, 0);

137 
addMíu
.
	`addIãm
("VX = ...");

138 
addMíu
.
	`addIãm
("I = ...");

139 
addMíu
.
	`addIãm
("SPRITE VX VY N");

140 
addMíu
.
	`addIãm
("IF VX ...");

141 
addMíu
.
	`addIãm
("GOTO N");

142 
addMíu
.
	`addIãm
("CALL N");

143 
addMíu
.
	`addIãm
("IF KEY VX");

144 
addMíu
.
	`addIãm
("IF NOT KEY VX");

145 
addMíu
.
	`addIãm
("RETURN");

146 
addMíu
.
	`addIãm
("TIMER = VX");

147 
addMíu
.
	`addIãm
("DATA");

148 
addMíu
.
	`addIãm
("SAVEDEC VX");

149 
addMíu
.
	`addIãm
("SOUNDTIMER = VX");

150 
addMíu
.
	`addIãm
("SAVE V0 TO VX");

151 
addMíu
.
	`addIãm
("LOAD V0 TO VX");

152 
addMíu
.
	`addIãm
("GOTO N + V0");

153 
addMíu
.
	`addIãm
("CLS");

156 
vxEquÆsMíu
.
	`öô
(
pokôto
, 
MENU_X
, 
MENU_Y
, 
MENU_WIDTH
, 
MENU_HEIGHT
, 14, 0);

157 
vxEquÆsMíu
.
	`addIãm
("VX = N");

158 
vxEquÆsMíu
.
	`addIãm
("VX = VY");

159 
vxEquÆsMíu
.
	`addIãm
("VX = VX + N");

160 
vxEquÆsMíu
.
	`addIãm
("VX = VX + VY");

161 
vxEquÆsMíu
.
	`addIãm
("VX = VX - VY");

162 
vxEquÆsMíu
.
	`addIãm
("VX = VY - VX");

163 
vxEquÆsMíu
.
	`addIãm
("VX = VX AND VY");

164 
vxEquÆsMíu
.
	`addIãm
("VX = VX OR VY");

165 
vxEquÆsMíu
.
	`addIãm
("VX = VX XOR VY");

166 
vxEquÆsMíu
.
	`addIãm
("VX = VX << 1");

167 
vxEquÆsMíu
.
	`addIãm
("VX = VX >> 1");

168 
vxEquÆsMíu
.
	`addIãm
("VX = RANDOM 0 TO N");

169 
vxEquÆsMíu
.
	`addIãm
("VX = TIMER");

170 
vxEquÆsMíu
.
	`addIãm
("VX = READ KEY");

173 
vxEquÆsNMíu
.
	`öô
(
pokôto
, 4);

174 
vxEquÆsNMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_2
, 0, 0, 15);

175 
vxEquÆsNMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_2_2
, 0, 0, 255);

176 
vxEquÆsNMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

177 
vxEquÆsNMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

180 
vxEquÆsVyMíu
.
	`öô
(
pokôto
, 4);

181 
vxEquÆsVyMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_2
, 0, 0, 15);

182 
vxEquÆsVyMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_2_2
, 0, 0, 15);

183 
vxEquÆsVyMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

184 
vxEquÆsVyMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

187 
vxPlusNMíu
.
	`öô
(
pokôto
, 4);

188 
vxPlusNMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_2
, 0, 0, 15);

189 
vxPlusNMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_2_2
, 0, 0, 255);

190 
vxPlusNMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

191 
vxPlusNMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

194 
vxPlusVyMíu
.
	`öô
(
pokôto
, 4);

195 
vxPlusVyMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_2
, 0, 0, 15);

196 
vxPlusVyMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_2_2
, 0, 0, 15);

197 
vxPlusVyMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

198 
vxPlusVyMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

201 
vxMöusVyMíu
.
	`öô
(
pokôto
, 4);

202 
vxMöusVyMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_2
, 0, 0, 15);

203 
vxMöusVyMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_2_2
, 0, 0, 15);

204 
vxMöusVyMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

205 
vxMöusVyMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

208 
vyMöusVxMíu
.
	`öô
(
pokôto
, 4);

209 
vyMöusVxMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_2
, 0, 0, 15);

210 
vyMöusVxMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_2_2
, 0, 0, 15);

211 
vyMöusVxMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

212 
vyMöusVxMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

215 
vxAndVyMíu
.
	`öô
(
pokôto
, 4);

216 
vxAndVyMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_2
, 0, 0, 15);

217 
vxAndVyMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_2_2
, 0, 0, 15);

218 
vxAndVyMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

219 
vxAndVyMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

222 
vxOrVyMíu
.
	`öô
(
pokôto
, 4);

223 
vxOrVyMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_2
, 0, 0, 15);

224 
vxOrVyMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_2_2
, 0, 0, 15);

225 
vxOrVyMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

226 
vxOrVyMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

229 
vxX‹VyMíu
.
	`öô
(
pokôto
, 4);

230 
vxX‹VyMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_2
, 0, 0, 15);

231 
vxX‹VyMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_2_2
, 0, 0, 15);

232 
vxX‹VyMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

233 
vxX‹VyMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

236 
vxLe·Shi·Míu
.
	`öô
(
pokôto
, 3);

237 
vxLe·Shi·Míu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_1
, 0, 0, 15);

238 
vxLe·Shi·Míu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

239 
vxLe·Shi·Míu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

242 
vxRightShi·Míu
.
	`öô
(
pokôto
, 3);

243 
vxRightShi·Míu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_1
, 0, 0, 15);

244 
vxRightShi·Míu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

245 
vxRightShi·Míu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

248 
vxR™domMíu
.
	`öô
(
pokôto
, 4);

249 
vxR™domMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_2
, 0, 0, 15);

250 
vxR™domMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_2_2
, 0, 0, 255);

251 
vxR™domMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

252 
vxR™domMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

255 
vxTimîMíu
.
	`öô
(
pokôto
, 3);

256 
vxTimîMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_1
, 0, 0, 15);

257 
vxTimîMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

258 
vxTimîMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

261 
vxRódKeyMíu
.
	`öô
(
pokôto
, 3);

262 
vxRódKeyMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_1
, 0, 0, 15);

263 
vxRódKeyMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

264 
vxRódKeyMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

267 
iEquÆsMíu
.
	`öô
(
pokôto
, 
MENU_X
, 
MENU_Y
, 
MENU_WIDTH
, 
MENU_HEIGHT
, 3, 0);

268 
iEquÆsMíu
.
	`addIãm
("I = N");

269 
iEquÆsMíu
.
	`addIãm
("I = CHAR VX");

270 
iEquÆsMíu
.
	`addIãm
("I = I + VX");

273 
iEquÆsNMíu
.
	`öô
(
pokôto
, 3);

274 
iEquÆsNMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_1
, 0, 0, 4094);

275 
iEquÆsNMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

276 
iEquÆsNMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

279 
iEquÆsCh¨VXMíu
.
	`öô
(
pokôto
, 3);

280 
iEquÆsCh¨VXMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_1
, 0, 0, 15);

281 
iEquÆsCh¨VXMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

282 
iEquÆsCh¨VXMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

285 
iPlusVxMíu
.
	`öô
(
pokôto
, 3);

286 
iPlusVxMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_1
, 0, 0, 15);

287 
iPlusVxMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

288 
iPlusVxMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

291 
•rôeMíu
.
	`öô
(
pokôto
, 5);

292 
•rôeMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_3
, 0, 0, 15);

293 
•rôeMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_2_3
, 0, 0, 15);

294 
•rôeMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_3_3
, 0, 0, 15);

295 
•rôeMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

296 
•rôeMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

299 
ifVxMíu
.
	`öô
(
pokôto
, 
MENU_X
, 
MENU_Y
, 
MENU_WIDTH
, 
MENU_HEIGHT
, 4, 0);

300 
ifVxMíu
.
	`addIãm
("IF VX == N");

301 
ifVxMíu
.
	`addIãm
("IF VX == VY");

302 
ifVxMíu
.
	`addIãm
("IF VX != N");

303 
ifVxMíu
.
	`addIãm
("IF VX != VY");

306 
ifVxEquÆsNMíu
.
	`öô
(
pokôto
, 4);

307 
ifVxEquÆsNMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_2
, 0, 0, 15);

308 
ifVxEquÆsNMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_2_2
, 0, 0, 255);

309 
ifVxEquÆsNMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

310 
ifVxEquÆsNMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

313 
ifVxEquÆsVyMíu
.
	`öô
(
pokôto
, 4);

314 
ifVxEquÆsVyMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_2
, 0, 0, 15);

315 
ifVxEquÆsVyMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_2_2
, 0, 0, 15);

316 
ifVxEquÆsVyMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

317 
ifVxEquÆsVyMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

320 
ifVxNŸEquÆsNMíu
.
	`öô
(
pokôto
, 4);

321 
ifVxNŸEquÆsNMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_2
, 0, 0, 15);

322 
ifVxNŸEquÆsNMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_2_2
, 0, 0, 255);

323 
ifVxNŸEquÆsNMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

324 
ifVxNŸEquÆsNMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

327 
ifVxNŸEquÆsVyMíu
.
	`öô
(
pokôto
, 4);

328 
ifVxNŸEquÆsVyMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_2
, 0, 0, 15);

329 
ifVxNŸEquÆsVyMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_2_2
, 0, 0, 15);

330 
ifVxNŸEquÆsVyMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

331 
ifVxNŸEquÆsVyMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

334 
gŸoNMíu
.
	`öô
(
pokôto
, 3);

335 
gŸoNMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_1
, 512, 512, 4094);

336 
gŸoNMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

337 
gŸoNMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

340 
ˇŒNMíu
.
	`öô
(
pokôto
, 3);

341 
ˇŒNMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_1
, 512, 512, 4094);

342 
ˇŒNMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

343 
ˇŒNMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

346 
ifKeyVxMíu
.
	`öô
(
pokôto
, 3);

347 
ifKeyVxMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_1
, 0, 0, 15);

348 
ifKeyVxMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

349 
ifKeyVxMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

352 
ifNŸKeyVxMíu
.
	`öô
(
pokôto
, 3);

353 
ifNŸKeyVxMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_1
, 0, 0, 15);

354 
ifNŸKeyVxMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

355 
ifNŸKeyVxMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

358 
timîMíu
.
	`öô
(
pokôto
, 3);

359 
timîMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_1
, 0, 0, 15);

360 
timîMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

361 
timîMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

364 
d©aMíu
.
	`öô
(
pokôto
, 4);

365 
d©aMíu
.
	`addIãm
(50, 
PARAM_Y_1_2
, 0, 0, 255);

366 
d©aMíu
.
	`addIãm
(50, 
PARAM_Y_2_2
, 0, 0, 255);

367 
d©aMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

368 
d©aMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

371 
ßveDecVxMíu
.
	`öô
(
pokôto
, 3);

372 
ßveDecVxMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_1
, 0, 0, 15);

373 
ßveDecVxMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

374 
ßveDecVxMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

377 
soundTimîMíu
.
	`öô
(
pokôto
, 3);

378 
soundTimîMíu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_1
, 0, 0, 15);

379 
soundTimîMíu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

380 
soundTimîMíu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

383 
ßveV0ToVx
.
	`öô
(
pokôto
, 3);

384 
ßveV0ToVx
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_1
, 0, 0, 15);

385 
ßveV0ToVx
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

386 
ßveV0ToVx
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

389 
lﬂdV0ToVx
.
	`öô
(
pokôto
, 3);

390 
lﬂdV0ToVx
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_1
, 0, 0, 15);

391 
lﬂdV0ToVx
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

392 
lﬂdV0ToVx
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

395 
gŸoNPlusV0Míu
.
	`öô
(
pokôto
, 3);

396 
gŸoNPlusV0Míu
.
	`addIãm
(
VALUE_X
, 
PARAM_Y_1_1
, 512, 512, 4094);

397 
gŸoNPlusV0Míu
.
	`addIãm
(
CANCEL_BUTTON_X
, 
CANCEL_BUTTON_Y
, "CANCEL");

398 
gŸoNPlusV0Míu
.
	`addIãm
(
OK_BUTTON_X
, 
OK_BUTTON_Y
, "OK");

419 
	}
}

424 
	gCHIP8Pœyî
::
	$öôEdô‹
() {

426 
uöt16_t
 
i
;

427 
uöt8_t
 
edô‹IãmsCou¡
;

430 
i
=
ROM_START
; i<
MEM_SIZE
; i++) {

432 
mem
[
i
] = 0;

434 
romSize
 = 0;

437 
edô‹IãmsCou¡
 = 
edô‹Võw
.
ôemsCou¡
;

438 
i
=0; i<
edô‹IãmsCou¡
; i++) {

440 
edô‹Võw
.
	`ªmoveIãm
(0);

442 
fú°In°ru˘i⁄ToShow
 = 
ROM_START
;

443 
	}
}

448 
	gCHIP8Pœyî
::
	$öôPœyî
() {

450 
uöt8_t
 
i
;

452 
PC
 = 
ROM_START
;

453 
I
 = 0;

456 
i
=0; i<16; i++) {

458 
V
[
i
] = 0;

459 
°ack
[
i
] = 0;

460 
keys
[
i
] = 0;

462 
°ackLígth
 = 0;

463 
keyPªs£d
 = 
Ál£
;

466 
dñayTimî
 = 0;

467 
soundTimî
 = 0;

469 
	`˛órS¸ìn
();

470 
	}
}

475 
	gCHIP8Pœyî
::
	$upd©e
() {

477 
uöt16_t
 
i
;

478 
uöt16_t
 
›code
 = 0;

479 
uöt8_t
 
›codeIndex
 = 0;

480 
uöt8_t
 
›codeP¨t3
 = 0;

481 
uöt8_t
 
›codeP¨t2
 = 0;

482 
uöt8_t
 
›codeP¨t1
 = 0;

483 
uöt16_t
 
memAddªss
 = 0;

484 
uöt16_t
 
ãmp
;

486 
°©e
) {

489 
STATE_GAME
:

492 i‡(
pokôto
->
buâ⁄s
.
	`ªÀa£d
(
BTN_C
)) {

495 
°©e
 = 
STATE_MAIN_MENU
;

498 
	`ªadKeys
();

500 
i
=0; i<
•ìd
; i++) {

502 
	`ªadOpcode
();

505 
	`døwS¸ìn
();

507 i‡(
dñayTimî
 > 0) delayTimer--;

508 i‡(
soundTimî
 > 0) soundTimer--;

510 
pokôto
->
di•œy
.
	`¥öt
(0, 40, "Opcode: ");

511 
pokôto
->
di•œy
.
	`¥öt
(45, 40, 
PC
);

516 
STATE_EDITOR
:

519 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
Ë&& 
edô‹Võw
.
ôemsCou¡
) {

521 
memAddªss
 = 
fú°In°ru˘i⁄ToShow
 + (
edô‹Võw
.
£À˘edIãm
 << 
MULTIPLY_BY_2
);

523 
›code
 = (
mem
[
memAddªss
] << 8) + mem[memAddress + 1];

525 
›codeIndex
 = 
	`gëOpcodeIndex
(
›code
);

527 
›codeP¨t3
 = (
›code
 & 0x0F00) >> 8;

528 
›codeP¨t2
 = (
›code
 & 0x00F0) >> 4;

529 
›codeP¨t1
 = 
›code
 & 0x000F;

531 
›codeIndex
) {

536 
d©aMíu
.
	`£tVÆue
(0, 
›code
 >> 8);

537 
d©aMíu
.
	`£tVÆue
(1, 
›code
 & 255);

538 
d©aMíu
.
£À˘edIãm
 = 0;

539 
s¸ìnIsInEdôMode
 = 
åue
;

540 
°©e
 = 
STATE_DATA_MENU
;

556 
gŸoNMíu
.
	`£tVÆue
(0, (
›codeP¨t3
 << 8Ë+ (
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
);

557 
gŸoNMíu
.
£À˘edIãm
 = 0;

558 
s¸ìnIsInEdôMode
 = 
åue
;

559 
°©e
 = 
STATE_GOTO_N_MENU
;

565 
ˇŒNMíu
.
	`£tVÆue
(0, (
›codeP¨t3
 << 8Ë+ (
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
);

566 
ˇŒNMíu
.
£À˘edIãm
 = 0;

567 
s¸ìnIsInEdôMode
 = 
åue
;

568 
°©e
 = 
STATE_CALL_N_MENU
;

574 
ifVxNŸEquÆsNMíu
.
	`£tVÆue
(0, 
›codeP¨t3
);

575 
ifVxNŸEquÆsNMíu
.
	`£tVÆue
(1, (
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
);

576 
ifVxNŸEquÆsNMíu
.
£À˘edIãm
 = 0;

577 
s¸ìnIsInEdôMode
 = 
åue
;

578 
°©e
 = 
STATE_IF_VX_NOT_EQUALS_N_MENU
;

584 
ifVxEquÆsNMíu
.
	`£tVÆue
(0, 
›codeP¨t3
);

585 
ifVxEquÆsNMíu
.
	`£tVÆue
(1, (
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
);

586 
ifVxEquÆsNMíu
.
£À˘edIãm
 = 0;

587 
s¸ìnIsInEdôMode
 = 
åue
;

588 
°©e
 = 
STATE_IF_VX_EQUALS_N_MENU
;

594 
ifVxNŸEquÆsVyMíu
.
	`£tVÆue
(0, 
›codeP¨t3
);

595 
ifVxNŸEquÆsVyMíu
.
	`£tVÆue
(1, 
›codeP¨t2
);

596 
ifVxNŸEquÆsVyMíu
.
£À˘edIãm
 = 0;

597 
s¸ìnIsInEdôMode
 = 
åue
;

598 
°©e
 = 
STATE_IF_VX_NOT_EQUALS_VY_MENU
;

604 
vxEquÆsNMíu
.
	`£tVÆue
(0, 
›codeP¨t3
);

605 
vxEquÆsNMíu
.
	`£tVÆue
(1, ((
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
));

606 
vxEquÆsNMíu
.
£À˘edIãm
 = 0;

607 
s¸ìnIsInEdôMode
 = 
åue
;

608 
°©e
 = 
STATE_VX_EQUALS_N_MENU
;

614 
vxPlusNMíu
.
	`£tVÆue
(0, 
›codeP¨t3
);

615 
vxPlusNMíu
.
	`£tVÆue
(1, ((
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
));

616 
vxPlusNMíu
.
£À˘edIãm
 = 0;

617 
s¸ìnIsInEdôMode
 = 
åue
;

618 
°©e
 = 
STATE_VX_PLUS_N_MENU
;

624 
vxEquÆsVyMíu
.
	`£tVÆue
(0, 
›codeP¨t3
);

625 
vxEquÆsVyMíu
.
	`£tVÆue
(1, 
›codeP¨t2
);

626 
vxEquÆsVyMíu
.
£À˘edIãm
 = 0;

627 
s¸ìnIsInEdôMode
 = 
åue
;

628 
°©e
 = 
STATE_VX_EQUALS_VY_MENU
;

635 
vxOrVyMíu
.
	`£tVÆue
(0, 
›codeP¨t3
);

636 
vxOrVyMíu
.
	`£tVÆue
(1, 
›codeP¨t2
);

637 
vxOrVyMíu
.
£À˘edIãm
 = 0;

638 
s¸ìnIsInEdôMode
 = 
åue
;

639 
°©e
 = 
STATE_VX_OR_VY_MENU
;

645 
vxAndVyMíu
.
	`£tVÆue
(0, 
›codeP¨t3
);

646 
vxAndVyMíu
.
	`£tVÆue
(1, 
›codeP¨t2
);

647 
vxAndVyMíu
.
£À˘edIãm
 = 0;

648 
s¸ìnIsInEdôMode
 = 
åue
;

649 
°©e
 = 
STATE_VX_AND_VY_MENU
;

655 
vxX‹VyMíu
.
	`£tVÆue
(0, 
›codeP¨t3
);

656 
vxX‹VyMíu
.
	`£tVÆue
(1, 
›codeP¨t2
);

657 
vxX‹VyMíu
.
£À˘edIãm
 = 0;

658 
s¸ìnIsInEdôMode
 = 
åue
;

659 
°©e
 = 
STATE_VX_XOR_VY_MENU
;

665 
vxPlusVyMíu
.
	`£tVÆue
(0, 
›codeP¨t3
);

666 
vxPlusVyMíu
.
	`£tVÆue
(1, 
›codeP¨t2
);

667 
vxPlusVyMíu
.
£À˘edIãm
 = 0;

668 
s¸ìnIsInEdôMode
 = 
åue
;

669 
°©e
 = 
STATE_VX_PLUS_VY_MENU
;

675 
vxMöusVyMíu
.
	`£tVÆue
(0, 
›codeP¨t3
);

676 
vxMöusVyMíu
.
	`£tVÆue
(1, 
›codeP¨t2
);

677 
vxMöusVyMíu
.
£À˘edIãm
 = 0;

678 
s¸ìnIsInEdôMode
 = 
åue
;

679 
°©e
 = 
STATE_VX_MINUS_VY_MENU
;

685 
vxRightShi·Míu
.
	`£tVÆue
(0, 
›codeP¨t3
);

686 
vxRightShi·Míu
.
£À˘edIãm
 = 0;

687 
s¸ìnIsInEdôMode
 = 
åue
;

688 
°©e
 = 
STATE_VX_RIGHTSHIFT_MENU
;

694 
vyMöusVxMíu
.
	`£tVÆue
(0, 
›codeP¨t3
);

695 
vyMöusVxMíu
.
	`£tVÆue
(1, 
›codeP¨t2
);

696 
vyMöusVxMíu
.
£À˘edIãm
 = 0;

697 
s¸ìnIsInEdôMode
 = 
åue
;

698 
°©e
 = 
STATE_VY_MINUS_VX_MENU
;

704 
vxLe·Shi·Míu
.
	`£tVÆue
(0, 
›codeP¨t3
);

705 
vxLe·Shi·Míu
.
£À˘edIãm
 = 0;

706 
s¸ìnIsInEdôMode
 = 
åue
;

707 
°©e
 = 
STATE_VX_LEFTSHIFT_MENU
;

713 
ifVxEquÆsVyMíu
.
	`£tVÆue
(0, 
›codeP¨t3
);

714 
ifVxEquÆsVyMíu
.
	`£tVÆue
(1, 
›codeP¨t2
);

715 
ifVxEquÆsVyMíu
.
£À˘edIãm
 = 0;

716 
s¸ìnIsInEdôMode
 = 
åue
;

717 
°©e
 = 
STATE_IF_VX_EQUALS_VY_MENU
;

723 
iEquÆsNMíu
.
	`£tVÆue
(0, ((
›codeP¨t3
 << 8Ë+ (
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
));

724 
iEquÆsNMíu
.
£À˘edIãm
 = 0;

725 
s¸ìnIsInEdôMode
 = 
åue
;

726 
°©e
 = 
STATE_I_EQUALS_N_MENU
;

732 
gŸoNPlusV0Míu
.
	`£tVÆue
(0, ((
›codeP¨t3
 << 8Ë+ (
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
));

733 
gŸoNPlusV0Míu
.
£À˘edIãm
 = 0;

734 
s¸ìnIsInEdôMode
 = 
åue
;

735 
°©e
 = 
STATE_GOTO_N_PLUS_V0_MENU
;

741 
vxR™domMíu
.
	`£tVÆue
(0, 
›codeP¨t3
);

742 
vxR™domMíu
.
	`£tVÆue
(1, (
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
);

743 
vxR™domMíu
.
£À˘edIãm
 = 0;

744 
s¸ìnIsInEdôMode
 = 
åue
;

745 
°©e
 = 
STATE_VX_RANDOM_MENU
;

751 
•rôeMíu
.
	`£tVÆue
(0, 
›codeP¨t3
);

752 
•rôeMíu
.
	`£tVÆue
(1, 
›codeP¨t2
);

753 
•rôeMíu
.
	`£tVÆue
(2, 
›codeP¨t1
);

754 
•rôeMíu
.
£À˘edIãm
 = 0;

755 
s¸ìnIsInEdôMode
 = 
åue
;

756 
°©e
 = 
STATE_SPRITE_MENU
;

762 
ifNŸKeyVxMíu
.
	`£tVÆue
(0, 
›codeP¨t3
);

763 
ifNŸKeyVxMíu
.
£À˘edIãm
 = 0;

764 
s¸ìnIsInEdôMode
 = 
åue
;

765 
°©e
 = 
STATE_IF_NOT_KEY_VX_MENU
;

773 
ifKeyVxMíu
.
	`£tVÆue
(0, 
›codeP¨t3
);

774 
ifKeyVxMíu
.
£À˘edIãm
 = 0;

775 
s¸ìnIsInEdôMode
 = 
åue
;

776 
°©e
 = 
STATE_IF_KEY_VX_MENU
;

782 
vxTimîMíu
.
	`£tVÆue
(0, 
›codeP¨t3
);

783 
vxTimîMíu
.
£À˘edIãm
 = 0;

784 
s¸ìnIsInEdôMode
 = 
åue
;

785 
°©e
 = 
STATE_VX_TIMER_MENU
;

791 
vxRódKeyMíu
.
	`£tVÆue
(0, 
›codeP¨t3
);

792 
vxRódKeyMíu
.
£À˘edIãm
 = 0;

793 
s¸ìnIsInEdôMode
 = 
åue
;

794 
°©e
 = 
STATE_VX_READKEY_MENU
;

800 
timîMíu
.
	`£tVÆue
(0, 
›codeP¨t3
);

801 
timîMíu
.
£À˘edIãm
 = 0;

802 
s¸ìnIsInEdôMode
 = 
åue
;

803 
°©e
 = 
STATE_TIMER_MENU
;

809 
soundTimîMíu
.
	`£tVÆue
(0, 
›codeP¨t3
);

810 
soundTimîMíu
.
£À˘edIãm
 = 0;

811 
s¸ìnIsInEdôMode
 = 
åue
;

812 
°©e
 = 
STATE_SOUNDTIMER_MENU
;

818 
iPlusVxMíu
.
	`£tVÆue
(0, 
›codeP¨t3
);

819 
iPlusVxMíu
.
£À˘edIãm
 = 0;

820 
s¸ìnIsInEdôMode
 = 
åue
;

821 
°©e
 = 
STATE_I_PLUS_VX_MENU
;

827 
iEquÆsCh¨VXMíu
.
	`£tVÆue
(0, 
›codeP¨t3
);

828 
iEquÆsCh¨VXMíu
.
£À˘edIãm
 = 0;

829 
s¸ìnIsInEdôMode
 = 
åue
;

830 
°©e
 = 
STATE_I_EQUALS_CHAR_VX_MENU
;

836 
ßveDecVxMíu
.
	`£tVÆue
(0, 
›codeP¨t3
);

837 
ßveDecVxMíu
.
£À˘edIãm
 = 0;

838 
s¸ìnIsInEdôMode
 = 
åue
;

839 
°©e
 = 
STATE_SAVEDEC_VX_MENU
;

845 
ßveV0ToVx
.
	`£tVÆue
(0, 
›codeP¨t3
);

846 
ßveV0ToVx
.
£À˘edIãm
 = 0;

847 
s¸ìnIsInEdôMode
 = 
åue
;

848 
°©e
 = 
STATE_SAVE_V0_TO_VX_MENU
;

854 
lﬂdV0ToVx
.
	`£tVÆue
(0, 
›codeP¨t3
);

855 
lﬂdV0ToVx
.
£À˘edIãm
 = 0;

856 
s¸ìnIsInEdôMode
 = 
åue
;

857 
°©e
 = 
STATE_LOAD_V0_TO_VX_MENU
;

863 
d©aMíu
.
	`£tVÆue
(0, 
›code
 >> 8);

864 
d©aMíu
.
	`£tVÆue
(1, 
›code
 & 255);

865 
d©aMíu
.
£À˘edIãm
 = 0;

866 
s¸ìnIsInEdôMode
 = 
åue
;

867 
°©e
 = 
STATE_DATA_MENU
;

872 i‡(
pokôto
->
buâ⁄s
.
	`ªÀa£d
(
BTN_B
)) {

875 i‡(
edô‹Võw
.
ôemsCou¡
) {

878 
c⁄ãxtMíu
.
£À˘edIãm
 = 0;

879 
°©e
 = 
STATE_CONTEXT_MENU
;

886 
°©e
 = 
STATE_ADD_MENU
;

891 i‡(
pokôto
->
buâ⁄s
.
	`ªÀa£d
(
BTN_C
)) {

894 
°©e
 = 
STATE_MAIN_MENU
;

897 i‡(
pokôto
->
buâ⁄s
.
	`ª≥©
(
BTN_UP
, 4)) {

900 i‡(
edô‹Võw
.
£À˘edIãm
 =
FIRST_EDITOR_LINE
 && 
fú°In°ru˘i⁄ToShow
 > 
ROM_START
) {

903 
fú°In°ru˘i⁄ToShow
 -= 2;

904 
	`upd©eEdô‹Võw
();

908 i‡(
pokôto
->
buâ⁄s
.
	`ª≥©
(
BTN_DOWN
, 4)) {

911 i‡(
edô‹Võw
.
£À˘edIãm
 =
LAST_EDITOR_LINE
 && ((
fú°In°ru˘i⁄ToShow
 + 16Ë< (
ROM_START
 + 
romSize
 - 2))) {

914 
fú°In°ru˘i⁄ToShow
 += 2;

915 
	`upd©eEdô‹Võw
();

919 
edô‹Võw
.
	`upd©e
();

920 
edô‹Võw
.
	`show
();

923 i‡(
edô‹Võw
.
ôemsCou¡
 == 0) {

926 
pokôto
->
di•œy
.
cﬁ‹
 = 1;

927 
pokôto
->
di•œy
.
	`¥öt
(15, 10, "WelcomeÅoÅhe");

928 
pokôto
->
di•œy
.
	`¥öt
(22, 20, "TINY CHIP-8");

929 
pokôto
->
di•œy
.
	`¥öt
(37, 30, "editor");

930 
pokôto
->
di•œy
.
	`¥öt
(7, 60, "Press BÅoáddán");

931 
pokôto
->
di•œy
.
	`¥öt
(12, 70, "instruction...");

937 
STATE_MAIN_MENU
:

940 
maöMíu
.
	`upd©e
();

943 i‡(
pokôto
->
buâ⁄s
.
	`ªÀa£d
(
BTN_A
)) {

946 i‡(
maöMíu
.
£À˘edIãm
 == 0) {

949 
	`öôPœyî
();

950 
°©e
 = 
STATE_GAME
;

954 i‡(
maöMíu
.
£À˘edIãm
 == 1) {

957 
°©e
 = 
STATE_EDITOR
;

961 i‡(
maöMíu
.
£À˘edIãm
 == 4) {

964 
	`öôEdô‹
();

967 
°©e
 = 
STATE_EDITOR
;

971 i‡(
maöMíu
.
£À˘edIãm
 == 5) {

974 
	`lﬂdU£rRom
();

977 
°©e
 = 
STATE_EDITOR
;

981 i‡(
maöMíu
.
£À˘edIãm
 == 6) {

983 
	`ßveU£rRom
();

987 i‡(
maöMíu
.
£À˘edIãm
 == 7) {

990 
	`lﬂdRom
("chip8rom/BREAKOUT.ch8");

993 
°©e
 = 
STATE_EDITOR
;

998 
pokôto
->
di•œy
.
	`døwRe˘
(
MAIN_MENU_FRAME_X
, 
MAIN_MENU_FRAME_Y
, 
MAIN_MENU_FRAME_WIDTH
, 
MAIN_MENU_FRAME_HEIGHT
);

999 
pokôto
->
di•œy
.
	`¥öt
(
MAIN_MENU_TITLE_X
, 
MAIN_MENU_TITLE_Y
, "TINY CHIP-8");

1000 
maöMíu
.
	`show
();

1005 
STATE_CONTEXT_MENU
:

1008 
c⁄ãxtMíu
.
	`upd©e
();

1011 i‡(
pokôto
->
buâ⁄s
.
	`ªÀa£d
(
BTN_A
)) {

1014 i‡(
c⁄ãxtMíu
.
£À˘edIãm
 == 0) {

1017 
°©e
 = 
STATE_ADD_MENU
;

1021 i‡(
c⁄ãxtMíu
.
£À˘edIãm
 == 1) {

1024 
	`dñëeOpcode
();

1027 
°©e
 = 
STATE_EDITOR
;

1031 i‡(
c⁄ãxtMíu
.
£À˘edIãm
 == 2) {

1034 
	`moveOpcodeUp
();

1037 
°©e
 = 
STATE_EDITOR
;

1041 i‡(
c⁄ãxtMíu
.
£À˘edIãm
 == 3) {

1044 
	`moveOpcodeDown
();

1047 
°©e
 = 
STATE_EDITOR
;

1051 i‡(
c⁄ãxtMíu
.
£À˘edIãm
 == 4) {

1056 i‡(
c⁄ãxtMíu
.
£À˘edIãm
 == 5) {

1058 
memAddªss
 = 
fú°In°ru˘i⁄ToShow
 + (
edô‹Võw
.
£À˘edIãm
 << 
MULTIPLY_BY_2
);

1059 
›code
 = (
mem
[
memAddªss
] << 8) + mem[memAddress + 1];

1062 
d©aMíu
.
	`£tVÆue
(0, 
›code
 >> 8);

1063 
d©aMíu
.
	`£tVÆue
(1, 
›code
 & 255);

1064 
d©aMíu
.
£À˘edIãm
 = 0;

1065 
s¸ìnIsInEdôMode
 = 
åue
;

1066 
°©e
 = 
STATE_DATA_MENU
;

1071 i‡(
pokôto
->
buâ⁄s
.
	`ªÀa£d
(
BTN_B
)) {

1074 
°©e
 = 
STATE_EDITOR
;

1078 
edô‹Võw
.
	`show
();

1079 
c⁄ãxtMíu
.
	`show
();

1084 
STATE_ADD_MENU
:

1087 
addMíu
.
	`upd©e
();

1090 i‡(
pokôto
->
buâ⁄s
.
	`ªÀa£d
(
BTN_A
)) {

1093 i‡(
addMíu
.
£À˘edIãm
 == 0) {

1096 
°©e
 = 
STATE_VX_EQUALS_MENU
;

1100 i‡(
addMíu
.
£À˘edIãm
 == 1) {

1103 
°©e
 = 
STATE_I_EQUALS_MENU
;

1107 i‡(
addMíu
.
£À˘edIãm
 == 2) {

1110 
°©e
 = 
STATE_SPRITE_MENU
;

1114 i‡(
addMíu
.
£À˘edIãm
 == 3) {

1117 
°©e
 = 
STATE_IF_VX_MENU
;

1121 i‡(
addMíu
.
£À˘edIãm
 == 4) {

1124 
°©e
 = 
STATE_GOTO_N_MENU
;

1128 i‡(
addMíu
.
£À˘edIãm
 == 5) {

1131 
°©e
 = 
STATE_CALL_N_MENU
;

1135 i‡(
addMíu
.
£À˘edIãm
 == 6) {

1138 
°©e
 = 
STATE_IF_KEY_VX_MENU
;

1142 i‡(
addMíu
.
£À˘edIãm
 == 7) {

1145 
°©e
 = 
STATE_IF_NOT_KEY_VX_MENU
;

1149 i‡(
addMíu
.
£À˘edIãm
 == 8) {

1152 
	`addOpcode
(0x00EE);

1155 
°©e
 = 
STATE_EDITOR
;

1159 i‡(
addMíu
.
£À˘edIãm
 == 9) {

1162 
°©e
 = 
STATE_TIMER_MENU
;

1166 i‡(
addMíu
.
£À˘edIãm
 == 10) {

1169 
°©e
 = 
STATE_DATA_MENU
;

1173 i‡(
addMíu
.
£À˘edIãm
 == 11) {

1176 
°©e
 = 
STATE_SAVEDEC_VX_MENU
;

1180 i‡(
addMíu
.
£À˘edIãm
 == 12) {

1183 
°©e
 = 
STATE_SOUNDTIMER_MENU
;

1187 i‡(
addMíu
.
£À˘edIãm
 == 13) {

1190 
°©e
 = 
STATE_SAVE_V0_TO_VX_MENU
;

1194 i‡(
addMíu
.
£À˘edIãm
 == 14) {

1197 
°©e
 = 
STATE_LOAD_V0_TO_VX_MENU
;

1201 i‡(
addMíu
.
£À˘edIãm
 == 15) {

1204 
°©e
 = 
STATE_GOTO_N_PLUS_V0_MENU
;

1208 i‡(
addMíu
.
£À˘edIãm
 == 16) {

1211 
	`addOpcode
(0x00E0);

1214 
°©e
 = 
STATE_EDITOR
;

1219 i‡(
pokôto
->
buâ⁄s
.
	`ªÀa£d
(
BTN_B
)) {

1222 i‡(
edô‹Võw
.
ôemsCou¡
) {

1225 
c⁄ãxtMíu
.
£À˘edIãm
 = 0;

1226 
°©e
 = 
STATE_CONTEXT_MENU
;

1233 
°©e
 = 
STATE_EDITOR
;

1238 
pokôto
->
di•œy
.
	`¥öt
(40, 2, "ADD...");

1239 
addMíu
.
	`show
();

1244 
STATE_VX_EQUALS_MENU
:

1247 
vxEquÆsMíu
.
	`upd©e
();

1250 i‡(
pokôto
->
buâ⁄s
.
	`ªÀa£d
(
BTN_A
)) {

1253 i‡(
vxEquÆsMíu
.
£À˘edIãm
 == 0) {

1256 
°©e
 = 
STATE_VX_EQUALS_N_MENU
;

1260 i‡(
vxEquÆsMíu
.
£À˘edIãm
 == 1) {

1263 
°©e
 = 
STATE_VX_EQUALS_VY_MENU
;

1267 i‡(
vxEquÆsMíu
.
£À˘edIãm
 == 2) {

1270 
°©e
 = 
STATE_VX_PLUS_N_MENU
;

1274 i‡(
vxEquÆsMíu
.
£À˘edIãm
 == 3) {

1277 
°©e
 = 
STATE_VX_PLUS_VY_MENU
;

1281 i‡(
vxEquÆsMíu
.
£À˘edIãm
 == 4) {

1284 
°©e
 = 
STATE_VX_MINUS_VY_MENU
;

1288 i‡(
vxEquÆsMíu
.
£À˘edIãm
 == 5) {

1291 
°©e
 = 
STATE_VY_MINUS_VX_MENU
;

1295 i‡(
vxEquÆsMíu
.
£À˘edIãm
 == 6) {

1298 
°©e
 = 
STATE_VX_AND_VY_MENU
;

1302 i‡(
vxEquÆsMíu
.
£À˘edIãm
 == 7) {

1305 
°©e
 = 
STATE_VX_OR_VY_MENU
;

1309 i‡(
vxEquÆsMíu
.
£À˘edIãm
 == 8) {

1312 
°©e
 = 
STATE_VX_XOR_VY_MENU
;

1316 i‡(
vxEquÆsMíu
.
£À˘edIãm
 == 9) {

1319 
°©e
 = 
STATE_VX_LEFTSHIFT_MENU
;

1323 i‡(
vxEquÆsMíu
.
£À˘edIãm
 == 10) {

1326 
°©e
 = 
STATE_VX_RIGHTSHIFT_MENU
;

1330 i‡(
vxEquÆsMíu
.
£À˘edIãm
 == 11) {

1333 
°©e
 = 
STATE_VX_RANDOM_MENU
;

1337 i‡(
vxEquÆsMíu
.
£À˘edIãm
 == 12) {

1340 
°©e
 = 
STATE_VX_TIMER_MENU
;

1344 i‡(
vxEquÆsMíu
.
£À˘edIãm
 == 13) {

1347 
°©e
 = 
STATE_VX_READKEY_MENU
;

1352 i‡(
pokôto
->
buâ⁄s
.
	`ªÀa£d
(
BTN_B
)) {

1355 
°©e
 = 
STATE_ADD_MENU
;

1359 
pokôto
->
di•œy
.
	`¥öt
(30, 2, "VX = ...");

1360 
vxEquÆsMíu
.
	`show
();

1365 
STATE_VX_EQUALS_N_MENU
:

1368 
vxEquÆsNMíu
.
	`upd©e
();

1371 i‡(
pokôto
->
buâ⁄s
.
	`ªÀa£d
(
BTN_A
)) {

1374 i‡(
vxEquÆsNMíu
.
£À˘edIãm
 == 2) {

1377 i‡(
s¸ìnIsInEdôMode
) {

1380 
s¸ìnIsInEdôMode
 = 
Ál£
;

1383 
°©e
 = 
STATE_EDITOR
;

1390 
°©e
 = 
STATE_VX_EQUALS_MENU
;

1395 i‡(
vxEquÆsNMíu
.
£À˘edIãm
 == 3) {

1398 
›code
 = (((6 << 4Ë+ 
vxEquÆsNMíu
.
ôems
[0].
vÆue
) << 8) +

1399 
vxEquÆsNMíu
.
ôems
[1].
vÆue
;

1402 i‡(
s¸ìnIsInEdôMode
) {

1405 
s¸ìnIsInEdôMode
 = 
Ál£
;

1408 
	`upd©eOpcode
(
›code
);

1415 
	`addOpcode
(
›code
);

1419 
°©e
 = 
STATE_EDITOR
;

1424 i‡(
pokôto
->
buâ⁄s
.
	`ªÀa£d
(
BTN_B
Ë&& !
vxEquÆsNMíu
.
ch™geC™˚Àd
) {

1427 i‡(
s¸ìnIsInEdôMode
) {

1430 
s¸ìnIsInEdôMode
 = 
Ál£
;

1433 
°©e
 = 
STATE_EDITOR
;

1440 
°©e
 = 
STATE_VX_EQUALS_MENU
;

1445 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

1446 
pokôto
->
di•œy
.
	`¥öt
(37, 
TITLE_Y
, "VX = N");

1447 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_2
, "VX:");

1448 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_2_2
, "N:");

1449 
vxEquÆsNMíu
.
	`show
();

1454 
STATE_VX_EQUALS_VY_MENU
:

1457 
vxEquÆsVyMíu
.
	`upd©e
();

1460 i‡(
pokôto
->
buâ⁄s
.
	`ªÀa£d
(
BTN_A
)) {

1463 i‡(
vxEquÆsVyMíu
.
£À˘edIãm
 == 2) {

1466 i‡(
s¸ìnIsInEdôMode
) {

1469 
s¸ìnIsInEdôMode
 = 
Ál£
;

1472 
°©e
 = 
STATE_EDITOR
;

1479 
°©e
 = 
STATE_VX_EQUALS_MENU
;

1484 i‡(
vxEquÆsVyMíu
.
£À˘edIãm
 == 3) {

1487 
›code
 = (((8 << 4Ë+ 
vxEquÆsVyMíu
.
ôems
[0].
vÆue
) << 8) +

1488 (
vxEquÆsVyMíu
.
ôems
[1].
vÆue
 << 4);

1491 i‡(
s¸ìnIsInEdôMode
) {

1494 
s¸ìnIsInEdôMode
 = 
Ál£
;

1497 
	`upd©eOpcode
(
›code
);

1504 
	`addOpcode
(
›code
);

1508 
°©e
 = 
STATE_EDITOR
;

1513 i‡(
pokôto
->
buâ⁄s
.
	`ªÀa£d
(
BTN_B
Ë&& !
vxEquÆsVyMíu
.
ch™geC™˚Àd
) {

1516 i‡(
s¸ìnIsInEdôMode
) {

1519 
s¸ìnIsInEdôMode
 = 
Ál£
;

1522 
°©e
 = 
STATE_EDITOR
;

1529 
°©e
 = 
STATE_VX_EQUALS_MENU
;

1534 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

1535 
pokôto
->
di•œy
.
	`¥öt
(35, 
TITLE_Y
, "VX = VY");

1536 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_2
, "VX:");

1537 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_2_2
, "VY:");

1538 
vxEquÆsVyMíu
.
	`show
();

1543 
STATE_VX_PLUS_N_MENU
:

1546 
vxPlusNMíu
.
	`upd©e
();

1549 i‡(
pokôto
->
buâ⁄s
.
	`ªÀa£d
(
BTN_A
)) {

1552 i‡(
vxPlusNMíu
.
£À˘edIãm
 == 2) {

1555 i‡(
s¸ìnIsInEdôMode
) {

1558 
s¸ìnIsInEdôMode
 = 
Ál£
;

1561 
°©e
 = 
STATE_EDITOR
;

1568 
°©e
 = 
STATE_VX_EQUALS_MENU
;

1573 i‡(
vxPlusNMíu
.
£À˘edIãm
 == 3) {

1576 
›code
 = (((0x7 << 4Ë+ 
vxPlusNMíu
.
ôems
[0].
vÆue
) << 8) +

1577 
vxPlusNMíu
.
ôems
[1].
vÆue
;

1580 i‡(
s¸ìnIsInEdôMode
) {

1583 
s¸ìnIsInEdôMode
 = 
Ál£
;

1586 
	`upd©eOpcode
(
›code
);

1593 
	`addOpcode
(
›code
);

1597 
°©e
 = 
STATE_EDITOR
;

1602 i‡(
pokôto
->
buâ⁄s
.
	`ªÀa£d
(
BTN_B
Ë&& !
vxPlusNMíu
.
ch™geC™˚Àd
) {

1605 i‡(
s¸ìnIsInEdôMode
) {

1608 
s¸ìnIsInEdôMode
 = 
Ál£
;

1611 
°©e
 = 
STATE_EDITOR
;

1618 
°©e
 = 
STATE_VX_EQUALS_MENU
;

1623 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

1624 
pokôto
->
di•œy
.
	`¥öt
(25, 
TITLE_Y
, "VX = VX + N");

1625 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_2
, "VX:");

1626 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_2_2
, "N:");

1627 
vxPlusNMíu
.
	`show
();

1632 
STATE_VX_PLUS_VY_MENU
:

1635 
vxPlusVyMíu
.
	`upd©e
();

1638 i‡(
pokôto
->
buâ⁄s
.
	`ªÀa£d
(
BTN_A
)) {

1641 i‡(
vxPlusVyMíu
.
£À˘edIãm
 == 2) {

1644 i‡(
s¸ìnIsInEdôMode
) {

1647 
s¸ìnIsInEdôMode
 = 
Ál£
;

1650 
°©e
 = 
STATE_EDITOR
;

1657 
°©e
 = 
STATE_VX_EQUALS_MENU
;

1662 i‡(
vxPlusVyMíu
.
£À˘edIãm
 == 3) {

1665 
›code
 = (((0x8 << 4Ë+ 
vxPlusVyMíu
.
ôems
[0].
vÆue
) << 8) +

1666 (
vxPlusVyMíu
.
ôems
[1].
vÆue
 << 4) + 0x4;

1669 i‡(
s¸ìnIsInEdôMode
) {

1672 
s¸ìnIsInEdôMode
 = 
Ál£
;

1675 
	`upd©eOpcode
(
›code
);

1682 
	`addOpcode
(
›code
);

1686 
°©e
 = 
STATE_EDITOR
;

1691 i‡(
pokôto
->
buâ⁄s
.
	`ªÀa£d
(
BTN_B
Ë&& !
vxPlusVyMíu
.
ch™geC™˚Àd
) {

1694 i‡(
s¸ìnIsInEdôMode
) {

1697 
s¸ìnIsInEdôMode
 = 
Ál£
;

1700 
°©e
 = 
STATE_EDITOR
;

1707 
°©e
 = 
STATE_VX_EQUALS_MENU
;

1712 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

1713 
pokôto
->
di•œy
.
	`¥öt
(23, 
TITLE_Y
, "VX = VX + VY");

1714 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_2
, "VX:");

1715 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_2_2
, "VY:");

1716 
vxPlusVyMíu
.
	`show
();

1721 
STATE_VX_MINUS_VY_MENU
:

1724 
vxMöusVyMíu
.
	`upd©e
();

1727 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

1730 i‡(
vxMöusVyMíu
.
£À˘edIãm
 == 2) {

1733 i‡(
s¸ìnIsInEdôMode
) {

1736 
s¸ìnIsInEdôMode
 = 
Ál£
;

1739 
°©e
 = 
STATE_EDITOR
;

1746 
°©e
 = 
STATE_VX_EQUALS_MENU
;

1751 i‡(
vxMöusVyMíu
.
£À˘edIãm
 == 3) {

1754 
›code
 = (((0x8 << 4Ë+ 
vxMöusVyMíu
.
ôems
[0].
vÆue
) << 8) +

1755 (
vxMöusVyMíu
.
ôems
[1].
vÆue
 << 4) + 0x5;

1758 i‡(
s¸ìnIsInEdôMode
) {

1761 
s¸ìnIsInEdôMode
 = 
Ál£
;

1764 
	`upd©eOpcode
(
›code
);

1771 
	`addOpcode
(
›code
);

1775 
°©e
 = 
STATE_EDITOR
;

1780 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
vxMöusVyMíu
.
ch™geC™˚Àd
) {

1783 i‡(
s¸ìnIsInEdôMode
) {

1786 
s¸ìnIsInEdôMode
 = 
Ál£
;

1789 
°©e
 = 
STATE_EDITOR
;

1796 
°©e
 = 
STATE_VX_EQUALS_MENU
;

1801 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

1802 
pokôto
->
di•œy
.
	`¥öt
(23, 
TITLE_Y
, "VX = VX - VY");

1803 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_2
, "VX:");

1804 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_2_2
, "VY:");

1805 
vxMöusVyMíu
.
	`show
();

1810 
STATE_VY_MINUS_VX_MENU
:

1813 
vyMöusVxMíu
.
	`upd©e
();

1816 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

1819 i‡(
vyMöusVxMíu
.
£À˘edIãm
 == 2) {

1822 i‡(
s¸ìnIsInEdôMode
) {

1825 
s¸ìnIsInEdôMode
 = 
Ál£
;

1828 
°©e
 = 
STATE_EDITOR
;

1835 
°©e
 = 
STATE_VX_EQUALS_MENU
;

1840 i‡(
vyMöusVxMíu
.
£À˘edIãm
 == 3) {

1843 
›code
 = (((0x8 << 4Ë+ 
vyMöusVxMíu
.
ôems
[0].
vÆue
) << 8) +

1844 (
vyMöusVxMíu
.
ôems
[1].
vÆue
 << 4) + 0x7;

1847 i‡(
s¸ìnIsInEdôMode
) {

1850 
s¸ìnIsInEdôMode
 = 
Ál£
;

1853 
	`upd©eOpcode
(
›code
);

1860 
	`addOpcode
(
›code
);

1864 
°©e
 = 
STATE_EDITOR
;

1869 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
vyMöusVxMíu
.
ch™geC™˚Àd
) {

1872 i‡(
s¸ìnIsInEdôMode
) {

1875 
s¸ìnIsInEdôMode
 = 
Ál£
;

1878 
°©e
 = 
STATE_EDITOR
;

1885 
°©e
 = 
STATE_VX_EQUALS_MENU
;

1890 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

1891 
pokôto
->
di•œy
.
	`¥öt
(23, 
TITLE_Y
, "VX = VY - VX");

1892 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_2
, "VX:");

1893 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_2_2
, "VY:");

1894 
vyMöusVxMíu
.
	`show
();

1899 
STATE_VX_AND_VY_MENU
:

1902 
vxAndVyMíu
.
	`upd©e
();

1905 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

1908 i‡(
vxAndVyMíu
.
£À˘edIãm
 == 2) {

1911 i‡(
s¸ìnIsInEdôMode
) {

1914 
s¸ìnIsInEdôMode
 = 
Ál£
;

1917 
°©e
 = 
STATE_EDITOR
;

1924 
°©e
 = 
STATE_VX_EQUALS_MENU
;

1929 i‡(
vxAndVyMíu
.
£À˘edIãm
 == 3) {

1932 
›code
 = (((0x8 << 4Ë+ 
vxAndVyMíu
.
ôems
[0].
vÆue
) << 8) +

1933 (
vxAndVyMíu
.
ôems
[1].
vÆue
 << 4) + 0x2;

1936 i‡(
s¸ìnIsInEdôMode
) {

1939 
s¸ìnIsInEdôMode
 = 
Ál£
;

1942 
	`upd©eOpcode
(
›code
);

1949 
	`addOpcode
(
›code
);

1953 
°©e
 = 
STATE_EDITOR
;

1958 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
vxAndVyMíu
.
ch™geC™˚Àd
) {

1961 i‡(
s¸ìnIsInEdôMode
) {

1964 
s¸ìnIsInEdôMode
 = 
Ál£
;

1967 
°©e
 = 
STATE_EDITOR
;

1974 
°©e
 = 
STATE_VX_EQUALS_MENU
;

1979 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

1980 
pokôto
->
di•œy
.
	`¥öt
(18, 
TITLE_Y
, "VX = VX AND VY");

1981 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_2
, "VX:");

1982 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_2_2
, "VY:");

1983 
vxAndVyMíu
.
	`show
();

1988 
STATE_VX_OR_VY_MENU
:

1991 
vxOrVyMíu
.
	`upd©e
();

1994 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

1997 i‡(
vxOrVyMíu
.
£À˘edIãm
 == 2) {

2000 i‡(
s¸ìnIsInEdôMode
) {

2003 
s¸ìnIsInEdôMode
 = 
Ál£
;

2006 
°©e
 = 
STATE_EDITOR
;

2013 
°©e
 = 
STATE_VX_EQUALS_MENU
;

2018 i‡(
vxOrVyMíu
.
£À˘edIãm
 == 3) {

2021 
›code
 = (((0x8 << 4Ë+ 
vxOrVyMíu
.
ôems
[0].
vÆue
) << 8) +

2022 (
vxOrVyMíu
.
ôems
[1].
vÆue
 << 4) + 0x1;

2025 i‡(
s¸ìnIsInEdôMode
) {

2028 
s¸ìnIsInEdôMode
 = 
Ál£
;

2031 
	`upd©eOpcode
(
›code
);

2038 
	`addOpcode
(
›code
);

2042 
°©e
 = 
STATE_EDITOR
;

2047 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
vxOrVyMíu
.
ch™geC™˚Àd
) {

2050 i‡(
s¸ìnIsInEdôMode
) {

2053 
s¸ìnIsInEdôMode
 = 
Ál£
;

2056 
°©e
 = 
STATE_EDITOR
;

2063 
°©e
 = 
STATE_VX_EQUALS_MENU
;

2068 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

2069 
pokôto
->
di•œy
.
	`¥öt
(20, 
TITLE_Y
, "VX = VX OR VY");

2070 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_2
, "VX:");

2071 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_2_2
, "VY:");

2072 
vxOrVyMíu
.
	`show
();

2077 
STATE_VX_XOR_VY_MENU
:

2080 
vxX‹VyMíu
.
	`upd©e
();

2083 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

2086 i‡(
vxX‹VyMíu
.
£À˘edIãm
 == 2) {

2089 i‡(
s¸ìnIsInEdôMode
) {

2092 
s¸ìnIsInEdôMode
 = 
Ál£
;

2095 
°©e
 = 
STATE_EDITOR
;

2102 
°©e
 = 
STATE_VX_EQUALS_MENU
;

2107 i‡(
vxX‹VyMíu
.
£À˘edIãm
 == 3) {

2110 
›code
 = (((0x8 << 4Ë+ 
vxX‹VyMíu
.
ôems
[0].
vÆue
) << 8) +

2111 (
vxX‹VyMíu
.
ôems
[1].
vÆue
 << 4) + 0x3;

2114 i‡(
s¸ìnIsInEdôMode
) {

2117 
s¸ìnIsInEdôMode
 = 
Ál£
;

2120 
	`upd©eOpcode
(
›code
);

2127 
	`addOpcode
(
›code
);

2131 
°©e
 = 
STATE_EDITOR
;

2136 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
vxX‹VyMíu
.
ch™geC™˚Àd
) {

2139 i‡(
s¸ìnIsInEdôMode
) {

2142 
s¸ìnIsInEdôMode
 = 
Ál£
;

2145 
°©e
 = 
STATE_EDITOR
;

2152 
°©e
 = 
STATE_VX_EQUALS_MENU
;

2157 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

2158 
pokôto
->
di•œy
.
	`¥öt
(18, 
TITLE_Y
, "VX = VX XOR VY");

2159 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_2
, "VX:");

2160 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_2_2
, "VY:");

2161 
vxX‹VyMíu
.
	`show
();

2166 
STATE_VX_LEFTSHIFT_MENU
:

2169 
vxLe·Shi·Míu
.
	`upd©e
();

2172 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

2175 i‡(
vxLe·Shi·Míu
.
£À˘edIãm
 == 1) {

2178 i‡(
s¸ìnIsInEdôMode
) {

2181 
s¸ìnIsInEdôMode
 = 
Ál£
;

2184 
°©e
 = 
STATE_EDITOR
;

2191 
°©e
 = 
STATE_VX_EQUALS_MENU
;

2196 i‡(
vxLe·Shi·Míu
.
£À˘edIãm
 == 2) {

2199 
›code
 = (((0x8 << 4Ë+ 
vxLe·Shi·Míu
.
ôems
[0].
vÆue
) << 8) +

2203 i‡(
s¸ìnIsInEdôMode
) {

2206 
s¸ìnIsInEdôMode
 = 
Ál£
;

2209 
	`upd©eOpcode
(
›code
);

2216 
	`addOpcode
(
›code
);

2220 
°©e
 = 
STATE_EDITOR
;

2225 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
vxLe·Shi·Míu
.
ch™geC™˚Àd
) {

2228 i‡(
s¸ìnIsInEdôMode
) {

2231 
s¸ìnIsInEdôMode
 = 
Ál£
;

2234 
°©e
 = 
STATE_EDITOR
;

2241 
°©e
 = 
STATE_VX_EQUALS_MENU
;

2246 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

2247 
pokôto
->
di•œy
.
	`¥öt
(23, 
TITLE_Y
, "VX = VX << 1");

2248 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_1
, "VX:");

2249 
vxLe·Shi·Míu
.
	`show
();

2254 
STATE_VX_RIGHTSHIFT_MENU
:

2257 
vxRightShi·Míu
.
	`upd©e
();

2260 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

2263 i‡(
vxRightShi·Míu
.
£À˘edIãm
 == 1) {

2266 i‡(
s¸ìnIsInEdôMode
) {

2269 
s¸ìnIsInEdôMode
 = 
Ál£
;

2272 
°©e
 = 
STATE_EDITOR
;

2279 
°©e
 = 
STATE_VX_EQUALS_MENU
;

2284 i‡(
vxRightShi·Míu
.
£À˘edIãm
 == 2) {

2287 
›code
 = (((0x8 << 4Ë+ 
vxRightShi·Míu
.
ôems
[0].
vÆue
) << 8) +

2291 i‡(
s¸ìnIsInEdôMode
) {

2294 
s¸ìnIsInEdôMode
 = 
Ál£
;

2297 
	`upd©eOpcode
(
›code
);

2304 
	`addOpcode
(
›code
);

2308 
°©e
 = 
STATE_EDITOR
;

2313 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
vxRightShi·Míu
.
ch™geC™˚Àd
) {

2316 i‡(
s¸ìnIsInEdôMode
) {

2319 
s¸ìnIsInEdôMode
 = 
Ál£
;

2322 
°©e
 = 
STATE_EDITOR
;

2329 
°©e
 = 
STATE_VX_EQUALS_MENU
;

2334 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

2335 
pokôto
->
di•œy
.
	`¥öt
(23, 
TITLE_Y
, "VX = VX >> 1");

2336 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_1
, "VX:");

2337 
vxRightShi·Míu
.
	`show
();

2342 
STATE_VX_RANDOM_MENU
:

2345 
vxR™domMíu
.
	`upd©e
();

2348 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

2351 i‡(
vxR™domMíu
.
£À˘edIãm
 == 2) {

2354 i‡(
s¸ìnIsInEdôMode
) {

2357 
s¸ìnIsInEdôMode
 = 
Ál£
;

2360 
°©e
 = 
STATE_EDITOR
;

2367 
°©e
 = 
STATE_VX_EQUALS_MENU
;

2372 i‡(
vxR™domMíu
.
£À˘edIãm
 == 3) {

2375 
›code
 = (((0xC << 4Ë+ 
vxR™domMíu
.
ôems
[0].
vÆue
) << 8) +

2376 
vxR™domMíu
.
ôems
[1].
vÆue
;

2379 i‡(
s¸ìnIsInEdôMode
) {

2382 
s¸ìnIsInEdôMode
 = 
Ál£
;

2385 
	`upd©eOpcode
(
›code
);

2392 
	`addOpcode
(
›code
);

2396 
°©e
 = 
STATE_EDITOR
;

2401 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
vxR™domMíu
.
ch™geC™˚Àd
) {

2404 i‡(
s¸ìnIsInEdôMode
) {

2407 
s¸ìnIsInEdôMode
 = 
Ál£
;

2410 
°©e
 = 
STATE_EDITOR
;

2417 
°©e
 = 
STATE_VX_EQUALS_MENU
;

2422 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

2423 
pokôto
->
di•œy
.
	`¥öt
(6, 
TITLE_Y
, "VX = RANDOM 0 TO N");

2424 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_2
, "VX:");

2425 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_2_2
, "N:");

2426 
vxR™domMíu
.
	`show
();

2431 
STATE_VX_TIMER_MENU
:

2434 
vxTimîMíu
.
	`upd©e
();

2437 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

2440 i‡(
vxTimîMíu
.
£À˘edIãm
 == 1) {

2443 i‡(
s¸ìnIsInEdôMode
) {

2446 
s¸ìnIsInEdôMode
 = 
Ál£
;

2449 
°©e
 = 
STATE_EDITOR
;

2456 
°©e
 = 
STATE_VX_EQUALS_MENU
;

2461 i‡(
vxTimîMíu
.
£À˘edIãm
 == 2) {

2464 
›code
 = (((0xF << 4Ë+ 
vxTimîMíu
.
ôems
[0].
vÆue
) << 8) +

2468 i‡(
s¸ìnIsInEdôMode
) {

2471 
s¸ìnIsInEdôMode
 = 
Ál£
;

2474 
	`upd©eOpcode
(
›code
);

2481 
	`addOpcode
(
›code
);

2485 
°©e
 = 
STATE_EDITOR
;

2490 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
vxTimîMíu
.
ch™geC™˚Àd
) {

2493 i‡(
s¸ìnIsInEdôMode
) {

2496 
s¸ìnIsInEdôMode
 = 
Ál£
;

2499 
°©e
 = 
STATE_EDITOR
;

2506 
°©e
 = 
STATE_VX_EQUALS_MENU
;

2511 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

2512 
pokôto
->
di•œy
.
	`¥öt
(26, 
TITLE_Y
, "VX = TIMER");

2513 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_1
, "VX:");

2514 
vxTimîMíu
.
	`show
();

2519 
STATE_VX_READKEY_MENU
:

2522 
vxRódKeyMíu
.
	`upd©e
();

2525 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

2528 i‡(
vxRódKeyMíu
.
£À˘edIãm
 == 1) {

2531 i‡(
s¸ìnIsInEdôMode
) {

2534 
s¸ìnIsInEdôMode
 = 
Ál£
;

2537 
°©e
 = 
STATE_EDITOR
;

2544 
°©e
 = 
STATE_VX_EQUALS_MENU
;

2549 i‡(
vxRódKeyMíu
.
£À˘edIãm
 == 2) {

2552 
›code
 = (((0xF << 4Ë+ 
vxRódKeyMíu
.
ôems
[0].
vÆue
) << 8) +

2556 i‡(
s¸ìnIsInEdôMode
) {

2559 
s¸ìnIsInEdôMode
 = 
Ál£
;

2562 
	`upd©eOpcode
(
›code
);

2569 
	`addOpcode
(
›code
);

2573 
°©e
 = 
STATE_EDITOR
;

2578 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
vxRódKeyMíu
.
ch™geC™˚Àd
) {

2581 i‡(
s¸ìnIsInEdôMode
) {

2584 
s¸ìnIsInEdôMode
 = 
Ál£
;

2587 
°©e
 = 
STATE_EDITOR
;

2594 
°©e
 = 
STATE_VX_EQUALS_MENU
;

2599 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

2600 
pokôto
->
di•œy
.
	`¥öt
(19, 
TITLE_Y
, "VX = READ KEY");

2601 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_1
, "VX:");

2602 
vxRódKeyMíu
.
	`show
();

2607 
STATE_I_EQUALS_MENU
:

2610 
iEquÆsMíu
.
	`upd©e
();

2613 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

2616 i‡(
iEquÆsMíu
.
£À˘edIãm
 == 0) {

2619 
°©e
 = 
STATE_I_EQUALS_N_MENU
;

2623 i‡(
iEquÆsMíu
.
£À˘edIãm
 == 1) {

2626 
°©e
 = 
STATE_I_EQUALS_CHAR_VX_MENU
;

2630 i‡(
iEquÆsMíu
.
£À˘edIãm
 == 2) {

2633 
°©e
 = 
STATE_I_PLUS_VX_MENU
;

2638 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
)) {

2641 
°©e
 = 
STATE_ADD_MENU
;

2645 
pokôto
->
di•œy
.
	`¥öt
(35, 
TITLE_Y
, "I = ...");

2646 
iEquÆsMíu
.
	`show
();

2651 
STATE_I_EQUALS_N_MENU
:

2654 
iEquÆsNMíu
.
	`upd©e
();

2657 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

2660 i‡(
iEquÆsNMíu
.
£À˘edIãm
 == 1) {

2663 i‡(
s¸ìnIsInEdôMode
) {

2666 
s¸ìnIsInEdôMode
 = 
Ál£
;

2669 
°©e
 = 
STATE_EDITOR
;

2676 
°©e
 = 
STATE_I_EQUALS_MENU
;

2681 i‡(
iEquÆsNMíu
.
£À˘edIãm
 == 2) {

2684 
›code
 = (0xA << 12Ë+ 
iEquÆsNMíu
.
ôems
[0].
vÆue
;

2687 i‡(
s¸ìnIsInEdôMode
) {

2690 
s¸ìnIsInEdôMode
 = 
Ál£
;

2693 
	`upd©eOpcode
(
›code
);

2700 
	`addOpcode
(
›code
);

2704 
°©e
 = 
STATE_EDITOR
;

2709 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
iEquÆsNMíu
.
ch™geC™˚Àd
) {

2712 i‡(
s¸ìnIsInEdôMode
) {

2715 
s¸ìnIsInEdôMode
 = 
Ál£
;

2718 
°©e
 = 
STATE_EDITOR
;

2725 
°©e
 = 
STATE_I_EQUALS_MENU
;

2730 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

2731 
pokôto
->
di•œy
.
	`¥öt
(40, 
TITLE_Y
, "I = N");

2732 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_1
, "N: ");

2733 
iEquÆsNMíu
.
	`show
();

2738 
STATE_I_EQUALS_CHAR_VX_MENU
:

2741 
iEquÆsCh¨VXMíu
.
	`upd©e
();

2744 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

2747 i‡(
iEquÆsCh¨VXMíu
.
£À˘edIãm
 == 1) {

2750 i‡(
s¸ìnIsInEdôMode
) {

2753 
s¸ìnIsInEdôMode
 = 
Ál£
;

2756 
°©e
 = 
STATE_EDITOR
;

2763 
°©e
 = 
STATE_I_EQUALS_MENU
;

2768 i‡(
iEquÆsCh¨VXMíu
.
£À˘edIãm
 == 2) {

2771 
›code
 = (((0xF << 4Ë+ 
iEquÆsCh¨VXMíu
.
ôems
[0].
vÆue
) << 8) +

2775 i‡(
s¸ìnIsInEdôMode
) {

2778 
s¸ìnIsInEdôMode
 = 
Ál£
;

2781 
	`upd©eOpcode
(
›code
);

2788 
	`addOpcode
(
›code
);

2792 
°©e
 = 
STATE_EDITOR
;

2797 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
iEquÆsCh¨VXMíu
.
ch™geC™˚Àd
) {

2800 i‡(
s¸ìnIsInEdôMode
) {

2803 
s¸ìnIsInEdôMode
 = 
Ál£
;

2806 
°©e
 = 
STATE_EDITOR
;

2813 
°©e
 = 
STATE_I_EQUALS_MENU
;

2818 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

2819 
pokôto
->
di•œy
.
	`¥öt
(24, 
TITLE_Y
, "I = CHAR VX");

2820 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_1
, "VX:");

2821 
iEquÆsCh¨VXMíu
.
	`show
();

2826 
STATE_I_PLUS_VX_MENU
:

2829 
iPlusVxMíu
.
	`upd©e
();

2832 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

2835 i‡(
iPlusVxMíu
.
£À˘edIãm
 == 1) {

2838 i‡(
s¸ìnIsInEdôMode
) {

2841 
s¸ìnIsInEdôMode
 = 
Ál£
;

2844 
°©e
 = 
STATE_EDITOR
;

2851 
°©e
 = 
STATE_I_EQUALS_MENU
;

2856 i‡(
iPlusVxMíu
.
£À˘edIãm
 == 2) {

2859 
›code
 = (((0xF << 4Ë+ 
iPlusVxMíu
.
ôems
[0].
vÆue
) << 8) +

2863 i‡(
s¸ìnIsInEdôMode
) {

2866 
s¸ìnIsInEdôMode
 = 
Ál£
;

2869 
	`upd©eOpcode
(
›code
);

2876 
	`addOpcode
(
›code
);

2880 
°©e
 = 
STATE_EDITOR
;

2885 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
iPlusVxMíu
.
ch™geC™˚Àd
) {

2888 i‡(
s¸ìnIsInEdôMode
) {

2891 
s¸ìnIsInEdôMode
 = 
Ál£
;

2894 
°©e
 = 
STATE_EDITOR
;

2901 
°©e
 = 
STATE_I_EQUALS_MENU
;

2906 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

2907 
pokôto
->
di•œy
.
	`¥öt
(20, 
TITLE_Y
, "I = I + VX");

2908 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_1
, "VX:");

2909 
iPlusVxMíu
.
	`show
();

2914 
STATE_SPRITE_MENU
:

2917 
•rôeMíu
.
	`upd©e
();

2920 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

2923 i‡(
•rôeMíu
.
£À˘edIãm
 == 3) {

2926 i‡(
s¸ìnIsInEdôMode
) {

2929 
s¸ìnIsInEdôMode
 = 
Ál£
;

2932 
°©e
 = 
STATE_EDITOR
;

2939 
°©e
 = 
STATE_ADD_MENU
;

2944 i‡(
•rôeMíu
.
£À˘edIãm
 == 4) {

2947 
›code
 = (((0xD << 4Ë+ 
•rôeMíu
.
ôems
[0].
vÆue
) << 8) +

2948 ((
•rôeMíu
.
ôems
[1].
vÆue
 << 4) + spriteMenu.items[2].value);

2951 i‡(
s¸ìnIsInEdôMode
) {

2954 
s¸ìnIsInEdôMode
 = 
Ál£
;

2957 
	`upd©eOpcode
(
›code
);

2964 
	`addOpcode
(
›code
);

2968 
°©e
 = 
STATE_EDITOR
;

2973 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
•rôeMíu
.
ch™geC™˚Àd
) {

2976 i‡(
s¸ìnIsInEdôMode
) {

2979 
s¸ìnIsInEdôMode
 = 
Ál£
;

2982 
°©e
 = 
STATE_EDITOR
;

2989 
°©e
 = 
STATE_ADD_MENU
;

2994 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

2995 
pokôto
->
di•œy
.
	`¥öt
(16, 
TITLE_Y
, "SPRITE VX VY N");

2996 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_3
, "VX: ");

2997 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_2_3
, "VY: ");

2998 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_3_3
, "N: ");

2999 
•rôeMíu
.
	`show
();

3004 
STATE_IF_VX_MENU
:

3007 
ifVxMíu
.
	`upd©e
();

3010 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

3013 i‡(
ifVxMíu
.
£À˘edIãm
 == 0) {

3016 
°©e
 = 
STATE_IF_VX_EQUALS_N_MENU
;

3020 i‡(
ifVxMíu
.
£À˘edIãm
 == 1) {

3023 
°©e
 = 
STATE_IF_VX_EQUALS_VY_MENU
;

3027 i‡(
ifVxMíu
.
£À˘edIãm
 == 2) {

3030 
°©e
 = 
STATE_IF_VX_NOT_EQUALS_N_MENU
;

3034 i‡(
ifVxMíu
.
£À˘edIãm
 == 3) {

3037 
°©e
 = 
STATE_IF_VX_NOT_EQUALS_VY_MENU
;

3042 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
)) {

3045 
°©e
 = 
STATE_ADD_MENU
;

3049 
pokôto
->
di•œy
.
	`¥öt
(30, 
TITLE_Y
, "IF VX ...");

3050 
ifVxMíu
.
	`show
();

3055 
STATE_IF_VX_EQUALS_N_MENU
:

3058 
ifVxEquÆsNMíu
.
	`upd©e
();

3061 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

3064 i‡(
ifVxEquÆsNMíu
.
£À˘edIãm
 == 2) {

3067 i‡(
s¸ìnIsInEdôMode
) {

3070 
s¸ìnIsInEdôMode
 = 
Ál£
;

3073 
°©e
 = 
STATE_EDITOR
;

3080 
°©e
 = 
STATE_IF_VX_MENU
;

3085 i‡(
ifVxEquÆsNMíu
.
£À˘edIãm
 == 3) {

3088 
›code
 = (((0x4 << 4Ë+ 
ifVxEquÆsNMíu
.
ôems
[0].
vÆue
) << 8) +

3089 
ifVxEquÆsNMíu
.
ôems
[1].
vÆue
;

3092 i‡(
s¸ìnIsInEdôMode
) {

3095 
s¸ìnIsInEdôMode
 = 
Ál£
;

3098 
	`upd©eOpcode
(
›code
);

3105 
	`addOpcode
(
›code
);

3109 
°©e
 = 
STATE_EDITOR
;

3114 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
ifVxEquÆsNMíu
.
ch™geC™˚Àd
) {

3117 i‡(
s¸ìnIsInEdôMode
) {

3120 
s¸ìnIsInEdôMode
 = 
Ál£
;

3123 
°©e
 = 
STATE_EDITOR
;

3130 
°©e
 = 
STATE_IF_VX_MENU
;

3135 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

3136 
pokôto
->
di•œy
.
	`¥öt
(27, 
TITLE_Y
, "IF VX == N");

3137 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_2
, "VX: ");

3138 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_2_2
, "N: ");

3139 
ifVxEquÆsNMíu
.
	`show
();

3144 
STATE_IF_VX_EQUALS_VY_MENU
:

3147 
ifVxEquÆsVyMíu
.
	`upd©e
();

3150 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

3153 i‡(
ifVxEquÆsVyMíu
.
£À˘edIãm
 == 2) {

3156 i‡(
s¸ìnIsInEdôMode
) {

3159 
s¸ìnIsInEdôMode
 = 
Ál£
;

3162 
°©e
 = 
STATE_EDITOR
;

3169 
°©e
 = 
STATE_IF_VX_MENU
;

3174 i‡(
ifVxEquÆsVyMíu
.
£À˘edIãm
 == 3) {

3177 
›code
 = (((0x9 << 4Ë+ 
ifVxEquÆsVyMíu
.
ôems
[0].
vÆue
) << 8) +

3178 (
ifVxEquÆsVyMíu
.
ôems
[1].
vÆue
 << 4);

3181 i‡(
s¸ìnIsInEdôMode
) {

3184 
s¸ìnIsInEdôMode
 = 
Ál£
;

3187 
	`upd©eOpcode
(
›code
);

3194 
	`addOpcode
(
›code
);

3198 
°©e
 = 
STATE_EDITOR
;

3203 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
ifVxEquÆsVyMíu
.
ch™geC™˚Àd
) {

3206 i‡(
s¸ìnIsInEdôMode
) {

3209 
s¸ìnIsInEdôMode
 = 
Ál£
;

3212 
°©e
 = 
STATE_EDITOR
;

3219 
°©e
 = 
STATE_IF_VX_MENU
;

3224 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

3225 
pokôto
->
di•œy
.
	`¥öt
(24, 
TITLE_Y
, "IF VX == VY");

3226 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_2
, "VX: ");

3227 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_2_2
, "VY: ");

3228 
ifVxEquÆsVyMíu
.
	`show
();

3233 
STATE_IF_VX_NOT_EQUALS_N_MENU
:

3236 
ifVxNŸEquÆsNMíu
.
	`upd©e
();

3239 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

3242 i‡(
ifVxNŸEquÆsNMíu
.
£À˘edIãm
 == 2) {

3245 i‡(
s¸ìnIsInEdôMode
) {

3248 
s¸ìnIsInEdôMode
 = 
Ál£
;

3251 
°©e
 = 
STATE_EDITOR
;

3258 
°©e
 = 
STATE_IF_VX_MENU
;

3263 i‡(
ifVxNŸEquÆsNMíu
.
£À˘edIãm
 == 3) {

3266 
›code
 = (((0x3 << 4Ë+ 
ifVxNŸEquÆsNMíu
.
ôems
[0].
vÆue
) << 8) +

3267 
ifVxNŸEquÆsNMíu
.
ôems
[1].
vÆue
;

3270 i‡(
s¸ìnIsInEdôMode
) {

3273 
s¸ìnIsInEdôMode
 = 
Ál£
;

3276 
	`upd©eOpcode
(
›code
);

3283 
	`addOpcode
(
›code
);

3287 
°©e
 = 
STATE_EDITOR
;

3292 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
ifVxNŸEquÆsNMíu
.
ch™geC™˚Àd
) {

3295 i‡(
s¸ìnIsInEdôMode
) {

3298 
s¸ìnIsInEdôMode
 = 
Ál£
;

3301 
°©e
 = 
STATE_EDITOR
;

3308 
°©e
 = 
STATE_IF_VX_MENU
;

3313 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

3314 
pokôto
->
di•œy
.
	`¥öt
(27, 
TITLE_Y
, "IF VX != N");

3315 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_2
, "VX: ");

3316 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_2_2
, "N: ");

3317 
ifVxNŸEquÆsNMíu
.
	`show
();

3322 
STATE_IF_VX_NOT_EQUALS_VY_MENU
:

3325 
ifVxNŸEquÆsVyMíu
.
	`upd©e
();

3328 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

3331 i‡(
ifVxNŸEquÆsVyMíu
.
£À˘edIãm
 == 2) {

3334 i‡(
s¸ìnIsInEdôMode
) {

3337 
s¸ìnIsInEdôMode
 = 
Ál£
;

3340 
°©e
 = 
STATE_EDITOR
;

3347 
°©e
 = 
STATE_IF_VX_MENU
;

3352 i‡(
ifVxNŸEquÆsVyMíu
.
£À˘edIãm
 == 3) {

3355 
›code
 = (((0x5 << 4Ë+ 
ifVxNŸEquÆsVyMíu
.
ôems
[0].
vÆue
) << 8) +

3356 (
ifVxNŸEquÆsVyMíu
.
ôems
[1].
vÆue
 << 4);

3359 i‡(
s¸ìnIsInEdôMode
) {

3362 
s¸ìnIsInEdôMode
 = 
Ál£
;

3365 
	`upd©eOpcode
(
›code
);

3372 
	`addOpcode
(
›code
);

3376 
°©e
 = 
STATE_EDITOR
;

3381 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
ifVxNŸEquÆsVyMíu
.
ch™geC™˚Àd
) {

3384 i‡(
s¸ìnIsInEdôMode
) {

3387 
s¸ìnIsInEdôMode
 = 
Ál£
;

3390 
°©e
 = 
STATE_EDITOR
;

3397 
°©e
 = 
STATE_IF_VX_MENU
;

3402 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

3403 
pokôto
->
di•œy
.
	`¥öt
(24, 
TITLE_Y
, "IF VX != VY");

3404 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_2
, "VX: ");

3405 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_2_2
, "VY: ");

3406 
ifVxNŸEquÆsVyMíu
.
	`show
();

3411 
STATE_GOTO_N_MENU
:

3414 
gŸoNMíu
.
	`upd©e
();

3417 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

3420 i‡(
gŸoNMíu
.
£À˘edIãm
 == 1) {

3423 i‡(
s¸ìnIsInEdôMode
) {

3426 
s¸ìnIsInEdôMode
 = 
Ál£
;

3429 
°©e
 = 
STATE_EDITOR
;

3436 
°©e
 = 
STATE_ADD_MENU
;

3441 i‡(
gŸoNMíu
.
£À˘edIãm
 == 2) {

3444 
›code
 = (0x1 << 12Ë+ 
gŸoNMíu
.
ôems
[0].
vÆue
;

3447 i‡(
s¸ìnIsInEdôMode
) {

3450 
s¸ìnIsInEdôMode
 = 
Ál£
;

3453 
	`upd©eOpcode
(
›code
);

3460 
	`addOpcode
(
›code
);

3464 
°©e
 = 
STATE_EDITOR
;

3469 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
gŸoNMíu
.
ch™geC™˚Àd
) {

3472 i‡(
s¸ìnIsInEdôMode
) {

3475 
s¸ìnIsInEdôMode
 = 
Ál£
;

3478 
°©e
 = 
STATE_EDITOR
;

3485 
°©e
 = 
STATE_ADD_MENU
;

3490 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

3491 
pokôto
->
di•œy
.
	`¥öt
(37, 
TITLE_Y
, "GOTO N");

3492 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_1
, "N: ");

3493 
gŸoNMíu
.
	`show
();

3498 
STATE_CALL_N_MENU
:

3501 
ˇŒNMíu
.
	`upd©e
();

3504 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

3507 i‡(
ˇŒNMíu
.
£À˘edIãm
 == 1) {

3510 i‡(
s¸ìnIsInEdôMode
) {

3513 
s¸ìnIsInEdôMode
 = 
Ál£
;

3516 
°©e
 = 
STATE_EDITOR
;

3523 
°©e
 = 
STATE_ADD_MENU
;

3528 i‡(
ˇŒNMíu
.
£À˘edIãm
 == 2) {

3531 
›code
 = (0x2 << 12Ë+ 
ˇŒNMíu
.
ôems
[0].
vÆue
;

3534 i‡(
s¸ìnIsInEdôMode
) {

3537 
s¸ìnIsInEdôMode
 = 
Ál£
;

3540 
	`upd©eOpcode
(
›code
);

3547 
	`addOpcode
(
›code
);

3551 
°©e
 = 
STATE_EDITOR
;

3556 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
ˇŒNMíu
.
ch™geC™˚Àd
) {

3559 i‡(
s¸ìnIsInEdôMode
) {

3562 
s¸ìnIsInEdôMode
 = 
Ál£
;

3565 
°©e
 = 
STATE_EDITOR
;

3572 
°©e
 = 
STATE_ADD_MENU
;

3577 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

3578 
pokôto
->
di•œy
.
	`¥öt
(37, 
TITLE_Y
, "CALL N");

3579 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_1
, "N: ");

3580 
ˇŒNMíu
.
	`show
();

3585 
STATE_IF_KEY_VX_MENU
:

3588 
ifKeyVxMíu
.
	`upd©e
();

3591 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

3594 i‡(
ifKeyVxMíu
.
£À˘edIãm
 == 1) {

3597 i‡(
s¸ìnIsInEdôMode
) {

3600 
s¸ìnIsInEdôMode
 = 
Ál£
;

3603 
°©e
 = 
STATE_EDITOR
;

3610 
°©e
 = 
STATE_ADD_MENU
;

3615 i‡(
ifKeyVxMíu
.
£À˘edIãm
 == 2) {

3618 
›code
 = (((0xE << 4Ë+ 
ifKeyVxMíu
.
ôems
[0].
vÆue
) << 8) +

3622 i‡(
s¸ìnIsInEdôMode
) {

3625 
s¸ìnIsInEdôMode
 = 
Ál£
;

3628 
	`upd©eOpcode
(
›code
);

3635 
	`addOpcode
(
›code
);

3639 
°©e
 = 
STATE_EDITOR
;

3644 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
ifKeyVxMíu
.
ch™geC™˚Àd
) {

3647 i‡(
s¸ìnIsInEdôMode
) {

3650 
s¸ìnIsInEdôMode
 = 
Ál£
;

3653 
°©e
 = 
STATE_EDITOR
;

3660 
°©e
 = 
STATE_ADD_MENU
;

3665 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

3666 
pokôto
->
di•œy
.
	`¥öt
(28, 
TITLE_Y
, "IF KEY VX");

3667 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_1
, "VX:");

3668 
ifKeyVxMíu
.
	`show
();

3673 
STATE_IF_NOT_KEY_VX_MENU
:

3676 
ifNŸKeyVxMíu
.
	`upd©e
();

3679 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

3682 i‡(
ifNŸKeyVxMíu
.
£À˘edIãm
 == 1) {

3685 i‡(
s¸ìnIsInEdôMode
) {

3688 
s¸ìnIsInEdôMode
 = 
Ál£
;

3691 
°©e
 = 
STATE_EDITOR
;

3698 
°©e
 = 
STATE_ADD_MENU
;

3703 i‡(
ifNŸKeyVxMíu
.
£À˘edIãm
 == 2) {

3706 
›code
 = (((0xE << 4Ë+ 
ifNŸKeyVxMíu
.
ôems
[0].
vÆue
) << 8) +

3710 i‡(
s¸ìnIsInEdôMode
) {

3713 
s¸ìnIsInEdôMode
 = 
Ál£
;

3716 
	`upd©eOpcode
(
›code
);

3723 
	`addOpcode
(
›code
);

3727 
°©e
 = 
STATE_EDITOR
;

3732 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
ifNŸKeyVxMíu
.
ch™geC™˚Àd
) {

3735 i‡(
s¸ìnIsInEdôMode
) {

3738 
s¸ìnIsInEdôMode
 = 
Ál£
;

3741 
°©e
 = 
STATE_EDITOR
;

3748 
°©e
 = 
STATE_ADD_MENU
;

3753 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

3754 
pokôto
->
di•œy
.
	`¥öt
(18, 
TITLE_Y
, "IF NOT KEY VX");

3755 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_1
, "VX:");

3756 
ifNŸKeyVxMíu
.
	`show
();

3761 
STATE_TIMER_MENU
:

3764 
timîMíu
.
	`upd©e
();

3767 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

3770 i‡(
timîMíu
.
£À˘edIãm
 == 1) {

3773 i‡(
s¸ìnIsInEdôMode
) {

3776 
s¸ìnIsInEdôMode
 = 
Ál£
;

3779 
°©e
 = 
STATE_EDITOR
;

3786 
°©e
 = 
STATE_ADD_MENU
;

3791 i‡(
timîMíu
.
£À˘edIãm
 == 2) {

3794 
›code
 = (((0xF << 4Ë+ 
timîMíu
.
ôems
[0].
vÆue
) << 8) +

3798 i‡(
s¸ìnIsInEdôMode
) {

3801 
s¸ìnIsInEdôMode
 = 
Ál£
;

3804 
	`upd©eOpcode
(
›code
);

3811 
	`addOpcode
(
›code
);

3815 
°©e
 = 
STATE_EDITOR
;

3820 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
timîMíu
.
ch™geC™˚Àd
) {

3823 i‡(
s¸ìnIsInEdôMode
) {

3826 
s¸ìnIsInEdôMode
 = 
Ál£
;

3829 
°©e
 = 
STATE_EDITOR
;

3836 
°©e
 = 
STATE_ADD_MENU
;

3841 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

3842 
pokôto
->
di•œy
.
	`¥öt
(27, 
TITLE_Y
, "TIMER = VX");

3843 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_1
, "VX:");

3844 
timîMíu
.
	`show
();

3849 
STATE_DATA_MENU
:

3852 
d©aMíu
.
	`upd©e
();

3855 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

3858 i‡(
d©aMíu
.
£À˘edIãm
 == 2) {

3861 i‡(
s¸ìnIsInEdôMode
) {

3864 
s¸ìnIsInEdôMode
 = 
Ál£
;

3867 
°©e
 = 
STATE_EDITOR
;

3874 
°©e
 = 
STATE_ADD_MENU
;

3879 i‡(
d©aMíu
.
£À˘edIãm
 == 3) {

3882 
›code
 = (
d©aMíu
.
ôems
[0].
vÆue
 << 8) +

3883 
d©aMíu
.
ôems
[1].
vÆue
;

3886 i‡(
s¸ìnIsInEdôMode
) {

3889 
s¸ìnIsInEdôMode
 = 
Ál£
;

3892 
	`upd©eOpcode
(
›code
);

3899 
	`addOpcode
(
›code
);

3903 
°©e
 = 
STATE_EDITOR
;

3908 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
d©aMíu
.
ch™geC™˚Àd
) {

3911 i‡(
s¸ìnIsInEdôMode
) {

3914 
s¸ìnIsInEdôMode
 = 
Ál£
;

3917 
°©e
 = 
STATE_EDITOR
;

3924 
°©e
 = 
STATE_ADD_MENU
;

3929 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

3930 
pokôto
->
di•œy
.
	`¥öt
(42, 
TITLE_Y
, "DATA");

3931 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_2
, "DATA 1: ");

3932 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_2_2
, "DATA 2: ");

3933 
d©aMíu
.
	`show
();

3938 
STATE_SAVEDEC_VX_MENU
:

3941 
ßveDecVxMíu
.
	`upd©e
();

3944 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

3947 i‡(
ßveDecVxMíu
.
£À˘edIãm
 == 1) {

3950 i‡(
s¸ìnIsInEdôMode
) {

3953 
s¸ìnIsInEdôMode
 = 
Ál£
;

3956 
°©e
 = 
STATE_EDITOR
;

3963 
°©e
 = 
STATE_ADD_MENU
;

3968 i‡(
ßveDecVxMíu
.
£À˘edIãm
 == 2) {

3971 
›code
 = (((0xF << 4Ë+ 
ßveDecVxMíu
.
ôems
[0].
vÆue
) << 8) +

3975 i‡(
s¸ìnIsInEdôMode
) {

3978 
s¸ìnIsInEdôMode
 = 
Ál£
;

3981 
	`upd©eOpcode
(
›code
);

3988 
	`addOpcode
(
›code
);

3992 
°©e
 = 
STATE_EDITOR
;

3997 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
ßveDecVxMíu
.
ch™geC™˚Àd
) {

4000 i‡(
s¸ìnIsInEdôMode
) {

4003 
s¸ìnIsInEdôMode
 = 
Ál£
;

4006 
°©e
 = 
STATE_EDITOR
;

4013 
°©e
 = 
STATE_ADD_MENU
;

4018 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

4019 
pokôto
->
di•œy
.
	`¥öt
(25, 
TITLE_Y
, "SAVEDEC VX");

4020 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_1
, "VX:");

4021 
ßveDecVxMíu
.
	`show
();

4026 
STATE_SOUNDTIMER_MENU
:

4029 
soundTimîMíu
.
	`upd©e
();

4032 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

4035 i‡(
soundTimîMíu
.
£À˘edIãm
 == 1) {

4038 i‡(
s¸ìnIsInEdôMode
) {

4041 
s¸ìnIsInEdôMode
 = 
Ál£
;

4044 
°©e
 = 
STATE_EDITOR
;

4051 
°©e
 = 
STATE_ADD_MENU
;

4056 i‡(
soundTimîMíu
.
£À˘edIãm
 == 2) {

4059 
›code
 = (((0xF << 4Ë+ 
soundTimîMíu
.
ôems
[0].
vÆue
) << 8) +

4063 i‡(
s¸ìnIsInEdôMode
) {

4066 
s¸ìnIsInEdôMode
 = 
Ál£
;

4069 
	`upd©eOpcode
(
›code
);

4076 
	`addOpcode
(
›code
);

4080 
°©e
 = 
STATE_EDITOR
;

4085 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
soundTimîMíu
.
ch™geC™˚Àd
) {

4088 i‡(
s¸ìnIsInEdôMode
) {

4091 
s¸ìnIsInEdôMode
 = 
Ál£
;

4094 
°©e
 = 
STATE_EDITOR
;

4101 
°©e
 = 
STATE_ADD_MENU
;

4106 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

4107 
pokôto
->
di•œy
.
	`¥öt
(12, 
TITLE_Y
, "SOUNDTIMER = VX");

4108 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_1
, "VX:");

4109 
soundTimîMíu
.
	`show
();

4114 
STATE_SAVE_V0_TO_VX_MENU
:

4117 
ßveV0ToVx
.
	`upd©e
();

4120 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

4123 i‡(
ßveV0ToVx
.
£À˘edIãm
 == 1) {

4126 i‡(
s¸ìnIsInEdôMode
) {

4129 
s¸ìnIsInEdôMode
 = 
Ál£
;

4132 
°©e
 = 
STATE_EDITOR
;

4139 
°©e
 = 
STATE_ADD_MENU
;

4144 i‡(
ßveV0ToVx
.
£À˘edIãm
 == 2) {

4147 
›code
 = (((0xF << 4Ë+ 
ßveV0ToVx
.
ôems
[0].
vÆue
) << 8) +

4151 i‡(
s¸ìnIsInEdôMode
) {

4154 
s¸ìnIsInEdôMode
 = 
Ál£
;

4157 
	`upd©eOpcode
(
›code
);

4164 
	`addOpcode
(
›code
);

4168 
°©e
 = 
STATE_EDITOR
;

4173 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
ßveV0ToVx
.
ch™geC™˚Àd
) {

4176 i‡(
s¸ìnIsInEdôMode
) {

4179 
s¸ìnIsInEdôMode
 = 
Ál£
;

4182 
°©e
 = 
STATE_EDITOR
;

4189 
°©e
 = 
STATE_ADD_MENU
;

4194 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

4195 
pokôto
->
di•œy
.
	`¥öt
(19, 
TITLE_Y
, "SAVE V0 TO VX");

4196 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_1
, "VX:");

4197 
ßveV0ToVx
.
	`show
();

4202 
STATE_LOAD_V0_TO_VX_MENU
:

4205 
lﬂdV0ToVx
.
	`upd©e
();

4208 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

4211 i‡(
lﬂdV0ToVx
.
£À˘edIãm
 == 1) {

4214 i‡(
s¸ìnIsInEdôMode
) {

4217 
s¸ìnIsInEdôMode
 = 
Ál£
;

4220 
°©e
 = 
STATE_EDITOR
;

4227 
°©e
 = 
STATE_ADD_MENU
;

4232 i‡(
lﬂdV0ToVx
.
£À˘edIãm
 == 2) {

4235 
›code
 = (((0xF << 4Ë+ 
lﬂdV0ToVx
.
ôems
[0].
vÆue
) << 8) +

4239 i‡(
s¸ìnIsInEdôMode
) {

4242 
s¸ìnIsInEdôMode
 = 
Ál£
;

4245 
	`upd©eOpcode
(
›code
);

4252 
	`addOpcode
(
›code
);

4256 
°©e
 = 
STATE_EDITOR
;

4261 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
lﬂdV0ToVx
.
ch™geC™˚Àd
) {

4264 i‡(
s¸ìnIsInEdôMode
) {

4267 
s¸ìnIsInEdôMode
 = 
Ál£
;

4270 
°©e
 = 
STATE_EDITOR
;

4277 
°©e
 = 
STATE_ADD_MENU
;

4282 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

4283 
pokôto
->
di•œy
.
	`¥öt
(19, 
TITLE_Y
, "LOAD V0 TO VX");

4284 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_1
, "VX:");

4285 
lﬂdV0ToVx
.
	`show
();

4290 
STATE_GOTO_N_PLUS_V0_MENU
:

4293 
gŸoNPlusV0Míu
.
	`upd©e
();

4296 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

4299 i‡(
gŸoNPlusV0Míu
.
£À˘edIãm
 == 1) {

4302 i‡(
s¸ìnIsInEdôMode
) {

4305 
s¸ìnIsInEdôMode
 = 
Ál£
;

4308 
°©e
 = 
STATE_EDITOR
;

4315 
°©e
 = 
STATE_ADD_MENU
;

4320 i‡(
gŸoNPlusV0Míu
.
£À˘edIãm
 == 2) {

4323 
›code
 = (0xB << 12Ë+ 
gŸoNPlusV0Míu
.
ôems
[0].
vÆue
;

4326 i‡(
s¸ìnIsInEdôMode
) {

4329 
s¸ìnIsInEdôMode
 = 
Ál£
;

4332 
	`upd©eOpcode
(
›code
);

4339 
	`addOpcode
(
›code
);

4343 
°©e
 = 
STATE_EDITOR
;

4348 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
Ë&& !
gŸoNPlusV0Míu
.
ch™geC™˚Àd
) {

4351 i‡(
s¸ìnIsInEdôMode
) {

4354 
s¸ìnIsInEdôMode
 = 
Ál£
;

4357 
°©e
 = 
STATE_EDITOR
;

4364 
°©e
 = 
STATE_ADD_MENU
;

4369 
pokôto
->
di•œy
.
	`døwRe˘
(
FRAME_X
, 
FRAME_Y
, 
FRAME_WIDTH
, 
FRAME_HEIGHT
);

4370 
pokôto
->
di•œy
.
	`¥öt
(25, 
TITLE_Y
, "GOTO N + V0");

4371 
pokôto
->
di•œy
.
	`¥öt
(
PARAM_X
, 
PARAM_Y_1_1
, "N: ");

4372 
gŸoNPlusV0Míu
.
	`show
();

4381 
	}
}

4386 
uöt8_t
 
	gCHIP8Pœyî
::
	$gëOpcodeIndex
(
uöt16_t
 
›code
) {

4388 
uöt8_t
 
›codeIndex
 = 0;

4389 
uöt8_t
 
›codeIndexFound
 = 0;

4391 
›codeIndex
=0; opcodeIndex<
OPCODES_COUNT
; opcodeIndex++) {

4393 i‡((
›code
&
›codesMasks
[
›codeIndex
]Ë=
›codesIds
[opcodeIndex]) {

4395 
›codeIndexFound
 = 
›codeIndex
;

4400  
›codeIndexFound
;

4401 
	}
}

4406 
uöt16_t
 
	gCHIP8Pœyî
::
	$gëOpcode
(
uöt16_t
 
memAddªss
) {

4408  (
mem
[
memAddªss
] <<8) + mem[memAddress + 1];

4409 
	}
}

4414 
	gCHIP8Pœyî
::
	$addOpcode
(
uöt16_t
 
›code
) {

4416 
uöt16_t
 
i
;

4417 
uöt16_t
 
memAddªss
;

4419 
memAddªss
 = 
fú°In°ru˘i⁄ToShow
 + (
edô‹Võw
.
£À˘edIãm
 << 
MULTIPLY_BY_2
);

4421 i‡(
romSize
 == 0) {

4423 
mem
[
ROM_START
] = 
›code
 >> 8;

4424 
mem
[
ROM_START
 + 1] = 
›code
 & 255;

4426 
romSize
 += 2;

4428 
edô‹Võw
.
	`addIãm
("");

4430 
	`upd©eEdô‹Võw
();

4433 i‡(
ROM_START
 + 
romSize
 < 
MEM_SIZE
) {

4435 
i
=
ROM_START
+
romSize
-2; i>
memAddªss
; i-=2) {

4437 
mem
[
i
+2] = mem[i];

4438 
mem
[
i
+3] = mem[i+1];

4441 
mem
[
memAddªss
 + 2] = 
›code
 >> 8;

4442 
mem
[
memAddªss
 + 3] = 
›code
 & 255;

4444 
romSize
 += 2;

4446 i‡(
edô‹Võw
.
ôemsCou¡
 < 9) {

4448 
edô‹Võw
.
	`addIãm
("");

4451 
edô‹Võw
.
£À˘edIãm
++;

4452 i‡(
edô‹Võw
.
£À˘edIãm
 > 
LAST_EDITOR_LINE
) {

4454 
fú°In°ru˘i⁄ToShow
 += 2;

4455 
edô‹Võw
.
£À˘edIãm
 = 
LAST_EDITOR_LINE
;

4458 
	`upd©eEdô‹Võw
();

4460 
	}
}

4465 
	gCHIP8Pœyî
::
	$dñëeOpcode
() {

4467 
uöt16_t
 
i
;

4468 
uöt16_t
 
memAddªss
;

4470 
memAddªss
 = 
fú°In°ru˘i⁄ToShow
 + (
edô‹Võw
.
£À˘edIãm
 << 
MULTIPLY_BY_2
);

4472 i‡(
romSize
 > 0) {

4474 
i
=
memAddªss
; i<
ROM_START
+
romSize
-3; i+=2) {

4476 
mem
[
i
] = mem[i+2];

4477 
mem
[
i
+1] = mem[i+3];

4480 
romSize
 -= 2;

4483 i‡(
romSize
 < (
EDITOR_HEIGHT
 << 
MULTIPLY_BY_2
)) {

4485 
edô‹Võw
.
	`ªmoveIãm
”dô‹Võw.
£À˘edIãm
);

4489 i‡((
ROM_START
 + 
romSize
Ë- 
fú°In°ru˘i⁄ToShow
 < (
EDITOR_HEIGHT
 << 
MULTIPLY_BY_2
) && firstInstructionToShow > ROM_START) {

4491 
fú°In°ru˘i⁄ToShow
 -= 2;

4493 i‡(
edô‹Võw
.
£À˘edIãm
 < 
LAST_EDITOR_LINE
) {

4495 
edô‹Võw
.
£À˘edIãm
++;

4499 
	`upd©eEdô‹Võw
();

4500 
	}
}

4505 
	gCHIP8Pœyî
::
	$upd©eOpcode
(
uöt16_t
 
›code
) {

4507 
uöt16_t
 
memAddªss
;

4509 
memAddªss
 = 
fú°In°ru˘i⁄ToShow
 + (
edô‹Võw
.
£À˘edIãm
 << 
MULTIPLY_BY_2
);

4511 
mem
[
memAddªss
] = 
›code
 >> 8;

4512 
mem
[
memAddªss
 + 1] = 
›code
 & 255;

4514 
	`upd©eEdô‹Võw
();

4515 
	}
}

4520 
	gCHIP8Pœyî
::
	$moveOpcodeUp
() {

4522 
uöt8_t
 
ãmpByã1
;

4523 
uöt8_t
 
ãmpByã2
;

4524 
uöt16_t
 
memAddªss
;

4526 
memAddªss
 = 
fú°In°ru˘i⁄ToShow
 + (
edô‹Võw
.
£À˘edIãm
 << 
MULTIPLY_BY_2
);

4528 i‡(
memAddªss
 > 
ROM_START
 + 1) {

4530 
ãmpByã1
 = 
mem
[
memAddªss
 - 2];

4531 
ãmpByã2
 = 
mem
[
memAddªss
 - 1];

4533 
mem
[
memAddªss
 - 2] = mem[memAddress];

4534 
mem
[
memAddªss
 - 1] = mem[memAddress + 1];

4536 
mem
[
memAddªss
] = 
ãmpByã1
;

4537 
mem
[
memAddªss
 + 1] = 
ãmpByã2
;

4539 
edô‹Võw
.
£À˘edIãm
--;

4540 i‡(
edô‹Võw
.
£À˘edIãm
 == 65535) {

4542 
fú°In°ru˘i⁄ToShow
 -= 2;

4543 
edô‹Võw
.
£À˘edIãm
 = 
FIRST_EDITOR_LINE
;

4546 
	`upd©eEdô‹Võw
();

4548 
	}
}

4553 
	gCHIP8Pœyî
::
	$moveOpcodeDown
() {

4555 
uöt8_t
 
ãmpByã1
;

4556 
uöt8_t
 
ãmpByã2
;

4557 
uöt16_t
 
memAddªss
;

4559 
memAddªss
 = 
fú°In°ru˘i⁄ToShow
 + (
edô‹Võw
.
£À˘edIãm
 << 
MULTIPLY_BY_2
);

4561 i‡(
memAddªss
 < 
ROM_START
 + 
romSize
 - 3) {

4563 
ãmpByã1
 = 
mem
[
memAddªss
 + 2];

4564 
ãmpByã2
 = 
mem
[
memAddªss
 + 3];

4566 
mem
[
memAddªss
 + 2] = mem[memAddress];

4567 
mem
[
memAddªss
 + 3] = mem[memAddress + 1];

4569 
mem
[
memAddªss
] = 
ãmpByã1
;

4570 
mem
[
memAddªss
 + 1] = 
ãmpByã2
;

4572 
edô‹Võw
.
£À˘edIãm
++;

4573 i‡(
edô‹Võw
.
£À˘edIãm
 > 
LAST_EDITOR_LINE
) {

4575 
fú°In°ru˘i⁄ToShow
 += 2;

4576 
edô‹Võw
.
£À˘edIãm
 = 
LAST_EDITOR_LINE
;

4579 
	`upd©eEdô‹Võw
();

4581 
	}
}

4587 
	gCHIP8Pœyî
::
	$£tPixñ
(
uöt8_t
 
x
, uöt8_à
y
, uöt8_à
cﬁ‹
) {

4589 
uöt16_t
 
pixñPosInS¸ìn
 = 0;

4590 
uöt16_t
 
pixñByãPosInS¸ìn
 = 0;

4591 
uöt8_t
 
pixñByã
 = 0;

4592 
uöt8_t
 
pixñPosInPixñByã
 = 0;

4593 
uöt8_t
 
pixñByãShi·
 = 0;

4594 
uöt8_t
 
pixñByãMask
 = 0;

4595 
uöt8_t
 
√wPixñByã
 = 0;

4597 
pixñPosInS¸ìn
 = 
y
 * 
s¸ìnWidth
 + 
x
;

4598 
pixñByãPosInS¸ìn
 = 
pixñPosInS¸ìn
 >> 
DIVIDE_BY_2
;

4599 
pixñByã
 = 
s¸ìn
[
pixñByãPosInS¸ìn
];

4600 
pixñPosInPixñByã
 = 
pixñPosInS¸ìn
 & 1;

4603 
pixñByãShi·
 = 
pixñPosInPixñByã
 << 
MULTIPLY_BY_4
;

4604 
pixñByãMask
 = 15 << 
pixñByãShi·
;

4605 
√wPixñByã
 = 
pixñByã
 & 
pixñByãMask
;

4608 
pixñByãShi·
 = (1 - 
pixñPosInPixñByã
Ë<< 
MULTIPLY_BY_4
;

4609 
√wPixñByã
 =ÇewPixñByã | (
cﬁ‹
 << 
pixñByãShi·
);

4611 
s¸ìn
[
pixñByãPosInS¸ìn
] = 
√wPixñByã
;

4612 
	}
}

4617 
uöt8_t
 
	gCHIP8Pœyî
::
	$gëPixñ
(
uöt8_t
 
x
, uöt8_à
y
) {

4619 
uöt16_t
 
pixñPosInS¸ìn
 = 0;

4620 
uöt16_t
 
pixñByãPosInS¸ìn
 = 0;

4621 
uöt8_t
 
pixñByã
 = 0;

4622 
uöt8_t
 
pixñPosInPixñByã
 = 0;

4623 
uöt8_t
 
pixñByãShi·
 = 0;

4624 
uöt8_t
 
pixñ
 = 0;

4626 
pixñPosInS¸ìn
 = 
y
 * 
s¸ìnWidth
 + 
x
;

4627 
pixñByãPosInS¸ìn
 = 
pixñPosInS¸ìn
 >> 
DIVIDE_BY_2
;

4628 
pixñByã
 = 
s¸ìn
[
pixñByãPosInS¸ìn
];

4629 
pixñPosInPixñByã
 = 
pixñPosInS¸ìn
 & 1;

4630 
pixñByãShi·
 = (1 - 
pixñPosInPixñByã
Ë<< 
MULTIPLY_BY_4
;

4631 
pixñ
 = (
pixñByã
 >> 
pixñByãShi·
) & 15;

4633  
pixñ
;

4634 
	}
}

4639 
	gCHIP8Pœyî
::
	$˛órS¸ìn
() {

4641 
uöt16_t
 
i
;

4643 
i
=0; i<
SCREEN_LENGTH
; i++) {

4645 
s¸ìn
[
i
] = 0;

4647 
	}
}

4652 
	gCHIP8Pœyî
::
	$døwS¸ìn
() {

4654 
uöt8_t
 
x
;

4655 
uöt8_t
 
y
;

4657 
pokôto
->
di•œy
.
cﬁ‹
 = 0;

4658 
pokôto
->
di•œy
.
	`fûlRe˘
(0, 0, 
s¸ìnWidth
, 
s¸ìnHeight
);

4659 
pokôto
->
di•œy
.
cﬁ‹
 = 1;

4661 
y
=0; y<
s¸ìnHeight
; y++) {

4663 
x
=0; x<
s¸ìnWidth
; x++) {

4665 
pokôto
->
di•œy
.
	`døwPixñ
(
x
, 
y
, 
	`gëPixñ
(x, y));

4668 
	}
}

4673 
	gCHIP8Pœyî
::
	$døwS¥ôe
(
uöt8_t
 
x
, uöt8_à
y
, uöt8_à
height
) {

4675 
uöt16_t
 
memIndex
 = 0;

4676 
uöt8_t
 
byã
 = 0;

4677 
uöt8_t
 
mask
 = 0;

4678 
uöt8_t
 
bô
 = 0;

4679 
uöt8_t
 
bôShi·
 = 0;

4680 
uöt8_t
 
pixñY
 = 
y
;

4681 
uöt8_t
 
i
;

4683 
V
[0xF] = 0;

4686 
memIndex
=
I
; memIndex<I+
height
; memIndex++) {

4689 
byã
 = 
mem
[
memIndex
];

4690 
mask
 = 128;

4693 
i
=0; i<8; i++) {

4696 
bôShi·
 = 7 - 
i
;

4697 
bô
 = (
byã
 & 
mask
Ë>> 
bôShi·
;

4700 i‡(
bô
) {

4703 i‡(
	`gëPixñ
(
x
 + 
i
, 
pixñY
)) {

4706 
V
[0xF] = 1;

4709 
	`£tPixñ
(
x
 + 
i
, 
pixñY
, 0);

4716 
	`£tPixñ
(
x
 + 
i
, 
pixñY
, 1);

4722 
mask
 = mask >> 1;

4726 
pixñY
++;

4728 
	}
}

4739 
	gCHIP8Pœyî
::
	$ªadKeys
() {

4741 
uöt8_t
 
i
;

4743 
i
=0; i<16; i++) {

4745 
keys
[
i
] = 0;

4749 i‡(
pokôto
->
	`bBä
()Ë
keys
[0] = 1;

4750 i‡(
pokôto
->
	`upBä
()Ë
keys
[2] = 1;

4751 i‡(
pokôto
->
	`À·Bä
()Ë
keys
[4] = 1;

4752 i‡(
pokôto
->
	`aBä
()Ë
keys
[5] = 1;

4753 i‡(
pokôto
->
	`rightBä
()Ë
keys
[6] = 1;

4754 i‡(
pokôto
->
	`downBä
()Ë
keys
[8] = 1;

4755 
	}
}

4760 
	gCHIP8Pœyî
::
	$ªadOpcode
() {

4762 
uöt16_t
 
›code
 = 0;

4763 
uöt8_t
 
›codeIndex
 = 0;

4764 
uöt8_t
 
›codeP¨t3
 = 0;

4765 
uöt8_t
 
›codeP¨t2
 = 0;

4766 
uöt8_t
 
›codeP¨t1
 = 0;

4767 
uöt16_t
 
ãmp
 = 0;

4768 
uöt8_t
 
i
;

4770 
›code
 = (
mem
[
PC
]<<8) + mem[PC+1];

4773 
›codeIndex
 = 
	`gëOpcodeIndex
(
›code
);

4776 
›codeP¨t3
 = (
›code
 & 0x0F00) >> 8;

4777 
›codeP¨t2
 = (
›code
 & 0x00F0) >> 4;

4778 
›codeP¨t1
 = 
›code
 & 0x000F;

4781 
›codeIndex
) {

4791 
	`˛órS¸ìn
();

4797 i‡(
°ackLígth
 > 0) {

4799 
PC
 = 
°ack
[
°ackLígth
 - 1];

4800 
°ackLígth
--;

4804 
	`¥ötf
("InvalidÑeturn from subroutine,ÇoÑeturningáddress from stack !\n");

4805 
PC
 -= 2;

4812 
PC
 = (
›codeP¨t3
 << 8Ë+ (
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
;

4813 
PC
 -= 2;

4819 
°ack
[
°ackLígth
] = 
PC
;

4820 
°ackLígth
++;

4821 
PC
 = (
›codeP¨t3
 << 8Ë+ (
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
;

4822 
PC
 -= 2;

4828 i‡(
V
[
›codeP¨t3
] =((
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
)) {

4830 
PC
 += 2;

4837 i‡(
V
[
›codeP¨t3
] !((
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
)) {

4839 
PC
 += 2;

4846 i‡(
V
[
›codeP¨t3
] =V[
›codeP¨t2
]) {

4848 
PC
 += 2;

4855 
V
[
›codeP¨t3
] = (
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
;

4861 
V
[
›codeP¨t3
] +((
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
);

4867 
V
[
›codeP¨t3
] = V[
›codeP¨t2
];

4873 
V
[
›codeP¨t3
] = V[›codeP¨t3] | V[
›codeP¨t2
];

4879 
V
[
›codeP¨t3
] = V[›codeP¨t3] & V[
›codeP¨t2
];

4885 
V
[
›codeP¨t3
] = V[›codeP¨t3] ^ V[
›codeP¨t2
];

4891 
V
[0xF] = 0;

4892 
ãmp
 = 
V
[
›codeP¨t3
] + V[
›codeP¨t2
];

4893 i‡(
ãmp
 > 255) {

4895 
V
[0xF] = 1;

4897 
V
[
›codeP¨t3
] = 
ãmp
 & 0xFF;

4903 i‡(
V
[
›codeP¨t3
] < V[
›codeP¨t2
]) {

4905 
V
[0xF] = 0;

4909 
V
[0xF] = 1;

4911 
V
[
›codeP¨t3
] -V[
›codeP¨t2
];

4918 
V
[0xF] = V[
›codeP¨t3
] & 0x01;

4919 
V
[
›codeP¨t3
] = V[opcodePart3] >> 1;

4925 i‡(
V
[
›codeP¨t2
] < V[
›codeP¨t3
]) {

4927 
V
[0xF] = 0;

4931 
V
[0xF] = 1;

4933 
V
[
›codeP¨t3
] = V[
›codeP¨t2
] - V[opcodePart3];

4940 
V
[0xF] = V[
›codeP¨t3
] >> 7;

4941 
V
[
›codeP¨t3
] = V[opcodePart3] << 1;

4947 i‡(
V
[
›codeP¨t3
] !V[
›codeP¨t2
]) {

4949 
PC
 += 2;

4956 
I
 = (
›codeP¨t3
 << 8Ë+ (
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
;

4962 
PC
 = (
›codeP¨t3
 << 8Ë+ (
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
 + 
V
[0];

4963 
PC
 -= 2;

4969 
V
[
›codeP¨t3
] = 
	`øndom
(255Ë& ((
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
);

4976 
	`døwS¥ôe
(
V
[
›codeP¨t3
], V[
›codeP¨t2
], 
›codeP¨t1
);

4983 if(
keys
[
V
[
›codeP¨t3
]] == 1) {

4985 
PC
 += 2;

4993 if(
keys
[
V
[
›codeP¨t3
]] == 0) {

4995 
PC
 += 2;

5002 
V
[
›codeP¨t3
] = 
dñayTimî
;

5010 
keyPªs£d
 = 
Ál£
;

5011 
i
=0; i<16; i++) {

5014 i‡(
keys
[
i
] == 1) {

5017 
V
[
›codeP¨t3
] = 
i
;

5019 
keyPªs£d
 = 
åue
;

5024 i‡(!
keyPªs£d
) {

5026 
PC
 -= 2;

5033 
dñayTimî
 = 
V
[
›codeP¨t3
];

5039 
soundTimî
 = 
V
[
›codeP¨t3
];

5045 
V
[0xF] = 0;

5046 
ãmp
 = 
I
 + 
V
[
›codeP¨t3
];

5047 i‡(
ãmp
 > 0xFFF) {

5049 
V
[0xF] = 1;

5051 
I
 = 
ãmp
 & 0xFFF;

5057 
I
 = 
V
[
›codeP¨t3
] * 5;

5063 
mem
[
I
] = (
uöt8_t
Ë(
V
[
›codeP¨t3
] / 100);

5064 
mem
[
I
 + 1] = (
uöt8_t
Ë((
V
[
›codeP¨t3
] % 100) / 10);

5065 
mem
[
I
 + 2] = (
uöt8_t
Ë((
V
[
›codeP¨t3
] % 100) % 10);

5071 
i
=0; i<=
›codeP¨t3
; i++) {

5073 
mem
[
I
 + 
i
] = 
V
[i];

5080 
i
=0; i<=
›codeP¨t3
; i++) {

5082 
V
[
i
] = 
mem
[
I
 + i];

5088 
	`¥ötf
("Unknow¿›codê%x foundáàaddªs†%d !\n", 
›code
, 
PC
);

5091 
PC
 += 2;

5093 i‡(
PC
 >
MEM_SIZE
) {

5095 
PC
 = 
MEM_SIZE
 - 2;

5097 
	}
}

5102 
	gCHIP8Pœyî
::
	$gëOpcodeSour˚
(*
›codeSour˚
, 
uöt16_t
 
memAddªss
) {

5104 
uöt16_t
 
›code
 = 0;

5105 
uöt8_t
 
›codeIndex
 = 0;

5106 
uöt8_t
 
›codeP¨t3
 = 0;

5107 
uöt8_t
 
›codeP¨t2
 = 0;

5108 
uöt8_t
 
›codeP¨t1
 = 0;

5109 
uöt16_t
 
ãmp
 = 0;

5111 
›code
 = (
mem
[
memAddªss
]<<8) + mem[memAddress+1];

5116 
›codeP¨t3
 = (
›code
 & 0x0F00) >> 8;

5117 
›codeP¨t2
 = (
›code
 & 0x00F0) >> 4;

5118 
›codeP¨t1
 = 
›code
 & 0x000F;

5120 
›codeIndex
 = 
	`gëOpcodeIndex
(
›code
);

5122 
›codeIndex
) {

5127 
	`•rötf
(
›codeSour˚
, "%04u DATA %d %d\n", 
memAddªss
, (
›code
 >> 8), (opcode & 255));

5133 
	`•rötf
(
›codeSour˚
, "%04u CLS\n", 
memAddªss
);

5139 
	`•rötf
(
›codeSour˚
, "%04u RETURN\n", 
memAddªss
);

5145 
ãmp
 = (
›codeP¨t3
 << 8Ë+ (
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
;

5146 
	`•rötf
(
›codeSour˚
, "%04u GOTO %d\n", 
memAddªss
, 
ãmp
);

5152 
ãmp
 = (
›codeP¨t3
 << 8Ë+ (
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
;

5153 
	`•rötf
(
›codeSour˚
, "%04u CALL %d\n", 
memAddªss
, 
ãmp
);

5159 
	`•rötf
(
›codeSour˚
, "%04u IF V%d !%d\n", 
memAddªss
, 
›codeP¨t3
, ((
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
));

5165 
	`•rötf
(
›codeSour˚
, "%04u IF V%d =%d\n", 
memAddªss
, 
›codeP¨t3
, ((
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
));

5171 
	`•rötf
(
›codeSour˚
, "%04u IF V%d !V%d\n", 
memAddªss
, 
›codeP¨t3
, 
›codeP¨t2
);

5177 
	`•rötf
(
›codeSour˚
, "%04u V%d = %d\n", 
memAddªss
, 
›codeP¨t3
, ((
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
));

5183 
	`•rötf
(
›codeSour˚
, "%04u V%d = V%d + %d\n", 
memAddªss
, 
›codeP¨t3
, opcodeP¨t3, ((
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
));

5189 
	`•rötf
(
›codeSour˚
, "%04u V%d = V%d\n", 
memAddªss
, 
›codeP¨t3
, 
›codeP¨t2
);

5196 
	`•rötf
(
›codeSour˚
, "%04u V%d = V%d OR V%d\n", 
memAddªss
, 
›codeP¨t3
, opcodeP¨t3, 
›codeP¨t2
);

5202 
	`•rötf
(
›codeSour˚
, "%04u V%d = V%d AND V%d\n", 
memAddªss
, 
›codeP¨t3
, opcodeP¨t3, 
›codeP¨t2
);

5208 
	`•rötf
(
›codeSour˚
, "%04u V%d = V%d XOR V%d\n", 
memAddªss
, 
›codeP¨t3
, opcodeP¨t3, 
›codeP¨t2
);

5214 
	`•rötf
(
›codeSour˚
, "%04u V%d = V%d + V%d\n", 
memAddªss
, 
›codeP¨t3
, opcodeP¨t3, 
›codeP¨t2
);

5220 
	`•rötf
(
›codeSour˚
, "%04u V%d = V%d - V%d\n", 
memAddªss
, 
›codeP¨t3
, opcodeP¨t3, 
›codeP¨t2
);

5226 
	`•rötf
(
›codeSour˚
, "%04u V%d = V%d >> 1\n", 
memAddªss
, 
›codeP¨t3
, opcodePart3);

5232 
	`•rötf
(
›codeSour˚
, "%04u V%d = V%d - V%d\n", 
memAddªss
, 
›codeP¨t3
, 
›codeP¨t2
, opcodePart3);

5238 
	`•rötf
(
›codeSour˚
, "%04u V%d = V%d << 1\n", 
memAddªss
, 
›codeP¨t3
, opcodePart3);

5244 
	`•rötf
(
›codeSour˚
, "%04u IF V%d =V%d\n", 
memAddªss
, 
›codeP¨t3
, 
›codeP¨t2
);

5250 
	`•rötf
(
›codeSour˚
, "%04u I = %d\n", 
memAddªss
, ((
›codeP¨t3
 << 8Ë+ (
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
));

5256 
	`•rötf
(
›codeSour˚
, "%04u GOTO %d + V0\n", 
memAddªss
, ((
›codeP¨t3
 << 8Ë+ (
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
));

5262 
	`•rötf
(
›codeSour˚
, "%04u V%d = RANDOM 0 TO %d\n", 
memAddªss
, 
›codeP¨t3
, ((
›codeP¨t2
 << 4Ë+ 
›codeP¨t1
));

5268 
	`•rötf
(
›codeSour˚
, "%04u SPRITE V%d V%d %d\n", 
memAddªss
, 
›codeP¨t3
, 
›codeP¨t2
, 
›codeP¨t1
);

5274 
	`•rötf
(
›codeSour˚
, "%04u IF NOT KEY V%d\n", 
memAddªss
, 
›codeP¨t3
);

5281 
	`•rötf
(
›codeSour˚
, "%04u IF KEY V%d\n", 
memAddªss
, 
›codeP¨t3
);

5287 
	`•rötf
(
›codeSour˚
, "%04u V%d = TIMER\n", 
memAddªss
, 
›codeP¨t3
);

5293 
	`•rötf
(
›codeSour˚
, "%04u V%d = READ KEY\n", 
memAddªss
, 
›codeP¨t3
);

5299 
	`•rötf
(
›codeSour˚
, "%04u TIMER = V%d\n", 
memAddªss
, 
›codeP¨t3
);

5305 
	`•rötf
(
›codeSour˚
, "%04u SOUNDTIMER = V%d\n", 
memAddªss
, 
›codeP¨t3
);

5311 
	`•rötf
(
›codeSour˚
, "%04u I = I + V%d\n", 
memAddªss
, 
›codeP¨t3
);

5317 
	`•rötf
(
›codeSour˚
, "%04u I = CHAR V%d\n", 
memAddªss
, 
›codeP¨t3
);

5323 
	`•rötf
(
›codeSour˚
, "%04u SAVEDEC V%d\n", 
memAddªss
, 
›codeP¨t3
);

5329 
	`•rötf
(
›codeSour˚
, "%04u SAVE V0 TO V%d\n", 
memAddªss
, 
›codeP¨t3
);

5335 
	`•rötf
(
›codeSour˚
, "%04u LOAD V0 TO V%d\n", 
memAddªss
, 
›codeP¨t3
);

5341 
	`•rötf
(
›codeSour˚
, "%04u DATA %d %d\n", 
memAddªss
, (
›code
 >> 8), (opcode & 255));

5343 
	}
}

5348 
	gCHIP8Pœyî
::
	$upd©eEdô‹Võw
() {

5350 
uöt8_t
 
i
;

5351 
›codeSour˚
[32];

5353 
i
=0; i<
edô‹Võw
.
ôemsCou¡
; i++) {

5355 
	`gëOpcodeSour˚
(
›codeSour˚
, 
fú°In°ru˘i⁄ToShow
+
i
*2);

5356 
	`°r˝y
(
edô‹Võw
.
ôems
[
i
].
ãxt
, 
›codeSour˚
);

5358 
	}
}

5363 
	gCHIP8Pœyî
::
	$dumpRomSour˚
() {

5365 
uöt16_t
 
memAddªss
;

5366 
›codeSour˚
[32];

5368 
memAddªss
=
ROM_START
; memAddªss<ROM_START+
romSize
; memAddress+=2) {

5370 
	`gëOpcodeSour˚
(
›codeSour˚
, 
memAddªss
);

5371 
	`¥ötf
(
›codeSour˚
);

5373 
	}
}

5378 
uöt16_t
 
	gCHIP8Pœyî
::
	$lﬂdRom
(*
romP©h
) {

5381 
uöt16_t
 
romFûeLígth
;

5382 
uöt16_t
 
›codesCou¡
;

5383 
uöt8_t
 
maxIãms
;

5384 
uöt16_t
 
i
;

5398 i‡(
	`fûeO≥n
(
romP©h
,
FILE_MODE_BINARY
)) {

5405 
	`fûeEnd
();

5407 
romFûeLígth
 = 
	`fûeGëPosôi⁄
();

5409 
	`fûeRewöd
();

5410 i‡(!
romFûeLígth
) {

5413 
	`fûeClo£
();

5417 
	`öôEdô‹
();

5420 
i
=0; i<
romFûeLígth
; i++) {

5422 
mem
[
i
+
ROM_START
] = 
	`fûeGëCh¨
();

5424 
romSize
 = 
romFûeLígth
;

5427 
	`fûeClo£
();

5430 
›codesCou¡
 = 
romFûeLígth
 >> 
DIVIDE_BY_2
;

5431 i‡(
›codesCou¡
 > 
EDITOR_HEIGHT
) {

5433 
maxIãms
 = 9;

5437 
maxIãms
 = 
›codesCou¡
;

5441 
i
=0; i<
maxIãms
; i++) {

5443 
edô‹Võw
.
	`addIãm
("");

5446 
	`upd©eEdô‹Võw
();

5448  
romSize
;

5449 
	}
}

5454 
uöt8_t
 
	gCHIP8Pœyî
::
	$ßveU£rRom
() {

5456 
FILE
 *
romFûe
;

5457 
uöt16_t
 
i
;

5460 
romFûe
 = 
	`f›í
("chip8rom/UserRom.ch8", "wb");

5461 i‡(!
romFûe
) {

5463 
	`Ârötf
(
°dîr
, "UnableÅo open userÑom.");

5468 
i
=
ROM_START
; i<ROM_START+
romSize
; i++) {

5470 
	`Âutc
(
mem
[
i
], 
romFûe
);

5474 
	`f˛o£
(
romFûe
);

5477 
	}
}

5482 
uöt16_t
 
	gCHIP8Pœyî
::
	$lﬂdU£rRom
() {

5485 
uöt16_t
 
romFûeLígth
;

5486 
uöt16_t
 
›codesCou¡
;

5487 
uöt8_t
 
maxIãms
;

5488 
uöt16_t
 
i
;

5494 if(
	`fûeO≥n
("chù8rom/U£rRom.ch8",
FILE_MODE_BINARY
)) {

5501 
	`fûeEnd
();

5502 
romFûeLígth
 = 
	`fûeGëPosôi⁄
();

5504 
	`fûeRewöd
();

5505 i‡(!
romFûeLígth
) {

5508 
	`fûeClo£
();

5512 
	`öôEdô‹
();

5515 
i
=0; i<
romFûeLígth
; i++) {

5517 
mem
[
i
+
ROM_START
] = 
	`fûeGëCh¨
();

5519 
romSize
 = 
romFûeLígth
;

5521 
	`fûeClo£
();

5524 
›codesCou¡
 = 
romFûeLígth
 >> 
DIVIDE_BY_2
;

5525 i‡(
›codesCou¡
 > 
EDITOR_HEIGHT
) {

5527 
maxIãms
 = 9;

5531 
maxIãms
 = 
›codesCou¡
;

5535 
i
=0; i<
maxIãms
; i++) {

5537 
edô‹Võw
.
	`addIãm
("");

5540 
	`upd©eEdô‹Võw
();

5542  
romSize
;

5543 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Chip8\CHIP8Player.h

24 #i‚de‡
CHIP8_PLAYER_H


25 
	#CHIP8_PLAYER_H


	)

27 
	~"pokôto.h
"

28 
	~"Li°Box.h
"

29 
	~"FõldsLi°.h
"

31 
	#DIVIDE_BY_2
 1

	)

32 
	#DIVIDE_BY_8
 3

	)

33 
	#MULTIPLY_BY_2
 1

	)

34 
	#MULTIPLY_BY_4
 2

	)

36 
	#MEM_SIZE
 4096

	)

37 
	#ROM_START
 512

	)

38 
	#MAX_ROM_SIZE
 3584

39 
	#OPCODES_COUNT
 35

	)

40 
	#CHIP8_SCREEN_WIDTH
 64

	)

41 
	#CHIP8_SCREEN_HEIGHT
 32

	)

42 
	#POKITTO_SCREEN_WIDTH
 110

	)

43 
	#POKITTO_SCREEN_HEIGHT
 88

	)

44 
	#SCREEN_LENGTH
 4840

45 

	)

46 
	#STATE_MAIN_MENU
 0

	)

47 
	#STATE_SETTINGS
 1

	)

48 
	#STATE_EDITOR
 2

	)

49 
	#STATE_GAME
 3

	)

50 
	#STATE_CONTEXT_MENU
 4

	)

51 
	#STATE_ADD_MENU
 5

	)

53 
	#STATE_VX_EQUALS_MENU
 6

	)

54 
	#STATE_VX_EQUALS_N_MENU
 7

	)

55 
	#STATE_VX_EQUALS_VY_MENU
 8

	)

56 
	#STATE_VX_PLUS_N_MENU
 9

	)

57 
	#STATE_VX_PLUS_VY_MENU
 10

	)

58 
	#STATE_VX_MINUS_VY_MENU
 11

	)

59 
	#STATE_VY_MINUS_VX_MENU
 12

	)

60 
	#STATE_VX_AND_VY_MENU
 13

	)

61 
	#STATE_VX_OR_VY_MENU
 14

	)

62 
	#STATE_VX_XOR_VY_MENU
 15

	)

63 
	#STATE_VX_LEFTSHIFT_MENU
 16

	)

64 
	#STATE_VX_RIGHTSHIFT_MENU
 17

	)

65 
	#STATE_VX_RANDOM_MENU
 18

	)

66 
	#STATE_VX_TIMER_MENU
 19

	)

67 
	#STATE_VX_READKEY_MENU
 20

	)

69 
	#STATE_I_EQUALS_MENU
 21

	)

70 
	#STATE_I_EQUALS_N_MENU
 22

	)

71 
	#STATE_I_EQUALS_CHAR_VX_MENU
 23

	)

72 
	#STATE_I_PLUS_VX_MENU
 24

	)

74 
	#STATE_SPRITE_MENU
 25

	)

76 
	#STATE_IF_VX_MENU
 26

	)

77 
	#STATE_IF_VX_EQUALS_N_MENU
 27

	)

78 
	#STATE_IF_VX_EQUALS_VY_MENU
 28

	)

79 
	#STATE_IF_VX_NOT_EQUALS_N_MENU
 29

	)

80 
	#STATE_IF_VX_NOT_EQUALS_VY_MENU
 30

	)

82 
	#STATE_GOTO_N_MENU
 31

	)

83 
	#STATE_CALL_N_MENU
 32

	)

84 
	#STATE_IF_KEY_VX_MENU
 33

	)

85 
	#STATE_IF_NOT_KEY_VX_MENU
 34

	)

86 
	#STATE_TIMER_MENU
 35

	)

87 
	#STATE_DATA_MENU
 36

	)

88 
	#STATE_SAVEDEC_VX_MENU
 37

	)

89 
	#STATE_SOUNDTIMER_MENU
 38

	)

90 
	#STATE_SAVE_V0_TO_VX_MENU
 39

	)

91 
	#STATE_LOAD_V0_TO_VX_MENU
 40

	)

92 
	#STATE_GOTO_N_PLUS_V0_MENU
 41

	)

94 
	#EDITOR_X
 0

	)

95 
	#EDITOR_Y
 0

	)

96 
	#EDITOR_WIDTH
 19

	)

97 
	#EDITOR_HEIGHT
 9

	)

98 
	#FIRST_EDITOR_LINE
 0

	)

99 
	#LAST_EDITOR_LINE
 8

	)

101 
	#MAIN_MENU_X
 30

	)

102 
	#MAIN_MENU_Y
 45

	)

103 
	#MAIN_MENU_WIDTH
 12

	)

104 
	#MAIN_MENU_HEIGHT
 4

	)

105 
	#MAIN_MENU_TITLE_X
 24

	)

106 
	#MAIN_MENU_TITLE_Y
 17

	)

107 
	#MAIN_MENU_FRAME_X
 5

	)

108 
	#MAIN_MENU_FRAME_Y
 5

	)

109 
	#MAIN_MENU_FRAME_WIDTH
 100

	)

110 
	#MAIN_MENU_FRAME_HEIGHT
 30

	)

111 
	#CONTEXT_MENU_X
 6

	)

112 
	#CONTEXT_MENU_Y
 5

	)

113 
	#CONTEXT_MENU_WIDTH
 16

	)

114 
	#CONTEXT_MENU_HEIGHT
 8

	)

115 
	#MENU_X
 3

	)

116 
	#MENU_Y
 10

	)

117 
	#MENU_WIDTH
 17

	)

118 
	#MENU_HEIGHT
 8

	)

119 
	#TITLE_Y
 2

	)

120 
	#FRAME_X
 3

	)

121 
	#FRAME_Y
 12

	)

122 
	#FRAME_WIDTH
 103

	)

123 
	#FRAME_HEIGHT
 63

	)

124 
	#PARAM_X
 12

	)

125 
	#VALUE_X
 30

	)

126 
	#PARAM_Y_1_1
 40

	)

127 
	#PARAM_Y_1_2
 35

	)

128 
	#PARAM_Y_2_2
 45

	)

129 
	#PARAM_Y_1_3
 30

	)

130 
	#PARAM_Y_2_3
 40

	)

131 
	#PARAM_Y_3_3
 50

	)

132 
	#OK_BUTTON_X
 97

	)

133 
	#OK_BUTTON_Y
 79

	)

134 
	#CANCEL_BUTTON_X
 1

	)

135 
	#CANCEL_BUTTON_Y
 79

	)

141 ˛as†
	cCHIP8Pœyî
 {

143 
	mpublic
:

145 
uöt8_t
 
mem
[
MEM_SIZE
];

146 
uöt16_t
 
	mPC
;

147 
uöt16_t
 
	mI
;

148 
uöt8_t
 
	mV
[16];

149 
uöt16_t
 
	m°ack
[16];

150 
uöt8_t
 
	m°ackLígth
;

151 
uöt16_t
 
	mdñayTimî
;

152 
uöt8_t
 
	msoundTimî
;

153 
uöt16_t
 
	m›codesIds
[
OPCODES_COUNT
];

154 
uöt16_t
 
	m›codesMasks
[
OPCODES_COUNT
];

155 
uöt8_t
 
	m›codeIndex
;

156 
uöt8_t
 
	mkeys
[16];

157 
boﬁ
 
	mkeyPªs£d
;

158 
uöt16_t
 
	mromSize
;

159 
uöt8_t
 
	m•ìd
;

160 
uöt8_t
 
	ms¸ìn
[
SCREEN_LENGTH
];

161 
uöt8_t
 
	ms¸ìnWidth
;

162 
uöt8_t
 
	ms¸ìnHeight
;

164 
Li°Box
 
	mmaöMíu
;

165 
Li°Box
 
	m£âögsMíu
;

166 
Li°Box
 
	medô‹Võw
;

167 
Li°Box
 
	mc⁄ãxtMíu
;

168 
Li°Box
 
	maddMíu
;

170 
Li°Box
 
	mvxEquÆsMíu
;

171 
FõldsLi°
 
	mvxEquÆsNMíu
;

172 
FõldsLi°
 
	mvxEquÆsVyMíu
;

173 
FõldsLi°
 
	mvxPlusNMíu
;

174 
FõldsLi°
 
	mvxPlusVyMíu
;

175 
FõldsLi°
 
	mvxMöusVyMíu
;

176 
FõldsLi°
 
	mvyMöusVxMíu
;

177 
FõldsLi°
 
	mvxAndVyMíu
;

178 
FõldsLi°
 
	mvxOrVyMíu
;

179 
FõldsLi°
 
	mvxX‹VyMíu
;

180 
FõldsLi°
 
	mvxLe·Shi·Míu
;

181 
FõldsLi°
 
	mvxRightShi·Míu
;

182 
FõldsLi°
 
	mvxR™domMíu
;

183 
FõldsLi°
 
	mvxTimîMíu
;

184 
FõldsLi°
 
	mvxRódKeyMíu
;

186 
Li°Box
 
	miEquÆsMíu
;

187 
FõldsLi°
 
	miEquÆsNMíu
;

188 
FõldsLi°
 
	miEquÆsCh¨VXMíu
;

189 
FõldsLi°
 
	miPlusVxMíu
;

191 
FõldsLi°
 
	m•rôeMíu
;

193 
Li°Box
 
	mifVxMíu
;

194 
FõldsLi°
 
	mifVxEquÆsNMíu
;

195 
FõldsLi°
 
	mifVxEquÆsVyMíu
;

196 
FõldsLi°
 
	mifVxNŸEquÆsNMíu
;

197 
FõldsLi°
 
	mifVxNŸEquÆsVyMíu
;

199 
FõldsLi°
 
	mgŸoNMíu
;

200 
FõldsLi°
 
	mˇŒNMíu
;

201 
FõldsLi°
 
	mifKeyVxMíu
;

202 
FõldsLi°
 
	mifNŸKeyVxMíu
;

203 
FõldsLi°
 
	mtimîMíu
;

204 
FõldsLi°
 
	md©aMíu
;

205 
FõldsLi°
 
	mßveDecVxMíu
;

206 
FõldsLi°
 
	msoundTimîMíu
;

207 
FõldsLi°
 
	mßveV0ToVx
;

208 
FõldsLi°
 
	mlﬂdV0ToVx
;

209 
FõldsLi°
 
	mgŸoNPlusV0Míu
;

211 
uöt8_t
 
	m°©e
;

212 
uöt16_t
 
	mfú°In°ru˘i⁄ToShow
;

214 
CHIP8Pœyî
();

215 
öô
(
Pokôto
::
C‹e
 *
pokôtoC‹e
);

216 
öôEdô‹
();

217 
öôPœyî
();

218 
upd©e
();

219 
ªadOpcode
();

221 
	m¥iv©e
:

223 
Pokôto
::
C‹e
 *
pokôto
;

224 
boﬁ
 
	ms¸ìnIsInEdôMode
;

226 
£tPixñ
(
uöt8_t
 
x
, uöt8_à
y
, uöt8_à
cﬁ‹
);

227 
uöt8_t
 
gëPixñ
(uöt8_à
x
, uöt8_à
y
);

228 
˛órS¸ìn
();

229 
døwS¸ìn
();

230 
døwS¥ôe
(
uöt8_t
 
x
, uöt8_à
y
, uöt8_à
height
);

231 
ªadKeys
();

232 
uöt8_t
 
gëOpcodeIndex
(
uöt16_t
 
›code
);

233 
uöt16_t
 
gëOpcode
(uöt16_à
memAddªss
);

234 
gëOpcodeSour˚
(*
›codeSour˚
, 
uöt16_t
 
memAddªss
);

235 
addOpcode
(
uöt16_t
 
›code
);

236 
dñëeOpcode
();

237 
upd©eOpcode
(
uöt16_t
 
›code
);

238 
moveOpcodeUp
();

239 
moveOpcodeDown
();

240 
dumpRomSour˚
();

241 
uöt16_t
 
lﬂdRom
(*
romP©h
);

242 
uöt16_t
 
lﬂdU£rRom
();

243 
uöt8_t
 
ßveU£rRom
();

244 
upd©eEdô‹Võw
();

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Chip8\FieldsList.cpp

24 
	~"FõldsLi°.h
"

29 
	gFõldsLi°Iãm
::
	$FõldsLi°Iãm
(Ë{ 
	}
}

34 
FõldsLi°Iãm
::~
	$FõldsLi°Iãm
(Ë{ 
	}
}

39 
FõldsLi°
::
	$FõldsLi°
(Ë{ 
	}
}

44 
FõldsLi°
::~
	$FõldsLi°
() {

46 
dñëe
[] 
ôems
;

47 
	}
}

52 
uöt8_t
 
	gFõldsLi°
::
	$öô
(
Pokôto
::
C‹e
 *
pokôtoC‹e
, 
uöt8_t
 
maxIãms
) {

54 
pokôto
 = 
pokôtoC‹e
;

56 i‡(
maxIãms
 > 254)  0;

59 
ôemCﬁ‹
 = 
FL_ITEM_COLOR
;

60 
£À˘edIãmCﬁ‹
 = 
FL_SELECTED_ITEM_COLOR
;

62 
ôemsCou¡
 = 0;

63 
£À˘edIãm
 = 0;

64 
fú°Digô
 = 0;

65 
£À˘edDigô
 = 0;

66 
°©e
 = 
FL_STATE_VIEWMODE
;

67 
ch™geC™˚Àd
 = 
Ál£
;

70 
ôems
 = 
√w
 
FõldsLi°Iãm
[
maxIãms
];

71 i‡(
ôems
 =
NULL
) {

73 
this
->
maxIãms
 = 0;

78 
this
->
maxIãms
 = maxItems;

79  
maxIãms
;

81 
	}
}

86 
uöt8_t
 
	gFõldsLi°
::
	$addIãm
(
uöt8_t
 
x
, uöt8_à
y
, c⁄° * 
ãxt
) {

88 
uöt8_t
 
ãxtLígth
 = 
	`°æí
(
ãxt
);

90 i‡(
ãxtLígth
 < 
FL_ITEM_LENGTH
 && 
ôemsCou¡
 < 
maxIãms
) {

92 
ôems
[
ôemsCou¡
].
x
 = x;

93 
ôems
[
ôemsCou¡
].
y
 = y;

94 
ôems
[
ôemsCou¡
].
vÆue
 = 0;

95 
ôems
[
ôemsCou¡
].
möVÆue
 = 0;

96 
ôems
[
ôemsCou¡
].
maxVÆue
 = 0;

97 
ôems
[
ôemsCou¡
].
isAnEdôabÀVÆue
 = 
Ál£
;

99 
	`°r˝y
(
ôems
[
ôemsCou¡
].
ãxt
,Åext);

100 
ôems
[
ôemsCou¡
].
ãxt
[
ãxtLígth
] = '\0';

102 
ôemsCou¡
++;

104  
ôemsCou¡
;

107 
	}
}

112 
uöt8_t
 
	gFõldsLi°
::
	$addIãm
(
uöt8_t
 
x
, uöt8_à
y
, 
uöt16_t
 
vÆue
, uöt16_à
möVÆue
, uöt16_à
maxVÆue
) {

114 i‡(
möVÆue
 <
maxVÆue
 && 
vÆue
 >= minValue && value <= maxValue) {

116 
ôems
[
ôemsCou¡
].
x
 = x;

117 
ôems
[
ôemsCou¡
].
y
 = y;

118 
ôems
[
ôemsCou¡
].
vÆue
 = value;

119 
ôems
[
ôemsCou¡
].
möVÆue
 = minValue;

120 
ôems
[
ôemsCou¡
].
maxVÆue
 = maxValue;

121 
ôems
[
ôemsCou¡
].
isAnEdôabÀVÆue
 = 
åue
;

123 
	`•rötf
(
ôems
[
ôemsCou¡
].
ãxt
, "%u", 
maxVÆue
);

125 
	`°æí
(
ôems
[
ôemsCou¡
].
ãxt
)) {

128 
	`•rötf
(
ôems
[
ôemsCou¡
].
ãxt
, "%01u", 
vÆue
);

132 
	`•rötf
(
ôems
[
ôemsCou¡
].
ãxt
, "%02u", 
vÆue
);

136 
	`•rötf
(
ôems
[
ôemsCou¡
].
ãxt
, "%03u", 
vÆue
);

140 
	`•rötf
(
ôems
[
ôemsCou¡
].
ãxt
, "%04u", 
vÆue
);

144 
	`•rötf
(
ôems
[
ôemsCou¡
].
ãxt
, "%05u", 
vÆue
);

147 
ôemsCou¡
++;

149  
ôemsCou¡
;

152 
	}
}

157 
	gFõldsLi°
::
	$£tVÆue
(
uöt8_t
 
ôemId
, 
uöt16_t
 
vÆue
) {

160 i‡(
vÆue
 < 
ôems
[
ôemId
].
möVÆue
) {

162 
vÆue
 = 
ôems
[
ôemId
].
möVÆue
;

164 i‡(
vÆue
 > 
ôems
[
ôemId
].
maxVÆue
) {

166 
vÆue
 = 
ôems
[
ôemId
].
maxVÆue
;

168 
ôems
[
ôemId
].
vÆue
 = value;

171 
	`°æí
(
ôems
[
ôemId
].
ãxt
)) {

174 
	`•rötf
(
ôems
[
ôemId
].
ãxt
, "%01u", 
vÆue
);

178 
	`•rötf
(
ôems
[
ôemId
].
ãxt
, "%02u", 
vÆue
);

182 
	`•rötf
(
ôems
[
ôemId
].
ãxt
, "%03u", 
vÆue
);

186 
	`•rötf
(
ôems
[
ôemId
].
ãxt
, "%04u", 
vÆue
);

190 
	`•rötf
(
ôems
[
ôemId
].
ãxt
, "%05u", 
vÆue
);

192 
	}
}

197 
	gFõldsLi°
::
	$upd©e
() {

199 
uöt8_t
 
i
;

200 
uöt8_t
 
ôemsDñèX
;

201 
uöt8_t
 
ôemsDñèY
;

202 
uöt8_t
 
œ°IãmFound
;

203 
uöt8_t
 
œ°IãmFoundDñèX
;

204 
uöt8_t
 
œ°IãmFoundDñèY
;

206 
uöt16_t
 
√wVÆue
;

209 
ch™geC™˚Àd
 = 
Ál£
;

212 i‡(
°©e
 =
FL_STATE_VIEWMODE
) {

215 i‡(
pokôto
->
buâ⁄s
.
	`ª≥©
(
BTN_UP
, 1)) {

217 
ôemsDñèX
 = 255;

218 
ôemsDñèY
 = 255;

219 
œ°IãmFound
 = 255;

220 
œ°IãmFoundDñèX
 = 255;

221 
œ°IãmFoundDñèY
 = 255;

223 
i
=0; i<
ôemsCou¡
; i++) {

226 i‡(
ôems
[
i
].
y
 < iãms[
£À˘edIãm
].y) {

228 
ôemsDñèX
 = 
	`abs
(
ôems
[
i
].
x
 - iãms[
£À˘edIãm
].x);

229 
ôemsDñèY
 = 
ôems
[
£À˘edIãm
].
y
 - iãms[
i
].y;

231 i‡(
ôemsDñèY
 =
œ°IãmFoundDñèY
) {

233 i‡(
ôemsDñèX
 < 
œ°IãmFoundDñèX
) {

235 
œ°IãmFound
 = 
i
;

236 
œ°IãmFoundDñèX
 = 
ôemsDñèX
;

237 
œ°IãmFoundDñèY
 = 
ôemsDñèY
;

240 i‡(
ôemsDñèY
 < 
œ°IãmFoundDñèY
) {

242 
œ°IãmFound
 = 
i
;

243 
œ°IãmFoundDñèX
 = 
ôemsDñèX
;

244 
œ°IãmFoundDñèY
 = 
ôemsDñèY
;

250 i‡(
œ°IãmFound
 < 255) {

252 
£À˘edIãm
 = 
œ°IãmFound
;

257 i‡(
pokôto
->
buâ⁄s
.
	`ª≥©
(
BTN_DOWN
, 1)) {

259 
ôemsDñèX
 = 255;

260 
ôemsDñèY
 = 255;

261 
œ°IãmFound
 = 255;

262 
œ°IãmFoundDñèX
 = 255;

263 
œ°IãmFoundDñèY
 = 255;

265 
i
=0; i<
ôemsCou¡
; i++) {

268 i‡(
ôems
[
i
].
y
 > iãms[
£À˘edIãm
].y) {

270 
ôemsDñèX
 = 
	`abs
(
ôems
[
i
].
x
 - iãms[
£À˘edIãm
].x);

271 
ôemsDñèY
 = 
ôems
[
i
].
y
 - iãms[
£À˘edIãm
].y;

273 i‡(
ôemsDñèY
 =
œ°IãmFoundDñèY
) {

275 i‡(
ôemsDñèX
 < 
œ°IãmFoundDñèX
) {

277 
œ°IãmFound
 = 
i
;

278 
œ°IãmFoundDñèX
 = 
ôemsDñèX
;

279 
œ°IãmFoundDñèY
 = 
ôemsDñèY
;

282 i‡(
ôemsDñèY
 < 
œ°IãmFoundDñèY
) {

284 
œ°IãmFound
 = 
i
;

285 
œ°IãmFoundDñèX
 = 
ôemsDñèX
;

286 
œ°IãmFoundDñèY
 = 
ôemsDñèY
;

292 i‡(
œ°IãmFound
 < 255) {

294 
£À˘edIãm
 = 
œ°IãmFound
;

299 i‡(
pokôto
->
buâ⁄s
.
	`ª≥©
(
BTN_LEFT
, 1)) {

301 
œ°IãmFound
 = 255;

302 
œ°IãmFoundDñèX
 = 255;

304 
i
=0; i<
ôemsCou¡
; i++) {

307 i‡((
ôems
[
i
].
x
 < iãms[
£À˘edIãm
].xË&& (ôems[i].
y
 == items[selectedItem].y)) {

309 
ôemsDñèX
 = 
ôems
[
£À˘edIãm
].
x
 - iãms[
i
].x;

311 i‡(
ôemsDñèX
 < 
œ°IãmFoundDñèX
) {

313 
œ°IãmFound
 = 
i
;

314 
œ°IãmFoundDñèX
 = 
ôemsDñèX
;

320 i‡(
œ°IãmFound
 < 255) {

322 
£À˘edIãm
 = 
œ°IãmFound
;

327 i‡(
pokôto
->
buâ⁄s
.
	`ª≥©
(
BTN_RIGHT
, 1)) {

329 
œ°IãmFound
 = 255;

330 
œ°IãmFoundDñèX
 = 255;

332 
i
=0; i<
ôemsCou¡
; i++) {

335 i‡((
ôems
[
i
].
x
 > iãms[
£À˘edIãm
].xË&& (ôems[i].
y
 == items[selectedItem].y)) {

337 
ôemsDñèX
 = 
ôems
[
i
].
x
 - iãms[
£À˘edIãm
].x;

339 i‡(
ôemsDñèX
 < 
œ°IãmFoundDñèX
) {

341 
œ°IãmFound
 = 
i
;

342 
œ°IãmFoundDñèX
 = 
ôemsDñèX
;

348 i‡(
œ°IãmFound
 < 255) {

350 
£À˘edIãm
 = 
œ°IãmFound
;

354 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
Ë&& 
ôems
[
£À˘edIãm
].
isAnEdôabÀVÆue
) {

357 
fú°Digô
 = 
FL_MAX_ITEM_DIGITS
 - 
	`°æí
(
ôems
[
£À˘edIãm
].
ãxt
);

358 
£À˘edDigô
 = 
fú°Digô
;

360 
ôemDigôs
[0] = (
uöt8_t
Ë(
ôems
[
£À˘edIãm
].
vÆue
 / 10000);

361 
ôemDigôs
[1] = (
uöt8_t
Ë((
ôems
[
£À˘edIãm
].
vÆue
 % 10000) / 1000);

362 
ôemDigôs
[2] = (
uöt8_t
Ë((
ôems
[
£À˘edIãm
].
vÆue
 % 1000) / 100);

363 
ôemDigôs
[3] = (
uöt8_t
Ë((
ôems
[
£À˘edIãm
].
vÆue
 % 100) / 10);

364 
ôemDigôs
[4] = (
uöt8_t
Ë((
ôems
[
£À˘edIãm
].
vÆue
 % 100) % 10);

367 
°©e
 = 
FL_STATE_EDITMODE
;

375 i‡(
pokôto
->
buâ⁄s
.
	`ª≥©
(
BTN_UP
, 2)) {

377 
ôemDigôs
[
£À˘edDigô
]++;

378 
ôemDigôs
[
£À˘edDigô
] %= 10;

382 i‡(
pokôto
->
buâ⁄s
.
	`ª≥©
(
BTN_DOWN
, 2)) {

384 
ôemDigôs
[
£À˘edDigô
]--;

385 i‡(
ôemDigôs
[
£À˘edDigô
] == 255) {

387 
ôemDigôs
[
£À˘edDigô
] = 9;

392 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_LEFT
)) {

394 
£À˘edDigô
 --;

395 i‡(
£À˘edDigô
 < 
fú°Digô
 || selectedDigit == 255) {

397 
£À˘edDigô
 = 
FL_MAX_ITEM_DIGITS
 - 1;

402 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_RIGHT
)) {

404 
£À˘edDigô
++;

405 i‡(
£À˘edDigô
 =
FL_MAX_ITEM_DIGITS
) {

407 
£À˘edDigô
 = 
fú°Digô
;

412 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

415 
√wVÆue
 = 
ôemDigôs
[0] * 10000 + itemDigits[1] * 1000 + itemDigits[2] * 100 + itemDigits[3] * 10 + itemDigits[4];

416 
	`£tVÆue
(
£À˘edIãm
, 
√wVÆue
);

419 
°©e
 = 
FL_STATE_VIEWMODE
;

423 i‡(
pokôto
->
buâ⁄s
.
	`¥es£d
(
BTN_B
)) {

425 
ch™geC™˚Àd
 = 
åue
;

428 
°©e
 = 
FL_STATE_VIEWMODE
;

431 
	}
}

436 
	gFõldsLi°
::
	$show
() {

438 
uöt8_t
 
ôem
;

439 
uöt8_t
 
digô
;

440 
uöt8_t
 
digôX
;

441 
digôText
[2];

442 
uöt8_t
 
ﬁdCﬁ‹
;

444 
ﬁdCﬁ‹
 = 
pokôto
->
di•œy
.
cﬁ‹
;

447 
ôem
=0; iãm<
ôemsCou¡
; item++) {

449 i‡(
ôem
 =
£À˘edIãm
){

451 i‡(
°©e
 =
FL_STATE_EDITMODE
) {

453 
digôX
 = 0;

454 
digô
=
fú°Digô
; digô<
FL_MAX_ITEM_DIGITS
; digit++) {

456 i‡(
digô
 =
£À˘edDigô
) {

458 
pokôto
->
di•œy
.
cﬁ‹
 = 
£À˘edIãmCﬁ‹
;

462 
pokôto
->
di•œy
.
cﬁ‹
 = 
ôemCﬁ‹
;

465 
	`•rötf
(
digôText
, "%d", 
ôemDigôs
[
digô
]);

466 
pokôto
->
di•œy
.
	`¥öt
(
ôems
[
ôem
].
x
 + 
digôX
, iãms[ôem].
y
, 
digôText
);

468 
digôX
 +
FL_ITEM_CHAR_WIDTH
;

474 
pokôto
->
di•œy
.
cﬁ‹
 = 
£À˘edIãmCﬁ‹
;

475 
pokôto
->
di•œy
.
	`¥öt
(
ôems
[
ôem
].
x
, iãms[ôem].
y
, iãms[ôem].
ãxt
);

481 
pokôto
->
di•œy
.
cﬁ‹
 = 
ôemCﬁ‹
;

482 
pokôto
->
di•œy
.
	`¥öt
(
ôems
[
ôem
].
x
, iãms[ôem].
y
, iãms[ôem].
ãxt
);

486 
pokôto
->
di•œy
.
cﬁ‹
 = 
ﬁdCﬁ‹
;

487 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Chip8\FieldsList.h

24 #i‚de‡
FIELDSSET_H


25 
	#FIELDSSET_H


	)

27 
	~"Pokôto.h
"

29 
	#FL_STATE_VIEWMODE
 0

	)

30 
	#FL_STATE_EDITMODE
 1

	)

32 
	#FL_ITEM_COLOR
 1

33 
	#FL_SELECTED_ITEM_COLOR
 4

34 
	#FL_ITEM_LENGTH
 20

35 
	#FL_MAX_ITEM_DIGITS
 5

	)

36 
	#FL_ITEM_CHAR_WIDTH
 6

	)

41 ˛as†
	cFõldsLi°Iãm
 {

43 
	mpublic
:

45 
uöt8_t
 
x
;

46 
uöt8_t
 
	my
;

47 
uöt16_t
 
	mmöVÆue
;

48 
uöt16_t
 
	mmaxVÆue
;

49 
uöt16_t
 
	mvÆue
;

50 
	mãxt
[
FL_ITEM_LENGTH
];

51 
boﬁ
 
	misAnEdôabÀVÆue
;

53 
FõldsLi°Iãm
();

54 ~
FõldsLi°Iãm
();

56 
	m¥iv©e
:

62 ˛as†
	cFõldsLi°
 {

64 
	mpublic
:

66 
FõldsLi°Iãm
 *
ôems
;

67 
uöt8_t
 
	môemsCou¡
;

68 
uöt8_t
 
	m£À˘edIãm
;

69 
uöt8_t
 
	môemCﬁ‹
;

70 
uöt8_t
 
	m£À˘edIãmCﬁ‹
;

71 
uöt8_t
 
	môemDigôs
[
FL_MAX_ITEM_DIGITS
];

72 
uöt8_t
 
	mfú°Digô
;

73 
uöt8_t
 
	m£À˘edDigô
;

74 
uöt8_t
 
	m°©e
;

75 
boﬁ
 
	mch™geC™˚Àd
;

77 
FõldsLi°
();

78 ~
FõldsLi°
();

79 
uöt8_t
 
addIãm
(uöt8_à
x
, uöt8_à
y
, c⁄° * 
ãxt
);

80 
uöt8_t
 
addIãm
(uöt8_à
x
, uöt8_à
y
, 
uöt16_t
 
vÆue
, uöt16_à
möVÆue
, uöt16_à
maxVÆue
);

81 
£tVÆue
(
uöt8_t
 
ôemId
, 
uöt16_t
 
vÆue
);

82 
upd©e
();

83 
show
();

84 
uöt8_t
 
öô
(
Pokôto
::
C‹e
 *
pokôtoC‹e
, uöt8_à
maxIãms
);

87 
	m¥iv©e
:

89 
Pokôto
::
C‹e
 *
pokôto
;

90 
uöt8_t
 
	mmaxIãms
;

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Chip8\Hello.cpp

1 
	~"pokôto.h
"

2 
	~"CHIP8Pœyî.h
"

4 
	gPokôto
::
C‹e
 
game
;

5 
CHIP8Pœyî
 
	gchù8Pœyî
;

7 
	$maö
 () {

9 
game
.
	`begö
();

10 
game
.
di•œy
.
	`£tF⁄t
(
f⁄t5x7
);

11 
	`pokInôSD
();

12 
game
.
	`£tFømeR©e
(30);

13 
game
.
di•œy
.
bgcﬁ‹
 = 8;

15 
chù8Pœyî
.
	`öô
(&
game
);

17 
game
.
	`isRu¬ög
()) {

19 i‡(
game
.
	`upd©e
()) {

21 
chù8Pœyî
.
	`upd©e
();

26 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Chip8\ListBox.cpp

24 
	~"Li°Box.h
"

29 
	gLi°BoxIãm
::
	$Li°BoxIãm
(Ë{ 
	}
}

34 
Li°BoxIãm
::~
	$Li°BoxIãm
(Ë{ 
	}
}

39 
Li°Box
::
	$Li°Box
(Ë{ 
	}
}

44 
Li°Box
::~
	$Li°Box
() {

46 
dñëe
[] 
ôems
;

47 
	}
}

52 
uöt8_t
 
	gLi°Box
::
	$öô
(
Pokôto
::
C‹e
 *
pokôtoC‹e
, 
uöt8_t
 
x
, uöt8_à
y
 , uöt8_à
width
, uöt8_à
height
, 
uöt16_t
 
maxIãms
, uöt8_à
›ti⁄s
) {

54 
pokôto
 = 
pokôtoC‹e
;

55 
uöt8_t
 
i
;

57 
this
->
x
 = x;

58 
this
->
y
 = y;

61 i‡(
width
 < 4) width = 4;

62 
this
->
width
 = width;

65 i‡(
height
 < 3) height = 3;

66 
this
->
height
 = height;

69 
backgroundCﬁ‹
 = 
LB_BACKGROUND_COLOR
;

70 
b‹dîCﬁ‹
 = 
LB_BORDER_COLOR
;

71 
ôemCﬁ‹
 = 
LB_ITEM_COLOR
;

72 
£À˘edIãmCﬁ‹
 = 
LB_SELECTED_ITEM_COLOR
;

75 i‡(
›ti⁄s
 & 
LB_HIDE_BORDER
) {

77 
hideB‹dî
 = 
åue
;

78 
võwX
 = 
LB_ITEM_MARGIN_LEFT
;

79 
võwY
 = 0;

80 
võwWidth
 = 
width
;

81 
võwHeight
 = 
height
;

85 
hideB‹dî
 = 
Ál£
;

86 
võwX
 = 
LB_ITEM_MARGIN_LEFT
 + 
LB_ITEM_CHAR_WIDTH
;

87 
võwY
 = 
LB_ITEM_CHAR_HEIGHT
;

88 
võwWidth
 = 
width
 - 2;

89 
võwHeight
 = 
height
 - 2;

92 
fú°Ch¨ToShow
 = 0;

93 
fú°IãmToShow
 = 0;

95 
ôemsCou¡
 = 0;

96 
£À˘edIãm
 = 0;

99 
ôems
 = 
√w
 
Li°BoxIãm
[
maxIãms
];

100 i‡(
ôems
 =
NULL
) {

102 
this
->
maxIãms
 = 0;

107 
this
->
maxIãms
 = maxItems;

108  
maxIãms
;

110 
	}
}

115 
uöt16_t
 
	gLi°Box
::
	$addIãm
(c⁄° * 
ãxt
) {

117 
uöt8_t
 
ãxtLígth
 = 
	`°æí
(
ãxt
);

119 i‡(
ãxtLígth
 < 
LB_ITEM_LENGTH
 && 
ôemsCou¡
 < 
maxIãms
) {

121 
	`°r˝y
(
ôems
[
ôemsCou¡
].
ãxt
,Åext);

122 
ôems
[
ôemsCou¡
].
ãxt
[
ãxtLígth
] = '\0';

124 
ôemsCou¡
++;

126  
ôemsCou¡
;

129 
	}
}

134 
uöt16_t
 
	gLi°Box
::
	$ªmoveIãm
(
uöt8_t
 
ôemId
) {

136 
uöt16_t
 
i
;

138 i‡(
ôemsCou¡
 > 0 && 
ôemId
 < itemsCount) {

140 
i
=
£À˘edIãm
; i<
ôemsCou¡
-1; i++) {

142 
ôems
[
i
] = items[i+1];

145 
ôemsCou¡
--;

147 i‡(
£À˘edIãm
 >
ôemsCou¡
 && selectedItem > 0) {

149 
£À˘edIãm
 = 
ôemsCou¡
 - 1;

152 i‡(
fú°IãmToShow
 > 
£À˘edIãm
) {

154 
fú°IãmToShow
 = 
£À˘edIãm
;

158  
ôemsCou¡
;

159 
	}
}

164 
	gLi°Box
::
	$upd©e
() {

166 i‡(
pokôto
->
buâ⁄s
.
	`ª≥©
(
BTN_UP
, 2)) {

168 i‡(
£À˘edIãm
 > 0) {

170 
£À˘edIãm
--;

171 i‡(
£À˘edIãm
 < 
fú°IãmToShow
) {

173 
	`s¸ﬁlUp
();

177 i‡(
pokôto
->
buâ⁄s
.
	`ª≥©
(
BTN_DOWN
, 2)) {

179 i‡(
£À˘edIãm
 < 
ôemsCou¡
-1) {

181 
£À˘edIãm
++;

182 i‡(
£À˘edIãm
 > 
fú°IãmToShow
+
võwHeight
-1) {

184 
	`s¸ﬁlDown
();

188 i‡(
pokôto
->
buâ⁄s
.
	`ª≥©
(
BTN_LEFT
, 2)) {

190 
	`s¸ﬁlLe·
();

192 i‡(
pokôto
->
buâ⁄s
.
	`ª≥©
(
BTN_RIGHT
, 2)) {

194 
	`s¸ﬁlRight
();

196 
	}
}

201 
	gLi°Box
::
	$s¸ﬁlUp
() {

203 i‡(
fú°IãmToShow
 > 0) {

205 
fú°IãmToShow
--;

207 
	}
}

212 
	gLi°Box
::
	$s¸ﬁlDown
() {

214 i‡((
fú°IãmToShow
+
võwHeight
Ë< 
ôemsCou¡
) {

216 
fú°IãmToShow
++;

218 
	}
}

223 
	gLi°Box
::
	$s¸ﬁlLe·
() {

225 i‡(
fú°Ch¨ToShow
 > 0) {

227 
fú°Ch¨ToShow
--;

229 
	}
}

234 
	gLi°Box
::
	$s¸ﬁlRight
() {

236 i‡((
fú°Ch¨ToShow
+
võwWidth
Ë< (
LB_ITEM_LENGTH
-1)) {

238 
fú°Ch¨ToShow
++;

240 
	}
}

245 
	gLi°Box
::
	$show
() {

247 
uöt16_t
 
i
;

248 
ôemText
[
LB_ITEM_LENGTH
];

249 
uöt8_t
 
ôemY
 = 
y
 + 
võwY
;

250 
uöt8_t
 
b‹dîX
;

251 
uöt8_t
 
b‹dîY
;

252 
uöt8_t
 
b‹dîWidth
;

253 
uöt8_t
 
b‹dîHeight
;

254 
öt16_t
 
œ°IãmToShow
;

255 
uöt8_t
 
ﬁdCﬁ‹
;

257 
ﬁdCﬁ‹
 = 
pokôto
->
di•œy
.
cﬁ‹
;

259 i‡(
hideB‹dî
) {

262 
pokôto
->
di•œy
.
cﬁ‹
 = 
backgroundCﬁ‹
;

263 
pokôto
->
di•œy
.
	`fûlRe˘
(
x
, 
y
, 
width
 * 
LB_ITEM_CHAR_WIDTH
 + 1, 
height
 * 
LB_ITEM_CHAR_HEIGHT
 - 3);

269 
b‹dîX
 = 
x
;

270 
b‹dîY
 = 
LB_BORDER_MARGIN_UP
 + 
y
;

271 
b‹dîWidth
 = 
width
 * 
LB_ITEM_CHAR_WIDTH
 + 1;

272 
b‹dîHeight
 = 
height
 * 
LB_ITEM_CHAR_HEIGHT
 - 3 - 
LB_BORDER_MARGIN_DOWN
 - 
LB_BORDER_MARGIN_UP
;

275 
pokôto
->
di•œy
.
cﬁ‹
 = 
backgroundCﬁ‹
;

276 
pokôto
->
di•œy
.
	`fûlRe˘
(
b‹dîX
, 
b‹dîY
, 
b‹dîWidth
, 
b‹dîHeight
);

278 
pokôto
->
di•œy
.
cﬁ‹
 = 
b‹dîCﬁ‹
;

279 
pokôto
->
di•œy
.
	`døwRe˘
(
b‹dîX
, 
b‹dîY
, 
b‹dîWidth
, 
b‹dîHeight
);

283 
œ°IãmToShow
 = 
fú°IãmToShow
 + 
võwHeight
 - 1;

284 i‡(
œ°IãmToShow
 >
ôemsCou¡
) {

286 
œ°IãmToShow
 = 
ôemsCou¡
 - 1;

290 
i
=
fú°IãmToShow
; i<=
œ°IãmToShow
; i++) {

292 
	`subSåög
(
ôemText
, 
ôems
[
i
].
ãxt
, 
fú°Ch¨ToShow
, fú°Ch¨ToShow+
võwWidth
-1);

294 i‡(
i
 =
£À˘edIãm
){

296 
pokôto
->
di•œy
.
cﬁ‹
 = 
£À˘edIãmCﬁ‹
;

300 
pokôto
->
di•œy
.
cﬁ‹
 = 
ôemCﬁ‹
;

302 
pokôto
->
di•œy
.
	`¥öt
(
x
+
võwX
, 
ôemY
, 
ôemText
);

304 
ôemY
 +
LB_ITEM_CHAR_HEIGHT
;

307 
pokôto
->
di•œy
.
cﬁ‹
 = 
ﬁdCﬁ‹
;

308 
	}
}

313 
	gLi°Box
::
	$subSåög
(*
d°Såög
, c⁄° *
§cSåög
, 
uöt8_t
 
fú°Ch¨
, uöt8_à
œ°Ch¨
) {

315 
uöt8_t
 
i
;

316 
uöt8_t
 
§cSåögLígth
;

318 
§cSåögLígth
 = 
	`°æí
(
§cSåög
);

320 i‡(
fú°Ch¨
 > 
œ°Ch¨
 || fú°Ch¨ > (
§cSåögLígth
 - 1)) {

322 
d°Såög
[0] = '\0';

326 i‡(
œ°Ch¨
 > (
§cSåögLígth
 - 1)) {

328 
œ°Ch¨
 = 
§cSåögLígth
 - 1;

331 
i
=
fú°Ch¨
; i<=
œ°Ch¨
; i++) {

333 
d°Såög
[
i
-
fú°Ch¨
] = 
§cSåög
[i];

335 
d°Såög
[
i
-
fú°Ch¨
] = '\0';

337 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Chip8\ListBox.h

24 #i‚de‡
LISTBOX_H


25 
	#LISTBOX_H


	)

27 
	~"pokôto.h
"

29 
	#LB_BACKGROUND_COLOR
 8

	)

30 
	#LB_BORDER_COLOR
 1

	)

31 
	#LB_ITEM_COLOR
 1

	)

32 
	#LB_SELECTED_ITEM_COLOR
 4

	)

33 
	#LB_BORDER_MARGIN_UP
 2

	)

34 
	#LB_BORDER_MARGIN_DOWN
 2

	)

35 
	#LB_ITEM_MARGIN_LEFT
 1

	)

36 
	#LB_ITEM_CHAR_WIDTH
 6

	)

37 
	#LB_ITEM_CHAR_HEIGHT
 10

	)

38 
	#LB_ITEM_LENGTH
 32

39 

	)

40 
	#LB_HIDE_BORDER
 1

	)

45 ˛as†
	cLi°BoxIãm
 {

47 
	mpublic
:

49 
ãxt
[
LB_ITEM_LENGTH
];

51 
Li°BoxIãm
();

52 ~
Li°BoxIãm
();

54 
	m¥iv©e
:

61 ˛as†
	cLi°Box
 {

63 
	mpublic
:

65 
uöt8_t
 
x
;

66 
uöt8_t
 
	my
;

67 
Li°BoxIãm
 *
	môems
;

68 
uöt16_t
 
	môemsCou¡
;

69 
uöt16_t
 
	mmaxIãms
;

70 
uöt16_t
 
	m£À˘edIãm
;

71 
uöt8_t
 
	mbackgroundCﬁ‹
;

72 
uöt8_t
 
	mb‹dîCﬁ‹
;

73 
uöt8_t
 
	môemCﬁ‹
;

74 
uöt8_t
 
	m£À˘edIãmCﬁ‹
;

76 
Li°Box
();

77 ~
Li°Box
();

78 
uöt16_t
 
addIãm
(c⁄° * 
ãxt
);

79 
uöt16_t
 
ªmoveIãm
(
uöt8_t
 
ôemId
);

80 
upd©e
();

81 
show
();

82 
uöt8_t
 
öô
(
Pokôto
::
C‹e
 *
pokôtoC‹e
, uöt8_à
x
, uöt8_à
y
 , uöt8_à
width
, uöt8_à
height
, 
uöt16_t
 
maxIãms
, uöt8_à
›ti⁄s
);

83 
subSåög
(*
d°Såög
, c⁄° *
§cSåög
, 
uöt8_t
 
fú°Ch¨
, uöt8_à
œ°Ch¨
);

85 
	m¥iv©e
:

87 
Pokôto
::
C‹e
 *
pokôto
;

88 
uöt8_t
 
	mwidth
;

89 
uöt8_t
 
	mheight
;

90 
uöt8_t
 
	mvõwX
;

91 
uöt8_t
 
	mvõwY
;

92 
uöt8_t
 
	mvõwWidth
;

93 
uöt8_t
 
	mvõwHeight
;

94 
uöt8_t
 
	mfú°Ch¨ToShow
;

95 
uöt16_t
 
	mfú°IãmToShow
;

96 
boﬁ
 
	mhideB‹dî
;

98 
s¸ﬁlUp
();

99 
s¸ﬁlDown
();

100 
s¸ﬁlLe·
();

101 
s¸ﬁlRight
();

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Chip8\My_settings.h

12 #i‚de‡
MY_SETTINGS_H


13 
	#MY_SETTINGS_H


	)

15 
	#PROJ_HIRES
 0

16 
	#PROJ_ENABLE_SOUND
 0

17 
	#PROJ_NO_AUTO_SCROLL
 1

18 

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Chip8\SpriteEditor.cpp

24 
	~"S¥ôeEdô‹.h
"

29 
	gS¥ôeEdô‹Iãm
::
	$S¥ôeEdô‹Iãm
(Ë{ 
	}
}

34 
S¥ôeEdô‹Iãm
::~
	$S¥ôeEdô‹Iãm
(Ë{ 
	}
}

39 
S¥ôeEdô‹
::
	$S¥ôeEdô‹
(Ë{ 
	}
}

44 
S¥ôeEdô‹
::~
	$S¥ôeEdô‹
() {

47 
	}
}

52 
uöt8_t
 
S¥ôeEdô‹
::
	$öô
(
Pokôto
::
C‹e
 *
pokôtoC‹e
) {

54 
uöt8_t
 
˚ŒX
;

55 
uöt8_t
 
˚ŒY
;

57 
pokôto
 = 
pokôtoC‹e
;

60 
ôemCﬁ‹
 = 
FL_ITEM_COLOR
;

61 
£À˘edIãmCﬁ‹
 = 
FL_SELECTED_ITEM_COLOR
;

63 
ôemsCou¡
 = 0;

64 
£À˘edIãm
 = 0;

65 
°©e
 = 
FL_STATE_VIEWMODE
;

66 
ch™geC™˚Àd
 = 
Ál£
;

69 
˚ŒY
=
SE_GRID_Y
; cñlY<SE_GRID_Y+
SE_GRID_PIXEL_HEIGHT
; cñlY+=
SE_GRID_CELL_SIZE
) {

71 
˚ŒX
=
SE_GRID_X
; cñlX<SE_GRID_X+
SE_GRID_PIXEL_WIDTH
; cñlX+=
SE_GRID_CELL_SIZE
) {

73 
	`addIãm
(
˚ŒX
, 
˚ŒY
, 0);

76 
	}
}

81 
uöt8_t
 
	gS¥ôeEdô‹
::
	$addIãm
(
uöt8_t
 
x
, uöt8_à
y
, uöt8_à
ty≥
) {

85 
ôems
[
ôemsCou¡
].
x
 = x;

86 
ôems
[
ôemsCou¡
].
y
 = y;

88 
ôemsCou¡
++;

90  
ôemsCou¡
;

93 
	}
}

335 
	gS¥ôeEdô‹
::
	$show
() {

337 
uöt8_t
 
ôemId
;

338 
uöt8_t
 
ôem
;

339 
uöt8_t
 
digô
;

340 
uöt8_t
 
digôX
;

341 
digôText
[2];

342 
uöt8_t
 
ﬁdCﬁ‹
;

344 
ﬁdCﬁ‹
 = 
pokôto
->
di•œy
.
cﬁ‹
;

347 
pokôto
->
di•œy
.
	`¥öt
(
SE_TITLE_X
, 
SE_TITLE_Y
, "SPRITE EDITOR");

348 
pokôto
->
di•œy
.
	`¥öt
(
SE_CANCEL_BUTTON_X
, 
SE_CANCEL_BUTTON_Y
, "CANCEL");

349 
pokôto
->
di•œy
.
	`¥öt
(
SE_OK_BUTTON_X
, 
SE_OK_BUTTON_Y
, "OK");

352 
ôemId
=0; itemId<120; itemId++) {

354 
pokôto
->
di•œy
.
	`døwPixñ
(
ôems
[
ôemId
].
x
, iãms[ôemId].
y
, 
SE_GRID_COLOR
);

355 
pokôto
->
di•œy
.
	`døwPixñ
(
ôems
[
ôemId
].
x
 + 
SE_GRID_CELL_SIZE
, iãms[ôemId].
y
, 
SE_GRID_COLOR
);

356 
pokôto
->
di•œy
.
	`døwPixñ
(
ôems
[
ôemId
].
x
, iãms[ôemId].
y
 + 
SE_GRID_CELL_SIZE
, 
SE_GRID_COLOR
);

357 
pokôto
->
di•œy
.
	`døwPixñ
(
ôems
[
ôemId
].
x
 + 
SE_GRID_CELL_SIZE
, iãms[ôemId].
y
 + SE_GRID_CELL_SIZE, 
SE_GRID_COLOR
);

404 
pokôto
->
di•œy
.
cﬁ‹
 = 
ﬁdCﬁ‹
;

405 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Chip8\SpriteEditor.h

24 #i‚de‡
SPRITE_EDITOR_H


25 
	#SPRITE_EDITOR_H


	)

27 
	~"pokôto.h
"

29 
	#FL_STATE_VIEWMODE
 0

	)

30 
	#FL_STATE_EDITMODE
 1

	)

32 
	#FL_ITEM_COLOR
 1

33 
	#FL_SELECTED_ITEM_COLOR
 4

34 

	)

35 
	#FL_ITEM_CHAR_WIDTH
 6

	)

37 
	#SE_TITLE_X
 18

	)

38 
	#SE_TITLE_Y
 2

	)

39 
	#SE_OK_BUTTON_X
 97

	)

40 
	#SE_OK_BUTTON_Y
 79

	)

41 
	#SE_CANCEL_BUTTON_X
 1

	)

42 
	#SE_CANCEL_BUTTON_Y
 79

	)

44 
	#SE_GRID_X
 6

	)

45 
	#SE_GRID_Y
 14

	)

46 
	#SE_GRID_CELL_SIZE
 4

	)

47 
	#SE_GRID_WIDTH
 8

	)

48 
	#SE_GRID_HEIGHT
 15

	)

49 
	#SE_GRID_PIXEL_WIDTH
 32

50 
	#SE_GRID_PIXEL_HEIGHT
 60

51 
	#SE_GRID_COLOR
 9

	)

57 ˛as†
	cS¥ôeEdô‹Iãm
 {

59 
	mpublic
:

61 
uöt8_t
 
x
;

62 
uöt8_t
 
	my
;

63 
uöt8_t
 
	mty≥
;

65 
S¥ôeEdô‹Iãm
();

66 ~
S¥ôeEdô‹Iãm
();

68 
	m¥iv©e
:

74 ˛as†
	cS¥ôeEdô‹
 {

76 
	mpublic
:

78 
S¥ôeEdô‹Iãm
 
ôems
[150];

79 
uöt8_t
 
	môemsCou¡
;

80 
uöt8_t
 
	m£À˘edIãm
;

81 
uöt8_t
 
	môemCﬁ‹
;

82 
uöt8_t
 
	m£À˘edIãmCﬁ‹
;

83 
uöt8_t
 
	m°©e
;

84 
boﬁ
 
	mch™geC™˚Àd
;

86 
S¥ôeEdô‹
();

87 ~
S¥ôeEdô‹
();

88 
uöt8_t
 
addIãm
(uöt8_à
x
, uöt8_à
y
, uöt8_à
ty≥
);

89 
upd©e
();

90 
show
();

91 
uöt8_t
 
öô
(
Pokôto
::
C‹e
 *
pokôtoC‹e
);

93 
	m¥iv©e
:

95 
Pokôto
::
C‹e
 *
pokôto
;

96 
uöt8_t
 
	mmaxIãms
;

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Coffins\My_settings.h

15 
	#PROJ_HIRES
 1

	)

16 
	#PROJ_GBSOUND
 0

	)

17 
	#PROJ_ENABLE_SOUND
 1

18 
	#PROJ_ENABLE_SYNTH
 0

	)

19 
	#PROJ_STREAMING_MUSIC
 1

	)

20 
	#DISABLEAVRMIN
 1

	)

21 
	#PROJ_AUD_FREQ
 11025

	)

22 
	#PROJ_USE_PWM
 0

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Coffins\classes.cpp

2 ˛as†
	cE¡
 {

3 
	mpublic
:

4 
x
,
	my
;

5 
	mid
;

6 
	$E¡
(
xx
,
yy
Ë{
x
=xx; 
y
=yy;};

7 
	`døw
();

8 
	$E¡
() {

9 
id
=11;

10 
	}
}

14 ˛as†
	cGoblö
 : 
public
 
E¡
 {

15 
public
:

17 
id
;

18 
	$Goblö
() {

19 
id
=11;

22 
	}
};

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Coffins\crapai.h

1 
boﬁ
 
	$cﬁide
(
id
, 
x
, 
y
, 
boﬁ
 
c
){

2 i‡(
ítôõs
[
id
].
x
 =x &&É¡ôõs[id].
y
 =yË 
Ál£
;

3  
c
;

4 
	}
}

5 
boﬁ
 
	$b⁄ycﬁide
(
x
, 
y
){

6 
i
=0; i<
ítôõs
.
	`size
(); ++i){

7 i‡(
ítôõs
[
i
].
x
 =x &&É¡ôõs[i].
y
 =yË 
Ál£
;

9  
åue
;

10 
	}
}

11 
boﬁ
 
	$ítôõsLogic
(
∂ayîX
, 
∂ayîY
){

12 
boﬁ
 
nocﬁide
 = 
åue
;

14 
i
=0; i<
ítôõs
.
	`size
(); ++i){

16 
ítôõs
[
i
].
id
){

17 
ID_BLOOD
:

18 if(
	`ønd
()%10 =1Ë
ítôõs
[
i
].
id
 = 
ID_BLOOD_SKELETON
;

20 
ID_SCROLL
:

21 
∂ayîHP
 +
	`ønd
()%100;

22 if(
∂ayîHP
 > 100){playerHP = 100;}

23 
	`•rötf
(
¥öãr
,"scroll of healing");

25 
ID_CHEST
:

26 
nocﬁide
 = 
	`cﬁide
(
i
,
∂ayîX
,
∂ayîY
,nocolide);

27 if(!
	`cﬁide
(
i
,
∂ayîX
,
∂ayîY
,
åue
)){

28 
ítôõs
[
i
].
id
 = 
ID_CHEST_OPEN
;

29 
	`•rötf
(
¥öãr
,"›í che°,Åakí %ògﬁd", 
ítôõs
[
i
].
hp
);

30 
∂ayîGﬁd
 +
ítôõs
[
i
].
hp
;

31 
ítôõs
[
i
].
hp
 = 0;

34 
ID_CHEST_OPEN
:

38 
ENTITY_TILES
 + 15:

39 
ENTITY_TILES
 + 16:

40 
ENTITY_TILES
 + 17:

41 
ENTITY_TILES
 + 18:

42 
ENTITY_TILES
 + 19:

43 
ENTITY_TILES
 + 20:

44 
ID_BLOOD_SKELETON
:

45 
ID_RAT
:

46 
ID_GOBLIN_WARRIOR
:

47 
ID_GOBLIN_MAGE
:

48 
ID_SKELETON_MAGE
:

49 
ID_SKELETON_ARCHER
:

50 
ID_SKELETON_WARIOR
:

51 
ID_MIMIC
:

52 
nocﬁide
 = 
	`cﬁide
(
i
,
∂ayîX
,
∂ayîY
,nocolide);

53 if(
ítôõs
[
i
].
x
 > 
∂ayîX
 && 
	`cﬁide
(i,∂ayîX+1,
∂ayîY
,
åue
)){

54 i‡(!
sﬁids
[
dunge⁄
[
ítôõs
[
i
].
y
][ítôõs[i].
x
-1]]){

55 if(
	`b⁄ycﬁide
(
ítôõs
[
i
].
x
-1,É¡ôõs[i].
y
))Éntities[i].x-=1;}

57 if(!
	`cﬁide
(
i
,
∂ayîX
+1,
∂ayîY
,
åue
)Ë
∂ayîHP
 -=10;

59 if(
ítôõs
[
i
].
x
 < 
∂ayîX
 && 
	`cﬁide
(i,∂ayîX-1,
∂ayîY
,
åue
)){

60 i‡(!
sﬁids
[
dunge⁄
[
ítôõs
[
i
].
y
][ítôõs[i].
x
+1]]){

61 if(
	`b⁄ycﬁide
(
ítôõs
[
i
].
x
+1,É¡ôõs[i].
y
))Éntities[i].x+=1;}

63 if(!
	`cﬁide
(
i
,
∂ayîX
-1,
∂ayîY
,
åue
)Ë
∂ayîHP
 -=10;

65 if(
ítôõs
[
i
].
y
 > 
∂ayîY
 && 
	`cﬁide
(i,
∂ayîX
,∂ayîY+1,
åue
)){

66 i‡(!
sﬁids
[
dunge⁄
[
ítôõs
[
i
].
y
-1][ítôõs[i].
x
]])

68 if(
	`b⁄ycﬁide
(
ítôõs
[
i
].
x
,É¡ôõs[i].
y
-1))Éntities[i].y-=1;}

70 if(!
	`cﬁide
(
i
,
∂ayîX
,
∂ayîY
+1,
åue
)Ë
∂ayîHP
 -=10;

72 if(
ítôõs
[
i
].
y
 < 
∂ayîY
 && 
	`cﬁide
(i,
∂ayîX
,∂ayîY-1,
åue
)){

73 i‡(!
sﬁids
[
dunge⁄
[
ítôõs
[
i
].
y
+1][ítôõs[i].
x
]]){

74 if(
	`b⁄ycﬁide
(
ítôõs
[
i
].
x
,É¡ôõs[i].
y
+1))Éntities[i].y+=1;}

76 if(!
	`cﬁide
(
i
,
∂ayîX
,
∂ayîY
-1,
åue
)Ë
∂ayîHP
 -=10;

78 if(!
	`cﬁide
(
i
,
∂ayîX
,
∂ayîY
,
åue
)){

79 
ítôõs
[
i
].
hp
 -= 1;

81 
ítôõs
[
i
].
id
){

82 
ID_BLOOD_SKELETON
:

83 
	`•rötf
(
¥öãr
,"hô blood skñë⁄, hp: %i", 
ítôõs
[
i
].
hp
);

85 
ID_RAT
:

86 
	`•rötf
(
¥öãr
,"hô gü¡Ñ©, hp: %i", 
ítôõs
[
i
].
hp
);

88 
ID_GOBLIN_WARRIOR
:

89 
	`•rötf
(
¥öãr
,"hô goblö w¨ri‹, hp: %i", 
ítôõs
[
i
].
hp
);

91 
ID_GOBLIN_MAGE
:

92 
	`•rötf
(
¥öãr
,"hô goblö mage, hp: %i", 
ítôõs
[
i
].
hp
);

94 
ID_SKELETON_MAGE
:

95 
	`•rötf
(
¥öãr
,"hô skñë⁄ mage, hp: %i", 
ítôõs
[
i
].
hp
);

97 
ID_SKELETON_ARCHER
:

98 
	`•rötf
(
¥öãr
,"hô skñë⁄árchî, hp: %i", 
ítôõs
[
i
].
hp
);

100 
ID_SKELETON_WARIOR
:

101 
	`•rötf
(
¥öãr
,"hô skñë⁄ w¨i‹, hp: %i", 
ítôõs
[
i
].
hp
);

103 
ID_MIMIC
:

104 
	`•rötf
(
¥öãr
,"hô mimic, hp: %i", 
ítôõs
[
i
].
hp
);

106 
ENTITY_TILES
 + 15:

107 
	`•rötf
(
¥öãr
,"hô zombõ, hp: %i", 
ítôõs
[
i
].
hp
);

109 
ENTITY_TILES
 + 16:

110 
	`•rötf
(
¥öãr
,"hô blﬂãd zombõ, hp: %i", 
ítôõs
[
i
].
hp
);

112 
ENTITY_TILES
 + 17:

113 
	`•rötf
(
¥öãr
,"hô fog, hp: %i", 
ítôõs
[
i
].
hp
);

115 
ENTITY_TILES
 + 18:

116 
	`•rötf
(
¥öãr
,"hô spúô, hp: %i", 
ítôõs
[
i
].
hp
);

118 
ENTITY_TILES
 + 19:

119 
	`•rötf
(
¥öãr
,"hô s∑wn, hp: %i", 
ítôõs
[
i
].
hp
);

121 
ENTITY_TILES
 + 20:

122 
	`•rötf
(
¥öãr
,"hô gü¡ w‹m, hp: %i", 
ítôõs
[
i
].
hp
);

125 if(
ítôõs
[
i
].
hp
 <0 &&É¡ôõs[i].
id
 =
ID_BLOOD_SKELETON
){

126 
ítôõs
[
i
].
id
 = 
ID_BLOOD
;

127 
ítôõs
[
i
].
hp
 = 
	`ønd
()%5;

129 if(
ítôõs
[
i
].
hp
 <= 0){

131 
çgﬁd
 = 
	`ønd
()%5;

132 
∂ayîGﬁd
 +
çgﬁd
;

133 
	`•rötf
(
¥öãr
,"kûÀdÉ√my, gaöed %ògﬁd", 
çgﬁd
);

134 
	`ªmoveE¡ôy
(
i
);

140 
	`¥ötf
("unknow¿íãty %i\n", 
ítôõs
[
i
].
id
);

144  
nocﬁide
;

145 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Coffins\gui.h

1 
	$døwHP
(
hp
){

3 
game
.
di•œy
.
	`døwBôm≠
(212,0,
UI1
);

4 
game
.
di•œy
.
	`døwFa°VLöe
(219,3,158);

5 
game
.
di•œy
.
	`døwFa°VLöe
(211,3,158);

6 
game
.
di•œy
.
	`døwBôm≠
(212,162,
UI2
);

7 
UI_hp
 = 
hp
 * 0.78;

9 if(
hp
 >= 0){

10 
i
 = 0; i < 
UI_hp
; i++){

11 
game
.
di•œy
.
	`døwBôm≠
(213,159-(
i
*2),
UI4
);

13 
game
.
di•œy
.
	`døwBôm≠
(213,160-((
UI_hp
+1)*2),
UI3
);

14 
game
.
di•œy
.
	`døwBôm≠
(213,161,
UI5
);

16 
	}
}

18 
boﬁ
 
	gisInvít‹y
 = 
Ál£
;

19 
	$døwInv
(
x
,
y
){

20 
game
.
di•œy
.
	`£tF⁄t
(
f⁄tAdvítuªr
);

23 
game
.
di•œy
.
	`£tCﬁ‹
(0);

24 
game
.
di•œy
.
	`fûlRe˘
(
x
,
y
,100,
övít‹y
.
	`size
()*17+4);

25 
game
.
di•œy
.
	`£tCﬁ‹
(1);

26 
game
.
di•œy
.
	`døwRe˘™gÀ
(
x
,
y
,100,
övít‹y
.
	`size
()*17+4);

28 
game
.
di•œy
.
	`døwBôm≠
(
x
+2,
y
+6+(
MíuSñe˘‹
*17),
UIS
);

31 
game
.
di•œy
.
	`£tCurs‹
(
x
+8,
y
+2);

32 
game
.
di•œy
.
cﬁ‹
 = 1;

35 
game
.
di•œy
.
	`¥öt
(
övít‹y
[0].
	`c_°r
());

37  
i
 = 0; i < 
övít‹y
.
	`size
(); i++ ) {

38 
game
.
di•œy
.
	`£tCurs‹
(
x
+8,
y
+2+(
i
*17));

39 
game
.
di•œy
.
	`¥öt
(
övít‹y
[
i
].
	`c_°r
());

40 
game
.
di•œy
.
	`døwBôm≠
(
x
+86,
y
+2+(
i
*17),
•rôes
[i+34]);

43 i‡(
game
.
buâ⁄s
.
	`hñd
(
BTN_B
,0Ë|| game.buâ⁄s.hñd(
BTN_LEFT
,0)){

44 
isInvít‹y
 = 
Ál£
;

45 
MíuSñe˘‹
 = 0;

47 i‡(
game
.
buâ⁄s
.
	`ª≥©
(
BTN_UP
,4)){

48 if(
MíuSñe˘‹
 >0)

49 
MíuSñe˘‹
 --;

51 i‡(
game
.
buâ⁄s
.
	`ª≥©
(
BTN_DOWN
,4)){

52 if(
MíuSñe˘‹
 < 
övít‹y
.
	`size
()-1)

53 
MíuSñe˘‹
 ++;

56 
	}
}

57 
	$døwMíu
–
x
,
y
,
s
, 
c
){

58 if(!
isInvít‹y
){

59 i‡(
game
.
buâ⁄s
.
	`hñd
(
BTN_A
,0Ë|| game.buâ⁄s.hñd(
BTN_RIGHT
,0)){

60 
MíuSñe˘‹
){

62 
isInvít‹y
 = 
åue
;

63 
MíuSñe˘‹
 = 0;

75 
GameSèã
 = 
SèãGame
;

76 
MíuSñe˘‹
 = 0;

81 i‡(
game
.
buâ⁄s
.
	`hñd
(
BTN_B
,0Ë|| game.buâ⁄s.hñd(
BTN_LEFT
,0)){

84 i‡(
game
.
buâ⁄s
.
	`ª≥©
(
BTN_UP
,4)){

85 if(
MíuSñe˘‹
 >0)

86 
MíuSñe˘‹
 --;

88 i‡(
game
.
buâ⁄s
.
	`ª≥©
(
BTN_DOWN
,4)){

89 if(
MíuSñe˘‹
 <=3)

90 
MíuSñe˘‹
 ++;

93 
game
.
di•œy
.
	`£tF⁄t
(
f⁄tAdvítuªr
);

94 
game
.
di•œy
.
	`£tCﬁ‹
(0);

95 
game
.
di•œy
.
	`fûlRe˘
(
x
,
y
,65,90);

96 
game
.
di•œy
.
	`£tCﬁ‹
(1+
isInvít‹y
);

97 
game
.
di•œy
.
	`døwRe˘™gÀ
(
x
,
y
,65,90);

100 
game
.
di•œy
.
	`£tCurs‹
(
x
+8,
y
+2);

101 
game
.
di•œy
.
cﬁ‹
 = 1+
isInvít‹y
;

102 
game
.
di•œy
.
	`¥öt
("devs:\n made\n for\n Pokitto\n back");

103 if(
isInvít‹y
){

104 
	`døwInv
(27,1);

106 
game
.
di•œy
.
	`døwBôm≠
(
x
+2,
y
+6+(
s
*17),
UIS
);

107 
game
.
di•œy
.
	`£tF⁄t
(
f⁄t5x7
);

110 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Coffins\main.cpp

1 
	~"Pokôto.h
"

2 
	~<ve˘‹
>

3 
	~<°rög
>

4 
	~"•rôes.h
"

6 
	~"m≠gí.c
"

7 
	~"˛as£s.˝p
"

9 
	#SEED
 344

10 

	)

11 
boﬁ
 
	gsﬁids
[255];

13 
	gdunge⁄
[
MAPSIZE
][MAPSIZE];

14 
	gdunge⁄Size
 = 16;

15 
	gdunge⁄Dïth
 = 1;

17 
boﬁ
 
	$sﬁid
(
m≠
[][
MAPSIZE
],
x
, 
y
){

18  
sﬁids
[
m≠
[
y
][
x
]];

19 
	}
}

21 
	$öô_sﬁids
(){

22  
i
 = 1; i <
ID_COFFIN_OPEN_BOTTOM
; i++ )

23 
sﬁids
[
i
]=
åue
;

24 
	}
}

26 
	gPokôto
::
C‹e
 
game
;

28 
	g∂ayîX
 = 1;

29 
	g∂ayîY
 = 2;

32 
	gE¡
::
	$døw
(){

33 
game
.
di•œy
.
	`døwBôm≠
(
∂ayîX
-
x
*14,
∂ayîY
-
y
*14,
•rôes
[
id
]);

34 
	}
}

36 
	#MAP_TILES
 0

	)

37 
	#ITEM_TILES
 (
MAP_TILES
 + 34)

	)

38 
	#ENTITY_TILES
 (
ITEM_TILES
 + 36)

	)

40 
	#ID_PLAYER
 
ENTITY_TILES
 + 2

	)

42 
	#ID_STAIRS_DOWN
 
MAP_TILES
 + 19

	)

43 
	#ID_GOBLIN_WARRIOR
 
ENTITY_TILES
 + 5

	)

44 
	#ID_GOBLIN_MAGE
 
ENTITY_TILES
 + 6

	)

45 
	#ID_SKELETON_MAGE
 
ENTITY_TILES
 + 7

	)

46 
	#ID_SKELETON_ARCHER
 
ENTITY_TILES
 + 8

	)

47 
	#ID_SKELETON_WARIOR
 
ENTITY_TILES
 + 9

	)

48 
	#ID_BLOOD_SKELETON
 
ENTITY_TILES
 + 10

	)

49 
	#ID_BLOOD
 
ENTITY_TILES
 + 11

	)

50 
	#ID_RAT
 
ENTITY_TILES
 + 4

	)

51 
	#ID_SCROLL
 
ITEM_TILES
 + 3

	)

52 
	#ID_CHEST
 
ENTITY_TILES
 + 12

	)

53 
	#ID_CHEST_OPEN
 
ENTITY_TILES
 + 13

	)

54 
	#ID_MIMIC
 
ENTITY_TILES
 + 14

	)

55 
	#ID_COIN
 
ITEM_TILES


	)

56 
	#ID_COINS
 
ITEM_TILES
 + 1

	)

57 
	#ID_BAG
 
ITEM_TILES
 + 2

	)

59 
	#SèãGame
 0

	)

60 
	#SèãMíu
 1

	)

61 
	#SèãI¡ro
 2

	)

62 
	#SèãDód
 3

	)

64 
	$addDes˚¡
(
m≠
[][
MAPSIZE
]){

65 
x
=
	`øndom
(1,
dunge⁄Size
-1);

66 
y
=
	`øndom
(1,
dunge⁄Size
-1);

67 i‡(!
	`sﬁid
(
m≠
,
x
,
y
) && !solid(map,x-1,y) && !solid(map,x+1,y) && !solid(map,x,y-1) && !solid(map,x,y+1)) {

68 
m≠
[
y
][
x
] = 
ID_STAIRS_DOWN
;

71 
	`addDes˚¡
(
m≠
);

73 
	}
}

77 
	sítôy
{

78 
uöt8_t
 
	mx
;

79 
uöt8_t
 
	my
;

80 
öt8_t
 
	mhp
;

81 
uöt8_t
 
	mid
;

83 
	#ESIZE
 2

	)

84 
	g°d
::
ve˘‹
<
ítôy
> 
ítôõs
(
ESIZE
);

85 
	g°d
::
ve˘‹
<
°d
::
°rög
> 
övít‹y
;

87 
	$ªmoveE¡ôy
(
i
){

89 
usög
 
°d
::
sw≠
;

90 
°d
::
	`sw≠
(
ítôõs
[
i
],É¡ôõs.
	`back
());

91 
ítôõs
.
	`p›_back
();

93 
	}
}

95 
	$•aw√r
(
amou¡
){

96 
ítôõs
.
	`˛ór
();

97 
i
 = 0; i < 
amou¡
; i++ ){

98 
ítôy
 
•awn
;

99 
boﬁ
 
l
 = 
åue
;

100 
sx
, 
sy
;

101 
l
){

102 
sx
 = 
	`ønd
()%
dunge⁄Size
;

103 
sy
 = 
	`ønd
()%
dunge⁄Size
;

104 if(
dunge⁄
[
sy
][
sx
] == 0){

105 
•awn
.
id
 = 
ENTITY_TILES
+4+(
	`ønd
()%16);

106 
•awn
.
x
 = 
sx
;

107 
•awn
.
y
 = 
sy
;

108 
•awn
.
hp
 = 
	`ønd
()%20;

109 
ítôõs
.
	`push_back
(
•awn
);

110 
l
 = 
Ál£
;

114 
	}
}

117 
	g¥öãr
[40] = "";

118 
	g∂ayîGﬁd
 = 0;

119 
	g∂ayîHP
 = 100;

120 
uöt8_t
 
	gGameSèã
 = 
SèãI¡ro
;

121 
uöt8_t
 
	gMíuSñe˘‹
 = 0;

122 
	~"gui.h
"

123 
	~"¸≠ai.h
"

124 
usög
 
«me•a˚
 
	g°d
;

127 
	$maö
 () {

128 
	`öô_sﬁids
();

129 
	`§™d
(
SEED
);

130 
	`m≠öô
(
dunge⁄
,
dunge⁄Size
,dungeonSize);

131 
	`m≠gí
(
dunge⁄
,
dunge⁄Size
,dungeonSize,0,0,dungeonSize-1,dungeonSize-1);

132 
	`m≠¥ëty
(
dunge⁄
,
dunge⁄Size
,dungeonSize);

133 
	`addDes˚¡
(
dunge⁄
);

134 
°d
::
ve˘‹
<
E¡
> 
íts
;

135 
övít‹y
.
	`push_back
("adekto");

136 
övít‹y
.
	`push_back
("trelemar");

137 
övít‹y
.
	`push_back
("VonBednar");

138 
övít‹y
.
	`push_back
("wuuff");

139 
E¡
 
	`Eãmp
(3,3);

140 
íts
.
	`push_back
(
Eãmp
);

141 
	`pokInôSD
();

142 
game
.
sound
.
	`∂ayMusicSåóm
("coffins/coffins.snd");

143 
game
.
	`begö
();

144 
game
.
sound
.
	`∂ayMusicSåóm
();

145 
game
.
di•œy
.
	`£tF⁄t
(
f⁄t5x7
);

149 
game
.
di•œy
.
	`lﬂdRGBPÆëã
(
∑ÀâeCGA
);

152 
game
.
di•œy
.
	`£tInvisibÀCﬁ‹
(0);

154 
	`•aw√r
(
ESIZE
);

160 
uöt8_t
 
öåo•ö√r
=0xFF;

162 
game
.
	`isRu¬ög
()) {

164 i‡(
game
.
	`upd©e
()) {

166 if–
GameSèã
 =
SèãI¡ro
){

167 i‡(
öåo•ö√r
<85) {

168 
game
.
di•œy
.
	`£tF⁄t
(
f⁄tAdvítuªr
);

169 
game
.
di•œy
.
	`£tCurs‹
(game.di•œy.
	`gëWidth
()/4-16,36);

170 
game
.
di•œy
.
	`¥öt
("Columns & Coffins \n \n A Pokitto Roguelike \n \n PRESS A(z)");

171 
game
.
di•œy
.
	`£tF⁄t
(
f⁄t5x7
);

172 } i‡(
öåo•ö√r
>160) {

173 
game
.
di•œy
.
	`lﬂd565PÆëã
(
˙˘ôÀ_∑l
);

174 
game
.
di•œy
.
	`døwBôm≠
(0,0,
˙˘ôÀ
);

176 
game
.
di•œy
.
	`lﬂdRGBPÆëã
(
∑ÀâeCGA
);

177 
game
.
di•œy
.
	`døwBôm≠
(33,70,
pokôãam
);

179 if–
game
.
buâ⁄s
.
	`hñd
(
BTN_A
,0) ){

180 
game
.
di•œy
.
	`lﬂdRGBPÆëã
(
∑ÀâeCGA
);

181 
GameSèã
 = 
SèãGame
;

183 
öåo•ö√r
--;

187 if–
GameSèã
 =
SèãDód
){

188 
game
.
di•œy
.
	`£tF⁄t
(
f⁄tAdvítuªr
);

189 
game
.
di•œy
.
	`£tCurs‹
(game.di•œy.
	`gëWidth
()/4,32);

190 
ovî
[60];

192 
	`•rötf
(
ovî
,"GamêOvî \¿\¿ You dõd o¿Êo‹ %ò\¿\¿ wôh %ògﬁd",
dunge⁄Dïth
,
∂ayîGﬁd
);

193 
game
.
di•œy
.
	`¥öt
(
ovî
);

197 
game
.
di•œy
.
	`¥öt
("\n \n PRESS A");

198 if–
game
.
buâ⁄s
.
	`hñd
(
BTN_A
,0) ){

199 
GameSèã
 = 
SèãI¡ro
;

200 
dunge⁄Size
 = 16;

201 
dunge⁄Dïth
 = 1;

202 
∂ayîHP
 = 100;

203 
∂ayîX
 = 1;

204 
∂ayîY
 = 2;

205 
	`m≠öô
(
dunge⁄
,
dunge⁄Size
,dungeonSize);

206 
	`m≠gí
(
dunge⁄
,
dunge⁄Size
,dungeonSize,0,0,dungeonSize-1,dungeonSize-1);

207 
	`m≠¥ëty
(
dunge⁄
,
dunge⁄Size
,dungeonSize);

208 
	`addDes˚¡
(
dunge⁄
);

209 
	`•aw√r
(
ESIZE
);

211 
game
.
di•œy
.
	`£tF⁄t
(
f⁄t5x7
);

216 if–
dunge⁄
[
∂ayîY
][
∂ayîX
] =
ID_STAIRS_DOWN
 ){

217 if–
dunge⁄Size
 + 2 < 
MAPSIZE
 ){

218 
dunge⁄Size
 += 2;

220 
dunge⁄Dïth
++;

221 
∂ayîX
 = 1;

222 
∂ayîY
 = 2;

223 
	`m≠öô
(
dunge⁄
,
dunge⁄Size
,dungeonSize);

224 
	`m≠gí
(
dunge⁄
,
dunge⁄Size
,dungeonSize,0,0,dungeonSize-1,dungeonSize-1);

225 
	`m≠¥ëty
(
dunge⁄
,
dunge⁄Size
,dungeonSize);

226 
	`addDes˚¡
(
dunge⁄
);

227 
	`•aw√r
(
ESIZE
);

230 i‡(
game
.
buâ⁄s
.
	`hñd
(
BTN_C
,0)){

232 if(
GameSèã
 =
SèãGame
){

234 
GameSèã
 = 
SèãMíu
;

236 if(
GameSèã
 =
SèãMíu
){

238 
GameSèã
 = 
SèãGame
;

239 
MíuSñe˘‹
 = 0;

240 
isInvít‹y
 = 
Ál£
;

243 if(
GameSèã
 =
SèãGame
){

244 if–
∂ayîHP
 <= 0){

245 
GameSèã
 = 
SèãDód
;

249 i‡(
game
.
buâ⁄s
.
	`ª≥©
(
BTN_UP
,4)){

250 i‡(!
sﬁids
[
dunge⁄
[
∂ayîY
-1][
∂ayîX
]]){

251 if(
	`ítôõsLogic
–
∂ayîX
, 
∂ayîY
-1))ÖlayerY --;

254 i‡(
game
.
buâ⁄s
.
	`ª≥©
(
BTN_DOWN
,4)){

255 i‡(!
sﬁids
[
dunge⁄
[
∂ayîY
+1][
∂ayîX
]]){

256 if(
	`ítôõsLogic
–
∂ayîX
, 
∂ayîY
+1))ÖlayerY ++;

259 i‡(
game
.
buâ⁄s
.
	`ª≥©
(
BTN_LEFT
,4)){

260 i‡(!
sﬁids
[
dunge⁄
[
∂ayîY
][
∂ayîX
-1]]){

261 if(
	`ítôõsLogic
–
∂ayîX
-1, 
∂ayîY
))playerX --;

264 i‡(
game
.
buâ⁄s
.
	`ª≥©
(
BTN_RIGHT
,4)){

265 i‡(!
sﬁids
[
dunge⁄
[
∂ayîY
][
∂ayîX
+1]]){

266 if(
	`ítôõsLogic
–
∂ayîX
+1, 
∂ayîY
))playerX ++;

272 
x
 =
∂ayîX
-7; x<playerX+8; x++){

273 
y
 =
∂ayîY
-6; y<playerY+6; y++){

274 if(
x
 >0 && 
y
 >0 && x < 
dunge⁄Size
 && y < dungeonSize){

275 
game
.
di•œy
.
	`døwBôm≠
(14*(
x
-
∂ayîX
+7),14*(
y
-
∂ayîY
+6),
•rôes
[
dunge⁄
[y][x]]);

280 
i
=0; i<
ítôõs
.
	`size
(); ++i){

281 
game
.
di•œy
.
cﬁ‹
 = 0;

282 
game
.
di•œy
.
	`fûlRe˘
(14*(
ítôõs
[
i
].
x
-
∂ayîX
+7),14*”¡ôõs[i].
y
-
∂ayîY
+6),14,14);

283 
game
.
di•œy
.
	`døwBôm≠
(14*(
ítôõs
[
i
].
x
-
∂ayîX
+7),14*”¡ôõs[i].
y
-
∂ayîY
+6),
•rôes
[ítôõs[i].
id
]);

286 
game
.
di•œy
.
	`£tCurs‹
(0,168);

287 
game
.
di•œy
.
cﬁ‹
 = 1;

288 
game
.
di•œy
.
	`¥öt
(
¥öãr
);

292 
	`døwHP
–
∂ayîHP
);

295 
game
.
di•œy
.
	`døwBôm≠
(14*(7),14*(6),
•rôes
[
ID_PLAYER
]);

297 if(
GameSèã
 =
SèãMíu
){

298 
	`døwMíu
–1,1, 
MíuSñe˘‹
,1);

305 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Coffins\mapgen.c

1 
	~<°dio.h
>

2 
	~<°dlib.h
>

4 
	#MAPSIZE
 64

	)

6 
	#ID_FLOOR
 0

	)

7 
	#ID_WALL_TOP
 1

	)

8 
	#ID_WALL
 2

	)

9 
	#ID_WALL_SKULL
 3

	)

10 
	#ID_WALL_FLAME
 4

	)

11 
	#ID_WALL_HOLE
 5

	)

12 
	#ID_WALL_SHIELD
 6

	)

13 
	#ID_COLUMN_TOP_SQUARE_1
 7

	)

14 
	#ID_COLUMN_TOP_SQUARE_2
 9

	)

15 
	#ID_COLUMN_TOP_SQUARE_3
 10

	)

16 
	#ID_COLUMN_TOP_ROUND_1
 11

	)

17 
	#ID_COLUMN_TOP_ROUND_2
 13

	)

18 
	#ID_COLUMN_BOTTOM_SQUARE_1
 8

	)

19 
	#ID_COLUMN_BOTTOM_ROUND_1
 12

	)

20 
	#ID_COLUMN_BOTTOM_ROUND_2
 14

	)

21 
	#ID_COFFIN_CLOSED_TOP
 15

	)

22 
	#ID_COFFIN_CLOSED_BOTTOM
 16

	)

23 
	#ID_COFFIN_OPEN_TOP
 17

	)

24 
	#ID_COFFIN_OPEN_BOTTOM
 18

	)

25 
	#ID_COBWEB
 33

	)

27 
m≠öô
(
m≠
[][
MAPSIZE
], 
width
, 
height
);

28 
m≠gí
(
m≠
[][
MAPSIZE
], 
m≠width
, 
m≠height
, 
°¨tx
, 
°¨ty
, 
ídx
, 
ídy
);

29 
m≠¥öt
(
m≠
[][
MAPSIZE
], 
width
, 
height
);

31 
	$m≠öô
(
m≠
[][
MAPSIZE
], 
width
, 
height
){

32 
i
,
j
;

35  
i
 = 0; i < 
width
; i++ ){

36  
j
 = 0; j < 
height
; j++ ){

37 
m≠
[
j
][
i
] = 0;

41  
i
 = 0; i < 
width
; i++ ){

42 
m≠
[0][
i
] = 1;

43 
m≠
[
height
-1][
i
] = 1;

45  
j
 = 0; j < 
height
; j++ ){

46 
m≠
[
j
][0] = 1;

47 
m≠
[
j
][
width
-1] = 1;

49 
	}
}

51 
	#HORIZONTAL
 0

	)

52 
	#VERTICAL
 1

	)

53 
	#MIN_WIDTH
 6

	)

54 
	#MIN_HEIGHT
 8

	)

55 
	#HALL_CHANCE
 40

	)

56 
	#MIN_HALL_WIDTH
 8

	)

57 
	#MIN_HALL_HEIGHT
 10

	)

58 
	#MAX_HALL_WIDTH
 18

	)

59 
	#MAX_HALL_HEIGHT
 20

	)

60 
	#EXTRA_DOOR
 10

	)

61 
	#REM_WALL_CHANCE
 25

	)

62 
	#MAX_REM_WALL
 10

	)

63 
	$m≠gí
(
m≠
[][
MAPSIZE
], 
m≠width
, 
m≠height
, 
°¨tx
, 
°¨ty
, 
ídx
, 
ídy
){

64 
i
,
j
,
‹õ¡©i⁄
,
posôi⁄
,
do‹
,
do‹2
,
do‹cou¡
,
hÆl
,
cﬁ•a˚x
,
cﬁ•a˚y
,
ªmwÆl
;

65 
width
 = 
ídx
-
°¨tx
;

66 
height
 = 
ídy
-
°¨ty
;

68 if–
width
 < 
MIN_WIDTH
 && 
height
 < 
MIN_HEIGHT
 ){

74 if–
width
 >
MIN_HALL_WIDTH
 && 
height
 >
MIN_HALL_HEIGHT
 && width < 
MAX_HALL_WIDTH
 && heighà< 
MAX_HALL_HEIGHT
 ){

75 
hÆl
 = 
	`ønd
()%100;

76 if–
HALL_CHANCE
 > 
hÆl
 ){

77 
hÆl
 = 
	`ønd
()%3;

81 
cﬁ•a˚x
 = 
width
;

82 if–
cﬁ•a˚x
%2 != 0 ){

83 
cﬁ•a˚x
--;

85  
cﬁ•a˚x
%2 == 0 && colspacex > 4 ) colspacex /= 2;

86 
cﬁ•a˚y
 = 
height
;

87 if–
cﬁ•a˚y
%4 != 0 )

89  
cﬁ•a˚y
%4 != 0 ) colspacey++;

91  
cﬁ•a˚y
%4 == 0 && colspacey > 4 ) colspacey /= 4;

93  
i
 = 
°¨tx
+
cﬁ•a˚x
; i < sèπx + 
width
 - 1; i+=colspacex ){

94  
j
 = 
°¨ty
+
cﬁ•a˚y
; j < sèπy + 
height
 - 2; j+=colspacey ){

95 if–
hÆl
 == 0 ){

96  
	`ønd
()%3 ){

98 
m≠
[
j
][
i
] = 
ID_COLUMN_TOP_SQUARE_1
;

101 
m≠
[
j
][
i
] = 
ID_COLUMN_TOP_SQUARE_2
;

104 
m≠
[
j
][
i
] = 
ID_COLUMN_TOP_SQUARE_3
;

107 
m≠
[
j
+1][
i
] = 
ID_COLUMN_BOTTOM_SQUARE_1
;

108 }if–
hÆl
 == 1 ){

109  
	`ønd
()%2 ){

111 
m≠
[
j
][
i
] = 
ID_COLUMN_TOP_ROUND_1
;

114 
m≠
[
j
][
i
] = 
ID_COLUMN_TOP_ROUND_2
;

117  
	`ønd
()%2 ){

119 
m≠
[
j
+1][
i
] = 
ID_COLUMN_BOTTOM_ROUND_1
;

122 
m≠
[
j
+1][
i
] = 
ID_COLUMN_BOTTOM_ROUND_2
;

126  
	`ønd
()%2 ){

128 
m≠
[
j
][
i
] = 
ID_COFFIN_CLOSED_TOP
;

129 
m≠
[
j
+1][
i
] = 
ID_COFFIN_CLOSED_BOTTOM
;

132 
m≠
[
j
][
i
] = 
ID_COFFIN_OPEN_TOP
;

133 
m≠
[
j
+1][
i
] = 
ID_COFFIN_OPEN_BOTTOM
;

147 if–
width
 >
height
 ){

151 
do‹cou¡
 = 0;

152  
i
 = 
°¨tx
; i < 
ídx
; i++ ){

153 if–
m≠
[
°¨ty
][
i
] =0 ) 
do‹cou¡
++;

154 if–
m≠
[
ídy
][
i
] =0 ) 
do‹cou¡
++;

156 if–
width
 < 
MIN_WIDTH
 + 
do‹cou¡
 ){

159 
‹õ¡©i⁄
 = 
VERTICAL
;

165 
do‹cou¡
 = 0;

166  
i
 = 
°¨ty
; i < 
ídy
; i++ ){

167 if–
m≠
[
i
][
°¨tx
] =0 ) 
do‹cou¡
++;

168 if–
m≠
[
i
][
ídx
] =0 ) 
do‹cou¡
++;

170 if–
height
 < 
MIN_HEIGHT
 + 
do‹cou¡
 ){

173 
‹õ¡©i⁄
 = 
HORIZONTAL
;

178 
posôi⁄
 = -1;

179 if–
‹õ¡©i⁄
 =
HORIZONTAL
 ){

184  
posôi⁄
 =-1 ||Öosôi⁄ < 
°¨ty
 + (
MIN_HEIGHT
/2Ë||Öosôi⁄ > 
ídy
 - (MIN_HEIGHT/2Ë|| 
m≠
[posôi⁄][
°¨tx
] =0 || m≠[posôi⁄][
ídx
] == 0 ){

185 
posôi⁄
 = 
°¨ty
 + (
	`ønd
()%
height
);

188 
do‹
 = 
°¨tx
 + 1 + (
	`ønd
()%(
width
-1));

193 
do‹2
 = 
width
 >
EXTRA_DOOR
 ? 
°¨tx
 + 1 + (
	`ønd
()%(width-1)) : -1;

195  
i
 = 
°¨tx
+1; i < sèπx + 
width
; i++ ){

196 if–
i
 !
do‹
 && i !
do‹2
 )

197 
m≠
[
posôi⁄
][
i
] = 1;

203 if–
°¨tx
 > 0 && 
ídx
 < 
m≠width
-1 ){

206 if– 
posôi⁄
 - 
°¨ty
 < 
MAX_REM_WALL
 ){

207 
ªmwÆl
 = 1;

210  
i
 = 
°¨ty
+1; i < 
posôi⁄
; i++ ){

211 if–
m≠
[
i
][
°¨tx
-1] != 0 ){

212 
ªmwÆl
 = 0;

216 if–
ªmwÆl
 && 
REM_WALL_CHANCE
 > (
	`ønd
()%100) ){

217  
i
 = 
°¨ty
+1; i < 
posôi⁄
; i++ ){

218 
m≠
[
i
][
°¨tx
] = 0;

224 if– 
ídy
 - 
posôi⁄
 < 
MAX_REM_WALL
 ){

225 
ªmwÆl
 = 1;

228  
i
 = 
posôi⁄
+1; i < 
ídy
; i++ ){

229 if–
m≠
[
i
][
°¨tx
+1] != 0 ){

230 
ªmwÆl
 = 0;

234 if–
ªmwÆl
 && 
REM_WALL_CHANCE
 > (
	`ønd
()%100) ){

235  
i
 = 
posôi⁄
+1; i < 
ídy
; i++ ){

236 
m≠
[
i
][
°¨tx
] = 0;

242 
	`m≠gí
(
m≠
, 
m≠width
, 
m≠height
, 
°¨tx
, 
°¨ty
, 
ídx
,
posôi⁄
);

243 
	`m≠gí
(
m≠
, 
m≠width
, 
m≠height
, 
°¨tx
, 
posôi⁄
, 
ídx
, 
ídy
);

244 }if–
‹õ¡©i⁄
 =
VERTICAL
 ){

249  
posôi⁄
 =-1 ||Öosôi⁄ < 
°¨tx
 + (
MIN_WIDTH
/2Ë||Öosôi⁄ > 
ídx
 - (MIN_WIDTH/2Ë|| 
m≠
[
°¨ty
][posôi⁄] =0 || m≠[
ídy
][position] == 0 ){

250 
posôi⁄
 = 
°¨tx
 + (
	`ønd
()%
width
);

254 
do‹
 = 
°¨ty
 + 1 + (
	`ønd
()%(
height
-2));

259 
do‹2
 = 
height
 >
EXTRA_DOOR
 ? 
°¨ty
 + 1 + (
	`ønd
()%(height-2)) : -1;

261  
i
 = 
°¨ty
+1; i < sèπy + 
height
; i++ ){

262 if–
i
 !
do‹
 && i !do‹+1 && i !
do‹2
 && i != door2+1 )

263 
m≠
[
i
][
posôi⁄
] = 1;

269 if–
°¨ty
 > 0 && 
ídy
 < 
m≠height
-1 ){

272 if– 
posôi⁄
 - 
°¨tx
 < 
MAX_REM_WALL
 ){

273 
ªmwÆl
 = 1;

276  
i
 = 
°¨tx
+1; i < 
posôi⁄
; i++ ){

277 if–
m≠
[
°¨ty
-1][
i
] != 0 ){

278 
ªmwÆl
 = 0;

282 if–
ªmwÆl
 && 
REM_WALL_CHANCE
 > (
	`ønd
()%100) ){

283  
i
 = 
°¨tx
+1; i < 
posôi⁄
; i++ ){

284 
m≠
[
°¨ty
][
i
] = 0;

290 if– 
ídx
 - 
posôi⁄
 < 
MAX_REM_WALL
 ){

291 
ªmwÆl
 = 1;

294  
i
 = 
posôi⁄
+1; i < 
ídx
; i++ ){

295 if–
m≠
[
°¨ty
-1][
i
] != 0 ){

296 
ªmwÆl
 = 0;

300 if–
ªmwÆl
 && 
REM_WALL_CHANCE
 > (
	`ønd
()%100) ){

301  
i
 = 
posôi⁄
+1; i < 
ídx
; i++ ){

302 
m≠
[
°¨ty
][
i
] = 0;

308 
	`m≠gí
(
m≠
, 
m≠width
, 
m≠height
, 
°¨tx
, 
°¨ty
, 
posôi⁄
,
ídy
);

309 
	`m≠gí
(
m≠
, 
m≠width
, 
m≠height
, 
posôi⁄
, 
°¨ty
, 
ídx
, 
ídy
);

311 
	}
}

313 
	$m≠¥öt
(
m≠
[][
MAPSIZE
], 
width
, 
height
){

314 
i
,
j
;

316  
i
 = 0; i < 
height
; i++ ){

317  
j
 = 0; j < 
width
; j++ ){

318 if–
m≠
[
i
][
j
] == 0 ){

319 
	`¥ötf
("0");

320 }if–
m≠
[
i
][
j
] == 1 ){

321 
	`¥ötf
("1");

324 
	`puts
("");

326 
	}
}

328 
	$m≠¥ëty
(
m≠
[][
MAPSIZE
],
width
, 
height
){

329 
i
,
j
,
v
;

330 
i
=0; i < 
height
-1; i++) {

331 
j
=0;j<
width
-1;j++){

332 i‡(
m≠
[
i
][
j
]==1 && map[i+1][j]==0){

333 
v
 = 
	`ønd
()%25 + 3;

335 if–
v
 <
ID_WALL_SHIELD
 ){

336 
m≠
[
i
+1][
j
] = 
v
;

338 
m≠
[
i
+1][
j
]=
ID_WALL
;

342 i‡(
m≠
[
i
][
j
]==0 && m≠[i+1][j]==1 && m≠[i][j-1]==1 && 
	`ønd
()%10 <=1) {

343 
m≠
[
i
][
j
]=
ID_COBWEB
;

347 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Coffins\sprites.h

8 c⁄° 
uöt8_t
 
	g•rôes
[][66] = {

1985 
uöt8_t
 
	gUI1
[] ={

1991 
uöt8_t
 
	gUI2
[] ={

1997 
uöt8_t
 
	gUI3
[] ={

2003 
uöt8_t
 
	gUI4
[] ={

2008 
uöt8_t
 
	gUI5
[] ={

2013 
uöt8_t
 
	gUIS
[] ={

2024 c⁄° 
uöt16_t
 
	g˙˘ôÀ_∑l
[] = {

2028 c⁄° 
uöt8_t
 
	gpokôãam
[] = {

2039 c⁄° 
uöt8_t
 
	g˙˘ôÀ
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Crabator\Crabator.cpp

2 
	~<Pokôto.h
>

3 
	~"Cøb©‹.h
"

4 
	gPokôto
::
C‹e
 
gb
;

8 
uöt16_t
 
	ghazïÆëã
[16];

10 c⁄° 
byã
 
f⁄t3x5
[];

11 c⁄° 
byã
 
f⁄t5x7
[];

13 
	#WORLD_W
 16

	)

14 
	#WORLD_H
 12

	)

15 
uöt8_t
 
	gbyãWidth
 = (
WORLD_H
 + 7) / 8;

18 c⁄° 
byã
 
PROGMEM
 
logo
[];

19 c⁄° 
byã
 
PROGMEM
 
w‹ld
[];

20 c⁄° 
byã
 
PROGMEM
 
tûes
[];

21 c⁄° 
byã
 
PROGMEM
 
mobS¥ôe
[];

22 c⁄° 
byã
 
PROGMEM
 
bossS¥ôe
[];

23 c⁄° 
byã
 
PROGMEM
 
∂ayîS¥ôe
[];

24 c⁄° 
byã
 
PROGMEM
 
•œshS¥ôe
[];

25 c⁄° 
byã
 
PROGMEM
 
¸©eS¥ôe
[];

26 c⁄° 
byã
 
PROGMEM
 
fuŒHóπ
[];

27 c⁄° 
byã
 
PROGMEM
 
hÆfHóπ
[];

28 c⁄° 
byã
 
PROGMEM
 
em±yHóπ
[];

30 
	#∂ayîW
 6

	)

31 
	#∂ayîH
 6

	)

32 
byã
 
	g∂ayîS≥ed
;

33 
	g∂ayîX
;

34 
	g∂ayîY
;

35 
	g∂ayîLi„
;

36 
	#∂ayîLi„Max
 6

	)

37 
byã
 
	g∂ayîDú
;

38 
	gˇmîaX
;

39 
	gˇmîaY
;

40 
byã
 
	gshake_magnôude
;

41 
byã
 
	gshake_timeLe·
;

42 c⁄° 
PROGMEM
 
uöt16_t
 
	g∂ayî_damage_sound
[] = {0x0045,0x564,0x0000};

45 
	#NUMMOBS
 16

	)

46 
	#INITNUMMOBS
 4

	)

47 
	#MOBSRATE
 6

48 
	#BOSSFREQ
 16

49 
	#BOSSRATE
 1

50 
byã
 
boss_√xtS∑wn
;

	)

51 
byã
 
	gboss_‰eq
;

52 
byã
 
	ga˘iveMobs
;

53 
	gmobs_x
[
NUMMOBS
];

54 
	gmobs_y
[
NUMMOBS
];

55 
byã
 
	gmobs_dú
[
NUMMOBS
];

56 
öt8_t
 
	gmobs_li„
[
NUMMOBS
];

57 
byã
 
	gmobs_size
[
NUMMOBS
];

58 
byã
 
	gmob_maxLi„
 = 10;

59 
byã
 
	gboss_maxLi„
 = 100;

60 
	#boss_size
 6

	)

61 
	#mob_size
 4

	)

63 c⁄° 
PROGMEM
 
uöt16_t
 
	gmob_dóth_sound
[] = {0x0045,0x184,0x0000};

65 
	#NUMSPLASH
 16

	)

66 
boﬁón
 
	g•œsh_a˘ive
[
NUMSPLASH
];

67 
	g•œsh_x
[
NUMSPLASH
];

68 
	g•œsh_y
[
NUMSPLASH
];

69 
	g•œsh_dú
[
NUMSPLASH
];

72 
	#NUMBULLETS
 10

	)

73 
	gbuŒës_x
[
NUMBULLETS
];

74 
	gbuŒës_y
[
NUMBULLETS
];

75 
byã
 
	gbuŒës_dú
[
NUMBULLETS
];

76 
boﬁón
 
	gbuŒës_a˘ive
[
NUMBULLETS
];

77 
byã
 
	gbuŒës_wóp⁄
[
NUMBULLETS
];

79 
	gbœ°_x
;

80 
	gbœ°_y
;

81 
byã
 
	gbœ°_li„•™
;

82 
byã
 
	gbœ°_buŒë
;

84 
	#NUMWEAPONS
 5

	)

85 
byã
 
	gcuºítWóp⁄
;

86 
byã
 
	g√xtShŸ
;

88 c⁄° 
	g°r357
[] 
	gPROGMEM
 = ".357";

89 c⁄° 
	g°rP90
[] 
	gPROGMEM
 = "P90";

90 c⁄° 
	g°rAK47
[] 
	gPROGMEM
 = "AK47";

91 c⁄° 
	g°rRPG
[] 
	gPROGMEM
 = "RPG";

92 c⁄° 
	g°rMG42
[] 
	gPROGMEM
 = "MG42";

93 c⁄° * c⁄° 
	gwóp⁄_«me
[
NUMWEAPONS
] 
	gPROGMEM
 = {

94 
°r357
,
°rP90
, 
°rAK47
, 
°rRPG
, 
°rMG42
};

95 c⁄° 
byã
 
	gwóp⁄_size
[
NUMWEAPONS
] = {

97 c⁄° 
byã
 
	gwóp⁄_damage
[
NUMWEAPONS
] = {

99 c⁄° 
byã
 
	gwóp⁄_øã
[
NUMWEAPONS
] = {

101 c⁄° 
byã
 
	gwóp⁄_•ìd
[
NUMWEAPONS
] = {

103 c⁄° 
byã
 
	gwóp⁄_•ªad
[
NUMWEAPONS
] = {

105 c⁄° 
byã
 
	gwóp⁄_í√myRecoû
[
NUMWEAPONS
] = {

107 c⁄° 
byã
 
	gwóp⁄_∂ayîRecoû
[
NUMWEAPONS
] = {

109 c⁄° 
	gwóp⁄_ammo
[
NUMWEAPONS
] = {

111 
	gammo
;

113 c⁄° 
uöt16_t
 
	gmagnum_sound
[] 
	gPROGMEM
 = {0x0045,0x7049,0x17C,0x784D,0x42C,0x0000};

114 c⁄° 
uöt16_t
 
	gp90_sound
[] 
	gPROGMEM
 = {0x0045, 0x0154, 0x0000};

115 c⁄° 
uöt16_t
 
	gp90_Æã∫©ive_sound
[] 
	gPROGMEM
 = {0x0045, 0x014C, 0x0000};

116 c⁄° 
uöt16_t
 
	gak47_sound
[] 
	gPROGMEM
 = {0x0045, 0x012C, 0x0000};

117 c⁄° 
uöt16_t
 
	gmg42_sound
[] 
	gPROGMEM
 = {0x0045,0x140,0x8141,0x7849,0x788D,0x52C,0x0000};

118 c⁄° 
uöt16_t
 
	gΩg_sound
[] 
	gPROGMEM
 = {0x0045,0x8101,0x7F30,0x0000};

120 c⁄° 
uöt16_t
* c⁄° 
	gwóp⁄s_sounds
[
NUMWEAPONS
] 
	gPROGMEM
= {

121 
magnum_sound
, 
p90_sound
, 
ak47_sound
, 
Ωg_sound
, 
mg42_sound
};

122 c⁄° 
uöt16_t
 
	gbœ°_sound
[] 
	gPROGMEM
 = {0x0045,0x7849,0x784D,0xA28,0x0000};

123 
	g¸©e_x
, 
	g¸©e_y
;

124 c⁄° 
uöt16_t
 
	gpowî_up
[] 
	gPROGMEM
 = {0x0005,0x140,0x150,0x15C,0x170,0x180,0x16C,0x154,0x160,0x174,0x184,0x14C,0x15C,0x168,0x17C,0x18C,0x0000};

127 
	#RANKMAX
 5

128 
sc‹e
 = 0;

	)

130 
	gkûls
 = 0;

131 
	ghighsc‹e
[
RANKMAX
];

133 
	#NAMELENGTH
 10

	)

134 
	g«me
[
RANKMAX
][
NAMELENGTH
+1];

138 
lﬂdHighsc‹e
();

139 
öôGame
();

140 
boﬁón
 
cﬁlideW‹ld
(
öt16_t
, i¡16_t, 
uöt8_t
, uint8_t);

141 
damageMob
(
byã
,byte);

142 
boﬁón
 
checkMobCﬁlisi⁄s
(
byã
);

143 
boﬁón
 
cﬁlideOthîMobs
(
byã
);

144 
∑u£m
();

145 
∂ay
();

146 
di•œyHighSc‹es
();

147 
ßveHighsc‹e
();

148 
shakeS¸ìn
();

149 
døwW‹ld
(
öt16_t
, int16_t);

150 
di•œySc‹e
();

157 
	$£tup
() {

163 
gb
.
di•œy
.
∑Àâe
[1] = 
COLOR_WHITE
;

164 
gb
.
di•œy
.
∑Àâe
[2] = 
COLOR_CYAN
;

165 
gb
.
di•œy
.
∑Àâe
[3] = 
COLOR_MAGENTA
;

166 
gb
.
di•œy
.
∑Àâe
[4] = 
COLOR_RED
;

167 
gb
.
di•œy
.
∑Àâe
[8] = gb.di•œy.
	`RGBto565
(0xff,0xfc,0);

168 
gb
.
di•œy
.
∑Àâe
[7] = gb.di•œy.
	`RGBto565
(0x18,0x9a,0x61);

169 
gb
.
di•œy
.
∑Àâe
[5] = gb.di•œy.
	`RGBto565
(0x2c,0xff,0x0b);

170 
gb
.
di•œy
.
∑Àâe
[6] = gb.di•œy.
	`RGBto565
(0xf7,0xb2,0);

171 
gb
.
di•œy
.
∑Àâe
[9] = gb.di•œy.
	`RGBto565
(0xfc,0x14,4);

172 
gb
.
di•œy
.
∑Àâe
[10] = gb.di•œy.
	`RGBto565
(0,0x53,0xae);

173 
gb
.
di•œy
.
∑Àâe
[15] = gb.di•œy.
	`RGBto565
(0xff,0xfd,0xbf);

181 
uöt16_t
 
k
 =0 ; k<16; k++Ë
hazïÆëã
[k] = 
gb
.
di•œy
.
	`öãΩﬁ©eCﬁ‹
(gb.di•œy.
∑Àâe
[k],gb.display.palette[15],0);

182 
gb
.
di•œy
.
∑Àâïå
 = 
hazïÆëã
;

183 
	`pokInôSD
();

184 
gb
.
sound
.
	`∂ayMusicSåóm
("music/bitburnr.snd");

185 
gb
.
	`begö
();

187 
gb
.
di•œy
.
	`£tF⁄t
(
f⁄t5x7
);

188 
gb
.
	`tôÀS¸ìn
(
logo
);

190 
gb
.
	`pickR™domSìd
();

191 
	`lﬂdHighsc‹e
();

192 
gb
.
sound
.
	`∂ayMusicSåóm
();

193 
	`öôGame
();

194 
	}
}

197 
	$lo›
() {

198 
	`∂ay
();

199 i‡(!
gb
.
	`isRu¬ög
()) ;

200 
	`∑u£m
();

201 i‡(!
gb
.
	`isRu¬ög
()) ;

202 
gb
.
	`tôÀS¸ìn
(
logo
);

203 
	}
}

206 
boﬁón
 
	$s¸ìnCo‹d
(
absﬁuãX
, 
absﬁuãY
, &
x
, &
y
){

207 
x
 = 
absﬁuãX
 - 
ˇmîaX
 + 8;

208 
x
 = (x >0Ë? x%(
WORLD_W
*8) : WORLD_W*8 + x%(WORLD_W*8);

209 
x
 -= 8;

210 
y
 = 
absﬁuãY
 - 
ˇmîaY
 + 8;

211 
y
 = (y >0Ë? y%(
WORLD_H
*8) : WORLD_H*8 + y%(WORLD_H*8);

212 
y
 -= 8;

213 if((
x
 > 
LCDWIDTH
Ë|| (
y
 > 
LCDHEIGHT
))

214  
Ál£
;

215  
åue
;

216 
	}
}

218 
	#wøp
(
i
, 
imax
Ë((imax+i)%(imax))

	)

221 
	$moveXYDS
(&
x
, &
y
, 
byã
 &
dú
, 
öt8_t
 
•ìd
){

222 
dú
){

224 
y
 -
•ìd
;

227 
x
 -
•ìd
;

230 
y
 +
•ìd
;

233 
x
 +
•ìd
;

236 
x
 = 
	`wøp
(x, 
WORLD_W
*8);

237 
y
 = 
	`wøp
(y, 
WORLD_H
*8);

238 
	}
}

241 
byã
 
	$di°™˚Bëwìn
(
pos1
, 
pos2
, 
w‹ldSize
){

242 
byã
 
di°
 = 
	`abs
(
pos1
 - 
pos2
);

243 
di°
 = (di° < 
w‹ldSize
/2) ? dist : worldSize - dist;

244  
di°
;

245 
	}
}

248 
	$assignAºay
(*
¨øy1
, *
¨øy2
, 
byã
 
Àngth
){

249 
byã
 
i
=0; i<
Àngth
; i++)

250 
¨øy1
[
i
] = 
¨øy2
[i];

251 
	}
}

254 
	#mö
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

255 
	#max
(
a
,
b
Ë((◊)>(b))?◊):(b))

	)

258 
	$shoŸ
(){

259 if(
ammo
){

260 if(
√xtShŸ
 == 0){

261 
byã
 
thisBuŒë
 = 0;ÅhisBuŒë < 
NUMBULLETS
;ÅhisBullet++){

262 if(!
buŒës_a˘ive
[
thisBuŒë
]){

263 
buŒës_a˘ive
[
thisBuŒë
] = 
åue
;

264 
buŒës_wóp⁄
[
thisBuŒë
] = 
cuºítWóp⁄
;

266 
√xtShŸ
 = 
wóp⁄_øã
[
cuºítWóp⁄
];

267 
ammo
--;

269 
öt8_t
 
•ªadMax
 = 
wóp⁄_•ªad
[
cuºítWóp⁄
];

270 
öt8_t
 
•ªadMö
 = (
wóp⁄_size
[
cuºítWóp⁄
]%2==0Ë? -
•ªadMax
 : -spreadMax-1;

271 
buŒës_x
[
thisBuŒë
] = 
∂ayîX
 + 
∂ayîW
/2 + 
	`øndom
(
•ªadMö
,
•ªadMax
+1Ë- 
wóp⁄_size
[
cuºítWóp⁄
]/2;

272 
buŒës_y
[
thisBuŒë
] = 
∂ayîY
 + 
∂ayîH
/2 + 
	`øndom
(
•ªadMö
,
•ªadMax
+1Ë- 
wóp⁄_size
[
cuºítWóp⁄
]/2;

274 
buŒës_dú
[
thisBuŒë
] = 
∂ayîDú
;

275 
bœ°_buŒë
 = 
thisBuŒë
;

276 if(((
cuºítWóp⁄
 =1)||(cuºítWóp⁄==4))&&(
gb
.
‰ameCou¡
%2))

280 
gb
.
sound
.
	`∂ayP©ã∫
((
uöt16_t
*)
	`pgm_ªad_w‹d
(&(
wóp⁄s_sounds
[
cuºítWóp⁄
])), 0);

282 if(
cuºítWóp⁄
 == 1){

283 if(
	`ønd
()%2)

284 
gb
.
sound
.
	`∂ayP©ã∫
(
p90_Æã∫©ive_sound
, 0);

287 
byã
 
ªcoû
 = 
wóp⁄_∂ayîRecoû
[
cuºítWóp⁄
];

288 
	`moveXYDS
(
∂ayîX
, 
∂ayîY
, 
∂ayîDú
, -
ªcoû
);

289 
byã
 
i
 = 0; i<
ªcoû
; i++){

290 if(
	`cﬁlideW‹ld
(
∂ayîX
, 
∂ayîY
, 
∂ayîW
, 
∂ayîH
))

291 
	`moveXYDS
(
∂ayîX
, 
∂ayîY
, 
∂ayîDú
, 1);

295 if(
cuºítWóp⁄
 == 4){

296 
shake_magnôude
 = 1;

297 
shake_timeLe·
 = 2;

305 
cuºítWóp⁄
 = 
	`max
(0, currentWeapon-1);

306 
ammo
 = 
wóp⁄_ammo
[
cuºítWóp⁄
];

307 
√xtShŸ
 = 20;

308 
gb
.
	`p›up
(("Out ofámmo!"), 30);

310 
	}
}

313 
	$moveBuŒës
(){

314 
byã
 
thisBuŒë
 = 0;ÅhisBuŒë < 
NUMBULLETS
;ÅhisBullet++){

315 if(
buŒës_a˘ive
[
thisBuŒë
]){

316 
byã
 
s
 = 
wóp⁄_size
[
buŒës_wóp⁄
[
thisBuŒë
]];

317 
	`moveXYDS
(
buŒës_x
[
thisBuŒë
], 
buŒës_y
[thisBuŒë], 
buŒës_dú
[thisBuŒë], 
wóp⁄_•ìd
[
buŒës_wóp⁄
[thisBullet]]);

320 if(
	`cﬁlideW‹ld
(
buŒës_x
[
thisBuŒë
], 
buŒës_y
[thisBuŒë], 
s
, s)){

321 
buŒës_a˘ive
[
thisBuŒë
] = 
Ál£
;

322 if(
buŒës_wóp⁄
[
thisBuŒë
] == 3){

323 
bœ°_x
 = 
buŒës_x
[
thisBuŒë
];

324 
bœ°_y
 = 
buŒës_y
[
thisBuŒë
];

325 
bœ°_li„•™
 = 8;

326 
gb
.
sound
.
	`∂ayP©ã∫
(
bœ°_sound
, 0);

333 
byã
 
thisMob
=0;ÅhisMob<
a˘iveMobs
;ÅhisMob++){

335 if(
gb
.
	`cﬁlideRe˘Re˘
(
buŒës_x
[
thisBuŒë
], 
buŒës_y
[thisBuŒë], 
s
, s,

336 
mobs_x
[
thisMob
], 
mobs_y
[thisMob], 
mobs_size
[thisMob], mobs_size[thisMob])){

338 if(
buŒës_wóp⁄
[
thisBuŒë
] == 3){

339 
bœ°_x
 = 
buŒës_x
[
thisBuŒë
];

340 
bœ°_y
 = 
buŒës_y
[
thisBuŒë
];

341 
bœ°_li„•™
 = 8;

342 
gb
.
sound
.
	`∂ayP©ã∫
(
bœ°_sound
, 0);

345 
	`damageMob
(
thisMob
, 
thisBuŒë
);

347 
buŒës_a˘ive
[
thisBuŒë
] = 
Ál£
;

354 
	}
}

357 
	$ex∂ode
(){

358 if(
bœ°_li„•™
){

359 
bœ°_li„•™
--;

361 
shake_magnôude
 = 4;

362 
shake_timeLe·
 = 2;

364 
byã
 
s
 = 10 + 
	`øndom
 (0,6);

365 
x
 = 
bœ°_x
 + 
	`øndom
(-4,4Ë-
s
/2;

366 
y
 = 
bœ°_y
 + 
	`øndom
(-4,4Ë-
s
/2;

368 
byã
 
thisMob
=0;ÅhisMob<
a˘iveMobs
;ÅhisMob++){

369 if(
gb
.
	`cﬁlideRe˘Re˘
(
mobs_x
[
thisMob
], 
mobs_y
[thisMob], 
mobs_size
[thisMob], mobs_size[thisMob],

370 
x
,
y
,
s
,s))

371 
	`damageMob
(
thisMob
,
bœ°_buŒë
);

374 
x_s¸ìn
, 
y_s¸ìn
;

375 if(
	`s¸ìnCo‹d
(
x
, 
y
, 
x_s¸ìn
, 
y_s¸ìn
))

376 
gb
.
di•œy
.
	`fûlRe˘
(
x_s¸ìn
, 
y_s¸ìn
, 
s
, s);

378 
	}
}

381 
	$døwBuŒës
(){

382 
gb
.
di•œy
.
	`£tCﬁ‹
(1);

383 
byã
 
thisBuŒë
 = 0;ÅhisBuŒë < 
NUMBULLETS
;ÅhisBullet++){

384 if(
buŒës_a˘ive
[
thisBuŒë
]){

385 
x
, 
y
;

386 if(
	`s¸ìnCo‹d
(
buŒës_x
[
thisBuŒë
], 
buŒës_y
[thisBuŒë], 
x
, 
y
)){

387 
byã
 
s
 = 
wóp⁄_size
[
buŒës_wóp⁄
[
thisBuŒë
]];

388 if(
s
==1)

389 
gb
.
di•œy
.
	`døwPixñ
(
x
, 
y
);

391 
gb
.
di•œy
.
	`fûlRe˘
(
x
, 
y
, 
s
, s);

395 
	}
}

398 
	$døwAmmoOvîœy
(){

399 if(
ammo
){

417 
gb
.
di•œy
.
	`£tCﬁ‹
(2);

418 
gb
.
di•œy
.
curs‹X
 = 0;

419 
gb
.
di•œy
.
curs‹Y
 = 
LCDHEIGHT
-gb.di•œy.
f⁄tHeight
;

420 
gb
.
di•œy
.
	`¥öt
((*)(
wóp⁄_«me
[
cuºítWóp⁄
]));

422 if(
√xtShŸ
>2)

423 
gb
.
di•œy
.
	`fûlRe˘
(-2,
LCDHEIGHT
-2,
√xtShŸ
,2);

424 if(
cuºítWóp⁄
 > 0){

425 
byã
 
xOff£t
 = 0;

426 i‡(
ammo
 < 100)

427 
xOff£t
 +
gb
.
di•œy
.
f⁄tWidth
;

428 i‡(
ammo
 < 10)

429 
xOff£t
 +
gb
.
di•œy
.
f⁄tWidth
;

430 
gb
.
di•œy
.
curs‹X
 = 
LCDWIDTH
-3*gb.di•œy.
f⁄tWidth
+
xOff£t
;

431 
gb
.
di•œy
.
curs‹Y
 = 
LCDHEIGHT
-gb.di•œy.
f⁄tHeight
;

432 
gb
.
di•œy
.
	`¥öt
(
ammo
);

435 
gb
.
di•œy
.
curs‹X
 = 
LCDWIDTH
-3*gb.di•œy.
f⁄tWidth
;

436 
gb
.
di•œy
.
curs‹Y
 = 
LCDHEIGHT
-gb.di•œy.
f⁄tHeight
;

437 
gb
.
di•œy
.
	`¥öt
(("inf"));

440 
	}
}

443 
	$£tS∂ash
(
x
, 
y
){

444 
byã
 
thisS∂ash
 = 0;ÅhisS∂ash < 
NUMSPLASH
;ÅhisSplash++){

445 if(!
•œsh_a˘ive
[
thisS∂ash
]){

446 
•œsh_a˘ive
[
thisS∂ash
] = 
åue
;

447 
•œsh_x
[
thisS∂ash
] = 
x
;

448 
•œsh_y
[
thisS∂ash
] = 
y
;

449 
•œsh_dú
[
thisS∂ash
] = 
	`øndom
(0,5);

453 
	}
}

456 
	$døwS∂ashes
(){

457 
byã
 
thisS∂ash
 = 0;ÅhisS∂ash < 
NUMSPLASH
;ÅhisSplash++){

458 if(
•œsh_a˘ive
[
thisS∂ash
]){

459 
x
, 
y
;

460 if(
	`s¸ìnCo‹d
(
•œsh_x
[
thisS∂ash
], 
•œsh_y
[thisS∂ash], 
x
, 
y
)){

462 
gb
.
di•œy
.
	`døwBôm≠
(
x
-2, 
y
-2, 
•œshS¥ôe
, 
•œsh_dú
[
thisS∂ash
], 
NOFLIP
);

465 
•œsh_a˘ive
[
thisS∂ash
] = 
Ál£
;

469 
	}
}

473 
	$•awnCøã
(){

474 
boﬁón
 
okay
 = 
Ál£
;

475 
okay
 =
Ál£
){

477 
¸©e_x
 = 
	`øndom
(0, 
WORLD_W
) * 8;

478 
¸©e_y
 = 
	`øndom
(0, 
WORLD_H
) * 8;

479 
okay
 = 
åue
;

481 if(
	`cﬁlideW‹ld
(
¸©e_x
, 
¸©e_y
, 8, 8)){

482 
okay
 = 
Ál£
;

485 
x
, 
y
;

486 if(
	`s¸ìnCo‹d
(
¸©e_x
, 
¸©e_y
, 
x
, 
y
)){

487 
okay
 = 
Ál£
;

490 
	}
}

493 
	$cﬁlideCøã
(){

494 if(
gb
.
	`cﬁlideRe˘Re˘
(
¸©e_x
+2, 
¸©e_y
+2, 4, 4, 
∂ayîX
, 
∂ayîY
, 
∂ayîW
, 
∂ayîH
)){

495 i‡(
sc‹e
 <5){

496 
gb
.
	`p›up
(("Earn $5 first"), 30);

499 if(
cuºítWóp⁄
<(
NUMWEAPONS
-1)){

500 
gb
.
	`p›up
(("Upgraded !"), 30);

501 
gb
.
sound
.
	`∂ayP©ã∫
(
powî_up
,0);

504 
gb
.
	`p›up
(("Refilled !"), 30);

506 
sc‹e
 -= 5;

507 
	`•awnCøã
();

508 
cuºítWóp⁄
 = 
	`mö
(
NUMWEAPONS
-1, currentWeapon+1);

509 
ammo
 = 
wóp⁄_ammo
[
cuºítWóp⁄
];

512 
∂ayîLi„
 = 
	`mö
’œyîLi„+1, 
∂ayîLi„Max
);

513 
hazeÁ˘‹
 = (255-42*
∂ayîLi„
)*2/3;

514 
uöt16_t
 
k
 =0 ; k<16; k++Ë
hazïÆëã
[k] = 
gb
.
di•œy
.
	`öãΩﬁ©eCﬁ‹
(gb.di•œy.
∑Àâe
[k],gb.di•œy.∑Àâe[4],
hazeÁ˘‹
);

517 
	}
}

520 
	$døwCøã
(){

521 
x
, 
y
;

522 if(
	`s¸ìnCo‹d
(
¸©e_x
, 
¸©e_y
, 
x
, 
y
)){

523 
gb
.
di•œy
.
	`£tCﬁ‹
(8);

524 
gb
.
di•œy
.
	`døwBôm≠
(
x
, 
y
, 
¸©eS¥ôe
);

528 
	}
}

533 
boﬁón
 
	$•awnMob
(
byã
 
thisMob
){

534 
boﬁón
 
okay
 = 
Ál£
;

535 
byã
 
timout
 = 0;

536 
mobs_size
[
thisMob
] = 
mob_size
;

537 
mobs_li„
[
thisMob
] = 
mob_maxLi„
;

538 if(!
boss_√xtS∑wn
){

539 
boss_‰eq
 = 
	`max
(boss_‰eq - 
BOSSRATE
, 1);

540 
boss_√xtS∑wn
 = 
boss_‰eq
;

541 
mobs_size
[
thisMob
] = 
boss_size
;

542 
mobs_li„
[
thisMob
] = 
boss_maxLi„
;

545 
okay
 =
Ál£
){

547 
mobs_x
[
thisMob
] = 
	`øndom
(0, 
WORLD_W
*2) * 4;

548 
mobs_y
[
thisMob
] = 
	`øndom
(0, 
WORLD_H
*2) * 4;

550 
okay
 = 
åue
;

552 if(
	`checkMobCﬁlisi⁄s
(
thisMob
)){

553 
okay
 = 
Ál£
;

557 if(
	`wøp
(
mobs_x
[
thisMob
] - 
ˇmîaX
, 
WORLD_W
*8Ë< 
LCDWIDTH
){

558 
okay
 = 
Ál£
;

561 if(
	`wøp
(
mobs_y
[
thisMob
] - 
ˇmîaY
, 
WORLD_H
*8Ë< 
LCDHEIGHT
){

562 
okay
 = 
Ál£
;

566 
mobs_dú
[
thisMob
] = 
	`ønd
() % 4;

567  
åue
;

568 
	}
}

571 
boﬁón
 
	$•awnMobs
(){

572 
byã
 
thisMob
=0;ÅhisMob<
a˘iveMobs
;ÅhisMob++){

573 
mobs_x
[
thisMob
] = 9999;

574 
mobs_y
[
thisMob
] = 9999;

576 
byã
 
thisMob
=0;ÅhisMob<
a˘iveMobs
;ÅhisMob++){

577 if(!
	`•awnMob
(
thisMob
))

578  
Ál£
;

580  
åue
;

581 
	}
}

584 
	$moveMobs
(){

585 
byã
 
thisMob
=0;ÅhisMob<
a˘iveMobs
;ÅhisMob++){

586 
x
 = 
	`wøp
(
mobs_x
[
thisMob
] - 
ˇmîaX
, 
WORLD_W
*8);

587 
y
 = 
	`wøp
(
mobs_y
[
thisMob
] - 
ˇmîaY
, 
WORLD_H
*8);

589 if–(
	`di°™˚Bëwìn
(
mobs_x
[
thisMob
], 
∂ayîX
, 
WORLD_W
*8Ë< (
LCDWIDTH
+32)Ë&& (di°™˚Bëwìn(
mobs_y
[thisMob], 
∂ayîY
, 
WORLD_H
*8Ë< (
LCDHEIGHT
+32))){

590 
	`moveXYDS
(
mobs_x
[
thisMob
], 
mobs_y
[thisMob], 
mobs_dú
[thisMob], 1);

593 if(
	`checkMobCﬁlisi⁄s
(
thisMob
)){

594 
	`moveXYDS
(
mobs_x
[
thisMob
], 
mobs_y
[thisMob], 
mobs_dú
[thisMob], -1);

595 
mobs_dú
[
thisMob
] = 
	`ønd
()%4;

600 if(
	`øndom
(0,32)==0){

601 
mobs_dú
[
thisMob
] = 
	`ønd
()%4;

606 if(
	`øndom
(0,16)==0){

607 if(
	`øndom
(0,2)){

609 if((
LCDWIDTH
/2 - 
x
) > 0){

610 
mobs_dú
[
thisMob
] = 3;

613 
mobs_dú
[
thisMob
] = 1;

619 if((
LCDHEIGHT
/2 - 
y
) > 0){

620 
mobs_dú
[
thisMob
] = 2;

623 
mobs_dú
[
thisMob
] = 0;

629 
	}
}

632 
boﬁón
 
	$checkMobCﬁlisi⁄s
(
byã
 
thisMob
){

634 if(
	`cﬁlideW‹ld
(
mobs_x
[
thisMob
], 
mobs_y
[thisMob], 
mobs_size
[thisMob], mobs_size[thisMob]))

635  
åue
;

637 if(
	`cﬁlideOthîMobs
(
thisMob
))

638  
åue
;

639  
Ál£
;

640 
	}
}

644 
boﬁón
 
	$cﬁlideOthîMobs
(
byã
 
thisMob
){

645 
byã
 
ŸhîMob
=0; othîMob<
a˘iveMobs
; otherMob++){

646 if(
thisMob
 =
ŸhîMob
)

648 if(
gb
.
	`cﬁlideRe˘Re˘
(
mobs_x
[
thisMob
], 
mobs_y
[thisMob], 
mobs_size
[thisMob], mobs_size[thisMob],

649 
mobs_x
[
ŸhîMob
], 
mobs_y
[ŸhîMob], 
mobs_size
[otherMob], mobs_size[otherMob])){

650  
åue
;

653  
Ál£
;

654 
	}
}

657 
	$døwMobs
(){

658 
gb
.
di•œy
.
	`£tCﬁ‹
(1);

659 
byã
 
thisMob
=0;ÅhisMob<
a˘iveMobs
;ÅhisMob++){

662 
x
, 
y
;

663 if(
	`s¸ìnCo‹d
(
mobs_x
[
thisMob
], 
mobs_y
[thisMob], 
x
, 
y
)){

664 if(
mobs_size
[
thisMob
] !
boss_size
)

666 
gb
.
di•œy
.
	`£tCﬁ‹
(8);

667 
gb
.
di•œy
.
	`døwBôm≠
(
x
-2, 
y
-2, 
mobS¥ôe
, 
mobs_dú
[
thisMob
], 
NOFLIP
);

669 { 
gb
.
di•œy
.
	`£tCﬁ‹
(9);

670 
gb
.
di•œy
.
	`døwBôm≠
(
x
-1, 
y
-1, 
bossS¥ôe
, 
mobs_dú
[
thisMob
], 
NOFLIP
);

675 
	}
}

678 
	$damageMob
(
byã
 
thisMob
, byã 
thisBuŒë
){

679 
mobs_li„
[
thisMob
] -
wóp⁄_damage
[
buŒës_wóp⁄
[
thisBuŒë
]];

681 
byã
 
ªcoû
 = 
wóp⁄_í√myRecoû
[
buŒës_wóp⁄
[
thisBuŒë
]];

682 if(
mobs_size
[
thisMob
] =
boss_size
)

683 
ªcoû
 /= 4;

684 
	`moveXYDS
(
mobs_x
[
thisMob
], 
mobs_y
[thisMob], 
buŒës_dú
[
thisBuŒë
], 
ªcoû
);

685 if(
	`checkMobCﬁlisi⁄s
(
thisMob
))

686 
	`moveXYDS
(
mobs_x
[
thisMob
], 
mobs_y
[thisMob], 
buŒës_dú
[
thisBuŒë
], -
ªcoû
);

687 
mobs_dú
[
thisMob
] = (
buŒës_dú
[
thisBuŒë
] + 2) % 4;

689 if(
mobs_li„
[
thisMob
] <= 0){

690 
sc‹e
++;

691 
kûls
++;

692 
boss_√xtS∑wn
--;

693 if(
buŒës_wóp⁄
[
thisBuŒë
]!=3){

694 
gb
.
sound
.
	`∂ayP©ã∫
(
mob_dóth_sound
,0);

696 if(
mobs_size
[
thisMob
] =
boss_size
)

697 
sc‹e
 += 4;

698 
	`£tS∂ash
(
mobs_x
[
thisMob
], 
mobs_y
[thisMob]);

699 
x
, 
y
;

700 if(
	`s¸ìnCo‹d
(
mobs_x
[
thisMob
], 
mobs_y
[thisMob], 
x
, 
y
)){

701 
gb
.
di•œy
.
	`fûlRe˘
(
x
-1, 
y
-1, 
mobs_size
[
thisMob
]+1, mobs_size[thisMob]+1);

704 
	`•awnMob
(
thisMob
);

705 if(
a˘iveMobs
 < 
NUMMOBS
){

706 if(
a˘iveMobs
 < (
kûls
/
MOBSRATE
)+
INITNUMMOBS
){

707 
a˘iveMobs
++;

708 
	`•awnMob
(
a˘iveMobs
-1);

714 
	}
}

718 
	#PAUSEMENULENGTH
 5

	)

719 c⁄° 
	g°rPœy
[] 
	gPROGMEM
 = "Play";

720 c⁄° 
	g°rRe°¨t
[] 
	gPROGMEM
 = "Restart";

721 c⁄° 
	g°rHighSc‹es
[] 
	gPROGMEM
 = "High scores";

722 c⁄° 
	g°rSy°emInfo
[] 
	gPROGMEM
 = "System Info";

723 c⁄° 
	g°rMaöMíu
[] 
	gPROGMEM
 = "Main Menu";

726 c⁄° * c⁄° 
	g∑u£Míu
[
PAUSEMENULENGTH
] 
	gPROGMEM
 = {

727 
°rPœy
,

728 
°rRe°¨t
,

729 
°rHighSc‹es
,

730 
°rSy°emInfo
,

731 
°rMaöMíu


735 
	$∑u£m
(){

736 
gb
.
	`isRu¬ög
()){

737 if(
gb
.
	`upd©e
()){

738 
gb
.
	`míu
(
∑u£Míu
, 
PAUSEMENULENGTH
)){

740 
gb
.
	`waô
(100);

741 
gb
.
di•œy
.
	`£tF⁄t
(
f⁄t3x5
);

742 
	`∂ay
();

743 
gb
.
di•œy
.
	`£tF⁄t
(
f⁄t5x7
);

744 
gb
.
b©ãry
.
show
 = 
åue
;

747 
	`öôGame
();

748 
gb
.
di•œy
.
	`£tF⁄t
(
f⁄t3x5
);

749 
	`∂ay
();

750 
gb
.
di•œy
.
	`£tF⁄t
(
f⁄t5x7
);

751 
gb
.
b©ãry
.
show
 = 
åue
;

754 
	`di•œyHighSc‹es
();

757 
gb
.
di•œy
.
	`£tF⁄t
(
f⁄t3x5
);

759 i‡(
gb
.
	`upd©e
()) {

760 i‡(
gb
.
buâ⁄s
.
	`¥es£d
(
BTN_C
)) {

761 
gb
.
di•œy
.
	`£tF⁄t
(
f⁄t5x7
);

762 
gb
.
sound
.
	`∂ayC™˚l
();

766 
gb
.
di•œy
.
	`¥öt
(("Bat:"));

767 
gb
.
di•œy
.
	`¥öt
(gb.
b©ãry
.
vﬁège
);

768 
gb
.
di•œy
.
	`¥öén
(("mV"));

770 
gb
.
di•œy
.
	`¥öt
(("BatÜvl:"));

771 
gb
.
di•œy
.
	`¥öt
(gb.
b©ãry
.
Àvñ
);

772 
gb
.
di•œy
.
	`¥öén
(("/4"));

774 
gb
.
di•œy
.
	`¥öt
(("Light:"));

775 
gb
.
di•œy
.
	`¥öén
(gb.
backlight
.
ambõ¡Light
);

777 
gb
.
di•œy
.
	`¥öt
(("Backlight:"));

778 
gb
.
di•œy
.
	`¥öén
(gb.
backlight
.
backlightVÆue
);

780 
gb
.
di•œy
.
	`¥öt
(("Volume:"));

781 
gb
.
di•œy
.
	`¥öt
(gb.
sound
.
	`gëVﬁume
());

785 
gb
.
di•œy
.
	`¥öt
("Mobs:");

786 
gb
.
di•œy
.
	`¥öt
(
a˘iveMobs
);

787 
gb
.
di•œy
.
	`¥öt
("/");

788 
gb
.
di•œy
.
	`¥öén
(
NUMMOBS
);

790 
gb
.
di•œy
.
	`¥öt
("Killed:");

791 
gb
.
di•œy
.
	`¥öén
(
kûls
);

797 
gb
.
	`tôÀS¸ìn
(
logo
);

804 
	}
}

807 
	$di•œyHighSc‹es
(){

808 
åue
){

809 if(
gb
.
	`upd©e
()){

810 
gb
.
di•œy
.
curs‹X
 = 9+
	`øndom
(0,2);

811 
gb
.
di•œy
.
curs‹Y
 = 0+
	`øndom
(0,2);

812 
gb
.
di•œy
.
	`¥öén
(("HIGH SCORES"));

813 
gb
.
di•œy
.
ãxtWøp
 = 
Ál£
;

814 
gb
.
di•œy
.
curs‹X
 = 0;

815 
gb
.
di•œy
.
curs‹Y
 = gb.di•œy.
f⁄tHeight
;

816 
byã
 
thisSc‹e
=0;ÅhisSc‹e<
RANKMAX
;ÅhisScore++){

817 if(
highsc‹e
[
thisSc‹e
]==0)

818 
gb
.
di•œy
.
	`¥öt
('-');

820 
gb
.
di•œy
.
	`¥öt
(
«me
[
thisSc‹e
]);

821 
gb
.
di•œy
.
curs‹X
 = 
LCDWIDTH
-3*gb.di•œy.
f⁄tWidth
;

822 
gb
.
di•œy
.
curs‹Y
 = gb.di•œy.
f⁄tHeight
+gb.di•œy.f⁄tHeight*
thisSc‹e
;

823 
gb
.
di•œy
.
	`¥öén
(
highsc‹e
[
thisSc‹e
]);

825 if(
gb
.
buâ⁄s
.
	`¥es£d
(
BTN_A
Ë|| gb.buâ⁄s.¥es£d(
BTN_B
Ë|| gb.buâ⁄s.¥es£d(
BTN_C
)){

826 
gb
.
sound
.
	`∂ayOK
();

831 
	}
}

837 
	$öôGame
(){

839 if(
sc‹e
 > 
highsc‹e
[
RANKMAX
-1]){

840 
	`ßveHighsc‹e
();

843 
sc‹e
 = 0;

844 
kûls
 = 0;

845 
cuºítWóp⁄
 = 0;

846 
ammo
 = 9999;

847 
√xtShŸ
 = 0;

848 
shake_timeLe·
 = 0;

849 
∂ayîLi„
 = 
∂ayîLi„Max
;

850 
boss_‰eq
 = 
BOSSFREQ
;

851 
boss_√xtS∑wn
 = 
boss_‰eq
;

852 
a˘iveMobs
 = 
INITNUMMOBS
;

855 
∂ayîX
 = 
	`øndom
(0, 
WORLD_W
) * 8;

856 
∂ayîY
 = 
	`øndom
(0, 
WORLD_H
) * 8;

858 
	`cﬁlideW‹ld
(
∂ayîX
, 
∂ayîY
, 
∂ayîW
, 
∂ayîH
));

859 
ˇmîaX
 = 
∂ayîX
 - 
LCDWIDTH
/2 + 
∂ayîW
/2;

860 
ˇmîaY
 = 
∂ayîY
 - 
LCDHEIGHT
/2 + 
∂ayîW
/2;

862 !
	`•awnMobs
());

864 
	`•awnCøã
();

866 
byã
 
thisBuŒë
 = 0;ÅhisBuŒë < 
NUMBULLETS
;ÅhisBullet++){

867 
buŒës_a˘ive
[
thisBuŒë
] = 
Ál£
;

870 
byã
 
thisS∂ash
 = 0;ÅhisS∂ash < 
NUMSPLASH
;ÅhisSplash++){

871 
•œsh_a˘ive
[
thisS∂ash
] = 
Ál£
;

873 
bœ°_li„•™
 = 0;

874 
	}
}

877 
	$∂ay
(){

878 
gb
.
b©ãry
.
show
 = 
Ál£
;

879 
byã
 
i
 = 0;

880 
i
 < 10 && 
gb
.
	`isRu¬ög
()){

881 if(
gb
.
	`upd©e
()){

882 
gb
.
di•œy
.
f⁄tSize
 = 2;

883 
gb
.
di•œy
.
curs‹X
 = 6;

884 
gb
.
di•œy
.
curs‹Y
 = 16;

885 
gb
.
di•œy
.
	`¥öt
(("LET'S GO!"));

886 
i
++;

889 
gb
.
di•œy
.
f⁄tSize
 = 1;

890 
gb
.
	`p›up
(("\x15:shoot \x16:run"), 60);

892 
gb
.
	`isRu¬ög
()){

893 if(
gb
.
	`upd©e
()){

894 if(
gb
.
buâ⁄s
.
	`¥es£d
(
BTN_C
)){

895 
gb
.
sound
.
	`∂ayC™˚l
();

901 
boﬁón
 
moved
 = 
Ál£
;

902 if(
gb
.
buâ⁄s
.
	`ª≥©
(
BTN_RIGHT
, 1)){

903 
∂ayîDú
 = 3;

904 
moved
 = 
åue
;

907 if(
gb
.
buâ⁄s
.
	`ª≥©
(
BTN_LEFT
, 1)){

908 
∂ayîDú
 = 1;

909 
moved
 = 
åue
;

912 if(
gb
.
buâ⁄s
.
	`ª≥©
(
BTN_DOWN
, 1)){

913 
∂ayîDú
 = 2;

914 
moved
 = 
åue
;

917 if(
gb
.
buâ⁄s
.
	`ª≥©
(
BTN_UP
, 1)){

918 
∂ayîDú
 = 0;

919 
moved
 = 
åue
;

922 if(
moved
){

923 
	`moveXYDS
(
∂ayîX
, 
∂ayîY
, 
∂ayîDú
, 
∂ayîS≥ed
);

924 if(
	`cﬁlideW‹ld
(
∂ayîX
, 
∂ayîY
, 
∂ayîW
, 
∂ayîH
))

925 
	`moveXYDS
(
∂ayîX
, 
∂ayîY
, 
∂ayîDú
, -
∂ayîS≥ed
);

927 
ˇmîaX
 = 
∂ayîX
 + 
∂ayîW
/2 - 
LCDWIDTH
/2;

928 
ˇmîaY
 = 
∂ayîY
 + 
∂ayîH
/2 - 
LCDHEIGHT
/2;

929 
	`shakeS¸ìn
();

936 
x
, 
y
;

937 
	`s¸ìnCo‹d
(
∂ayîX
, 
∂ayîY
, 
x
, 
y
);

939 
öt8_t
 
ox
=0,
oy
=0;

940 
ox
--;

942 
gb
.
di•œy
.
	`£tCﬁ‹
(3);

943 
gb
.
di•œy
.
	`døwBôm≠
(
x
, 
y
, 
∂ayîS¥ôe
, 
∂ayîDú
, 
NOFLIP
);

944 
byã
 
thisS¥ôe
 = 0;

945 
	`moveMobs
();

946 
	`døwMobs
();

947 if(
√xtShŸ
)

948 
√xtShŸ
--;

949 if(
gb
.
buâ⁄s
.
	`ª≥©
(
BTN_A
, 1Ë&& !gb.buâ⁄s.ª≥©(
BTN_B
, 1)){

950 
	`shoŸ
();

952 i‡(
gb
.
buâ⁄s
.
	`ª≥©
(
BTN_B
, 1)){

953 
∂ayîS≥ed
 = 2;

956 
∂ayîS≥ed
 = 1;

958 
	`moveBuŒës
();

959 
	`døwBuŒës
();

960 
	`ex∂ode
();

961 
gb
.
di•œy
.
	`£tCﬁ‹
(4);

962 
	`døwS∂ashes
();

963 
	`cﬁlideCøã
();

964 
	`døwCøã
();

968 
gb
.
di•œy
.
	`£tCﬁ‹
(5);

969 
	`døwW‹ld
(
ˇmîaX
, 
ˇmîaY
);

971 
byã
 
i
=0; i<=
∂ayîLi„Max
/2; i+=1){

972 if((
i
*2)<=
∂ayîLi„
){

973 
gb
.
di•œy
.
	`£tCﬁ‹
(4);

974 
gb
.
di•œy
.
	`døwBôm≠
(
LCDWIDTH
-
i
*9+2, 0, 
fuŒHóπ
);

977 
gb
.
di•œy
.
	`£tCﬁ‹
(0,0);

978 
gb
.
di•œy
.
	`døwBôm≠
(
LCDWIDTH
-
i
*9+2, 0, 
fuŒHóπ
);

979 
gb
.
di•œy
.
	`£tCﬁ‹
(4,0);

980 
gb
.
di•œy
.
	`døwBôm≠
(
LCDWIDTH
-
i
*9+2, 0, 
em±yHóπ
);

983 if(!
∂ayîLi„
){

984 if((
gb
.
‰ameCou¡
%2)==0){

985 
shake_magnôude
 = 2;

986 
shake_timeLe·
 = 1;

990 if(
∂ayîLi„
 == 1){

991 
shake_magnôude
 = 1;

992 
shake_timeLe·
 = 1;

996 if(
∂ayîLi„
%2){

997 
gb
.
di•œy
.
	`£tCﬁ‹
(4,0);

998 
gb
.
di•œy
.
	`døwBôm≠
(
LCDWIDTH
-(
∂ayîLi„
/2+1)*9+2, 0, 
hÆfHóπ
);

1001 
	`døwAmmoOvîœy
();

1003 
	`di•œySc‹e
();

1004 
byã
 
thisMob
=0;ÅhisMob<
a˘iveMobs
;ÅhisMob++){

1005 if(
gb
.
	`cﬁlideRe˘Re˘
(
mobs_x
[
thisMob
],
mobs_y
[thisMob], 
mobs_size
[thisMob], mobs_size[thisMob],

1006 
∂ayîX
, 
∂ayîY
, 
∂ayîW
, 
∂ayîH
)){

1007 
∂ayîLi„
--;

1009 
shake_magnôude
 = 2;

1010 
shake_timeLe·
 = 4;

1011 if(
mobs_size
[
thisMob
] =
boss_size
){

1012 
∂ayîLi„
--;

1013 
shake_magnôude
 = 3;

1014 
shake_timeLe·
 = 4;

1018 
gb
.
sound
.
	`∂ayP©ã∫
(
∂ayî_damage_sound
, 0);

1019 
	`•awnMob
(
thisMob
);

1020 if(
∂ayîLi„
 < 0){

1021 
byã
 
timî
=0;

1023 if(
gb
.
	`upd©e
()){

1025 
	`døwMobs
();

1026 
	`døwBuŒës
();

1027 
	`døwS∂ashes
();

1028 
	`døwCøã
();

1029 
	`døwAmmoOvîœy
();

1030 
	`di•œySc‹e
();

1031 
	`døwW‹ld
(
ˇmîaX
, 
ˇmîaY
);

1032 
gb
.
di•œy
.
	`døwBôm≠
(
x
-1, 
y
-1, 
∂ayîS¥ôe
, 
∂ayîDú
, 
NOFLIP
);

1033 
gb
.
di•œy
.
	`£tCﬁ‹
(
WHITE
);

1034 
gb
.
di•œy
.
	`fûlRe˘
(0,0,
timî
*2,
LCDHEIGHT
);

1035 
gb
.
di•œy
.
	`fûlRe˘
(
LCDWIDTH
-
timî
*2,0,timî*2,
LCDHEIGHT
);

1036 
gb
.
di•œy
.
	`£tCﬁ‹
(
BLACK
, 
WHITE
);

1037 
gb
.
di•œy
.
curs‹X
 = 12;

1038 
gb
.
di•œy
.
curs‹Y
 = 1;

1039 
gb
.
di•œy
.
	`¥öt
(("GAME OVER!"));

1040 
timî
++;

1041 if(
timî
==((
LCDWIDTH
/4)+10))

1048 if(
gb
.
	`upd©e
()){

1049 if(
sc‹e
 > 
highsc‹e
[
RANKMAX
-1]){

1050 
gb
.
di•œy
.
curs‹X
 = 2+
	`ønd
()%2;

1051 
gb
.
di•œy
.
curs‹Y
 = 0+
	`ønd
()%2;

1052 
gb
.
di•œy
.
	`¥öt
(("NEW HIGHSCORE"));

1055 
gb
.
di•œy
.
curs‹X
 = 12;

1056 
gb
.
di•œy
.
curs‹Y
 = 1;

1057 
gb
.
di•œy
.
	`¥öt
(("GAME OVER!"));

1059 
gb
.
di•œy
.
curs‹X
 = 0;

1060 
gb
.
di•œy
.
curs‹Y
 = 12;

1061 
gb
.
di•œy
.
	`¥öt
(("You made $"));

1062 
gb
.
di•œy
.
	`¥öt
(
sc‹e
);

1063 
gb
.
di•œy
.
	`¥öt
(("\nby killing\n"));

1064 
gb
.
di•œy
.
	`¥öt
(
kûls
);

1065 
gb
.
di•œy
.
	`¥öt
((" crabs."));

1066 
gb
.
di•œy
.
curs‹X
 = 0;

1067 
gb
.
di•œy
.
curs‹Y
 = 40;

1068 
gb
.
di•œy
.
	`¥öt
(("\x15:accept"));

1069 if(
gb
.
buâ⁄s
.
	`¥es£d
(
BTN_A
)){

1070 
gb
.
sound
.
	`∂ayOK
();

1075 
	`öôGame
();

1083 
	}
}

1086 
	$di•œySc‹e
(){

1126 
gb
.
di•œy
.
	`£tCﬁ‹
(8);

1127 
gb
.
di•œy
.
curs‹X
 = 0;

1128 
gb
.
di•œy
.
curs‹Y
 = 0;

1129 
gb
.
di•œy
.
	`¥öt
('$');

1130 
gb
.
di•œy
.
	`¥öén
(
sc‹e
);

1131 
	}
}

1134 
	$shakeS¸ìn
(){

1135 if(
shake_timeLe·
){

1136 
shake_timeLe·
--;

1137 
ˇmîaX
 +
	`øndom
(-
shake_magnôude
,shake_magnitude+1);

1138 
ˇmîaY
 +
	`øndom
(-
shake_magnôude
,shake_magnitude+1);

1139 
byã
 
backlightSãp
 = 
gb
.
backlight
.
backlightMax
 / 4;

1140 
gb
.
backlight
.
	`£t
(gb.backlight.
backlightVÆue
-
	`øndom
(0,
backlightSãp
*
shake_magnôude
));

1142 
	}
}

1145 
	$lﬂdHighsc‹e
(){

1155 
	}
}

1158 
	$ßveHighsc‹e
(){

1160 
gb
.
di•œy
.
	`£tF⁄t
(
f⁄t5x7
);

1161 
gb
.
	`keybﬂrd
(
«me
[
RANKMAX
-1], 
NAMELENGTH
+1);

1162 
highsc‹e
[
RANKMAX
-1] = 
sc‹e
;

1163 
byã
 
i
=
RANKMAX
-1; i>0; i--){

1164 if(
highsc‹e
[
i
-1] < highscore[i]){

1165 
ãmpName
[
NAMELENGTH
];

1166 
	`°r˝y
(
ãmpName
, 
«me
[
i
-1]);

1167 
	`°r˝y
(
«me
[
i
-1],Çame[i]);

1168 
	`°r˝y
(
«me
[
i
], 
ãmpName
);

1169 
ãmpSc‹e
;

1170 
ãmpSc‹e
 = 
highsc‹e
[
i
-1];

1171 
highsc‹e
[
i
-1] = highscore[i];

1172 
highsc‹e
[
i
] = 
ãmpSc‹e
;

1186 
	`di•œyHighSc‹es
();

1187 
	}
}

1191 c⁄° 
byã
 
PROGMEM
 
	glogo
[] =

1194 
B11111111
, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111,

1195 
B10000000
, 
B00000000
, B00000000, B00000000, B00000000, 
B00000001
, 
B01000001
, B01000001,

1196 
B10000000
, 
B00000000
, 
B00000001
, B10000000, 
B00000110
, 
B00000100
, 
B00010100
, 
B00010001
,

1197 
B10000000
, 
B00000000
, 
B00000001
, B10000000, 
B00000110
, B00000000, B10000000, 
B10000001
,

1198 
B10000000
, 
B00000000
, 
B00000001
, B10000000, 
B00000110
, B00000000, B00000000, 
B01000001
,

1199 
B10001111
, 
B00111111
, 
B01111001
, 
B10111001
, 
B11101111
, 
B10011110
, 
B01111110
, 
B00010001
,

1200 
B10011001
, 
B10111011
, 
B11001101
, 
B11111011
, 
B00110110
, 
B00110011
, 
B01110110
, 
B00100001
,

1201 
B10011001
, 
B10110011
, 
B00001101
, 
B10011000
, 
B00110110
, 
B00110011
, 
B01100110
, 
B01000101
,

1203 
B10011000
, 
B00110000
, 
B01111101
, 
B10011001
, 
B11110110
, 
B00110011
, 
B01100000
, 
B00000011
,

1204 
B10011000
, 
B00110000
, 
B11001101
, 
B10011011
, 
B00110110
, 
B00110011
, 
B01100001
, 
B01000001
,

1205 
B10011000
, 
B00110000
, 
B11001101
, 
B10011011
, 
B00110110
, 
B00110011
, 
B01100100
, 
B00010101
,

1206 
B10011001
, 
B10110000
, 
B11011101
, 
B10011011
, 
B01110110
, 
B00110011
, 
B01100000
, 
B10001001
,

1207 
B11001111
, 
B00110000
, 
B11111101
, 
B11110011
, B11110011, 
B10011110
, 
B01100000
, 
B01000001
,

1208 
B10000000
, 
B00000000
, B00000000, B00000000, B00000000, B00000000, 
B00000101
, 
B00010101
,

1209 
B10100000
, 
B00000000
, B00000000, B00000000, B00000000, 
B00100000
, 
B10000000
, 
B10100001
,

1210 
B11000000
, 
B00000000
, 
B00011000
, 
B00001100
, B00000000, B00000000, 
B00001111
, 
B11110101
,

1212 
B10010000
, 
B00000000
, 
B00100100
, 
B01010010
, 
B10000000
, 
B11110000
, 
B00001000
, 
B00010011
,

1213 
B11010000
, 
B00000010
, 
B10101100
, 
B01010110
, 
B10000001
, 
B11111000
, 
B00001111
, 
B11110001
,

1214 
B10011001
, 
B01000011
, 
B00110100
, 
B11011010
, 
B11100001
, 
B11111000
, 
B00001010
, 
B00110101
,

1215 
B10010101
, 
B01000010
, 
B00100101
, 
B01010010
, 
B10000001
, 
B11111000
, 
B00001100
, 
B01011001
,

1216 
B11011101
, 
B11000010
, 
B00011001
, 
B11001100
, 
B01100001
, 
B01101000
, 
B00001111
, 
B11110001
,

1217 
B10000000
, 
B01000000
, 
B00000000
, B00000000, B00000000, 
B11110000
, 
B00001000
, 
B00010101
,

1218 
B10000000
, B10000000, 
B00000000
, B00000000, B00000000, B00000000, 
B00001111
, 
B11110001
,

1219 
B11000000
, 
B00000000
, B00000000, B00000000, 
B00000110
, B00000000, B00000000, 
B00000101
,

1221 
B10000000
, 
B00000000
, B00000000, B00000000, 
B00001111
, B00000000, B00000000, 
B00000011
,

1222 
B11000000
, 
B00000000
, B00000000, B00000000, 
B00000110
, B00000000, B00000000, 
B00000001
,

1223 
B10010000
, 
B00000000
, B00000000, B00000000, 
B00001001
, B00000000, B00000000, 
B00000101
,

1224 
B10000000
, 
B00000000
, B00000000, B00000000, B00000000, B00000000, B00000000, 
B00001001
,

1225 
B11000001
, 
B01000000
, 
B00000000
, B00000000, B00000000, B00000000, B00000000, 
B00000001
,

1226 
B10010011
, 
B11010000
, 
B00000000
, B00000000, B00000000, B00000000, B00000000, 
B00000101
,

1227 
B10100011
, 
B11100000
, 
B00000000
, B00000000, B00000000, 
B00000110
, B00000000, 
B00000001
,

1228 
B10000011
, 
B11100000
, 
B00000101
, 
B01000101
, 
B01000000
, 
B00001111
, B00000101, B01000101,

1230 
B10000011
, 
B11010000
, 
B00000010
, B00000010, 
B00000000
, 
B00000110
, B00000010, 
B00000011
,

1231 
B10000001
, 
B01000000
, 
B00000001
, 
B01000001
, B01000000, 
B00001001
, B00000001, B01000001,

1232 
B10000000
, 
B00000000
, 
B00000100
, 
B00010100
, 
B00010000
, B00000000, B00000100, 
B00010101
,

1233 
B11111111
, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111, B11111111,

1236 c⁄° 
byã
 
PROGMEM
 
	gw‹ld
[]=

1238 
B11001111
,B11001111,

1239 
B10000000
,
B01000000
,

1240 
B00000001
,
B11111100
,

1241 
B00111001
,
B11100000
,

1242 
B00001100
,
B00000110
,

1243 
B10000111
,
B00011111
,

1244 
B11000011
,
B11000001
,

1245 
B10000001
,
B00000001
,

1246 
B00111100
,
B00110011
,

1247 
B00000111
,
B11100000
,

1248 
B10000100
,
B00001001
,

1249 
B11000001
,
B11001111
,

1251 c⁄° 
byã
 
PROGMEM
 
	gtûes
[]=

1254 
B01010100
,

1255 
B00100000
,

1256 
B00010100
,

1257 
B01000001
,

1258 
B10001000
,

1259 
B00000100
,

1260 
B01010001
,

1261 
B00001010
,

1263 c⁄° 
byã
 
PROGMEM
 
	gmobS¥ôe
[]=

1266 
B00000000
,

1267 
B00000000
,

1268 
B00011000
,

1269 
B00111100
,

1270 
B00011000
,

1271 
B00100100
,

1272 
B00000000
,

1273 
B00000000
,

1275 c⁄° 
byã
 
PROGMEM
 
	gbossS¥ôe
[]=

1278 
B00000000
,

1279 
B00100100
,

1280 
B00011000
,

1281 
B01111110
,

1282 
B00111100
,

1283 
B01111110
,

1284 
B00111100
,

1285 
B00000000
,

1287 c⁄° 
byã
 
PROGMEM
 
	g∂ayîS¥ôe
[]=

1290 
B00000000
,

1291 
B00111100
,

1292 
B01011010
,

1293 
B01111110
,

1294 
B01111110
,

1295 
B01111110
,

1296 
B00111100
,

1297 
B00000000
,

1299 c⁄° 
byã
 
PROGMEM
 
	g•œshS¥ôe
[]=

1302 
B00000000
,

1303 
B00001000
,

1304 
B00000000
,

1305 
B00011000
,

1306 
B00111000
,

1307 
B10110100
,

1308 
B00000000
,

1309 
B00010000
,

1311 c⁄° 
byã
 
PROGMEM
 
	g¸©eS¥ôe
[]=

1314 
B11111111
,

1315 
B10000001
,

1316 
B11111111
,

1317 
B10100011
,

1318 
B11000101
,

1319 
B11111111
,

1320 
B10000001
,

1321 
B11111111
,

1323 c⁄° 
byã
 
PROGMEM
 
	gfuŒHóπ
[]=

1326 
B01101100
,

1327 
B11111110
,

1328 
B11111110
,

1329 
B01111100
,

1330 
B00111000
,

1331 
B00010000
,

1332 
B00000000
,

1333 
B00000000
,

1335 c⁄° 
byã
 
PROGMEM
 
	ghÆfHóπ
[]=

1338 
B00000000
,

1339 
B00001100
,

1340 
B00011100
,

1341 
B00011000
,

1342 
B00010000
,

1343 
B00000000
,

1344 
B00000000
,

1345 
B00000000
,

1347 c⁄° 
byã
 
PROGMEM
 
	gem±yHóπ
[]=

1350 
B01101100
,

1351 
B10010010
,

1352 
B10000010
,

1353 
B01000100
,

1354 
B00101000
,

1355 
B00010000
,

1356 
B00000000
,

1357 
B00000000
,

1363 
boﬁón
 
	$gëTûe
(
uöt8_t
 
i
, uöt8_à
j
){

1365 
uöt8_t
 
ã°
;

1366 
ã°
 = (
	`pgm_ªad_byã
(
w‹ld
 + (
j
%
WORLD_H
)*
byãWidth
 + (
i
%
WORLD_W
)/8Ë& (
B10000000
 >> (i % 8)));

1367 if(
ã°
)

1368  
åue
;

1370  
Ál£
;

1371 
	}
}

1374 
	$døwW‹ld
(
öt16_t
 
x
, i¡16_à
y
){

1375 
öt8_t
 
i
, 
j
,

1376 
w
 = 
WORLD_W
,

1377 
h
 = 
WORLD_H
;

1378 
x
 = 
	`wøp
(x,
w
*8);

1379 
y
 = 
	`wøp
(y,
h
*8);

1380 
j
=
y
/8; j < (
LCDHEIGHT
/8 + y/8 + 1); j++) {

1381 
i
=
x
/8; i < (
LCDWIDTH
/8 + x/8 + 1); i++ ) {

1382 if(
	`gëTûe
(
i
, 
j
)) {

1383 
gb
.
di•œy
.
	`døwBôm≠
(
i
*8 - 
x
, 
j
*8 - 
y
, 
tûes
);

1387 
	}
}

1390 
boﬁón
 
	$cﬁlideW‹ld
(
öt16_t
 
x
, i¡16_à
y
, 
uöt8_t
 
w
, uöt8_à
h
){

1391 if(
	`gëTûe
(
x
/8, 
y
/8))

1392  
åue
;

1393 if(
	`gëTûe
((
x
+
w
-1)/8, 
y
/8))

1394  
åue
;

1395 if(
	`gëTûe
((
x
+
w
-1)/8, (
y
+
h
-1)/8))

1396  
åue
;

1397 if(
	`gëTûe
(
x
/8, (
y
+
h
-1)/8))

1398  
åue
;

1399  
Ál£
;

1400 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Crabator\Crabator.h

1 #i‚de‡
CRABATOR_H


2 
	#CRABATOR_H


	)

4 
	~<°döt.h
>

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Crabator\My_settings.h

3 
	#PROJ_GAMEBUINO
 1

	)

4 
	#PROJ_STREAMING_MUSIC
 1

	)

5 
	#PROJ_GBSOUND
 1

	)

6 
	#PROJ_HIRES
 0

	)

7 
	#PROJ_AUD_FREQ
 16000

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Crabator\main.cpp

1 
	~"Pokôto.h
"

4 
	gPokôto
::
C‹e
 
g
;

6 
	$maö
()

15 
	`£tup
();

17 
g
.
	`isRu¬ög
())

19 
	`lo›
();

21 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\DrawDemo\My_settings.h

12 #i‚de‡
MY_SETTINGS_H


13 
	#MY_SETTINGS_H


	)

15 
	#PROJ_HIRES
 0

16 
	#PROJ_ENABLE_SOUND
 0

17 

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\DrawDemo\drawdemo.cpp

1 
	~"Pokôto.h
"

3 
	gPokôto
::
C‹e
 
≥li
;

6 
	gv¨i
=1;

7 
	gkoko
=2;

8 
	gx
=55;

9 
	gy
=44;

11 
	$maö
 () {

12 
≥li
.
	`begö
();

13 
≥li
.
di•œy
.
≥rsi°í˚
=1;

15 
≥li
.
	`isRu¬ög
()) {

16 i‡(
≥li
.
	`upd©e
()) {

19 i‡(
≥li
.
buâ⁄s
.
	`upBä
()Ë
y
--;

20 i‡(
≥li
.
buâ⁄s
.
	`downBä
()Ë
y
++;

21 i‡(
≥li
.
buâ⁄s
.
	`À·Bä
()Ë
x
--;

22 i‡(
≥li
.
buâ⁄s
.
	`rightBä
()Ë
x
++;

23 i‡(
≥li
.
buâ⁄s
.
	`aBä
()Ë
v¨i
++;

24 i‡(
≥li
.
buâ⁄s
.
	`bBä
()Ë
koko
+=2;

25 i‡(
≥li
.
buâ⁄s
.
	`cBä
()Ë≥li.
di•œy
.
	`˛ór
();

28 i‡(
x
<0) x=0;

29 i‡(
y
<0) y=0;

30 i‡(
x
>110) x=110;

31 i‡(
y
>88) y=88;

34 i‡(
v¨i
==16) vari=1;

35 i‡(
koko
>8) koko=2;

38 
≥li
.
di•œy
.
	`£tCﬁ‹
(
v¨i
);

39 
≥li
.
di•œy
.
	`fûlCú˛e
(
x
,
y
,
koko
);

43 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\Animation.cpp

1 
	~"PokôtoC‹e.h
"

2 
	~"Anim©i⁄.h
"

4 
	#X_L_EYE
 6

	)

5 
	#Y_L_EYE
 8

	)

6 
	#X_R_EYE
 58

	)

7 
	#Y_R_EYE
 8

	)

8 
	#X_CHEEKS
 5

	)

9 
	#Y_CHEEKS
 43

	)

10 
	#Y_PUPIL
 18

	)

11 
	#X_LPUPIL
 19

	)

12 
	#X_RPUPIL
 66

	)

13 
	#DX_PUPIL
 8

	)

14 
	#X_SMILE
 40

	)

15 
	#Y_SMILE
 57

	)

16 
	#X_OH
 46

	)

17 
	#Y_OH
 49

	)

18 
	#X_GRIN
 19

	)

19 
	#Y_GRIN
 56

	)

20 
	#X_FLAT
 34

	)

21 
	#X_BLINKF
 5

	)

22 
	#Y_BLINKF
 6

	)

23 
	#X_BLINKH
 2

	)

24 
	#Y_BLINKH
 12

	)

25 
	#READLEVEL
 15

	)

26 
	#GRINLEVEL
 30

	)

27 
	#GRINOUT
 130

	)

28 
	#TALKPROBABILITY
 0x90

	)

30 
	gPokôto
::
C‹e
 
gb
;

33 
	$p›ShowBuâ⁄
(
c
) {

34 
gb
.
di•œy
.
cﬁ‹
=0;

35 
gb
.
di•œy
.
	`fûlRe˘
(gb.di•œy.
width
/2-10,gb.di•œy.
height
/2-10,20,20);

36 
gb
.
di•œy
.
cﬁ‹
=1;

37 
gb
.
di•œy
.
	`£tCurs‹
(gb.di•œy.
width
/2-5,gb.di•œy.
height
/2-5);

38 
gb
.
di•œy
.
	`¥öt
(
c
);

39 
	}
}

41 
	$maö
 () {

43 
	`pokInôSD
();

44 
gb
.
sound
.
	`∂ayMusicSåóm
("feelgood.SND");

45 
öt16_t
 
x
,
y
,
x_Õupû
,
x_Ωupû
,
y_pupû
, 
squöt
=1;

46 
uöt8_t
 
mouth
=0,
eyes
=1,
blök
=0,
blökcou¡
=0, 
eyecou¡
=0, 
gröcou¡î
=0, 
gröout
=
GRINOUT
;

47 
boﬁ
 
blockmouth
=
Ál£
;

48 
boﬁ
 
èlkög
=
Ál£
;

50 
x_Õupû
 = 
X_LPUPIL
; 
x_Ωupû
 = 
X_RPUPIL
; 
y_pupû
=
Y_PUPIL
;

51 
gb
.
	`begö
();

52 
gb
.
di•œy
.
	`lﬂd565PÆëã
(
m_™im_∑l
);

53 
gb
.
di•œy
.
bgcﬁ‹
=10;

54 
gb
.
di•œy
.
	`˛ór
();

55 
gb
.
di•œy
.
	`£tCﬁ‹Dïth
(4);

56 
gb
.
sound
.
	`ampE«bÀ
(
åue
);

57 
gb
.
sound
.
	`∂ayMusicSåóm
();

58 
gb
.
	`isRu¬ög
()) {

61 i‡(
soundbyã
 > 127 + 
READLEVEL
|| soundbyã < 127-READLEVELË
èlkög
 = 
åue
;

62 
èlkög
=
Ál£
;

71 i‡(
gb
.
buâ⁄s
.
	`aBä
()Ë
	`p›ShowBuâ⁄
('A');

72 i‡(
gb
.
buâ⁄s
.
	`bBä
()Ë
	`p›ShowBuâ⁄
('B');

73 i‡(
gb
.
buâ⁄s
.
	`cBä
()Ë
	`p›ShowBuâ⁄
('C');

74 i‡(
gb
.
buâ⁄s
.
	`upBä
()Ë
	`p›ShowBuâ⁄
('U');

75 i‡(
gb
.
buâ⁄s
.
	`downBä
()Ë
	`p›ShowBuâ⁄
('D');

76 i‡(
gb
.
buâ⁄s
.
	`À·Bä
()Ë
	`p›ShowBuâ⁄
('L');

77 i‡(
gb
.
buâ⁄s
.
	`rightBä
()Ë
	`p›ShowBuâ⁄
('R');

79 i‡(!
èlkög
Ë
gröcou¡î
++;

80 
gröcou¡î
 = 0;

82 i‡(
gröcou¡î
>
GRINOUT
) grincounter=0;

84 i‡(
gb
.
	`upd©e
()) {

85 
x
=
X_L_EYE
; 
y
=
Y_L_EYE
;

86 
gb
.
di•œy
.
	`døwBôm≠
(
x
,
y
,
m_À·eye
);

87 
x
=
X_R_EYE
; 
y
=
Y_R_EYE
;

88 
gb
.
di•œy
.
	`døwBôm≠
(
x
,
y
,
m_righãye
);

90 
uöt8_t
 
t
;

92 
eyes
) {

94 
x_Õupû
=
X_LPUPIL
; 
x_Ωupû
=
X_RPUPIL
;

95 
t
=98;

98 
x_Õupû
=
X_LPUPIL
-
DX_PUPIL
-2; 
x_Ωupû
=
X_RPUPIL
-DX_PUPIL;

99 
t
=70;

102 
x_Õupû
=
X_LPUPIL
+
DX_PUPIL
; 
x_Ωupû
=
X_RPUPIL
+DX_PUPIL+2;

103 
t
=70;

106 i‡(
	`øndom
(100)>
t
Ë
eyes
 =Ñandom(2);

108 
blök
) {

110 i‡(
blökcou¡
) blinkcount--;

112 
blök
 = 
	`øndom
(2);

113 
blökcou¡
 = 8/(
blök
+1);

114 i‡(
blök
==1Ë
blökcou¡
 *=3;

118 i‡(
blökcou¡
) {

119 
x
=
X_BLINKF
; 
y
=
Y_BLINKF
;

120 
gb
.
di•œy
.
övisibÀcﬁ‹
=255;

121 
gb
.
di•œy
.
	`døwBôm≠
(
x
,
y
,
m_lids_˛o£d
);

122 
blökcou¡
--;

124 
blök
 = 0;

125 
blökcou¡
 = 
	`øndom
(0x20);

129 i‡(
blökcou¡
) {

130 
x
=
X_BLINKH
; 
y
=
Y_BLINKH
;

131 
gb
.
di•œy
.
övisibÀcﬁ‹
=255;

132 
gb
.
di•œy
.
cﬁ‹
=10;

133 
gb
.
di•œy
.
	`fûlRe˘
(0,0,110,12);

134 
gb
.
di•œy
.
	`døwBôm≠
(
x
,
y
,
m_lids_hÆ„yes
);

135 
blökcou¡
--;

137 
blök
=0;

138 
blökcou¡
 = 
	`øndom
(0x20);

141 i‡(
blök
 !=2 && 
	`øndom
(100)<98) {

142 
gb
.
di•œy
.
övisibÀcﬁ‹
=1;

143 i‡(
squöt
==1) {

144 
gb
.
di•œy
.
	`døwBôm≠
(
x_Õupû
,
y_pupû
,
m_eyïupû
);

145 
gb
.
di•œy
.
	`døwBôm≠
(
x_Ωupû
,
y_pupû
,
m_eyïupû
);

146 
gb
.
di•œy
.
övisibÀcﬁ‹
=10;

148 }i‡(
squöt
 ==0) {

149 
gb
.
di•œy
.
	`døwBôm≠
(
x_Õupû
,
y_pupû
,
m_squöt
);

150 
gb
.
di•œy
.
	`døwBôm≠
(
x_Ωupû
,
y_pupû
,
m_squöt
);

151 
gb
.
di•œy
.
övisibÀcﬁ‹
=10;

153 } i‡(
squöt
 ==2) {

154 
gb
.
di•œy
.
	`døwBôm≠
(
x_Õupû
-3,
y_pupû
-3,
m_hóπ
);

155 
gb
.
di•œy
.
	`døwBôm≠
(
x_Ωupû
-3,
y_pupû
-3,
m_hóπ
);

156 
gb
.
di•œy
.
övisibÀcﬁ‹
=10;

161 
x
=
X_CHEEKS
; 
y
=
Y_CHEEKS
;

162 
gb
.
di•œy
.
övisibÀcﬁ‹
=10;

163 i‡(
mouth
 !5Ë
gb
.
di•œy
.
	`døwBôm≠
(
x
,
y
,
m_chìks
);

165 
uöt8_t
 
om
=
mouth
;

167 i‡(
èlkög
) {

168 i‡(
	`øndom
(0xfff)>
TALKPROBABILITY
) {

169 
uöt8_t
 
ﬁdmouth
 = 
mouth
;

170 
mouth
 = 
	`øndom
(3)+1;

171 i‡(
ﬁdmouth
=
mouth
) mouth++;

172 i‡(
mouth
==5) mouth = 1;

175 i‡(
gröcou¡î
>
GRINLEVEL
Ë
mouth
 = 5;

176 
mouth
 = 5;

179 i‡(
blockmouth
Ë
mouth
 = 
om
;

181 
mouth
) {

183 
x
=
X_SMILE
; 
y
=
Y_SMILE
;

184 
gb
.
di•œy
.
	`døwBôm≠
(
x
,
y
,
m_smûe
);

187 
x
=
X_SMILE
; 
y
=
Y_SMILE
;

188 
gb
.
di•œy
.
	`døwBôm≠
(
x
,
y
,
m_smûe_›í
);

191 
x
=
X_SMILE
; 
y
=
Y_SMILE
;

192 
gb
.
di•œy
.
	`døwBôm≠
(
x
,
y
,
m_t⁄gue
);

195 
x
=
X_OH
; 
y
=
Y_OH
;

196 
gb
.
di•œy
.
	`døwBôm≠
(
x
,
y
,
m_oh
);

199 
x
=
X_FLAT
; 
y
=
Y_SMILE
;

200 
gb
.
di•œy
.
	`døwBôm≠
(
x
,
y
,
m_Ê©
);

203 
x
=
X_GRIN
; 
y
=
Y_GRIN
;

204 
gb
.
di•œy
.
	`døwBôm≠
(
x
,
y
,
m_grö
);

216 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\Animation.h

1 #i‚de‡
POK_ANIMATIONTEST_H


2 
	#POK_ANIMATIONTEST_H


	)

4 c⁄° 
uöt16_t
 
m_™im_∑l
[];

5 c⁄° 
uöt8_t
 
m_chìks
[];

6 c⁄° 
uöt8_t
 
m_dªamy
[];

7 c⁄° 
uöt8_t
 
m_eyïupû
[];

8 c⁄° 
uöt8_t
 
m_grö
[];

9 c⁄° 
uöt8_t
 
m_Ê©
[];

10 c⁄° 
uöt8_t
 
m_hÆÂupû
[];

11 c⁄° 
uöt8_t
 
m_hóπ
[];

12 c⁄° 
uöt8_t
 
m_À·eye
[];

13 c⁄° 
uöt8_t
 
m_lids_˛o£d
[];

14 c⁄° 
uöt8_t
 
m_lids_hÆ„yes
[];

15 c⁄° 
uöt8_t
 
m_lids_smug
[];

16 c⁄° 
uöt8_t
 
m_oh
[];

17 c⁄° 
uöt8_t
 
m_¥o„ss‹eyes
[];

18 c⁄° 
uöt8_t
 
m_righãye
[];

19 c⁄° 
uöt8_t
 
m_smûe
[];

20 c⁄° 
uöt8_t
 
m_smûe_›í
[];

21 c⁄° 
uöt8_t
 
m_squöt
[];

22 c⁄° 
uöt8_t
 
m_t⁄gue
[];

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\My_settings.h

12 #i‚de‡
MY_SETTINGS_H


13 
	#MY_SETTINGS_H


	)

15 
	#PROJ_HIRES
 0

16 
	#PROJ_ENABLE_SOUND
 1

17 
	#PROJ_ENABLE_SYNTH
 1

	)

18 
	#PROJ_STREAMING_MUSIC
 1

	)

19 
	#PROJ_AUD_FREQ
 16000

	)

20 
	#PRODUCTIONTESTING
 1

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_cheeks.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_™im_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_chìks
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_dreamy.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

11 c⁄° 
uöt8_t
 
	gm_dªamy
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_eyepupil.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_eyïupû_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_eyïupû
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_flat.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_Ê©_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_Ê©
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_grin.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_grö_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_grö
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_halfpupil.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_hÆÂupû_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_hÆÂupû
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_heart.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_hóπ_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_hóπ
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_lefteye.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_À·eye_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_À·eye
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_lids_closed.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_lids_˛o£d_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_lids_˛o£d
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_lids_halfeyes.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_lids_hÆ„yes_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_lids_hÆ„yes
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_lids_smug.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_lids_smug_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_lids_smug
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_oh.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt8_t
 
	gm_oh
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_professoreyes.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_¥o„ss‹eyes_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_¥o„ss‹eyes
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_righteye.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_righãye_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_righãye
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_smile.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_smûe_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_smûe
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_smile_open.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_smûe_›í_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_smûe_›í
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_squint.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_squöt_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_squöt
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_tongue.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_t⁄gue_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_t⁄gue
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\HelloWorld\My_settings.h

12 #i‚de‡
MY_SETTINGS_H


13 
	#MY_SETTINGS_H


	)

15 
	#PROJ_HIRES
 0

16 
	#PROJ_ENABLE_SOUND
 0

17 

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\HelloWorld\main.cpp

1 
	~"Pokôto.h
"

2 
	~"PokôtoCookõ.h
"

4 
	gPokôto
::
C‹e
 
mygame
;

6 ˛as†
	cßveb
 : 
public
 
Pokôto
::
Cookõ
 {

7 
vÆ
=0;

8 
	mgoo
=35;

11 
ßveb
 
	gmyßve
;

13 
	$maö
 () {

14 
mygame
.
	`begö
();

15 
myßve
.
	`f‹m©KeyèbÀ
();

16 
myßve
.
	`begö
("TESTTEST",(mysave));

17 
a
 = 
	`øndom
(100);

18 
™swî
[9];

20 
mygame
.
	`isRu¬ög
()) {

22 i‡(
mygame
.
	`upd©e
()) {

23 
mygame
.
di•œy
.
	`¥öén
(
a
);

24 
mygame
.
di•œy
.
	`¥öén
(()
Pokôto
::
B©ãry
::
Àvñ
);

25 
mygame
.
di•œy
.
	`¥öén
("Hello World!");

26 
myßve
.
	`ªadKeyèbÀE¡ry
(0, 
™swî
);

27 
mygame
.
di•œy
.
	`¥öén
(
™swî
);

28 
myßve
.
	`ªadKeyèbÀE¡ry
(1, 
™swî
);

29 
mygame
.
di•œy
.
	`¥öén
(
™swî
);

30 
myßve
.
	`ªadKeyèbÀE¡ry
(2, 
™swî
);

31 
mygame
.
di•œy
.
	`¥öén
(
™swî
);

32 
mygame
.
di•œy
.
	`¥öén
((
myßve
));

36 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\Animation.cpp

1 
	~"Pokôto.h
"

2 
	~"Anim©i⁄.h
"

4 
	#X_L_EYE
 6

	)

5 
	#Y_L_EYE
 8

	)

6 
	#X_R_EYE
 58

	)

7 
	#Y_R_EYE
 8

	)

8 
	#X_CHEEKS
 5

	)

9 
	#Y_CHEEKS
 43

	)

10 
	#Y_PUPIL
 18

	)

11 
	#X_LPUPIL
 19

	)

12 
	#X_RPUPIL
 66

	)

13 
	#DX_PUPIL
 8

	)

14 
	#X_SMILE
 40

	)

15 
	#Y_SMILE
 57

	)

16 
	#X_OH
 46

	)

17 
	#Y_OH
 49

	)

18 
	#X_GRIN
 19

	)

19 
	#Y_GRIN
 56

	)

20 
	#X_FLAT
 34

	)

21 
	#X_BLINKF
 5

	)

22 
	#Y_BLINKF
 6

	)

23 
	#X_BLINKH
 2

	)

24 
	#Y_BLINKH
 12

	)

25 
	#READLEVEL
 4

26 
	#MIDPOINT
 65

	)

27 
	#GRINLEVEL
 230

	)

28 
	#GRINOUT
 30000

	)

29 
	#TALKPROBABILITY
 0x90

30 

	)

31 
	gPokôto
::
C‹e
 
gb
;

32 #i‚de‡
POK_SIM


33 
DigôÆOut
 
íabÀ
(
EXT4
);

35 
uöt8_t
 
	gíabÀ
;

38 
	$p›ShowBuâ⁄
(
c
) {

39 
gb
.
di•œy
.
cﬁ‹
=0;

40 
gb
.
di•œy
.
	`fûlRe˘
(gb.di•œy.
width
/2-10,gb.di•œy.
height
/2-10,20,20);

41 
gb
.
di•œy
.
cﬁ‹
=1;

42 
gb
.
di•œy
.
	`£tCurs‹
(gb.di•œy.
width
/2-5,gb.di•œy.
height
/2-5);

43 
gb
.
di•œy
.
	`¥öt
(
c
);

44 
	}
}

46 
	$maö
 () {

47 
íabÀ
=0;

48 
	`pokInôSD
();

49 
gb
.
sound
.
	`∂ayMusicSåóm
("intro44.snd");

50 
öt16_t
 
x
,
y
,
x_Õupû
,
x_Ωupû
,
y_pupû
, 
squöt
=1;

51 
uöt8_t
 
mouth
=0,
eyes
=1,
blök
=0,
blökcou¡
=0, 
eyecou¡
=0;

52 
uöt16_t
 
gröcou¡î
=0, 
gröout
=
GRINOUT
;

53 
boﬁ
 
blockmouth
=
Ál£
;

54 
boﬁ
 
èlkög
=
Ál£
;

55 
uöt8_t
 
sbãmp
=0;

57 
x_Õupû
 = 
X_LPUPIL
; 
x_Ωupû
 = 
X_RPUPIL
; 
y_pupû
=
Y_PUPIL
;

58 
gb
.
	`begö
();

59 
gb
.
di•œy
.
	`lﬂd565PÆëã
(
m_™im_∑l
);

60 
gb
.
di•œy
.
bgcﬁ‹
=10;

61 
gb
.
di•œy
.
	`˛ór
();

62 
gb
.
di•œy
.
	`£tCﬁ‹Dïth
(4);

63 
gb
.
sound
.
	`ampE«bÀ
(
åue
);

64 
gb
.
sound
.
	`∂ayMusicSåóm
();

65 
gb
.
	`isRu¬ög
()) {

67 #ifde‡
POK_SIM
]

68 
sbãmp
 = (
uöt8_t
)(
soundbyã
 * 3);

70 
sbãmp
 = (
uöt8_t
)
soundbyã
;

72 i‡(
sbãmp
 > 
MIDPOINT
 + 
READLEVEL
|| sbãm∞< MIDPOINT-READLEVELË
èlkög
 = 
åue
;

74 
èlkög
=
Ál£
;

75 i‡(
gb
.
sound
.
	`gëMusicSåómEœp£dSec
()<6Ë
èlkög
=
Ál£
;

76 i‡(
gb
.
sound
.
	`gëMusicSåómEœp£dMûliSec
()>10270 && gb.sound.gëMusicSåómEœp£dMûliSec(Ë< 11303Ë
èlkög
=
Ál£
;

77 i‡(
gb
.
sound
.
	`gëMusicSåómEœp£dMûliSec
()>15800 && gb.sound.gëMusicSåómEœp£dMûliSec(Ë< 17400Ë
èlkög
=
Ál£
;

86 i‡(
gb
.
buâ⁄s
.
	`aBä
()Ë
	`p›ShowBuâ⁄
('A');

87 i‡(
gb
.
buâ⁄s
.
	`bBä
()Ë
	`p›ShowBuâ⁄
('B');

88 i‡(
gb
.
buâ⁄s
.
	`cBä
()Ë
	`p›ShowBuâ⁄
('C');

89 i‡(
gb
.
buâ⁄s
.
	`upBä
()Ë
	`p›ShowBuâ⁄
('U');

90 i‡(
gb
.
buâ⁄s
.
	`downBä
()Ë
	`p›ShowBuâ⁄
('D');

91 i‡(
gb
.
buâ⁄s
.
	`À·Bä
()Ë
	`p›ShowBuâ⁄
('L');

92 i‡(
gb
.
buâ⁄s
.
	`rightBä
()Ë
	`p›ShowBuâ⁄
('R');

94 i‡(!
èlkög
Ë
gröcou¡î
++;

95 
gröcou¡î
 = 0;

97 i‡(
gröcou¡î
>
GRINOUT
) grincounter=0;

99 i‡(
gb
.
	`upd©e
()) {

100 
x
=
X_L_EYE
; 
y
=
Y_L_EYE
;

101 
gb
.
di•œy
.
	`døwBôm≠
(
x
,
y
,
m_À·eye
);

102 
x
=
X_R_EYE
; 
y
=
Y_R_EYE
;

103 
gb
.
di•œy
.
	`døwBôm≠
(
x
,
y
,
m_righãye
);

105 
uöt8_t
 
t
;

107 
eyes
) {

109 
x_Õupû
=
X_LPUPIL
; 
x_Ωupû
=
X_RPUPIL
;

110 
t
=98;

113 
x_Õupû
=
X_LPUPIL
-
DX_PUPIL
-2; 
x_Ωupû
=
X_RPUPIL
-DX_PUPIL;

114 
t
=70;

117 
x_Õupû
=
X_LPUPIL
+
DX_PUPIL
; 
x_Ωupû
=
X_RPUPIL
+DX_PUPIL+2;

118 
t
=70;

121 i‡(
	`øndom
(100)>
t
Ë
eyes
 =Ñandom(2);

123 
blök
) {

125 i‡(
blökcou¡
) blinkcount--;

127 
blök
 = 
	`øndom
(2);

128 
blökcou¡
 = 8/(
blök
+1);

129 i‡(
blök
==1Ë
blökcou¡
 *=3;

133 i‡(
blökcou¡
) {

134 
x
=
X_BLINKF
; 
y
=
Y_BLINKF
;

135 
gb
.
di•œy
.
övisibÀcﬁ‹
=255;

136 
gb
.
di•œy
.
	`døwBôm≠
(
x
,
y
,
m_lids_˛o£d
);

137 
blökcou¡
--;

139 
blök
 = 0;

140 
blökcou¡
 = 
	`øndom
(0x20);

144 i‡(
blökcou¡
) {

145 
x
=
X_BLINKH
; 
y
=
Y_BLINKH
;

146 
gb
.
di•œy
.
övisibÀcﬁ‹
=255;

147 
gb
.
di•œy
.
cﬁ‹
=10;

148 
gb
.
di•œy
.
	`fûlRe˘
(0,0,110,12);

149 
gb
.
di•œy
.
	`døwBôm≠
(
x
,
y
,
m_lids_hÆ„yes
);

150 
blökcou¡
--;

152 
blök
=0;

153 
blökcou¡
 = 
	`øndom
(0x20);

156 i‡(
blök
 !=2 && 
	`øndom
(100)<98) {

157 
gb
.
di•œy
.
övisibÀcﬁ‹
=1;

158 i‡(
squöt
==1) {

159 
gb
.
di•œy
.
	`døwBôm≠
(
x_Õupû
,
y_pupû
,
m_eyïupû
);

160 
gb
.
di•œy
.
	`døwBôm≠
(
x_Ωupû
,
y_pupû
,
m_eyïupû
);

161 
gb
.
di•œy
.
övisibÀcﬁ‹
=10;

163 }i‡(
squöt
 ==0) {

164 
gb
.
di•œy
.
	`døwBôm≠
(
x_Õupû
,
y_pupû
,
m_squöt
);

165 
gb
.
di•œy
.
	`døwBôm≠
(
x_Ωupû
,
y_pupû
,
m_squöt
);

166 
gb
.
di•œy
.
övisibÀcﬁ‹
=10;

168 } i‡(
squöt
 ==2) {

169 
gb
.
di•œy
.
	`døwBôm≠
(
x_Õupû
-3,
y_pupû
-3,
m_hóπ
);

170 
gb
.
di•œy
.
	`døwBôm≠
(
x_Ωupû
-3,
y_pupû
-3,
m_hóπ
);

171 
gb
.
di•œy
.
övisibÀcﬁ‹
=10;

176 
x
=
X_CHEEKS
; 
y
=
Y_CHEEKS
;

177 
gb
.
di•œy
.
övisibÀcﬁ‹
=10;

178 i‡(
mouth
 !5Ë
gb
.
di•œy
.
	`døwBôm≠
(
x
,
y
,
m_chìks
);

180 
uöt8_t
 
om
=
mouth
;

182 i‡(
èlkög
) {

183 i‡(
	`øndom
(0xfff)>
TALKPROBABILITY
) {

184 
uöt8_t
 
ﬁdmouth
 = 
mouth
;

185 
mouth
 = 
	`øndom
(3)+1;

186 i‡(
ﬁdmouth
=
mouth
) mouth++;

187 i‡(
mouth
==5) mouth = 1;

190 i‡(
gröcou¡î
>
GRINLEVEL
Ë
mouth
 = 5;

191 
mouth
 = 5;

194 i‡(
blockmouth
Ë
mouth
 = 
om
;

196 
mouth
) {

198 
x
=
X_SMILE
; 
y
=
Y_SMILE
;

199 
gb
.
di•œy
.
	`døwBôm≠
(
x
,
y
,
m_smûe
);

202 
x
=
X_SMILE
; 
y
=
Y_SMILE
;

203 
gb
.
di•œy
.
	`døwBôm≠
(
x
,
y
,
m_smûe_›í
);

206 
x
=
X_SMILE
; 
y
=
Y_SMILE
;

207 
gb
.
di•œy
.
	`døwBôm≠
(
x
,
y
,
m_t⁄gue
);

210 
x
=
X_OH
; 
y
=
Y_OH
;

211 
gb
.
di•œy
.
	`døwBôm≠
(
x
,
y
,
m_oh
);

214 
x
=
X_FLAT
; 
y
=
Y_SMILE
;

215 
gb
.
di•œy
.
	`døwBôm≠
(
x
,
y
,
m_Ê©
);

218 
x
=
X_GRIN
; 
y
=
Y_GRIN
;

219 
gb
.
di•œy
.
	`døwBôm≠
(
x
,
y
,
m_grö
);

231 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\Animation.h

1 #i‚de‡
POK_ANIMATIONTEST_H


2 
	#POK_ANIMATIONTEST_H


	)

4 c⁄° 
uöt16_t
 
m_™im_∑l
[];

5 c⁄° 
uöt8_t
 
m_chìks
[];

6 c⁄° 
uöt8_t
 
m_dªamy
[];

7 c⁄° 
uöt8_t
 
m_eyïupû
[];

8 c⁄° 
uöt8_t
 
m_grö
[];

9 c⁄° 
uöt8_t
 
m_Ê©
[];

10 c⁄° 
uöt8_t
 
m_hÆÂupû
[];

11 c⁄° 
uöt8_t
 
m_hóπ
[];

12 c⁄° 
uöt8_t
 
m_À·eye
[];

13 c⁄° 
uöt8_t
 
m_lids_˛o£d
[];

14 c⁄° 
uöt8_t
 
m_lids_hÆ„yes
[];

15 c⁄° 
uöt8_t
 
m_lids_smug
[];

16 c⁄° 
uöt8_t
 
m_oh
[];

17 c⁄° 
uöt8_t
 
m_¥o„ss‹eyes
[];

18 c⁄° 
uöt8_t
 
m_righãye
[];

19 c⁄° 
uöt8_t
 
m_smûe
[];

20 c⁄° 
uöt8_t
 
m_smûe_›í
[];

21 c⁄° 
uöt8_t
 
m_squöt
[];

22 c⁄° 
uöt8_t
 
m_t⁄gue
[];

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\My_settings.h

12 #i‚de‡
MY_SETTINGS_H


13 
	#MY_SETTINGS_H


	)

15 
	#PROJ_HIRES
 0

16 
	#PROJ_ENABLE_SOUND
 1

17 
	#PROJ_ENABLE_SYNTH
 1

	)

18 
	#PROJ_STREAMING_MUSIC
 1

	)

19 
	#PROJ_AUD_FREQ
 44100

	)

20 
	#PRODUCTIONTESTING
 1

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_cheeks.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_™im_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_chìks
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_dreamy.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

11 c⁄° 
uöt8_t
 
	gm_dªamy
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_eyepupil.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_eyïupû_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_eyïupû
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_flat.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_Ê©_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_Ê©
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_grin.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_grö_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_grö
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_halfpupil.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_hÆÂupû_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_hÆÂupû
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_heart.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_hóπ_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_hóπ
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_lefteye.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_À·eye_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_À·eye
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_lids_closed.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_lids_˛o£d_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_lids_˛o£d
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_lids_halfeyes.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_lids_hÆ„yes_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_lids_hÆ„yes
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_lids_smug.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_lids_smug_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_lids_smug
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_oh.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt8_t
 
	gm_oh
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_professoreyes.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_¥o„ss‹eyes_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_¥o„ss‹eyes
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_righteye.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_righãye_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_righãye
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_smile.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_smûe_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_smûe
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_smile_open.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_smûe_›í_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_smûe_›í
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_squint.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_squöt_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_squöt
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_tongue.c

7 
	~<°döt.h
>

8 
	~"Anim©i⁄.h
"

10 c⁄° 
uöt16_t
 
	gm_t⁄gue_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gm_t⁄gue
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Mode13\My_settings.h

12 #i‚de‡
MY_SETTINGS_H


13 
	#MY_SETTINGS_H


	)

15 
	#PROJ_HIRES
 0

16 
	#PROJ_ENABLE_SOUND
 0

17 
	#PROJ_MODE13
 1

18 

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Mode13\mode13.cpp

3 
	~"Pokôto.h
"

5 
	gPokôto
::
C‹e
 
game
;

7 
	g∑l
[256];

9 
uöt8_t
 
	gcﬁ
=0;

11 
	$P¡CÃ
(
x
, 
y
){

12  
game
.
di•œy
.
	`gëPixñ
(
x
,
y
);

13 
	}
}

14 
	$DŸ
 (
x
, 
y
, 
c
){

15 
game
.
di•œy
.
	`døwPixñ
(
x
,
y
,
c
);

16 
	}
}

17 
	$R™dMöMax
(
mö
, 
max
){

18  
	`ønd
(Ë% 
max
 + 
mö
;

19 
	}
}

20 
	$Adju°
 (
xa
, 
ya
, 
x
, 
y
, 
xb
, 
yb
){

21 if(
	`P¡CÃ
(
x
, 
y
) != 0)  0;

22 
q
 = 
	`abs
(
xa
 - 
xb
Ë+ábs(
ya
 - 
yb
);

23 
v
 = (
	`P¡CÃ
(
xa
, 
ya
Ë+ P¡CÃ(
xb
, 
yb
)Ë/ 2 + (
	`R™dMöMax
(0,
q
*10)) / 10;

24 i‡(
v
 < 1) v = 1;

25 i‡(
v
 > 255) v = 255;

26 
	`DŸ
(
x
, 
y
, 
v
);

28 
	}
}

29 
	$SubDivide
 (
x1
, 
y1
, 
x2
, 
y2
){

30 i‡((
x2
 - 
x1
 < 2Ë&& (
y2
 - 
y1
 < 2)) ;

31 
x
 = (
x1
 + 
x2
) / 2;

32 
y
 = (
y1
 + 
y2
) / 2;

33 
	`Adju°
(
x1
, 
y1
, 
x
, y1, 
x2
, y1);

34 
	`Adju°
(
x1
, 
y2
, 
x
, y2, 
x2
, y2);

35 
	`Adju°
(
x2
, 
y1
, x2, 
y
, x2, 
y2
);

36 
	`Adju°
(
x1
, 
y1
, x1, 
y
, x1, 
y2
);

37 if(
	`P¡CÃ
(
x
, 
y
) == 0) {

38 
v
 = 
	`P¡CÃ
(
x1
, 
y1
Ë+ P¡CÃ(
x2
, y1Ë+ P¡CÃ(x2, 
y2
);

39 
v
 = v + 
	`P¡CÃ
(
x1
, 
y2
Ë+ P¡CÃ(x1, 
y
Ë+ P¡CÃ(
x
, 
y1
);

40 
v
 = v + 
	`P¡CÃ
(
x2
, 
y
Ë+ P¡CÃ(
x
, 
y2
);

41 
v
 = v / 8;

42 
	`DŸ
(
x
, 
y
, 
v
);

44 
	`SubDivide
(
x1
, 
y1
, 
x
, 
y
);

45 
	`SubDivide
(
x
, 
y
, 
x2
, 
y2
);

46 
	`SubDivide
(
x
, 
y1
, 
x2
, 
y
);

47 
	`SubDivide
(
x1
, 
y
, 
x
, 
y2
);

48 
	}
}

49 
make_∂asma
(
x1
=0,
y1
=0,
x2
=
game
.
di•œy
.
width
-1,
y2
=game.di•œy.
height
-1){

50 
game
.
di•œy
.
˛ór
();

51 if(
	gx1
<0)x1=0;

52 if(
	gy1
<0)y1=0;

53 if(
	gx2
>
	ggame
.
	gdi•œy
.
	gwidth
-1)x2=
game
.
di•œy
.
width
-1;

54 if(
	gy2
>
	ggame
.
	gdi•œy
.
	gheight
-1)y2=
game
.
di•œy
.
height
-1;

55 
DŸ
(
x1
, 
y1
, 
R™dMöMax
(0,255) + 1);

56 
DŸ
(
x2
, 
y1
, 
R™dMöMax
(0,255) + 1);

57 
DŸ
(
x2
, 
y2
, 
R™dMöMax
(0,255) + 1);

58 
DŸ
(
x1
, 
y2
, 
R™dMöMax
(0,255) + 1);

59 
SubDivide
(
x1
, 
y1
, 
x2
, 
y2
);

61 
	$make_∑l
(){

62 
a
,
s
,
r
,
g
,
b
;

63 
a
=0;á<=63;á++){

64 
s
 = 0; 
r
 = 
a
; 
g
 = 63-a; 
b
 = 0; 
∑l
[a+s] = 
game
.
di•œy
.
	`RGBto565
(r*4,g*4,b*4);

65 
s
 = 64; 
r
 = 63-
a
; 
g
 = 0; 
b
 =á; 
∑l
[a+s] = 
game
.
di•œy
.
	`RGBto565
(r*4,g*4,b*4);

66 
s
 = 128; 
r
 = 0; 
g
 = 0; 
b
 = 63-
a
; 
∑l
[a+s] = 
game
.
di•œy
.
	`RGBto565
(r*4,g*4,b*4);

67 
s
 = 192; 
r
 = 0; 
g
 = 
a
; 
b
 = 0; 
∑l
[a+s] = 
game
.
di•œy
.
	`RGBto565
(r*4,g*4,b*4);

69 
game
.
di•œy
.
	`lﬂd565PÆëã
(&
∑l
[0]);

70 
	}
}

71 
	$maö
(){

72 
game
.
	`begö
();

73 
game
.
di•œy
.
≥rsi°í˚
=1;

74 
	`§™d
(
game
.
	`gëTime
());

75 
	`make_∑l
();

76 
	`make_∂asma
(0,0,
game
.
di•œy
.
width
-1,game.di•œy.
height
-1);

78 
game
.
	`isRu¬ög
()) {

79 if(
game
.
	`upd©e
()){

81 
game
.
di•œy
.
∑lOff£t
 = 
cﬁ
++;

86 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Mode14\My_settings.h

12 #i‚de‡
MY_SETTINGS_H


13 
	#MY_SETTINGS_H


	)

15 
	#PROJ_HIRES
 0

16 
	#PROJ_ENABLE_SOUND
 0

17 
	#PROJ_MODE14
 1

	)

18 
	#PROJ_FPS
 100

	)

19 
	#PROJ_SHOW_FPS_COUNTER


	)

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Mode14\lemm.h

2 c⁄° 
uöt8_t
 
	gÀmm
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Mode14\mode14.cpp

10 
	~"Pokôto.h
"

11 
	~"Àmm.h
"

13 
	gPokôto
::
C‹e
 
mygame
;

15 
DigôÆOut
 
p
(
EXT0
);

17 
	#TEST_PORT
 1

	)

18 
	#TEST_PIN
 19

	)

19 
	#CLR_TEST
 
LPC_GPIO_PORT
->
CLR
[
TEST_PORT
] = 1 << 
TEST_PIN
;

	)

20 
	#SET_TEST
 
LPC_GPIO_PORT
->
SET
[
TEST_PORT
] = 1 << 
TEST_PIN
;

	)

22 
	gs
=0;

24 
	$maö
 () {

25 
mygame
.
	`begö
();

26 
c
 = 1;

27 
mygame
.
run_°©e
) {

28 i‡(
mygame
.
	`upd©e
()) {

29 i‡(
s
Ë{
SET_TEST
}

30 {
CLR_TEST
}

31 
s
=1-s;

39 
mygame
.
di•œy
.
	`døwBôm≠
(0,0,
Àmm
);

43 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Mode15\Mode15.cpp

3 
	~"Pokôto.h
"

4 
	~"m⁄key16.h
"

6 
	gPokôto
::
C‹e
 
mygame
;

8 
	$døwBlurb
(c⁄° * 
ãxt
, 
x
, 
y
, 
uöt8_t
 
fc
, uöt8_à
bgc
) {

9 
tx
=-1;tx<2;tx++) {

10 
ty
=-1;ty<2;ty++) {

11 
mygame
.
di•œy
.
	`£tCﬁ‹
(
bgc
,15);

12 
mygame
.
di•œy
.
	`£tInvisibÀCﬁ‹
(15);

13 
mygame
.
di•œy
.
	`£tCurs‹
(
x
+
tx
,
y
+
ty
);

14 
mygame
.
di•œy
.
	`¥öt
(
ãxt
);

17 
mygame
.
di•œy
.
	`£tCurs‹
(
x
,
y
);

18 
mygame
.
di•œy
.
	`£tCﬁ‹
(
fc
,
bgc
);

19 
mygame
.
di•œy
.
	`£tInvisibÀCﬁ‹
(
bgc
);

20 
mygame
.
di•œy
.
	`¥öt
(
ãxt
);

21 
	}
}

24 
	$maö
 () {

25 
x
=0,
y
=20;

26 
mygame
.
	`begö
();

27 
mygame
.
di•œy
.
	`lﬂd565PÆëã
(
m⁄key16_∑l
);

28 
mygame
.
di•œy
.
	`£tCﬁ‹
(1,0);

29 
mygame
.
di•œy
.
	`£tF⁄t
(
f⁄tM⁄key
);

30 
mygame
.
di•œy
.
	`£tInvisibÀCﬁ‹
(0);

32 
mygame
.
	`isRu¬ög
()) {

34 i‡(
mygame
.
	`upd©e
()) {

35 
x
-=2;

36 i‡(
x
<-90) x=-90;

37 i‡(
x
>0) x = 0;

38 
mygame
.
di•œy
.
	`døwBôm≠
(
x
,16,
m⁄key161
);

39 
mygame
.
di•œy
.
	`døwBôm≠
(
x
+160,16,
m⁄key162
);

40 i‡(
x
<-82) {

41 
	`døwBlurb
("The New Mode15!!",10,62,14,0);

43 i‡(
x
<-88) {

44 
	`døwBlurb
("Nice!",130,82,10,0);

50 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Mode15\My_settings.h

12 #i‚de‡
MY_SETTINGS_H


13 
	#MY_SETTINGS_H


	)

15 
	#PROJ_MODE15
 1

16 
	#PROJ_ENABLE_SOUND
 0

17 

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\My_settings.h

12 #i‚de‡
MY_SETTINGS_H


13 
	#MY_SETTINGS_H


	)

15 
	#PROJ_HIRES
 0

16 
	#PROJ_ENABLE_SOUND
 1

17 
	#PROJ_STREAMING_MUSIC
 1

18 
	#PROJ_AUD_FREQ
 16000

	)

19 
	#PROJ_STREAM_TO_DAC
 1

20 
	#PROJ_GBSOUND
 0

21 
	#PROJ_ENABLE_SYNTH
 0

22 
	#PROJ_GAMEBUINO
 0

23 
	#PROJ_USE_PWM
 0

24 

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\Pixonia.h

1 #i‚de‡
POK_POKULOUS_H


2 
	#POK_POKULOUS_H


	)

4 
	~<°döt.h
>

6 c⁄° 
uöt16_t
 
pokulous_∑l
[];

7 c⁄° 
uöt16_t
 
thîesgﬁd_∑l
[];

8 c⁄° 
uöt16_t
 
gameovî_∑l
[];

10 c⁄° 
uöt8_t
 
™im_dude
[];

11 c⁄° 
uöt8_t
 
™im_shìp
[];

12 c⁄° 
uöt8_t
 
™im_wﬁf_sw
[];

13 c⁄° 
uöt8_t
 
™im_blue_Êag1
[];

14 c⁄° 
uöt8_t
 
™im_blue_Êag2
[];

15 c⁄° 
uöt8_t
 
•œâî
[];

16 c⁄° 
uöt8_t
 
thîesgﬁd
[];

17 c⁄° 
uöt8_t
 
gameovî
[];

18 c⁄° 
uöt8_t
 
gﬁd
[];

19 c⁄° 
uöt8_t
 
gﬁd2
[];

21 c⁄° 
uöt8_t
 
pixñm™_£_1
[];

22 c⁄° 
uöt8_t
 
pixñm™_£_2
[];

23 c⁄° 
uöt8_t
 
pixñm™_nw_1
[];

24 c⁄° 
uöt8_t
 
pixñm™_nw_2
[];

26 c⁄° 
uöt8_t
 
wîewﬁf_£_1
[];

27 c⁄° 
uöt8_t
 
wîewﬁf_£_2
[];

28 c⁄° 
uöt8_t
 
wîewﬁf_nw_1
[];

29 c⁄° 
uöt8_t
 
wîewﬁf_nw_2
[];

32 c⁄° 
uöt8_t
 
ãr_bóch_£
[];

33 c⁄° 
uöt8_t
 
ãr_bóch_sw
[];

35 c⁄° 
uöt8_t
 
ãr_bump_e
[];

36 c⁄° 
uöt8_t
 
ãr_bump_n
[];

37 c⁄° 
uöt8_t
 
ãr_bump_w
[];

38 c⁄° 
uöt8_t
 
ãr_bump_s
[];

40 c⁄° 
uöt8_t
 
ãr_dôch_e
[];

41 c⁄° 
uöt8_t
 
ãr_dôch_n
[];

42 c⁄° 
uöt8_t
 
ãr_dôch_w
[];

43 c⁄° 
uöt8_t
 
ãr_dôch_s
[];

45 c⁄° 
uöt8_t
 
ãr_bump_√
[];

46 c⁄° 
uöt8_t
 
ãr_bump_nw
[];

47 c⁄° 
uöt8_t
 
ãr_bump_sw
[];

48 c⁄° 
uöt8_t
 
ãr_bump_£
[];

50 c⁄° 
uöt8_t
 
ãr_óπh
[];

51 c⁄° 
uöt8_t
 
ãr_gøö
[];

52 c⁄° 
uöt8_t
 
ãr_gﬁd
[];

53 c⁄° 
uöt8_t
 
ãr_∂aö
[];

54 c⁄° 
uöt8_t
 
ãr_hut
[];

55 c⁄° 
uöt8_t
 
ãr_w©î1
[];

56 c⁄° 
uöt8_t
 
ãr_w©î2
[];

57 c⁄° 
uöt8_t
 
ãr_åì
[];

58 c⁄° 
uöt8_t
 
ãr_°⁄e
[];

60 c⁄° 
uöt8_t
 
dút_pûœr
[];

61 c⁄° 
uöt8_t
 
pix⁄ü
[];

62 c⁄° 
uöt16_t
 
night_∑Àâe
[];

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\anim_blue_flag1.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	g™im_blue_Êag1_∑l
[] = {

14 c⁄° 
uöt8_t
 
	g™im_blue_Êag1
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\anim_blue_flag2.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	g™im_blue_Êag2_∑l
[] = {

14 c⁄° 
uöt8_t
 
	g™im_blue_Êag2
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\dirt_pillar.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gdút_pûœr_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gdút_pûœr
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\gameover.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	ggameovî_∑l
[] = {

14 c⁄° 
uöt8_t
 
	ggameovî
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\gold.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	ggﬁd_∑l
[] = {

14 c⁄° 
uöt8_t
 
	ggﬁd
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\gold2.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	ggﬁd2_∑l
[] = {

14 c⁄° 
uöt8_t
 
	ggﬁd2
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\main.cpp

1 
	~"Pokôto.h
"

2 
	~"Pix⁄ü.h
"

3 
	~"Sy¡h.h
"

5 
	gPokôto
::
C‹e
 
gb
;

7 
	#YOFF
 4

	)

8 
	#XOFF
 8

	)

10 
	#WORLDSIZE
 50

	)

11 
	#TIMEINCREMENT
 16

	)

13 
	#SUBDIVS
 4

	)

14 
	#XSPEED
 2<<4

15 
	#YSPEED
 1<<4

16 
	#PILLARHEIGHT
 2

	)

17 
	#GROUNDLIFT
 1

	)

19 
	#MAXSTEP
 2

	)

20 
	#MAXWOLFSTEP
 3

	)

21 
	#WOLFENERGY
 0x26F

	)

22 
	#MONSTERMORNING
 75

	)

23 
	#MONSTERNIGHT
 130

	)

26 
	#MAXELEVATIONDIFF
 1

	)

27 
	#DIGMAX
 2

	)

29 
	#MAXHUMANS
 10

	)

30 
	#MAXWOLVES
 10

	)

31 
	#TREESNROCKS
 1

	)

32 
	#HUTPROB
 0x01

	)

33 
	#STONEPROB
 0x24

	)

34 
	#TREEPROB
 0x30

	)

35 
	#GOLDPROB
 0x08

36 
	#MAXGOLD
 50

	)

37 
	#GOLDMULT
 3

	)

38 
	#WOLFMULT
 1

	)

39 
	#MAPMULT
 10

	)

40 
	#GLIMMERPROB
 0x20

	)

41 
	#WOLFPROB
 0x2000

	)

45 
	#DIR_NE
 0

	)

46 
	#DIR_E
 1

	)

47 
	#DIR_SE
 2

	)

48 
	#DIR_S
 3

	)

49 
	#DIR_SW
 4

	)

50 
	#DIR_W
 5

	)

51 
	#DIR_NW
 6

	)

52 
	#DIR_N
 7

	)

55 
	#TER_UNDEFINED
 0

	)

56 
	#TER_WATER
 31

	)

57 
	#TER_PLAIN
 1

	)

58 
	#TER_HUT
 2

	)

59 
	#TER_TREE
 3

	)

60 
	#TER_STONE
 4

	)

61 
	#TER_BUMP_NW
 5

	)

62 
	#TER_BUMP_SE
 6

	)

63 
	#TER_BUMP_NE
 7

	)

64 
	#TER_BUMP_SW
 8

	)

65 
	#TER_BUMP_N
 9

	)

66 
	#TER_BUMP_S
 10

	)

67 
	#TER_BUMP_E
 11

	)

68 
	#TER_BUMP_W
 12

	)

69 
	#TER_GOLD
 13

	)

70 
	#TER_ROCK
 14

	)

71 
	#TER_BEACHSW
 29

	)

72 
	#TER_BEACHSE
 30

	)

74 
	ewÆkDú
 {

75 
	mNE
,

76 
	mSE
,

77 
	mSW
,

78 
	mNW


81 
	ehum™Tasks
 {

82 
	mIDLE
,

83 
	mCHOPPING
,

84 
	mRAISING
,

85 
	mLOWERING
,

86 
	mPLANTING
,

87 
	mMOVING
,

88 
	mHUTBUILDING


91 
	eAImodes
 {

92 
	mHOMING
,

93 
	mINTERCEPT
,

94 
	mCHASE
,

95 
	mTURNCW
,

96 
	mGOTO


99 
	eGame°©es
 {

100 
	mTITLE
,

101 
	mNEXTLEVEL
,

102 
	mINTRO
,

103 
	mGAME
,

104 
	mGAMEOVER
,

105 
	mLEVELPASSED


108 
Game°©es
 
	ggame°©e
 = 
TITLE
;

109 
	ggamñevñ
=1;

110 
uöt16_t
 
	gw‹ldsize
=10;

113 
öt32_t
 
	gwx
=-8,
	gwy
=0,
	gcx
=10,
	gcy
=10;

114 
uöt16_t
 
	g¥evtûe
=0, 
	g∂ayîtûe
=0, 
	gfocu°ûe
=0, 
	g˚¡îtûe
=0,
	gﬁd˚¡î
, 
	gtwìn_∑Àâe
[16], 
	ggﬁds
=0, 
	g∂ayîgﬁds
=0;

115 
uöt16_t
 
	gtimeofday
=0;

116 
uöt8_t
 
	gwave
=0, 
	gﬁdtime
=0,
	gwﬁve°ick
=0,
	gw©îtick
=0;

117 
öt8_t
 
	gwadög
=1;

118 
boﬁ
 
	gfocusög
=
Ál£
;

119 
boﬁ
 
	göHut
 = 
Ál£
;

120 
öt16_t
 
	gtwìnÁ˘‹
=0,
	gnumwﬁves
=0;

123 
boﬁ
 
øi£Tûe
(
uöt16_t
);

124 
boﬁ
 
lowîTûe
(
uöt16_t
);

125 
boﬁ
 
	gˇught
=
Ál£
;

126 
öt8_t
 
gëTûeHeightToTûe
(
uöt16_t
, uint16_t);

127 
uöt8_t
 
	gdigCou¡
=0, 
	gm⁄°îdøö
=1;

128 
uöt16_t
 
	gw‹kögOnTûe
=0;

132 
	sco‹ds
 {

133 
öt16_t
 
	mx
;

134 
öt16_t
 
	my
;

137 
	s¸ótuª
 {

138 
öt16_t
 
	míîgy
;

139 
boﬁ
 
	mvisibÀ
;

140 
wÆkDú
 
	mÁcög
;

141 
uöt8_t
 
	m™im‰ame
;

142 
uöt16_t
 
	mtûe
;

143 
co‹ds
 
	mposôi⁄
;

144 
co‹ds
 
	mgoögto
;

145 
AImodes
 
	mai
;

148 
¸ótuª
 
	ghum™s
[
MAXHUMANS
];

149 
¸ótuª
 
	gwîewﬁves
[
MAXWOLVES
];

151 
co‹ds
 
	g∂ayî
,
	gﬁd∂ayî
,
	gfocus
,
	ggﬁdnuggë
;

152 
uöt8_t
 
	gﬁd∂ayîcou¡
=0, 
	ggﬁdnuggëcou¡
;

154 
uöt8_t
 
	gw‹ld
[
WORLDSIZE
*WORLDSIZE];

156 
	$gëTûeHeight
(
uöt16_t
 
i
) {

157  (
w‹ld
[
i
]>>5);

158 
	}
}

160 
	$gëTûeTy≥
(
uöt16_t
 
i
) {

161  (
w‹ld
[
i
]&0x1F);

162 
	}
}

164 
	$£tTûeHeight
(
uöt16_t
 
i
, 
öt8_t
 
h
) {

165 
w‹ld
[
i
] &= 0x1F;

166 
w‹ld
[
i
] |(
h
<<5);

167 
	}
}

169 
	$£tTûeTy≥
(
uöt16_t
 
i
, 
uöt8_t
 
t
) {

170 
w‹ld
[
i
] &= 0xE0;

171 
w‹ld
[
i
] |(
t
&0x1F);

172 
	}
}

174 
uöt16_t
 
	$tûeFromCo‹ds
 (
öt16_t
 
x
,öt16_à
y
) {

175 i‡(
x
<0) x=0;

176 i‡(
y
<0) y=0;

177 
uöt16_t
 
tûe
 = (
x
/
SUBDIVS
)+(
y
/SUBDIVS)*
gamñevñ
*
MAPMULT
;

178  
tûe
;

179 
	}
}

181 
co‹ds
 
	$tûeToS¸ìnXY
 (
uöt16_t
 
tûe
) {

182 
co‹ds
 
s
;

183 
uöt16_t
 
x
 = 
tûe
 % 
w‹ldsize
;

184 
uöt16_t
 
y
 = 
tûe
 / 
w‹ldsize
;

185 
s
.
y
 = y*
YOFF
+
wy
+(3+
x
)*YOFF+2+
	`gëTûeHeight
(
tûe
);

186 
s
.
x
 = x*
XOFF
+
wx
+2*XOFF+2;

187  
s
;

188 
	}
}

190 
uöt16_t
 
	$s¸ìnToTûe
 (
öt16_t
 
x
, i¡16_à
y
) {

192 
öt16_t
 
di°x
 = 
x
-
wx
;

193 
öt16_t
 
di°y
 = 
y
-
wy
;

194 
uöt16_t
 
tûesx
,
tûesy
,
tx
,
ty
;

195 i‡(
di°x
>0) {

197 
tûesx
 = 
di°x
/
XOFF
;

198 
tûesy
 = 
di°y
/
YOFF
;

199 
tx
 = 
tûesx
 + 
tûesy
;

203 
di°x
 = -distx;

204 
tûesx
 = 
di°x
/
XOFF
;

205 
tûesy
 = 
di°y
/
YOFF
;

210 
öt32_t
 
tûex
 = (
x
 - 
wx
 - 2 - 
XOFF
)/XOFF;

211 
öt32_t
 
tûey
 = (
y
-
wy
-2);

212 
tûey
 -=(3+
tûex
)*
YOFF
;

213 
tûey
 /
YOFF
;

214  
tûex
+
tûey
*
w‹ldsize
;

215 
	}
}

217 
uöt16_t
 
	$w‹ldToTûe
 (
uöt16_t
 
x
, uöt16_à
y
) {

218  (
x
/
SUBDIVS
)+(
y
/SUBDIVS)*
w‹ldsize
;

219 
	}
}

221 
co‹ds
 
	$w‹ldToS¸ìn
(
uöt16_t
 
x
, uöt16_à
y
) {

222 
uöt16_t
 
s¸y
 =(
wy
+
y
/
SUBDIVS
*4)+(
x
/SUBDIVS+1)*
YOFF
;

223 
uöt16_t
 
s¸x
 = 
wx
+(
x
/
SUBDIVS
+2)*
XOFF
-
y
/SUBDIVS*8;

224 
öt16_t
 
oy
,
ox
;

225 
öt16_t
 
off£ty
,
off£tx
;

226 
off£ty
 = 
y
%
SUBDIVS
;

227 
off£tx
 = 
x
%
SUBDIVS
;

228 
oy
 = -
off£tx
*
YOFF
/
SUBDIVS
 - 
off£ty
*YOFF/SUBDIVS;

229 
ox
 = 
off£tx
*
XOFF
/
SUBDIVS
 - 
off£ty
*8/SUBDIVS;

230 
co‹ds
 
t
;

231 
t
.
x
 = 
s¸x
+
ox
;Å.
y
 = 
s¸y
-
oy
;

232  
t
;

233 
	}
}

235 
boﬁ
 
	$⁄S¸ìn
(
co‹ds
 
p
) {

236 
co‹ds
 
t
 = 
	`w‹ldToS¸ìn
(
p
.
x
,p.
y
);

237 i‡(
t
.
x
>=0 &&Å.x<110 &&Å.
y
 > 0 &&Å.y <88Ë 
åue
;

238  
Ál£
;

239 
	}
}

241 
boﬁ
 
	$focusOnTûe
(
uöt16_t
 
t
) {

242 i‡(!
focusög
 || 
t
!
focu°ûe
) {

243 
focusög
 = 
åue
;

244 
focu°ûe
 = 
t
;

245 
focus
.
x
 = 
t
 % 
w‹ldsize
;

246 
focus
.
y
 = 
t
 / 
w‹ldsize
;

248 
uöt16_t
 
cuºítfocus
 = 
˚¡îtûe
;

249 i‡(
cuºítfocus
 > 
focu°ûe
-3 && currentfocus <focustile+3) {

250 
focusög
 = 
Ál£
;

251  
åue
;

253 
öt16_t
 
x
 = 
cuºítfocus
 % 
w‹ldsize
;

254 
öt16_t
 
y
 = 
cuºítfocus
 / 
w‹ldsize
;

255 
öt16_t
 
dx
 = 
x
 - 
focus
.x;

256 
öt16_t
 
dy
 = 
y
 - 
focus
.y;

257 i‡(
dx
<0) dx = -dx;

258 i‡(
dy
<0) dy = -dy;

259 i‡(
dx
+
dy
>20Ëdx = 
XSPEED
*8;

260 i‡(
dx
+
dy
>5Ëdx = 
XSPEED
*2;

261 
dx
=
XSPEED
;

262 i‡(
x
<
focus
.xË
wx
-=
dx
;

263 i‡(
x
>
focus
.xË
wx
 +
dx
;

264 i‡(
y
<
focus
.yË
wy
-
dx
;

265 i‡(
y
>
focus
.yË
wy
+
dx
;

266  
Ál£
;

272 
	}
}

274 
	$døwToTûe
(
uöt16_t
 
tûe
, c⁄° 
uöt8_t
* 
bôm≠
, 
öt16_t
 
off£tx
, i¡16_à
off£ty
, uöt8_à
Êù
) {

275 
uöt16_t
 
tûex
,
tûey
;

276 
tûey
 = 
tûe
/
w‹ldsize
;

277 
tûex
 = 
tûe
%
w‹ldsize
;

278 
uöt16_t
 
s¸y
=(
wy
+
tûey
*4)+(
tûex
+1)*
YOFF
;

279 
uöt16_t
 
s¸x
=
wx
+(
tûex
+2)*
XOFF
-
tûey
*8;

280 
öt16_t
 
oy
,
ox
;

281 
oy
 = -
off£tx
*
YOFF
/
SUBDIVS
 - 
off£ty
*YOFF/SUBDIVS+4;

282 
ox
 = 
off£tx
*
XOFF
/
SUBDIVS
 - 
off£ty
*8/SUBDIVS-3;

283 
öt8_t
 
t
=0;

284 i‡(!
wadög
Ë
t
=-
	`øndom
(10);

285 
gb
.
di•œy
.
	`døwBôm≠
(
s¸x
+
ox
+
t
,
s¸y
-(
	`gëTûeHeight
(
tûe
)<<1)-
oy
+t,
bôm≠
,0,
Êù
);

286 
	}
}

288 
boﬁ
 
	$ˇnMoveTo
(
uöt16_t
 
i
) {

289 i‡(
	`gëTûeHeightToTûe
(
i
,
¥evtûe
)>
MAXSTEP
Ë 
Ál£
;

290 i‡(
	`gëTûeTy≥
(
i
)==
TER_HUT
 && 
hum™s
[0].
Ácög
 !
NE
 )  
Ál£
;

291 i‡(
	`gëTûeTy≥
(
¥evtûe
)==
TER_HUT
 && 
hum™s
[0].
Ácög
 !
SW
 )  
Ál£
;

292 i‡(
	`gëTûeTy≥
(
i
)==
TER_TREE
Ë 
Ál£
;

294 i‡(
	`gëTûeTy≥
(
i
)==
TER_STONE
Ë 
Ál£
;

295  
åue
;

296 
	}
}

298 
boﬁ
 
	$ˇnWWMoveFromTo
(
uöt16_t
 
i
,uöt16_à
j
) {

299 i‡(
	`gëTûeHeightToTûe
(
j
,
i
)>
MAXWOLFSTEP
Ë 
Ál£
;

300 i‡(
	`gëTûeTy≥
(
j
)==
TER_HUT
Ë 
Ál£
;

303  
åue
;

304 
	}
}

306 
öt8_t
 
	$gëTûeDX
(
uöt16_t
 
i
) {

307 
öt8_t
 
h_this
 = 
	`gëTûeHeight
(
i
);

308 
uöt16_t
 
y
 = 
i
 / 
w‹ldsize
;

309 
uöt16_t
 
x
 = 
i
 % 
w‹ldsize
;

310 
öt8_t
 
h_¥ev
 = 
h_this
, 
h_√xt
=h_this ;

311 i‡(
x
>0Ë
h_¥ev
 = 
	`gëTûeHeight
(
i
-1);

312 i‡(
x
<
w‹ldsize
-1Ë
h_√xt
 = 
	`gëTûeHeight
(
i
+1);

313 i‡(
h_¥ev
>
h_√xt
)  -1;

314 i‡(
h_¥ev
<
h_√xt
)  1;

316 
	}
}

318 
öt8_t
 
	$gëTûeDY
(
uöt16_t
 
i
) {

319 
öt8_t
 
h_this
 = 
	`gëTûeHeight
(
i
);

320 
uöt16_t
 
y
 = 
i
 / 
w‹ldsize
;

321 
uöt16_t
 
x
 = 
i
 % 
w‹ldsize
;

322 
öt8_t
 
h_¥ev
 = 
h_this
, 
h_√xt
=h_this ;

323 i‡(
y
>0Ë
h_√xt
 = 
	`gëTûeHeight
(
i
-
w‹ldsize
);

324 i‡(
y
<
w‹ldsize
-1Ë
h_¥ev
 = 
	`gëTûeHeight
(
i
+worldsize);

325 i‡(
h_¥ev
<
h_√xt
)  1;

326 i‡(
h_¥ev
>
h_√xt
)  -1;

328 
	}
}

330 
öt8_t
 
	$gëTûeHeightToTûe
(
uöt16_t
 
a
, uöt16_à
b
) {

331 
öt8_t
 
c
 = 
	`gëTûeHeight
(
a
);

332 
öt8_t
 
d
 = 
	`gëTûeHeight
(
b
);

333  
c
-
d
;

334 
	}
}

336 
uöt8_t
 
	$gëTûeSl›e
(
uöt16_t
 
ödex
) {

337 
öt8_t
 
dx
=0,
dy
=0;

338 
dx
=
	`gëTûeDX
(
ödex
);

339 
dy
=
	`gëTûeDY
(
ödex
);

340 
dy
) {

342 i‡(
dx
==0Ë 
TER_PLAIN
;

343 i‡(
dx
>0Ë 
TER_BUMP_NW
;

344  
TER_BUMP_SE
;

347 i‡(
dx
==0Ë 
TER_BUMP_SW
;

348 i‡(
dx
>0Ë 
TER_BUMP_W
;

349  
TER_BUMP_S
;

352 i‡(
dx
==0Ë 
TER_BUMP_NE
;

353 i‡(
dx
>0Ë 
TER_BUMP_N
;

354  
TER_BUMP_E
;

357 
	}
}

359 
	$£tSl›eAutom©ic
(
uöt16_t
 
t
) {

360 
uöt8_t
 
e
 = 
	`gëTûeTy≥
(
t
);

361 i‡(
e
<5 ||É>12 &&É !
TER_PLAIN
) ;

362 
uöt8_t
 
¶›e
 = 
	`gëTûeSl›e
(
t
);

363 
	`£tTûeTy≥
(
t
,
¶›e
);

364 
	}
}

366 
boﬁ
 
	$ªcursiveGroundRai£
(
uöt16_t
 
tûe
) {

367 
uöt16_t
 
èrgë
=
tûe
;

368 i‡(
tûe
>
w‹ldsize
) {

370 i‡(
tûe
%
w‹ldsize
) {

371 
èrgë
 =Å¨gë - 
w‹ldsize
 - 1;

372 i‡(
	`gëTûeHeightToTûe
(
èrgë
,
tûe
)<-
MAXELEVATIONDIFF
Ë
	`øi£Tûe
(target);

374 
èrgë
++;

375 i‡(
	`gëTûeHeightToTûe
(
èrgë
,
tûe
)<-
MAXELEVATIONDIFF
Ë
	`øi£Tûe
(target);

376 i‡(
tûe
%
w‹ldsize
<worldsize-1) {

377 
èrgë
++;

378 i‡(
	`gëTûeHeightToTûe
(
èrgë
,
tûe
)<-
MAXELEVATIONDIFF
Ë
	`øi£Tûe
(target);

382 i‡(
tûe
%
w‹ldsize
>0) {

383 
èrgë
 = 
tûe
 - 1;

384 i‡(
	`gëTûeHeightToTûe
(
èrgë
,
tûe
)<-
MAXELEVATIONDIFF
Ë
	`øi£Tûe
(target);

386 i‡(
tûe
%
w‹ldsize
<worldsize-1) {

387 
èrgë
+=2;

388 i‡(
	`gëTûeHeightToTûe
(
èrgë
,
tûe
)<-
MAXELEVATIONDIFF
Ë
	`øi£Tûe
(target);

391 i‡(
tûe
<
w‹ldsize
*worldsize-worldsize) {

392 i‡(
tûe
%
w‹ldsize
>0) {

393 
èrgë
 = 
tûe
 + 
w‹ldsize
 -1;

394 i‡(
	`gëTûeHeightToTûe
(
èrgë
,
tûe
)<-
MAXELEVATIONDIFF
Ë
	`øi£Tûe
(target);

396 
èrgë
++;

397 i‡(
	`gëTûeHeightToTûe
(
èrgë
,
tûe
)<-
MAXELEVATIONDIFF
Ë
	`øi£Tûe
(target);

398 i‡(
tûe
<
w‹ldsize
*worldsize-1) {

399 
èrgë
++;

400 i‡(
	`gëTûeHeightToTûe
(
èrgë
,
tûe
)<-
MAXELEVATIONDIFF
Ë
	`øi£Tûe
(target);

405  
Ál£
;

406 
	}
}

408 
boﬁ
 
	$øi£Tûe
(
uöt16_t
 
t
) {

409 
öt8_t
 
z
 = 
	`gëTûeHeight
(
t
);

410 i‡(
z
==0Ë
	`£tTûeTy≥
(
t
,
TER_PLAIN
);

411 
z
++;

412 i‡(
z
>7) z=7;

413 
	`£tTûeHeight
(
t
,
z
);

414 
	`ªcursiveGroundRai£
(
t
);

415 i‡(
z
==7Ë
digCou¡
 = 
DIGMAX
;

416  
åue
;

417 
	}
}

419 
uöt16_t
 
	$gëFacögTûe
(
uöt16_t
 
tûe
, 
wÆkDú
 
Ácög
) {

420 
Ácög
) {

421 
NE
:

422 i‡(
tûe
<
w‹ldsize
)  -1;

423  
tûe
-
w‹ldsize
;

425 
SE
:

426 i‡(
tûe
%
w‹ldsize
 == worldsize-1)  -1;

427  
tûe
+1;

428 
SW
:

429 i‡(
tûe
>
w‹ldsize
*worldsize-worldsize)  -1;

430  
tûe
+
w‹ldsize
;

431 
NW
:

432 i‡(
tûe
%
w‹ldsize
 == 0)  -1;

433  
tûe
-1;

436 
	}
}

438 
	$•awnWﬁf
() {

439 
uöt8_t
 
i
 = 0; i< (
gamñevñ
-1Ë* 
WOLFMULT
 ; i++) {

440 i‡(
wîewﬁves
[
i
].
íîgy
 <= 0) {

441 
uöt16_t
 
k
;

442 
k
=
	`øndom
(
w‹ldsize
*worldsize-1);

443 
uöt8_t
 
a
 = (uöt8_t)
	`øndom
(3)-1;

444 
a
) {

446 
wîewﬁves
[
i
].
ai
 = 
HOMING
; ;

448 
wîewﬁves
[
i
].
ai
 = 
CHASE
; ;

450 
wîewﬁves
[
i
].
ai
 = 
INTERCEPT
; ;

453 
wîewﬁves
[
i
].
íîgy
 = 
WOLFENERGY
;

454 
wîewﬁves
[
i
].
tûe
 = 
k
;

455 
k
 *
SUBDIVS
;

456 
wîewﬁves
[
i
].
posôi⁄
.
x
 = 
k
%
w‹ldsize
;

457 
wîewﬁves
[
i
].
posôi⁄
.
y
 = 
k
/
w‹ldsize
;

458 
numwﬁves
++;

459 
i
=(
gamñevñ
-1)*
WOLFMULT
; ;

462 
	}
}

464 
	$de•awnWﬁf
(
uöt8_t
 
n
) {

465 
wîewﬁves
[
n
].
íîgy
=0;

466 
wîewﬁves
[
n
].
visibÀ
=
Ál£
;

467 
numwﬁves
--;

468 
	}
}

470 
	$de•awnAŒWﬁves
() {

471 
uöt8_t
 
i
 = 0; i< (
gamñevñ
-1)*
WOLFMULT
 ; i++) {

472 
	`de•awnWﬁf
(
i
);

474 
	}
}

476 
	$moveWﬁves
() {

477 
uöt8_t
 
i
 = 0; i< (
gamñevñ
-1)*
WOLFMULT
 ; i++) {

478 i‡(
wîewﬁves
[
i
].
íîgy
>0) {

479 i‡(
wﬁve°ick
) {

480 
uöt16_t
 
‰omtûe
 = 
wîewﬁves
[
i
].
tûe
;

481 
co‹ds
 
‰omposôi⁄
 = 
wîewﬁves
[
i
].
posôi⁄
;

482 
öt16_t
 
aix
,
aiy
,
bix
,
biy
;

483 
wîewﬁves
[
i
].
ai
) {

484 
INTERCEPT
:

485 i‡(
hum™s
[
i
].
Ácög
==
NE
Ë{
wîewﬁves
[i].
posôi⁄
.
y
--; wîewﬁves[i].
™im‰ame
 = 1 - wîewﬁves[i].™im‰ame; wîewﬁves[i].Ácög = 
SE
;}

486 i‡(
hum™s
[
i
].
Ácög
==
SE
Ë{
wîewﬁves
[i].
posôi⁄
.
x
++; wîewﬁves[i].
™im‰ame
 = 1 - wîewﬁves[i].™im‰ame;wîewﬁves[i].Ácög = 
NW
;}

487 i‡(
hum™s
[
i
].
Ácög
==
SW
Ë{
wîewﬁves
[i].
posôi⁄
.
y
++; wîewﬁves[i].
™im‰ame
 = 1 - werewolves[i].animframe;werewolves[i].facing = SW;}

488 i‡(
hum™s
[
i
].
Ácög
==
NW
Ë{
wîewﬁves
[i].
posôi⁄
.
x
--; wîewﬁves[i].
™im‰ame
 = 1 - wîewﬁves[i].™im‰ame;wîewﬁves[i].Ácög = 
NE
;}

489 i‡(
	`x‹shi·8
()>0xf0) {

490 
uöt8_t
 
a
 = (uöt8_t)
	`øndom
(3);

491 
a
) {

493 
wîewﬁves
[
i
].
ai
 = 
HOMING
; ;

495 
wîewﬁves
[
i
].
ai
 = 
CHASE
; ;

497 
wîewﬁves
[
i
].
ai
 = 
INTERCEPT
; ;

499 
wîewﬁves
[
i
].
ai
 = 
TURNCW
; ;

505 
CHASE
:

506 i‡(
wîewﬁves
[
i
].
posôi⁄
.
x
<
ﬁd∂ayî
.xË{wîewﬁves[i].posôi⁄.x++; wîewﬁves[i].
™im‰ame
 = 1 - wîewﬁves[i].™im‰ame; wîewﬁves[i].
Ácög
 = 
SE
;}

507 i‡(
wîewﬁves
[
i
].
posôi⁄
.
x
>
ﬁd∂ayî
.xË{wîewﬁves[i].posôi⁄.x--; wîewﬁves[i].
™im‰ame
 = 1 - wîewﬁves[i].™im‰ame;wîewﬁves[i].
Ácög
 = 
NW
;}

508 i‡(
wîewﬁves
[
i
].
posôi⁄
.
y
<
ﬁd∂ayî
.yË{wîewﬁves[i].posôi⁄.y++; wîewﬁves[i].
™im‰ame
 = 1 - wîewﬁves[i].™im‰ame;wîewﬁves[i].
Ácög
 = 
SW
;}

509 i‡(
wîewﬁves
[
i
].
posôi⁄
.
y
>
ﬁd∂ayî
.yË{wîewﬁves[i].posôi⁄.y--; wîewﬁves[i].
™im‰ame
 = 1 - wîewﬁves[i].™im‰ame;wîewﬁves[i].
Ácög
 = 
NE
;}

510 
aiy
 = 
wîewﬁves
[
i
].
posôi⁄
.
y
 - 
∂ayî
.y;

511 
aix
 = 
wîewﬁves
[
i
].
posôi⁄
.
x
 - 
∂ayî
.x;

512 i‡(
aix
<0)áix = -aix;

513 i‡(
aiy
<0)áiy = -aiy;

514 i‡(
aix
<30 || 
aiy
 <30Ë
wîewﬁves
[
i
].
ai
 = 
HOMING
;

516 
TURNCW
:

517 
wîewﬁves
[
i
].
goögto
.
x
 = wîewﬁves[i].
posôi⁄
.x+
	`øndom
(48)-24;

518 
wîewﬁves
[
i
].
goögto
.
y
 = wîewﬁves[i].
posôi⁄
.y+
	`øndom
(48)-24;

519 
	`w‹ldToTûe
(
wîewﬁves
[
i
].
goögto
.
x
,wîewﬁves[i].goögto.
y
)>
w‹ldsize
*worldsize-1) {

520 
wîewﬁves
[
i
].
goögto
.
x
 = wîewﬁves[i].
posôi⁄
.x+
	`øndom
(48)-24;

521 
wîewﬁves
[
i
].
goögto
.
y
 = wîewﬁves[i].
posôi⁄
.y+
	`øndom
(48)-24;

523 
wîewﬁves
[
i
].
ai
 = 
GOTO
;

525 
GOTO
:

526 i‡(
wîewﬁves
[
i
].
posôi⁄
.
x
<wîewﬁves[i].
goögto
.xË{wîewﬁves[i].posôi⁄.x++; wîewﬁves[i].
™im‰ame
 = 1 - wîewﬁves[i].™im‰ame; wîewﬁves[i].
Ácög
 = 
SE
;}

527 i‡(
wîewﬁves
[
i
].
posôi⁄
.
x
>wîewﬁves[i].
goögto
.xË{wîewﬁves[i].posôi⁄.x--; wîewﬁves[i].
™im‰ame
 = 1 - wîewﬁves[i].™im‰ame;wîewﬁves[i].
Ácög
 = 
NW
;}

528 i‡(
wîewﬁves
[
i
].
posôi⁄
.
y
<wîewﬁves[i].
goögto
.yË{wîewﬁves[i].posôi⁄.y++; wîewﬁves[i].
™im‰ame
 = 1 - wîewﬁves[i].™im‰ame;wîewﬁves[i].
Ácög
 = 
SW
;}

529 i‡(
wîewﬁves
[
i
].
posôi⁄
.
y
>wîewﬁves[i].
goögto
.yË{wîewﬁves[i].posôi⁄.y--; wîewﬁves[i].
™im‰ame
 = 1 - wîewﬁves[i].™im‰ame;wîewﬁves[i].
Ácög
 = 
NE
;}

530 i‡(
wîewﬁves
[
i
].
posôi⁄
.
x
==wîewﬁves[i].
goögto
.x && wîewﬁves[i].posôi⁄.
y
==wîewﬁves[i].goögto.yËwîewﬁves[i].
ai
 = 
HOMING
;

532 
HOMING
:

533 i‡(
wîewﬁves
[
i
].
posôi⁄
.
x
<
∂ayî
.xË{wîewﬁves[i].posôi⁄.x++; wîewﬁves[i].
™im‰ame
 = 1 - wîewﬁves[i].™im‰ame; wîewﬁves[i].
Ácög
 = 
SE
;}

534 i‡(
wîewﬁves
[
i
].
posôi⁄
.
x
>
∂ayî
.xË{wîewﬁves[i].posôi⁄.x--; wîewﬁves[i].
™im‰ame
 = 1 - wîewﬁves[i].™im‰ame;wîewﬁves[i].
Ácög
 = 
NW
;}

535 i‡(
wîewﬁves
[
i
].
posôi⁄
.
y
<
∂ayî
.yË{wîewﬁves[i].posôi⁄.y++; wîewﬁves[i].
™im‰ame
 = 1 - wîewﬁves[i].™im‰ame;wîewﬁves[i].
Ácög
 = 
SW
;}

536 i‡(
wîewﬁves
[
i
].
posôi⁄
.
y
>
∂ayî
.yË{wîewﬁves[i].posôi⁄.y--; wîewﬁves[i].
™im‰ame
 = 1 - wîewﬁves[i].™im‰ame;wîewﬁves[i].
Ácög
 = 
NE
;}

539 
wîewﬁves
[
i
].
tûe
 = 
	`w‹ldToTûe
(wîewﬁves[i].
posôi⁄
.
x
,wîewﬁves[i].posôi⁄.
y
);

540 i‡(
	`ˇnWWMoveFromTo
(
‰omtûe
,
wîewﬁves
[
i
].
tûe
)==
Ál£
) {

541 
wîewﬁves
[
i
].
posôi⁄
=
‰omposôi⁄
;

542 
wîewﬁves
[
i
].
tûe

‰omtûe
;

543 
uöt8_t
 
a
 = (uöt8_t)
	`øndom
(3);

544 
a
) {

546 
wîewﬁves
[
i
].
ai
 = 
HOMING
; ;

548 
wîewﬁves
[
i
].
ai
 = 
CHASE
; ;

550 
wîewﬁves
[
i
].
ai
 = 
INTERCEPT
; ;

552 
wîewﬁves
[
i
].
ai
 = 
TURNCW
; ;

556 i‡(
wîewﬁves
[
i
].
posôi⁄
.
x
>(
w‹ldsize
-1)*
SUBDIVS
) werewolves[i].position.x=(worldsize-1)*SUBDIVS;

557 i‡(
wîewﬁves
[
i
].
posôi⁄
.
y
>(
w‹ldsize
-1)*
SUBDIVS
) werewolves[i].position.y=(worldsize-1)*SUBDIVS;

558 i‡(
wîewﬁves
[
i
].
posôi⁄
.
x
<0) werewolves[i].position.x=1;

559 i‡(
wîewﬁves
[
i
].
posôi⁄
.
y
<0) werewolves[i].position.y=1;

560 i‡(
	`⁄S¸ìn
(
wîewﬁves
[
i
].
posôi⁄
)Ëwîewﬁves[i].
visibÀ
 = 
åue
;

561 
wîewﬁves
[
i
].
visibÀ
 = 
Ál£
;

562 
wîewﬁves
[
i
].
íîgy
-
m⁄°îdøö
;

563 i‡(
wîewﬁves
[
i
].
íîgy
<=0Ë
	`de•awnWﬁf
(i);

564 } 
wîewﬁves
[
i
].
visibÀ
=
Ál£
;

566 
	}
}

568 
	$öôw‹ld
() {

569 
timeofday
=0;

570 
wave
=0; 
ﬁdtime
=0; 
wﬁve°ick
=0;
w©îtick
=0;

571 
∂ayîgﬁds
=0;

572 
wadög
=1;

573 
focusög
=
Ál£
;

574 
öHut
 = 
Ál£
;

575 
w‹ldsize
 = 10+
gamñevñ
*
MAPMULT
;

576 
ˇught
=
Ál£
; 
hum™s
[0].
íîgy
=0xFFF;
gﬁds
=0;
∂ayîgﬁds
=0;

577 
gb
.
di•œy
.
	`lﬂd565PÆëã
(
pokulous_∑l
);

578 
timeofday
=
	`øndom
(0x3FFF); 
twìnÁ˘‹
=0; 
gﬁds
=0;

579 
∂ayî
.
x
=5*
SUBDIVS
;

580 
∂ayî
.
y
=0;

581 
uöt16_t
 
i
 = 0;

583 
i
=0;i<
w‹ldsize
*worldsize;i++) {

584 
	`£tTûeHeight
(
i
,0);

585 
	`£tTûeTy≥
(
i
,
TER_UNDEFINED
);

588 
	#NUMPEAKS
 
w‹ldsize
/10

	)

589 
uöt16_t
 
big≥aks
 = 
NUMPEAKS
*
	`øndom
(2)+NUMPEAKS*3;

590 
uöt16_t
 
smÆÕóks
 = 
NUMPEAKS
*
	`øndom
(2)+NUMPEAKS*30;

591 
uöt16_t
 
˛iffs
 = 
NUMPEAKS
*
	`øndom
(2)+NUMPEAKS*3;

592 
uöt16_t
 
sh¨ds
 = 
NUMPEAKS
*
	`øndom
(4)+NUMPEAKS*30;

594 
	`øndom
(3)) {

600 
big≥aks
 +
NUMPEAKS
*10;

601 
sh¨ds
 /= 10;

602 
smÆÕóks
 /= 10;

606 
big≥aks
 =0;

607 
˛iffs
 /=10;

608 
sh¨ds
 =0;

609 
smÆÕóks
 /= 10;

613 
sh¨ds
 +
NUMPEAKS
*50;

614 
big≥aks
 = 0;

615 
smÆÕóks
 /=10;

619 
uöt8_t
 
r
=0;Ñ<
big≥aks
;r++) {

620 
uöt16_t
 
rx
 = 
	`øndom
(
w‹ldsize
-16)+8;

621 
uöt16_t
 
ry
 = 
	`øndom
(
w‹ldsize
-16)+8;

622 
uöt8_t
 
sx
 = 
	`øndom
(
NUMPEAKS
)+1;

623 
uöt8_t
 
sy
 = 
	`øndom
(
NUMPEAKS
)+1;

624 
uöt8_t
 
he
 = 
	`øndom
(5)+2;

625 
uöt8_t
 
ty
 = 0;Åy < 
sy
;Åy++) {

626 
uöt8_t
 
tx
 = 0;Åx < 
sx
;Åx++) {

627 
uöt32_t
 
ödex
 = 
rx
+
tx
+(
ry
+
ty
Ë* 
w‹ldsize
;

628 i‡(
ödex
<
w‹ldsize
*worldsize) {

629 
	`£tTûeHeight
(
ödex
,
he
);

630 
	`£tTûeTy≥
(
ödex
,
TER_PLAIN
);

636 
uöt16_t
 
r
=0;Ñ<
smÆÕóks
;r++) {

637 
uöt16_t
 
rx
 = 
	`øndom
(
w‹ldsize
-2)+1;

638 
uöt16_t
 
ry
 = 
	`øndom
(
w‹ldsize
-2)+1;

639 
uöt8_t
 
sx
 = 
	`øndom
(3)+1;

640 
uöt8_t
 
sy
 = 
	`øndom
(3)+1;

641 
uöt8_t
 
he
 = 
	`øndom
(3)+1;

642 
uöt8_t
 
ty
 = 0;Åy < 
sy
;Åy++) {

643 
uöt8_t
 
tx
 = 0;Åx < 
sx
;Åx++) {

644 
uöt32_t
 
ödex
 = 
rx
+
tx
+(
ry
+
ty
Ë* 
w‹ldsize
;

645 i‡(
ödex
<
w‹ldsize
*worldsize) {

646 
	`£tTûeHeight
(
ödex
,
he
);

647 
	`£tTûeTy≥
(
ödex
,
TER_PLAIN
);

653 
öt8_t
 
Àvñ
=7;

654 
Àvñ
>-1) {

655 
i
 =0;

656 
öt16_t
 
y
 = 0; y<
w‹ldsize
; y++) {

657 
öt16_t
 
x
 = 0; x<
w‹ldsize
; x++, 
i
++) {

658 
uöt8_t
 
a
 = 
	`gëTûeHeight
(
i
);

659 i‡(
a
==
Àvñ
) {

660 i‡(
a
==0Ë
	`£tTûeTy≥
(
i
,
TER_WATER
);

663 i‡((
x
>0Ë&& 
	`gëTûeTy≥
(
i
-1)==
TER_UNDEFINED
Ë{
	`£tTûeTy≥
((i-1),
TER_PLAIN
); 
	`£tTûeHeight
((i-1),
Àvñ
-1);}

665 i‡((
y
>0Ë&& 
	`gëTûeTy≥
(
i
-
w‹ldsize
)==
TER_UNDEFINED
Ë{
	`£tTûeTy≥
((i-w‹ldsize),
TER_PLAIN
); 
	`£tTûeHeight
((i-w‹ldsize),
Àvñ
-1);}

667 i‡((
x
<
w‹ldsize
-1Ë&& 
	`gëTûeTy≥
(
i
+1)==
TER_UNDEFINED
Ë{
	`£tTûeTy≥
((i+1),
TER_PLAIN
); 
	`£tTûeHeight
((i+1),
Àvñ
-1);}

669 i‡((
y
<
w‹ldsize
-1Ë&& 
	`gëTûeTy≥
(
i
+w‹ldsize)==
TER_UNDEFINED
Ë{
	`£tTûeTy≥
((i+w‹ldsize),
TER_PLAIN
); 
	`£tTûeHeight
((i+w‹ldsize),
Àvñ
-1);}

674 
Àvñ
--;

678 
uöt8_t
 
r
=0;Ñ<
˛iffs
;r++) {

679 
uöt16_t
 
rx
 = 
	`øndom
(
w‹ldsize
-16)+8;

680 
uöt16_t
 
ry
 = 
	`øndom
(
w‹ldsize
-16)+8;

681 
uöt8_t
 
sx
 = 
	`øndom
(
NUMPEAKS
)+1;

682 
uöt8_t
 
sy
 = 
	`øndom
(
NUMPEAKS
)+1;

683 
uöt8_t
 
he
 = 
	`øndom
(5)+2;

684 
uöt8_t
 
ty
 = 0;Åy < 
sy
;Åy++) {

685 
uöt8_t
 
tx
 = 0;Åx < 
sx
;Åx++) {

686 
uöt32_t
 
ödex
 = 
rx
+
tx
+(
ry
+
ty
Ë* 
w‹ldsize
;

687 i‡(
ödex
<
w‹ldsize
*worldsize) {

688 
	`£tTûeHeight
(
ödex
,
he
);

689 
	`£tTûeTy≥
(
ödex
,
TER_PLAIN
);

696 
Àvñ
=7; 
öt8_t
 
edge
 = 
	`øndom
(6)+1;

697 
Àvñ
>
edge
) {

698 
i
 =0;

699 
öt16_t
 
y
 = 0; y<
w‹ldsize
; y++) {

700 
öt16_t
 
x
 = 0; x<
w‹ldsize
; x++, 
i
++) {

701 
uöt8_t
 
a
 = 
	`gëTûeHeight
(
i
);

702 i‡(
a
==
Àvñ
) {

703 i‡(
a
==0Ë
	`£tTûeTy≥
(
i
,
TER_WATER
);

706 i‡((
x
>0Ë&& 
	`gëTûeTy≥
(
i
-1)==
TER_UNDEFINED
Ë{
	`£tTûeTy≥
((i-1),
TER_PLAIN
); 
	`£tTûeHeight
((i-1),
Àvñ
-1);}

708 i‡((
y
>0Ë&& 
	`gëTûeTy≥
(
i
-
w‹ldsize
)==
TER_UNDEFINED
Ë{
	`£tTûeTy≥
((i-w‹ldsize),
TER_PLAIN
); 
	`£tTûeHeight
((i-w‹ldsize),
Àvñ
-1);}

710 i‡((
x
<
w‹ldsize
-1Ë&& 
	`gëTûeTy≥
(
i
+1)==
TER_UNDEFINED
Ë{
	`£tTûeTy≥
((i+1),
TER_PLAIN
); 
	`£tTûeHeight
((i+1),
Àvñ
-1);}

712 i‡((
y
<
w‹ldsize
-1Ë&& 
	`gëTûeTy≥
(
i
+w‹ldsize)==
TER_UNDEFINED
Ë{
	`£tTûeTy≥
((i+w‹ldsize),
TER_PLAIN
); 
	`£tTûeHeight
((i+w‹ldsize),
Àvñ
-1);}

717 
Àvñ
--;

721 
uöt16_t
 
r
=0;Ñ<
sh¨ds
;r++) {

722 
uöt16_t
 
rx
 = 
	`øndom
(
w‹ldsize
-2)+1;

723 
uöt16_t
 
ry
 = 
	`øndom
(
w‹ldsize
-2)+1;

724 
uöt8_t
 
sx
 = 
	`øndom
(1)+1;

725 
uöt8_t
 
sy
 = 
	`øndom
(1)+1;

726 
uöt8_t
 
he
 = 
	`øndom
(5)+2;

727 
uöt8_t
 
ty
 = 0;Åy < 
sy
;Åy++) {

728 
uöt8_t
 
tx
 = 0;Åx < 
sx
;Åx++) {

729 
uöt32_t
 
ödex
 = 
rx
+
tx
+(
ry
+
ty
Ë* 
w‹ldsize
;

730 i‡(
ödex
<
w‹ldsize
*worldsize) {

731 
	`£tTûeHeight
(
ödex
,
he
);

732 
	`£tTûeTy≥
(
ödex
,
TER_PLAIN
);

739 
i
=0;i<
w‹ldsize
*worldsize;i++) {

740 i‡(
	`gëTûeTy≥
(
i
)==
TER_UNDEFINED
) {

741 
	`£tTûeHeight
(
i
,0);

742 
	`£tTûeTy≥
(
i
,
TER_WATER
);

747 
uöt16_t
 
j
=0; j<
w‹ldsize
*worldsize;j++) {

748 i‡(
	`gëTûeHeight
(
j
)Ë
	`£tTûeTy≥
(j,
	`gëTûeSl›e
(j));

749 #i‡
TREESNROCKS


750 i‡(
	`gëTûeTy≥
(
j
)!=
TER_WATER
) {

751 
uöt8_t
 
r
=
	`x‹shi·8
();

752 i‡(
r
>0xff-
HUTPROB
Ë{
	`£tTûeTy≥
(
j
,
TER_HUT
);
	`£tTûeHeight
(j,7);}

753 i‡(
r
>0xff-
GOLDPROB
 && 
gﬁds
<
MAXGOLD
) {

754 
	`£tTûeTy≥
(
j
,
TER_GOLD
);

757 i‡(
r
>0xff-
STONEPROB
Ë
	`£tTûeTy≥
(
j
,
TER_STONE
);

758 i‡(
r
>0xff-
TREEPROB
Ë
	`£tTûeTy≥
(
j
,
TER_TREE
);

763 
i
=0; 
uöt16_t
 
huts
[100],
numhuts
=0;

767 
uöt16_t
 
j
 = 0; j<
w‹ldsize
*worldsize; j++) {

768 i‡(
w‹ld
[
j
]==
TER_WATER
) {

769 
uöt16_t
 
y
 = 
j
/
w‹ldsize
+1;

770 
uöt16_t
 
x
 = 
j
 % 
w‹ldsize
;

771 i‡((
j
%
w‹ldsize
)&&(
w‹ld
[j-1]!=
TER_WATER
)&&(w‹ld[j+1]==TER_WATER)&&
x
>0Ëw‹ld[j-1]=
TER_BEACHSE
;

772 i‡(
j
>
w‹ldsize
&&(
w‹ld
[j-w‹ldsize]!
TER_WATER
)&&(w‹ld[j+w‹ldsize]==TER_WATER)&&
y
<w‹ldsize-1Ëw‹ld[j-w‹ldsize]=
TER_BEACHSW
;

779 
uöt16_t
 
j
 = 0; j<
w‹ldsize
*worldsize; j++) {

781 i‡(
	`gëTûeTy≥
(
j
)==
TER_HUT
) {

782 i‡(
j
 < (
w‹ldsize
-1)*worldsize) {

783 
	`£tTûeTy≥
(
j
+
w‹ldsize
, 
TER_PLAIN
);

784 
huts
[
numhuts
++]=
j
;

785 } {
	`£tTûeTy≥
(
j
, 
TER_PLAIN
);}

789 i‡(
numhuts
==0) {

790 
uöt16_t
 
ut
 = 
w‹ldsize
*worldsize/2+worldsize/2;

791 
	`£tTûeTy≥
(
ut
,
TER_HUT
);

792 
	`£tTûeHeight
(
ut
,4);

793 
	`£tTûeTy≥
(
ut
+
w‹ldsize
,
TER_PLAIN
);

797 
uöt16_t
 
t
 = 
	`øndom
(
numhuts
);

799 
∂ayîtûe
 = (
uöt16_t
)
	`øndom
(
w‹ldsize
*worldsize);

805 
∂ayî
.
x
 = (
∂ayîtûe
%
w‹ldsize
)*
SUBDIVS
;

806 
∂ayî
.
y
 = 
∂ayîtûe
/
w‹ldsize
*
SUBDIVS
;

810 
gﬁds
=0;

811 
uöt16_t
 
i
=0;i<
w‹ldsize
*worldsize;i++) {

812 i‡(
	`gëTûeTy≥
(
i
)==
TER_GOLD
Ë
gﬁds
++;

815 
gﬁds
<
gamñevñ
*
GOLDMULT
) {

816 
	`£tTûeTy≥
(
	`øndom
(
w‹ldsize
*w‹ldsize-1),
TER_GOLD
);

817 
gﬁds
++;

819 
	}
}

821 
	$døwtûe
(
öt32_t
 
x
, i¡32_à
y
, c⁄° 
uöt8_t
* 
bmp
) {

822 
gb
.
di•œy
.
	`døwBôm≠
(
x
+
cx
, 
y
+
cy
, 
bmp
);

823 
	}
}

825 
	$døwhum™
(
uöt8_t
 
n
) {

826 
hum™s
[
n
].
Ácög
) {

827 
NE
:

828 i‡(!
hum™s
[
n
].
™im‰ame
Ë
	`døwToTûe
(
∂ayîtûe
,
pixñm™_nw_1
,
∂ayî
.
x
%
SUBDIVS
,∂ayî.
y
%SUBDIVS,1);

829 
	`døwToTûe
(
∂ayîtûe
,
pixñm™_nw_2
,
∂ayî
.
x
%
SUBDIVS
,∂ayî.
y
%SUBDIVS,1);

831 
SE
:

832 i‡(!
hum™s
[
n
].
™im‰ame
Ë
	`døwToTûe
(
∂ayîtûe
,
pixñm™_£_1
,
∂ayî
.
x
%
SUBDIVS
,∂ayî.
y
%SUBDIVS,0);

833 
	`døwToTûe
(
∂ayîtûe
,
pixñm™_£_2
,
∂ayî
.
x
%
SUBDIVS
,∂ayî.
y
%SUBDIVS,0);

835 
SW
:

836 i‡(!
hum™s
[
n
].
™im‰ame
Ë
	`døwToTûe
(
∂ayîtûe
,
pixñm™_£_1
,
∂ayî
.
x
%
SUBDIVS
,∂ayî.
y
%SUBDIVS,1);

837 
	`døwToTûe
(
∂ayîtûe
,
pixñm™_£_2
,
∂ayî
.
x
%
SUBDIVS
,∂ayî.
y
%SUBDIVS,1);

839 
NW
:

840 i‡(!
hum™s
[
n
].
™im‰ame
Ë
	`døwToTûe
(
∂ayîtûe
,
pixñm™_nw_1
,
∂ayî
.
x
%
SUBDIVS
,∂ayî.
y
%SUBDIVS,0);

841 
	`døwToTûe
(
∂ayîtûe
,
pixñm™_nw_2
,
∂ayî
.
x
%
SUBDIVS
,∂ayî.
y
%SUBDIVS,0);

845 if(
gb
.
	`upd©e
()Ëgb.
di•œy
.
	`¥öt
("ERROR!!!");

848 
	}
}

850 
	$•awnGﬁd
(
uöt16_t
 
t
) {

852 
	}
}

854 
	$døwwﬁf
(
uöt8_t
 
n
) {

855 
wîewﬁves
[
n
].
Ácög
) {

856 
NE
:

857 i‡(!
wîewﬁves
[
n
].
™im‰ame
Ë
	`døwToTûe
(wîewﬁves[n].
tûe
,
wîewﬁf_nw_1
,wîewﬁves[n].
posôi⁄
.
x
%
SUBDIVS
,wîewﬁves[n].posôi⁄.
y
%SUBDIVS,1);

858 
	`døwToTûe
(
wîewﬁves
[
n
].
tûe
,
wîewﬁf_nw_2
,wîewﬁves[n].
posôi⁄
.
x
%
SUBDIVS
,wîewﬁves[n].posôi⁄.
y
%SUBDIVS,1);

860 
SE
:

861 i‡(!
wîewﬁves
[
n
].
™im‰ame
Ë
	`døwToTûe
(wîewﬁves[n].
tûe
,
wîewﬁf_£_1
,wîewﬁves[n].
posôi⁄
.
x
%
SUBDIVS
,wîewﬁves[n].posôi⁄.
y
%SUBDIVS,0);

862 
	`døwToTûe
(
wîewﬁves
[
n
].
tûe
,
wîewﬁf_£_2
,wîewﬁves[n].
posôi⁄
.
x
%
SUBDIVS
,wîewﬁves[n].posôi⁄.
y
%SUBDIVS,0);

864 
SW
:

865 i‡(!
wîewﬁves
[
n
].
™im‰ame
Ë
	`døwToTûe
(wîewﬁves[n].
tûe
,
wîewﬁf_£_1
,wîewﬁves[n].
posôi⁄
.
x
%
SUBDIVS
,wîewﬁves[n].posôi⁄.
y
%SUBDIVS,1);

866 
	`døwToTûe
(
wîewﬁves
[
n
].
tûe
,
wîewﬁf_£_2
,wîewﬁves[n].
posôi⁄
.
x
%
SUBDIVS
,wîewﬁves[n].posôi⁄.
y
%SUBDIVS,1);

868 
NW
:

869 i‡(!
wîewﬁves
[
n
].
™im‰ame
Ë
	`døwToTûe
(wîewﬁves[n].
tûe
,
wîewﬁf_nw_1
,wîewﬁves[n].
posôi⁄
.
x
%
SUBDIVS
,wîewﬁves[n].posôi⁄.
y
%SUBDIVS,0);

870 
	`døwToTûe
(
wîewﬁves
[
n
].
tûe
,
wîewﬁf_nw_2
,wîewﬁves[n].
posôi⁄
.
x
%
SUBDIVS
,wîewﬁves[n].posôi⁄.
y
%SUBDIVS,0);

873 
	}
}

875 
	$døww‹ld
(
öt32_t
 
x
, i¡32_à
y
) {

877 
uöt16_t
 
i
=0;

878 
uöt8_t
 
tûëy≥
;

879 
öt8_t
 
tûeheight
;

880 
öt32_t
 
s¸x
=
x
, 
s¸y
=
y
;

881 
wave
+=6;

883 
˚¡îtûe
 =-1;

884 
öt16_t
 
rowx
 = 0;

885 
öHut
 = 
Ál£
;

886 
boﬁ
 
hdøwn
=
Ál£
;

887 
uöt8_t
 
iy
=0;iy<
w‹ldsize
;iy++,
rowx
-=8) {

888 
s¸y
=
y
+
iy
*4;

889 
s¸x
=
x
;

890 
uöt8_t
 
ix
=0;ix<
w‹ldsize
;ix++, 
i
++, 
s¸x
+=
XOFF
, 
s¸y
+=
YOFF
) {

891 i‡(
s¸x
+
rowx
>-5*
XOFF
 && 
s¸y
>-5*
YOFF
 && scrx+rowx < 110+XOFF && scry < 88+ YOFF ) {

892 
tûëy≥
 = 
	`gëTûeTy≥
(
i
);

893 
tûeheight
 = 
	`gëTûeHeight
(
i
);

894 
boﬁ
 
pûœr
=
Ál£
;

895 i‡(
tûeheight
>
PILLARHEIGHT
Ë
pûœr
=
åue
;

896 
tûeheight
 <<
GROUNDLIFT
;

898 
tûëy≥
) {

899 
TER_WATER
:

901 i‡((
wave
>0x7F)) {

902 i‡(
ix
&1Ë
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
ãr_w©î1
);

903 
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
ãr_w©î2
);

905 i‡(
ix
&1Ë
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
ãr_w©î2
);

906 
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
ãr_w©î1
);

909 
TER_PLAIN
:

910 i‡(
pûœr
Ë
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
dút_pûœr
);

911 
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
ãr_∂aö
);

913 
TER_GOLD
:

914 i‡(
pûœr
Ë
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
dút_pûœr
);

915 
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
ãr_gﬁd
);

917 
TER_HUT
:

918 i‡(
pûœr
Ë
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
dút_pûœr
);

919 
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-10-
tûeheight
,
ãr_hut
);

920 i‡(
i
==
∂ayîtûe
) {

921 
	`døwToTûe
(
i
,
™im_blue_Êag1
,2,0,0);

922 
öHut
=
åue
;

925 
TER_BEACHSE
:

926 
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
-1,
ãr_bóch_£
);

928 
TER_BEACHSW
:

929 
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
-1,
ãr_bóch_sw
);

931 
TER_TREE
:

932 i‡(
pûœr
Ë
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
dút_pûœr
);

933 
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-10-
tûeheight
,
ãr_åì
);

935 
TER_STONE
:

936 i‡(
pûœr
Ë
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
dút_pûœr
);

937 
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
ãr_°⁄e
);

939 
TER_BUMP_NW
:

940 i‡(
pûœr
Ë
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
dút_pûœr
);

941 
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
ãr_bump_nw
);

943 
TER_BUMP_NE
:

944 i‡(
pûœr
Ë
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
dút_pûœr
);

945 
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
ãr_bump_√
);

947 
TER_BUMP_SE
:

948 i‡(
pûœr
Ë
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
dút_pûœr
);

949 
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
ãr_bump_£
);

951 
TER_BUMP_SW
:

952 i‡(
pûœr
Ë
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
dút_pûœr
);

953 
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
ãr_bump_sw
);

955 
TER_BUMP_W
:

956 i‡(
pûœr
Ë
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
dút_pûœr
);

957 
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
ãr_bump_w
);

959 
TER_BUMP_E
:

960 i‡(
pûœr
Ë
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
dút_pûœr
);

961 
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
ãr_bump_e
);

963 
TER_BUMP_S
:

964 i‡(
pûœr
Ë
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
dút_pûœr
);

965 
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
-2,
ãr_bump_s
);

967 
TER_BUMP_N
:

968 i‡(
pûœr
Ë
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
dút_pûœr
);

969 
	`døwtûe
(
s¸x
+
rowx
,
s¸y
-
tûeheight
,
ãr_bump_n
);

974 i‡(
s¸x
+
rowx
<45 && s¸x+rowx+2*
XOFF
>45) {

975 i‡(
s¸y
-
tûeheight
<40 && s¸y+tûeheight+8>40Ë
˚¡îtûe
=
i
;

977 i‡(
i
==
∂ayîtûe
+
wadög
 && 
	`gëTûeTy≥
(i-wadögË!
TER_HUT
Ë{
	`døwhum™
(0); 
hdøwn
=
åue
;}

978 i‡(
i
==
∂ayîtûe
 && 
	`gëTûeTy≥
(iË!
TER_HUT
 && 
hdøwn
 =
Ál£
Ë
	`døwhum™
(0);

979 
uöt8_t
 
r
=0;r<(
gamñevñ
-1)*
WOLFMULT
;r++) {

980 i‡(
wîewﬁves
[
r
].
visibÀ
) {

981 i‡(
i
==
wîewﬁves
[
r
].
tûe
Ë
	`døwwﬁf
(r);

982 i‡(
wîewﬁves
[
r
].
tûe
 =
∂ayîtûe
) {

983 
ˇught
=
åue
;

987 i‡(
ˇught
) {

988 i‡(
	`x‹shi·8
()>0xFDË
	`døwToTûe
(
∂ayîtûe
,
•œâî
,
	`øndom
(3)-1,random(3)+1,random(1));

989 
hum™s
[0].
íîgy
--;

990 i‡(
hum™s
[0].
íîgy
<0Ë
game°©e
 = 
GAMEOVER
;

995 
	}
}

997 
DigôÆOut
 
±e°
(
EXT0
);

999 
	#TEST_PORT
 1

	)

1000 
	#TEST_PIN
 19

	)

1001 
	#CLR_TEST
 
LPC_GPIO_PORT
->
CLR
[
TEST_PORT
] = 1 << 
TEST_PIN
;

	)

1002 
	#SET_TEST
 
LPC_GPIO_PORT
->
SET
[
TEST_PORT
] = 1 << 
TEST_PIN
;

	)

1004 
	gs
=0;

1006 
	$maö
 () {

1007 
gb
.
sound
.
	`∂ayMusicSåóm
("music/pixonia.snd");

1009 
gb
.
	`begö
();

1010 
gb
.
di•œy
.
	`lﬂd565PÆëã
(
pokulous_∑l
);

1013 
gb
.
di•œy
.
	`˛ór
();

1014 
gb
.
di•œy
.
	`£tCﬁ‹Dïth
(4);

1015 
gb
.
di•œy
.
bgcﬁ‹
 = 13;

1016 
gb
.
di•œy
.
övisibÀcﬁ‹
 = 15;

1017 
gb
.
sound
.
	`ampE«bÀ
(
åue
);

1018 
gb
.
sound
.
	`∂ayMusicSåóm
();

1019 
uöt8_t
 
timeout
=0xFF;

1022 
co‹ds
 
¥ev
;

1023 
boﬁ
 
wÆkög
;

1024 
uöt8_t
 
√wtime
;

1025 
tgﬁd
=0;

1027 
gb
.
sound
.
	`∂ayMusicSåóm
();

1028 
gb
.
di•œy
.
bgcﬁ‹
 = 13;

1029 
gb
.
	`isRu¬ög
()) {

1030 i‡(
gb
.
	`upd©e
()) {

1031 i‡(
s
Ë{
SET_TEST
}

1032 {
CLR_TEST
}

1033 
s
=1-s;

1034 
game°©e
) {

1035 
TITLE
:

1036 !
gb
.
buâ⁄s
.
	`¥es£d
(
BTN_A
)&&gb.
	`isRu¬ög
()) {

1037 i‡(
gb
.
	`upd©e
()) {

1038 
gb
.
di•œy
.
	`døwBôm≠
(0,0,
pix⁄ü
);

1039 
gb
.
di•œy
.
	`£tF⁄t
(
f⁄tRu√s
);

1040 
gb
.
di•œy
.
cﬁ‹
=9;

1041 
gb
.
di•œy
.
bgcﬁ‹
 = gb.di•œy.
övisibÀcﬁ‹
;

1042 
gb
.
di•œy
.
	`£tCurs‹
(9,74);

1043 i‡(
timeout
>127Ë
gb
.
di•œy
.
	`¥öt
("Copyright 2017 PokittoÜtd");

1044 
gb
.
di•œy
.
	`¥öt
(" Press 'A'Åo Start");

1045 
timeout
-=2;

1046 
	`§™d
(
gb
.
	`gëTime
());

1049 
game°©e
 = 
NEXTLEVEL
;

1050 
	`öôw‹ld
();

1052 
NEXTLEVEL
:

1053 
gb
.
di•œy
.
	`£tCﬁ‹
(9,3);

1054 
timeout
 = 0xf;

1055 
timeout
--Ë
gb
.
	`upd©e
();

1056 !
gb
.
buâ⁄s
.
	`¥es£d
(
BTN_A
)&&gb.
	`isRu¬ög
()) {

1057 i‡(
gb
.
	`upd©e
()) {

1058 
gb
.
di•œy
.
	`£tF⁄t
(
f⁄tRu√s
);

1059 
gb
.
di•œy
.
	`£tCurs‹
(0,30);

1060 
gb
.
di•œy
.
	`¥öt
(" Level: ");

1061 
gb
.
di•œy
.
∑Àâe
[6]=65312;

1062 
gb
.
di•œy
.
	`£tCﬁ‹
(6,3);

1063 
gb
.
di•œy
.
	`¥öén
(
gamñevñ
);

1064 
gb
.
di•œy
.
	`£tCﬁ‹
(9,3);

1065 
gb
.
di•œy
.
	`¥öén
(" ");

1066 
gb
.
di•œy
.
	`¥öt
(" Find ");

1067 
gb
.
di•œy
.
	`£tCﬁ‹
(6,3);

1068 
gb
.
di•œy
.
	`¥öt
(
gamñevñ
*
GOLDMULT
);

1069 
gb
.
di•œy
.
	`£tCﬁ‹
(9,3);

1070 
gb
.
di•œy
.
	`¥öt
(" Gold");

1074 
game°©e
=
GAME
;

1076 
INTRO
:

1077 
gb
.
di•œy
.
	`£tCﬁ‹
(9,3);

1078 
timeout
 = 0xf;

1079 
timeout
--Ë
gb
.
	`upd©e
();

1080 !
gb
.
buâ⁄s
.
	`¥es£d
(
BTN_A
)&&gb.
	`isRu¬ög
()) {

1081 i‡(
gb
.
	`upd©e
()) {

1082 
gb
.
di•œy
.
	`£tF⁄t
(
f⁄tRu√s
);

1083 
gb
.
di•œy
.
	`£tCurs‹
(0,30);

1084 
gb
.
di•œy
.
	`¥öt
(" \"There's ");

1085 
gb
.
di•œy
.
∑Àâe
[6]=65312;

1086 
gb
.
di•œy
.
	`£tCﬁ‹
(6,3);

1087 
gb
.
di•œy
.
	`¥öén
("gold");

1088 
gb
.
di•œy
.
	`£tCﬁ‹
(9,3);

1089 
gb
.
di•œy
.
	`¥öén
(" onÅhe Islands");

1090 
gb
.
di•œy
.
	`¥öén
(" of Pixonia!\"");

1093 
game°©e
=
GAME
;

1095 
LEVELPASSED
:

1096 
gb
.
di•œy
.
	`£tCﬁ‹
(9,3);

1097 
timeout
 = 0xf;

1098 
timeout
--Ë
gb
.
	`upd©e
();

1099 !
gb
.
buâ⁄s
.
	`¥es£d
(
BTN_A
)&&gb.
	`isRu¬ög
()) {

1100 i‡(
gb
.
	`upd©e
()) {

1101 
gb
.
di•œy
.
	`£tF⁄t
(
f⁄tRu√s
);

1102 
gb
.
di•œy
.
	`£tCurs‹
(0,30);

1103 
gb
.
di•œy
.
	`¥öt
(" You made it! ");

1104 
gb
.
di•œy
.
∑Àâe
[6]=65312;

1105 
gb
.
di•œy
.
	`£tCﬁ‹
(6,3);

1107 
gb
.
di•œy
.
	`£tCﬁ‹
(9,3);

1108 
gb
.
di•œy
.
	`¥öén
(" ");

1109 
gb
.
di•œy
.
	`¥öt
(" Found ");

1110 
gb
.
di•œy
.
	`£tCﬁ‹
(6,3);

1111 
gb
.
di•œy
.
	`¥öt
(
gamñevñ
*
GOLDMULT
);

1112 
gb
.
di•œy
.
	`£tCﬁ‹
(9,3);

1113 
gb
.
di•œy
.
	`¥öt
(" Gold");

1117 
gamñevñ
++;

1118 
game°©e
=
NEXTLEVEL
;

1119 
	`öôw‹ld
();

1121 
GAME
:

1122 
wﬁve°ick
 = 1 - wolvestick;

1123 
w©îtick
 = 1 - watertick;

1124 
√wtime
 = 
timeofday
>>8;

1125 i‡(
ﬁdtime
 > 
√wtime
) oldtime=0;

1126 i‡(
ﬁdtime
 < 
√wtime
) {

1127 
ﬁdtime
 = 
√wtime
;

1128 i‡(
ﬁdtime
<127Ë
twìnÁ˘‹
 +=2;

1130 
twìnÁ˘‹
 -= 2;

1132 i‡(
ﬁdtime
>150) {

1133 
m⁄°îdøö
 =4;

1134 } 
m⁄°îdøö
 =1;

1135 i‡(
twìnÁ˘‹
>253)Åweenfactor =253;

1136 i‡(
twìnÁ˘‹
<2)Åweenfactor = 2;

1137 
gb
.
di•œy
.
	`twìnPÆëã
(gb.di•œy.
∑Àâe
,
pokulous_∑l
,
night_∑Àâe
,
twìnÁ˘‹
);

1138 i‡(
ﬁdtime
>
MONSTERMORNING
 && oldtime<
MONSTERNIGHT
 && 
	`x‹shi·16
()>0xFFFF-
WOLFPROB
) {

1139 
	`•awnWﬁf
();

1140 
gb
.
di•œy
.
∑Àâe
[6]=gb.display.palette[6]<<1;

1141 i‡(
	`x‹shi·8
()>0xff-
GLIMMERPROB
Ë
gb
.
di•œy
.
∑Àâe
[6]=65312;

1144 #i‚de‡
POK_SIM


1149 i‡(
focusög
Ë
	`focusOnTûe
(
focu°ûe
);

1150 
wÆkög
=
Ál£
;

1151 
¥ev
 = 
∂ayî
;

1152 
¥evtûe
 = 
∂ayîtûe
;

1153 
uöt8_t
 
öc
;

1154 i‡(
wadög
!=1Ë
öc
=
w©îtick
;

1155 
öc
=1;

1157 i‡(
ˇught
Ë
öc
=0;

1159 i‡(
gb
.
buâ⁄s
.
	`downBä
(Ë&& !gb.buâ⁄s.
	`aBä
()Ë{i‡(
∂ayî
.
x
 < (
w‹ldsize
-1)*
SUBDIVS
Ë∂ayî.x+=
öc
;
hum™s
[0].
™im‰ame
 = 1 - hum™s[0].™im‰ame;hum™s[0].
Ácög
 = 
SE
;}

1160 i‡(
gb
.
buâ⁄s
.
	`rightBä
(Ë&& !gb.buâ⁄s.
	`aBä
()Ë{i‡(
∂ayî
.
y
>0Ë∂ayî.y-=
öc
;
hum™s
[0].
™im‰ame
 = 1 - hum™s[0].™im‰ame;hum™s[0].
Ácög
 = 
NE
;}

1161 i‡(
gb
.
buâ⁄s
.
	`À·Bä
(Ë&& !gb.buâ⁄s.
	`aBä
()Ë{i‡(
∂ayî
.
y
 < (
w‹ldsize
-1)*
SUBDIVS
Ë∂ayî.y+=
öc
;
hum™s
[0].
™im‰ame
 = 1 - hum™s[0].™im‰ame;hum™s[0].
Ácög
 = 
SW
;}

1162 i‡(
gb
.
buâ⁄s
.
	`upBä
(Ë&& !gb.buâ⁄s.
	`aBä
()Ë{i‡(
∂ayî
.
x
>0Ë∂ayî.x-=
öc
; 
hum™s
[0].
™im‰ame
 = 1 - hum™s[0].™im‰ame; hum™s[0].
Ácög
 = 
NW
;}

1165 
co‹ds
 
t
;

1166 
t
 = 
	`w‹ldToS¸ìn
(
∂ayî
.
x
,∂ayî.
y
);

1167 i‡(!
focusög
) {

1168 
öt16_t
 
owx
=
wx
, 
owy
=
wy
;

1169 
uöt8_t
 
¶owî
=0;

1170 i‡(
t
.
x
>0 &&Å.x<110 &&Å.
y
>0 &&Å.y<88) {

1171 
¶owî
 = 4;

1174 i‡(
t
.
x
<40Ë{
wy
-=0;
wx
+=
XSPEED
>>
¶owî
;}

1175 i‡(
t
.
y
<40Ë{
wy
+=
YSPEED
>>
¶owî
;
wx
+=0;}

1176 i‡(
t
.
x
>70Ë{
wy
+=0;
wx
-=
XSPEED
>>
¶owî
;}

1177 i‡(
t
.
y
>50Ë{
wy
-=
YSPEED
>>
¶owî
;
wx
-=0;}

1178 i‡(
˚¡îtûe
 > 
w‹ldsize
*w‹ldsizeË{˚¡îtûe=
ﬁd˚¡î
; 
wx
=
owx
; 
wy
=
owy
;}

1180 
∂ayîtûe
 = 
	`w‹ldToTûe
(
∂ayî
.
x
,∂ayî.
y
);

1181 i‡(
	`gëTûeTy≥
(
∂ayîtûe
)==
TER_WATER
Ë
wadög
=-1;

1182 
wadög
 = 1;

1183 i‡(
∂ayîtûe
 !
¥evtûe
 && 
	`ˇnMoveTo
’œyîtûe)==
Ál£
) {

1184 
∂ayî
=
¥ev
;

1185 
∂ayîtûe

¥evtûe
;

1187 
ﬁd∂ayîcou¡
++;

1188 i‡(
ﬁd∂ayîcou¡
==6) {

1190 
ﬁd∂ayî
=
∂ayî
;

1191 
ﬁd∂ayîcou¡
=0;

1196 i‡(
gb
.
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

1197 
uöt16_t
 
tûe
 = 
	`gëFacögTûe
(
∂ayîtûe
, 
hum™s
[0].
Ácög
);

1198 
öt8_t
 
z
 = 
	`gëTûeHeight
(
tûe
);

1199 i‡(
z
==0Ë
	`£tTûeTy≥
(
tûe
,
TER_PLAIN
);

1200 
z
++;

1201 i‡(
z
>7) z=7;

1202 
	`£tTûeHeight
(
tûe
,
z
);

1203 
	`£tSl›eAutom©ic
(
tûe
);

1205 i‡(
gb
.
buâ⁄s
.
	`¥es£d
(
BTN_B
)) {

1206 
uöt16_t
 
t
 = 
	`gëFacögTûe
(
∂ayîtûe
, 
hum™s
[0].
Ácög
);

1207 
öt8_t
 
z
 = 
	`gëTûeHeight
(
t
);

1208 
uöt8_t
 
k
 = 
	`gëTûeTy≥
(
t
);

1210 i‡(
	`gëTûeTy≥
(
t
)!=
TER_HUT
Ë
z
--;

1211 i‡(
z
<0) z=0;

1213 i‡(
z
<
	`gëTûeHeight
(
∂ayîtûe
)-1 || z==0) {

1214 i‡(
k
==
TER_GOLD
) {

1215 
∂ayîgﬁds
++;

1216 i‡(
∂ayîgﬁds
==
gamñevñ
*
GOLDMULT
) {

1217 
game°©e
=
LEVELPASSED
;

1219 
	`•awnGﬁd
(
t
);

1221 i‡(
k
 < 5 || k > 12Ë
	`£tTûeTy≥
(
t
,
TER_PLAIN
);

1224 i‡(
z
==0Ë
	`£tTûeTy≥
(
t
,
TER_WATER
);

1225 
	`£tTûeHeight
(
t
,
z
);

1226 
	`£tSl›eAutom©ic
(
t
);

1229 
	`moveWﬁves
();

1230 
	`døww‹ld
(
wx
,
wy
);

1231 
ﬁd˚¡î
 = 
˚¡îtûe
;

1232 
gb
.
di•œy
.
	`døwBôm≠
(1,1,
gﬁd
);

1233 
gb
.
di•œy
.
	`£tCurs‹
(10,0);

1234 
gb
.
di•œy
.
	`£tCﬁ‹
(9,gb.di•œy.
övisibÀcﬁ‹
);

1235 
timeofday
 +
TIMEINCREMENT
;

1236 i‡(
öHut
Ë
timeofday
 +7*
TIMEINCREMENT
;

1237 
gb
.
di•œy
.
	`¥öt
(
∂ayîgﬁds
);

1238 
gb
.
di•œy
.
	`¥öt
("/");

1239 
gb
.
di•œy
.
	`¥öén
(
gamñevñ
*
GOLDMULT
);

1240 
gb
.
di•œy
.
bgcﬁ‹
 = 13;

1242 #ifde‡
DEBUG


1243 
gb
.
di•œy
.
bgcﬁ‹
 = 9;

1244 
gb
.
di•œy
.
	`¥öén
(
numwﬁves
);

1245 
gb
.
di•œy
.
	`¥öt
(
wîewﬁves
[0].
posôi⁄
.
x
);gb.di•œy.¥öt(",");gb.di•œy.
	`¥öén
(wîewﬁves[0].posôi⁄.
y
);

1246 
gb
.
di•œy
.
	`¥öt
(
wîewﬁves
[0].
tûe
);

1247 
wîewﬁves
[0].
ai
) {

1248 
HOMING
:

1249 
gb
.
di•œy
.
	`¥öén
("HOMING");;

1250 
CHASE
:

1251 
gb
.
di•œy
.
	`¥öén
("CHASE");;

1252 
INTERCEPT
:

1253 
gb
.
di•œy
.
	`¥öén
("ITERC");;

1254 
GOTO
:

1255 
gb
.
di•œy
.
	`¥öén
("GOTO");;

1256 
TURNCW
:

1257 
gb
.
di•œy
.
	`¥öén
("TURNCW");;

1260 
gb
.
di•œy
.
	`¥öt
(
∂ayî
.
x
);gb.di•œy.¥öt(",");gb.di•œy.
	`¥öén
’œyî.
y
);

1261 
gb
.
di•œy
.
	`¥öén
(
timeofday
>>8);

1264 
GAMEOVER
:

1266 
timeout
 = 0xf;

1267 
timeout
--Ë
gb
.
	`upd©e
();

1268 !
gb
.
buâ⁄s
.
	`¥es£d
(
BTN_A
)&&gb.
	`isRu¬ög
()) {

1269 i‡(
gb
.
	`upd©e
()) {

1270 
gb
.
di•œy
.
	`£tF⁄t
(
f⁄tRu√s
);

1271 
gb
.
di•œy
.
	`£tCurs‹
(0,20);

1272 
gb
.
di•œy
.
	`£tCﬁ‹
(14,0);

1273 
gb
.
di•œy
.
	`¥öén
(" GAME OVER ");gb.display.println("");

1274 
gb
.
di•œy
.
	`£tCﬁ‹
(9);

1275 
gb
.
di•œy
.
	`¥öén
(" Player gotÉaten ");

1276 
gb
.
di•œy
.
	`¥öén
(" byÅhe Beast! ");

1277 
gb
.
di•œy
.
	`¥öén
("");

1278 
gb
.
di•œy
.
	`£tCﬁ‹
(6);

1279 
gb
.
di•œy
.
∑Àâe
[6]=65312;

1280 
gb
.
di•œy
.
	`¥öt
(" Gold collected: ");

1281 
gb
.
di•œy
.
	`¥öt
((
uöt16_t
)(
∂ayîgﬁds
*100/(
gamñevñ
*
GOLDMULT
)));

1282 
gb
.
di•œy
.
	`¥öén
("%");

1286 
	`de•awnAŒWﬁves
();

1287 
wx
=-8,
wy
=0,
cx
=10,
cy
=10;

1288 
¥evtûe
=0, 
∂ayîtûe
=0, 
focu°ûe
=0, 
˚¡îtûe
=0,
ﬁd˚¡î
, 
twìn_∑Àâe
[16], 
gﬁds
=0, 
∂ayîgﬁds
=0;

1289 
timeofday
=0;

1290 
wadög
=1;

1291 
focusög
=
Ál£
;

1292 
öHut
 = 
Ál£
;

1293 
twìnÁ˘‹
=0,
numwﬁves
=0;

1294 
gamñevñ
=1;

1295 
	`öôw‹ld
();

1296 
game°©e
=
TITLE
;

1301 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\night_palette.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

20 c⁄° 
uöt16_t
 
	gpokulous_∑l
[] = {

42 c⁄° 
uöt16_t
 
	gnight_∑Àâe_‹ig
[] = {

46 c⁄° 
uöt16_t
 
	gnight_∑Àâe
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\pixelman_nw_1.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gpixñm™_nw_1_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gpixñm™_nw_1
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\pixelman_nw_2.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gpixñm™_nw_2_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gpixñm™_nw_2
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\pixelman_se_1.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gpixñm™_£_1_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gpixñm™_£_1
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\pixelman_se_2.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gpixñm™_£_2_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gpixñm™_£_2
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\pixonia.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gpix⁄ü_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gpix⁄ü
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\splatter.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt8_t
 
	g•œâî
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_beach_se.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gãr_bóch_£_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gãr_bóch_£
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_beach_sw.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gãr_bóch_sw_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gãr_bóch_sw
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_bump_e.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gãr_bump_e_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gãr_bump_e
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_bump_n.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gãr_bump_n_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gãr_bump_n
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_bump_ne.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gãr_bump_√_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gãr_bump_√
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_bump_nw.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gãr_bump_nw_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gãr_bump_nw
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_bump_s.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gãr_bump_s_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gãr_bump_s
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_bump_se.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gãr_bump_£_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gãr_bump_£
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_bump_sw.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gãr_bump_sw_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gãr_bump_sw
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_bump_w.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gãr_bump_w_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gãr_bump_w
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_earth.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gãr_óπh_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gãr_óπh
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_gold.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gãr_gﬁd_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gãr_gﬁd
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_grain.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gãr_gøö_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gãr_gøö
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_hut.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

11 c⁄° 
uöt16_t
 
	gãr_hut_∑l
[] = {

15 c⁄° 
uöt8_t
 
	gãr_hut
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_plain.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gãr_∂aö_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gãr_∂aö
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_stone.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gãr_°⁄e_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gãr_°⁄e
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_tree.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gãr_åì_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gãr_åì
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_water1.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gãr_w©î1_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gãr_w©î1
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_water2.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gãr_w©î2_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gãr_w©î2
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\theresgold.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gthîesgﬁd_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gthîesgﬁd
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\werewolf_nw_1.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gwîewﬁf_nw_1_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gwîewﬁf_nw_1
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\werewolf_nw_2.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gwîewﬁf_nw_2_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gwîewﬁf_nw_2
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\werewolf_se_1.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gwîewﬁf_£_1_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gwîewﬁf_£_1
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\werewolf_se_2.cpp

7 
	~<°döt.h
>

8 
	~"Pix⁄ü.h
"

10 c⁄° 
uöt16_t
 
	gwîewﬁf_£_2_∑l
[] = {

14 c⁄° 
uöt8_t
 
	gwîewﬁf_£_2
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pokittris\My_settings.h

12 #i‚de‡
MY_SETTINGS_H


13 
	#MY_SETTINGS_H


	)

15 
	#PROJ_HIRES
 1

16 
	#PROJ_ENABLE_SOUND
 1

17 
	#PROJ_STREAMING_MUSIC
 1

18 
	#PROJ_AUD_FREQ
 11025

	)

19 
	#PROJ_STREAM_TO_DAC
 1

20 
	#PROJ_GBSOUND
 0

21 
	#PROJ_ENABLE_SYNTH
 0

22 
	#PROJ_GAMEBUINO
 0

23 
	#PROJ_USE_PWM
 0

24 

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pokittris\easing.h

4 
	$ó£InQuad
(
t
, 
b
, 
c
, 
d
) {

5  
c
*(
t
/=
d
)*à+ 
b
;

6 
	}
}

7 
	$ó£OutQuad
(
t
, 
b
, 
c
, 
d
) {

8  -
c
 *(
t
/=
d
)*—-2Ë+ 
b
;

9 
	}
}

10 
	$ó£InOutQuad
(
t
, 
b
, 
c
, 
d
) {

11 i‡((
t
/=
d
/2Ë< 1Ë 
c
/2*t*à+ 
b
;

12  -
c
/2 * ((--
t
)*—-2Ë- 1Ë+ 
b
;

13 
	}
}

14 
	$ó£InCubic
(
t
, 
b
, 
c
, 
d
) {

15  
c
*(
t
/=
d
)*t*à+ 
b
;

16 
	}
}

17 
	$ó£OutCubic
(
t
, 
b
, 
c
, 
d
) {

18  
c
*((
t
Ò/
d
-1)*t*à+ 1Ë+ 
b
;

19 
	}
}

20 
	$ó£InOutCubic
(
t
, 
b
, 
c
, 
d
) {

21 i‡((
t
/=
d
/2Ë< 1Ë 
c
/2*t*t*à+ 
b
;

22  
c
/2*((
t
-=2)*t*à+ 2Ë+ 
b
;

23 
	}
}

24 
	$ó£InQu¨t
(
t
, 
b
, 
c
, 
d
) {

25  
c
*(
t
/=
d
)*t*t*à+ 
b
;

26 
	}
}

27 
	$ó£OutQu¨t
(
t
, 
b
, 
c
, 
d
) {

28  -
c
 * ((
t
Ò/
d
-1)*t*t*à- 1Ë+ 
b
;

29 
	}
}

30 
	$ó£InOutQu¨t
(
t
, 
b
, 
c
, 
d
) {

31 i‡((
t
/=
d
/2Ë< 1Ë 
c
/2*t*t*t*à+ 
b
;

32  -
c
/2 * ((
t
-=2)*t*t*à- 2Ë+ 
b
;

33 
	}
}

34 
	$ó£InQuöt
(
t
, 
b
, 
c
, 
d
) {

35  
c
*(
t
/=
d
)*t*t*t*à+ 
b
;

36 
	}
}

37 
	$ó£OutQuöt
(
t
, 
b
, 
c
, 
d
) {

38  
c
*((
t
Ò/
d
-1)*t*t*t*à+ 1Ë+ 
b
;

39 
	}
}

40 
	$ó£InOutQuöt
(
t
, 
b
, 
c
, 
d
) {

41 i‡((
t
/=
d
/2Ë< 1Ë 
c
/2*t*t*t*t*à+ 
b
;

42  
c
/2*((
t
-=2)*t*t*t*à+ 2Ë+ 
b
;

43 
	}
}

44 
	$ó£InSöe
(
t
, 
b
, 
c
, 
d
) {

45  -
c
 * 
	`cos
(
t
/
d
 * (
PI
/2)Ë+ c + 
b
;

46 
	}
}

47 
	$ó£OutSöe
(
t
, 
b
, 
c
, 
d
) {

48  
c
 * 
	`sö
(
t
/
d
 * (
PI
/2)Ë+ 
b
;

49 
	}
}

50 
	$ó£InOutSöe
(
t
, 
b
, 
c
, 
d
) {

51  -
c
/2 * (
	`cos
(
PI
*
t
/
d
Ë- 1Ë+ 
b
;

52 
	}
}

53 
	$ó£InExpo
(
t
, 
b
, 
c
, 
d
) {

54  (
t
==0Ë? 
b
 : 
c
 * 
	`pow
(2, 10 * (t/
d
 - 1)) + b;

55 
	}
}

56 
	$ó£OutExpo
(
t
, 
b
, 
c
, 
d
) {

57  (
t
==
d
Ë? 
b
+
c
 : c * (-
	`pow
(2, -10 *Å/d) + 1) + b;

58 
	}
}

59 
	$ó£InOutExpo
(
t
, 
b
, 
c
, 
d
) {

60 i‡(
t
==0Ë 
b
;

61 i‡(
t
==
d
Ë 
b
+
c
;

62 i‡((
t
/=
d
/2Ë< 1Ë 
c
/2 * 
	`pow
(2, 10 * (à- 1)Ë+ 
b
;

63  
c
/2 * (-
	`pow
(2, -10 * --
t
Ë+ 2Ë+ 
b
;

64 
	}
}

65 
	$ó£InCúc
(
t
, 
b
, 
c
, 
d
) {

66  -
c
 * (
	`sqπ
(1 - (
t
/=
d
)*tË- 1Ë+ 
b
;

67 
	}
}

68 
	$ó£OutCúc
(
t
, 
b
, 
c
, 
d
) {

69  
c
 * 
	`sqπ
(1 - (
t
Ò/
d
-1)*tË+ 
b
;

70 
	}
}

71 
	$ó£InOutCúc
(
t
, 
b
, 
c
, 
d
) {

72 i‡((
t
/=
d
/2Ë< 1Ë -
c
/2 * (
	`sqπ
(1 -Å*tË- 1Ë+ 
b
;

73  
c
/2 * (
	`sqπ
(1 - (
t
-=2)*tË+ 1Ë+ 
b
;

74 
	}
}

75 
	$ó£InEœ°ic
(
t
, 
b
, 
c
, 
d
) {

76 
s
=1.70158;
p
=0; 
a
=
c
;

77 i‡(
t
==0Ë 
b
; i‡(—/=
d
)==1Ë b+
c
; i‡(!
p
)Ö=d*.3;

78 i‡(
a
 < 
	`abs
(()
c
)Ë{á=c; 
s
=
p
/4; }

79 
s
 = 
p
/(2*
PI
Ë* 
	`asö
 (
c
/
a
);

80  -(
a
*
	`pow
(2,10*(
t
-=1)Ë* 
	`sö
–—*
d
-
s
)*(2*
PI
)/
p
 )Ë+ 
b
;

81 
	}
}

82 
	$ó£OutEœ°ic
(
t
, 
b
, 
c
, 
d
) {

83 
s
=1.70158;
p
=0;
a
=
c
;

84 i‡(
t
==0Ë 
b
; i‡(—/=
d
)==1Ë b+
c
; i‡(!
p
)Ö=d*.3;

85 i‡(
a
 < 
	`abs
(()
c
)Ë{á=c; 
s
=
p
/4; }

86 
s
 = 
p
/(2*
PI
Ë* 
	`asö
 (
c
/
a
);

87  
a
*
	`pow
(2,-10*
t
Ë* 
	`sö
–—*
d
-
s
)*(2*
PI
)/
p
 ) + 
c
 + 
b
;

88 
	}
}

89 
	$ó£InOutEœ°ic
(
t
, 
b
, 
c
, 
d
) {

90 
s
=1.70158;
p
=0;
a
=
c
;

91 i‡(
t
==0Ë 
b
; i‡(—/=
d
/2)==2Ë b+
c
; i‡(!
p
)Ö=d*(.3*1.5);

92 i‡(
a
 < 
	`abs
(()
c
)Ë{á=c; 
s
=
p
/4; }

93 
s
 = 
p
/(2*
PI
Ë* 
	`asö
 (
c
/
a
);

94 i‡(
t
 < 1Ë -.5*(
a
*
	`pow
(2,10*—-=1)Ë* 
	`sö
–—*
d
-
s
)*(2*
PI
)/
p
 )Ë+ 
b
;

95  
a
*
	`pow
(2,-10*(
t
-=1)Ë* 
	`sö
–—*
d
-
s
)*(2*
PI
)/
p
 )*.5 + 
c
 + 
b
;

96 
	}
}

97 
	$ó£InBack
(
t
, 
b
, 
c
, 
d
) {

98 
s
 = 1.70158;

99  
c
*(
t
/=
d
)*t*((
s
+1)*à- sË+ 
b
;

100 
	}
}

101 
	$ó£OutBack
(
t
, 
b
, 
c
, 
d
) {

102 
s
 = 1.70158;

103  
c
*((
t
Ò/
d
-1)*t*((
s
+1)*à+ sË+ 1Ë+ 
b
;

104 
	}
}

105 
	$ó£InOutBack
(
t
, 
b
, 
c
, 
d
) {

106 
s
 = 1.70158;

107 i‡((
t
/=
d
/2Ë< 1Ë 
c
/2*—*t*(((
s
*=(1.525))+1)*à- s)Ë+ 
b
;

108  
c
/2*((
t
-=2)*t*(((
s
*=(1.525))+1)*à+ sË+ 2Ë+ 
b
;

109 
	}
}

111 
	$ó£OutBoun˚
(
t
, 
b
, 
c
, 
d
) {

112 i‡((
t
/=
d
) < (1/2.75)) {

113  
c
*(7.5625*
t
*tË+ 
b
;

114 } i‡(
t
 < (2/2.75)) {

115  
c
*(7.5625*(
t
-=(1.5/2.75))*à+ .75Ë+ 
b
;

116 } i‡(
t
 < (2.5/2.75)) {

117  
c
*(7.5625*(
t
-=(2.25/2.75))*à+ .9375Ë+ 
b
;

119  
c
*(7.5625*(
t
-=(2.625/2.75))*à+ .984375Ë+ 
b
;

121 
	}
}

122 
	$ó£InBoun˚
(
t
, 
b
, 
c
, 
d
) {

123  
c
 - 
	`ó£OutBoun˚
 (
d
-
t
, 0, c, dË+ 
b
;

124 
	}
}

125 
	$ó£InOutBoun˚
(
t
, 
b
, 
c
, 
d
) {

126 i‡(
t
 < 
d
/2Ë 
	`ó£InBoun˚
 (t*2, 0, 
c
, dË* .5 + 
b
;

127  
	`ó£OutBoun˚
 (
t
*2-
d
, 0, 
c
, dË* .5 + c*.5 + 
b
;

128 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pokittris\tetris.cpp

3 
	~"pokôto.h
"

4 
	~"ãåis_gfx.h
"

5 
	~"ósög.h
"

7 
	#REPSPEED
 12

	)

9 
	gPokôto
::
C‹e
 
game
;

11 
	#HELD
 0

	)

12 
	#NEW
 1

	)

13 
	#RELEASE
 2

	)

14 
byã
 
	gCom∂ëePad
, 
	gExPad
, 
	gTempPad
, 
	gmyPad
;

15 
boﬁ
 
	g_A
[3], 
	g_B
[3], 
	g_C
[3], 
	g_Up
[3], 
	g_Down
[3], 
	g_Le·
[3], 
	g_Right
[3];

16 
boﬁ
 
	gbgNum
 = 1;

17 
	gmusicName
[] = "music/ozzed.snd";

18 
byã
 
	g∑lNum
 = 0;

20 
	gt›Löe
;

21 
byã
 
	gu∆ockedPÆ
=0;

22 
boﬁ
 
	gªmoveLöe
[19];

23 
byã
 
	glöesToRemove
=0;

24 
byã
 
	g™imCou¡
;

25 
boﬁ
 
	g•lodeOK
=0;

26 
byã
 
	g™imS∂ode
=0;

28 
	$UPDATEPAD
(
∑d
, 
v¨
) {

29 
_C
[
∑d
] = (
v¨
 >> 1)&1;

30 
_B
[
∑d
] = (
v¨
 >> 2)&1;

31 
_A
[
∑d
] = (
v¨
 >> 3)&1;

32 
_Down
[
∑d
] = (
v¨
 >> 4)&1;

33 
_Le·
[
∑d
] = (
v¨
 >> 5)&1;

34 
_Right
[
∑d
] = (
v¨
 >> 6)&1;

35 
_Up
[
∑d
] = (
v¨
 >> 7)&1;

36 
	}
}

38 
	$Upd©ePad
(
joy_code
){

39 
ExPad
 = 
Com∂ëePad
;

40 
Com∂ëePad
 = 
joy_code
;

41 
	`UPDATEPAD
(
HELD
, 
Com∂ëePad
);

42 
	`UPDATEPAD
(
RELEASE
, (
ExPad
 & (~
Com∂ëePad
)));

43 
	`UPDATEPAD
(
NEW
, (
Com∂ëePad
 & (~
ExPad
)));

44 
	}
}

46 
byã
 
	$upd©eBuâ⁄s
(
byã
 
v¨
){

47 
v¨
 = 0;

48 i‡(
game
.
buâ⁄s
.
	`cBä
()Ë
v¨
 |= (1<<1);

49 i‡(
game
.
buâ⁄s
.
	`bBä
()Ë
v¨
 |= (1<<2);

50 i‡(
game
.
buâ⁄s
.
	`aBä
()Ë
v¨
 |= (1<<3);

51 i‡(
game
.
buâ⁄s
.
	`downBä
()Ë
v¨
 |= (1<<4);

52 i‡(
game
.
buâ⁄s
.
	`À·Bä
()Ë
v¨
 |= (1<<5);

53 i‡(
game
.
buâ⁄s
.
	`rightBä
()Ë
v¨
 |= (1<<6);

54 i‡(
game
.
buâ⁄s
.
	`upBä
()Ë
v¨
 |= (1<<7);

56  
v¨
;

57 
	}
}

62 
	g‰ameNumbî
 = 0;

63 
	gmyDñay
;

64 
	gãmpTime
;

65 
	gdr›Time
 = 0;

66 
	g¶ideTime
 = 0;

67 
byã
 
	ggameMode
 = 0;

68 
boﬁ
 
	g∑u£d
 = 0;

69 
byã
 
	gmíuIãm
;

70 
boﬁ
 
	gbgmusic
 = 1;

72 
byã
 
	gpx
, 
	gpy
, 
	gps
, 
	g¥
;

73 
byã
 
	g√xtTûe
;

74 
byã
 
	glöeCou¡
, 
	gÀvñ
;

75 
	gsc‹e
, 
	glöes
;

76 
boﬁ
 
	gokToC⁄töue
 = 0;

77 
byã
 
	g¶ideS≥ed
 = 10;

80 
	$lﬂdPÆ
(
num
){

81 
curPÆ
[4];

82 
curPÆ
[0] = 
∑Œë
[(
num
*4)];

83 
curPÆ
[1] = 
∑Œë
[(
num
*4)+1];

84 
curPÆ
[2] = 
∑Œë
[(
num
*4)+2];

85 
curPÆ
[3] = 
∑Œë
[(
num
*4)+3];

86 
game
.
di•œy
.
	`lﬂd565PÆëã
(
curPÆ
);

87 
	}
}

89 
	$døwSh≠e
(
byã
 
x1
, sig√d 
y1
, byã 
sh≠e
, byã 
‰ame
) {

90 
y
 = 0; y < 4; y++) {

91 i‡(
y1
 + 
y
 > 1) {

92 
x
 = 0; x < 4; x++) {

93 
byã
 
mt
 = 
	`pgm_ªad_byã
(
sh≠eM≠
 + (
x
 + 4 * 
y
Ë+ 
sh≠e
 * 64 + (
‰ame
 * 16));

94 i‡(
mt
 > 1) {

95 
game
.
di•œy
.
	`døwBôm≠
((
x1
 + 
x
)*8, (
y1
 + 
y
)*8, 
tûe_gfx
[(
mt
-1)+
sh≠e
*6]);

100 
	}
}

102 
boﬁ
 
	$check
(sig√d 
x1
, sig√d 
y1
, 
rŸ
) {

103 
byã
 
ªt
=0;

104 
y
 = 0; y < 4; y++) {

105 i‡(
y1
 + 
y
 >= 0) {

106 
x
 = 0; x < 4; x++) {

107 
byã
 
mt
 = 
	`pgm_ªad_byã
(
sh≠eM≠
 + (
x
 + 4 * 
y
Ë+ 
ps
 * 64 + (
rŸ
 * 16));

108 i‡(
mt
 > 1) {

109 i‡–
∂ayfõld
[(
x1
 + 
x
Ë+ 16 * (
y1
 + 
y
)] != 0) {

110 
ªt
= 1;

116  
ªt
;

117 
	}
}

119 
	$°amp
(sig√d 
x1
, sig√d 
y1
, 
byã
 
sh≠e
, byã 
rŸ
) {

120 
y
 = 0; y < 4; y++) {

121 i‡(
y1
 + 
y
 >= 0) {

122 
x
 = 0; x < 4; x++) {

123 
byã
 
mt
 = 
	`pgm_ªad_byã
(
sh≠eM≠
 + (
x
 + 4 * 
y
Ë+ 
sh≠e
 * 64 + (
rŸ
 * 16));

124 i‡(
mt
 > 1) {

125 
∂ayfõld
[(
x1
 + 
x
Ë+ 16 * (
y1
 + 
y
)] = (
mt
-1)+
sh≠e
*6;

130 
	}
}

133 
	$˛órPœyfõld
() {

134 
y
 = 0; y < 19; y++) {

135 
x
 = 3; x < 13; x++) {

136 
∂ayfõld
[
x
 + 16 * 
y
] = 0;

139 
	}
}

141 
	$døwBackground
(){

142 
y
 = 0; y < 22; y++) {

143 
x
 = 0; x < 28; x++) {

144 
byã
 
mt
 = 
bg_m≠
[
x
 + 28 * 
y
 + (616*
bgNum
)];

145 
game
.
di•œy
.
	`døwBôm≠
(
x
*8, 
y
*8, 
bg_gfx
[
mt
]);

148 
	}
}

150 
	$døwPœyfõld
() {

151 
	`døwBackground
();

153 
y
 = 1; y < 19; y++) {

154 
x
 = 3; x < 13; x++) {

155 
byã
 
mt
 = 
∂ayfõld
[
x
 + 16 * 
y
];

156 
game
.
di•œy
.
	`døwBôm≠
((
x
 + 5)*8, (
y
+1 )*8, 
tûe_gfx
[
mt
]);

160 if(
™imS∂ode
==0){

162 
	`døwSh≠e
(
px
+5, 
py
+1, 
ps
, 
¥
);

165 
	`døwSh≠e
(19, 14, 
√xtTûe
, 0);

167 
ãxt
[] = " ";

168 
	`•rötf
(
ãxt
, "%05d", 
sc‹e
);

169 
game
.
di•œy
.
	`£tCurs‹
(152,56);

170 
game
.
di•œy
.
cﬁ‹
=3;

171 
game
.
di•œy
.
	`¥öt
(
ãxt
);

172 
	`•rötf
(
ãxt
, "%5d", 
Àvñ
);

173 
game
.
di•œy
.
	`£tCurs‹
(16,96);

174 
game
.
di•œy
.
	`¥öt
(
ãxt
);

175 
	`•rötf
(
ãxt
, "%5d", 
löes
);

176 
game
.
di•œy
.
	`£tCurs‹
(16,48);

177 
game
.
di•œy
.
	`¥öt
(
ãxt
);

179 
	}
}

183 
	$checkLöe
() {

185 
t
=0;Å<19;Å++){

186 
ªmoveLöe
[
t
]=0;

189 i‡(
py
 <= 0) {

190 
	`lﬂdPÆ
(1);

191 
gameMode
 = 3;

192 
‰ameNumbî
=0;

196 
sc‹e
++;

197 
t›Löe
 = 0;

199 
y
 = 0; y < 19; y++) {

200 
löe
 = 0;

201 
x
 = 3; x < 13; x++) {

202 
löe
 +
∂ayfõld
[
x
 + 16 * 
y
] != 0 ? 1 : 0;

204 i‡(
löe
 == 10) {

205 
ªmoveLöe
[
y
]=1;

206 
löesToRemove
++;

207 if(
löesToRemove
==4){
•lodeOK
=1;}

208 
löeCou¡
++;

209 i‡(
löeCou¡
 == 10) {

210 
löeCou¡
 = 0;

211 
Àvñ
++;

213 
löes
++;

214 
sc‹e
 += 10;

218 
y
 = 0; y < 10; y++) {

219 
löe
 = 0;

220 
x
 = 3; x < 13; x++) {

221 
t›Löe
 +
∂ayfõld
[
x
 + 16 * 
y
] != 0 ? 1 : 0;

228 
≥r˚¡
 = 100;

229 
diff
 = 
t›Löe
;

231 *
p
;

232 
∑lNum
 = 0;

233 
p
=
∑Œë
+(
∑lNum
*4);

234 
curPÆ
[4];

236 
curPÆ
[0] = 
∑Œë
[(
∑lNum
*4)];

237 
curPÆ
[1] = 
∑Œë
[(
∑lNum
*4)+1];

238 
curPÆ
[2] = 
∑Œë
[(
∑lNum
*4)+2];

239 
curPÆ
[3] = 
∑Œë
[(
∑lNum
*4)+3];

241 
gªyPÆ
[] = {0xF800,0xF8000,0xF800,0xF800};

243 
ªd
[4], 
gªí
[4], 
blue
[4], 
ªd1
[4], 
gªí1
[4], 
blue1
[4], 
ªd2
[4], 
gªí2
[4], 
blue2
[4];

245 
t
=0;Å<4;Å++){

246 
ªd1
[
t
] = (
curPÆ
[t]>>11) & 31;

247 
ªd2
[
t
] = (
gªyPÆ
[t]>> 11) & 31;

248 
gªí1
[
t
] = (
curPÆ
[t]>> 5) & 63;

249 
gªí2
[
t
] = (
gªyPÆ
[t]>> 5) & 63;

250 
blue1
[
t
] = 
curPÆ
[t] & 31;

251 
blue2
[
t
] = 
gªyPÆ
[t] & 31;

253 
ªd
[
t
] = 
ªd1
[t]+((
ªd2
[t]-ªd1[t])*
diff
/
≥r˚¡
);

254 
gªí
[
t
] = 
gªí1
[t]+((
gªí2
[t]-gªí1[t])*
diff
/
≥r˚¡
);

255 
blue
[
t
] = 
blue1
[t]+((
blue2
[t]-blue1[t])*
diff
/
≥r˚¡
);

257 
curPÆ
[
t
] = (
ªd
[t]<<11)+(
gªí
[t]<<5)+
blue
[t];

261 
game
.
di•œy
.
	`lﬂd565PÆëã
(
curPÆ
);

263 
	}
}

267 
	$døwMyBôm≠
(
öt16_t
 
x
, i¡16_à
y
, c⁄° 
uöt8_t
* 
bôm≠
, c⁄° uöt8_t* 
mask
)

269 
öt16_t
 
w
 = *
bôm≠
;

270 
öt16_t
 
h
 = *(
bôm≠
 + 1);

271 
bôm≠
 = bitmap + 2;

273 i‡(
y
<-
h
 || y>
game
.
di•œy
.
height
) ;

274 i‡(
x
<-
w
 || x>
game
.
di•œy
.
width
) ;

277 
öt16_t
 
i
, 
j
, 
byãNum
, 
bôNum
, 
byãWidth
 = 
w
 >> 2;

278 
i
 = 0; i < 
w
; i++) {

279 
byãNum
 = 
i
 / 4;

280 
bôNum
 = (
i
 % 4)<<1;

281 
j
 = 0; j < 
h
; j++) {

282 
uöt8_t
 
sour˚
 = *(
bôm≠
 + 
j
 * 
byãWidth
 + 
byãNum
);

283 
uöt8_t
 
sour˚2
 = *(
mask
 + 
j
 * 
byãWidth
 + 
byãNum
+2);

284 
uöt8_t
 
ouçut
 = (
sour˚
 & (0xC0 >> 
bôNum
));

285 
ouçut
 >>(6-
bôNum
);

287 
uöt8_t
 
ouçut2
 = (
sour˚2
 & (0xC0 >> 
bôNum
));

288 
ouçut2
 >>(6-
bôNum
);

290 i‡(
ouçut2
 != 0) {

291 
game
.
di•œy
.
	`£tCﬁ‹
(
ouçut
);

292 
game
.
di•œy
.
	`døwPixñ
(
x
 + 
i
, 
y
 + 
j
);

298 
	}
}

302 
	$tôÀS¸ìn
(){

305 
y
 = 0; y < 22; y++) {

306 
x
 = 0; x < 28; x++) {

307 
byã
 
mt
 = 
bg_m≠
[
x
 + 28 * 
y
];

308 
game
.
di•œy
.
	`døwBôm≠
(
x
*8, 
y
*8, 
bg_gfx
[
mt
]);

312 
y
=48;

313 if(
‰ameNumbî
<=64){

315 #ifde‡
POK_SIM


316 
y
 = 
	`ó£OutBoun˚
(
‰ameNumbî
, -48, 48+48, 64);

318 
y
 = 
	`ó£OutBoun˚
(
‰ameNumbî
*4, -48, 48+48, 64);

319 i‡(
y
>48) y=48;

322 
	`døwMyBôm≠
(16, 
y
, 
tôÀ_bôm≠
, 
tôÀ_mask
);

325 
ãxt
[] = " Press AÅo Start ";

326 
game
.
di•œy
.
	`£tCurs‹
(40,120);

327 
game
.
di•œy
.
cﬁ‹
=3;

328 
game
.
di•œy
.
	`¥öt
(
ãxt
);

330 if(
_A
[
NEW
]){

332 
y
 = 18; y > 0; y--) {

333 
x
 = 3; x < 13; x++) {

334 
∂ayfõld
[
x
 + 16 * 
y
] = 0;

338 
	`lﬂdPÆ
(0);

339 
gameMode
 = 1;

342 
	}
}

344 
	$gameOvî
(){

346 
y
 = 0; y < 22; y++) {

347 
x
 = 0; x < 28; x++) {

348 
byã
 
mt
 = 
bg_m≠
[
x
 + 28 * 
y
];

349 
game
.
di•œy
.
	`døwBôm≠
(
x
*8, 
y
*8, 
bg_gfx
[
mt
]);

353 
y
=48;

354 if(
‰ameNumbî
<=64){

356 
y
 = 
	`ó£OutBoun˚
(
‰ameNumbî
, -48, 48+48, 64);

358 
	`døwMyBôm≠
(1, 
y
, 
gameovî_bôm≠
, 
gameovî_mask
);

360 
ãxt
[] = " Press A ";

361 
game
.
di•œy
.
	`£tCurs‹
(62,120);

362 
game
.
di•œy
.
cﬁ‹
=3;

363 
game
.
di•œy
.
	`¥öt
(
ãxt
);

365 if(
_A
[
NEW
]){

366 
gameMode
 = 0;

367 
‰ameNumbî
 = 0;

368 
sc‹e
=0;

369 
löes
=0;

370 
Àvñ
=0;

371 
•lodeOK
=0;

372 
™imS∂ode
=0;

375 
	}
}

377 
	$∂ayGame
(){

378 #ifde‡
POK_SIM


379 
	#SLIDECOUNT
 6

	)

380 
	#DROPCOUNT
 20

	)

382 
	#SLIDECOUNT
 1

	)

383 
	#DROPCOUNT
 2

	)

386 if(
löesToRemove
==0 && 
™imS∂ode
==0){

388 i‡(
_Le·
[
NEW
]) {

389 i‡(
	`check
(
px
 - 1, 
py
, 
¥
) == 0) {

390 
px
--;

391 
¶ideTime
 = 0;

394 i‡(
_Right
[
NEW
]) {

395 i‡(
	`check
(
px
 + 1, 
py
, 
¥
) == 0) {

396 
px
++;

397 
¶ideTime
 = 0;

400 i‡(
_Le·
[
HELD
] && 
¶ideTime
++ > 
SLIDECOUNT
) {

401 i‡(
	`check
(
px
 - 1, 
py
, 
¥
) == 0) {

402 
px
--;

403 
¶ideTime
 = 12;

406 i‡(
_Right
[
HELD
] && 
¶ideTime
++ > 
SLIDECOUNT
) {

407 i‡(
	`check
(
px
 + 1, 
py
, 
¥
) == 0) {

408 
px
++;

409 
¶ideTime
 = 12;

413 i‡((
_Down
[
HELD
]Ë|| (
dr›Time
++ > 
DROPCOUNT
 - (
Àvñ
 * 2))) {

414 
dr›Time
 = 0;

415 i‡(
	`check
(
px
, 
py
+1, 
¥
) == 0) {

416 
py
++;

419 
	`°amp
(
px
, 
py
, 
ps
, 
¥
);

420 
	`checkLöe
();

421 
py
 = 0; 
px
 = 6; 
ps
 = 
√xtTûe
;ÇextTûê
	`øndom
(6); 
¥
 = 0;

424 i‡(
_Up
[
NEW
] && 
•lodeOK
==1) {

425 
•lodeOK
=0;

426 
™imS∂ode
=1;

429 i‡(
_A
[
NEW
]) {

430 i‡(
	`check
(
px
, 
py
, (
¥
 - 1) & 3) == 0) {

431 
¥
--;

432 } i‡(
	`check
(
px
 - 1, 
py
, (
¥
 - 1) & 3) == 0) {

433 
¥
--; 
px
--;

434 } i‡(
	`check
(
px
 + 1, 
py
, (
¥
 - 1) & 3) == 0) {

435 
¥
--; 
px
++;

436 } i‡(
	`check
(
px
 - 2, 
py
, (
¥
 - 1) & 3) == 0) {

437 
¥
--; 
px
 -= 2;

438 } i‡(
	`check
(
px
 + 2, 
py
, (
¥
 - 1) & 3) == 0) {

439 
¥
--; 
px
 += 2;

441 
¥
 &= 3;

444 i‡(
_B
[
NEW
]) {

445 i‡(
	`check
(
px
, 
py
, (
¥
 + 1) & 3) == 0) {

446 
¥
++;

447 } i‡(
	`check
(
px
 - 1, 
py
, (
¥
 + 1) & 3) == 0) {

448 
¥
++; 
px
--;

449 } i‡(
	`check
(
px
 + 1, 
py
, (
¥
 + 1) & 3) == 0) {

450 
¥
++; 
px
++;

451 } i‡(
	`check
(
px
 - 2, 
py
, (
¥
 + 1) & 3) == 0) {

452 
¥
++; 
px
 -= 2;

453 } i‡(
	`check
(
px
 + 2, 
py
, (
¥
 + 1) & 3) == 0) {

454 
¥
++; 
px
 += 2;

456 
¥
 &= 3;

459 
™imCou¡
=0;

462 if(
löesToRemove
!=0){

464 
byã
 
t
=0;Å<19;Å++){

465 if(
ªmoveLöe
[
t
]==1){

466 if(
™imCou¡
<5){

467 
x
 = 3; x < 13; x++) {

468 
∂ayfõld
[
x
 + 16 * 
t
] = 5+
™imCou¡
*6;

471 
ªmoveLöe
[
t
]=0;

472 
löesToRemove
--;

473 
y1
 = 
t
; y1 > 0; y1--) {

474 
x
 = 3; x < 13; x++) {

475 
∂ayfõld
[
x
 + 16 * 
y1
] =Ölayfield[x + 16 * (y1 - 1)];

481 
™imCou¡
++;

484 if(
™imS∂ode
!=0){

486 if(
™imS∂ode
<6){

487 
y
 = 0; y < 4; y++) {

488 i‡(
py
 + 
y
 >= 0) {

489 
x
 = 0; x < 4; x++) {

490 
byã
 
mt
 = 
	`pgm_ªad_byã
(
sh≠eM≠
 + (
x
 + 4 * 
y
Ë+ 
ps
 * 64 + (
¥
 * 16));

491 i‡(
mt
 > 1) {

492 
∂ayfõld
[(
px
 + 
x
Ë+ 16 * (
py
 + 
y
)] = 5+
™imS∂ode
*6;

497 
™imS∂ode
++;

500 
y
 = 0; y < 4; y++) {

501 i‡(
py
 + 
y
 >= 0) {

502 
x
 = 0; x < 4; x++) {

503 
byã
 
mt
 = 
	`pgm_ªad_byã
(
sh≠eM≠
 + (
x
 + 4 * 
y
Ë+ 
ps
 * 64 + (
¥
 * 16));

504 i‡(
mt
 > 1) {

505 
∂ayfõld
[(
px
 + 
x
Ë+ 16 * (
py
 + 
y
)] = 0;

510 
py
 = 0; 
px
 = 6; 
ps
 = 
√xtTûe
;

511 
√xtTûe
 = 
	`øndom
(6); 
¥
 = 0;

512 
™imS∂ode
=0;

517 
	`døwPœyfõld
();

518 
	}
}

523 
	$maö
(){

524 
game
.
	`öôR™dom
();

525 
game
.
sound
.
	`∂ayMusicSåóm
(
musicName
);

526 
game
.
	`begö
();

527 
game
.
sound
.
	`∂ayMusicSåóm
();

528 
game
.
di•œy
.
width
 = 220;

529 
game
.
di•œy
.
height
 = 176;

530 
game
.
di•œy
.
	`£tF⁄t
(
f⁄tC64
);

531 
game
.
di•œy
.
adju°Ch¨Sãp
 = 0;

532 
game
.
di•œy
.
fixedWidthF⁄t
 = 
åue
;

534 
	`lﬂdPÆ
(1);

536 
px
=6;

537 
gameMode
=0;

538 
ﬁdMode
 = 50;

539 
myDñay
=40;

541 
‰ameNumbî
=0;

542 
™imCou¡
=0;

543 
•lodeOK
=0;

544 
™imS∂ode
=0;

547 
game
.
	`isRu¬ög
()) {

550 i‡(
game
.
	`upd©e
()){

552 
‰ameNumbî
++;

553 
game
.
sound
.
	`upd©eSåóm
();

554 
game
.
buâ⁄s
.
	`upd©e
();

555 
myPad
 = 
	`upd©eBuâ⁄s
(myPad);

556 
	`Upd©ePad
(
myPad
);

558 
gameMode
) {

560 
	`tôÀS¸ìn
();

563 i‡(
∑u£d
) {

566 
	`∂ayGame
();

570 
	`gameOvî
();

577 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Pokittris\tetris_gfx.h

2 
	g∑Œë
[]={

47 
byã
 
	g∂ayfõld
[]={

75 c⁄° 
uöt8_t
 
	gtûe_gfx
 [][18] ={

584 c⁄° 
uöt8_t
 
	gbg_gfx
 [][18] ={

1223 c⁄° 
byã
 
PROGMEM
 
	gsh≠eM≠
[]={

1260 c⁄° 
byã
 
PROGMEM
 
	gbg_m≠
[]={

1308 c⁄° 
uöt8_t
 
	gtôÀ_bôm≠
[] =

1361 c⁄° 
uöt8_t
 
	gtôÀ_mask
[] =

1415 c⁄° 
uöt8_t
 
	ggameovî_bôm≠
[] =

1455 c⁄° 
uöt8_t
 
	ggameovî_mask
[] =

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\PolarParcel\My_settings.h

15 #i‚de‡
MY_SETTINGS_H


16 
	#MY_SETTINGS_H


	)

18 
	#PROJ_HIRES
 0

19 
	#PROJ_ENABLE_SOUND
 1

20 
	#PROJ_STREAMING_MUSIC
 1

21 
	#PROJ_AUD_FREQ
 11025

	)

22 
	#PROJ_STREAM_TO_DAC
 1

23 
	#PROJ_GBSOUND
 0

24 
	#PROJ_ENABLE_SYNTH
 0

25 
	#PROJ_GAMEBUINO
 0

26 
	#PROJ_USE_PWM
 0

27 
	#DISABLEAVRMIN


28 

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\PolarParcel\bear_sprites.h

2 
	~<°döt.h
>

5 c⁄° 
uöt16_t
 
	gbór_∑l
[] = {

10 c⁄° 
uöt8_t
 
	gbór
 [][52] ={

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\PolarParcel\polar.cpp

1 
	~"Pokôto.h
"

2 
	~<ve˘‹
>

3 
	~<°döt.h
>

4 
	~"•rôes.h
"

5 
	~"bór_•rôes.h
"

7 
	gPokôto
::
C‹e
 
game
;

8 
	gPokôto
::
Di•œy
 
di•
;

9 
	gPokôto
::
Buâ⁄s
 
bä
;

11 
	#WHITE
 13

	)

13 
	#SW
 110

	)

14 
	#SH
 88

	)

16 
	#MAP_WIDTH
 48

	)

17 
	#MAP_HEIGHT
 48

	)

19 
	#ID_BEAR
 0

	)

20 
	#ID_PRESENT
 7

	)

21 
	#ID_PENGUIN
 33

	)

22 
	#ID_PORCH
 35

	)

24 
boﬁ
 
	ggame_w⁄
 = 
Ál£
;

25 
boﬁ
 
	ggiví_h©
 = 
Ál£
;

26 
boﬁ
 
	gdebug_c⁄sﬁe
 = 
Ál£
;

27 
	g¥e£¡_cou¡
 = 0;

29 c⁄° 
uöt8_t
 
	glogo
[] =

86 
usög
 
«me•a˚
 
	g°d
;

88 
	$ÀΩ
(
a
, 
b
, 
t
) {

89  (1-
t
)*
a
 +Å*
b
;

90 
	}
}

92 
	$˛ù
(
n
, 
lowî
, 
uµî
) {

93  
°d
::
	`max
(
lowî
, std::
	`mö
(
n
, 
uµî
));

94 
	}
}

95 
	$˛ù
(
n
, 
lowî
, 
uµî
) {

96  
°d
::
	`max
(
lowî
, std::
	`mö
(
n
, 
uµî
));

97 
	}
}

99 
	$di°
(
x1
, 
y1
, 
x2
, 
y2
) {

100 
x
 = 
x1
 - 
x2
;

101 
y
 = 
y1
 - 
y2
;

102 
di°
;

103 
di°
 = 
	`pow
(
x
,2)+pow(
y
,2);

104 
di°
 = 
	`sqπ
(dist);

105  
di°
;

106 
	}
}

107 
	$™gÀ
(
x1
, 
y1
, 
x2
, 
y2
) {

108  
	`©™2
(
y1
 - 
y2
, 
x1
 - 
x2
);

109 
	}
}

111 
	$•œshS¸ìn
(* 
«me
, 
bg_cﬁ‹
, 
ãxt_cﬁ‹
) {

112 
di•
.
≥rsi°í˚
 = 
åue
;

113 
di•
.
bgcﬁ‹
 = 
bg_cﬁ‹
;

114 
di•
.
	`˛ór
();

115 
di•
.
ãxtWøp
 = 
åue
;

116 
di•
.
	`døwBôm≠
((
SW
/2)-16,(
SH
/2)-28, 
logo
);

117 
di•
.
	`£tCﬁ‹
(
ãxt_cﬁ‹
);

118 
di•
.
	`¥öt
(
SW
/2- ((
	`°æí
(
«me
)*4)/2)-2,
SH
-7,name);

120 
c
=0; c<16;c++) {

121 
di•
.
∑Àâe
[
c
] = 0x00;

123 
di•
.
	`upd©e
();

125 
‰ame
 = 0;

127 
‰ame
<180&&!
bä
.
	`cBä
()) {

128 i‡(
‰ame
<60) {

129 
c
 = 0; c<16; c++) {

130 
di•
.
∑Àâe
[
c
] = di•.
	`öãΩﬁ©eCﬁ‹
(di•.∑Àâe[c], 
•rôes_∑l
[c], (255/60)*
‰ame
);

133 i‡(
‰ame
<120) {

134 
di•
.
	`lﬂd565PÆëã
(
•rôes_∑l
);

137 
c
 = 0; c<16; c++) {

138 
di•
.
∑Àâe
[
c
] = di•.
	`öãΩﬁ©eCﬁ‹
(di•.∑Àâe[c], 0x00, (255/60)*(
‰ame
-120));

141 
di•
.
	`upd©e
();

142 
‰ame
++;

145 
di•
.
≥rsi°í˚
 = 
Ál£
;

146 
	}
}

148 
	gdülogs
[][88] {

160 
boﬁ
 
	gdülog_a˘ive
 = 
Ál£
;

161 
	ga˘ive_dülog
 = 0;

162 
	gdülog_ödex
 = 0;

163 
	gdülog_døw_y
 = -42;

164 
	gdülog_èrgë_y
 = 2;

166 
	$døwDülog
(
y
, 
cﬁÀ˘ed_¥e£¡s
) {

168 i‡(!
dülog_a˘ive
) ;

170 
di•
.
	`£tCﬁ‹
(3);

171 
height
 = 
di•
.
f⁄tHeight
*3;

172 
di•
.
	`fûlRe˘™gÀ
(0,
y
,110,
height
);

173 
di•
.
	`£tCﬁ‹
(2);

174 
di•
.
	`døwLöe
(0, 
y
+
height
, 110, y + height);

175 
di•
.
	`£tCﬁ‹
(1);

176 
di•
.
	`døwLöe
(0, 
y
+
height
+1, 110, y + height+1);

177 
di•
.
	`£tCﬁ‹
(0);

178 
di•
.
	`£tCurs‹
(0, 
y
+1);

179 
di•
.
	`¥öt
(" ");

180 
i
 = 0; i<
dülog_ödex
; i++) {

181 
di•
.
	`¥öt
(
dülogs
[
a˘ive_dülog
][
i
]);

182 i‡(
di•
.
curs‹X
==0) disp.cursorX = 3;

185 i‡(
game
.
‰ameCou¡
%1==0Ë
dülog_ödex
 = 
	`mö
(dialog_index + 1, 88);

186 i‡(
dülog_ödex
>44) {

187 
di•
.
	`døwBôm≠
(100, 
y
 + 20, 
•rôes
[31 + ((
game
.
‰ameCou¡
 / 4) % 2)]);

188 i‡(
bä
.
	`¥es£d
(
BTN_A
)) {

189 
a˘ive_dülog
++;

190 i‡(
a˘ive_dülog
==6&&
game_w⁄
) {

191 
giví_h©
 = 
åue
;

193 i‡((
a˘ive_dülog
>4&&!
game_w⁄
)||(active_dialog>6&&game_won)) {

194 
dülog_èrgë_y
 = -42;

195 
dülog_a˘ive
 = 
Ál£
;

197 
dülog_ödex
=0;

200 
dülog_døw_y
 = 
	`ÀΩ
(dülog_døw_y, 
dülog_èrgë_y
, 0.2);

202 i‡(
dülog_èrgë_y
 =-42 && 
dülog_døw_y
 < -40Ë
dülog_a˘ive
 = 
Ál£
;

203 
	}
}

206 
boﬁ
 
	gSOLID_TILES
[40] {

213 
«me•a˚
 
	gM≠
 {

214 
	gd©a
[
MAP_WIDTH
*
MAP_HEIGHT
] = {

265 
gëID
(
x
, 
y
) {

266 
	gaddr
 = (
y
 * 
MAP_WIDTH
Ë+ 
x
;

267  
	gd©a
[
addr
];

270 
boﬁ
 
checkSﬁid
(
x
, 
y
) {

271  
	gSOLID_TILES
[
gëID
(
x
, 
y
)];

274 
	gˇm_x
, 
	gˇm_y
;

276 
upd©e
(
èrgë_x
, 
èrgë_y
) {

277 
	gˇm_x
 = 
˛ù
(
ÀΩ
(
ˇm_x
, 55 - 
èrgë_x
 - 5, .1), ()-((
MAP_WIDTH
*10)-110), ().0);

278 
	gˇm_y
 = 
˛ù
(
ÀΩ
(
ˇm_y
, 44 - 
èrgë_y
 - 5, .1), ()-((
MAP_HEIGHT
*10)-88), ().0);

282 
døwFa°
() {

283 
	gtx
 = 0;Åx<12;Åx++) {

284 
	gty
 = 0;Åy<10;Åy++) {

285 
	gid
 = 
gëID
(
tx
-(
ˇm_x
/10), 
ty
-(
ˇm_y
/10));

286 i‡(
	gid
!=0) {

287 i‡((
id
 =33)&&(
game
.
‰ameCou¡
/8)%2==0) id = 33+1;

288 
	gdi•
.
døwBôm≠
(
tx
*10 + (()
ˇm_x
%10), 
ty
*10 + (()
ˇm_y
%10), 
•rôes
[
id
]);

293 
døw
() {

294 
	gi
 = 0; i<(
MAP_WIDTH
*
	gMAP_HEIGHT
); i++) {

295 
	gx
, 
	gy
;

296 
	gx
 = 
i
%
MAP_WIDTH
;

297 
	gy
 = (
i
-
x
)/
MAP_WIDTH
;

298 i‡(
	gd©a
[
i
]!=0Ë
di•
.
døwBôm≠
(
x
*10 + 
ˇm_x
, 
y
*10 + 
ˇm_y
, 
•rôes
[
d©a
[i]]);

303 
	sSnowFœke
 {

304 
	mx
, 
	my
;

305 
SnowFœke
() {

306 
	mx
 = 
øndom
(0,110);

307 
	my
 = 
øndom
(0,88);

309 
upd©e
() {

310 
	my
+=
øndom
(1, 2);

311 
	my
%=88;

312 
	mx
+=
øndom
(-1,1) % 110;

313 
	mdi•
.
døwPixñ
(
x
, 
y
, 
WHITE
);

315 } 
	g¢owÊakes
[20];

317 
	sP¨ti˛e
 {

318 
	mx
, 
	my
, 
	mvx
, 
	mvy
, 
	mødius
;

319 
	mtime
;

320 
	mcﬁ‹
;

321 
P¨ti˛e
(
_x
, 
_y
, 
_cﬁ‹
, 
_ødius
) {

322 
	mx
 = 
_x
;

323 
	my
 = 
_y
;

324 
	mvx
 = 0;

325 
	mvy
 = 0;

326 
	mcﬁ‹
 = 
_cﬁ‹
;

327 
	mødius
 = 
_ødius
;

328 
	mtime
 = 0;

330 
upd©e
() {

331 
	mx
+=
vx
;

332 
	my
+=
vy
;

333 i‡(
	mtime
 % 2 == 0) {

334 
x
+=
øndom
(-1, 1);

335 
	my
+=
øndom
(-1, 1);

337 
	mtime
++;

339 
døw
() {

340 
	mdi•
.
£tCﬁ‹
(
cﬁ‹
);

341 
	mdi•
.
fûlCú˛e
(
x
 + 
M≠
::
ˇm_x
, 
y
 + M≠::
ˇm_y
, 
ødius
);

345 
	gve˘‹
<
	gP¨ti˛e
> 
	g∑πs
;

348 
	sE¡ôy
 {

349 
	mx
, 
	my
, 
	mvx
, 
	mvy
;

350 
	mw
, 
	mh
, 
	mty≥
, 
	m•r
, 
	mÊù
;

351 
E¡ôy
 * 
	mèrgë
;

352 
E¡ôy
(
_x
, 
_y
, 
_ty≥
) {

353 
	mty≥
 = 
_ty≥
;

354 
	m•r
 = 
ty≥
;

355 
	mx
 = 
_x
;

356 
	my
 = 
_y
;

357 
	mvx
 = 0.0;

358 
	mvy
 = 0.0;

359 
	mw
 = 10;

360 
	mh
 = 10;

361 i‡(
	mty≥
 =
ID_PRESENT
) {

362 
w
 = 5;

363 
	mh
 = 6;

365 
	mèrgë
 = 
NULL
;

367 
E¡ôy
(
_x
, 
_y
, 
_ty≥
, 
_•r
) {

368 
	mty≥
 = 
_ty≥
;

369 
	m•r
 = 
ty≥
;

370 
	mx
 = 
_x
;

371 
	my
 = 
_y
;

372 
	mvx
 = 0.0;

373 
	mvy
 = 0.0;

374 
	mw
 = 10;

375 
	mh
 = 10;

376 i‡(
	mty≥
 =
ID_PRESENT
) {

377 
w
 = 5;

378 
	mh
 = 6;

380 
	mèrgë
 = 
NULL
;

381 
	m•r
 = 
_•r
;

384 
c⁄åﬁ
(
ve˘‹
<
E¡ôy
> &
íts
) {

385 
boﬁ
 
	mwÆkög
 = 
Ál£
;

386 
	m•ìd
 = 1.0;

387 i‡(
	mbä
.
bBä
()Ë
	m•ìd
 = 1.5;

388 i‡(
	mbä
.
À·Bä
()) {

389 
	mvx
 = 
max
(()
vx
-.1,-()
•ìd
);

390 
	mÊù
 = 1;

391 
	mwÆkög
 = 
åue
;

393 i‡(
	mbä
.
rightBä
()) {

394 
	mvx
 = 
mö
(
vx
+.1,()
•ìd
);

395 
	mÊù
 = 0;

396 
	mwÆkög
 = 
åue
;

399 
	mvx
 = 
ÀΩ
(
vx
, 0, 0.2);

402 i‡(
	mbä
.
upBä
()) {

403 
	mvy
 = 
max
(()
vy
-.1,-()
•ìd
);

404 
	mwÆkög
 = 
åue
;

406 i‡(
	mbä
.
downBä
()) {

407 
	mvy
 = 
mö
(
vy
+.1,()
•ìd
);

408 
	mwÆkög
 = 
åue
;

411 
	mvy
 = 
ÀΩ
(
vy
, 0, 0.2);

414 i‡(
	mM≠
::
gëID
–(
x
 + 
vx
 ) / 10, ( 
y
 + 
vy
 ) / 10 ) =
ID_PENGUIN
 || 
M≠
::gëID––x + 
w
 - 1 + vx ) / 10, ( y + vy ) / 10 ) == ID_PENGUIN ) {

415 i‡(
bä
.
¥es£d
(
BTN_A
)) {

416 
dülog_a˘ive
 = 
åue
;

417 i‡(
	mgame_w⁄
) {

418 
	ma˘ive_dülog
 = 5;

420 
	ma˘ive_dülog
 = 0;

421 
	mdülog_ödex
 = 0;

422 
	mdülog_døw_y
 = -42;

423 
	mdülog_èrgë_y
 = 2;

431 i‡(!
	mwÆkög
) {

432 
	m•r
 = (
game
.
‰ameCou¡
/8)%2;

437 
	møã
 = 
game
.
‰ameCou¡
/2;

438 i‡(
	mbä
.
bBä
()) {

439 
	møã
 = 
game
.
‰ameCou¡
;

441 
	m•r
 = 2 + (
øã
)%4;

442 i‡(
	mgame
.
	m‰ameCou¡
%8==0) {

443 
∑πs
.
push_back
(
P¨ti˛e
(
x
 + (
w
&&
Êù
==1||0), 
y
 + 
h
, 13, 
øndom
(0,1)+.5));

448 i‡(
	mbä
.
¥es£d
(
BTN_A
)) {

449 
	mi
 = 0; i<
	míts
.
size
(); i++) {

450 
	míts
[
i
].
	mèrgë
 = 
NULL
;

455 
upd©eBody
(
ve˘‹
<
E¡ôy
> * 
íts
, 
ödex
) {

457 
	mi
 = 0; i<
	míts
->
size
();i++) {

458 
E¡ôy
 * 
	mŸhî
 = &
íts
->
©
(
i
);

459 i‡(
	mi
!=
ödex
&&
game
.
cﬁlideRe˘Re˘
(
x
 + 
vx
, 
y
 + 
vy
, 
w
-1, 
h
-1, 
Ÿhî
->x + other->vx, other->y + other->vy, other->w-1, other->h-1)) {

460 i‡(
	mi
 == 0) {

461 
èrgë
 = 
Ÿhî
;

464 i‡(
	mi
!=
ödex
&&
game
.
cﬁlideRe˘Re˘
(
x
 + 
vx
, 
y
 + 
vy
, 
w
, 
h
, 
Ÿhî
->x, other->y, other->w, other->h)) {

465 i‡(
	mx
+
	mvx
<
	mŸhî
->x) {

466 
	mvx
-=.1;

468 
	mvx
+=.1;

470 i‡(
	my
+
	mvy
<
	mŸhî
->y) {

471 
	mvy
-=.1;

473 
	mvy
+=.1;

477 i‡(
	mödex
>=1&&
èrgë
!=
NULL
) {

478 
di°™˚
 = 
di°
(
x
, 
y
, 
èrgë
->x,Åarget->y);

479 i‡(
	mdi°™˚
>=16) {

480 
™g
 = 
™gÀ
(
èrgë
->
x
,Å¨gë->
y
, x, y);

481 
	mvx
 = 
ÀΩ
(
vx
, vx + 
cos
(
™g
), 
di°™˚
/100);

482 
	mvy
 = 
ÀΩ
(
vy
, vy + 
sö
(
™g
), 
di°™˚
/100);

483 
	mèrgë
->
	mvx
 = 
ÀΩ
(
èrgë
->
vx
,Å¨gë->vx + (-
cos
(
™g
)), 
di°™˚
/200);

484 
	mèrgë
->
	mvy
 = 
ÀΩ
(
èrgë
->
vy
,Å¨gë->vy + (-
sö
(
™g
)), 
di°™˚
/200);

487 
	mvx
 = 
ÀΩ
(
vx
, 0, 0.05);

488 
	mvy
 = 
ÀΩ
(
vy
, 0, 0.05);

492 i‡(
	mödex
>=1) {

493 
vx
 = 
ÀΩ
(vx, 0, 0.05);

494 
	mvy
 = 
ÀΩ
(
vy
, 0, 0.05);

498 
	mx_off£t
 = 0;

499 i‡(
	mvx
>0Ë{
	mx_off£t
+=(
w
-1);}

500 i‡(
	mM≠
::
checkSﬁid
((
x
 + 
vx
 + 
x_off£t
Ë/ 10, 
y
 / 10)

502 
	mM≠
::
checkSﬁid
((
x
 + 
vx
 + 
x_off£t
)/10, (
y
 + 
h
 - 1) / 10)

505 
	mvx
 = 0;

507 
	my_off£t
 = 0;

508 i‡(
	mvy
>0Ë{
	my_off£t
 +(
h
 - 1);}

509 i‡(
	mM≠
::
checkSﬁid
(
x
 / 10, (
y
 + 
vy
 + 
y_off£t
) / 10)

511 
	mM≠
::
checkSﬁid
((
x
 + 
w
 - 1Ë/ 10, (
y
 + 
vy
 + 
y_off£t
) / 10)

514 
	mvy
 = 0;

517 
	mx
+=
vx
;

518 
	my
+=
vy
;

520 
døwShadow
() {

521 
	mdi•
.
£tCﬁ‹
(11);

522 
	mdx
, 
	mdy
;

523 
	mdx
 = 
x
 + 
M≠
::
ˇm_x
;

524 
	mdy
 = 
y
 + 
M≠
::
ˇm_y
;

525 
	mdi•
.
døwLöe
(
dx
+1, 
dy
 + 
h
, dx + 
w
-1, dy + h);

526 
	mdi•
.
døwLöe
(
dx
+2, 
dy
 + 
h
+1, dx + 
w
-2, dy + h+1);

528 
døwR›e
() {

529 
	mdi•
.
£tCﬁ‹
(15);

530 i‡(
	mèrgë
) {

531 
	mdi•
.
£tCﬁ‹
(3);

532 
	mdi•
.
døwLöe
(
x
+ 
M≠
::
ˇm_x
 + 
w
/2, 
y
 + M≠::
ˇm_y
 + 
h
/2, 
èrgë
->x + Map::cam_x +Åarget->w/2,Åarget->y + Map::cam_y +Åarget->h/2);

535 
døw
() {

536 i‡(
	mty≥
==
ID_BEAR
) {

537 
di•
.
døwBôm≠
(
x
 + 
M≠
::
ˇm_x
, 
y
 + M≠::
ˇm_y
, 
bór
[
•r
], 0, 
Êù
);

538 i‡(
	mgiví_h©
) {

539 
	mdi•
.
døwBôm≠
(
x
 + 
M≠
::
ˇm_x
, 
y
 + M≠::
ˇm_y
-1, 
•rôes
[40], 0, 
Êù
);

543 
	mox
 = 0;

544 #ifde‡
POK_SIM


546 
	mox
 = -4;

548 
	mdi•
.
døwBôm≠
(
x
 + 
M≠
::
ˇm_x
 + 
ox
, 
y
 + M≠::
ˇm_y
 + (
cos
(
game
.
‰ameCou¡
*.2)), 
•rôes
[
•r
], 0, 
Êù
);

554 
	gve˘‹
<
	gE¡ôy
> 
	gíts
;

556 
	$öôE¡ôõs
() {

557 
i
 = 0; i<(
MAP_WIDTH
*
MAP_HEIGHT
); i++) {

558 
sx
, 
sy
;

559 
sx
 = 
i
%
MAP_WIDTH
;

560 
sy
 = (
i
-
sx
)/
MAP_WIDTH
;

561 i‡(
M≠
::
d©a
[
i
]>=
ID_PRESENT
&&Map::data[i]<=ID_PRESENT+3) {

562 
íts
.
	`push_back
(
	`E¡ôy
(
sx
*10, 
sy
*10, 
ID_PRESENT
, 
M≠
::
d©a
[
i
]));

563 
M≠
::
d©a
[
i
] = 0;

564 
¥e£¡_cou¡
++;

566 i‡(
M≠
::
d©a
[
i
]==2) {

567 
M≠
::
d©a
[
i
]=0;

570 
	}
}

572 
	$maö
() {

573 
game
.
sound
.
	`∂ayMusicSåóm
("music/xmas.snd");

574 
game
.
	`begö
();

575 
game
.
sound
.
	`∑u£MusicSåóm
();

576 
game
.
	`£tFømeR©e
(30);

577 
di•
.
	`£tF⁄t
(
f⁄tTight
);

578 
game
.
	`waô
(10);

579 
	`•œshS¸ìn
("@trelemar", 2, 1);

580 
di•
.
bgcﬁ‹
 = 12;

581 
di•
.
	`£tInvisibÀCﬁ‹
(12);

583 
íts
.
	`push_back
(
	`E¡ôy
(110, 180, 
ID_BEAR
));

584 
	`öôE¡ôõs
();

585 
E¡ôy
 * 
∂ayî
 = &
íts
[0];

586 
M≠
::
ˇm_x
 = 55-
∂ayî
->
x
;

587 
M≠
::
ˇm_y
 = 88-
∂ayî
->
y
;

589 
game
.
sound
.
	`∂ayMusicSåóm
();

590 
game
.
	`isRu¬ög
()) {

591 i‡(
game
.
	`upd©e
()) {

592 i‡(
game
.
‰ameCou¡
<200) {

593 
c
 = 0; c<16; c++) {

594 
di•
.
∑Àâe
[
c
] = di•.
	`öãΩﬁ©eCﬁ‹
(di•.∑Àâe[c], 
•rôes_∑l
[c], 100);

598 
c⁄èöed_¥e£¡s
 = 0;

600 
M≠
::
	`upd©e
(
∂ayî
->
x
,Öœyî->
y
);

601 
M≠
::
	`døwFa°
();

603 
∂ayî
->
	`c⁄åﬁ
(
íts
);

604 
i
 = 0; i<
íts
.
	`size
(); i++) {

605 
íts
[
i
].
	`døwShadow
();

606 
íts
[
i
].
	`døwR›e
();

608 
i
 = 0; i<
íts
.
	`size
(); i++) {

609 
E¡ôy
 * 
ít
 = &
íts
.
	`©
(
i
);

610 
ít
->
	`upd©eBody
(&
íts
, 
i
);

611 
ít
->
	`døw
();

612 i‡(
ít
->
ty≥
==
ID_PRESENT
) {

613 i‡(
M≠
::
	`gëID
(
ít
->
x
/10,É¡->
y
/10)==
ID_PORCH
) {

614 
c⁄èöed_¥e£¡s
++;

618 i‡(
c⁄èöed_¥e£¡s
==
¥e£¡_cou¡
) {

619 
game_w⁄
 = 
åue
;

621 
i
 = 0; i<
∑πs
.
	`size
(); i++) {

622 
∑πs
[
i
].
	`upd©e
();

623 
∑πs
[
i
].
	`døw
();

624 i‡(
∑πs
[
i
].
time
>20Ë∑πs.
	`îa£
’¨ts.
	`begö
()+i);

626 
i
 = 0; i<20; i++) {

627 
¢owÊakes
[
i
].
	`upd©e
();

629 i‡(
bä
.
	`hñd
(
BTN_C
, 50)) {

630 
debug_c⁄sﬁe
 = ! debug_console;

632 i‡(
debug_c⁄sﬁe
) {

633 
di•
.
	`£tCﬁ‹
(10);

634 
di•
.
	`¥öt
("X ");

635 
di•
.
	`¥öt
(
∂ayî
->
x
);

636 
di•
.
	`¥öt
(" Y ");

637 
di•
.
	`¥öén
(
∂ayî
->
y
);

638 
di•
.
	`¥öt
("CAMx ");

639 
di•
.
	`¥öén
(
M≠
::
ˇm_x
);

640 
di•
.
	`¥öt
("CAMy ");

641 
di•
.
	`¥öén
(
M≠
::
ˇm_y
);

642 
di•
.
	`¥öt
("#ENTS ");

643 
di•
.
	`¥öén
(
íts
.
	`size
()+
∑πs
.size());

644 
di•
.
	`¥öt
("presents ");

645 
di•
.
	`¥öén
(
¥e£¡_cou¡
);

649 
di•
.
	`£tCﬁ‹
(3);

650 
di•
.
	`fûlRoundRe˘
(1, 1, 28, 7, 2);

651 
di•
.
	`døwBôm≠
(2, 2, 
•rôes
[
ID_PRESENT
]);

652 
di•
.
	`£tCﬁ‹
(13);

653 
di•
.
	`¥öt
(9, 2, 
c⁄èöed_¥e£¡s
);

654 
di•
.
	`¥öt
("/");

655 
di•
.
	`¥öt
(
¥e£¡_cou¡
);

657 
	`døwDülog
(
dülog_døw_y
, 
c⁄èöed_¥e£¡s
);

661 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\PolarParcel\sprites.h

1 
	~<°döt.h
>

4 c⁄° 
uöt16_t
 
	g•rôes_∑l
[] = {

9 c⁄° 
uöt8_t
 
	g•rôes
 [][52] ={

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\SDCardFileIO\My_settings.h

12 #i‚de‡
MY_SETTINGS_H


13 
	#MY_SETTINGS_H


	)

15 
	#PROJ_HIRES
 0

16 
	#PROJ_ENABLE_SOUND
 0

17 

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\SDCardFileIO\main.cpp

1 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wwrite-strings"

3 
	~"Pokôto.h
"

4 #ifde‡
POK_SIM


5 
	~"io.h
"

7 
	~"SDFûeSy°em.h
"

10 
	gPokôto
::
C‹e
 
mygame
;

12 
FILE
 *
	gfûï
 = 
NULL
;

13 c⁄° 
öt32_t
 
	gblockSize
 = 1000;

14 c⁄° 
öt32_t
 
	gtŸÆFûeSize
 = 200000;

15 
	gbuf„rOrg
[
blockSize
];

16 
	gbuf„r
[
blockSize
];

17 
öt32_t
 
	gÀn
 = 0;

20 
uöt32_t
 
	g°¨t_ms
 = 0;

21 
uöt32_t
 
	g°›_ms
 = 0;

23 
	$maö
 () {

25 
mygame
.
	`begö
();

26 
mygame
.
di•œy
.
≥rsi°í˚
 = 
åue
;

28 
mygame
.
di•œy
.
	`¥öén
("Testing...");

30 
mygame
.
	`isRu¬ög
()) {

31 i‡(
mygame
.
	`upd©e
()) {

32 
mygame
.
	`upd©e
();

39 
mygame
.
di•œy
.
	`¥öén
("*SDFS*");

41 #ifde‡
POK_SIM


42 * 
fûeP©hAndNamePFFS
 = "sdtest/200KB.txt";

43 * 
fûeP©hAndNameSDFS
 = "sdtest/200KB.txt";

44 * 
dúNameSDFS
 = "sdtest";

46 
	`mkdú
(
dúNameSDFS
);

48 
SDFûeSy°em
 
	`sd
–
P0_9
, 
P0_8
, 
P0_6
, 
P0_7
, "sd");

49 * 
fûeP©hAndNamePFFS
 = "sdtest/200KB.txt";

50 * 
fûeP©hAndNameSDFS
 = "/sd/sdtest/200KB.txt";

51 * 
dúNameSDFS
 = "/sd/sdtest";

53 
	`mkdú
(
dúNameSDFS
, 0777);

57 
fûï
 = 
	`f›í
(
fûeP©hAndNameSDFS
, "wb");

58 if(
fûï
 =
NULL
) {

59 
mygame
.
di•œy
.
	`¥öén
("CouldÇŸ o≥¿fûêf‹ wrôe!"); 
døw_lo›
;

63 
öt32_t
 
i
=0;i<
blockSize
; i++Ë
buf„rOrg
[i] = ()i;

66 
°¨t_ms
 = 
mygame
.
	`gëTime
();

67 
öt32_t
 
i
=0; i<
tŸÆFûeSize
; i+=
blockSize
) {

69 
Àn
 = 
	`fwrôe
 (
buf„rOrg
 , (), 
blockSize
, 
fûï
);

70 if–
Àn
 !
blockSize
 ) {
mygame
.
di•œy
.
	`¥öén
("CouldÇŸ wrôe!"); 
døw_lo›
;}

72 
	`f˛o£
(
fûï
);

73 
°›_ms
 = 
mygame
.
	`gëTime
();

74 
mygame
.
di•œy
.
	`¥öt
("Wrote:");

75 if–
°›_ms
-
°¨t_ms
 > 0 )

76 
mygame
.
di•œy
.
	`¥öt
–
tŸÆFûeSize
/(
°›_ms
-
°¨t_ms
) );

78 
mygame
.
di•œy
.
	`¥öt
( 0 );

79 
mygame
.
di•œy
.
	`¥öén
(" kb/s");

82 
fûï
 = 
NULL
;

83 
fûï
 = 
	`f›í
(
fûeP©hAndNameSDFS
, "rb");

84 if(
fûï
 =
NULL
) {

85 
mygame
.
di•œy
.
	`¥öén
("CouldÇŸ o≥¿fûêf‹Ñód"); 
døw_lo›
;

89 
°¨t_ms
 = 
mygame
.
	`gëTime
();

91 
öt32_t
 
i
=0;; i+=
blockSize
) {

93 
Àn
 = 
	`‰ód
 (
buf„r
, (), 
blockSize
, 
fûï
);

94 i‡(
Àn
 !
blockSize
) ;

96 
°›_ms
 = 
mygame
.
	`gëTime
();

97 
	`f˛o£
(
fûï
);

100 
öt32_t
 
i
=0;i<
blockSize
; i++)

101 if(
buf„r
[
i
] !
buf„rOrg
[i]Ë{
mygame
.
di•œy
.
	`¥öén
("InvÆid d©a!"); 
døw_lo›
;}

103 
mygame
.
di•œy
.
	`¥öt
("Read:");

104 if–
°›_ms
-
°¨t_ms
 > 0 )

105 
mygame
.
di•œy
.
	`¥öt
–
tŸÆFûeSize
/(
°›_ms
-
°¨t_ms
) );

107 
mygame
.
di•œy
.
	`¥öt
( 0 );

108 
mygame
.
di•œy
.
	`¥öén
(" kb/s");

112 
	`pokInôSD
();

113 ()
	`fûeO≥n
(
fûeP©hAndNamePFFS
, 
FILE_MODE_READONLY
);

114 
mygame
.
di•œy
.
	`¥öén
("*PetitFFS*");

117 
°¨t_ms
 = 
mygame
.
	`gëTime
();

118 
öt32_t
 
i
=0;; i+=
blockSize
) {

119 
cbuf„r
[
blockSize
];

120 
uöt16_t
 
Àn
 = 
	`fûeRódByãs
((
uöt8_t
*)
cbuf„r
, 
blockSize
);

121 if–
Àn
 == 0 ) ;

122 
	`fûeSìkRñ©ive
(
blockSize
);

124 
°›_ms
 = 
mygame
.
	`gëTime
();

125 
	`fûeClo£
();

128 
öt32_t
 
i
=0;i<
tŸÆFûeSize
; i++)

129 if(
buf„rOrg
[
i
] !buf„rOrg[i]Ë{
mygame
.
di•œy
.
	`¥öén
("D©®övÆid!"); 
døw_lo›
;}

131 
mygame
.
di•œy
.
	`¥öt
("Read:");

132 if–
°›_ms
-
°¨t_ms
 > 0 )

133 
mygame
.
di•œy
.
	`¥öt
–
tŸÆFûeSize
/(
°›_ms
-
°¨t_ms
) );

135 
mygame
.
di•œy
.
	`¥öt
( 0 );

136 
mygame
.
di•œy
.
	`¥öt
(" kb/s");

138 
døw_lo›
:

139 
mygame
.
	`isRu¬ög
()) {

140 i‡(
mygame
.
	`upd©e
()) {

143 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\SaveHighscore\My_settings.h

12 #i‚de‡
MY_SETTINGS_H


13 
	#MY_SETTINGS_H


	)

15 
	#PROJ_HIRES
 1

16 
	#PROJ_ENABLE_SOUND
 0

17 
	#FULLWIDTHSPACES


18 
	#DISABLEAVRMIN


	)

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\SaveHighscore\savehi.cpp

1 
	~"Pokôto.h
"

2 
	~"PokôtoCookõ.h
"

3 
	~<°rög
>

5 
	gPokôto
::
C‹e
 
mygame
;

7 c⁄° 
	g∂ayîønk
[3][10] = {

13 c⁄° * 
	gbœbœ
 = "This isÉxtraÜongÅextÅhat isÇeededÅo waste fill cookie memory";

15 ˛as†
	cmycookõ
 : 
public
 
Pokôto
::
Cookõ
 {

16 
public
:

17 
öôüls
[4] = {'A','D','A',0};

18 
	gsc‹e
=10;

19 
	gønk
[10];

20 
	g∂aytime
 = 1234567890;

21 
	gmesßge
[100];

24 
mycookõ
 
	ghighsc‹e
;

26 
	$maö
 () {

27 
°©e
=0;

28 
cuºítblock
 = 0;

29 
cuºítblockow√r
 = -1;

30 
ãmp
;

31 
mygame
.
	`begö
();

33 i‡(!
highsc‹e
.
ønk
[0]Ë
	`°r˝y
(highsc‹e.ønk,
∂ayîønk
[0]);

34 i‡(
highsc‹e
.
∂aytime
==0) highscore.playtime=1234567890;

35 
	`°r˝y
(
highsc‹e
.
mesßge
,
bœbœ
);

36 
highsc‹e
.
	`begö
("FOOBOO",(highscore),(*)&highscore);

39 
mygame
.
	`isRu¬ög
()) {

41 i‡(
mygame
.
	`upd©e
()) {

42 
°©e
) {

44 
mygame
.
di•œy
.
	`£tF⁄t
(
f⁄t5x7
);

45 
mygame
.
di•œy
.
cﬁ‹
=1;

46 
mygame
.
di•œy
.
	`¥öén
("Highscore CookieÅest\n");

47 
mygame
.
di•œy
.
cﬁ‹
=2;

48 
mygame
.
di•œy
.
	`¥öén
("Current highscore:\n");

49 
mygame
.
di•œy
.
cﬁ‹
=3;

50 
mygame
.
di•œy
.
	`£tF⁄t
(
f⁄tZXS≥c
);

51 
mygame
.
di•œy
.
f⁄tSize
=2;

52 
mygame
.
di•œy
.
	`¥öt
((c⁄° *)
highsc‹e
.
öôüls
);

53 
mygame
.
di•œy
.
	`¥öt
(" ");

54 
mygame
.
di•œy
.
	`¥öén
(()
highsc‹e
.
sc‹e
);

55 
mygame
.
di•œy
.
	`¥öén
("\n");

56 
mygame
.
di•œy
.
f⁄tSize
=1;

57 
mygame
.
di•œy
.
	`¥öén
((c⁄° *)
highsc‹e
.
ønk
);

58 
mygame
.
di•œy
.
	`¥öt
("Playtime: ");

59 
mygame
.
di•œy
.
	`¥öén
(
highsc‹e
.
∂aytime
);

60 
mygame
.
di•œy
.
	`£tF⁄t
(
f⁄t5x7
);

61 
mygame
.
di•œy
.
cﬁ‹
=1;

62 
mygame
.
di•œy
.
	`¥öén
("\n\nPress AÅo generateÑandom highscore\nand store it ");

63 
mygame
.
di•œy
.
	`¥öén
("\nPress C for EEPROM view");

64 i‡(
mygame
.
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

66 
highsc‹e
.
öôüls
[0] = 
	`øndom
(65,90);

67 
highsc‹e
.
öôüls
[1] = 
	`øndom
(65,90);

68 
highsc‹e
.
öôüls
[2] = 
	`øndom
(65,90);

69 
highsc‹e
.
sc‹e
 +
	`øndom
(10);

70 
	`°r˝y
(
highsc‹e
.
ønk
,
∂ayîønk
[
	`øndom
(0,3)]);

71 
highsc‹e
.
∂aytime
 = ()
	`øndom
(0,0xFFFF)*()random(0,0xFFFF);

73 
highsc‹e
.
	`ßveCookõ
();

77 i‡(
	`ì¥om_ªad_byã
((
uöt16_t
*)(
SBKEYSIZE
*
SBMAXKEYS
+
cuºítblock
))&0x80) {

78 
cuºítblockow√r
 = 
	`ì¥om_ªad_byã
((
uöt16_t
*)(
SBKEYSIZE
*
SBMAXKEYS
+
cuºítblock
))&0x7F;

79 } 
cuºítblockow√r
 = -1;

80 
mygame
.
di•œy
.
cﬁ‹
=1;

81 
mygame
.
di•œy
.
	`£tF⁄t
(
f⁄t5x7
);

82 
mygame
.
di•œy
.
	`¥öén
("EEPROM Key Table:\n");

83 
i
=0, 
k
=0, 
r
=0;i<12;i++) {

84 
mygame
.
di•œy
.
cﬁ‹
=2;

85 i‡(
i
<10Ë
mygame
.
di•œy
.
	`¥öt
(" ");

86 
mygame
.
di•œy
.
	`¥öt
(
i
);

87 
mygame
.
di•œy
.
	`¥öt
(":");

88 i‡(
cuºítblockow√r
==
i
Ë
mygame
.
di•œy
.
cﬁ‹
=1;

89 
mygame
.
di•œy
.
cﬁ‹
=3;

90 
j
=0; j<8; j++, 
k
++) {

91 
ãmp
 = 
	`ì¥om_ªad_byã
((
uöt16_t
*)
k
);

92 i‡(
ãmp
>31Ë
mygame
.
di•œy
.
	`¥öt
((const )temp);

93 
mygame
.
di•œy
.
	`¥öt
("-");

95 
r
++;

96 i‡(
r
==3Ë{
mygame
.
di•œy
.
	`¥öt
("\n");r=0;}

97 
mygame
.
di•œy
.
	`¥öt
(" ");

99 
mygame
.
di•œy
.
cﬁ‹
=1;

100 
mygame
.
di•œy
.
	`¥öén
("\nEEPROM Block Reservation Table:\n");

101 
i
=0, 
k
=0, 
r
=0;i<21;i++,k++) {

102 
mygame
.
di•œy
.
cﬁ‹
=2;

103 i‡(
i
<10Ë
mygame
.
di•œy
.
	`¥öt
(" ");

104 i‡(
k
==
cuºítblock
Ë
mygame
.
di•œy
.
cﬁ‹
=1;

105 
mygame
.
di•œy
.
	`¥öt
(
k
);

106 
mygame
.
di•œy
.
cﬁ‹
=2;

107 
mygame
.
di•œy
.
	`¥öt
(":");

108 
ãmp
 = 
	`ì¥om_ªad_byã
((
uöt16_t
*)(
k
+
SBMAXKEYS
*
SBKEYSIZE
));

109 i‡(
ãmp
&0x80Ë
mygame
.
di•œy
.
cﬁ‹
=3;

110 
mygame
.
di•œy
.
cﬁ‹
=1;

111 i‡(
ãmp
&0x80Ë
mygame
.
di•œy
.
	`¥öt
(()(temp&0x7F),16);

112 
mygame
.
di•œy
.
	`¥öt
("-");

113 i‡((
ãmp
&0x7F)<16Ë
mygame
.
di•œy
.
	`¥öt
(" ");

114 
r
++;

115 i‡(
r
==7Ë{
mygame
.
di•œy
.
	`¥öt
("\n");r=0;}

118 
mygame
.
di•œy
.
cﬁ‹
=1;

119 
mygame
.
di•œy
.
	`¥öt
("\nEEPROM Block ");

120 
mygame
.
di•œy
.
cﬁ‹
=2;

121 
mygame
.
di•œy
.
	`¥öt
(
cuºítblock
);

122 
mygame
.
di•œy
.
cﬁ‹
=3;

123 
mygame
.
di•œy
.
	`¥öt
(' ');

125 i‡(
	`ì¥om_ªad_byã
((
uöt16_t
*)(
SBKEYSIZE
*
SBMAXKEYS
+
cuºítblock
))&0x80) {

126 
cuºítblockow√r
 = 
	`ì¥om_ªad_byã
((
uöt16_t
*)(
SBKEYSIZE
*
SBMAXKEYS
+
cuºítblock
))&0x7F;

127 
i
 = 0;i<
SBKEYSIZE
;i++) {

128 
mygame
.
di•œy
.
	`¥öt
((c⁄° )
	`ì¥om_ªad_byã
((
uöt16_t
*)(
SBKEYSIZE
*
cuºítblockow√r
+
i
)));

130 } 
mygame
.
di•œy
.
	`¥öt
("free");

131 
mygame
.
di•œy
.
	`¥öén
('\n');

132 
mygame
.
di•œy
.
cﬁ‹
=1;

133 
i
=0, 
k
=0, 
r
=0;i<
SBBLOCKSIZE
;i++,k++) {

134 
ãmp
 = 
	`ì¥om_ªad_byã
((
uöt16_t
*)(
k
+
SBMAXKEYS
*
SBKEYSIZE
+
SBMAXBLOCKS
+
SBBLOCKSIZE
*
cuºítblock
));

135 
mygame
.
di•œy
.
cﬁ‹
=3;

136 i‡(
ãmp
>31 &&Åemp <127) {

138 
mygame
.
di•œy
.
cﬁ‹
=1;

139 
mygame
.
di•œy
.
	`¥öt
(()(
ãmp
));

140 } i‡(
ãmp
) {

142 
mygame
.
di•œy
.
cﬁ‹
=2;

143 
mygame
.
di•œy
.
	`¥öt
(()(
ãmp
));

146 
mygame
.
di•œy
.
	`¥öt
(()(
ãmp
));

148 
r
++;

149 i‡(
r
==16Ë{
mygame
.
di•œy
.
	`¥öt
("\n");r=0;}

150 
mygame
.
di•œy
.
	`¥öt
(" ");

152 i‡(
mygame
.
buâ⁄s
.
	`¥es£d
(
BTN_LEFT
)Ë
cuºítblock
--;

153 i‡(
mygame
.
buâ⁄s
.
	`¥es£d
(
BTN_RIGHT
)Ë
cuºítblock
++;

154 i‡(
mygame
.
buâ⁄s
.
	`¥es£d
(
BTN_UP
)Ë
cuºítblock
-=7;

155 i‡(
mygame
.
buâ⁄s
.
	`¥es£d
(
BTN_DOWN
)Ë
cuºítblock
+=7;

156 i‡(
cuºítblock
<0) currentblock += 21;

157 i‡(
cuºítblock
>20) currentblock -= 21;

158 i‡(
mygame
.
buâ⁄s
.
	`¥es£d
(
BTN_B
)) {

159 
highsc‹e
.
	`dñëeCookõ
();

161 
mygame
.
di•œy
.
cﬁ‹
=1;

162 
mygame
.
di•œy
.
	`¥öén
("\nPress CÅo go backÅo highscore");

163 i‡(
cuºítblockow√r
 !-1Ë
mygame
.
di•œy
.
	`¥öt
("Press BÅoÉrase cookie");

166 i‡(
mygame
.
buâ⁄s
.
	`¥es£d
(
BTN_C
)Ë
°©e
 = 1-state;

172 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Sprites\My_settings.h

12 #i‚de‡
MY_SETTINGS_H


13 
	#MY_SETTINGS_H


	)

15 
	#PROJ_HIRES
 1

16 
	#PROJ_ENABLE_SOUND
 0

17 
	#SPRITE_COUNT
 4

18 
	#PROJ_SHOW_FPS_COUNTER


19 

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Sprites\gfxdata.h

2 
	~<°döt.h
>

5 c⁄° 
uöt16_t
 
	g•rôe1_∑l
[] = {

8 c⁄° 
uöt16_t
 
	g•rôe2_∑l
[] = {

11 c⁄° 
uöt16_t
 
	g•rôe3_∑l
[] = {

14 c⁄° 
uöt16_t
 
	g•rôe4_∑l
[] = {

19 c⁄° 
uöt16_t
 
	gbackground_∑l
[] = {

23 c⁄° 
uöt8_t
 
	g•rôe_bmp
[] = {

59 c⁄° 
uöt8_t
 
	gbackground_bmp
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Sprites\main.cpp

1 
	~"Pokôto.h
"

2 
	~"gfxd©a.h
"

3 
	gPokôto
::
C‹e
 
mygame
;

6 
	sMyS¥ôe
 {

7 
öt16_t
 
	mx
,
	my
,
	mw
,
	mh
,
	mvx
,
	mvy
;

10 c⁄° 
öt16_t
 
	g•ìd
 = 4;

11 c⁄° 
uöt8_t
 
	g•rôeCou¡
 = 4;

12 c⁄° 
uöt8_t
 
	g•rôeW
 = 32, 
	g•rôeH
 = 32;

13 
MyS¥ôe
 
	gmyS¥ôes
[
•rôeCou¡
];

16 c⁄° 
uöt16_t
 *
	g∑Àâes
[
•rôeCou¡
] = {

17 
•rôe1_∑l
,

18 
•rôe2_∑l
,

19 
•rôe3_∑l
,

20 
•rôe4_∑l
,

23 
	$maö
 () {

26 
öt16_t
 
°¨tX
 = 0, 
°¨tY
 = 0;

27 
i
=0; i < 
•rôeCou¡
; i++) {

30 
myS¥ôes
[
i
].
x
 = 
°¨tX
 + i*21;

31 
myS¥ôes
[
i
].
y
 = 
°¨tY
 + i*21;

32 
myS¥ôes
[
i
].
w
 = 
•rôeW
; myS¥ôes[i].
h
 = 
•rôeH
;

33 
myS¥ôes
[
i
].
vx
 = 
•ìd
; myS¥ôes[i].
vy
 = speed;

36 
mygame
.
di•œy
.
	`£tS¥ôeBôm≠
(
i
, 
•rôe_bmp
, 
∑Àâes
[i], 
myS¥ôes
[i].
x
, myS¥ôes[i].
y
);

40 
mygame
.
di•œy
.
≥rsi°í˚
 = 1;

43 
mygame
.
di•œy
.
∑Àâe
[0] = 
background_∑l
[0];

44 
mygame
.
di•œy
.
∑Àâe
[1] = 
background_∑l
[1];

45 
mygame
.
di•œy
.
∑Àâe
[2] = 
background_∑l
[2];

46 
mygame
.
di•œy
.
∑Àâe
[3] = 
background_∑l
[3];

48 
mygame
.
	`begö
();

50 
mygame
.
	`£tFømeR©e
(100);

53 
uöt8_t
 
isFú°Rounds
 = 2;

54 
mygame
.
	`isRu¬ög
()) {

57 if(
isFú°Rounds
 > 0) {

58 if(
mygame
.
	`upd©e
(
Ál£
)) {

60 
mygame
.
di•œy
.
	`døwBôm≠
(0, 0, 
background_bmp
);

61 
isFú°Rounds
--;

66 i‡(
mygame
.
	`upd©e
(
åue
)) {

68 
i
=0; i < 
•rôeCou¡
; i++) {

70 
öt16_t
 
x
 = 
myS¥ôes
[
i
].x, 
y
 = mySprites[i].y;

71 
öt16_t
 
w
 = 
myS¥ôes
[
i
].w, 
h
 = mySprites[i].h;

74 
x
 +
myS¥ôes
[
i
].
vx
; 
y
 +myS¥ôes[i].
vy
;

77 i‡(
x
 < -
•rôeW
) {

78 
x
 = -
•rôeW
;

79 
myS¥ôes
[
i
].
vx
 = 
•ìd
;

81 i‡(
x
 >
mygame
.
di•œy
.
	`gëWidth
(Ë- 
w
 + 
•rôeW
) {

82 
x
 = 
mygame
.
di•œy
.
	`gëWidth
(Ë- 1 - 
w
 + 
•rôeW
;

83 
myS¥ôes
[
i
].
vx
 = -
•ìd
;

85 i‡(
y
 < -
•rôeH
) {

86 
y
 = -
•rôeH
;

87 
myS¥ôes
[
i
].
vy
 = 
•ìd
;

89 i‡(
y
 >
mygame
.
di•œy
.
	`gëHeight
(Ë- 
h
 + 
•rôeH
) {

90 
y
 = 
mygame
.
di•œy
.
	`gëHeight
(Ë- 1 - 
h
 + 
•rôeH
;

91 
myS¥ôes
[
i
].
vy
 = -
•ìd
;

95 
mygame
.
di•œy
.
	`£tS¥ôePos
(
i
, 
x
, 
y
);

98 
myS¥ôes
[
i
].
x
 = x; myS¥ôes[i].
y
 = y;

104 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Squiddy\My_settings.h

15 #i‚de‡
MY_SETTINGS_H


16 
	#MY_SETTINGS_H


	)

18 
	#PROJ_HIRES
 0

19 
	#PROJ_ENABLE_SOUND
 1

20 
	#PROJ_STREAMING_MUSIC
 1

21 
	#PROJ_AUD_FREQ
 22050

	)

22 
	#PROJ_STREAM_TO_DAC
 1

23 
	#PROJ_GBSOUND
 0

24 
	#PROJ_ENABLE_SYNTH
 0

25 
	#PROJ_GAMEBUINO
 0

26 
	#PROJ_USE_PWM
 0

27 

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Squiddy\Squiddy.cpp

1 
	~"Pokôto.h
"

2 
	gPokôto
::
C‹e
 
game
;

3 
	gwidth
=110;

4 
	gheight
=88;

9 
öt16_t
 
lû_m≠
[];

10 
öt16_t
 
tûe_èbÀ
[];

11 
uöt8_t
 *
bôm≠_èbÀ
[];

12 
uöt8_t
 
squiddy
[];

13 
uöt8_t
 
grid
[];

14 
uöt8_t
 
bÆl
[];

15 
uöt8_t
 
hóπ
[];

16 
uöt8_t
 
Á˚
[];

17 
uöt8_t
 
cw
[];

18 c⁄° *
msg_èbÀ
[64];

19 
	#TWOPI
 (3.14159265359 * 2)

20 
	#TILESIZE
 (10)

21 
	#MINSX
 (30)

22 
	#MAXSX
 (80)

23 
	#MAXSY
 (60)

	)

24 
	#MINSY
 (20)

	)

26 
	#S_TITLE
 ( 0)

	)

27 
	#S_MAP
 ( 1)

	)

28 
	#S_TRANSITION
 (2)

	)

29 
	#S_PLAY
 (3)

	)

30 
	#S_WON
 (4)

	)

31 
	#S_LOST
 (5)

	)

33 
	#WORDSPERLEVEL
 (72)

	)

35 c⁄° 
	gNUM_LEVELS
 = 32;

36 
	sld©a
{

37 
	m°¨tx
;

38 
	m°¨ty
;

39 
	m°¨èngÀ
;

40 
	mdi°
;

41 
	m•ìd
;

42 
	m©åa˘
;

44 
ld©a
 
	gÀvñd©a
[
NUM_LEVELS
] = {

92 
öt8_t
 
	gshi·vÆ
[] = {

100 
öt16_t
 
	$ªad_m≠
(
x
, 
y
, 
Àvñ
)

102 
ödex
;

103 
cﬁ
;

104 
uöt16_t
 
d©a
;

105 i‡((
x
 < 0Ë|| (
y
 < 0))  (0);

106 
ödex
 = ((
Àvñ
 -1Ë* 
WORDSPERLEVEL
Ë+ ((
y
/
TILESIZE
) * 4);

107 
cﬁ
 = 
x
/
TILESIZE
;

108 
ödex
 +
cﬁ
/4;

109 
d©a
 = 
lû_m≠
[
ödex
];

111 
d©a
 = d©®>> 
shi·vÆ
[
cﬁ
];

112  (
d©a
 & 0x0f);

113 
	}
}

120 
	$døw_w‹ld
(
x°¨t
, 
y°¨t
, 
°ï
, 
ödex
,
a‰ame
){

121 
i
,
x
,
y
,
j
;

122 
uöt16_t
 
ãmp
;

123 
cﬁ‹
;

124 
row°¨t
;

125 
xfú°
;

127 
xfú°
 = 
x°¨t
;

128 
row°¨t
 = 0;

129  
xfú°
 < (1 - 
°ï
))

131 
xfú°
 +
°ï
;

132 
row°¨t
++;

135 
y

y°¨t
;

136 
j
 = 0;

137  
y
 < (1-
°ï
))

139 
y
 = y + 
°ï
;

140 
j
++;

142 
ödex
 +
j
 << 2;

143 ; (
y
 < 
height
Ë&& (
j
 < 18); y+
°ï
, j++, 
ödex
 += 4)

145 
x
 = 
xfú°
;

146 
i
 = 
row°¨t
; (ò< 16Ë&& (
x
 < 
width
Ë; i++, x +
°ï
)

148 
ãmp
 = 
lû_m≠
[
ödex
 + (
i
 >> 2)];

149 
cﬁ‹
 = (
ãmp
 >> 
shi·vÆ
[
i
]) & 0x0f;

150 i‡(
cﬁ‹
 > 0)

152 i‡(
cﬁ‹
 > 3)

153 
game
.
di•œy
.
	`døwBôm≠
(
x
,
y
,
bôm≠_èbÀ
[
cﬁ‹
] + 
a‰ame
);

155 
game
.
di•œy
.
	`døwBôm≠
(
x
,
y
,
bôm≠_èbÀ
[
cﬁ‹
]);

160 
	}
}

167 
	$døw_m≠
(
x°¨t
, 
y°¨t
, 
°ï
, 
ödex
){

168 
i
,
x
,
y
,
j
;

169 
uöt16_t
 
ãmp
;

170 
cﬁ‹_ödex
;

171 
row°¨t
;

172 
xfú°
;

174 
xfú°
 = 
x°¨t
;

175 
row°¨t
 = 0;

176  
xfú°
 < (1 - 
°ï
))

178 
xfú°
 +
°ï
;

179 
row°¨t
++;

182 
y

y°¨t
;

183 
j
 = 0;

184  
y
 < (1-
°ï
))

186 
y
 = y + 
°ï
;

187 
j
++;

189 
ödex
 +
j
 << 2;

190 ; (
y
 < 
height
Ë&& (
j
 < 18); y+
°ï
, j++, 
ödex
 += 4)

192 
x
 = 
xfú°
;

193 
i
 = 
row°¨t
; (ò< 16Ë&& (
x
 < 
width
Ë; i++, x +
°ï
)

195 
ãmp
 = 
lû_m≠
[
ödex
 + (
i
 >> 2)];

196 
cﬁ‹_ödex
 = (
ãmp
 >> 
shi·vÆ
[
i
]) & 0x0f;

197 i‡(
cﬁ‹_ödex
 > 0)

199 
game
.
di•œy
.
cﬁ‹
 = 
tûe_èbÀ
[
cﬁ‹_ödex
];

200 
game
.
di•œy
.
	`fûlRe˘™gÀ
(
x
,
y
,
°ï
,step);

206 
	}
}

214 
	$døw_ãxtbox
(
x
, 
y
,
boxÀn
, 
boxheight
, 
bcﬁ‹
, 
‰ameCﬁ‹
)

217 
game
.
di•œy
.
cﬁ‹
 = 
bcﬁ‹
;

218 
game
.
di•œy
.
	`fûlRe˘™gÀ
(
x
-2,
y
-3,
boxÀn
,
boxheight
);

219 
game
.
di•œy
.
cﬁ‹
 = 
‰ameCﬁ‹
;

220 
game
.
di•œy
.
	`døwRe˘™gÀ
(
x
-3,
y
 -4,
boxÀn
+1,
boxheight
+2);

222 
	}
}

225 
	$maö
(){

227 
xw‹ld
, 
yw‹ld
;

228 
bÆlwx
, 
bÆlwy
;

229 
bÆlsx
, 
bÆlsy
;

230 
squidwx
,
squidwy
;

231 
squidsx
,
squidsy
;

232 
ªÀa£_cou¡
;

233 
Àvñ
;

234 
°©e
, 
°©e_cou¡
;

235 
ld©a
 *
Õå
;

236 
di°
;

237 
sx
,
sy
;

238 
ã°
;

239 
mag_Êags
;

240 
™im‰ame
;

241 
©åa˘
;

242 
zoomsize
;

243 
boﬁón
 
bÆl_•ös
 = 
åue
;

244 
™gÀ
, 
™gÀöc
;

245 
game
.
sound
.
	`∂ayMusicSåóm
("music/underclk.snd");

246 
game
.
	`begö
();

247 
game
.
sound
.
	`∂ayMusicSåóm
();

248 
game
.
di•œy
.
width
 = width;

249 
game
.
di•œy
.
height
 = height;

250 
game
.
	`£tFømeR©e
(20);

251 
game
.
di•œy
.
	`lﬂd565PÆëã
(
def565∑Àâe
);

252 
game
.
di•œy
.
	`£tF⁄t
(
f⁄t5x7
);

253 
xw‹ld
 = 0;

254 
yw‹ld
 = 0;

255 
™gÀ
 = 0.0;

256 
™gÀöc
 = 0.1 ;

257 
squidwx
 = 50;

258 
squidwy
 = 40;

259 
™im‰ame
 = 0;

261 
Àvñ
 = 1;

262 
°©e
 = 
S_TITLE
;

263 
°©e_cou¡
 = 0;

266 
game
.
	`isRu¬ög
()) {

267 i‡(
game
.
	`upd©e
()) {

271 i‡(
game
.
buâ⁄s
.
	`ª≥©
(
BTN_UP
,0)){

272 
yw‹ld
++;

274 i‡(
game
.
buâ⁄s
.
	`ª≥©
(
BTN_DOWN
,0)){

275 
yw‹ld
--;

277 i‡(
game
.
buâ⁄s
.
	`ª≥©
(
BTN_LEFT
,0)){

278 
xw‹ld
++;

280 i‡(
game
.
buâ⁄s
.
	`ª≥©
(
BTN_RIGHT
,0)){

281 
xw‹ld
--;

284 
°©e
)

290 
S_TITLE
:

292 
i
,
j
;

294 
i
 = 0 ; i < 120 ; i = i + 10)

296 
j
 = 0; j < 90 ; j= j + 10)

298 
game
.
di•œy
.
	`døwBôm≠
(
i
,
j
,
grid
);

301 
	`døw_ãxtbox
(10,10,12 * 6, 12, 0, 
C_DARKGREEN
);

302 
game
.
di•œy
.
cﬁ‹
 = 
C_GREEN
;

303 
game
.
di•œy
.
	`£tCurs‹
(10,10);

304 
game
.
di•œy
.
	`¥öt
("Aphrodite's");

306 
	`døw_ãxtbox
(30,30,8 * 6, 12, 0, 
C_DARKGREEN
);

307 
game
.
di•œy
.
cﬁ‹
 = 
C_GREEN
;

308 
game
.
di•œy
.
	`£tCurs‹
(30,30);

310 
game
.
di•œy
.
	`¥öt
("SQUIDDY");

313 
	`døw_ãxtbox
(20,77,11 * 6, 12, 0, 
C_WHITE
);

314 
game
.
di•œy
.
	`£tCurs‹
(20,77);

315 
game
.
di•œy
.
cﬁ‹
 = 
C_WHITE
;

316 
game
.
di•œy
.
	`¥öt
(" 2017 DSA");

317 
game
.
di•œy
.
	`døwBôm≠
(20,77,
cw
);

319 
°©e_cou¡
++;

321 i‡((
°©e_cou¡
 & 0x0f) > 3)

323 
	`døw_ãxtbox
(30,55,7 * 6, 12, 0, 3);

324 
game
.
di•œy
.
	`£tCurs‹
(30,55);

325 
game
.
di•œy
.
cﬁ‹
 = 
C_GREEN
;

326 
game
.
di•œy
.
	`¥öt
("PRESS A");

329 i‡(
game
.
buâ⁄s
.
	`ª≥©
(
BTN_A
,0))

330 
°©e
 = 
S_MAP
;

331 
ªÀa£_cou¡
 = 0;

335 
S_MAP
:

337 
game
.
di•œy
.
cﬁ‹
 = 
C_WHITE
;

338 
game
.
di•œy
.
	`£tCurs‹
(3,3);

341 i‡(
msg_èbÀ
[
Àvñ
 *2] != 0)

342 
game
.
di•œy
.
	`¥öt
(
msg_èbÀ
[
Àvñ
 * 2]);

343 
game
.
di•œy
.
	`£tCurs‹
(3,12);

344 i‡(
msg_èbÀ
[(
Àvñ
 *2) + 1] != 0)

345 
game
.
di•œy
.
	`¥öt
(
msg_èbÀ
[(
Àvñ
 * 2) + 1]);

347 i‡(
Àvñ
 == 9)

349 
game
.
di•œy
.
	`døwBôm≠
(16, 3,
hóπ
);

350 
game
.
di•œy
.
	`døwBôm≠
(16,12,
hóπ
);

352 i‡(
Àvñ
 == 18)

354 
game
.
di•œy
.
	`døwBôm≠
(22, 3,
Á˚
);

357 
	`døw_m≠
(30,20,3,(
Àvñ
-1) * 72);

358 
Õå
 = &
Àvñd©a
[
Àvñ
];

360 
sx
 = (Ë(
Õå
->
°¨tx
 * 3 ) + 30;

361 
sy
 = (Ë(
Õå
->
°¨ty
 * 3) + (3 * 3) + 20;

362 
game
.
di•œy
.
cﬁ‹
 = 
C_RED
;

363 
game
.
di•œy
.
	`døwLöe
(
sx
 - 3,
sy
 -3,sx + 3,sy + 3);

364 
game
.
di•œy
.
	`døwLöe
(
sx
 - 3,
sy
 +3,sx + 3,sy - 3);

366 i‡(
game
.
buâ⁄s
.
	`ª≥©
(
BTN_A
,0) ||

367 
game
.
buâ⁄s
.
	`ª≥©
(
BTN_LEFT
,0) ||

368 
game
.
buâ⁄s
.
	`ª≥©
(
BTN_RIGHT
,0))

370 i‡(
ªÀa£_cou¡
 > 1)

372 i‡(
game
.
buâ⁄s
.
	`ª≥©
(
BTN_A
,0))

374 i‡(
Àvñ
 > 30)Üevel = 1;

375 
Õå
 = &
Àvñd©a
[
Àvñ
];

381 
zoomsize
 = 3;

382 
squidwx
 = (
Õå
->
°¨tx
 * 
zoomsize
);

383 
squidwy
 = (
Õå
->
°¨ty
 * 
zoomsize
) + (3 * zoomsize);

384 
xw‹ld
 = (
width
/2Ë- 
squidwx
;

385 
yw‹ld
 = (
height
/2Ë- 
squidwy
 - 15;

386 
°©e_cou¡
 = 0;

387 
™gÀ
 = 
Õå
->
°¨èngÀ
 * 
TWOPI
;

388 
™gÀöc
 = 
Õå
->
•ìd
 * (
TWOPI
/20);

389 
di°
 = (Ë(
Õå
->di° * 
TILESIZE
);

390 
bÆl_•ös
 = 
åue
;

391 
°©e
 = 
S_TRANSITION
 ;

392 
©åa˘
 = 
Õå
->attract / 20.0;

394 i‡(
game
.
buâ⁄s
.
	`ª≥©
(
BTN_LEFT
,0))

396 i‡(
Àvñ
 > 1)Üevel =Üevel -1;

398 i‡(
game
.
buâ⁄s
.
	`ª≥©
(
BTN_RIGHT
,0))

400 i‡(
Àvñ
 < 30)Üevel =Üevel +1;

402 
ªÀa£_cou¡
 = 0;

408 i‡(
ªÀa£_cou¡
 < 5)Ñelease_count++ ;

412 
S_TRANSITION
:

414 
zoomsize
 = 3 + (
°©e_cou¡
);

415 
squidwx
 = (
Õå
->
°¨tx
 * 
zoomsize
);

416 
squidwy
 = (
Õå
->
°¨ty
 * 
zoomsize
) + (3 * zoomsize);

417 
xw‹ld
 = (
width
/2Ë- 
squidwx
;

418 
yw‹ld
 = (
height
/2Ë- 
squidwy
 - 15;

419 
	`døw_m≠
(
xw‹ld
,
yw‹ld
,
zoomsize
,(
Àvñ
-1) * 72);

421 
°©e_cou¡
++;

422 i‡(
°©e_cou¡
 > (7))

424 
squidwx
 = (
Õå
->
°¨tx
 * 
TILESIZE
);

425 
squidwy
 = (
Õå
->
°¨ty
 * 
TILESIZE
) + (3 * TILESIZE);

426 
xw‹ld
 = (
width
/2Ë- 
squidwx
;

427 
yw‹ld
 = (
height
/2Ë- 
squidwy
 - 15;

428 
°©e
 = 
S_PLAY
;

434 
S_WON
:

435 
S_LOST
:

437 
boxÀn
,
cury
;

438 
bÆlsx
 = 
bÆlwx
 + 
xw‹ld
;

439 
bÆlsy
 = 
bÆlwy
 + 
yw‹ld
;

441 
™im‰ame
++;

442 i‡(
™im‰ame
 > 9)ánimframe = 0;

444 
game
.
di•œy
.
övisibÀcﬁ‹
 = 17 ;

445 
	`døw_w‹ld
(
xw‹ld
,
yw‹ld
,10,(
Àvñ
 -1Ë* 72,
™im‰ame
 * 52);

447 
game
.
di•œy
.
övisibÀcﬁ‹
 = 15 ;

449 
game
.
di•œy
.
cﬁ‹
 = 0;

450 
game
.
di•œy
.
	`døwLöe
(
squidsx
 + 5,
squidsy
 + 5,
bÆlsx
+5,
bÆlsy
+5);

452 
game
.
di•œy
.
	`døwBôm≠
(
squidsx
,
squidsy
,
squiddy
);

454 
game
.
di•œy
.
	`døwBôm≠
(
bÆlsx
,
bÆlsy
,
bÆl
);

455 
game
.
di•œy
.
cﬁ‹
 = 0;

456 i‡(
°©e
 =
S_WON
Ë
boxÀn
 = 6 * 8; boxlen = 6 * 9;

457 i‡(
squidsy
 > 50Ë
cury
 = 20; cury = 70;

459 
game
.
di•œy
.
	`£tCurs‹
(30,
cury
);

460 
	`døw_ãxtbox
(30,
cury
,
boxÀn
,12,
C_BLACK
,
C_DARKGREEN
);

466 
game
.
di•œy
.
cﬁ‹
 = 
C_GREEN
;

467 i‡(
°©e
 =
S_WON
)

469 
game
.
di•œy
.
	`¥öt
("YOU WON!");

473 
game
.
di•œy
.
	`¥öt
("YOU LOST!");

475 i‡(
game
.
buâ⁄s
.
	`ª≥©
(
BTN_A
,0))

477 i‡(
ªÀa£_cou¡
 > 4)

479 i‡(
°©e
 =
S_WON
Ë
Àvñ
 =Üevel +1;

480 
ªÀa£_cou¡
 = 0;

481 
°©e
 = 
S_MAP
;

486 i‡(
ªÀa£_cou¡
 < 5)Ñelease_count++ ;

490 
S_PLAY
 :

492 i‡(
bÆl_•ös
 =
åue
)

494 
™gÀ
 +
™gÀöc
;

495 
bÆlwx
 = (
	`sö
(
™gÀ
Ë* 
di°
Ë+ 
squidwx
 ;

496 
bÆlwy
 = (
	`cos
(
™gÀ
Ë* 
di°
Ë+ 
squidwy
 ;

500 
™gÀ
 -
™gÀöc
;

501 
squidwx
 = (
	`sö
(
™gÀ
Ë* 
di°
Ë+ 
bÆlwx
 ;

502 
squidwy
 = (
	`cos
(
™gÀ
Ë* 
di°
Ë+ 
bÆlwy
 ;

505 i‡(
™gÀ
 > 
TWOPI
)ángle -= TWOPI;

506 i‡(
™gÀ
 < -
TWOPI
)ángle += TWOPI;

508 
squidsx
 = (Ë
squidwx
 + 
xw‹ld
;

509 
squidsy
 = (Ë
squidwy
 + 
yw‹ld
;

512 i‡(
squidsx
 < 
MINSX
)

514 
xw‹ld
 +
MINSX
 - 
squidsx
;

515 
squidsx
 = 
MINSX
;

518 i‡(
squidsx
 > 
MAXSX
)

520 
xw‹ld
 +
MAXSX
 - 
squidsx
;

521 
squidsx
 = 
MAXSX
;

523 i‡(
squidsy
 < 
MINSY
)

525 
yw‹ld
 +
MINSY
 - 
squidsy
;

526 
squidsy
 = 
MINSY
;

528 i‡(
squidsy
 > 
MAXSY
)

530 
yw‹ld
 +
MAXSY
 - 
squidsy
;

531 
squidsy
 = 
MAXSY
;

534 
bÆlsx
 = 
bÆlwx
 + 
xw‹ld
;

535 
bÆlsy
 = 
bÆlwy
 + 
yw‹ld
;

538 
game
.
di•œy
.
övisibÀcﬁ‹
 = 17 ;

539 
™im‰ame
++;

540 i‡(
™im‰ame
 > 9)ánimframe = 0;

542 
	`døw_w‹ld
(
xw‹ld
,
yw‹ld
,10,(
Àvñ
 -1Ë* 72,(
™im‰ame
) * 52);

544 
game
.
di•œy
.
övisibÀcﬁ‹
 = 15 ;

546 
game
.
di•œy
.
cﬁ‹
 = 0;

547 
game
.
di•œy
.
	`døwLöe
(
squidsx
 + 5,
squidsy
 + 5,
bÆlsx
+5,
bÆlsy
+5);

549 
game
.
di•œy
.
	`døwBôm≠
(
squidsx
,
squidsy
,
squiddy
);

551 
game
.
di•œy
.
	`døwBôm≠
(
bÆlsx
,
bÆlsy
,
bÆl
);

554 
mag_Êags
 = 0;

555 
ã°
 = 
	`ªad_m≠
(
bÆlwx
, 
bÆlwy
,
Àvñ
);

556 
mag_Êags
 |1 << 
ã°
;

558 i‡(((()
bÆlwx
) % 10) >= 1)

560 
ã°
 = 
	`ªad_m≠
(
bÆlwx
+9, 
bÆlwy
,
Àvñ
);

561 
mag_Êags
 |1 << 
ã°
;

563 i‡(((()
bÆlwy
) % 10) >= 1)

565 
ã°
 = 
	`ªad_m≠
(
bÆlwx
, 
bÆlwy
+9,
Àvñ
);

566 
mag_Êags
 |1 << 
ã°
;

567 i‡(((()
bÆlwx
) % 10) >= 1)

569 
ã°
 = 
	`ªad_m≠
(
bÆlwx
+9, 
bÆlwy
+9,
Àvñ
);

570 
mag_Êags
 |1 << 
ã°
;

574 i‡(
mag_Êags
 & (1 << 4)Ë{
bÆlwx
 +
©åa˘
; 
squidwx
 +=áttract;}

575 i‡(
mag_Êags
 & (1 << 5)Ë{
bÆlwy
 +
©åa˘
; 
squidwy
 +=áttract;}

576 i‡(
mag_Êags
 & (1 << 6)Ë{
bÆlwx
 -
©åa˘
; 
squidwx
 -=áttract;}

577 i‡(
mag_Êags
 & (1 << 7)Ë{
bÆlwy
 -
©åa˘
; 
squidwy
 -=áttract;}

584 
ã°
 = 
	`ªad_m≠
(
squidwx
+ 5, 
squidwy
+8,
Àvñ
);

588 i‡(
ã°
 == 0)

590 
°©e
 = 
S_LOST
;

591 
ªÀa£_cou¡
 = 0;

593 i‡(
ã°
 == 2)

595 
°©e
 = 
S_WON
;

596 
ªÀa£_cou¡
 = 0;

599 i‡(
game
.
buâ⁄s
.
	`ª≥©
(
BTN_A
,0))

601 i‡(
ªÀa£_cou¡
 > 1)

603 
bÆl_•ös
 = !ball_spins;

604 
™gÀ
 =ángle + 3.14159265359;

605 
ªÀa£_cou¡
 = 0;

610 i‡(
ªÀa£_cou¡
 < 5)Ñelease_count++ ;

617 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Squiddy\qdatatables.cpp

9 
	~"Pokôto.h
"

13 
uöt8_t
 
	ggrid
[] = { 10,10,

29 
uöt8_t
 
	gup_¨row
[] = { 10,10,

163 
uöt8_t
 
	ggﬂl
[] = { 10,10,

177 
uöt8_t
 
	gdown_¨row
[] = {

313 
uöt8_t
 
	gÀ·_¨row
[] = {

449 
uöt8_t
 
	gright_¨row
[] = {

581 
uöt8_t
 
	gsquiddy
[] = { 10,10,

595 
uöt8_t
 
	gsquiddybg
[] = { 10,10,

609 
uöt8_t
 
	gbÆl
[] = { 10,10,

623 
uöt8_t
 
	ghóπ
[] = { 8,8,

637 
uöt8_t
 
	gcw
[] = { 8,8,

650 
uöt8_t
 
	gÁ˚
[] = { 10,8,

662 
uöt8_t
 *
	gbôm≠_èbÀ
[] = {

663 0,
grid
,
gﬂl
,

664 
squiddybg
,

666 
right_¨row
,

667 
down_¨row
,

668 
À·_¨row
,

669 
up_¨row


673 
öt16_t
 
	gtûe_èbÀ
[] = {

675 
C_LIGHTGRAY
,

676 
C_DARKGREEN
,

677 
C_RED
,

678 
C_PURPLE
,

679 
C_PURPLE
,

680 
C_PURPLE
,

681 
C_PURPLE
,

684 
uöt16_t
 
	glû_m≠
[] = {

1420 c⁄° *
	gmsg_èbÀ
[64] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\SynthTest\My_settings.h

12 #i‚de‡
MY_SETTINGS_H


13 
	#MY_SETTINGS_H


	)

15 
	#PROJ_HIRES
 0

16 
	#PROJ_ENABLE_SOUND
 1

17 
	#PROJ_ENABLE_SYNTH
 1

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\SynthTest\SynthTest.cpp

1 
	~"Pokôto.h
"

2 
	~"Sy¡h.h
"

4 
	gPokôto
::
C‹e
 
game
;

5 
	gPokôto
::
Di•œy
 
di•
;

6 
	gPokôto
::
Sound
 
¢d
;

7 
	gPokôto
::
Buâ⁄s
 
bä
;

8 #i‚de‡
POK_SIM


9 
DigôÆOut
 
íabÀ
(
EXT4
);

12 
	gt⁄e‰eq
=46;

13 
uöt8_t
 
	gam∂ôude
 = 255;

14 
uöt8_t
 
	gwavëy≥
 = 1, 
	g¨pmode
=1;

15 
uöt32_t
 
	gch™ged
 = 1;

16 
	gnŸe°r
[6];

17 
uöt8_t
 
	gsbödx
=0,
	gsbx
=0,
	g¥evy
=0;

20 
	$maö
()

22 #i‚de‡
POK_SIM


23 
íabÀ
=0;

25 
game
.
	`begö
();

27 
di•
.
≥rsi°í˚
 = 
åue
;

28 
di•
.
cﬁ‹
=
wavëy≥
+1;

29 
di•
.
bgcﬁ‹
=0;

30 
uöt8_t
 
sbödx
=0;

31 
ﬁdvﬁ
=0;

32 
löe˚¡î
 = (
di•
.
height
/4);

33 
löe˚¡î
 *=2;

34 
löe˚¡î
 += 0;

35 
¢d
.
	`ampE«bÀ
(1);

36 
¢d
.
	`∂ayT⁄e
(1,
t⁄e‰eq
,
am∂ôude
,
wavëy≥
,
¨pmode
);

39 
¢d
.
	`∂ayT⁄e
(2,
t⁄e‰eq
+12,
am∂ôude
,
wavëy≥
,
¨pmode
);

41 
di•
.
	`˛ór
();

42 
di•
.
	`¥öt
("Frq:");

43 
	`gëNŸeSåög
(
nŸe°r
,
t⁄e‰eq
);

44 
di•
.
	`¥öén
(
nŸe°r
);

45 
di•
.
	`¥öt
("Vol:");

46 
di•
.
	`¥öén
(()
am∂ôude
);

47 
di•
.
	`¥öt
("Wav:");

48 
di•
.
	`¥öt
(()
wavëy≥
);

49 
wavëy≥
) {

51 
di•
.
	`¥öén
(" Off");;

53 
di•
.
	`¥öén
(" Square");;

55 
di•
.
	`¥öén
(" Saw");;

57 
di•
.
	`¥öén
(" Triang");;

59 
di•
.
	`¥öén
(" Noise");;

61 
di•
.
	`¥öén
(" SqNois");;

63 
di•
.
	`¥öt
("Vol:");

64 #i‚de‡
POK_SIM


65 
di•
.
	`¥öt
(()
Pokôto
::
	`gëHWvﬁume
());

66 
di•
.
	`¥öt
(", ");

68 
di•
.
	`¥öén
(()
¢d
.
	`gëVﬁume
());

69 
di•
.
	`lcdRe‰esh
(di•.
s¸ìnbuf„r
);

73 
game
.
	`isRu¬ög
()) {

75 #ifde‡
POK_SIM


76 
	#DEBOU
 2048*32

	)

78 
	#DEBOU
 256

	)

82 i‡(
ch™ged
 == 0) {

83 if(
bä
.
	`upBä
()Ë{ 
am∂ôude
++; 
ch™ged
 = 
DEBOU
; }

84 if(
bä
.
	`downBä
()Ë{ 
am∂ôude
--; 
ch™ged
 = 
DEBOU
; }

85 if(
bä
.
	`À·Bä
(Ë&& (
t⁄e‰eq
 > 0)Ë{Å⁄e‰eq --; 
ch™ged
 = 
DEBOU
; }

86 if(
bä
.
	`rightBä
(Ë&& (
t⁄e‰eq
 < 88)Ë{Å⁄e‰eq ++; 
ch™ged
 = 
DEBOU
; }

87 if(
bä
.
	`ªÀa£d
(
BTN_A
Ë&& 
wavëy≥
 > 0 ) { wavëy≥--; 
ch™ged
 = 
DEBOU
*10;}

88 if(
bä
.
	`ªÀa£d
(
BTN_B
Ë&& 
wavëy≥
 < 5 ) { wavëy≥++; 
ch™ged
 = 
DEBOU
*10;}

89 i‡(
¢d
.
	`gëVﬁume
(Ë!
ﬁdvﬁ
Ë
ch™ged
=
DEBOU
;

91 i‡(
ch™ged
) {

92 
di•
.
	`˛ór
();

93 
di•
.
cﬁ‹
=0;

94 
di•
.
	`fûlRe˘™gÀ
(0,0,109,34);

95 
di•
.
cﬁ‹
=
wavëy≥
+1;

96 
di•
.
bgcﬁ‹
=0;

97 
di•
.
	`¥öt
("Frq:");

98 
	`gëNŸeSåög
(
nŸe°r
,
t⁄e‰eq
);

99 
di•
.
	`¥öén
(
nŸe°r
);

100 
di•
.
	`¥öt
("Vol:");

101 
di•
.
	`¥öén
(()
am∂ôude
);

102 
di•
.
	`¥öt
("Wav:");

103 
di•
.
	`¥öt
(()
wavëy≥
);

104 
wavëy≥
) {

106 
di•
.
	`¥öén
(" Off");;

108 
di•
.
	`¥öén
(" Square");;

110 
di•
.
	`¥öén
(" Saw");;

112 
di•
.
	`¥öén
(" Triang");;

114 
di•
.
	`¥öén
(" Noise");;

116 
di•
.
	`¥öén
(" SqNois");;

118 
di•
.
	`¥öt
("Vol:");

119 #i‚de‡
POK_SIM


120 
di•
.
	`¥öt
(()
Pokôto
::
	`gëHWvﬁume
());

121 
di•
.
	`¥öt
(", ");

123 
di•
.
	`¥öén
(()
¢d
.
	`gëVﬁume
());

124 
¢d
.
	`∂ayT⁄e
(1,
t⁄e‰eq
,
am∂ôude
,
wavëy≥
,
¨pmode
);

125 
ﬁdvﬁ
 = (Ë
¢d
.
	`gëVﬁume
();

127 
¢d
.
	`∂ayT⁄e
(2,
t⁄e‰eq
+12,
am∂ôude
,
wavëy≥
,
¨pmode
);

129 } 
ch™ged
--;

130 
di•
.
cﬁ‹
=0;

131 
di•
.
	`døwCﬁumn
(
sbx
,38,di•.
height
);

132 
di•
.
cﬁ‹
=
wavëy≥
+1;

133 
uöt8_t
 
tödex
 = 
sbödx
*2;

134 
öt16_t
 
y
 = 
löe˚¡î
 + ((()128-(
soundbuf
[
tödex
]))>>2);

135 
di•
.
	`døwLöe
(
sbx
-1,
¥evy
,sbx,
y
);

136 
game
.
	`upd©e
();

137 
di•
.
cﬁ‹
=0;

138 
¥evy
=
y
;

139 
sbx
++;
sbödx
++;

140 i‡(
sbx
>
di•
.
width
-1) {sbx=0;}

143 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\SynthTest\beat_11025.h

1 #i‚de‡
BEAT_11025_RAW_H


2 
	#BEAT_11025_RAW_H


	)

4 c⁄° 
	gbót_11025_øw
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\TestCrashScreen\My_settings.h

12 #i‚de‡
MY_SETTINGS_H


13 
	#MY_SETTINGS_H


	)

15 
	#PROJ_HIRES
 1

16 
	#PROJ_ENABLE_SOUND
 1

17 

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\TestCrashScreen\main.cpp

3 
	~"Pokôto.h
"

5 
	gPokôto
::
C‹e
 
mygame
;

6 "C" 
CheckSèck
();

9 
	$RecursiveFunc
 (
öt16_t
 
ªcursi⁄Levñ
)

12 
ã°
[256];

16 
	`CheckSèck
();

19 i‡(
ªcursi⁄Levñ
>0) {

20 
	`RecursiveFunc
–
ªcursi⁄Levñ
 - 1 );

23 
mygame
.
di•œy
.
	`¥öén
("Current stackÖointer: ");

24 
mygame
.
di•œy
.
	`¥öt
("0x"); mygame.di•œy.
	`¥öén
((
uöt32_t
)&
ã°
, 16);

26 
	}
}

29 
	$maö
 () {

30 
öt16_t
 
maxRecursi⁄Levñ
 = 1;

31 
mygame
.
	`begö
();

33 
mygame
.
	`isRu¬ög
()) {

34 i‡(
mygame
.
	`upd©e
()) {

36 #i‚de‡
POK_SIM


37 
mygame
.
di•œy
.
	`¥öt
("RecursionÜevel: ");

38 
mygame
.
di•œy
.
	`¥öén
(
maxRecursi⁄Levñ
);

39 
	`RecursiveFunc
–
maxRecursi⁄Levñ
 );

40 
maxRecursi⁄Levñ
++;

44 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Tracker\Arrays.cpp

1 
	~"Aºays.h
"

3 c⁄° 
	gnŸeLëãrs
[12][2] = {{'B', '-'},{'C', '-'}, {'C', '#'}, {'D', '-'}, {'D', '#'}, {'E', '-'}, {'F', '-'},

6 c⁄° * 
	gwaveNames
[]={"OFF", "SQUARE", "SAW", "TRIANGLE", "NOISE", "TONE NOISE"};

7 c⁄° * 
	g¨pModes
[]={"OFF" ,"M Slow", "M Med", "M Fast", "m Slow", "m Med", "m Fast", "Vib Slow", "Vib Med", "Vib Fast", "Oct Slow", "Oct Med", "Oct Fast", "Funk Slow", "Funk Med", "Funk Fast"};

9 c⁄° 
	grboyCh¨
[] = "Rboy Tracker song file\n";

10 c⁄° 
	gBPMCh¨
[] = "BPM=";

11 c⁄° 
	gœ°P©ã∫Ch¨
[] = "LastÖattern=";

12 c⁄° 
	glo›ToCh¨
[] = "LoopÅo=";

13 c⁄° 
	g∑tchesCh¨
[] = "Patches=";

14 c⁄° 
	gblockSeqCh¨
[] = "Block sequence ";

15 c⁄° 
	gblockCh¨
[] = "Block ";

16 c⁄° 
	growCh¨
[] = "Ñow ";

17 c⁄° 
	gunknownCh¨
[] = "0.030000";

18 c⁄° 
	gwaveCh¨
[] = "Waveform=";

19 c⁄° 
	gvﬁCh¨
[] = "Volume=";

20 c⁄° 
	gpôchR©eCh¨
[] = "Pitch bendÑate=";

21 c⁄° 
	gpôchMaxCh¨
[] = "Pitch bend max=";

22 c⁄° 
	gvibCh¨
[] = "VibratoÑate=";

23 c⁄° 
	g¨pCh¨
[] = "Arpeggio mode=";

24 c⁄° 
	gADSRCh¨
[] = "ADSR=";

25 c⁄° 
	g©èckCh¨
[] = "Attack=";

26 c⁄° 
	gdeˇyCh¨
[] = "Decay=";

27 c⁄° 
	gsu°aöCh¨
[] = "Sustain=";

28 c⁄° 
	gªÀa£Ch¨
[] = "Release=";

29 c⁄° 
	glo›Ch¨
[] = "Loop=";

30 c⁄° 
	gechoCh¨
[] = "Echo=";

31 c⁄° 
	govîdriveCh¨
[] = "Overdrive=";

32 c⁄° 
	gdrumCh¨
[] = "Drum kick=";

34 c⁄° 
uöt8_t
 
	g∑u£Bôm≠
[] = {8, 5,

41 c⁄° 
uöt8_t
 
	g∂ayBôm≠
[] = {8, 5,

48 c⁄° 
uöt8_t
 
	g°›Bôm≠
[] = {8, 5,

55 c⁄° 
uöt8_t
 
	gpoötBôm≠
[] = {8, 5,

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Tracker\Arrays.h

9 #i‚de‡
ARRAYS_H


10 
	#ARRAYS
 
H


	)

12 
	~<°döt.h
>

14 
	#NUM_PATCHES
 15

	)

16 c⁄° 
nŸeLëãrs
[12][2];

18 c⁄° * 
waveNames
[];

19 c⁄° * 
¨pModes
[];

21 c⁄° 
rboyCh¨
[] ;

22 c⁄° 
BPMCh¨
[] ;

23 c⁄° 
œ°P©ã∫Ch¨
[] ;

24 c⁄° 
lo›ToCh¨
[];

25 c⁄° 
∑tchesCh¨
[] ;

26 c⁄° 
blockSeqCh¨
[] ;

27 c⁄° 
blockCh¨
[] ;

28 c⁄° 
rowCh¨
[] ;

29 c⁄° 
unknownCh¨
[] ;

30 c⁄° 
waveCh¨
[] ;

31 c⁄° 
vﬁCh¨
[] ;

32 c⁄° 
pôchR©eCh¨
[] ;

33 c⁄° 
pôchMaxCh¨
[] ;

34 c⁄° 
vibCh¨
[] ;

35 c⁄° 
¨pCh¨
[] ;

36 c⁄° 
ADSRCh¨
[] ;

37 c⁄° 
©èckCh¨
[] ;

38 c⁄° 
deˇyCh¨
[] ;

39 c⁄° 
su°aöCh¨
[] ;

40 c⁄° 
ªÀa£Ch¨
[] ;

41 c⁄° 
lo›Ch¨
[] ;

42 c⁄° 
echoCh¨
[] ;

43 c⁄° 
ovîdriveCh¨
[];

44 c⁄° 
drumCh¨
[] ;

46 c⁄° 
uöt8_t
 
∑u£Bôm≠
[];

48 c⁄° 
uöt8_t
 
∂ayBôm≠
[];

50 c⁄° 
uöt8_t
 
°›Bôm≠
[];

52 c⁄° 
uöt8_t
 
poötBôm≠
[];

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Tracker\My_settings.h

12 #i‚de‡
MY_SETTINGS_H


13 
	#MY_SETTINGS_H


	)

15 
	#PROJ_HIRES
 1

16 
	#PROJ_ENABLE_SOUND
 1

17 
	#PROJ_ENABLE_SYNTH
 1

	)

18 
	#PROJ_STREAMING_MUSIC
 0

	)

19 
	#PROJ_SOUND_BUFFERED
 0

20 
	#PROJ_STREAM_TO_DAC
 0

21 
	#PROJ_AUD_FREQ
 44100

22 
	#PROJ_FPS
 20

	)

26 
	#TRACKER_EXAMPLE


	)

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Tracker\PatchSettings.h

2 #i‚de‡
POK_SIM


3 
	~"SDFûeSy°em.h
"

6 
boﬁ
 
	g°›exô
=
åue
;

8 
	sIn°rumít
{

9 
	m«me
[10];

10 
öt8_t
 
	mwave
;

11 
öt8_t
 
	m¨pMode
;

12 
öt8_t
 
	mlo›
;

13 
öt8_t
 
	mecho
;

14 
öt8_t
 
	mdi°‹t
;

15 
öt8_t
 
	mn‹mÆize
;

16 
öt8_t
 
	mADSR
;

17 
uöt8_t
 
	m©èck
;

18 
uöt8_t
 
	mdeˇy
;

19 
uöt8_t
 
	msu°aö
;

20 
uöt8_t
 
	mªÀa£
;

21 
öt16_t
 
	mvﬁume
;

22 
öt16_t
 
	mpôchR©e
;

23 
öt16_t
 
	mpôchMax
;

24 
In°rumít
(Ë: 
wave
(0), 
¨pMode
(0), 
lo›
(0), 
echo
(0), 
di°‹t
(0), 
n‹mÆize
(0), 
ADSR
(0),

25 
©èck
(0), 
deˇy
(0), 
su°aö
(0), 
ªÀa£
(0), 
vﬁume
(0), 
pôchR©e
(0), 
pôchMax
(0) {}

27 
In°rumít
 
	gö°r
[15];

28 
öt8_t
 
	gö°rPoöãr
 = 0;

29 
öt8_t
 
	g£âögPoöãr
 = 0;

31 
ßveIn°rInS⁄g
(
FILE
* 
Â
);

33 
	$ch™geVÆues
(
öt8_t
 
i
){

34 i‡(
£âögPoöãr
 =9Ë
∑tch
[
ö°rPoöãr
].
©èck
 +
i
;

35 i‡(
£âögPoöãr
 =10Ë
∑tch
[
ö°rPoöãr
].
deˇy
 +
i
;

36 i‡(
£âögPoöãr
 =11Ë
∑tch
[
ö°rPoöãr
].
su°aö
 +
i
;

37 i‡(
£âögPoöãr
 =12Ë
∑tch
[
ö°rPoöãr
].
ªÀa£
 +
i
;

38 i‡(
£âögPoöãr
 =13Ë
∑tch
[
ö°rPoöãr
].
bídøã
 = 
åackî
.
	`möMax
’©ch[ö°rPoöãr].bídøã+
i
, -100, 100);

39 i‡(
£âögPoöãr
 =14Ë
∑tch
[
ö°rPoöãr
].
maxbíd
 = 
åackî
.
	`möMax
’©ch[ö°rPoöãr].maxbíd+
i
, -90, 190);

40 i‡(
£âögPoöãr
 =15Ë
∑tch
[
ö°rPoöãr
].
vﬁ
 = 
åackî
.
	`möMax
’©ch[ö°rPoöãr].vﬁ+
i
, 0, 300);

41 
	}
}

43 
boﬁ
 
	$checkBuâ⁄s
(){

44 
boﬁ
 
ch™ged
=
Ál£
;

45 i‡(
pok
.
buâ⁄s
.
	`ªÀa£d
(
BTN_C
)) {

46 
°›exô
=
Ál£
;

48 if(
pok
.
buâ⁄s
.
	`ª≥©
(
BTN_DOWN
, 
buâ⁄RïótFøme
))

49 {
£âögPoöãr
 = 
åackî
.
	`möMax
(£âögPoöãr+1, 0, 19); 
ch™ged
=
åue
;}

50 if(
pok
.
buâ⁄s
.
	`ª≥©
(
BTN_UP
, 
buâ⁄RïótFøme
))

51 {
£âögPoöãr
 = 
åackî
.
	`möMax
(£âögPoöãr-1, 0, 19); 
ch™ged
=
åue
;}

52 if(
pok
.
buâ⁄s
.
	`aBä
(Ë&&Öok.buâ⁄s.
	`ª≥©
(
BTN_LEFT
, 
buâ⁄RïótFøme
))

53 {
	`ch™geVÆues
(-10);
ch™ged
=
åue
;}

54 if(
pok
.
buâ⁄s
.
	`aBä
(Ë&&Öok.buâ⁄s.
	`ª≥©
(
BTN_RIGHT
, 
buâ⁄RïótFøme
))

55 {
	`ch™geVÆues
(10);
ch™ged
=
åue
;}

56 if(
pok
.
buâ⁄s
.
	`bBä
(Ë&&Öok.buâ⁄s.
	`ª≥©
(
BTN_LEFT
, 
buâ⁄RïótFøme
))

57 {
	`ch™geVÆues
(-100);
ch™ged
=
åue
;}

58 if(
pok
.
buâ⁄s
.
	`bBä
(Ë&&Öok.buâ⁄s.
	`ª≥©
(
BTN_RIGHT
, 
buâ⁄RïótFøme
))

59 {
	`ch™geVÆues
(100);
ch™ged
=
åue
;}

60 if(
pok
.
buâ⁄s
.
	`ª≥©
(
BTN_LEFT
, 
buâ⁄RïótFøme
))

62 i‡(
£âögPoöãr
 =0Ë
ö°rPoöãr
 = 
åackî
.
	`möMax
(instrPointer-1, 0, 14);

63 i‡(
£âögPoöãr
 =2Ë
∑tch
[
ö°rPoöãr
].
wave
 = 
åackî
.
	`möMax
(patch[instrPointer].wave-1, 0, 5);

64 i‡(
£âögPoöãr
 =3Ë
∑tch
[
ö°rPoöãr
].
¨pmode
 = 
åackî
.
	`möMax
(patch[instrPointer].arpmode-1, 0, 15);

65 i‡(
£âögPoöãr
 =4Ë
∑tch
[
ö°rPoöãr
].
lo›
 = 
åackî
.
	`möMax
(patch[instrPointer].loop-1, 0, 1);

66 i‡(
£âögPoöãr
 =5Ë
∑tch
[
ö°rPoöãr
].
echo
 = 
åackî
.
	`möMax
(patch[instrPointer].echo-1, 0, 1);

67 i‡(
£âögPoöãr
 =6Ë
∑tch
[
ö°rPoöãr
].
ovîdrive
 = 
åackî
.
	`möMax
(patch[instrPointer].overdrive-1, 0, 1);

68 i‡(
£âögPoöãr
 =7Ë
∑tch
[
ö°rPoöãr
].
kick
 = 
åackî
.
	`möMax
(patch[instrPointer].kick-1, 0, 1);

69 i‡(
£âögPoöãr
 =8Ë
∑tch
[
ö°rPoöãr
].
ad§
 = 
åackî
.
	`möMax
(patch[instrPointer].adsr-1, 0, 1);

70 
	`ch™geVÆues
(-1);

71 
ch™ged
=
åue
;

73 if(
pok
.
buâ⁄s
.
	`ª≥©
(
BTN_RIGHT
, 
buâ⁄RïótFøme
))

75 i‡(
£âögPoöãr
 =0Ë
ö°rPoöãr
 = 
åackî
.
	`möMax
(instrPointer+1, 0, 14);

76 i‡(
£âögPoöãr
 =2Ë
∑tch
[
ö°rPoöãr
].
wave
 = 
åackî
.
	`möMax
(patch[instrPointer].wave+1, 0, 5);

77 i‡(
£âögPoöãr
 =3Ë
∑tch
[
ö°rPoöãr
].
¨pmode
 = 
åackî
.
	`möMax
(patch[instrPointer].arpmode+1, 0, 15);

78 i‡(
£âögPoöãr
 =4Ë
∑tch
[
ö°rPoöãr
].
lo›
 = 
åackî
.
	`möMax
(patch[instrPointer].loop+1, 0, 1);

79 i‡(
£âögPoöãr
 =5Ë
∑tch
[
ö°rPoöãr
].
echo
 = 
åackî
.
	`möMax
(patch[instrPointer].echo+1, 0, 1);

80 i‡(
£âögPoöãr
 =6Ë
∑tch
[
ö°rPoöãr
].
ovîdrive
 = 
åackî
.
	`möMax
(patch[instrPointer].overdrive+1, 0, 1);

81 i‡(
£âögPoöãr
 =7Ë
∑tch
[
ö°rPoöãr
].
kick
 = 
åackî
.
	`möMax
(patch[instrPointer].kick+1, 0, 1);

82 i‡(
£âögPoöãr
 =8Ë
∑tch
[
ö°rPoöãr
].
ad§
 = 
åackî
.
	`möMax
(patch[instrPointer].adsr+1, 0, 1);

83 
	`ch™geVÆues
(1);

84 
ch™ged
=
åue
;

86 if(
pok
.
buâ⁄s
.
	`¥es£d
(
BTN_A
))

88 
åackî
.
_cuº∑tch
=
ö°rPoöãr
;

89 if(
£âögPoöãr
 == 1)

90 {
pok
.
	`keybﬂrd
(
åackî
.
∑tch«mes
[
ö°rPoöãr
], 10);
ch™ged
=
åue
;}

95 if(
£âögPoöãr
 == 18){

96 #i‚de‡
POK_SIM


97 
SDFûeSy°em
 
	`sd
–
P0_9
, 
P0_8
, 
P0_6
, 
P0_7
, "sd");

99 * 
fûeP©hAndName
 = "/sd/SavedSong.rbs";

101 
FILE
* 
Â
=
	`f›í
(
fûeP©hAndName
, "w+");

102 if(
Â
) {

103 
åackî
.
	`ßveS⁄g
(
Â
);

104 
	`ßveIn°rInS⁄g
(
Â
);

105 
	`f˛o£
(
Â
);

106 
ch™ged
=
åue
;

109 if(
£âögPoöãr
 == 19)

111 * 
£À˘edFûe
 = 
pok
.
	`fûemíu
("RBS");

112 if–*
£À˘edFûe
 != 0 ) {

113 
	`pokInôSD
();

114 
åackî
.
	`lﬂdS⁄g
(
£À˘edFûe
);

117 
åackî
.
	`∂ayNŸe
();

119 if(
pok
.
buâ⁄s
.
	`¥es£d
(
BTN_C
Ë&& 
°›exô
==
Ál£
)

121 
s¸ìn
 = 0;

122 
£âögPoöãr
 = 0;

123 
ch™ged
=
åue
;

124 
°›exô
=
åue
;

126  
ch™ged
;

127 
	}
}

129 
	$¥ötSëtögs
(){

130 
pok
.
di•œy
.
	`£tCﬁ‹
(1);

131 
pok
.
di•œy
.
	`£tCurs‹
(2, 0);

132 
pok
.
di•œy
.
	`¥öt
("Patch: ");

133 
pok
.
di•œy
.
	`¥öt
(
ö°rPoöãr
, 10);

134 
pok
.
di•œy
.
	`£tCurs‹
(2, 
f⁄tH
 + 1);

135 
pok
.
di•œy
.
	`¥öt
("Name: ");

136 
pok
.
di•œy
.
	`¥öt
(
åackî
.
∑tch«mes
[
ö°rPoöãr
]);

137 
pok
.
di•œy
.
	`£tCurs‹
(2, (2 * 
f⁄tH
) + 2);

138 
pok
.
di•œy
.
	`¥öt
("Wave: ");

139 
pok
.
di•œy
.
	`¥öt
(
waveNames
[
∑tch
[
ö°rPoöãr
].
wave
]);

140 
pok
.
di•œy
.
	`£tCurs‹
(2, (3 * 
f⁄tH
) + 3);

141 
pok
.
di•œy
.
	`¥öt
("Arp Mode: ");

142 
pok
.
di•œy
.
	`¥öt
(
¨pModes
[
∑tch
[
ö°rPoöãr
].
¨pmode
]);

143 
pok
.
di•œy
.
	`£tCurs‹
(2, (4 * 
f⁄tH
) + 4);

144 
pok
.
di•œy
.
	`¥öt
("Loop: ");

145 
pok
.
di•œy
.
	`¥öt
(()
∑tch
[
ö°rPoöãr
].
lo›
);

146 
pok
.
di•œy
.
	`£tCurs‹
(2, (5 * 
f⁄tH
) + 5);

147 
pok
.
di•œy
.
	`¥öt
("Echo: ");

148 
pok
.
di•œy
.
	`¥öt
(()
∑tch
[
ö°rPoöãr
].
echo
);

149 
pok
.
di•œy
.
	`£tCurs‹
(2, (6 * 
f⁄tH
) + 6);

150 
pok
.
di•œy
.
	`¥öt
("Dist: ");

151 
pok
.
di•œy
.
	`¥öt
(()
∑tch
[
ö°rPoöãr
].
ovîdrive
);

152 
pok
.
di•œy
.
	`£tCurs‹
(2, (7 * 
f⁄tH
) + 7);

153 
pok
.
di•œy
.
	`¥öt
("Norm: ");

154 
pok
.
di•œy
.
	`¥öt
(()
∑tch
[
ö°rPoöãr
].
kick
);

155 
pok
.
di•œy
.
	`£tCurs‹
(2, (8 * 
f⁄tH
) + 8);

156 
pok
.
di•œy
.
	`¥öt
("ADSR: ");

157 
pok
.
di•œy
.
	`¥öt
(()
∑tch
[
ö°rPoöãr
].
ad§
);

158 
pok
.
di•œy
.
	`£tCurs‹
(2, (9 * 
f⁄tH
) + 9);

159 
pok
.
di•œy
.
	`¥öt
("Attack: ");

160 
pok
.
di•œy
.
	`¥öt
(
∑tch
[
ö°rPoöãr
].
©èck
, 10);

161 
pok
.
di•œy
.
	`£tCurs‹
(2, (10 * 
f⁄tH
) + 10);

162 
pok
.
di•œy
.
	`¥öt
("Decay: ");

163 
pok
.
di•œy
.
	`¥öt
(
∑tch
[
ö°rPoöãr
].
deˇy
, 10);

164 
pok
.
di•œy
.
	`£tCurs‹
(2, (11 * 
f⁄tH
) + 11);

165 
pok
.
di•œy
.
	`¥öt
("Sustain: ");

166 
pok
.
di•œy
.
	`¥öt
(
∑tch
[
ö°rPoöãr
].
su°aö
, 10);

167 
pok
.
di•œy
.
	`£tCurs‹
(2, (12 * 
f⁄tH
) + 12);

168 
pok
.
di•œy
.
	`¥öt
("Release: ");

169 
pok
.
di•œy
.
	`¥öt
(
∑tch
[
ö°rPoöãr
].
ªÀa£
, 10);

170 
pok
.
di•œy
.
	`£tCurs‹
(2, (13 * 
f⁄tH
) + 13);

171 
pok
.
di•œy
.
	`¥öt
("Pitch Bend Rate: ");

172 
pok
.
di•œy
.
	`¥öt
(
∑tch
[
ö°rPoöãr
].
bídøã
, 10);

173 
pok
.
di•œy
.
	`£tCurs‹
(2, (14 * 
f⁄tH
) + 14);

174 
pok
.
di•œy
.
	`¥öt
("Pitch Bend Max: ");

175 
pok
.
di•œy
.
	`¥öt
(
∑tch
[
ö°rPoöãr
].
maxbíd
, 10);

176 
pok
.
di•œy
.
	`£tCurs‹
(2, (15 * 
f⁄tH
) + 15);

177 
pok
.
di•œy
.
	`¥öt
("Volume: ");

178 
pok
.
di•œy
.
	`¥öt
(
∑tch
[
ö°rPoöãr
].
vﬁ
, 10);

179 
pok
.
di•œy
.
	`£tCurs‹
(2, (16 * 
f⁄tH
) + 16);

180 
pok
.
di•œy
.
	`¥öt
("Save Instrument");

181 
pok
.
di•œy
.
	`£tCurs‹
(2, (17 * 
f⁄tH
) + 17);

182 
pok
.
di•œy
.
	`¥öt
("Load Instrument");

183 
pok
.
di•œy
.
	`£tCurs‹
(2, (18 * 
f⁄tH
) + 18);

184 
pok
.
di•œy
.
	`¥öt
("Save Song");

185 
pok
.
di•œy
.
	`£tCurs‹
(2, (19 * 
f⁄tH
) + 19);

186 
pok
.
di•œy
.
	`¥öt
("Load Song...");

187 
	}
}

189 
	$døwPoöãr
(){

190 
pok
.
di•œy
.
	`døwBôm≠
(130, (
£âögPoöãr
 * 
f⁄tH
Ë+ sëtögPoöãr, 
poötBôm≠
);

191 
	}
}

193 
	$ßveIn°rInS⁄g
(
FILE
* 
Â
){

195 
uöt8_t
 
j
 = 1; j <
NUM_PATCHES
; j++){

196 i‡(
åackî
.
∑tch«mes
[
j
][0] != 0) {

197 
	`Ârötf
(
Â
, 
åackî
.
∑tch«mes
[
j
]);

198 
	`Ârötf
(
Â
, "\n");

199 
	`Ârötf
(
Â
, 
waveCh¨
);

200 
	`Ârötf
(
Â
, "%d\n", 
∑tch
[
j
].
wave
);

201 
	`Ârötf
(
Â
, 
vﬁCh¨
);

202 
	`Ârötf
(
Â
, "%d\n", 
∑tch
[
j
].
vﬁ
);

203 
	`Ârötf
(
Â
, 
pôchR©eCh¨
);

204 
	`Ârötf
(
Â
, "%d\n", 
∑tch
[
j
].
bídøã
);

205 
	`Ârötf
(
Â
, 
pôchMaxCh¨
);

206 
	`Ârötf
(
Â
, "%d\n", 
∑tch
[
j
].
maxbíd
);

207 
	`Ârötf
(
Â
, 
vibCh¨
);

208 
	`Ârötf
(
Â
, "0\n");

209 
	`Ârötf
(
Â
, 
¨pCh¨
);

210 
	`Ârötf
(
Â
, "%d\n", 
∑tch
[
j
].
¨pmode
);

211 
	`Ârötf
(
Â
, 
ADSRCh¨
);

212 
	`Ârötf
(
Â
, "%d\n", 
∑tch
[
j
].
ad§
);

213 
	`Ârötf
(
Â
, 
©èckCh¨
);

214 
	`Ârötf
(
Â
, "%d\n", 
∑tch
[
j
].
©èck
);

215 
	`Ârötf
(
Â
, 
deˇyCh¨
);

216 
	`Ârötf
(
Â
, "%d\n", 
∑tch
[
j
].
deˇy
);

217 
	`Ârötf
(
Â
, 
su°aöCh¨
);

218 
	`Ârötf
(
Â
, "%d\n", 
∑tch
[
j
].
su°aö
);

219 
	`Ârötf
(
Â
, 
ªÀa£Ch¨
);

220 
	`Ârötf
(
Â
, "%d\n", 
∑tch
[
j
].
ªÀa£
);

221 
	`Ârötf
(
Â
, 
lo›Ch¨
);

222 
	`Ârötf
(
Â
, "%d\n", 
∑tch
[
j
].
lo›
);

223 
	`Ârötf
(
Â
, 
echoCh¨
);

224 
	`Ârötf
(
Â
, "%d\n", 
∑tch
[
j
].
echo
);

225 
	`Ârötf
(
Â
, 
ovîdriveCh¨
);

226 
	`Ârötf
(
Â
, "%d\n", 
∑tch
[
j
].
ovîdrive
);

227 
	`Ârötf
(
Â
, 
drumCh¨
);

228 
	`Ârötf
(
Â
, "%d\n", 
∑tch
[
j
].
kick
);

232 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Tracker\Tracker.cpp

2 
	~"Tøckî.h
"

3 
	~"Aºays.h
"

5 
	gTøckî
::
	$SëCﬁ‹PÆëã
() {

7  
mode
 ) {

9 
Modes
::
edô
:

10 
pok
.
di•œy
.
∑Àâïå
[0] =Öok.di•œy.
	`RGBto565
(176,46,245);

13 
Modes
::
∂ay
:

14 
pok
.
di•œy
.
∑Àâïå
[0] =Öok.di•œy.
	`RGBto565
(18,46,129);

17 
Modes
::
åavñ
:

18 if(
s¸ìn
==0)

19 
pok
.
di•œy
.
∑Àâïå
[0] = 
COLOR_BLACK
;

21 
pok
.
di•œy
.
∑Àâïå
[0] =Öok.di•œy.
	`RGBto565
(100,100,100);

25 
Modes
::
£âögs
:

26 
pok
.
di•œy
.
∑Àâïå
[0] =Öok.di•œy.
	`RGBto565
(100,100,100);

29 
	}
}

31 
öt16_t
 
	gTøckî
::
	$gëBPM
(){

32  
bpm
;

33 
	}
}

35 
	gTøckî
::
	$em±yP©ches
() {

36 
i
=0;i<16;i++) {

37 
≤ame
[10];

38 
j
=0;j<10;j++Ë
∑tch«mes
[
i
][j]=0;

39 
∑tch
[
i
].
wave
 = 0;

40 
∑tch
[
i
].
vﬁ
 = 0;

41 
∑tch
[
i
].
bídøã
 = 0;

42 
∑tch
[
i
].
pôchbíd
 = 0;

43 
∑tch
[
i
].
maxbíd
 = 0;

44 
∑tch
[
i
].
vibøã
 = 0;

45 
∑tch
[
i
].
¨pmode
 = 0;

46 
∑tch
[
i
].
ad§
 = 0;

47 
∑tch
[
i
].
©èck
 = 0;

48 
∑tch
[
i
].
deˇy
 = 0;

49 
∑tch
[
i
].
su°aö
 = 0;

50 
∑tch
[
i
].
ªÀa£
 = 0;

51 
∑tch
[
i
].
lo›
 = 0;

52 
∑tch
[
i
].
echo
 = 0;

53 
∑tch
[
i
].
ovîdrive
 = 0;

54 
∑tch
[
i
].
kick
 = 0;

56 
	}
}

58 
	gTøckî
::
	$∂ayNŸe
() {

60 
uöt8_t
 
w
 = 
∑tch
[
_cuº∑tch
].
wave
;

61 
uöt8_t
 
l
 = 
∑tch
[
_cuº∑tch
].
lo›
;

62 
uöt8_t
 
e
 = 
∑tch
[
_cuº∑tch
].
echo
;

63 
uöt8_t
 
a
 = 
∑tch
[
_cuº∑tch
].
ad§
;

64 
uöt8_t
 
n
 = 
_cuºpôch
;

65 
uöt16_t
 
v
 = 
∑tch
[
_cuº∑tch
].
vﬁ
;

66 
uöt16_t
 
©t
 = 
∑tch
[
_cuº∑tch
].
©èck
;

67 
uöt16_t
 
dec
 = 
∑tch
[
_cuº∑tch
].
deˇy
;

68 
uöt16_t
 
sus
 = 
∑tch
[
_cuº∑tch
].
su°aö
;

69 
uöt16_t
 
ªl
 = 
∑tch
[
_cuº∑tch
].
ªÀa£
;

70 
öt16_t
 
bíd
 = 
∑tch
[
_cuº∑tch
].
maxbíd
;

71 
öt16_t
 
bøã
 = 
∑tch
[
_cuº∑tch
].
bídøã
;

72 
uöt8_t
 
¨p
 = 
∑tch
[
_cuº∑tch
].
¨pmode
;

73 
uöt8_t
 
ovr
 = 
∑tch
[
_cuº∑tch
].
ovîdrive
;

74 
uöt8_t
 
kick
 = 
∑tch
[
_cuº∑tch
].kick;

76 i‡(
cﬁPoöãr
 =0)
	`£tOSC
(&
osc1
,1,
w
,
l
,
e
,
a
,
n
,
v
,
©t
,
dec
,
sus
,
ªl
,
bíd
,
bøã
,
¨p
,
ovr
,
kick
);

77 i‡(
cﬁPoöãr
 =1)
	`£tOSC
(&
osc2
,1,
w
,
l
,
e
,
a
,
n
,
v
,
©t
,
dec
,
sus
,
ªl
,
bíd
,
bøã
,
¨p
,
ovr
,
kick
);

78 
	`£tOSC
(&
osc3
,1,
w
,
l
,
e
,
a
,
n
,
v
,
©t
,
dec
,
sus
,
ªl
,
bíd
,
bøã
,
¨p
,
ovr
,
kick
);

79 
	}
}

82 
boﬁ
 
	gTøckî
::
	$checkBuâ⁄s
(){

83 
boﬁ
 
ch™ged
=
Ál£
;

84 if(
Tøckî
::
mode
 =
Modes
::
åavñ
 ){

85 i‡(
pok
.
buâ⁄s
.
	`ª≥©
(
BTN_LEFT
, 
buâ⁄RïótFøme
))

86 {
cﬁPoöãr
 = 
	`möMax
(cﬁPoöãr-1, 0, 
maxCﬁumn
 - 1); 
ch™ged
=
åue
;}

87 i‡(
pok
.
buâ⁄s
.
	`ª≥©
(
BTN_RIGHT
, 
buâ⁄RïótFøme
))

88 {
cﬁPoöãr
 = 
	`möMax
(cﬁPoöãr+1, 0, 
maxCﬁumn
 - 1); 
ch™ged
=
åue
;}

89 i‡(
pok
.
buâ⁄s
.
	`ª≥©
(
BTN_UP
, 
buâ⁄RïótFøme
)){

90 
rowPoöãr
--;

91 
s¸ìnPoöãr
--;

92 
rowPoöãr
 = 
	`möMax
‘owPoöãr, 0, 
maxRow
 - 1);

93 i‡((
s¸ìnPoöãr
 + 
s¸ìnMö
) < screenMin){

94 
s¸ìnMö
--;

95 
s¸ìnMax
--;

96 
s¸ìnPoöãr
++;

98 if(
s¸ìnMö
 < 0){

99 
s¸ìnMö
 = 
maxRow
 - 
s¸ìnMaxInô
;

100 
s¸ìnMax
 = 
maxRow
 - 1;

101 
s¸ìnPoöãr
 = 
s¸ìnMaxInô
 - 1;

103 
ch™ged
=
åue
;

105 i‡(
pok
.
buâ⁄s
.
	`ª≥©
(
BTN_DOWN
, 
buâ⁄RïótFøme
)){

106 
rowPoöãr
++;

107 
s¸ìnPoöãr
++;

108 
rowPoöãr
 = 
	`möMax
‘owPoöãr, 0, 
maxRow
 - 1);

109 i‡((
s¸ìnPoöãr
 + 
s¸ìnMö
Ë> 
s¸ìnMax
){

110 
s¸ìnMö
++;

111 
s¸ìnMax
++;

112 
s¸ìnPoöãr
--;

114 if(
s¸ìnMax
 > (
maxRow
 - 1)){

115 
s¸ìnMö
 = 0;

116 
s¸ìnMax
 = 
s¸ìnMaxInô
;

117 
s¸ìnPoöãr
 = 0;

119 
ch™ged
=
åue
;

121 i‡(
pok
.
buâ⁄s
.
	`¥es£d
(
BTN_A
)){

122 
mode
 = 
Modes
::
edô
; 
ch™ged
=
åue
;

124 i‡(
pok
.
buâ⁄s
.
	`¥es£d
(
BTN_C
)){

125 
mode
 = 
Modes
::
∂ay
; 
ch™ged
=
åue
;

127 i‡(
pok
.
buâ⁄s
.
	`ª≥©
(
BTN_B
,
buâ⁄RïótFøme
+1)){

129 
_pôch
[
_s⁄gPos
[
s⁄gPos
][
cﬁPoöãr
]][
rowPoöãr
] = -1;

130 
_∑tch
[
_s⁄gPos
[
s⁄gPos
][
cﬁPoöãr
]][
rowPoöãr
] = 0;

132 
	`£tOSC
(&
osc1
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);

133 
	`£tOSC
(&
osc2
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);

134 
	`£tOSC
(&
osc3
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);

135 
ch™ged
=
åue
;

138 i‡(
mode
 =
Modes
::
edô
){

139 i‡(
pok
.
buâ⁄s
.
	`¥es£d
(
BTN_B
)){

140 
mode
 = 
Modes
::
åavñ
;

141 
edô
 = 0;

142 
ch™ged
=
åue
;

144 i‡(
pok
.
buâ⁄s
.
	`¥es£d
(
BTN_LEFT
))

145 {
edô
 = 
	`möMax
”dô-1, 0, 1); 
ch™ged
=
åue
;}

146 i‡(
pok
.
buâ⁄s
.
	`¥es£d
(
BTN_RIGHT
))

147 {
edô
 = 
	`möMax
”dô+1, 0, 1); 
ch™ged
=
åue
;}

148 i‡(
pok
.
buâ⁄s
.
	`ª≥©
(
BTN_UP
, 
buâ⁄RïótFøme
)){

149 i‡(
edô
 == 0) {

151 i‡(
_pôch
[
_s⁄gPos
[
s⁄gPos
][
cﬁPoöãr
]][
rowPoöãr
] == -1) {

153 
_pôch
[
_s⁄gPos
[
s⁄gPos
][
cﬁPoöãr
]][
rowPoöãr
] = 
_cuºpôch
;

154 
_∑tch
[
_s⁄gPos
[
s⁄gPos
][
cﬁPoöãr
]][
rowPoöãr
] = 
_cuº∑tch
;

157 
_cuºpôch
 = 
_pôch
[
_s⁄gPos
[
s⁄gPos
][
cﬁPoöãr
]][
rowPoöãr
] = 
	`möMax
(_pitch[_songPos[songPos][colPointer]][rowPointer]+1, 0, 99);

159 
_cuº∑tch
 = 
_∑tch
[
_s⁄gPos
[
s⁄gPos
][
cﬁPoöãr
]][
rowPoöãr
];

161 
ch™ged
=
åue
;

162 } i‡(
edô
 == 1) {

164 i‡(
_pôch
[
_s⁄gPos
[
s⁄gPos
][
cﬁPoöãr
]][
rowPoöãr
] == -1) {

166 
_pôch
[
_s⁄gPos
[
s⁄gPos
][
cﬁPoöãr
]][
rowPoöãr
] = 
_cuºpôch
;

169 
_cuºpôch
 = 
_pôch
[
_s⁄gPos
[
s⁄gPos
][
cﬁPoöãr
]][
rowPoöãr
];

171 
_cuº∑tch
 = 
_∑tch
[
_s⁄gPos
[
s⁄gPos
][
cﬁPoöãr
]][
rowPoöãr
] = 
	`möMax
(_patch[_songPos[songPos][colPointer]][rowPointer]+1, 0, 14);

172 
ch™ged
=
åue
;

174 
	`∂ayNŸe
();

176 i‡(
pok
.
buâ⁄s
.
	`ª≥©
(
BTN_DOWN
, 
buâ⁄RïótFøme
)){

177 
ch™ged
=
åue
;

178 i‡(
edô
 == 0) {

180 i‡(
_pôch
[
_s⁄gPos
[
s⁄gPos
][
cﬁPoöãr
]][
rowPoöãr
] == -1) {

182 
_pôch
[
_s⁄gPos
[
s⁄gPos
][
cﬁPoöãr
]][
rowPoöãr
] = 
_cuºpôch
;

183 
_∑tch
[
_s⁄gPos
[
s⁄gPos
][
cﬁPoöãr
]][
rowPoöãr
] = 
_cuº∑tch
;

186 
_cuºpôch
 = 
_pôch
[
_s⁄gPos
[
s⁄gPos
][
cﬁPoöãr
]][
rowPoöãr
] = 
	`möMax
(_pitch[_songPos[songPos][colPointer]][rowPointer]-1, 0, 99);

188 
_cuº∑tch
 = 
_∑tch
[
_s⁄gPos
[
s⁄gPos
][
cﬁPoöãr
]][
rowPoöãr
];

190 } i‡(
edô
 == 1) {

192 i‡(
_pôch
[
_s⁄gPos
[
s⁄gPos
][
cﬁPoöãr
]][
rowPoöãr
] == -1) {

194 
_pôch
[
_s⁄gPos
[
s⁄gPos
][
cﬁPoöãr
]][
rowPoöãr
] = 
_cuºpôch
;

197 
_cuºpôch
 = 
_pôch
[
_s⁄gPos
[
s⁄gPos
][
cﬁPoöãr
]][
rowPoöãr
];

199 
_cuº∑tch
 = 
_∑tch
[
_s⁄gPos
[
s⁄gPos
][
cﬁPoöãr
]][
rowPoöãr
] = 
	`möMax
(_patch[_songPos[songPos][colPointer]][rowPointer]-1, 0, 14);

201 
	`∂ayNŸe
();

204 if(
mode
 =
Modes
::
£âögs
){

205 i‡(
pok
.
buâ⁄s
.
	`¥es£d
(
BTN_C
)){

206 
s¸ìn
 = 1;

207 
mode
 = 
Modes
::
åavñ
;

208 
edô
 = 0;

209 
ch™ged
=
åue
;

210  
ch™ged
;

212 i‡(
pok
.
buâ⁄s
.
	`¥es£d
(
BTN_UP
))

213 {
edô
 = 
	`möMax
”dô-1, 0, 9);
ch™ged
=
åue
;}

214 i‡(
pok
.
buâ⁄s
.
	`¥es£d
(
BTN_DOWN
))

215 {
edô
 = 
	`möMax
”dô+1, 0, 9);
ch™ged
=
åue
;}

216 i‡(
pok
.
buâ⁄s
.
	`ª≥©
(
BTN_LEFT
, 
buâ⁄RïótFøme
)){

217 
ch™ged
=
åue
;

218 i‡(
edô
 == 0){

219 
bpm
 = 
	`möMax
(bpm-1, 1, 300);

220 
_ãmpo
 = (60000 / 
bpm
) / 4;

222 i‡(
edô
 =1Ë
s⁄gPos
 = 
	`möMax
(songPos-1, 0, 9);

223 i‡(
edô
 =2Ë
œ°P©ã∫
 = 
	`möMax
(lastPattern-1, 0, 9);

224 i‡(
edô
 =3Ë
lo›To
 = 
	`möMax
(loopTo-1, 0, 9);

225 i‡(
edô
 =4Ë
_s⁄gPos
[
s⁄gPos
][0] = 
	`möMax
(_songPos[songPos][0]-1, 0, 29);

226 i‡(
edô
 =5Ë
_s⁄gPos
[
s⁄gPos
][1] = 
	`möMax
(_songPos[songPos][1]-1, 0, 29);

227 i‡(
edô
 =6Ë
_s⁄gPos
[
s⁄gPos
][2] = 
	`möMax
(_songPos[songPos][2]-1, 0, 29);

228 i‡(
edô
 == 7) {

230 if–
åack1⁄
 ) {Åøck1⁄=0; 
	`£tOSC
(&
osc1
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0); }

231 
åack1⁄
 = 1;

233 i‡(
edô
 == 8) {

235 if–
åack2⁄
 ) {Åøck2⁄=0; 
	`£tOSC
(&
osc2
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0); }

236 
åack2⁄
 = 1;

238 i‡(
edô
 == 9) {

240 if–
åack3⁄
 ) {Åøck3⁄=0; 
	`£tOSC
(&
osc3
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0); }

241 
åack3⁄
 = 1;

244 i‡(
pok
.
buâ⁄s
.
	`ª≥©
(
BTN_RIGHT
, 
buâ⁄RïótFøme
)){

245 
ch™ged
=
åue
;

246 i‡(
edô
 == 0){

247 
bpm
 = 
	`möMax
(bpm+1, 1, 300);

248 
_ãmpo
 = (60000 / 
bpm
) / 4;

250 i‡(
edô
 =1Ë
s⁄gPos
 = 
	`möMax
(songPos+1, 0, 9);

251 i‡(
edô
 =2Ë
œ°P©ã∫
 = 
	`möMax
(lastPattern+1, 0, 9);

252 i‡(
edô
 =3Ë
lo›To
 = 
	`möMax
(loopTo+1, 0, 9);

253 i‡(
edô
 =4Ë
_s⁄gPos
[
s⁄gPos
][0] = 
	`möMax
(_songPos[songPos][0]+1, 0, 29);

254 i‡(
edô
 =5Ë
_s⁄gPos
[
s⁄gPos
][1] = 
	`möMax
(_songPos[songPos][1]+1, 0, 29);

255 i‡(
edô
 =6Ë
_s⁄gPos
[
s⁄gPos
][2] = 
	`möMax
(_songPos[songPos][2]+1, 0, 29);

256 i‡(
edô
 == 7) {

258 if–
åack1⁄
 ) {Åøck1⁄=0; 
	`£tOSC
(&
osc1
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0); }

259 
åack1⁄
 = 1;

261 i‡(
edô
 == 8) {

263 if–
åack2⁄
 ) {Åøck2⁄=0; 
	`£tOSC
(&
osc2
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0); }

264 
åack2⁄
 = 1;

266 i‡(
edô
 == 9) {

268 if–
åack3⁄
 ) {Åøck3⁄=0; 
	`£tOSC
(&
osc3
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0); }

269 
åack3⁄
 = 1;

273 if(
mode
 =
Modes
::
∂ay
){

274 i‡(
pok
.
buâ⁄s
.
	`¥es£d
(
BTN_A
)){

275 
ch™ged
=
åue
;

276 
°›
 = 0;

277 
∂ay
 = !play;

278 i‡(
∂ay
) {

279 
∂ayTime
 = 
pok
.
	`gëTime
();

280 
rowPoöãr
 = 0;

281 
s¸ìnPoöãr
 = 0;

282 
s¸ìnMö
 = 0;

283 
s¸ìnMax
 = 
s¸ìnMaxInô
;

284 
	`∂ayPä
();

287 i‡(
pok
.
buâ⁄s
.
	`¥es£d
(
BTN_B
)){

290 if(!
∂ayög
) {

291 
mode
 = 
Modes
::
åavñ
;

294 
ch™ged
=
åue
;

296 
	`£tOSC
(&
osc1
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);

297 
	`£tOSC
(&
osc2
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);

298 
	`£tOSC
(&
osc3
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);

299 
∂ayög
 = 
Ál£
;

300 
°›
 = 1;

301 
∂ay
 = 0;

302 
s⁄gPos
 = 0;

303 
rowPoöãr
 = 0;

304 
s¸ìnPoöãr
 = 0;

305 
s¸ìnMö
 = 0;

306 
s¸ìnMax
 = 
s¸ìnMaxInô
;

308 i‡(
pok
.
buâ⁄s
.
	`¥es£d
(
BTN_C
)){

309 
ch™ged
=
åue
;

311 
	`£tOSC
(&
osc1
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);

312 
	`£tOSC
(&
osc2
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);

313 
	`£tOSC
(&
osc3
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);

314 
∂ayög
 = 
Ál£
;

315 
∂ay
 = 0;

316 
mode
 = 
Modes
::
£âögs
;

319  
ch™ged
;

320 
	}
}

322 
	gTøckî
::
	$fûlAºays
(){

323 
uöt8_t
 
i
 = 0; i < 30; i++){

324 
uöt8_t
 
j
 = 0; j < 64; j++){

325 
_∑tch
[
i
][
j
] = -1;

326 
_pôch
[
i
][
j
] = -1;

329 
	}
}

331 
	gTøckî
::
	$døwLöes
(){

332 
pok
.
di•œy
.
	`£tCﬁ‹
(3);

333 
pok
.
di•œy
.
	`døwFa°VLöe
(
vLöes
[0], 0, 
s¸ìnH
);

334 
pok
.
di•œy
.
	`døwFa°VLöe
(
vLöes
[1], 0, 
s¸ìnH
);

335 
pok
.
di•œy
.
	`døwFa°VLöe
(
vLöes
[2], 0, 
s¸ìnH
);

336 
pok
.
di•œy
.
	`døwFa°VLöe
(
vLöes
[3], 0, 
s¸ìnH
);

337 
pok
.
di•œy
.
	`døwFa°HLöe
(0, 
f⁄tH
 + 1, 
vLöes
[3]);

338 
pok
.
di•œy
.
	`£tCﬁ‹
(1);

339 
pok
.
di•œy
.
	`£tCurs‹
(
vLöes
[0] + 1, 0);

340 
pok
.
di•œy
.
	`¥öt
(" Track 1");

341 
pok
.
di•œy
.
	`£tCurs‹
(
vLöes
[1] + 1, 0);

342 
pok
.
di•œy
.
	`¥öt
(" Track 2");

343 
pok
.
di•œy
.
	`£tCurs‹
(
vLöes
[2] + 1, 0);

344 
pok
.
di•œy
.
	`¥öt
(" Track 3");

345 
	}
}

347 
	gTøckî
::
	$døwPoöãr
(){

348 
pok
.
di•œy
.
	`£tCﬁ‹
(2);

349 i‡(
mode
 =
Modes
::
åavñ
){

350 
pok
.
di•œy
.
	`døwRe˘
(
vLöes
[
cﬁPoöãr
], (
f⁄tH
 + 1Ë* (
s¸ìnPoöãr
 + 1), (9 * 
f⁄tW
) + 10, fontH + 1);

352 i‡(
mode
 =
Modes
::
edô
){

353 i‡(
edô
 == 0){

354 
pok
.
di•œy
.
	`døwRe˘
(
vLöes
[
cﬁPoöãr
], (
f⁄tH
 + 1Ë* (
s¸ìnPoöãr
 + 1), (3 * 
f⁄tW
) + 5, fontH + 1);

356 i‡(
edô
 == 1){

357 
pok
.
di•œy
.
	`døwRe˘
(
vLöes
[
cﬁPoöãr
] + ((
f⁄tH
 * 3Ë+ 1), (f⁄tH + 1Ë* (
s¸ìnPoöãr
 + 1), (2 * 
f⁄tW
) + 5, fontH + 1);

360 i‡(
mode
 =
Modes
::
£âögs
){

361 
pok
.
di•œy
.
	`døwRe˘
(
vLöes
[3] + 1, (
f⁄tH
 + 1Ë* ((
edô
 * 2Ë+ 1), (6 * 
f⁄tW
) + 7, fontH + 1);

363 i‡(
mode
 =
Modes
::
∂ay
){

364 
pok
.
di•œy
.
	`døwRe˘
(
vLöes
[0], (
f⁄tH
 + 1Ë* (
s¸ìnPoöãr
 + 1), vLines[3] - vLines[0], fontH + 1);

366 
	}
}

368 
	gTøckî
::
	$døwHñpB¨
(){

370 
pok
.
di•œy
.
	`£tCﬁ‹
(3);

371 
uöt16_t
 
bgcﬁ‹_‹g
 = 
pok
.
di•œy
.
bgcﬁ‹
;

372 
pok
.
di•œy
.
	`fûlRe˘
(0, 
s¸ìnH
-10+1, 
s¸ìnW
+1, 10);

373 
pok
.
di•œy
.
	`£tCﬁ‹
(0,3);

374 i‡(
mode
 =
Modes
::
åavñ
){

375 if(
s¸ìn
==0)

376 
pok
.
di•œy
.
	`¥öt
(2, 
s¸ìnH
-8, "C: Play mode B: Delete A: Edit mode");

378 
pok
.
di•œy
.
	`¥öt
(2, 
s¸ìnH
-8, "C: Travel mode");

380 i‡(
mode
 =
Modes
::
edô
){

381 
pok
.
di•œy
.
	`¥öt
(2, 
s¸ìnH
-8, " B: Travel mode");

383 i‡(
mode
 =
Modes
::
£âögs
){

384 
pok
.
di•œy
.
	`¥öt
(2, 
s¸ìnH
-8, "C: More settings");

386 i‡(
mode
 =
Modes
::
∂ay
){

387 if(
∂ayög
) {

388 if(!
∂ay
)

389 
pok
.
di•œy
.
	`¥öt
(2, 
s¸ìnH
-8, "C: Settings B: Stop A: Play");

391 
pok
.
di•œy
.
	`¥öt
(2, 
s¸ìnH
-8, "C: Settings B: Stop A: Pause");

394 if(!
∂ay
)

395 
pok
.
di•œy
.
	`¥öt
(2, 
s¸ìnH
-8, "C: Settings B: Travel mode A: Play");

397 
pok
.
di•œy
.
	`¥öt
(2, 
s¸ìnH
-8, "C: Settings B: Travel mode A: Pause");

400 
pok
.
di•œy
.
bgcﬁ‹
 = 
bgcﬁ‹_‹g
;

401 
	}
}

403 
	gTøckî
::
	$døwIsPœyög
(){

404 i‡(
°›
){

405 
pok
.
di•œy
.
	`døwBôm≠
(2, 1, 
°›Bôm≠
);

408 i‡(
∂ay
){

409 
pok
.
di•œy
.
	`døwBôm≠
(2, 1, 
∂ayBôm≠
);

412 
pok
.
di•œy
.
	`døwBôm≠
(2, 1, 
∑u£Bôm≠
);

415 
	}
}

417 
	gTøckî
::
	$¥ötVÆues
(){

418 
uöt8_t
 
cou¡î
 = 0;

419 
uöt8_t
 
i
 = 
s¸ìnMö
; i <
s¸ìnMax
; i++){

420 i‡((
i
 % 4Ë=0Ë
pok
.
di•œy
.
	`£tCﬁ‹
(3);

421 
pok
.
di•œy
.
	`£tCﬁ‹
(1);

422 
pok
.
di•œy
.
	`£tCurs‹
(0, ((
f⁄tH
 + 1Ë* (
cou¡î
 + 1)) + 1);

423 
pok
.
di•œy
.
	`¥öt
(
s¸ìnMö
 + 
cou¡î
);

424 
pok
.
di•œy
.
	`£tCurs‹
(
vLöes
[0] + 2, ((
f⁄tH
 + 1Ë* (
cou¡î
 + 1)) + 1);

425 i‡(
_pôch
[
_s⁄gPos
[
s⁄gPos
][0]][
i
] =-1Ë
pok
.
di•œy
.
	`¥öt
("---");

427 
pok
.
di•œy
.
	`¥öt
(
nŸeLëãrs
[
_pôch
[
_s⁄gPos
[
s⁄gPos
][0]][
i
] % 12][0]);

428 
pok
.
di•œy
.
	`¥öt
(
nŸeLëãrs
[
_pôch
[
_s⁄gPos
[
s⁄gPos
][0]][
i
] % 12][1]);

429 
pok
.
di•œy
.
	`¥öt
(
_pôch
[
_s⁄gPos
[
s⁄gPos
][0]][
i
] / 12 + 1);

431 
pok
.
di•œy
.
	`¥öt
(" ");

432 i‡(
_∑tch
[
_s⁄gPos
[
s⁄gPos
][0]][
i
] =-1Ë
pok
.
di•œy
.
	`¥öt
("--");

434 i‡(
_∑tch
[
_s⁄gPos
[
s⁄gPos
][0]][
i
] < 10Ë
pok
.
di•œy
.
	`¥öt
("0");

435 
pok
.
di•œy
.
	`¥öt
(
_∑tch
[
_s⁄gPos
[
s⁄gPos
][0]][
i
]);

437 
pok
.
di•œy
.
	`¥öt
(" ");

438 i‡(
_pôch
[
_s⁄gPos
[
s⁄gPos
][0]][
i
] =-1Ë
pok
.
di•œy
.
	`¥öt
("--");

439 
pok
.
di•œy
.
	`¥öt
(
_pôch
[
_s⁄gPos
[
s⁄gPos
][0]][
i
]);

440 
pok
.
di•œy
.
	`£tCurs‹
(
vLöes
[1] + 2, ((
f⁄tH
 + 1Ë* (
cou¡î
 + 1)) + 1);

441 i‡(
_pôch
[
_s⁄gPos
[
s⁄gPos
][1]][
i
] =-1Ë
pok
.
di•œy
.
	`¥öt
("---");

443 
pok
.
di•œy
.
	`¥öt
(
nŸeLëãrs
[
_pôch
[
_s⁄gPos
[
s⁄gPos
][1]][
i
] % 12][0]);

444 
pok
.
di•œy
.
	`¥öt
(
nŸeLëãrs
[
_pôch
[
_s⁄gPos
[
s⁄gPos
][1]][
i
] % 12][1]);

445 
pok
.
di•œy
.
	`¥öt
(
_pôch
[
_s⁄gPos
[
s⁄gPos
][1]][
i
] / 12+1);

447 
pok
.
di•œy
.
	`¥öt
(" ");

448 i‡(
_∑tch
[
_s⁄gPos
[
s⁄gPos
][1]][
i
] =-1Ë
pok
.
di•œy
.
	`¥öt
("--");

450 i‡(
_∑tch
[
_s⁄gPos
[
s⁄gPos
][1]][
i
] < 10Ë
pok
.
di•œy
.
	`¥öt
("0");

451 
pok
.
di•œy
.
	`¥öt
(
_∑tch
[
_s⁄gPos
[
s⁄gPos
][1]][
i
]);

453 
pok
.
di•œy
.
	`¥öt
(" ");

454 i‡(
_pôch
[
_s⁄gPos
[
s⁄gPos
][1]][
i
] =-1Ë
pok
.
di•œy
.
	`¥öt
("--");

455 
pok
.
di•œy
.
	`¥öt
(
_pôch
[
_s⁄gPos
[
s⁄gPos
][1]][
i
]);

456 
pok
.
di•œy
.
	`£tCurs‹
(
vLöes
[2] + 2, ((
f⁄tH
 + 1Ë* (
cou¡î
 + 1)) + 1);

457 i‡(
_pôch
[
_s⁄gPos
[
s⁄gPos
][2]][
i
] =-1Ë
pok
.
di•œy
.
	`¥öt
("---");

459 
pok
.
di•œy
.
	`¥öt
(
nŸeLëãrs
[
_pôch
[
_s⁄gPos
[
s⁄gPos
][2]][
i
] % 12][0]);

460 
pok
.
di•œy
.
	`¥öt
(
nŸeLëãrs
[
_pôch
[
_s⁄gPos
[
s⁄gPos
][2]][
i
] % 12][1]);

461 
pok
.
di•œy
.
	`¥öt
(
_pôch
[
_s⁄gPos
[
s⁄gPos
][2]][
i
] / 12+1);

463 
pok
.
di•œy
.
	`¥öt
(" ");

464 i‡(
_∑tch
[
_s⁄gPos
[
s⁄gPos
][2]][
i
] =-1Ë
pok
.
di•œy
.
	`¥öt
("--");

466 i‡(
_∑tch
[
_s⁄gPos
[
s⁄gPos
][2]][
i
] < 10Ë
pok
.
di•œy
.
	`¥öt
("0");

467 
pok
.
di•œy
.
	`¥öt
(
_∑tch
[
_s⁄gPos
[
s⁄gPos
][2]][
i
]);

469 
pok
.
di•œy
.
	`¥öt
(" ");

470 i‡(
_pôch
[
_s⁄gPos
[
s⁄gPos
][2]][
i
] =-1Ë
pok
.
di•œy
.
	`¥öt
("--");

471 
pok
.
di•œy
.
	`¥öt
(
_pôch
[
_s⁄gPos
[
s⁄gPos
][2]][
i
]);

472 
cou¡î
++;

474 
	}
}

476 
	gTøckî
::
	$¥ötSëtögs
(){

477 
pok
.
di•œy
.
	`£tCﬁ‹
(1);

478 
pok
.
di•œy
.
	`£tCurs‹
(
s_vLöes
[0], 1);

479 
pok
.
di•œy
.
	`¥öt
("Tempo");

480 
pok
.
di•œy
.
	`£tCurs‹
(
s_vLöes
[0], 
f⁄tH
 + 2);

481 
pok
.
di•œy
.
	`¥öt
(
bpm
, 10);

482 
pok
.
di•œy
.
	`£tCurs‹
(
s_vLöes
[0], (2 * 
f⁄tH
) + 3);

483 
pok
.
di•œy
.
	`¥öt
("SngPos");

484 
pok
.
di•œy
.
	`£tCurs‹
(
s_vLöes
[0], (3 * 
f⁄tH
) + 4);

485 
pok
.
di•œy
.
	`¥öt
(
s⁄gPos
, 10);

486 
pok
.
di•œy
.
	`£tCurs‹
(
s_vLöes
[0], (4 * 
f⁄tH
) + 5);

487 
pok
.
di•œy
.
	`¥öt
("Pattrn");

488 
pok
.
di•œy
.
	`£tCurs‹
(
s_vLöes
[0], (5 * 
f⁄tH
) + 6);

489 
pok
.
di•œy
.
	`¥öt
(()
œ°P©ã∫
, 10);

490 
pok
.
di•œy
.
	`£tCurs‹
(
s_vLöes
[0], (6 * 
f⁄tH
) + 7);

491 
pok
.
di•œy
.
	`¥öt
("LoopTo");

492 
pok
.
di•œy
.
	`£tCurs‹
(
s_vLöes
[0], (7 * 
f⁄tH
) + 8);

493 
pok
.
di•œy
.
	`¥öt
(()
lo›To
, 10);

494 
pok
.
di•œy
.
	`£tCurs‹
(
s_vLöes
[0], (8 * 
f⁄tH
) + 9);

495 
pok
.
di•œy
.
	`¥öt
("T1Blck");

496 
pok
.
di•œy
.
	`£tCurs‹
(
s_vLöes
[0], (9 * 
f⁄tH
) + 10);

497 
pok
.
di•œy
.
	`¥öt
(
_s⁄gPos
[
s⁄gPos
][0], 10);

498 
pok
.
di•œy
.
	`£tCurs‹
(
s_vLöes
[0], (10 * 
f⁄tH
) + 11);

499 
pok
.
di•œy
.
	`¥öt
("T2Blck");

500 
pok
.
di•œy
.
	`£tCurs‹
(
s_vLöes
[0], (11 * 
f⁄tH
) + 12);

501 
pok
.
di•œy
.
	`¥öt
(
_s⁄gPos
[
s⁄gPos
][1], 10);

502 
pok
.
di•œy
.
	`£tCurs‹
(
s_vLöes
[0], (12 * 
f⁄tH
) + 13);

503 
pok
.
di•œy
.
	`¥öt
("T3Blck");

504 
pok
.
di•œy
.
	`£tCurs‹
(
s_vLöes
[0], (13 * 
f⁄tH
) + 14);

505 
pok
.
di•œy
.
	`¥öt
(
_s⁄gPos
[
s⁄gPos
][2], 10);

506 
pok
.
di•œy
.
	`£tCurs‹
(
s_vLöes
[0], (14 * 
f⁄tH
) + 15);

507 
pok
.
di•œy
.
	`¥öt
("MuteT1");

508 
pok
.
di•œy
.
	`£tCurs‹
(
s_vLöes
[0], (15 * 
f⁄tH
) + 16);

509 
pok
.
di•œy
.
	`¥öt
(!
åack1⁄
, 10);

510 
pok
.
di•œy
.
	`£tCurs‹
(
s_vLöes
[0], (16 * 
f⁄tH
) + 17);

511 
pok
.
di•œy
.
	`¥öt
("MuteT2");

512 
pok
.
di•œy
.
	`£tCurs‹
(
s_vLöes
[0], (17 * 
f⁄tH
) + 18);

513 
pok
.
di•œy
.
	`¥öt
(!
åack2⁄
, 10);

514 
pok
.
di•œy
.
	`£tCurs‹
(
s_vLöes
[0], (18 * 
f⁄tH
) + 19);

515 
pok
.
di•œy
.
	`¥öt
("MuteT3");

516 
pok
.
di•œy
.
	`£tCurs‹
(
s_vLöes
[0], (19 * 
f⁄tH
) + 20);

517 
pok
.
di•œy
.
	`¥öt
(!
åack3⁄
, 10);

518 
	}
}

520 
boﬁ
 
	gTøckî
::
	$∂ayTøckî
(){

521 
boﬁ
 
ch™ged
=
Ál£
;

522 i‡(
∂ayîpos
!=
›œyîpos
) {

523 
ch™ged
=
åue
;

524 
uöt8_t
 
a
 = 20;

525 
uöt8_t
 
b
 = 42;

526 
rowPoöãr
=
∂ayîpos
;

528 i‡(
rowPoöãr
 < 
a
){

531 
s¸ìnPoöãr
=
rowPoöãr
;

533 i‡((
rowPoöãr
 >
a
Ë&& (rowPoöã∏<
b
)){

536 
s¸ìnMö
=
rowPoöãr
;

538 
s¸ìnMax
=
rowPoöãr
+
b
;

540 i‡(
rowPoöãr
 > 
b
){

541 
s¸ìnPoöãr
=
rowPoöãr
;

545 i‡(
£quí˚pos
 !
o£qpos
) {

546 
s⁄gPos
=
£quí˚pos
;

547 
rowPoöãr
 = 0;

548 
s¸ìnMö
 = 0;

549 
s¸ìnMax
 = 20;

550 
s¸ìnPoöãr
 = 0;

555 
›œyîpos
 = 
∂ayîpos
;

556 
o£qpos
 = 
£quí˚pos
;

558  
ch™ged
;

559 
	}
}

561 
	gTøckî
::
	$möMax
(
_vÆ
, 
_mö
, 
_max
){

562 i‡(
_vÆ
 < 
_mö
Ë 
_max
;

563 i‡(
_vÆ
 > 
_max
Ë 
_mö
;

564  
_vÆ
;

565 
	}
}

567 
öt32_t
 
	gTøckî
::
	$exåa˘NextI¡egî
(* 
°r
) {

568 
c
=1; 
n
=0; 
boﬁ
 
√g©ive
=
Ál£
;

569 
vÆue°r
[10]; 
öt32_t
 
numbî
=0;

570 !(()
c
 > 47 && ()c < 58)) {

572 
c
 = *
°r
++;

573 i‡(
c
 =
NULL
)  0;

575 i‡(*(
°r
-2)=='-'Ë
√g©ive
=
åue
;

576 ()
c
 > 47 && ()c < 58) {

578 
vÆue°r
[
n
++] = 
c
;

579 
c
 = *
°r
++;

580 i‡(
c
==
NULL
) ;

581 i‡(
n
==10) ;

583 
exp
=1;

584 
i
=0; i<
n
; i++) {

585 
t
;

586 
t
 = (
uöt8_t
)
vÆue°r
[
n
-
i
-1]-(uint8_t)('0');

587 
numbî
 +
exp
*
t
;

588 
exp
 *= 10;

590 i‡(
√g©ive
Ë
numbî
 *= -1;

591 i‡(
c
==
NULL
Ë
_ãxçå
=NULL;

593 
_ãxçå
=
°r
;

595  
numbî
;

596 
	}
}

600 
	gTøckî
::
	$lﬂdS⁄g
(* 
s⁄g«me
){

601 
pok
.
di•œy
.
	`˛ór
();

602 
ãxt
[80];

603 i‡(
	`fûeO≥n
(
s⁄g«me
, 
FILE_MODE_READONLY
))  1;

604 
numö°
=1; 
num∑t
=1;

607 
	`fûeRódLöe
(&
ãxt
[0],80);

608 
	`fûeRódLöe
(&
ãxt
[0],80);

609 
	`fûeRódLöe
(&
ãxt
[0],80);

610 
bpm
 = (
öt16_t
)
	`exåa˘NextI¡egî
(&
ãxt
[0]);

611 
	`fûeRódLöe
(&
ãxt
[0],80);

612 
œ°P©ã∫
 = 
	`exåa˘NextI¡egî
(&
ãxt
[0]);

613 
s⁄g
.
s⁄g_íd
=
œ°P©ã∫
;

614 
	`fûeRódLöe
(&
ãxt
[0],80);

615 
lo›To
 = 
	`exåa˘NextI¡egî
(&
ãxt
[0]);

616 
s⁄g
.
s⁄g_lo›
 = 
lo›To
;

617 
	`fûeRódLöe
(&
ãxt
[0],80);

618 
numP©ches
 = 
	`exåa˘NextI¡egî
(&
ãxt
[0]);

621 
uöt8_t
 
highe°BlockInU£
=0;

622 
i
=0; i<=
œ°P©ã∫
; i++) {

623 
ãmp
 = 0;

624 
	`fûeRódLöe
(&
ãxt
[0],80);

625 
ãmp
 = 
	`exåa˘NextI¡egî
(&
ãxt
[0]);

626 
j
=0; j<3; j++) {

627 
ãmp
 = 
	`exåa˘NextI¡egî
(
_ãxçå
);

628 i‡(
ãmp
>
highe°BlockInU£
) highestBlockInUse =Åemp;

629 
_s⁄gPos
[
i
][
j
] = 
ãmp
;

633 
b
=0; b<30; b++) {

634 
ãmp
=0;

635 i‡(
pok
.
	`upd©e
()) {

636 
pok
.
di•œy
.
	`£tCurs‹
(0,0);

637 
pok
.
di•œy
.
	`¥öén
("Loading...");

638 
pok
.
di•œy
.
	`¥öt
(
b
);

639 
pok
.
di•œy
.
	`¥öt
("/30");

641 
r
=0;Ñ<64;Ñ++) {

642 
	`fûeRódLöe
(&
ãxt
[0],80);

643 i‡(
b
>
highe°BlockInU£
) {

644 
_pôch
[
b
][
r
] = 255;

645 
_∑tch
[
b
][
r
] = 0;

647 
ãmp
 = 
	`exåa˘NextI¡egî
(&
ãxt
[0]);

648 
ãmp
 = 
	`exåa˘NextI¡egî
(
_ãxçå
);

649 
ãmp
 = 
	`exåa˘NextI¡egî
(
_ãxçå
);

650 
_pôch
[
b
][
r
] = 
ãmp
;

651 
ãmp
 = 
	`exåa˘NextI¡egî
(
_ãxçå
);

652 
_∑tch
[
b
][
r
] = 
ãmp
;

660 
i
=1;i<=
numP©ches
;i++) {

661 
≤ame
[10];

662 
	`fûeRódLöe
(&
≤ame
[0],10);

663 
	`°r˝y
(&
∑tch«mes
[
i
][0],&
≤ame
[0]);

664 
	`fûeRódLöe
(&
ãxt
[0],80);

665 
∑tch
[
i
].
wave
 = 
	`exåa˘NextI¡egî
(&
ãxt
[0]);

666 
	`fûeRódLöe
(&
ãxt
[0],80);

667 
∑tch
[
i
].
vﬁ
 = 
	`exåa˘NextI¡egî
(&
ãxt
[0]);

668 
	`fûeRódLöe
(&
ãxt
[0],80);

669 
∑tch
[
i
].
bídøã
 = 
	`exåa˘NextI¡egî
(&
ãxt
[0]);

670 
	`fûeRódLöe
(&
ãxt
[0],80);

671 
∑tch
[
i
].
maxbíd
 = 
	`exåa˘NextI¡egî
(&
ãxt
[0]);

672 
	`fûeRódLöe
(&
ãxt
[0],80);

673 
∑tch
[
i
].
vibøã
 = 
	`exåa˘NextI¡egî
(&
ãxt
[0]);

674 
	`fûeRódLöe
(&
ãxt
[0],80);

675 
∑tch
[
i
].
¨pmode
 = 
	`exåa˘NextI¡egî
(&
ãxt
[0]);

676 
	`fûeRódLöe
(&
ãxt
[0],80);

677 
∑tch
[
i
].
ad§
 = 
	`exåa˘NextI¡egî
(&
ãxt
[0]);

678 
	`fûeRódLöe
(&
ãxt
[0],80);

679 
∑tch
[
i
].
©èck
 = 
	`exåa˘NextI¡egî
(&
ãxt
[0]);

680 
	`fûeRódLöe
(&
ãxt
[0],80);

681 
∑tch
[
i
].
deˇy
 = 
	`exåa˘NextI¡egî
(&
ãxt
[0]);

682 
	`fûeRódLöe
(&
ãxt
[0],80);

683 
∑tch
[
i
].
su°aö
 = 
	`exåa˘NextI¡egî
(&
ãxt
[0]);

684 
	`fûeRódLöe
(&
ãxt
[0],80);

685 
∑tch
[
i
].
ªÀa£
 = 
	`exåa˘NextI¡egî
(&
ãxt
[0]);

686 
	`fûeRódLöe
(&
ãxt
[0],80);

687 
∑tch
[
i
].
lo›
 = 
	`exåa˘NextI¡egî
(&
ãxt
[0]);

688 
	`fûeRódLöe
(&
ãxt
[0],80);

689 
∑tch
[
i
].
echo
 = 
	`exåa˘NextI¡egî
(&
ãxt
[0]);

690 
	`fûeRódLöe
(&
ãxt
[0],80);

691 
∑tch
[
i
].
ovîdrive
 = 
	`exåa˘NextI¡egî
(&
ãxt
[0]);

692 
	`fûeRódLöe
(&
ãxt
[0],80);

693 
∑tch
[
i
].
kick
 = 
	`exåa˘NextI¡egî
(&
ãxt
[0]);

696 
	`fûeClo£
();

699 
	}
}

701 
	gTøckî
::
	$ßveS⁄g
(
FILE
* 
Â
){

704 
	`Ârötf
(
Â
, 
rboyCh¨
);

705 
	`Ârötf
(
Â
, 
unknownCh¨
);

706 
	`Ârötf
(
Â
, "\n");

707 
	`Ârötf
(
Â
, 
BPMCh¨
);

708 
	`Ârötf
(
Â
, "%d", 
bpm
);

709 
	`Ârötf
(
Â
, "\n");

710 
	`Ârötf
(
Â
, 
œ°P©ã∫Ch¨
);

711 
	`Ârötf
(
Â
, "%d", 
œ°P©ã∫
);

712 
	`Ârötf
(
Â
, "\n");

713 
	`Ârötf
(
Â
, 
lo›ToCh¨
);

714 
	`Ârötf
(
Â
, "%d", 
lo›To
);

715 
	`Ârötf
(
Â
, "\n");

716 
	`Ârötf
(
Â
, 
∑tchesCh¨
);

717 
	`Ârötf
(
Â
, "15");

718 
	`Ârötf
(
Â
, "\n");

721 
uöt8_t
 
j
 = 0; j < 
œ°P©ã∫
 + 1; j++){

722 
	`Ârötf
(
Â
, 
blockSeqCh¨
);

723 
	`Ârötf
(
Â
, "%d ,", 
j
);

724 
	`Ârötf
(
Â
, "%d,%d,%d\n", 
_s⁄gPos
[
j
][0], _songPos[j][1], _songPos[j][2]);

728 
uöt8_t
 
k
 = 0; k < 30; k++){

729 
uöt8_t
 
j
 = 0; j < 64; j++){

731 
	`Ârötf
(
Â
, 
blockCh¨
);

732 
	`Ârötf
(
Â
, "%d", 
k
);

733 
	`Ârötf
(
Â
, 
rowCh¨
);

734 
	`Ârötf
(
Â
, "%d ,", 
j
);

735 if(
_pôch
[
k
][
j
] =-1Ë
	`Ârötf
(
Â
, "255,");

736 
	`Ârötf
(
Â
, "%d,", 
_pôch
[
k
][
j
]);

737 if(
_∑tch
[
k
][
j
] =-1Ë
	`Ârötf
(
Â
, "0");

738 
	`Ârötf
(
Â
, "%d\n", 
_∑tch
[
k
][
j
]);

741 
	}
}

743 
	gTøckî
::
	$ötToCh¨
(
_öt
, 
uöt8_t
 
digô
){

744  ((
_öt
 % (
	`pow
(10, (
digô
 + 1)))) / (pow(10, digit))) + '0';

745 
	}
}

747 
uöt8_t
 
	gTøckî
::
	$digôLígth
(
_öt
){

748 
uöt8_t
 
i
 = 9; i > 0; i--){

749 if((
_öt
 % (
	`pow
(10, (
i
 + 1))) / (pow(10, i))) != 0)  i;

751 
	}
}

753 
	gTøckî
::
	$fûePutI¡
(
_öt
){

754 
ãxt
[16];

755 
	`ôﬂ
(
_öt
, 
ãxt
, 10);

756 
	`fûePröt
(
ãxt
, 
	`°æí
(text)+1);

757 
	}
}

759 
	gTøckî
::
	$fûePröt
(c⁄° *
_°rög
, 
uöt8_t
 
_size
){

760 
uöt8_t
 
i
 = 0; i < 
_size
 - 1; i++){

761 
	`fûePutCh¨
(
_°rög
[
i
]);

763 
	}
}

765 
	gTøckî
::
	$fûePröt
(* 
_°rög
, 
uöt8_t
 
_size
){

766 
uöt8_t
 
i
 = 0; i < 
_size
 - 1; i++){

767 
	`fûePutCh¨
(
_°rög
[
i
]);

769 
	}
}

771 
	gTøckî
::
	$NL
(){

772 
	`fûePutCh¨
(10);

774 
	}
}

776 
	gTøckî
::
	$öôSåóms
() {

778 
uöt16_t
 
blocknum
;

783 
blocknum
=
_s⁄gPos
[
s⁄gPos
][0];

784 
s⁄g
.
ö°rumít_°ªam
[0]=(
uöt8_t
*)&
_∑tch
[
blocknum
][0];

785 
s⁄g
.
nŸe_°ªam
[0]=(
uöt8_t
*)&
_pôch
[
blocknum
][0];

791 
blocknum
=
_s⁄gPos
[
s⁄gPos
][1];

792 
s⁄g
.
ö°rumít_°ªam
[1]=(
uöt8_t
*)&
_∑tch
[
blocknum
][0];

793 
s⁄g
.
nŸe_°ªam
[1]=(
uöt8_t
*)&
_pôch
[
blocknum
][0];

799 
blocknum
=
_s⁄gPos
[
s⁄gPos
][2];

800 
s⁄g
.
ö°rumít_°ªam
[2]=(
uöt8_t
*)&
_∑tch
[
blocknum
][0];

801 
s⁄g
.
nŸe_°ªam
[2]=(
uöt8_t
*)&
_pôch
[
blocknum
][0];

803 
	}
}

805 
	gTøckî
::
	$∂ayPä
() {

806 
ßm∂e•îtick
 = ()((60.0f/()
bpm
)*
POK_AUD_FREQ
)/16;

807 
ßm∂e•î∑âîn
 = 
ßm∂e•îtick
 * 64;

808 
∂ayîpos
=0;

809 
£quí˚pos
 = 
s⁄gPos
;

810 
nŸëick
 = 
ßm∂e•îtick
;

811 
tick
=3;

813 
	`£tOSC
(&
osc1
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);

814 
	`£tOSC
(&
osc2
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);

815 
	`£tOSC
(&
osc3
,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);

817 
Tøckî
::
	`öôSåóms
();

818 
°ªamsFun˘i⁄
 
±r
 = (°ªamsFun˘i⁄)&
Tøckî
::
öôSåóms
;

819 
	`ªgi°îSåómsCÆlback
(
±r
);

821 
∂ayög
=
åue
;

822 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Tracker\Tracker.h

1 
	~"Pokôto.h
"

3 
uöt8_t
 
s¸ìnW
, 
s¸ìnH
, 
‰ameR©e
, 
f⁄tW
, 
f⁄tH
, 
s¸ìn
, 
buâ⁄RïótFøme
;

4 
Pokôto
::
C‹e
 
pok
;

6 ˛as†
	cModes
 {

7 
	måavñ
 = 0,

8 
	medô
,

9 
	m£âögs
,

10 
	m∂ay


13 
	sTøckî
{

14 
	m¥iv©e
:

15 
uöt16_t
 
›œyîpos
=255, 
	mo£qpos
=0;

16 
uöt8_t
 
	mmaxCﬁumn
 = 3, 
	mmaxRow
 = 64;

17 
öt8_t
 
	mcﬁPoöãr
 = 0, 
	mrowPoöãr
 = 0;

18 
öt8_t
 
	ms¸ìnMaxInô
 = 20, 
	ms¸ìnMö
 = 0, 
	ms¸ìnMax
 = 
s¸ìnMaxInô
, 
	ms¸ìnPoöãr
 = 0, 
	m∂ayPoöãr
 = 0;

19 
öt16_t
 
	mbpm
 = 60, 
	m_ãmpo
 = 60;

20 
uöt32_t
 
	m∂ayTime
 = 0;

21 
öt8_t
 
	ms⁄gPos
 = 0, 
	mœ°P©ã∫
 = 0, 
	mlo›To
 = 0, 
	mnumP©ches
=0;

22 
Modes
 
	mmode
 = Modes::
åavñ
;

23 
öt8_t
 
	medô
 = 0;

24 
uöt8_t
 
	mvLöes
[4] = {((
f⁄tW
 + 1Ë* 2Ë+ 1, (((f⁄tW + 1Ë* 9Ë+ 
vLöes
[0]) + 1, (((fontW + 1) * 9) + vLines[1]) + 1, (((fontW + 1) * 9) + vLines[2]) + 1};

25 
uöt8_t
 
	ms_vLöes
[2] = {
vLöes
[3] + 2, 0};

26 
öt8_t
 
	m_∑tch
[30][64];

27 
öt8_t
 
	m_pôch
[30][64];

28 
öt8_t
 
	m_s⁄gPos
[10][3] = {{0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}, {0, 0, 0}};

29 
boﬁ
 
	mt1Muã
 = 0, 
	mt2Muã
 = 0, 
	mt3Muã
 = 0;

30 
ötToCh¨
(
_öt
, 
uöt8_t
 
digô
);

31 
uöt8_t
 
digôLígth
(
_öt
);

32 
öt32_t
 
exåa˘NextI¡egî
(*);

33 * 
	m_ãxçå
;

35 
	mpublic
:

36 
SëCﬁ‹PÆëã
();

37 
öôSåóms
();

38 
em±yP©ches
();

39 
öt8_t
 
	m_cuºpôch
=34, 
	m_cuº∑tch
=1;

40 
	m∑tch«mes
[15][10];

41 
boﬁ
 
	m∂ay
 = 0, 
	m°›
 = 0;

42 
boﬁ
 
checkBuâ⁄s
();

43 
∂ayNŸe
();

44 
∂ayPä
();

45 
fûlAºays
();

46 
døwLöes
();

47 
døwPoöãr
();

48 
døwHñpB¨
();

49 
døwIsPœyög
();

50 
¥ötVÆues
();

51 
¥ötSëtögs
();

52 
boﬁ
 
∂ayTøckî
();

53 
öt16_t
 
gëBPM
();

54 
möMax
(
_vÆ
, 
_mö
, 
_max
);

55 
ßveS⁄g
(
FILE
* 
Â
);

56 
lﬂdS⁄g
(*);

57 
fûePutI¡
(
_öt
);

58 
fûePröt
(c⁄° *
_°rög
, 
uöt8_t
 
_size
);

59 
fûePröt
(*
_°rög
, 
uöt8_t
 
_size
);

60 
NL
();

61 
öt8_t
 
gëLP
(){  
	mœ°P©ã∫
; }

64 
Tøckî
 
åackî
;

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Tracker\main.cpp

1 
	~"Pokôto.h
"

2 
	~"Aºays.h
"

8 
	gPokôto
::
C‹e
 
pok
;

11 
uöt8_t
 
	gs¸ìnW
 = 220, 
	gs¸ìnH
 = 176, 
	g‰ameR©e
 = 30, 
	gf⁄tW
 = 5, 
	gf⁄tH
 = 7, 
	gs¸ìn
 = 0, 
	gbuâ⁄RïótFøme
 = 0;

13 
	~"Tøckî.h
"

14 
Tøckî
 
	gåackî
;

16 
	~"P©chSëtögs.h
"

18 
	$maö
(){

19 
boﬁ
 
upd©íow
=
åue
;

23 
pok
.
di•œy
.
≥rsi°í˚
=
åue
;

24 #i‚de‡
POK_SIM


25 
buâ⁄RïótFøme
=0;

27 
pok
.
	`begö
();

28 
	`pokInôSD
();

29 
åackî
.
	`lﬂdS⁄g
("finalc.rbs");

30 
pok
.
di•œy
.
width
 = 
s¸ìnW
;

31 
pok
.
di•œy
.
height
 = 
s¸ìnH
;

32 
pok
.
di•œy
.
	`£tF⁄t
(
f⁄t5x7
);

33 
pok
.
	`£tFømeR©e
(
‰ameR©e
);

36 
pok
.
	`isRu¬ög
()){

37 i‡(
s¸ìn
){

38 if(
pok
.
	`upd©e
(
åue
)){

39 
upd©íow
=
åue
;

40 
	`checkBuâ⁄s
();

41 
åackî
.
	`SëCﬁ‹PÆëã
();

42 
pok
.
di•œy
.
	`˛ór
();

43 
	`¥ötSëtögs
();

44 
	`døwPoöãr
();

45 
åackî
.
	`døwHñpB¨
();

48 if(!
s¸ìn
) {

49 i‡(
åackî
.
∂ay
){

50 i‡(
åackî
.
	`∂ayTøckî
()) {

51 
upd©íow
 = 
åue
;

54 if(
pok
.
	`upd©e
(
åue
)){

55 i‡(
åackî
.
	`checkBuâ⁄s
()) {

56 
upd©íow
=
åue
;

60 i‡(!
s¸ìn
 && 
upd©íow
) {

61 
åackî
.
	`SëCﬁ‹PÆëã
();

62 
pok
.
di•œy
.
	`˛ór
();

63 
åackî
.
	`døwIsPœyög
();

64 
åackî
.
	`døwLöes
();

65 
åackî
.
	`¥ötVÆues
();

66 
åackî
.
	`¥ötSëtögs
();

67 
åackî
.
	`døwPoöãr
();

68 
åackî
.
	`døwHñpB¨
();

71 i‡(
upd©íow
) {

72 
pok
.
di•œy
.
	`upd©e
();

74 
upd©íow
 = 
Ál£
;

77 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\UpdateAndClipRect\My_settings.h

12 #i‚de‡
MY_SETTINGS_H


13 
	#MY_SETTINGS_H


	)

15 
	#PROJ_HIRES
 1

16 
	#PROJ_ENABLE_SOUND
 0

17 
	#PROJ_USE_FPS_COUNTER


	)

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\UpdateAndClipRect\gfxdata.h

5 
	~<°döt.h
>

7 c⁄° 
uöt16_t
 
	gpokôto_∑l
[] = {

11 c⁄° 
uöt8_t
 
	gpokôto_bmp
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\UpdateAndClipRect\main.cpp

1 
	~"Pokôto.h
"

2 
	~"gfxd©a.h
"

4 
	gPokôto
::
C‹e
 
mygame
;

6 
	$maö
 () {

8 
mygame
.
	`begö
();

10 
mygame
.
di•œy
.
≥rsi°í˚
 = 1;

12 
mygame
.
di•œy
.
	`lﬂd565PÆëã
–
pokôto_∑l
 );

14 
mygame
.
di•œy
.
	`˛ór
();

16 
mygame
.
	`£tFømeR©e
(100);

18 
boﬁ
 
doDøwBôm≠
 = 
åue
;

19 
mygame
.
	`isRu¬ög
()) {

21 ! 
mygame
.
	`upd©e
());

24 
uöt16_t
 
xx
 = 0;

25  
uöt16_t
 
x
=0; x < 220*2-4; x+=2 ) {

27 if(
x
<220)

28 
xx
 = 
x
;

30 
xx
 = 
x
 - 220 + 1;

32 if(
doDøwBôm≠
) {

37 
mygame
.
di•œy
.
	`£tClùRe˘
(
xx
, 0, 1, 176);

38 
mygame
.
di•œy
.
	`døwBôm≠
(0, 0, 
pokôto_bmp
);

45 
mygame
.
di•œy
.
	`£tCﬁ‹
(0);

46 
mygame
.
di•œy
.
	`fûlRe˘™gÀ
(
xx
, 0, 1, 176);

50 ! 
mygame
.
	`upd©e
(
Ál£
, 
xx
, 0, 1, 176));

53 
doDøwBôm≠
 = !doDrawBitmap;

57 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\WavePlayer\My_settings.h

12 #i‚de‡
MY_SETTINGS_H


13 
	#MY_SETTINGS_H


	)

15 
	#PROJ_HIRES
 0

16 
	#PROJ_ENABLE_SOUND
 1

17 
	#PROJ_ENABLE_SYNTH
 1

	)

18 
	#PROJ_SOUND_BUFFERED
 1

19 
	#NOPETITFATFS


	)

20 
	#PROJ_AUD_FREQ
 11025

21 
	#PROJ_FPS
 40

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\WavePlayer\main.cpp

2 
	~"Pokôto.h
"

3 
	~"SDFûeSy°em.h
"

4 
	~"wave_∂ayî.h
"

6 
SDFûeSy°em
 
sd
–
P0_9
, 
P0_8
, 
P0_6
, 
P0_7
, "sd");

8 
	gPokôto
::
C‹e
 
game
;

10 
wave_∂ayî
 
	gwavî
;

11 
FILE
 *
	gÂ
 = 
NULL
;

13 
	$maö
() {

16 
Â
 = 
	`f›í
("/sd/play11.wav", "rb");

18 if(
Â
 =
NULL
){

19 
game
.
di•œy
.
	`¥öén
("Couldn't open file");

21 
wavî
.
	`£t_vîbosôy
(0);

22 
wavî
.
	`∂ay2
(
Â
);

23 
game
.
	`begö
();

24 
game
.
di•œy
.
	`lﬂdRGBPÆëã
(
∑ÀâeRaöbow
);

25 
game
.
di•œy
.
∑Àâe
[0]=0;

26 
uöt8_t
 
ob
=0, 
cou
=1;

27 
game
.
	`isRu¬ög
())

29 
wavî
.
	`upd©e
(
Â
);

30 i‡(
game
.
	`upd©e
()) {

34 
i
=0;i<110;i++) {

35 
game
.
di•œy
.
	`døwPixñ
(
i
,game.di•œy.
height
/2+((
öt16_t
)
soundbuf
[
soundbufödex
+i]-127)/2,soundbuf[soundbufindex+i]>>3);

37 
ob
 = 
soundbuf
[
soundbufödex
]>>2;

38 
game
.
di•œy
.
	`£tCﬁ‹
(
ob
/2);

39 
game
.
di•œy
.
	`døwCú˛e
(game.di•œy.
width
/2,game.di•œy.
height
/2,
ob
);

44 
	`f£ek
(
Â
, 0, 
SEEK_SET
);

45 
	`waô
(3.0);

46 
	`f˛o£
(
Â
);

47 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\WavePlayer\wave_player.cpp

14 
	~"Pokôto.h
"

15 
	~"HWSound.h
"

16 
	~<°dio.h
>

17 
	~<wave_∂ayî.h
>

19 
	gPokôto
::
Di•œy
 
_wpdi•
;

23 
	gwave_∂ayî
::
	$wave_∂ayî
()

27 
vîbosôy
=0;

28 
	}
}

37 
	gwave_∂ayî
::
	$£t_vîbosôy
(
v
)

39 
vîbosôy
=
v
;

40 
	}
}

49 
	gwave_∂ayî
::
	$∂ay
(
FILE
 *
wavefûe
)

51 
chunk_id
,
chunk_size
,
ch™√l
;

52 
d©a
,
ßmp_öt
,
i
;

53 
dac_d©a
;

54 
¶i˚_vÆue
;

55 *
¶i˚_buf
;

56 *
d©a_•å
;

57 *
d©a_b±r
;

58 *
d©a_w±r
;

59 
FMT_STRUCT
 
wav_f‹m©
;

60 
¶i˚
,
num_¶i˚s
;

61 
DAC_w±r
=0;

62 
DAC_Ωå
=0;

63 
i
=0;i<256;i+=2) {

64 
DAC_fifo
[
i
]=0;

65 
DAC_fifo
[
i
+1]=3000;

67 
DAC_w±r
=4;

68 
DAC_⁄
=0;

70 
	`‰ód
(&
chunk_id
,4,1,
wavefûe
);

71 
	`‰ód
(&
chunk_size
,4,1,
wavefûe
);

72 !
	`„of
(
wavefûe
)) {

73 i‡(
vîbosôy
) {

74 
_wpdi•
.
	`¥öt
("Read chunk ID: ");

75 
_wpdi•
.
	`¥öt
(
chunk_id
);

76 
_wpdi•
.
	`¥öt
(", size: ");

77 
_wpdi•
.
	`¥öén
(
chunk_size
); }

78 
chunk_id
) {

80 
	`‰ód
(&
d©a
,4,1,
wavefûe
);

81 i‡(
vîbosôy
) {

82 
_wpdi•
.
	`¥öén
("RIFF chunk");

83 
_wpdi•
.
	`¥öt
(" chunk size: ");

84 
_wpdi•
.
	`¥öt
(
chunk_size
);

85 
_wpdi•
.
	`¥öt
(" RIFFÅype: ");

86 
_wpdi•
.
	`¥öén
(
d©a
);

90 
	`‰ód
(&
wav_f‹m©
,(wav_f‹m©),1,
wavefûe
);

91 i‡(
vîbosôy
) {

92 
_wpdi•
.
	`¥öén
("FORMAT chunk");

93 
_wpdi•
.
	`¥öt
(" chunk size: ");

94 
_wpdi•
.
	`¥öt
(
chunk_size
);

95 
_wpdi•
.
	`¥öt
(" compression code: ");

96 
_wpdi•
.
	`¥öén
(
wav_f‹m©
.
comp_code
);

97 
_wpdi•
.
	`¥öt
(
wav_f‹m©
.
num_ch™√ls
);

98 
_wpdi•
.
	`¥öén
(" channels");

99 
_wpdi•
.
	`¥öt
(
wav_f‹m©
.
ßm∂e_øã
);

100 
_wpdi•
.
	`¥öén
(" samples/sec");

101 
_wpdi•
.
	`¥öt
(
wav_f‹m©
.
avg_Bps
);

102 
_wpdi•
.
	`¥öén
(" bytes/sec");

103 
_wpdi•
.
	`¥öt
(" blockálign: ");

104 
_wpdi•
.
	`¥öén
(
wav_f‹m©
.
block_Æign
);

105 
_wpdi•
.
	`¥öt
(
wav_f‹m©
.
sig_bps
);

106 
_wpdi•
.
	`¥öén
(" bitsÖer sample");

108 i‡(
chunk_size
 > (
wav_f‹m©
))

109 
	`f£ek
(
wavefûe
,
chunk_size
-(
wav_f‹m©
),
SEEK_CUR
);

113 
¶i˚_buf
=(*)
	`mÆloc
(
wav_f‹m©
.
block_Æign
);

114 i‡(!
¶i˚_buf
) {

115 
_wpdi•
.
	`¥öén
("UnableÅo malloc slice buffer");

116 
	`exô
(1);

118 
num_¶i˚s
=
chunk_size
/
wav_f‹m©
.
block_Æign
;

119 
ßmp_öt
=1000000/(
wav_f‹m©
.
ßm∂e_øã
);

120 i‡(
vîbosôy
) {

121 
_wpdi•
.
	`¥öén
("DATA chunk");

122 
_wpdi•
.
	`¥öt
(" chunk size: ");

123 
_wpdi•
.
	`¥öén
(
chunk_size
);

124 
_wpdi•
.
	`¥öt
(" slices: ");

125 
_wpdi•
.
	`¥öén
(
num_¶i˚s
);

129 i‡(
vîbosôy
)

130 
tick
.
	`©èch_us
(
this
,&
wave_∂ayî
::
dac_out
, 500000);

132 
tick
.
	`©èch_us
(
this
,&
wave_∂ayî
::
dac_out
, 
ßmp_öt
);

133 
DAC_⁄
=1;

145 
¶i˚
=0;¶i˚<
num_¶i˚s
;slice+=1) {

146 
	`‰ód
(
¶i˚_buf
,
wav_f‹m©
.
block_Æign
,1,
wavefûe
);

147 i‡(
	`„of
(
wavefûe
)) {

148 
_wpdi•
.
	`¥öén
("Oops --ÇotÉnough slices inÅhe wave file");

149 
	`exô
(1);

151 
d©a_•å
=(*)
¶i˚_buf
;

152 
d©a_b±r
=(*)
¶i˚_buf
;

153 
d©a_w±r
=(*)
¶i˚_buf
;

154 
¶i˚_vÆue
=0;

155 
ch™√l
=0;ch™√l<
wav_f‹m©
.
num_ch™√ls
;channel++) {

156 
wav_f‹m©
.
sig_bps
) {

158 i‡(
vîbosôy
) {

159 
_wpdi•
.
	`¥öt
("16 bit channel ");

160 
_wpdi•
.
	`¥öt
(
ch™√l
);

161 
_wpdi•
.
	`¥öt
(" data=");

162 
_wpdi•
.
	`¥öén
(
d©a_•å
[
ch™√l
]); }

163 
¶i˚_vÆue
+=
d©a_•å
[
ch™√l
];

166 i‡(
vîbosôy
) {

167 
_wpdi•
.
	`¥öt
("32 bit channel ");

168 
_wpdi•
.
	`¥öt
(
ch™√l
);

169 
_wpdi•
.
	`¥öt
(" data=");

170 
_wpdi•
.
	`¥öén
(
d©a_w±r
[
ch™√l
]);}

171 
¶i˚_vÆue
+=
d©a_w±r
[
ch™√l
];

174 i‡(
vîbosôy
) {

175 
_wpdi•
.
	`¥öt
("8 bit channel ");

176 
_wpdi•
.
	`¥öt
(
ch™√l
);

177 
_wpdi•
.
	`¥öt
(" data=");

178 
_wpdi•
.
	`¥öén
(()
d©a_b±r
[
ch™√l
]); }

179 
¶i˚_vÆue
+=
d©a_b±r
[
ch™√l
];

183 
¶i˚_vÆue
/=
wav_f‹m©
.
num_ch™√ls
;

187 
wav_f‹m©
.
sig_bps
) {

188 8: 
¶i˚_vÆue
<<=8;

190 16: 
¶i˚_vÆue
+=32768;

192 32: 
¶i˚_vÆue
>>=16;

193 
¶i˚_vÆue
+=32768;

196 
dac_d©a
=()
¶i˚_vÆue
;

197 
DAC_fifo
[
DAC_w±r
]=
dac_d©a
;

198 
DAC_w±r
=(DAC_wptr+1) & 0xff;

199 
DAC_w±r
==
DAC_Ωå
) {

202 
DAC_⁄
=0;

203 
tick
.
	`dëach
();

204 
	`‰ì
(
¶i˚_buf
);

207 i‡(
vîbosôy
) {

208 
_wpdi•
.
	`¥öt
("INFO chunk, size: ");

209 
_wpdi•
.
	`¥öén
(
chunk_size
); }

210 
	`f£ek
(
wavefûe
,
chunk_size
,
SEEK_CUR
);

213 
_wpdi•
.
	`¥öt
("unknown chunkÅype: ");

214 
_wpdi•
.
	`¥öt
(
chunk_id
);

215 
_wpdi•
.
	`¥öt
(", size:");

216 
_wpdi•
.
	`¥öén
(
chunk_size
);

217 
d©a
=
	`f£ek
(
wavefûe
,
chunk_size
,
SEEK_CUR
);

220 
	`‰ód
(&
chunk_id
,4,1,
wavefûe
);

221 
	`‰ód
(&
chunk_size
,4,1,
wavefûe
);

223 
	}
}

234 
	gchunk_id
,
	gchunk_size
,
	gch™√l
;

235 
	gd©a
,
	gßmp_öt
,
	gi
;

236 
	gdac_d©a
;

237 
	g¶i˚_vÆue
;

238 *
	g¶i˚_buf
;

239 *
	gd©a_•å
;

240 *
	gd©a_b±r
;

241 *
	gd©a_w±r
;

242 
FMT_STRUCT
 
	gwav_f‹m©
;

243 
	g¶i˚
,
	gnum_¶i˚s
;

245 
	gwave_∂ayî
::
	$∂ay2
(
FILE
 *
wavefûe
)

248 
cuºít_FIFO
=0;

249 
DAC_w±r
=0;

250 
DAC_Ωå
=0;

251 
DAC_w±r
=4;

252 
DAC_⁄
=0;

253 
öôd⁄e
=0;

255 
	`‰ód
(&
chunk_id
,4,1,
wavefûe
);

256 
	`‰ód
(&
chunk_size
,4,1,
wavefûe
);

257 !
	`„of
(
wavefûe
Ë&& !
öôd⁄e
) {

258 i‡(
vîbosôy
) {

259 
_wpdi•
.
	`¥öt
("Read chunk ID: ");

260 
_wpdi•
.
	`¥öt
(
chunk_id
);

261 
_wpdi•
.
	`¥öt
(", size: ");

262 
_wpdi•
.
	`¥öén
(
chunk_size
); }

263 
chunk_id
) {

265 
	`‰ód
(&
d©a
,4,1,
wavefûe
);

266 i‡(
vîbosôy
) {

267 
_wpdi•
.
	`¥öén
("RIFF chunk");

268 
_wpdi•
.
	`¥öt
(" chunk size: ");

269 
_wpdi•
.
	`¥öt
(
chunk_size
);

270 
_wpdi•
.
	`¥öt
(" RIFFÅype: ");

271 
_wpdi•
.
	`¥öén
(
d©a
);

275 
	`‰ód
(&
wav_f‹m©
,(wav_f‹m©),1,
wavefûe
);

276 i‡(
vîbosôy
) {

277 
_wpdi•
.
	`¥öén
("FORMAT chunk");

278 
_wpdi•
.
	`¥öt
(" chunk size: ");

279 
_wpdi•
.
	`¥öt
(
chunk_size
);

280 
_wpdi•
.
	`¥öt
(" compression code: ");

281 
_wpdi•
.
	`¥öén
(
wav_f‹m©
.
comp_code
);

282 
_wpdi•
.
	`¥öt
(
wav_f‹m©
.
num_ch™√ls
);

283 
_wpdi•
.
	`¥öén
(" channels");

284 
_wpdi•
.
	`¥öt
(
wav_f‹m©
.
ßm∂e_øã
);

285 
_wpdi•
.
	`¥öén
(" samples/sec");

286 
_wpdi•
.
	`¥öt
(
wav_f‹m©
.
avg_Bps
);

287 
_wpdi•
.
	`¥öén
(" bytes/sec");

288 
_wpdi•
.
	`¥öt
(" blockálign: ");

289 
_wpdi•
.
	`¥öén
(
wav_f‹m©
.
block_Æign
);

290 
_wpdi•
.
	`¥öt
(
wav_f‹m©
.
sig_bps
);

291 
_wpdi•
.
	`¥öén
(" bitsÖer sample");

293 i‡(
chunk_size
 > (
wav_f‹m©
))

294 
	`f£ek
(
wavefûe
,
chunk_size
-(
wav_f‹m©
),
SEEK_CUR
);

299 
¶i˚_buf
=(*)
	`mÆloc
(
wav_f‹m©
.
block_Æign
*
SBUFSIZE
);

300 i‡(!
¶i˚_buf
) {

301 
_wpdi•
.
	`¥öén
("UnableÅo malloc slice buffer");

302 
	`exô
(1);

304 
num_¶i˚s
=
chunk_size
/
wav_f‹m©
.
block_Æign
;

305 
ßmp_öt
=1000000/(
wav_f‹m©
.
ßm∂e_øã
);

306 i‡(
vîbosôy
) {

307 
_wpdi•
.
	`¥öén
("DATA chunk");

308 
_wpdi•
.
	`¥öt
(" chunk size: ");

309 
_wpdi•
.
	`¥öén
(
chunk_size
);

310 
_wpdi•
.
	`¥öt
(" slices: ");

311 
_wpdi•
.
	`¥öén
(
num_¶i˚s
);

317 
¶i˚
=0;¶i˚<
SBUFSIZE
;slice+=1) {

318 
	`‰ód
(
¶i˚_buf
,
wav_f‹m©
.
block_Æign
,1,
wavefûe
);

319 i‡(
	`„of
(
wavefûe
)) {

320 
_wpdi•
.
	`¥öén
("Oops --ÇotÉnough slices inÅhe wave file");

321 
	`exô
(1);

323 
d©a_•å
=(*)
¶i˚_buf
;

324 
d©a_b±r
=(*)
¶i˚_buf
;

325 
d©a_w±r
=(*)
¶i˚_buf
;

326 
¶i˚_vÆue
=0;

327 
ch™√l
=0;ch™√l<
wav_f‹m©
.
num_ch™√ls
;channel++) {

328 
wav_f‹m©
.
sig_bps
) {

330 
¶i˚_vÆue
+=
d©a_•å
[
ch™√l
];

333 
¶i˚_vÆue
+=
d©a_w±r
[
ch™√l
];

336 
¶i˚_vÆue
+=
d©a_b±r
[
ch™√l
];

340 
¶i˚_vÆue
/=
wav_f‹m©
.
num_ch™√ls
;

344 
wav_f‹m©
.
sig_bps
) {

345 8: 
¶i˚_vÆue
<<=8;

347 16: 
¶i˚_vÆue
+=32768;

349 32: 
¶i˚_vÆue
>>=16;

350 
¶i˚_vÆue
+=32768;

353 
dac_d©a
=()
¶i˚_vÆue
;

354 
soundbuf
[
DAC_w±r
]=
dac_d©a
/256;

355 
DAC_w±r
=(DAC_wptr+1);

359 
öôd⁄e
=1;

360 
soundbufödex
=0;

361 
cuºít_FIFO
=0;

364 i‡(
vîbosôy
) {

365 
_wpdi•
.
	`¥öt
("INFO chunk, size: ");

366 
_wpdi•
.
	`¥öén
(
chunk_size
); }

367 
	`f£ek
(
wavefûe
,
chunk_size
,
SEEK_CUR
);

370 
_wpdi•
.
	`¥öt
("unknown chunkÅype: ");

371 
_wpdi•
.
	`¥öt
(
chunk_id
);

372 
_wpdi•
.
	`¥öt
(", size:");

373 
_wpdi•
.
	`¥öén
(
chunk_size
);

374 
d©a
=
	`f£ek
(
wavefûe
,
chunk_size
,
SEEK_CUR
);

377 
	`‰ód
(&
chunk_id
,4,1,
wavefûe
);

378 
	`‰ód
(&
chunk_size
,4,1,
wavefûe
);

380 
	}
}

383 
	gwave_∂ayî
::
	$upd©e
(
FILE
 *
wavefûe
)

385 
DAC_w±r
=0; 
Pokôto
::
°ªam⁄
=1;

386 i‡(
soundbufödex
>(
SBUFSIZE
/4)-1 && 
cuºít_FIFO
 == 0) {

388 
	`‰ód
(
¶i˚_buf
,
wav_f‹m©
.
block_Æign
,
SBUFSIZE
/4,
wavefûe
);

389 
¶i˚
=0;¶i˚<
SBUFSIZE
/4;) {

390 
d©a_•å
=(*)(
¶i˚_buf
+(
¶i˚
<<1)); slice++;

391 
¶i˚_vÆue
=
d©a_•å
[0]+32768;

392 
soundbuf
[
¶i˚
]=
¶i˚_vÆue
>>8;

394 
cuºít_FIFO
++;

395 } i‡(
soundbufödex
>(
SBUFSIZE
/2)-1 && 
cuºít_FIFO
 == 1)

398 
	`‰ód
(
¶i˚_buf
,
wav_f‹m©
.
block_Æign
,
SBUFSIZE
/4,
wavefûe
);

399 
¶i˚
=0;¶i˚<
SBUFSIZE
/4;) {

400 
d©a_•å
=(*)(
¶i˚_buf
+(
¶i˚
<<1)); slice++;

401 
¶i˚_vÆue
=
d©a_•å
[0]+32768;

402 
soundbuf
[
¶i˚
+
SBUFSIZE
/4]=
¶i˚_vÆue
>>8;

404 
cuºít_FIFO
++;

405 } i‡(
soundbufödex
>((
SBUFSIZE
/4)*3)-1 && 
cuºít_FIFO
 == 2)

408 
	`‰ód
(
¶i˚_buf
,
wav_f‹m©
.
block_Æign
,
SBUFSIZE
/4,
wavefûe
);

409 
¶i˚
=0;¶i˚<
SBUFSIZE
/4;) {

410 
d©a_•å
=(*)(
¶i˚_buf
+(
¶i˚
<<1)); slice++;

411 
¶i˚_vÆue
=
d©a_•å
[0]+32768;

412 
soundbuf
[
¶i˚
+(
SBUFSIZE
/2)]=
¶i˚_vÆue
>>8;

414 
cuºít_FIFO
++;

415 } i‡(
soundbufödex
<((
SBUFSIZE
/4)Ë&& 
cuºít_FIFO
 == 3)

418 
	`‰ód
(
¶i˚_buf
,
wav_f‹m©
.
block_Æign
,
SBUFSIZE
/4,
wavefûe
);

419 
¶i˚
=0;¶i˚<
SBUFSIZE
/4;) {

420 
d©a_•å
=(*)(
¶i˚_buf
+(
¶i˚
<<1)); slice++;

421 
¶i˚_vÆue
=
d©a_•å
[0]+32768;

422 
soundbuf
[
¶i˚
+((
SBUFSIZE
/4)*3)]=
¶i˚_vÆue
>>8;

424 
cuºít_FIFO
=0;

504 
	}
}

506 
	gwave_∂ayî
::
	$dac_out
()

508 i‡(
DAC_⁄
) {

511 
soundbuf
[
DAC_Ωå
] = (
DAC_fifo
[DAC_rptr]>>8);

513 
DAC_Ωå
=(DAC_rptr+1) & 0xff;

515 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\WavePlayer\wave_player.h

1 
	~"Pokôto.h
"

3 
	suFMT_STRUCT
 {

4 
	mcomp_code
;

5 
	mnum_ch™√ls
;

6 
	mßm∂e_øã
;

7 
	mavg_Bps
;

8 
	mblock_Æign
;

9 
	msig_bps
;

10 } 
	tFMT_STRUCT
;

33 ˛as†
	cwave_∂ayî
 {

35 
	mpublic
:

40 
wave_∂ayî
();

46 
∂ay
(
FILE
 *
wavefûe
);

48 
∂ay2
(
FILE
 *
wavefûe
);

50 
upd©e
(
FILE
 *
wavefûe
);

63 
£t_vîbosôy
(
v
);

65 
	m¥iv©e
:

66 
dac_out
();

67 
	mvîbosôy
;

69 
Tickî
 
	mtick
;

70 
	mDAC_fifo
[256];

71 
	mcuºít_FIFO
;

72 
	mDAC_w±r
;

73 vﬁ©ûê
	mDAC_Ωå
;

74 
	mDAC_⁄
;

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Zuzupong\My_settings.h

12 #i‚de‡
MY_SETTINGS_H


13 
	#MY_SETTINGS_H


	)

15 
	#PROJ_HIRES
 0

16 
	#PROJ_ENABLE_SOUND
 1

17 

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Zuzupong\textures.h

1 #i‚de‡
TEXTURES_H_INCLUDED


2 
	#TEXTURES_H_INCLUDED


	)

4 
	~<°döt.h
>

7 c⁄° 
uöt16_t
 
	gdeÁu…36
[] = {

11 c⁄° 
uöt8_t
 
	g∑ddÀgªí
[] =

35 c⁄° 
uöt8_t
 
	g∑ddÀªd
[] =

60 c⁄° 
uöt8_t
 
	gbÆlgªí
[] =

70 c⁄° 
uöt8_t
 
	gbÆÃed
[] =

80 c⁄° 
uöt8_t
 
	gbÆl‹™ge
[] =

90 c⁄° 
uöt8_t
 
	gbÆlyñlow
[] =

100 c⁄° 
uöt8_t
 
	gbÆlblue
[] =

110 c⁄° 
uöt8_t
 
	gbÆlgøy
[] =

121 c⁄° 
uöt8_t
 
	gtôÀ
[] =

145 c⁄° 
uöt8_t
 
	gbäa
[] =

159 c⁄° 
uöt8_t
 
	gback¨row
[] =

	@C:\PokittoLib_Git\PokittoLib_curr\Examples\Zuzupong\zuzupong.cpp

1 
	~"Pokôto.h
"

2 
	~"ãxtuªs.h
"

4 
	gPokôto
::
C‹e
 
game
;

6 
sc‹ïoöt
(
boﬁ
 
voidª£t
);

7 
ídgame
(
boﬁ
 
voidª£t2
);

9 
	g°©us
 = 0;

10 
	gcurs‹
 = 0;

11 
boﬁ
 
	gshowdifficu…y
 = 0;

12 
boﬁ
 
	gshowbÆlmovemít
 = 0;

13 
	gbÆlcﬁ‹
 = 0;

14 
	gdifficu…y£âög
 = 60;

16 
	g∑d∂ayî
 = 34;

17 
	g∑dcom
 = 34;

18 
	gbÆlx
 = 52;

19 
	gbÆly
 = 41;

20 
	gmovex
 = 0;

21 
	gmovey
 = 0;

22 
	gsc‹ïœyî
 = 0;

23 
	gsc‹ecom
 = 0;

24 
	gs¸ìnW
 = 110;

25 
	gs¸ìnH
 = 88;

26 
	gmovecom
 = 0;

27 
	gmovïœyî
 = 0;

28 
	gdifficu…y
 = 60;

29 
boﬁ
 
	ggame°¨t
 = 0;

30 
boﬁ
 
	gwö
 = 0;

32 
	$maö
 ()

34 
game
.
di•œy
.
width
 = 
s¸ìnW
;

35 
game
.
di•œy
.
height
 = 
s¸ìnH
;

36 
game
.
di•œy
.
	`lﬂd565PÆëã
(
deÁu…36
);

37 
game
.
	`£tFømeR©e
(60);

39 
game
.
	`begö
();

40 
game
.
di•œy
.
	`£tF⁄t
(
f⁄t5x7
);

42 
game
.
	`isRu¬ög
())

44 i‡(
game
.
	`upd©e
())

49 i‡(
°©us
 == 0)

52 i‡(
curs‹
 == 0)

54 
curs‹
 = 30;

56 i‡(
game
.
buâ⁄s
.
	`¥es£d
(
BTN_DOWN
Ë&& (
curs‹
 < 50))

58 
curs‹
 += 10;

60 i‡(
game
.
buâ⁄s
.
	`¥es£d
(
BTN_UP
Ë&& (
curs‹
 > 30))

62 
curs‹
 -= 10;

64 i‡(
game
.
buâ⁄s
.
	`ªÀa£d
(
BTN_A
))

66 
°©us
 = ((
curs‹
 / 10) - 2);

67 
curs‹
 = 0;

68 
	`ídgame
(1);

71 
game
.
di•œy
.
	`døwBôm≠
(0,0,
tôÀ
);

72 
game
.
di•œy
.
	`£tCurs‹
(20,30);

73 
game
.
di•œy
.
	`¥öt
("Play");

74 
game
.
di•œy
.
	`£tCurs‹
(20,40);

75 
game
.
di•œy
.
	`¥öt
("Settings");

76 
game
.
di•œy
.
	`£tCurs‹
(20,50);

77 
game
.
di•œy
.
	`¥öt
("About");

78 
game
.
di•œy
.
	`£tCurs‹
(90,80);

79 
game
.
di•œy
.
	`¥öt
("1.0");

81 
game
.
di•œy
.
	`£tCurs‹
(10,
curs‹
);

82 
game
.
di•œy
.
	`¥öt
(">");

87 i‡(
°©us
 == 2)

90 i‡(
curs‹
 == 0)

92 
curs‹
 = 20;

94 i‡(
game
.
buâ⁄s
.
	`¥es£d
(
BTN_DOWN
Ë&& (
curs‹
 < 60))

96 i‡(
curs‹
 == 20) cursor += 20;

97 
curs‹
 += 10;

99 i‡(
game
.
buâ⁄s
.
	`¥es£d
(
BTN_UP
Ë&& (
curs‹
 > 20))

101 i‡(
curs‹
 == 40) cursor -= 20;

102 
curs‹
 -= 10;

104 i‡(
game
.
buâ⁄s
.
	`¥es£d
(
BTN_B
))

106 
°©us
 = 0;

107 
curs‹
 = 0;

109 i‡(
game
.
buâ⁄s
.
	`¥es£d
(
BTN_LEFT
))

111 i‡(
curs‹
 =20 && 
bÆlcﬁ‹
 > 0) ballcolor -= 1;

112 i‡(
curs‹
 =40Ë
showbÆlmovemít
 = 0;

113 i‡(
curs‹
 =50Ë
showdifficu…y
 = 0;

114 i‡(
curs‹
 =60 && 
difficu…y£âög
 < 80) difficultysetting += 10;

116 i‡(
game
.
buâ⁄s
.
	`¥es£d
(
BTN_RIGHT
))

118 i‡(
curs‹
 =20 && 
bÆlcﬁ‹
 < 4) ballcolor += 1;

119 i‡(
curs‹
 =40Ë
showbÆlmovemít
 = 1;

120 i‡(
curs‹
 =50Ë
showdifficu…y
 = 1;

121 i‡(
curs‹
 =60 && 
difficu…y£âög
 > 40) difficultysetting -= 10;

124 
game
.
di•œy
.
	`£tCurs‹
(1,1);

125 
game
.
di•œy
.
	`¥öt
("SETTINGS:");

127 
game
.
di•œy
.
	`£tCurs‹
(15,20);

128 
game
.
di•œy
.
	`¥öt
("Ball: ");

129 i‡(
bÆlcﬁ‹
 == 0)

131 
game
.
di•œy
.
	`døwBôm≠
(50,21,
bÆlgªí
);

132 
game
.
di•œy
.
	`døwBôm≠
(58,21,
bÆÃed
);

134 i‡(
bÆlcﬁ‹
 =1Ë
game
.
di•œy
.
	`døwBôm≠
(50,21,
bÆl‹™ge
);

135 i‡(
bÆlcﬁ‹
 =2Ë
game
.
di•œy
.
	`døwBôm≠
(50,21,
bÆlyñlow
);

136 i‡(
bÆlcﬁ‹
 =3Ë
game
.
di•œy
.
	`døwBôm≠
(50,21,
bÆlblue
);

137 i‡(
bÆlcﬁ‹
 =4Ë
game
.
di•œy
.
	`døwBôm≠
(50,21,
bÆlgøy
);

138 
game
.
di•œy
.
	`£tCurs‹
(15,40);

139 
game
.
di•œy
.
	`¥öt
("shwBllMvmnt: ");

140 i‡(
showbÆlmovemít
 =0Ë
game
.
di•œy
.
	`¥öt
("off");

141 i‡(
showbÆlmovemít
 =1Ë
game
.
di•œy
.
	`¥öt
("on");

142 
game
.
di•œy
.
	`£tCurs‹
(15,50);

143 
game
.
di•œy
.
	`¥öt
("shwDffclty: ");

144 i‡(
showdifficu…y
 =0Ë
game
.
di•œy
.
	`¥öt
("off");

145 i‡(
showdifficu…y
 =1Ë
game
.
di•œy
.
	`¥öt
("on");

146 
game
.
di•œy
.
	`£tCurs‹
(15,60);

147 
game
.
di•œy
.
	`¥öt
("strtDffclty: ");

148 i‡(
difficu…y£âög
 =80Ë
game
.
di•œy
.
	`¥öt
("--");

149 i‡(
difficu…y£âög
 =70Ë
game
.
di•œy
.
	`¥öt
("-");

150 i‡(
difficu…y£âög
 =60Ë
game
.
di•œy
.
	`¥öt
("0");

151 i‡(
difficu…y£âög
 =50Ë
game
.
di•œy
.
	`¥öt
("+");

152 i‡(
difficu…y£âög
 =40Ë
game
.
di•œy
.
	`¥öt
("++");

153 
game
.
di•œy
.
	`døwBôm≠
(2,76,
back¨row
);

155 
game
.
di•œy
.
	`£tCurs‹
(5,
curs‹
);

156 
game
.
di•œy
.
	`¥öt
(">");

161 i‡(
°©us
 == 3)

164 i‡(
game
.
buâ⁄s
.
	`¥es£d
(
BTN_B
))

166 
°©us
 = 0;

167 
curs‹
 = 0;

168 
	`ídgame
(1);

171 
game
.
di•œy
.
	`døwBôm≠
(2,2,
∑ddÀgªí
);

172 
game
.
di•œy
.
	`døwBôm≠
(13,2,
∑ddÀªd
);

173 
game
.
di•œy
.
	`døwBôm≠
(24,2,
bÆlgªí
);

174 
game
.
di•œy
.
	`døwBôm≠
(35,2,
bÆÃed
);

175 
game
.
di•œy
.
	`døwBôm≠
(46,2,
bÆl‹™ge
);

176 
game
.
di•œy
.
	`døwBôm≠
(57,2,
bÆlyñlow
);

177 
game
.
di•œy
.
	`døwBôm≠
(68,2,
bÆlblue
);

178 
game
.
di•œy
.
	`døwBôm≠
(79,2,
bÆlgøy
);

180 
game
.
di•œy
.
	`£tCurs‹
(5,55);

181 
game
.
di•œy
.
	`¥öt
("By: Zuzu36");

182 
game
.
di•œy
.
	`£tCurs‹
(5,65);

183 
game
.
di•œy
.
	`¥öt
("Made for Pokitto");

184 
game
.
di•œy
.
	`døwBôm≠
(2,76,
back¨row
);

189 i‡(
°©us
 == 1)

192 i‡(
game
.
buâ⁄s
.
	`ª≥©
(
BTN_UP
,0Ë&& (
∑d∂ayî
 > 0Ë&& (
game°¨t
 == 1))

194 
∑d∂ayî
 -= 2;

195 
movïœyî
 = -1;

197 
movïœyî
 = 0;

198 i‡(
game
.
buâ⁄s
.
	`ª≥©
(
BTN_DOWN
,0Ë&& (
∑d∂ayî
 < 67Ë&& (
game°¨t
 == 1))

200 
∑d∂ayî
 += 2;

201 
movïœyî
 = 1;

203 
movïœyî
 = 0;

204 i‡(
game
.
buâ⁄s
.
	`¥es£d
(
BTN_A
Ë&& (
game°¨t
 == 0))

206 i‡(
wö
 == 0)

208 
movex
 = 3;

210 i‡(
wö
 == 1)

212 
movex
 = -3;

214 
game°¨t
 = 1;

216 i‡(
game
.
buâ⁄s
.
	`hñd
(
BTN_C
,15))

218 
°©us
 = 0;

219 
	`ídgame
(1);

222 i‡((
movecom
 > -2) && (movecom < 2))

224 
movecom
 = 
	`øndom
(-2,2);

226 i‡((
difficu…y
 == 10)||(difficulty == 100))

228 
	`ídgame
(1);

230 
difficu…y
 = (
difficu…y£âög
 - ((
sc‹ïœyî
 - 
sc‹ecom
)*2));

232 i‡(
game°¨t
 == 1)

234 
bÆlx
 +
movex
;

235 
bÆly
 +
movey
;

236 
∑dcom
 +
movecom
;

238 i‡(
movey
 == 0)

240 
movey
 = 
	`øndom
(-1,1);

243 i‡((
bÆlx
 - 1 <6Ë&& ((
bÆly
 + 6 >
∑d∂ayî
) && (bally <=Öadplayer + 20)))

245 
movex
 = 3;

246 
movey
 +((
movïœyî
 / 2)+((
bÆly
 - 
∑d∂ayî
) / 20));

248 i‡((
bÆlx
 + 7 >
s¸ìnW
 - 6Ë&& ((
bÆly
 + 6>
∑dcom
) && (bally <=Öadcom + 20)))

250 
movex
 = -3;

251 
movey
 +((
movecom
 / 4)+((
bÆly
 -
∑dcom
) / 20));

253 i‡((
bÆly
 <= 0) || (bally + 6 >= 88))

255 
movey
 *= -1;

258 i‡(
bÆlx
 <= 0)

260 
sc‹ecom
 += 1;

261 
wö
 = 0;

262 
	`sc‹ïoöt
(1);

264 i‡(
bÆlx
 + 6 >
s¸ìnW
)

266 
sc‹ïœyî
 += 1;

267 
wö
 = 1;

268 
	`sc‹ïoöt
(1);

270 i‡((
sc‹ïœyî
 =100Ë|| (
sc‹ecom
 == 100))

272 
	`ídgame
(1);

275 i‡((
bÆlx
 > 
difficu…y
Ë&& (
movex
 > 0))

277 i‡(
bÆly
 < 
∑dcom
 &&Öadcom > 1)

279 
movecom
 = -2;

281 i‡(
bÆly
 + 6 > 
∑dcom
 + 20 &&Öadcom + 20 < 86)

283 
movecom
 = 2;

286 i‡(
∑dcom
 - 1 <= 0)

288 
movecom
 = 2;

290 i‡(
∑dcom
 + 21 >= 86)

292 
movecom
 = -2;

297 
game
.
di•œy
.
	`£tCurs‹
(30,26);

298 
game
.
di•œy
.
	`¥öt
("Ready?");

299 
game
.
di•œy
.
	`døwBôm≠
(70,24,
bäa
);

302 i‡(
showdifficu…y
 == 1)

304 
game
.
di•œy
.
	`£tCurs‹
(1,81);

305 
game
.
di•œy
.
	`¥öt
(
difficu…y
);

307 i‡(
showbÆlmovemít
 == 1)

309 
game
.
di•œy
.
	`£tCurs‹
(1,1);

310 
game
.
di•œy
.
	`¥öt
(
movey
);

312 i‡(
sc‹ïœyî
 < 10Ë
game
.
di•œy
.
	`£tCurs‹
(43,5);

313 
game
.
di•œy
.
	`£tCurs‹
(37,5);

314 
game
.
di•œy
.
	`¥öt
(
sc‹ïœyî
);

315 
game
.
di•œy
.
	`¥öt
(" - ");

316 
game
.
di•œy
.
	`¥öt
(
sc‹ecom
);

317 
game
.
di•œy
.
	`døwBôm≠
(0,
∑d∂ayî
,
∑ddÀgªí
);

318 
game
.
di•œy
.
	`døwBôm≠
(
s¸ìnW
 - 6,
∑dcom
,
∑ddÀªd
);

320 i‡((
bÆlcﬁ‹
 =0Ë&& ((
movex
 < 0Ë|| ((
wö
 =1Ë&& (
game°¨t
 =0)))Ë
game
.
di•œy
.
	`døwBôm≠
(
bÆlx
,
bÆly
,
bÆÃed
);

321 i‡((
bÆlcﬁ‹
 =0Ë&& ((
movex
 > 0Ë|| ((
wö
 =0Ë&& (
game°¨t
 =0)))Ë
game
.
di•œy
.
	`døwBôm≠
(
bÆlx
,
bÆly
,
bÆlgªí
);

322 i‡(
bÆlcﬁ‹
 =1Ë
game
.
di•œy
.
	`døwBôm≠
(
bÆlx
,
bÆly
,
bÆl‹™ge
);

323 i‡(
bÆlcﬁ‹
 =2Ë
game
.
di•œy
.
	`døwBôm≠
(
bÆlx
,
bÆly
,
bÆlyñlow
);

324 i‡(
bÆlcﬁ‹
 =3Ë
game
.
di•œy
.
	`døwBôm≠
(
bÆlx
,
bÆly
,
bÆlblue
);

325 i‡(
bÆlcﬁ‹
 =4Ë
game
.
di•œy
.
	`døwBôm≠
(
bÆlx
,
bÆly
,
bÆlgøy
);

327 
game
.
di•œy
.
bgcﬁ‹
 = 14;

328 
game
.
di•œy
.
cﬁ‹
 = 15;

333 
	}
}

335 
	$sc‹ïoöt
(
boﬁ
 
voidª£t
)

337 
∑d∂ayî
 = 34;

338 
∑dcom
 = 34;

339 
bÆlx
 = 52;

340 
bÆly
 = 44;

341 
movex
 = 0;

342 
movey
 = 0;

343 
game°¨t
 = 0;

344 
movecom
 = 0;

345 
movïœyî
 = 0;

346 
	}
}

348 
	$ídgame
(
boﬁ
 
voidª£t2
)

350 
∑d∂ayî
 = 34;

351 
∑dcom
 = 34;

352 
bÆlx
 = 52;

353 
bÆly
 = 44;

354 
movex
 = 0;

355 
movey
 = 0;

356 
sc‹ïœyî
 = 0;

357 
sc‹ecom
 = 0;

358 
game°¨t
 = 0;

359 
wö
 = 0;

360 
movecom
 = 0;

361 
movïœyî
 = 0;

362 
difficu…y
 = 60;

363 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\TIC806x6.cpp

15 
	~"PokôtoF⁄ts.h
"

17 c⁄° 
	gf⁄tTIC806x6
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\ZXSpec.cpp

12 
	~"PokôtoF⁄ts.h
"

14 c⁄° 
	gf⁄tZXS≥c
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\adventurer12x16.cpp

10 
	~"PokôtoF⁄ts.h
"

12 c⁄° 
	gf⁄tAdvítuªr
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\donut7x10.cpp

11 
	~"PokôtoF⁄ts.h
"

13 c⁄° 
	gf⁄tD⁄ut
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\dragon6x8.cpp

11 
	~"PokôtoF⁄ts.h
"

13 c⁄° 
	gf⁄tDøg⁄
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\font3x3.cpp

20 #i‚de‡
FONT3x3_C


21 
	#FONT3x3_C


	)

23 
	~<°döt.h
>

24 
	~"PokôtoF⁄ts.h
"

27 
	#PROGMEM


	)

28 c⁄° 
uöt8_t
 
	gf⁄t3x3
[] 
	gPROGMEM
 = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\font3x5.cpp

20 #i‚de‡
FONT3X5_C


21 
	#FONT3X5_C


	)

23 
	~<°döt.h
>

24 
	~"PokôtoF⁄ts.h
"

26 
	#PROGMEM


	)

28 c⁄° 
uöt8_t
 
	gf⁄t3x5
[] 
	gPROGMEM
 = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\font5x7.cpp

20 #i‚de‡
FONT5X7_C


21 
	#FONT5X7_C


	)

23 
	~<°döt.h
>

24 
	~"PokôtoF⁄ts.h
"

26 
	#PROGMEM


	)

30 c⁄° 
uöt8_t
 
	gf⁄t5x7
[] 
	gPROGMEM
 = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\fontC64.cpp

11 
	~"PokôtoF⁄ts.h
"

13 c⁄° 
	gf⁄tC64
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\fontC64UIGfx.cpp

13 
	~"PokôtoF⁄ts.h
"

15 c⁄° 
	g‚tC64UIGfx
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\fontMonkey.cpp

11 
	~"PokôtoF⁄ts.h
"

13 c⁄° 
	gf⁄tM⁄key
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\karateka8x11.cpp

11 
	~"PokôtoF⁄ts.h
"

13 c⁄° 
	gf⁄tK¨©eka
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\koubit7x7.cpp

11 
	~"PokôtoF⁄ts.h
"

13 c⁄° 
	gf⁄tKoubô
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\mini4x6.cpp

11 
	~"PokôtoF⁄ts.h
"

13 c⁄° 
	gf⁄tMöi
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\runes6x8.cpp

12 
	~"PokôtoF⁄ts.h
"

14 c⁄° 
	gf⁄tRu√s
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\tight4x7.cpp

11 
	~"PokôtoF⁄ts.h
"

13 c⁄° 
	gf⁄tTight
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\tiny5x7.cpp

11 
	~"PokôtoF⁄ts.h
"

13 c⁄° 
	gf⁄tTöy
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\GBcompatibility.h

1 #i‚de‡
GBCOMPATIBILITY_H


2 
	#GBCOMPATIBILITY_H


	)

25 #i‚de‡
SETTINGS_C


26 
	#SETTINGS_C


	)

28 
	~"bö¨y.h
"

30 
	#_BV
(
bô
) (1 << (bit))

31 

	)

32 
	#NOROT
 0

	)

33 
	#ROTCCW
 1

	)

34 
	#ROT180
 2

	)

35 
	#ROTCW
 3

	)

38 
	#WHITE
 0

	)

39 
	#BLACK
 1

	)

40 
	#GRAY
 2

	)

41 
	#INVERT
 255

	)

44 
	#NOROT
 0

	)

45 
	#ROTCCW
 1

	)

46 
	#ROT180
 2

	)

47 
	#ROTCW
 3

	)

48 
	#NOFLIP
 0

	)

49 
	#FLIPH
 1

	)

50 
	#FLIPV
 2

	)

51 
	#FLIPVH
 3

	)

58 
	#NUM_CHANNELS
 1

59 
	#DISPLAY_ROT
 
NOROT


60 
	#ENABLE_GUI
 1

61 
	#ENABLE_BITMAPS
 1

62 
	#ENABLE_GRAYSCALE
 1

63 
	#EXTENDED_NOTE_RANGE
 0

64 

	)

66 
	#ENABLE_BATTERY
 0

67 
	#ENABLE_BACKLIGHT
 0

68 

	)

72 
	#SCR_CONTRAST
 60

	)

73 
	#START_MENU_TIMER
 255

74 

	)

76 
	#SETTINGS_PAGE
 ((c⁄° *)(0x7800-128))

	)

77 
	#SETTINGS_TOKEN
 0xC001

	)

78 
	#OFFSET_CURRENTGAME
 2

	)

79 
	#OFFSET_USERNAME
 11

	)

80 
	#USERNAME_LENGTH
 10

	)

81 
	#OFFSET_CONTRAST
 22

	)

82 
	#OFFSET_BACKLIGHT_MIN
 23

	)

83 
	#OFFSET_BACKLIGHT_MAX
 24

	)

84 
	#OFFSET_LIGHT_MIN
 25

	)

85 
	#OFFSET_LIGHT_MAX
 27

	)

86 
	#OFFSET_VOLUME_MAX
 29

	)

87 
	#OFFSET_VOLUME_DEFAULT
 30

	)

88 
	#OFFSET_START_MENU_TIMER
 31

	)

89 
	#OFFSET_BATTERY_CRITIC
 32

	)

90 
	#OFFSET_BATTERY_LOW
 34

	)

91 
	#OFFSET_BATTERY_MED
 36

	)

92 
	#OFFSET_BATTERY_FULL
 38

	)

95 
	#KEYBOARD_W
 16

	)

96 
	#KEYBOARD_H
 8

	)

99 
	#VOLUME_CHANNEL_MAX
 255/
NUM_CHANNELS
/7/9

100 

	)

102 
	#BAT_PIN
 6

103 
	#NUM_LVL
 4

	)

104 
	#BAT_LVL_CRITIC
 3500

	)

105 
	#BAT_LVL_LOW
 3550

	)

106 
	#BAT_LVL_MED
 3700

	)

107 
	#BAT_LVL_FULL
 3900

	)

110 
	#SD_CS
 10

	)

113 
	#BACKLIGHT_PIN
 5

	)

115 
	#BACKLIGHT_MIN
 0

	)

116 
	#BACKLIGHT_MAX
 255

	)

119 
	#AMBIENTLIGHT_PIN
 
A7


	)

121 
	#AMBIENTLIGHT_MIN
 800

122 
	#AMBIENTLIGHT_MAX
 980

123 
	#AMBIENTLIGHT_SMOOTHING
 16

	)

126 
	#NUM_BTN
 7

	)

128 #i‡
DISPLAY_ROT
 == 0

129 
	#BTN_UP
 1

	)

130 
	#BTN_RIGHT
 2

	)

131 
	#BTN_DOWN
 3

	)

132 
	#BTN_LEFT
 0

	)

133 #ñi‡
DISPLAY_ROT
 =
ROTCCW


134 
	#BTN_UP
 2

	)

135 
	#BTN_RIGHT
 3

	)

136 
	#BTN_DOWN
 0

	)

137 
	#BTN_LEFT
 1

	)

138 #ñi‡
DISPLAY_ROT
 =
ROT180


139 
	#BTN_UP
 3

	)

140 
	#BTN_RIGHT
 0

	)

141 
	#BTN_DOWN
 1

	)

142 
	#BTN_LEFT
 2

	)

143 #ñi‡
DISPLAY_ROT
 =
ROTCW


144 
	#BTN_UP
 0

	)

145 
	#BTN_RIGHT
 1

	)

146 
	#BTN_DOWN
 2

	)

147 
	#BTN_LEFT
 3

	)

149 
	#BTN_A
 4

	)

150 
	#BTN_B
 5

	)

151 
	#BTN_C
 6

	)

153 
	#BTN_LEFT_PIN
 0

	)

154 
	#BTN_UP_PIN
 1

	)

155 
	#BTN_RIGHT_PIN
 2

	)

156 
	#BTN_DOWN_PIN
 3

	)

157 
	#BTN_A_PIN
 4

	)

158 
	#BTN_B_PIN
 5

	)

159 
	#BTN_C_PIN
 6

	)

165 c⁄° 
uöt16_t
 
	g°¨tupSound
[] = {0x0005,0x3089,0x208,0x238,0x7849,0x1468,0x0000};

167 c⁄° 
uöt8_t
 
	ggamebuöoLogo
[] =

170 
B00000011
, 
B11100001
, 
B10000001
, 
B10000110
, 
B01111111
, 
B00111110
, 
B00011000
, 
B01101101
, 
B10000011
, 
B00001111
, B00001111,

171 
B00001110
, 
B00000001
, 
B10000011
, 
B10000110
, 
B01100000
, 
B00110011
, 
B00011000
, 
B01101101
, 
B11000011
, 
B00011001
, 
B10001111
,

172 
B00011000
, 
B00000011
, 
B11000011
, 
B10001110
, 
B01100000
, 
B00110011
, B00011000, 
B01101101
, 
B11100011
, 
B00110000
, 
B11001111
,

173 
B00011000
, 
B00000011
, 
B11000011
, 
B10011110
, 
B01100000
, 
B00110110
, 
B00110000
, 
B11001101
, 
B11100011
, B01100000, 
B11001111
,

174 
B00110000
, 
B00000110
, 
B11000111
, 
B10011110
, 
B01111110
, 
B00111110
, B00110000, 
B11001101
, 
B10110011
, 
B01100000
, 
B11001111
,

175 
B00110000
, 
B00001100
, 
B11000110
, 
B11110110
, 
B01100000
, 
B00110011
, B00110000, 
B11011001
, 
B10110110
, B01100000, 
B11001111
,

176 
B00110011
, 
B11001111
, 
B11001100
, 
B11110110
, 
B01100000
, 
B01100001
, 
B10110000
, 
B11011011
, 
B00011110
, B01100000, B11001111,

177 
B00110000
, 
B11011000
, 
B01101100
, 
B11100110
, 
B11000000
, 
B01100001
, 
B10110000
, 
B11011011
, 
B00011110
, B01100001, 
B10001111
,

178 
B00011001
, 
B10011000
, 
B01101100
, 
B11000110
, 
B11000000
, 
B01100011
, 
B10110001
, 
B10011011
, 
B00001110
, 
B00110011
, 
B00001111
,

179 
B00001111
, 
B10110000
, 
B01111000
, 
B11000110
, 
B11111111
, 
B01111110
, 
B00011111
, 
B00011011
, 
B00000110
, 
B00011110
, B00001111,

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\Localization.h

37 #i‚de‡
LOCALIZATION_H


38 
	#LOCALIZATION_H


	)

43 
	#STR_OK
 "OK"

	)

44 
	#STR_CANCEL
 "CANCEL"

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\Macros_LCD.h

37 #i‚de‡
LCDMACROS_H


38 
	#LCDMACROS_H


	)

44 #i‡
POK_BOARDREV
 == 1

46 
	#LCD_CD_PORT
 0

	)

47 
	#LCD_CD_PIN
 2

	)

48 
	#LCD_WR_PORT
 1

	)

49 
	#LCD_WR_PIN
 23

	)

50 
	#LCD_RD_PORT
 1

	)

51 
	#LCD_RD_PIN
 24

	)

52 
	#LCD_RES_PORT
 1

	)

53 
	#LCD_RES_PIN
 28

	)

56 
	#LCD_CD_PORT
 0

	)

57 
	#LCD_CD_PIN
 2

	)

58 
	#LCD_WR_PORT
 1

	)

59 
	#LCD_WR_PIN
 12

	)

60 
	#LCD_RD_PORT
 1

	)

61 
	#LCD_RD_PIN
 24

	)

62 
	#LCD_RES_PORT
 1

	)

63 
	#LCD_RES_PIN
 0

	)

70 
	#CLR_RESET
 
LPC_GPIO_PORT
->
CLR
[
LCD_RES_PORT
] = 1 << 
LCD_RES_PIN
;

71 
	#SET_RESET
 
LPC_GPIO_PORT
->
SET
[
LCD_RES_PORT
] = 1 << 
LCD_RES_PIN
;

72 

	)

73 
	#CLR_CD
 
LPC_GPIO_PORT
->
CLR
[
LCD_CD_PORT
] = 1 << 
LCD_CD_PIN
;

74 
	#SET_CD
 
LPC_GPIO_PORT
->
SET
[
LCD_CD_PORT
] = 1 << 
LCD_CD_PIN
;

75 

	)

76 
	#CLR_WR
 { 
LPC_GPIO_PORT
->
CLR
[
LCD_WR_PORT
] = 1 << 
LCD_WR_PIN
; 
	`__asm
("nop");}

77 
	#SET_WR
 
LPC_GPIO_PORT
->
SET
[
LCD_WR_PORT
] = 1 << 
LCD_WR_PIN
;

78 

	)

79 
	#CLR_RD
 
LPC_GPIO_PORT
->
CLR
[
LCD_RD_PORT
] = 1 << 
LCD_RD_PIN
;

80 
	#SET_RD
 
LPC_GPIO_PORT
->
SET
[
LCD_RD_PORT
] = 1 << 
LCD_RD_PIN
;

81 

	)

82 
	#SET_CS


83 
	#CLR_CS


	)

85 
	#CLR_CS_CD_SET_RD_WR
 {
CLR_CD
; 
SET_RD
; 
SET_WR
;}

	)

86 
	#CLR_CS_SET_CD_RD_WR
 {
SET_CD
; 
SET_RD
; 
SET_WR
;}

	)

87 
	#SET_CD_RD_WR
 {
SET_CD
; 
SET_RD
; 
SET_WR
;}

	)

88 
	#SET_WR_CS
 
SET_WR
;

	)

90 
	#SET_MASK_P2
 
LPC_GPIO_PORT
->
MASK
[2] = ~(0x7FFF8);

91 
	#CLR_MASK_P2
 
LPC_GPIO_PORT
->
MASK
[2] = 0;

92 

	)

97 
	#wrôe_comm™d
 
w_cmd_16


	)

98 
	#wrôe_d©a
 
w_d©a_16


	)

100 
	#AB_JUMP
 1024

101 
	#GB_JUMP
 504

102 

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PALETTES\palAction.cpp

1 
	~"PokôtoPÆëãs.h
"

5 c⁄° 
	g∑ÀâeA˘i⁄
[48] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PALETTES\palCGA.cpp

1 
	~"PokôtoPÆëãs.h
"

3 c⁄° 
	g∑ÀâeCGA
[48] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PALETTES\palDB16.cpp

1 
	~"PokôtoPÆëãs.h
"

3 c⁄° 
	g∑ÀâeDB16
[48] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PALETTES\palDefault.cpp

1 
	~"PokôtoPÆëãs.h
"

3 c⁄° 
	g∑ÀâeDeÁu…
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PALETTES\palGameboy.cpp

1 
	~"PokôtoPÆëãs.h
"

3 c⁄° 
	g∑ÀâeGameboy
[48] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PALETTES\palMagma.cpp

1 
	~"PokôtoPÆëãs.h
"

3 c⁄° 
	g∑ÀâeMagma
[48] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PALETTES\palMono.cpp

1 
	~"PokôtoPÆëãs.h
"

3 c⁄° 
	g∑ÀâeM⁄o
[48] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PALETTES\palPico.cpp

1 
	~"PokôtoPÆëãs.h
"

3 c⁄° 
	g∑ÀâePico
[16*3] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PALETTES\palRainbow.cpp

1 
	~"PokôtoPÆëãs.h
"

3 c⁄° 
	g∑ÀâeRaöbow
[48] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PALETTES\palZXSpec.cpp

1 
	~"PokôtoPÆëãs.h
"

3 c⁄° 
	g∑ÀâeZXS≥c
[48] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoBacklight.cpp

37 
	~"PokôtoBacklight.h
"

39 
usög
 
«me•a˚
 
	gPokôto
;

41 
boﬁ
 
	gBacklight
::
autom©ic
;

42 
uöt16_t
 
	gBacklight
::
ambõ¡Light
;

43 
uöt8_t
 
	gBacklight
::
backlightVÆue
;

44 
uöt8_t
 
	gBacklight
::
backlightMö
, Backlight::
backlightMax
;

45 
uöt16_t
 
	gBacklight
::
ambõ¡LightMö
, Backlight::
ambõ¡LightMax
;

47 
	gBacklight
::
	$begö
() {

49 
	}
}

51 
Backlight
::
	$£t
(
uöt8_t
 
vÆue
) {

53 
	}
}

55 
Backlight
::
	$upd©e
() {

57 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoBacklight.h

37 #i‚de‡
POKITTO_BACKLIGHT


38 
	#POKITTO_BACKLIGHT


	)

40 
	~<°döt.h
>

42 
«me•a˚
 
	gPokôto
 {

43 ˛as†
	cBacklight
 {

44 
	gpublic
:

45 
begö
();

46 
£t
(
uöt8_t
 
vÆue
);

47 
upd©e
();

48 
boﬁ
 
	gautom©ic
;

49 
uöt16_t
 
	gambõ¡Light
;

50 
uöt8_t
 
	gbacklightVÆue
;

51 
uöt8_t
 
	gbacklightMö
, 
	gbacklightMax
;

52 
uöt16_t
 
	gambõ¡LightMö
, 
	gambõ¡LightMax
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoBattery.cpp

37 
	~"PokôtoB©ãry.h
"

39 
usög
 
«me•a˚
 
	gPokôto
;

41 
boﬁ
 
	gB©ãry
::
show
;

42 
uöt8_t
 
	gB©ãry
::
Àvñ
;

43 
uöt16_t
 
	gB©ãry
::
vﬁège
;

44 
uöt16_t
 
	gB©ãry
::
thªshﬁds
[
NUM_LVL
];

45 
uöt8_t
 
	gB©ãry
::
√xtUpd©e
;

47 #i‚de‡
POK_SIM


48 
A«logIn
 
B©LevñPö
(
P0_23
);

51 
	gB©ãry
::
	$begö
() {

52 #i‚de‡
POK_SIM


53 
Àvñ
 = 
B©LevñPö
 * 0xFF;

56 
Àvñ
 = 0;

58 
	}
}

60 
	gB©ãry
::
	$upd©e
() {

61 #i‚de‡
POK_SIM


63 
Àvñ
 = 
B©LevñPö
 * 0xFF;

67 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoBattery.h

38 #i‚de‡
POKITTOBATTERY_H


39 
	#POKITTOBATTERY_H


	)

41 
	~<°döt.h
>

42 
	~"Pokôto_£âögs.h
"

43 
	~"GBcom∑tibûôy.h
"

44 
	~"PokôtoGlobs.h
"

47 
«me•a˚
 
	gPokôto
 {

49 ˛as†
	cB©ãry
 {

50 
	gpublic
:

51 
begö
();

52 
upd©e
();

53 
boﬁ
 
	gshow
;

54 
uöt8_t
 
	gÀvñ
;

55 
uöt16_t
 
	gvﬁège
;

56 
uöt16_t
 
	gthªshﬁds
[
NUM_LVL
];

57 
uöt8_t
 
	g√xtUpd©e
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoButtons.cpp

37 
	~"PokôtoC‹e.h
"

39 
usög
 
«me•a˚
 
	gPokôto
;

41 
uöt8_t
 
	gBuâ⁄s
::
pös
[
NUM_BTN
];

42 
uöt8_t
 
	gBuâ⁄s
::
°©es
[
NUM_BTN
];

43 
uöt8_t
 
	gBuâ⁄s
::
buâ⁄s_°©e
;

44 
uöt8_t
 
	gBuâ⁄s
::
buâ⁄s_hñd
;

45 
uöt8_t
 
	gBuâ⁄s
::
buâ⁄s_ªÀa£d
;

46 
uöt16_t
 
	gBuâ⁄s
::
cHWL⁄gPªss
 = 
CHWLONGPRESSTIMEOUT
;

49 
	gBuâ⁄s
::
	$begö
() {

50 #i‚de‡
POK_SIM


51 
Pokôto
::
	`öôBuâ⁄s
();

53 
	}
}

55 
	gBuâ⁄s
::
	$upd©e
() {

56 #i‡
POK_USE_CONSOLE


57 i‡(
c⁄sﬁe
.
c⁄scou¡î
) ;

59 #i‚de‡
POK_SIM


61 
uöt8_t
 
thisBuâ⁄
 = 0;ÅhisBuâ⁄ < 
NUM_BTN
;ÅhisButton++) {

62 i‡(
Pokôto
::
hñdSèãs
[
thisBuâ⁄
]) {

63 
°©es
[
thisBuâ⁄
]++;

64 i‡(
°©es
[
thisBuâ⁄
]==0xFF) states[thisButton]=2;

66 i‡(
°©es
[
thisBuâ⁄
] == 0)

68 i‡(
°©es
[
thisBuâ⁄
] == 0xFF)

69 
°©es
[
thisBuâ⁄
] = 0;

71 
°©es
[
thisBuâ⁄
] = 0xFF;

76 
simuœt‹
.
	`pﬁlBuâ⁄s
();

77 
uöt8_t
 
thisBuâ⁄
 = 0;ÅhisBuâ⁄ < 
NUM_BTN
;ÅhisButton++) {

78 
uöt8_t
 
ãmp
=0;

79 
thisBuâ⁄
) {

81 
ãmp
 = 
simuœt‹
.
	`À·Hñd
(); ;

83 
ãmp
 = 
simuœt‹
.
	`upHñd
(); ;

85 
ãmp
 = 
simuœt‹
.
	`rightHñd
(); ;

87 
ãmp
 = 
simuœt‹
.
	`downHñd
(); ;

89 
ãmp
 = 
simuœt‹
.
	`aHñd
(); ;

91 
ãmp
 = 
simuœt‹
.
	`bHñd
(); ;

93 
ãmp
 = 
simuœt‹
.
	`cHñd
(); ;

98 i‡(
ãmp
 =
HIGH
) {

99 
°©es
[
thisBuâ⁄
]++;

100 i‡(
°©es
[
thisBuâ⁄
]==0xFF) states[thisButton] = 2;

102 i‡(
°©es
[
thisBuâ⁄
] == 0)

104 i‡(
°©es
[
thisBuâ⁄
] == 0xFF)

105 
°©es
[
thisBuâ⁄
] = 0;

107 
°©es
[
thisBuâ⁄
] = 0xFF;

112 
	}
}

118 
boﬁ
 
	gBuâ⁄s
::
	$¥es£d
(
uöt8_t
 
buâ⁄
) {

119 i‡(
°©es
[
buâ⁄
] == 1)

120  
åue
;

122  
Ál£
;

123 
	}
}

128 
boﬁ
 
	gBuâ⁄s
::
	$ªÀa£d
(
uöt8_t
 
buâ⁄
) {

129 i‡(
°©es
[
buâ⁄
] == 0xFF)

130  
åue
;

132  
Ál£
;

133 
	}
}

141 
boﬁ
 
	gBuâ⁄s
::
	$hñd
(
uöt8_t
 
buâ⁄
, uöt8_à
time
){

142 if(
°©es
[
buâ⁄
] =(
time
+1))

143  
åue
;

145  
Ál£
;

146 
	}
}

154 
boﬁ
 
	gBuâ⁄s
::
	$ª≥©
(
uöt8_t
 
buâ⁄
, uöt8_à
≥riod
) {

155 i‡(
≥riod
 <= 1) {

156 i‡((
°©es
[
buâ⁄
] != 0xFF) && (states[button]))

157  
åue
;

159 i‡((
°©es
[
buâ⁄
] !0xFFË&& ((°©es[buâ⁄] % 
≥riod
) == 1))

160  
åue
;

162  
Ál£
;

163 
	}
}

170 
uöt8_t
 
	gBuâ⁄s
::
	$timeHñd
(
uöt8_t
 
buâ⁄
){

171 if(
°©es
[
buâ⁄
] != 0xFF)

172  
°©es
[
buâ⁄
];

176 
	}
}

178 
	gBuâ⁄s
::
	$pﬁlBuâ⁄s
() {

179 #ifde‡
POK_SIM


180 
simuœt‹
.
	`pﬁlBuâ⁄s
();

182 
uöt8_t
 
buâ⁄s_°©e_ﬁd
 = 
buâ⁄s_°©e
;

183 
buâ⁄s_°©e
 = 0;

184 i‡(
	`upBä
()Ë
buâ⁄s_°©e
 |(1<<
UPBIT
);

185 i‡(
	`downBä
()Ë
buâ⁄s_°©e
 |(1<<
DOWNBIT
);

186 i‡(
	`À·Bä
()Ë
buâ⁄s_°©e
 |(1<<
LEFTBIT
);

187 i‡(
	`rightBä
()Ë
buâ⁄s_°©e
 |(1<<
RIGHTBIT
);

188 i‡(
	`aBä
()Ë
buâ⁄s_°©e
 |(1<<
ABIT
);

189 i‡(
	`bBä
()Ë
buâ⁄s_°©e
 |(1<<
BBIT
);

190 i‡(
	`cBä
()Ë
buâ⁄s_°©e
 |(1<<
CBIT
);

191 
buâ⁄s_hñd
 = 
buâ⁄s_°©e
 & 
buâ⁄s_°©e_ﬁd
;

192 
buâ⁄s_ªÀa£d
 = ~
buâ⁄s_°©e
 & 
buâ⁄s_°©e_ﬁd
;

194 
	}
}

196 
uöt8_t
 
	gBuâ⁄s
::
	$aBä
() {

197 #ifde‡
POK_SIM


198  
simuœt‹
.
	`aBä
();

200  
Pokôto
::
hñdSèãs
[
BTN_A
];

202 
	}
}

205 
uöt8_t
 
	gBuâ⁄s
::
	$bBä
() {

206 #ifde‡
POK_SIM


207  
simuœt‹
.
	`bBä
();

209  
Pokôto
::
hñdSèãs
[
BTN_B
];

211 
	}
}

213 
uöt8_t
 
	gBuâ⁄s
::
	$cBä
() {

214 
uöt8_t
 
c
;

215 #ifde‡
POK_SIM


216 
c
 = 
simuœt‹
.
	`cBä
();

218 
c
 = 
Pokôto
::
hñdSèãs
[
BTN_C
];

220  
c
;

221 
	}
}

223 
uöt8_t
 
	gBuâ⁄s
::
	$À·Bä
() {

224 #ifde‡
POK_SIM


225  
simuœt‹
.
	`À·Bä
();

227  
Pokôto
::
hñdSèãs
[
BTN_LEFT
];

229 
	}
}

231 
uöt8_t
 
	gBuâ⁄s
::
	$rightBä
() {

232 #ifde‡
POK_SIM


233  
simuœt‹
.
	`rightBä
();

235  
Pokôto
::
hñdSèãs
[
BTN_RIGHT
];

237 
	}
}

239 
uöt8_t
 
	gBuâ⁄s
::
	$upBä
() {

240 #ifde‡
POK_SIM


241  
simuœt‹
.
	`upBä
();

243  
Pokôto
::
hñdSèãs
[
BTN_UP
];

245 
	}
}

247 
uöt8_t
 
	gBuâ⁄s
::
	$downBä
() {

248 #ifde‡
POK_SIM


249  
simuœt‹
.
	`downBä
();

251  
Pokôto
::
hñdSèãs
[
BTN_DOWN
];

253 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoButtons.h

38 #i‚de‡
POKITTOBUTTONS_H


39 
	#POKITTOBUTTONS_H


	)

41 
	~<°döt.h
>

42 
	~"Pokôto_£âögs.h
"

43 
	~"GBcom∑tibûôy.h
"

44 
	~"PokôtoGlobs.h
"

46 #i‚de‡
POK_SIM


47 
	~"HWBuâ⁄s.h
"

48 
	#CHWLONGPRESSTIMEOUT
 100

	)

50 
	~"PokôtoSimuœt‹.h
"

51 
	#CHWLONGPRESSTIMEOUT
 1000

	)

55 
«me•a˚
 
	gPokôto
 {

57 ˛as†
	cBuâ⁄s
 {

58 
	gpublic
:

60 
uöt8_t
 
buâ⁄s_°©e
, 
	gbuâ⁄s_hñd
, 
	gbuâ⁄s_ªÀa£d
;

61 
öôBuâ⁄s
();

62 
pﬁlBuâ⁄s
();

63 
uöt8_t
 
À·Bä
();

64 
uöt8_t
 
rightBä
();

65 
uöt8_t
 
upBä
();

66 
uöt8_t
 
downBä
();

67 
uöt8_t
 
aBä
();

68 
uöt8_t
 
bBä
();

69 
uöt8_t
 
cBä
();

70 
uöt8_t
 
À·Hñd
();

71 
uöt8_t
 
rightHñd
();

72 
uöt8_t
 
upHñd
();

73 
uöt8_t
 
downHñd
();

74 
uöt8_t
 
aHñd
();

75 
uöt8_t
 
bHñd
();

76 
uöt8_t
 
cHñd
();

78 
uöt8_t
 
À·Rñó£d
();

79 
uöt8_t
 
rightRñó£d
();

80 
uöt8_t
 
upRñó£d
();

81 
uöt8_t
 
downRñó£d
();

82 
uöt8_t
 
aRñó£d
();

83 
uöt8_t
 
bRñó£d
();

84 
uöt8_t
 
cRñó£d
();

87 
begö
();

88 
upd©e
();

89 
boﬁ
 
¥es£d
(
uöt8_t
 
buâ⁄
);

90 
boﬁ
 
ªÀa£d
(
uöt8_t
 
buâ⁄
);

91 
boﬁ
 
hñd
(
uöt8_t
 
buâ⁄
, uöt8_à
time
);

92 
boﬁ
 
ª≥©
(
uöt8_t
 
buâ⁄
, uöt8_à
≥riod
);

93 
uöt8_t
 
timeHñd
(uöt8_à
buâ⁄
);

94 
uöt8_t
 
	gpös
[
NUM_BTN
];

95 
uöt8_t
 
	g°©es
[
NUM_BTN
];

96 
uöt8_t
 
	ghñdSèãs
[
NUM_BTN
];

97 
	g¥iv©e
:

98 
uöt16_t
 
cHWL⁄gPªss
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoConsole.cpp

37 
	~"PokôtoGlobs.h
"

38 
	~"PokôtoC⁄sﬁe.h
"

39 
	~"PokôtoF⁄ts.h
"

40 
	~"PokôtoDi•œy.h
"

42 
	gPokôto
::
C⁄sﬁe
 
pC⁄sﬁe
;

44 
usög
 
«me•a˚
 
	gPokôto
;

46 
c⁄smsg
 
	gC⁄sﬁe
::
msgbuf
[
CONSOLEBUFSIZE
];

47 
uöt8_t
 
	gC⁄sﬁe
::
c⁄¶a°
;

48 
uöt8_t
 
	gC⁄sﬁe
::
c⁄sfú°
;

49 
uöt8_t
 
	gC⁄sﬁe
::
c⁄•oöãr
;

50 
uöt16_t
 
	gC⁄sﬁe
::
c⁄scou¡î
;

51 
uöt16_t
 
	gC⁄sﬁe
::
cﬁ‹
;

52 
Di•œy
* 
	gC⁄sﬁe
::
_di•œy
;

53 
uöt8_t
 
	gC⁄sﬁe
::
mode
;

54 
uöt8_t
 
	gC⁄sﬁe
::
visibÀ
;

55 * 
	gC⁄sﬁe
::
f⁄t
;

57 
	gC⁄sﬁe
::
	$C⁄sﬁe
() {

58 
c⁄¶a°
=
c⁄sfú°
=
c⁄•oöãr
=
c⁄scou¡î
=0;

59 
cﬁ‹
=0xFFFF;

60 
f⁄t
=(*)
f⁄tMöi
;

61 #i‡
POK_CONSOLE_VISIBLE_AT_STARTUP
 > 0

62 
mode
=
CONS_OVERLAY
|
CONS_VISIBLE
;

64 
mode
=
CONS_OVERLAY
;

66 
	}
}

68 
	gC⁄sﬁe
::
	$ToggÀ
() {

69 i‡(!
c⁄scou¡î
)

71 
mode
 ^
CONS_VISIBLE
;

72 
c⁄scou¡î
 = 
CONS_TIMEOUT
;

74 
	}
}

77 
	gC⁄sﬁe
::
	$AddMesßge
(
uöt8_t
 
sour˚
, uöt8_à
msgty≥
) {

78 
	`AddMesßge
(
sour˚
,
msgty≥
, 
V_NONE
,0);

79 
	}
}

82 
	gC⁄sﬁe
::
	$AddMesßge
(
uöt8_t
 
ty≥
, * 
°rög±r
) {

83 
	`AddMesßge
(
MSOURCE_USER
,
ty≥
,
V_STRING
, (
uöt32_t
Ë
°rög±r
);

84 
	}
}

87 
	gC⁄sﬁe
::
	$AddMesßge
(
uöt8_t
 
msgty≥
, uöt8_à
vÆty≥
, 
uöt32_t
 
vÆ
) {

88 
	`AddMesßge
(
MSOURCE_USER
,
msgty≥
,
vÆty≥
,
vÆ
);

89 
	}
}

91 
	gC⁄sﬁe
::
	$AddMesßge
(
uöt8_t
 
sour˚
, uöt8_à
msgty≥
, uöt8_à
vÆty≥
, 
uöt32_t
 
vÆ
) {

92 
c⁄smsg
 
c
;

93 
c
.
msgsour˚
 = 
sour˚
;

94 
c
.
msgty≥
 = msgtype;

95 
c
.
vÆty≥
 = valtype;

96 
c
.
vÆ
 = val;

97 
msgbuf
[
c⁄¶a°
] = 
c
;

98 
c⁄¶a°
++;

99 i‡(
c⁄¶a°
==
CONSOLEBUFSIZE
) conslast = 0;

100 
c⁄sfú°
 = 
c⁄¶a°
 + 1;

101 i‡(
c⁄sfú°
 =
CONSOLEBUFSIZE
) consfirst = 0;

102 
	}
}

104 
	gC⁄sﬁe
::
	$La°
() {

105 
c⁄•oöãr
 = 
c⁄¶a°
;

106 
	}
}

108 
	gC⁄sﬁe
::
	$RemoveLa°
() {

109 
	`La°
();

110 
	`Pªvious
();

111 
msgbuf
[
c⁄•oöãr
].
msgsour˚
 = 
MSOURCE_USER
;

112 
msgbuf
[
c⁄•oöãr
].
msgty≥
 = 
MSG_OK
;

113 
msgbuf
[
c⁄•oöãr
].
vÆ
 = 0;

114 
msgbuf
[
c⁄•oöãr
].
vÆty≥
 = 0;

115 
c⁄¶a°
 = 
c⁄•oöãr
;

116 
	}
}

118 
	gC⁄sﬁe
::
	$Fú°
() {

119 
c⁄smsg
 
c
;

120 
uöt16_t
 
outofbounds
=0;

121 
c⁄•oöãr
 = 
c⁄sfú°
;

122 
c
=
	`GëMesßge
();

123 !
c
.
msgsour˚
) {

124 
	`Next
();

125 
c
=
	`GëMesßge
();

126 
outofbounds
++;

127 i‡(
outofbounds
==
CONSOLEBUFSIZE
) {

128 
c⁄•oöãr
 = 
c⁄sfú°
;

132 
	}
}

134 
	gC⁄sﬁe
::
	$Pªvious
() {

135 i‡(
c⁄•oöãr
==0Ëc⁄•oöã∏
CONSOLEBUFSIZE
-1;

136 
c⁄•oöãr
--;

137 
	}
}

139 
	gC⁄sﬁe
::
	$Next
() {

140 i‡(
c⁄•oöãr
==
CONSOLEBUFSIZE
-1) conspointer = 0;

141 
c⁄•oöãr
++;

142 
	}
}

144 
c⁄smsg
 
	gC⁄sﬁe
::
	$GëMesßge
() {

145  
msgbuf
[
c⁄•oöãr
];

146 
	}
}

148 
	gC⁄sﬁe
::
	$PrötMesßge
() {

149 
c⁄smsg
 
c
 = 
msgbuf
[
c⁄•oöãr
];

150 
c
.
msgsour˚
) {

151 
MSOURCE_APP
:

152 
_di•œy
->
	`¥öt
("App:");;

153 
MSOURCE_BATT
:

154 
_di•œy
->
	`¥öt
("Batt:");;

155 
MSOURCE_BTNA
:

156 
_di•œy
->
	`¥öt
("A:");;

157 
MSOURCE_BTNB
:

158 
_di•œy
->
	`¥öt
("B:");;

159 
MSOURCE_BTNC
:

160 
_di•œy
->
	`¥öt
("C:");;

161 
MSOURCE_BTNU
:

162 
_di•œy
->
	`¥öt
("Up:");;

163 
MSOURCE_BTND
:

164 
_di•œy
->
	`¥öt
("Down:");;

165 
MSOURCE_BTNL
:

166 
_di•œy
->
	`¥öt
("Left:");;

167 
MSOURCE_BTNR
:

168 
_di•œy
->
	`¥öt
("Right:");;

169 
MSOURCE_LCD
:

170 
_di•œy
->
	`¥öt
("LCD:");;

171 
MSOURCE_SD
:

172 
_di•œy
->
	`¥öt
("SD:");;

173 
MSOURCE_SOUND
:

174 
_di•œy
->
	`¥öt
("Sound:");;

175 
MSOURCE_TIMER
:

176 
_di•œy
->
	`¥öt
("Timer:");;

177 
MSOURCE_USER
:

178 
_di•œy
->
	`¥öt
("User:");;

179 
MSOURCE_COLLISION
:

180 
_di•œy
->
	`¥öt
("Hit:");;

186 
c
.
msgty≥
) {

187 
MSG_OK
:

188 
_di•œy
->
	`¥öt
("OK ");;

189 
MSG_INIT_OK
:

190 
_di•œy
->
	`¥öt
("INIT OK ");;

191 
MSG_INIT_FAIL
:

192 
_di•œy
->
	`¥öt
("INIT FAIL ");;

193 
MSG_WARNING
:

194 
_di•œy
->
	`¥öt
("WARNING ");;

195 
MSG_FATAL
:

196 
_di•œy
->
	`¥öt
("FATAL ");;

197 
MSG_GFX_MODE_CHANGE
:

198 
_di•œy
->
	`¥öt
("MODE ");;

199 
MSG_GFX_MODE_INVALID
:

200 
_di•œy
->
	`¥öt
("INVALID!");;

201 
MSG_NOT_ENOUGH_MEM
:

202 
_di•œy
->
	`¥öt
("NOT ENOUGH MEM ");;

203 
MSG_UP
:

204 
_di•œy
->
	`¥öt
("KEYUP");;

205 
MSG_DOWN
:

206 
_di•œy
->
	`¥öt
("KEYDOWN");;

207 
MSG_BREAK
:

208 
_di•œy
->
	`¥öt
("BREAK ");;

209 
MSG_YESNO
:

210 
_di•œy
->
	`¥öt
("YES(A)/NO(B)");;

211 
MSG_YES
:

212 
_di•œy
->
	`¥öt
("YES");;

213 
MSG_NO
:

214 
_di•œy
->
	`¥öt
("NO");;

215 
MSG_OBJECT
:

216 
_di•œy
->
	`¥öt
("OBJ1: ");;

217 
MSG_OBJECT2
:

218 
_di•œy
->
	`¥öt
("OBJ2: ");;

220 
_di•œy
->
	`¥öt
(" ");

223 
c
.
vÆty≥
) {

224 
V_NONE
:

225 
_di•œy
->
	`¥öén
();;

226 
V_UINT8
:

227 
_di•œy
->
	`¥öén
((
uöt16_t
)
c
.
vÆ
);;

228 
V_INT8
:

229 
_di•œy
->
	`¥öén
((
öt16_t
)
c
.
vÆ
);;

230 
V_UINT16
:

231 
_di•œy
->
	`¥öén
((
uöt16_t
)
c
.
vÆ
);;

232 
V_INT16
:

233 
_di•œy
->
	`¥öén
((
öt16_t
)
c
.
vÆ
);;

234 
V_UINT32
:

235 
_di•œy
->
	`¥öén
((
uöt32_t
)
c
.
vÆ
);;

236 
V_INT32
:

237 
_di•œy
->
	`¥öén
((
öt32_t
)
c
.
vÆ
);;

238 
V_FLOAT
:

239 
_di•œy
->
	`¥öén
(()
c
.
vÆ
);;

240 
V_STRING
:

241 
_di•œy
->
	`¥öén
((*)
c
.
vÆ
);;

243 
_di•œy
->
	`¥öén
();

246 i‡(
c
.
msgty≥
 =
MSG_BREAK
 || c.msgty≥ =
MSG_YESNO
) {

247 #i‚de‡
POK_SIM


248 
	`__dißbÀ_úq
();

250 
	`∑u£Audio
(1);

251 
visibÀ
 = 
Ál£
;

252 
simuœt‹
.
	`waô_ms
(300);

254 
rvÆ
=0;

255 !
rvÆ
) {

256 
_buâ⁄s
->
	`pﬁlBuâ⁄s
();

257 #ifde‡
POK_SIM


258 
simuœt‹
.
	`ª‰eshDi•œy
();

260 i‡(
_buâ⁄s
->
	`aBä
()Ë
rvÆ
 = 1;

261 i‡(
_buâ⁄s
->
	`bBä
()Ë
rvÆ
 = -1;

264 i‡(
c
.
msgty≥
 =
MSG_YESNO
) {

265 
öt8_t
* 
v
;

266 
v
 = (
öt8_t
*Ë
c
.
vÆ
;

267 *
v
 = 
rvÆ
;

268 
msgbuf
[
c⁄•oöãr
].
msgsour˚
 = 
MSOURCE_USER
;

269 i‡(
rvÆ
==1Ë
msgbuf
[
c⁄•oöãr
].
msgty≥
 = 
MSG_YES
;

270 
msgbuf
[
c⁄•oöãr
].
msgty≥
 = 
MSG_NO
;

271 } 
msgbuf
[
c⁄•oöãr
].
msgsour˚
 = 
MSOURCE_NULL
;

273 #i‚de‡
POK_SIM


274 
	`__íabÀ_úq
();

276 
	`∑u£Audio
(0);

277 
visibÀ
 = 
åue
;

280 
	}
}

282 
	gC⁄sﬁe
::
	$Døw
() {

283 * 
ﬁdf⁄t
;

284 
öt16_t
 
ﬁdx
,
ﬁdy
;

285 
uöt16_t
 
ﬁdcﬁ‹
;

286 
uöt8_t
 
ﬁdsize
;

287 
boﬁ
 
ﬁdíabÀ
;

288 
ﬁdf⁄t
 = (*Ë
_di•œy
->
f⁄t
;

289 
ﬁdx
 = 
_di•œy
->
curs‹X
;

290 
ﬁdy
 = 
_di•œy
->
curs‹Y
;

291 
ﬁdcﬁ‹
 = 
_di•œy
->
dúe˘cﬁ‹
;

292 
ﬁdsize
 = 
_di•œy
->
f⁄tSize
;

293 i‡(!(
mode
 & 
CONS_OVERLAY
)Ë
_di•œy
->
	`˛órLCD
();

294 
_di•œy
->
	`£tF⁄t
(
f⁄t5x7
);

295 
_di•œy
->
f⁄tSize
=1;

296 
_di•œy
->
	`£tCurs‹
(0,0);

297 
_di•œy
->
dúe˘cﬁ‹
=
cﬁ‹
;

298 
	`Fú°
();

299 
c⁄•oöãr
!=
c⁄¶a°
) {

300 
	`PrötMesßge
();

301 
	`Next
();

302 i‡(
	`GëMesßge
().
msgsour˚
==
MSOURCE_NULL
) ;

304 
_di•œy
->
f⁄t
 = 
ﬁdf⁄t
;

305 
_di•œy
->
f⁄tSize
 = 
ﬁdsize
;

306 
_di•œy
->
curs‹X
 = 
ﬁdx
;

307 
_di•œy
->
curs‹Y
 = 
ﬁdy
;

308 
_di•œy
->
dúe˘cﬁ‹
 = 
ﬁdcﬁ‹
;

309 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoConsole.h

37 #i‚de‡
POKITTO_CONSOLE_H


38 
	#POKITTO_CONSOLE_H


	)

40 
	~"Pokôto_£âögs.h
"

41 
	~"PokôtoBuâ⁄s.h
"

42 
	~<°döt.h
>

44 
	sc⁄smsg
 {

45 
uöt32_t
 
	mvÆ
;

46 
uöt8_t
 
	mvÆty≥
;

47 
uöt8_t
 
	mmsgsour˚
;

48 
uöt8_t
 
	mmsgty≥
;

52 
	#V_UINT8
 0

	)

53 
	#V_INT8
 1

	)

54 
	#V_UINT16
 2

	)

55 
	#V_INT16
 3

	)

56 
	#V_UINT32
 4

	)

57 
	#V_INT32
 5

	)

58 
	#V_FLOAT
 6

	)

59 
	#V_STRING
 7

	)

60 
	#V_NONE
 8

	)

63 
	#MSG_NULL
 0

	)

64 
	#MSG_OK
 1

	)

65 
	#MSG_WARNING
 2

	)

66 
	#MSG_FATAL
 255

	)

67 
	#MSG_INIT_OK
 3

	)

68 
	#MSG_INIT_FAIL
 4

	)

69 
	#MSG_NOT_ENOUGH_MEM
 5

	)

70 
	#MSG_GFX_MODE_CHANGE
 6

	)

71 
	#MSG_GFX_MODE_INVALID
 7

	)

72 
	#MSG_UP
 8

	)

73 
	#MSG_DOWN
 9

	)

74 
	#MSG_PRINT
 10

	)

75 
	#MSG_BREAK
 11

	)

76 
	#MSG_YESNO
 12

	)

77 
	#MSG_YES
 13

	)

78 
	#MSG_NO
 14

	)

79 
	#MSG_OBJECT
 15

	)

80 
	#MSG_OBJECT2
 16

	)

83 
	#MSOURCE_NULL
 0

	)

84 
	#MSOURCE_SD
 1

	)

85 
	#MSOURCE_LCD
 2

	)

86 
	#MSOURCE_SOUND
 3

	)

87 
	#MSOURCE_TIMER
 4

	)

88 
	#MSOURCE_BTNA
 5

	)

89 
	#MSOURCE_BTNB
 6

	)

90 
	#MSOURCE_BTNC
 7

	)

91 
	#MSOURCE_BTNU
 8

	)

92 
	#MSOURCE_BTND
 9

	)

93 
	#MSOURCE_BTNL
 10

	)

94 
	#MSOURCE_BTNR
 11

	)

95 
	#MSOURCE_BATT
 12

	)

96 
	#MSOURCE_APP
 13

	)

97 
	#MSOURCE_USER
 14

	)

98 
	#MSOURCE_COLLISION
 15

	)

101 
	#CONS_OVERLAY
 0x1

	)

102 
	#CONS_PAUSE
 0x2

	)

103 
	#CONS_STEP
 0x4

	)

104 
	#CONS_VISIBLE
 0x8

	)

108 
	#CONS_TIMEOUT
 20

	)

109 
uöt16_t
 
c⁄scou¡î
;

113 
«me•a˚
 
	gPokôto
 {

115 
˛ass
 
	gDi•œy
;

117 ˛as†
	cC⁄sﬁe
 {

118 
	gpublic
:

120 
C⁄sﬁe
();

122 
uöt8_t
 
	gmode
;

123 
uöt8_t
 
	gvisibÀ
;

124 * 
	gf⁄t
;

125 
ToggÀ
();

126 
AddMesßge
(
uöt8_t
, uöt8_t, uöt8_t, 
uöt32_t
);

127 
AddMesßge
(
uöt8_t
, uint8_t);

128 
AddMesßge
(
uöt8_t
, *);

129 
AddMesßge
(
uöt8_t
, uöt8_t, 
uöt32_t
);

130 
La°
();

131 
Fú°
();

132 
RemoveLa°
();

133 
Pªvious
();

134 
Next
();

135 
c⁄smsg
 
GëMesßge
();

136 
PrötMesßge
();

137 
Purge
();

138 
Døw
();

140 
	g¥iv©e
:

142 
c⁄smsg
 
msgbuf
[
CONSOLEBUFSIZE
];

143 
uöt8_t
 
	gc⁄¶a°
;

144 
uöt8_t
 
	gc⁄sfú°
;

145 
uöt8_t
 
	gc⁄•oöãr
;

146 
	gpublic
:

147 
uöt16_t
 
c⁄scou¡î
;

148 
uöt16_t
 
	gcﬁ‹
;

149 
Di•œy
* 
	g_di•œy
;

150 
Buâ⁄s
* 
	g_buâ⁄s
;

157 
Pokôto
::
C⁄sﬁe
 
c⁄sﬁe
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoCookie.cpp

37 
	~"Pokôto_£âögs.h
"

38 
	~"Pokôto.h
"

39 
	~"PokôtoCookõ.h
"

41 #i‚de‡
POK_SIM


43 
	~"PokôtoSimuœt‹.h
"

46 
usög
 
«me•a˚
 
	gPokôto
;

52 
	#HARDCODEDOFFSET
 25

53 

	)

54 
	gCookõ
::
	$Cookõ
() {

55 
_°©us
 = 
Ál£
;

56 
_key‹dî
 = 
SBINVALIDSLOT
;

57 
	}
}

59 
	gCookõ
::
	$öôülize
() {

61 
d©asize
 = 
_d©asize
;

63 
_key‹dî
 = 
	`exi°s
(
_key
);

64 i‡(
_key‹dî
 < 
SBMAXKEYS
) {

67 
d©asize
 -
	`gëAssig√dBlocks
()*
SBBLOCKSIZE
;

68 i‡(
d©asize
<=0) {

71 
_°©us
 = 
åue
;

72 
	`lﬂdCookõ
();

76 
d©asize
>0) {

77 if(
	`ª£rveBlock
()Ë
d©asize
 -
SBBLOCKSIZE
;

78  
SBNOTENOUGHBLOCKSFREE
;

80 
_°©us
 = 
åue
;

81 
	`îa£KeyèbÀE¡ry
(
_key‹dî
);

82 
	`wrôeKeyToKeyèbÀ
(
_key
,
_key‹dî
);

83 
	`ßveCookõ
();

88 
_key‹dî
 = 
	`gëFªeKeyèbÀSlŸ
();

89 i‡(
_key‹dî
>=
SBMAXKEYS
Ë 
SBNOMOREKEYS
;

91 i‡(
	`gëFªeBlocks
()*
SBBLOCKSIZE
<
d©asize
Ë 
SBNOTENOUGHBLOCKSFREE
;

92 
d©asize
>0) {

94 if(
	`ª£rveBlock
()Ë
d©asize
 -
SBBLOCKSIZE
;

95  
SBNOTENOUGHBLOCKSFREE
;

98 
_°©us
 = 
åue
;

99 
	`îa£KeyèbÀE¡ry
(
_key‹dî
);

100 
	`wrôeKeyToKeyèbÀ
(
_key
,
_key‹dî
);

102 
	}
}

104 
	gCookõ
::
	$begö
(c⁄° * 
idkey
, 
d©asize
, * 
±r
) {

105 
_°©us
=
Ál£
;

106 
_d©asize
=
d©asize
-
HARDCODEDOFFSET
;

107 
_poöãr
 = 
±r
 + 
HARDCODEDOFFSET
;

108 
_idkey
[8];

110 
t
 = 0 ;Å < 8 ;Å++Ë
_idkey
[t]=' ';

111 
t
 = 0 ;Å < 8 ;Å++Ë{i‡(
idkey
[t]==0Ë; 
_idkey
[t]=idkey[t];}

113 
	`˛ónKeyèbÀ
();

114 
	`mem˝y
(
_key
, 
_idkey
, 
SBKEYSIZE
);

115 
	`öôülize
();

117 
	}
}

119 
boﬁ
 
	gCookõ
::
	$ßveCookõ
() {

120 i‡(!
_°©us
 || !
_poöãr
Ë
	`öôülize
();

121 i‡(!
_°©us
 || !
_poöãr
Ë 
Ál£
;

122 * 
p
 = 
_poöãr
;

123 
_hód
=0;

124 
_block
=
	`födMyNextBlock
();

125 
i
=0; i<
_d©asize
; i++Ë
	`wrôeQueue
(*
p
++);

126 
	}
}

128 
boﬁ
 
	gCookõ
::
	$lﬂdCookõ
() {

129 i‡(!
_°©us
 || !
_poöãr
Ë 
Ál£
;

130 * 
p
 = 
_poöãr
;

131 
_hód
=0;

132 
_block
=
	`födMyNextBlock
();

133 
i
=0; i<
_d©asize
; i++Ë*
p
++ = 
	`ªadQueue
();

134 
	}
}

136 
	gCookõ
::
	$dñëeCookõ
() {

137 i‡(!
_°©us
) ;

139 
i
=0; i<
SBMAXBLOCKS
; i++) {

140 i‡(
	`isMyBlock
(
i
)Ë
	`‰ìBlock
(i);

143 
	`îa£KeyèbÀE¡ry
(
_key‹dî
);

145 
_°©us
 = 
Ál£
;

146 
	}
}

148 
	gCookõ
::
	$exi°s
(c⁄° * 
idkey
) {

149 
i
=0; i< 
SBMAXKEYS
; i++) {

150 #i‚de‡
POK_SIM


151 if(
	`ì¥om_ªad_byã
((
uöt16_t
*)(
i
*
SBKEYSIZE
))==
idkey
[0]) {

152 
tŸÆ
=0;

153 
j
=0; j<
SBKEYSIZE
;j++) {

154 if(
	`ì¥om_ªad_byã
((
uöt16_t
*)(
i
*
SBKEYSIZE
+
j
))==
idkey
[j]Ë
tŸÆ
++;

156 i‡(
tŸÆ
==
SBKEYSIZE
Ë 
i
;

160  
SBINVALIDSLOT
;

161 
	}
}

163 
	gCookõ
::
	$gëFªeKeyèbÀSlŸ
() {

164 
‰ì¶Ÿ
=
SBINVALIDSLOT
;

165 
i
=0; i<
SBMAXKEYS
; i++) {

166 #i‚de‡
POK_SIM


167 i‡(
	`ì¥om_ªad_byã
((
uöt16_t
*)(
i
*
SBKEYSIZE
))==0Ë{
‰ì¶Ÿ
=i; ;}

170  
‰ì¶Ÿ
;

171 
	}
}

173 
	gCookõ
::
	$gëAssig√dBlocks
() {

174 
assig√dblocks
=0;

175 
i
=0;i<
SBMAXBLOCKS
;i++) {

176 i‡(
	`isMyBlock
(
i
)Ë
assig√dblocks
++;

178  
assig√dblocks
;

179 
	}
}

181 
	gCookõ
::
	$gëFªeBlocks
() {

182 
‰ìblocks
=0;

183 
i
=0;i<
SBMAXBLOCKS
;i++) {

184 i‡(
	`isFªeBlock
(
i
)Ë
‰ìblocks
++;

186  
‰ìblocks
;

187 
	}
}

189 
boﬁ
 
	gCookõ
::
	$isFªeBlock
(
n
) {

190 i‡(
n
>=
SBMAXBLOCKS
Ë 
Ál£
;

191 #i‚de‡
POK_SIM


192 i‡(!(
	`ì¥om_ªad_byã
((
uöt16_t
*)(
SBMAXKEYS
*
SBKEYSIZE
+
n
))&0x80)Ë 
åue
;

194  
Ál£
;

195 
	}
}

197 
boﬁ
 
	gCookõ
::
	$isMyBlock
(
n
) {

198 i‡(
n
>=
SBMAXBLOCKS
Ë 
Ál£
;

199 i‡(
	`isFªeBlock
(
n
)Ë 
Ál£
;

200 #i‚de‡
POK_SIM


201 
ãmp
; 
addªss
;

202 
addªss
 = (
SBMAXKEYS
*
SBKEYSIZE
+
n
);

203 
ãmp
 = 
	`ì¥om_ªad_byã
((
uöt16_t
*)
addªss
);

204 i‡((
ãmp
&0x7FË==
_key‹dî
Ë 
åue
;

206  
Ál£
;

207 
	}
}

209 
boﬁ
 
	gCookõ
::
	$blockIsOw√dBy
(
n
, 
k
) {

210 i‡(
n
>=
SBMAXBLOCKS
Ë 
Ál£
;

211 i‡(
k
>=
SBMAXKEYS
Ë 
Ál£
;

212 i‡(
	`isFªeBlock
(
n
)Ë 
Ál£
;

213 #i‚de‡
POK_SIM


214 
ãmp
; 
addªss
;

215 
addªss
 = (
SBMAXKEYS
*
SBKEYSIZE
+
n
);

216 
ãmp
 = 
	`ì¥om_ªad_byã
((
uöt16_t
*)
addªss
);

217 i‡((
ãmp
&0x7FË=
k
Ë 
åue
;

219  
Ál£
;

220 
	}
}

222 
	gCookõ
::
	$wrôeKeyToKeyèbÀ
(c⁄° * 
key
, 
¶Ÿ
) {

223 
i
=0; i<=
SBKEYSIZE
; i++) {

224 #i‚de‡
POK_SIM


225 i‡(
key
[
i
]Ë
	`ì¥om_wrôe_byã
((
uöt16_t
*)(
¶Ÿ
*
SBKEYSIZE
+i),key[i]);

226 
	`ì¥om_wrôe_byã
((
uöt16_t
*)(
¶Ÿ
*
SBKEYSIZE
+
i
),0);

229 
	}
}

231 
	gCookõ
::
	$ªadKeyèbÀE¡ry
(
n
, * 
™swî
) {

232 
™swî
[8]=0;

233 i‡(
n
 >
SBMAXKEYS
)Ç=SBMAXKEYS-1;

234 
i
=0; i<
SBKEYSIZE
; i++) {

235 #i‚de‡
POK_SIM


236 
™swî
[
i
] = 
	`ì¥om_ªad_byã
((
uöt16_t
*)(
n
*
SBKEYSIZE
+i));

239 
	}
}

241 
	gCookõ
::
	$gëBlockTabÀE¡ry
(
n
) {

242 i‡(
n
>=
SBMAXBLOCKS
)  0x80;

243 #i‚de‡
POK_SIM


244  
	`ì¥om_ªad_byã
((
uöt16_t
*)(
SBKEYSIZE
*
SBMAXKEYS
+
n
));

247 
	}
}

249 
	gCookõ
::
	$ªadBlock
(
n
, * 
d©a
) {

250 
i
=0; i<
SBBLOCKSIZE
; i++) {

251 
d©a
[
i
]=0;

252 #i‚de‡
POK_SIM


253 i‡(
n
 < 
SBMAXBLOCKS
Ë
d©a
[
i
] = 
	`ì¥om_ªad_byã
((
uöt16_t
*)(
SBKEYSIZE
*
SBMAXKEYS
+SBMAXBLOCKS+n*
SBBLOCKSIZE
+i));

256 
	}
}

258 
	gCookõ
::
	$f‹m©KeyèbÀ
() {

259 
j
=0; j<
SBMAXKEYS
; j++) {

260 
i
=0; i<
SBKEYSIZE
; i++) {

261 #i‚de‡
POK_SIM


262 
	`ì¥om_wrôe_byã
((
uöt16_t
*)(
j
*
SBKEYSIZE
+
i
),0);

266 
	}
}

268 
	gCookõ
::
	$‰ìBlock
(
n
) {

269 i‡(
n
 >
SBMAXBLOCKS
) ;

270 #i‚de‡
POK_SIM


272 
	`ì¥om_wrôe_byã
((
uöt16_t
*)(
SBKEYSIZE
*
SBMAXKEYS
+
n
),0);

274 
i
=0; i<
SBBLOCKSIZE
;i++) {

275 #i‚de‡
POK_SIM


277 
	`ì¥om_wrôe_byã
((
uöt16_t
*)(
SBKEYSIZE
*
SBMAXKEYS
+
SBMAXBLOCKS
+
n
*
SBBLOCKSIZE
+
i
),0);

280 
	}
}

282 
boﬁ
 
	gCookõ
::
	$ª£rveBlock
() {

283 
i
=0; i<
SBMAXBLOCKS
;i++) {

284 #i‚de‡
POK_SIM


286 i‡(
	`isFªeBlock
(
i
)) {

288 
	`ì¥om_wrôe_byã
((
uöt16_t
*)(
SBKEYSIZE
*
SBMAXKEYS
+
i
),
_key‹dî
 | 0x80);

289  
åue
;

293  
Ál£
;

294 
	}
}

296 
	gCookõ
::
	$îa£KeyèbÀE¡ry
(
n
) {

297 i‡(
n
 >
SBMAXKEYS
)Ç=SBMAXKEYS-1;

298 
i
=0; i<
SBKEYSIZE
; i++) {

299 #i‚de‡
POK_SIM


300 
	`ì¥om_wrôe_byã
((
uöt16_t
*)(
n
*
SBKEYSIZE
+
i
),0);

303 
	}
}

305 
	gCookõ
::
	$˛ónKeyèbÀ
() {

307 
íåy
=0;É¡ry<
SBMAXKEYS
;Éntry++) {

308 i‡(
	`ì¥om_ªad_byã
((
uöt16_t
*)(
íåy
*
SBKEYSIZE
))) {

309 
boﬁ
 
isEm±y
=
åue
;

310 
block
=0; block<
SBMAXBLOCKS
; block++Ëi‡(
	`blockIsOw√dBy
(block,
íåy
)Ë{
isEm±y
=
Ál£
;;}

312 i‡(
isEm±y
Ë
	`îa£KeyèbÀE¡ry
(
íåy
);

315 
block
=0;block<
SBMAXBLOCKS
;block++) {

316 
blockíåy
 = 
	`ì¥om_ªad_byã
((
uöt16_t
*)(
SBMAXKEYS
*
SBKEYSIZE
+
block
));

317 i‡(
blockíåy
&0x80) {

318 
blockíåy
 &= 0x7F;

319 
boﬁ
 
isEm±y
=
åue
;

320 
key
=0;key<
SBMAXKEYS
;key++) {

321 i‡(
	`ì¥om_ªad_byã
((
uöt16_t
*)(
key
*
SBKEYSIZE
))Ë{
isEm±y
=
Ál£
;;}

323 i‡(
isEm±y
Ë
	`ì¥om_wrôe_byã
((
uöt16_t
*)(
SBMAXKEYS
*
SBKEYSIZE
+
block
),0);

326 
	}
}

328 
	gCookõ
::
	$ªadQueue
() {

329 
d©a
=0;

330 #i‚de‡
POK_SIM


331 
addªss
;

332 
addªss
 = 
SBMAXKEYS
*
SBKEYSIZE
+
SBMAXBLOCKS
+
SBBLOCKSIZE
*
_block
+
_hód
%SBBLOCKSIZE;

333 
d©a
=
	`ì¥om_ªad_byã
((
uöt16_t
*)
addªss
);

335 
_hód
++;

336 i‡(
_hód
%
SBBLOCKSIZE
==0 && _head) {

337 
_block
++;

338 
_block
=
	`födMyNextBlock
();

340  
d©a
;

341 
	}
}

343 
	gCookõ
::
	$wrôeQueue
(
d©a
) {

344 #i‚de‡
POK_SIM


345 
	`ì¥om_wrôe_byã
((
uöt16_t
*)(
SBMAXKEYS
*
SBKEYSIZE
+
SBMAXBLOCKS
+
SBBLOCKSIZE
*
_block
+
_hód
%SBBLOCKSIZE),
d©a
);

347 
_hód
++;

348 i‡(
_hód
%
SBBLOCKSIZE
==0 && _head) {

349 
_block
++;

350 
_block
=
	`födMyNextBlock
();

352 
	}
}

354 
	gCookõ
::
	$födMyNextBlock
() {

355 i‡(!
_°©us
Ë 
SBINVALIDBLOCK
;

356 
i
=
_block
; i<
SBMAXBLOCKS
;i++Ëi‡(
	`isMyBlock
(i))  i;

357 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoCookie.h

37 #i‚de‡
POKITTO_COOKIE_H


38 
	#POKITTO_COOKIE_H


	)

40 
	~"Pokôto_£âögs.h
"

41 
	~<°döt.h
>

43 
	#SBNOMOREKEYS
 1

	)

44 
	#SBNOTENOUGHBLOCKSFREE
 2

	)

45 
	#SBMAXKEYS
 48

46 
	#SBMAXBLOCKS
 112

47 
	#SBBLOCKSIZE
 32

48 
	#SBKEYSIZE
 8

	)

49 
	#SBINVALIDSLOT
 255

	)

50 
	#SBINVALIDBLOCK
 -1

	)

52 
«me•a˚
 
	gPokôto
 {

78 ˛as†
	cCookõ
 {

79 
	gpublic
:

82 
Cookõ
();

94 
begö
(const *, , *);

101 
öôülize
();

109 
boﬁ
 
ßveCookõ
();

117 
boﬁ
 
lﬂdCookõ
();

121 
dñëeCookõ
();

129 
boﬁ
 
isOK
();

137 
ªadKeyèbÀE¡ry
(, *);

145 
f‹m©KeyèbÀ
();

153 
îa£KeyèbÀE¡ry
();

158 
˛ónKeyèbÀ
();

161 
	gpublic
:

171 
exi°s
(const *);

179 
gëFªeKeyèbÀSlŸ
();

186 
gëFªeBlocks
();

193 
gëAssig√dBlocks
();

203 
boﬁ
 
isFªeBlock
();

212 
boﬁ
 
isMyBlock
();

222 
boﬁ
 
blockIsOw√dBy
(,);

230 
wrôeKeyToKeyèbÀ
(const *, );

240 
gëBlockTabÀE¡ry
();

248 
ªadBlock
(, *);

255 
‰ìBlock
();

264 
boﬁ
 
ª£rveBlock
();

270 
wrôeQueue
();

277 
ªadQueue
();

285 
födMyNextBlock
();

290 
	g_key
[
SBKEYSIZE
];

295 
	g_key‹dî
;

301 
boﬁ
 
	g_°©us
;

306 
	g_d©asize
;

311 * 
	g_poöãr
;

316 
	g_hód
;

321 
	g_block
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoCore.cpp

37 
	~"Pokôto_£âögs.h
"

38 
	~"PokôtoC‹e.h
"

39 
	~"PokôtoC⁄sﬁe.h
"

40 
	~"PokôtoF⁄ts.h
"

41 
	~"PokôtoTimî.h
"

42 
	~"PokôtoLogos.h
"

43 
	~<°dlib.h
>

45 #i‚de‡
DISABLEAVRMIN


46 
	#max
(
a
,
b
Ë(◊)>(b)?◊):(b))

	)

49 
	g£À˘edfûe
[25];

52 #ifde‡
__ARMCC_VERSION


53 (*
	tfunc_t
)();

56 #i‚de‡
POK_SIM


57 
	~"üp.h
"

62 
	$°¨t_≠∂iˇti⁄
(
≠p_lök_loˇti⁄
){

67 
	`__dißbÀ_úq
();

73 
LPC_PINT
->
IENR
 = 0;

74 
LPC_PINT
->
IENF
 = 0;

76 
SysTick
->
CTRL
 = 
SysTick_CTRL_CLKSOURCE_Msk
 & ~(
SysTick_CTRL_ENABLE_Msk
);

77 
LPC_SYSCON
->
PDRUNCFG
 |= (1 << 10);

78 
LPC_SYSCON
->
PDRUNCFG
 |= (1 << 8);

81 
LPC_SYSCON
->
MAINCLKUEN
 = 0x01;

82 
LPC_SYSCON
->
MAINCLKUEN
 = 0x00;

83 
LPC_SYSCON
->
MAINCLKUEN
 & 0x01);

85 
LPC_SYSCON
->
MAINCLKSEL
 = 0;

86 
LPC_SYSCON
->
MAINCLKUEN
 = 0x01;

87 
LPC_SYSCON
->
MAINCLKUEN
 = 0x00;

88 
LPC_SYSCON
->
MAINCLKUEN
 & 0x01);

90 
LPC_SYSCON
->
SYSPLLCLKUEN
 = 0;

91 
LPC_SYSCON
->
SYSPLLCLKUEN
 & 0x00);

92 
LPC_SYSCON
->
SYSPLLCTRL
 = 0;

95 
LPC_SYSCON
->
MAINCLKSEL
 = 0;

96 
LPC_SYSCON
->
PRESETCTRL
 = 0;

99 vﬁ©ûê
uöt32_t
 
tmp
;

100 
tmp
 = (
LPC_SYSCON
->
PDRUNCFG
 & 0x000025FFL);

101 
tmp
 |= ((1<<7) & 0x000025FFL);

102 
LPC_SYSCON
->
PDRUNCFG
 = (
tmp
 | 0x0000C800L);

107 
LPC_GPIO_PORT
->
PIN
[0] = 0;

108 
LPC_GPIO_PORT
->
PIN
[1] = 0;

109 
LPC_GPIO_PORT
->
PIN
[2] = 0;

111 
SCB
->
VTOR
 = 
≠p_lök_loˇti⁄
;

112 #i‚de‡
__ARMCC_VERSION


113 
	`asm
(" movÑ0, %[addªss]"::[
addªss
] "r" (
≠p_lök_loˇti⁄
));

114 
	`asm
("ÜdrÑ1, [r0,#0]");

115 
	`asm
(" mov sp,Ñ1");

116 
	`asm
("ÜdrÑ0, [r0,#4]");

117 
	`asm
(" blxÑ0");

119 
uöt32_t
 *
≠p_loc
 = (uöt32_t*)
≠p_lök_loˇti⁄
;

120 
	`__£t_MSP
 (
≠p_loc
[0]);

121 ((
func_t
)(
≠p_loc
[1]))();

123 
	}
}

127 
	$øndom
(
maxVÆ
)

129  
	`øndom
–0, 
maxVÆ
);

130 
	}
}

133 
	$øndom
(
möVÆ
, 
maxVÆ
)

136 #ifde‡
OLDINCLUSIVERANDOM


137  
	`ønd
(Ë% (
maxVÆ
-
möVÆ
+1) + minVal;

139  
	`ønd
(Ë% (
maxVÆ
-
möVÆ
) + minVal;

141 
	}
}

143 
usög
 
«me•a˚
 
	gPokôto
;

145 
boﬁ
 
	gC‹e
::
run_°©e
;

148 
Backlight
 
	gC‹e
::
backlight
;

149 
Buâ⁄s
 
	gC‹e
::
buâ⁄s
;

150 
B©ãry
 
	gC‹e
::
b©ãry
;

151 #i‡
POK_ENABLE_SOUND
 > 0

152 
Sound
 
	gC‹e
::
sound
;

154 
Di•œy
 
	gC‹e
::
di•œy
;

157 
uöt8_t
 
	gC‹e
::
°¨tMíuTimî
;

158 
uöt8_t
 
	gC‹e
::
timePîFøme
;

159 
uöt32_t
 
	gC‹e
::
√xtFømeMûlis
;

160 
uöt32_t
 
	gC‹e
::
‰ameCou¡
;

161 c⁄° * 
	gC‹e
::
p›upText
;

162 
uöt8_t
 
	gC‹e
::
p›upTimeLe·
;

163 
uöt16_t
 
	gC‹e
::
‰ameDuøti⁄Mi¸os
;

164 
uöt32_t
 
	gC‹e
::
‰ameSèπMi¸os
, C‹e::
‰ameEndMi¸os
;

165 
uöt8_t
 
	gC‹e
::
vﬁb¨_visibÀ
=0;

167 
uöt32_t
 
	gC‹e
::
Âs_cou¡î
;

168 
boﬁ
 
	gC‹e
::
Âs_cou¡î_upd©ed
;

169 
uöt32_t
 
	gC‹e
::
Âs_ª‰eshtime
;

170 
uöt32_t
 
	gC‹e
::
Âs_‰ameCou¡
;

172 
	gC‹e
::
	$C‹e
() {

174 
	}
}

177 
C‹e
::
	$upd©eLﬂdî
 (
uöt32_t
 
vîsi⁄
, uöt32_à
jum∑ddªss
) {

178 #i‚de‡
POK_SIM


179 
uöt32_t
 
cou¡î
=0;

180 
uöt8_t
 
d©a
[256];

182 
¥ogªss
=0;

183 
›g
=-1;

184 
uöt32_t
 
fsize
=0;

185 
	`fûeEnd
();

186 
fsize
 = 
	`fûeGëPosôi⁄
();

187 i‡(
fsize
>0x40000-
jum∑ddªss
) fsize = 0x40000-jumpaddress;

188 
	`fûeRewöd
();

189 
di•œy
.
	`¥öén
("PLEASE WAIT");

194 i‡(
cou¡î
 >
fsize
) {

197 
›g
=
¥ogªss
;

198 i‡(
	`fûeRódByãs
(&
d©a
[0],0x100)<0x100) {

199 i‡(
fsize
-
cou¡î
>0x100) {

200 
di•œy
.
	`¥öén
("ERROR READING LOA.DER FILE");

204 i‡(
	`C›yPageToFœsh
(
jum∑ddªss
+
cou¡î
,
d©a
)) {

205 
di•œy
.
	`¥öén
("FLASH WRITE ERROR");

208 
cou¡î
 += 0x100;

209 
di•œy
.
	`¥öt
(".");

214 
	}
}

216 
	gC‹e
::
	$showW¨nög
() {

217 
di•œy
.
	`íabÀDúe˘Prötög
(
åue
);

218 
di•œy
.
dúe˘bgcﬁ‹
 = 
COLOR_BLACK
;

219 
di•œy
.
	`˛órLCD
();

220 
di•œy
.
dúe˘cﬁ‹
 = 
COLOR_RED
;

221 
di•œy
.
	`£tF⁄t
(
‚tC64UIGfx
);

222 
di•œy
.
adju°Ch¨Sãp
 = 0;

223 
di•œy
.
adju°LöeSãp
 = 0;

224 
di•œy
.
	`£tCurs‹
(10*8,9);

225 
di•œy
.
	`¥öt
("WARNING!");

226 
di•œy
.
dúe˘cﬁ‹
 = 
COLOR_WHITE
;

227 
di•œy
.
	`£tCurs‹
(5*8,4*9);

228 
di•œy
.
	`¥öt
("LOUD SOUND THROUGH");

229 
di•œy
.
	`£tCurs‹
(2*8,5*9);

230 
di•œy
.
	`¥öt
("HEADPHONES COULD DAMAGE");

231 
di•œy
.
	`£tCurs‹
(7*8,6*9);

232 
di•œy
.
	`¥öt
("YOUR HEARING.");

233 
di•œy
.
	`£tCurs‹
(5*8,8*9);

234 
di•œy
.
	`¥öt
("USE "); di•œy.
dúe˘cﬁ‹
 = 
COLOR_GREEN
;

235 
di•œy
.
	`¥öt
("0-100% VOLUME");

236 
di•œy
.
dúe˘cﬁ‹
 = 
COLOR_WHITE
;

237 
di•œy
.
	`£tCurs‹
(5*8,9*9);

238 
di•œy
.
	`¥öt
("FOR LISTENING WITH");

239 
di•œy
.
	`£tCurs‹
(8*8,10*9);

240 
di•œy
.
	`¥öt
("HEADPHONES");

241 
di•œy
.
	`£tCurs‹
(5*8,12*9);

242 
di•œy
.
	`¥öt
("USE "); di•œy.
dúe˘cﬁ‹
 = 
COLOR_RED
;

243 
di•œy
.
	`¥öt
("> 100% VOLUME"); di•œy.
dúe˘cﬁ‹
 = 
COLOR_GREEN
;

244 
di•œy
.
dúe˘cﬁ‹
 = 
COLOR_WHITE
;

245 
di•œy
.
	`£tCurs‹
(1*8,13*9);

246 
di•œy
.
	`¥öt
("ONLY FOR LISTENING VIA THE");

247 
di•œy
.
	`£tCurs‹
(5*8,14*9);

248 
di•œy
.
	`¥öt
("BUILT-IN SPEAKER");

249 
di•œy
.
	`£tCurs‹
(5*8,17*9);

250 
di•œy
.
	`¥öt
("PRESS ");di•œy.
dúe˘cﬁ‹
 = 
COLOR_GREEN
;

251 
di•œy
.
	`¥öt
("C ");di•œy.
dúe˘cﬁ‹
 = 
COLOR_WHITE
;

252 
di•œy
.
	`¥öt
("TO ACCEPT");

253 !
buâ⁄s
.
	`cBä
()) {

254 
	`waô
(100);

256 
di•œy
.
	`˛órLCD
();

257 
di•œy
.
	`íabÀDúe˘Prötög
(
Ál£
);

258 
	}
}

260 
	gC‹e
::
	$jumpToLﬂdî
() {

264 
di•œy
.
f⁄tSize
=1;

265 
di•œy
.
dúe˘bgcﬁ‹
=
COLOR_BLACK
;

266 
di•œy
.
dúe˘cﬁ‹
=
COLOR_GREEN
;

267 
di•œy
.
	`˛órLCD
();

268 
di•œy
.
	`£tCurs‹
(0,0);

269 
di•œy
.
	`íabÀDúe˘Prötög
(
åue
);

270 #ifde‡
POK_SIM


271 
di•œy
.
	`¥öén
("LOADER IS NOT AVAILABLE ON THE SIMULATOR. PRESS A TO RETURN.");

273 
uöt32_t
* 
boŸöfo
;

274 
uöt32_t
 
boŸvîsi⁄
=0, 
sdvîsi⁄
=0, 
sdjump
=0;

275 
boﬁ
 
Êashlﬂdî
=
Ál£
, 
checkf‹boŸ
=
åue
;

277 #i‡
POK_ENABLE_LOADER_UPDATES
 > 0

278 
	`pokInôSD
();

279 i‡(
	`fûeO≥n
("LOA.DER", 
FILE_MODE_BINARY
)==0) {

281 
	`fûeEnd
();

282 
	`fûeSìkRñ©ive
(-8);

283 
uöt32_t
* 
çå
 = &
sdvîsi⁄
;

284 
	`fûeRódByãs
((
uöt8_t
*)
çå
,4);

285 
çå
 = &
sdjump
;

286 
	`fûeRódByãs
((
uöt8_t
*)
çå
,4);

287 
	`fûeRewöd
();

291 
checkf‹boŸ
)

293 
checkf‹boŸ
=
Ál£
; 
Êashlﬂdî
=false;

294 
boŸöfo
 = (
uöt32_t
*)0x3FFF4;

295 i‡(*
boŸöfo
 !0xB007AB1EËboŸöfÿ(
uöt32_t
*)0x3FF04;

296 i‡(*
boŸöfo
 !0xB007AB1EËboŸöfÿ(
uöt32_t
*)0x3FE04;

297 i‡(*
boŸöfo
 !0xB007AB1EËboŸöfÿ(
uöt32_t
*)0x3F004;

298 i‡(*
boŸöfo
 != 0xB007AB1E) {

300 
di•œy
.
dúe˘cﬁ‹
=
COLOR_YELLOW
;

301 
di•œy
.
	`¥öén
("NO LOADER INSTALLED");

302 i‡(
sdvîsi⁄
==0 || 
sdjump
 < 0x38000) {

304 
di•œy
.
	`¥öén
("NO VALID LOA.DER ON SD");

305 
di•œy
.
	`¥öén
("");

306 
di•œy
.
dúe˘cﬁ‹
=
COLOR_GREEN
;

307 
di•œy
.
	`¥öén
("PUT LOA.DER ON SD & REBOOT");

308 } 
Êashlﬂdî
=
åue
;

312 
di•œy
.
dúe˘cﬁ‹
=
COLOR_CYAN
;

313 
di•œy
.
	`¥öt
("LOADER V.");

314 
di•œy
.
dúe˘cﬁ‹
=
COLOR_WHITE
;

315 
di•œy
.
	`¥öén
(*(
boŸöfo
+1));

316 #i‡
POK_ENABLE_LOADER_UPDATES


317 i‡(
sdvîsi⁄
>(*(
boŸöfo
+1))Ë
Êashlﬂdî
=
åue
;

318 
	`°¨t_≠∂iˇti⁄
(*(
boŸöfo
+2));

320 
	`°¨t_≠∂iˇti⁄
(*(
boŸöfo
+2));

324 if(
Êashlﬂdî
) {

325 
di•œy
.
dúe˘cﬁ‹
=
COLOR_MAGENTA
;

326 
di•œy
.
	`¥öt
("NEW LOADER ON SD V.");

327 
di•œy
.
dúe˘cﬁ‹
=
COLOR_WHITE
;

328 
di•œy
.
	`¥öén
(
sdvîsi⁄
);

329 
di•œy
.
dúe˘cﬁ‹
=
COLOR_GREEN
;

330 
di•œy
.
	`¥öén
("UPDATE LOADER?\n(UP=YES, DOWN=CANCEL)");

332 i‡(
buâ⁄s
.
	`upBä
()) {

333 i‡(
	`upd©eLﬂdî
(
sdvîsi⁄
,
sdjump
)) {

334 
di•œy
.
	`¥öén
("PUT LOA.DER ON SD AND RETRY");

336 
di•œy
.
	`¥öén
("SUCCESS!!");

337 
checkf‹boŸ
=
åue
;

341 i‡(
buâ⁄s
.
	`downBä
()) ;

346 !
buâ⁄s
.
	`aBä
()) {

347 
buâ⁄s
.
	`pﬁlBuâ⁄s
();

348 i‡(
buâ⁄s
.
	`aBä
()) {

349 
buâ⁄s
.
	`aBä
()) {

350 
buâ⁄s
.
	`pﬁlBuâ⁄s
();

355 
	}
}

357 
	gC‹e
::
	$askLﬂdî
() {

358 
di•œy
.
	`íabÀDúe˘Prötög
(
åue
);

359 
di•œy
.
dúe˘bgcﬁ‹
 = 
COLOR_BLACK
;

360 
di•œy
.
	`˛órLCD
();

361 
di•œy
.
dúe˘cﬁ‹
 = 
COLOR_RED
;

362 
di•œy
.
	`£tF⁄t
(
‚tC64UIGfx
);

363 
di•œy
.
f⁄tSize
=1;

364 
di•œy
.
adju°Ch¨Sãp
 = 0;

365 
di•œy
.
adju°LöeSãp
 = 0;

366 
di•œy
.
dúe˘cﬁ‹
=
COLOR_GREEN
;

367 
di•œy
.
	`£t_curs‹
(12*8,6*8);

368 
di•œy
.
	`¥öt
("ijkl");

369 
di•œy
.
	`£t_curs‹
(12*8,7*8);

370 
di•œy
.
	`¥öt
("mnop");

371 
di•œy
.
	`£t_curs‹
(12*8,8*8);

372 
di•œy
.
	`¥öt
("qrst");

373 
di•œy
.
	`£t_curs‹
(12*8,9*8);

374 
di•œy
.
	`¥öt
("uvwx");

375 
di•œy
.
	`£t_curs‹
(5*8,12*8);

376 
di•œy
.
	`¥öt
("PRESS");

377 
di•œy
.
dúe˘cﬁ‹
=
COLOR_WHITE
;

378 
di•œy
.
	`¥öt
(" C ");

379 
di•œy
.
dúe˘cﬁ‹
=
COLOR_GREEN
;

380 
di•œy
.
	`¥öt
("FOR LOADER");

381 
di•œy
.
dúe˘cﬁ‹
=
COLOR_WHITE
;

382 
di•œy
.
f⁄tSize
=2;

383 
cou¡d
 = 0;

384 #i‚de‡
POK_SIM


386 
cou¡d
 = 
	`ì¥om_ªad_byã
((
uöt16_t
*)
EESETTINGS_LOADERWAIT
);

388 i‡(
cou¡d
==0 || countd > 5) countd=3;

389 
uöt16_t
 
c2
 = 
	`gëTime
();

390 
cou¡d
) {

391 
buâ⁄s
.
	`pﬁlBuâ⁄s
();

392 
di•œy
.
	`£t_curs‹
(13*8,15*8);

393 
di•œy
.
	`¥öt
(
cou¡d
);

394 i‡(
	`gëTime
()>
c2
+1000) {

395 
c2
=
	`gëTime
();

396 
cou¡d
--;

398 i‡(
	`cBä
()Ë{cBä()Ë
buâ⁄s
.
	`pﬁlBuâ⁄s
();
	`jumpToLﬂdî
();
cou¡d
=0;}

399 i‡(
	`aBä
()Ë{aBä()Ë
buâ⁄s
.
	`pﬁlBuâ⁄s
();
cou¡d
=0;}

400 i‡(
	`bBä
()Ë{bBä()Ë
buâ⁄s
.
	`pﬁlBuâ⁄s
();
cou¡d
=0;}

402 
di•œy
.
f⁄tSize
=1;

403 
di•œy
.
	`˛órLCD
();

404 
di•œy
.
	`íabÀDúe˘Prötög
(
Ál£
);

405 
	}
}

408 
	gC‹e
::
	$døwvﬁb¨
(
x
, 
y
, 
Àvñ
, 
boﬁ
 
ãxt
) {

409 
uöt16_t
 
ﬁdcﬁ
 = 
di•œy
.
dúe˘cﬁ‹
;

410 
Àvñ
 =Üevel >> 5;

411 i‡(
ãxt
Ë
di•œy
.
	`dúe˘Re˘™gÀ
(0,0,50,50,
COLOR_BLACK
);

412 i‡(
Àvñ
<4Ë
di•œy
.
dúe˘cﬁ‹
 = 
COLOR_GREEN
;

413 i‡(
Àvñ
==4Ë
di•œy
.
dúe˘cﬁ‹
 = 
COLOR_YELLOW
;

414 i‡(
Àvñ
>4Ë
di•œy
.
dúe˘cﬁ‹
 = 
COLOR_RED
;

416 i‡(
ãxt
) {

417 
boﬁ
 
ãmp
 = 
di•œy
.
	`isDúe˘PrötögE«bÀd
();

418 
di•œy
.
	`íabÀDúe˘Prötög
(
åue
);

419 
di•œy
.
	`¥öt
(
x
-1,
y
-20,()
sound
.
	`gëVﬁume
());

420 
di•œy
.
	`¥öt
(" ");

421 
di•œy
.
	`íabÀDúe˘Prötög
(
ãmp
);

423 i‡(
Àvñ
<1Ë
di•œy
.
dúe˘cﬁ‹
 = 
COLOR_GRAY_80
;

424 
di•œy
.
	`dúe˘Bôm≠
(
x
,
y
,
Pokôto_vﬁumeb¨
,1,1);

425 i‡(
Àvñ
<2Ë
di•œy
.
dúe˘cﬁ‹
 = 
COLOR_GRAY_80
;

426 
di•œy
.
	`dúe˘Bôm≠
(
x
+8,
y
,
Pokôto_vﬁumeb¨
,1,1);

427 
di•œy
.
	`dúe˘Bôm≠
(
x
+8,
y
-4,
Pokôto_vﬁumeb¨
,1,1);

428 i‡(
Àvñ
<3Ë
di•œy
.
dúe˘cﬁ‹
 = 
COLOR_GRAY_80
;

429 
di•œy
.
	`dúe˘Bôm≠
(
x
+16,
y
,
Pokôto_vﬁumeb¨
,1,1);

430 
di•œy
.
	`dúe˘Bôm≠
(
x
+16,
y
-4,
Pokôto_vﬁumeb¨
,1,1);

431 
di•œy
.
	`dúe˘Bôm≠
(
x
+16,
y
-8,
Pokôto_vﬁumeb¨
,1,1);

432 i‡(
Àvñ
<4) {

433 
di•œy
.
dúe˘cﬁ‹
 = 
COLOR_GRAY_80
;

435 
di•œy
.
	`dúe˘Bôm≠
(
x
+24,
y
,
Pokôto_vﬁumeb¨
,1,1);

436 
di•œy
.
	`dúe˘Bôm≠
(
x
+24,
y
-4,
Pokôto_vﬁumeb¨
,1,1);

437 
di•œy
.
	`dúe˘Bôm≠
(
x
+24,
y
-8,
Pokôto_vﬁumeb¨
,1,1);

438 
di•œy
.
	`dúe˘Bôm≠
(
x
+24,
y
-12,
Pokôto_vﬁumeb¨
,1,1);

440 i‡(
Àvñ
<5) {

441 
di•œy
.
dúe˘cﬁ‹
 = 
COLOR_GRAY_80
;

443 
di•œy
.
	`dúe˘Bôm≠
(
x
+32,
y
,
Pokôto_vﬁumeb¨
,1,1);

444 
di•œy
.
	`dúe˘Bôm≠
(
x
+32,
y
-4,
Pokôto_vﬁumeb¨
,1,1);

445 
di•œy
.
	`dúe˘Bôm≠
(
x
+32,
y
-8,
Pokôto_vﬁumeb¨
,1,1);

446 
di•œy
.
	`dúe˘Bôm≠
(
x
+32,
y
-12,
Pokôto_vﬁumeb¨
,1,1);

447 
di•œy
.
	`dúe˘Bôm≠
(
x
+32,
y
-16,
Pokôto_vﬁumeb¨
,1,1);

449 i‡(
Àvñ
<6) {

450 
di•œy
.
dúe˘cﬁ‹
 = 
COLOR_GRAY_80
;

452 
di•œy
.
	`dúe˘Bôm≠
(
x
+40,
y
,
Pokôto_vﬁumeb¨
,1,1);

453 
di•œy
.
	`dúe˘Bôm≠
(
x
+40,
y
-4,
Pokôto_vﬁumeb¨
,1,1);

454 
di•œy
.
	`dúe˘Bôm≠
(
x
+40,
y
-8,
Pokôto_vﬁumeb¨
,1,1);

455 
di•œy
.
	`dúe˘Bôm≠
(
x
+40,
y
-12,
Pokôto_vﬁumeb¨
,1,1);

456 
di•œy
.
	`dúe˘Bôm≠
(
x
+40,
y
-16,
Pokôto_vﬁumeb¨
,1,1);

457 
di•œy
.
	`dúe˘Bôm≠
(
x
+40,
y
-20,
Pokôto_vﬁumeb¨
,1,1);

458 
di•œy
.
dúe˘cﬁ‹
 = 
ﬁdcﬁ
;

459 
	}
}

462 #ifde‡
POK_SIM


463 
	#VINCMULT
 0.9f

	)

465 
	#VINCMULT
 50

	)

467 
	gC‹e
::
	$£tVﬁLimô
() {

468 
di•œy
.
	`íabÀDúe˘Prötög
(
åue
);

469 
di•œy
.
adju°Ch¨Sãp
 = 0;

471 
d°©e
=1;

472 
boﬁ
 
wùe
 = 
åue
;

473 
vﬁ
 = 
sound
.
	`gëVﬁume
(); 
tvﬁ
;

474 #i‚de‡
POK_SIM


475 
vﬁ
=
	`ì¥om_ªad_byã
((
uöt16_t
*)
EESETTINGS_VOL
);

476 
Pokôto
::
Sound
::
globÆVﬁume
=
vﬁ
;

478 i‡(
vﬁ
>
VOLUME_HEADPHONE_MAX
Ë
sound
.
	`£tMaxVﬁ
(
VOLUME_SPEAKER_MAX
);

479 
sound
.
	`£tMaxVﬁ
(
VOLUME_HEADPHONE_MAX
);

480 #ifde‡
PRODUCTIONTESTING


481 
vﬁ
=170;

482 
sound
.
	`£tMaxVﬁ
(
VOLUME_SPEAKER_MAX
);

484 
uöt8_t
 
t
=0;t<=
vﬁ
;t++) {

485 
sound
.
	`£tVﬁume
(
t
);

487 
vﬁb¨_visibÀ
=0;

488 
cou¡d
=0;

489 #i‚de‡
POK_SIM


491 
cou¡d
 = 
	`ì¥om_ªad_byã
((
uöt16_t
*)
EESETTINGS_VOLWAIT
);

493 i‡(
cou¡d
==0 || countd > 10) countd=0xFFFF;

494 #ifde‡
PRODUCTIONTESTING


495 
cou¡d
=2;

497 
uöt16_t
 
c2
 = 
	`gëTime
();

498 
c‹e
.
	`isRu¬ög
(Ë&& 
d°©e
 && 
cou¡d
){

499 i‡(
	`gëTime
()>
c2
+1000) {

500 
c2
=
	`gëTime
();

501 i‡(
cou¡d
<0xFFFF) countd--;

503 
d°©e
) {

506 i‡(
wùe
) {

507 
di•œy
.
	`˛órLCD
();

508 
di•œy
.
dúe˘cﬁ‹
 = 
COLOR_WHITE
;

509 
di•œy
.
	`£tCurs‹
(4*8,2*8);

510 
di•œy
.
	`¥öt
("SELECT VOLUME LIMIT");

511 
di•œy
.
	`£tCurs‹
(5*8,17*9);

512 
di•œy
.
	`¥öt
("PRESS ");

513 
di•œy
.
dúe˘cﬁ‹
 = 
COLOR_GREEN
;

514 
di•œy
.
	`¥öt
("A");

515 
di•œy
.
dúe˘cﬁ‹
 = 
COLOR_WHITE
;

516 
di•œy
.
	`¥öt
(" TO ACCEPT");

517 
di•œy
.
dúe˘cﬁ‹
 = 
COLOR_GREEN
;

519 
di•œy
.
	`£tCurs‹
(0,11*8);

520 
di•œy
.
	`¥öén
("ábbbbbbbbbbbbbbbbbbbbbbbc");

521 
di•œy
.
	`¥öén
(" | |");

522 
di•œy
.
	`¥öén
(" | |");

523 
di•œy
.
	`¥öén
(" | |");

524 
di•œy
.
	`¥öén
(" | |");

525 
di•œy
.
	`¥öén
(" dbbbbbbbbbbbbbbbbbbbbbbbe");

527 
di•œy
.
	`£tCurs‹
(6*8,17*9);

528 i‡(
dis¸ëe_vﬁ
<4Ë
di•œy
.
dúe˘cﬁ‹
 = 
COLOR_WHITE
;

529 
di•œy
.
dúe˘cﬁ‹
 = 
COLOR_RED
;

530 
di•œy
.
	`dúe˘Bôm≠
(21*8-4,6*8,
Pokôto_hódph⁄es
,1,2);

531 
di•œy
.
	`£tCurs‹
(3*8,6*8+6);

532 
di•œy
.
	`¥öt
("HEADPHONES");

533 
di•œy
.
	`£tCurs‹
(3*8,8*8+2);

534 i‡(
dis¸ëe_vﬁ
>3Ë
di•œy
.
	`¥öt
("TOO LOUD!");

535 
di•œy
.
	`¥öt
("OK ");

536 
di•œy
.
dúe˘cﬁ‹
 = 
COLOR_GREEN
;

537 
di•œy
.
	`dúe˘Bôm≠
(21*8-4,12*8,
Pokôto_•ókî
,1,2);

538 
di•œy
.
	`£tCurs‹
(3*8,12*8+6);

539 
di•œy
.
	`¥öt
("VOLUME MAX");

540 
di•œy
.
	`£tCurs‹
(3*8,14*8+2);

544 i‡((
sound
.
	`gëVﬁume
()>>5)>3Ë{ 
di•œy
.
dúe˘cﬁ‹
=
COLOR_RED
;}

545 
di•œy
.
dúe˘cﬁ‹
=
COLOR_GREEN
;

546 i‡(
dis¸ëe_vﬁ
==4Ë
di•œy
.
dúe˘cﬁ‹
=
COLOR_YELLOW
;

547 i‡(
dis¸ëe_vﬁ
==7) discrete_vol=6;

548 
di•œy
.
	`¥öt
(()
dis¸ëe_vﬁ
);

550 
di•œy
.
	`¥öt
(" ");

551 
di•œy
.
dúe˘cﬁ‹
=
COLOR_GREEN
;

552 
	`døwvﬁb¨
(14*8,14*8+4+3,
sound
.
	`gëVﬁume
(),
Ál£
);

555 
d°©e
=2; ;

557 #i‚de‡
POK_SIM


558 
buâ⁄s
.
	`pﬁlBuâ⁄s
();

560 
buâ⁄s
.
	`upd©e
();

561 i‡(
	`aBä
()Ë{
d°©e
=0;;}

562 i‡(
buâ⁄s
.
	`¥es£d
(
BTN_RIGHT
)) {

563 
cou¡d
=0xFFFF;

572 
sound
.
	`vﬁumeUp
();

573 
d°©e
=1; 
wùe
=
Ál£
;

576 i‡(
buâ⁄s
.
	`¥es£d
(
BTN_LEFT
)) {

577 
cou¡d
=0xFFFF;

583 
sound
.
	`vﬁumeDown
();

584 
d°©e
=1; 
wùe
=
Ál£
;

590 
vﬁ
 = 
sound
.
	`gëVﬁume
();

591 #i‚de‡
POK_SIM


592 i‡(
vﬁ
 !
	`ì¥om_ªad_byã
((
uöt16_t
*)
EESETTINGS_VOL
)Ë
	`ì¥om_wrôe_byã
((uöt16_t*)EESETTINGS_VOL,(
uöt8_t
)vol);

594 
sound
.
	`£tVﬁume
(
vﬁ
);

596 
di•œy
.
	`£tCurs‹
(0,0);

597 
	}
}

599 
	gC‹e
::
	$begö
() {

601 
	`öô
();

602 
timePîFøme
 = 
POK_FRAMEDURATION
;

605 
‰ameEndMi¸os
 = 1;

606 
°¨tMíuTimî
 = 255;

608 
	`ªadSëtögs
();

610 
backlight
.
	`begö
();

611 
backlight
.
	`£t
(
BACKLIGHT_MAX
);

612 
buâ⁄s
.
	`begö
();

613 
buâ⁄s
.
	`upd©e
();

614 
b©ãry
.
	`begö
();

615 
di•œy
.
	`begö
();

616 #i‡
POK_DISPLAYLOGO


617 #i‡
PROJ_DEVELOPER_MODE
 != 1

618 
	`showLogo
();

622 
di•œy
.
	`íabÀDúe˘Prötög
(
åue
);

623 
di•œy
.
dúe˘bgcﬁ‹
 = 
COLOR_BLACK
;

624 
di•œy
.
	`˛órLCD
();

625 
di•œy
.
	`£tF⁄t
(
‚tC64UIGfx
);

627 
di•œy
.
	`íabÀDúe˘Prötög
(
åue
);

628 
di•œy
.
dúe˘bgcﬁ‹
 = 
COLOR_BLACK
;

629 
di•œy
.
dúe˘cﬁ‹
 = 
COLOR_GREEN
;

630 
di•œy
.
	`˛órLCD
();

631 
di•œy
.
	`£tF⁄t
(
‚tC64UIGfx
);

632 
di•œy
.
adju°Ch¨Sãp
=0;

633 
di•œy
.
adju°LöeSãp
=1;

634 #ifde‡
JUSTLOAD


635 
	`jumpToLﬂdî
();

638 #i‚de‡
DISABLE_LOADER


639 #i‡
PROJ_DEVELOPER_MODE
 != 1

640 
	`askLﬂdî
();

644 #i‡
PROJ_DEVELOPER_MODE
==1

645 
sound
.
	`£tMaxVﬁ
(
VOLUME_SPEAKER_MAX
);

646 
sound
.
	`£tVﬁume
(
VOLUME_SPEAKER_MAX
);

649 
	`£tVﬁLimô
();

650 
di•œy
.
	`˛ór
();

651 
di•œy
.
	`upd©e
();

653 
buâ⁄s
.
°©es
[
BTN_A
])

655 
buâ⁄s
.
	`upd©e
();

660 
di•œy
.
	`íabÀDúe˘Prötög
(
Ál£
);

661 
di•œy
.
adju°Ch¨Sãp
=1;

662 
di•œy
.
adju°LöeSãp
=1;

663 
di•œy
.
f⁄tSize
=1;

664 
di•œy
.
ãxtWøp
=
åue
;

665 #i‡
POK_GAMEBUINO_SUPPORT
 > 0

666 
di•œy
.
	`£tF⁄t
(
f⁄t5x7
);

668 
di•œy
.
	`£tF⁄t
(
f⁄tC64
);

670 #i‡
POK_ENABLE_SOUND
 > 0

671 
sound
.
	`begö
();

674 
b©ãry
.
	`upd©e
();

675 if(
buâ⁄s
.
	`¥es£d
(
BTN_B
)){

676 
sound
.
	`£tVﬁume
(0);

679 #i‡
POK_GBSOUND
 > 0

680 #if(
NUM_CHANNELS
 > 0)

681 
sound
.
	`∂ayP©ã∫
(
°¨tupSound
, 0);

683 #if(
NUM_CHANNELS
 > 1)

684 
sound
.
	`∂ayP©ã∫
(
°¨tupSound
, 1);

686 #if(
NUM_CHANNELS
 > 2)

687 
sound
.
	`∂ayP©ã∫
(
°¨tupSound
, 2);

689 #if(
NUM_CHANNELS
 > 3)

690 
sound
.
	`∂ayP©ã∫
(
°¨tupSound
, 3);

695 
	}
}

697 
	gC‹e
::
	$öô
() {

698 
run_°©e
 = 
åue
;

699 
di•œy
.
	`íabÀDúe˘Prötög
(
Ál£
);

700 
di•œy
.
	`£tF⁄t
(
DEFAULT_FONT
);

701 
	`öôClock
();

702 
	`öôGPIO
();

703 
	`öôBuâ⁄s
();

704 
	`öôR™dom
();

707 
	}
}

709 
	gC‹e
::
	$öô
(
uöt8_t
 
swôches
) {

710 
run_°©e
 = 
åue
;

711 
di•œy
.
	`íabÀDúe˘Prötög
(
Ál£
);

712 
di•œy
.
	`£tF⁄t
(
DEFAULT_FONT
);

713 
	`öôClock
();

714 
	`öôGPIO
();

715 
	`öôBuâ⁄s
();

716 
	`öôR™dom
();

719 
	}
}

721 
	gC‹e
::
	$öôBuâ⁄s
() {

722 #i‚de‡
POK_SIM


723 
Pokôto
::
	`öôBuâ⁄s
();

725 
	}
}

727 
boﬁ
 
	gC‹e
::
	$isRu¬ög
() {

728 #ifde‡
POK_SIM


729 
run_°©e
 = 
simuœt‹
.
	`isRu¬ög
();

731  
run_°©e
;

732 
	}
}

734 
	gC‹e
::
	$öôDi•œy
() {

735 #i‡
POK_DISPLAYLOGO
 > 0

736 
	`showLogo
();

738 #i‡
POK_USE_CONSOLE
 > 0

739 
c⁄sﬁe
.
	`AddMesßge
(
MSOURCE_LCD
,
MSG_INIT_OK
);

741 
	}
}

743 
	gC‹e
::
	$showLogo
() {

744 
uöt32_t
 
now
;

745 
uöt8_t
 
°©e
=0;

746 
uöt16_t
 
cou¡î
=0, 
i
=0;

747 
uöt16_t
 
sc
;

748 
°©e
 < 255/6) {

749 
now
=
	`gëTime
();

750 i‡(
now
>
ª‰eshtime
) {

751 
ª‰eshtime
=
now
+30;

752 
°©e
) {

755 
di•œy
.
dúe˘bgcﬁ‹
 = 
COLOR_BLACK
;

756 
di•œy
.
	`fûlLCD
(di•œy.
dúe˘bgcﬁ‹
);

757 
sc
 = 
COLOR_BLACK
;

758 
°©e
++;

762 
di•œy
.
dúe˘cﬁ‹
 = di•œy.
	`öãΩﬁ©eCﬁ‹
(
sc
, 
COLOR_GREEN
, 
i
);

763 
di•œy
.
	`dúe˘Bôm≠
(
POK_LCD_W
/2 - (*
Pokôto_logo
/2),
POK_LCD_H
/2-(*(Pokitto_logo+1)/2),Pokitto_logo,1,1);

764 
i
 += 28;

765 i‡(
i
>=0xFFË{ 
°©e
++; i=0;}

769 
di•œy
.
dúe˘cﬁ‹
 = 
COLOR_GREEN
;

770 
di•œy
.
	`dúe˘Bôm≠
(
POK_LCD_W
/2 - (*
Pokôto_logo
/2),
POK_LCD_H
/2-(*(Pokitto_logo+1)/2),Pokitto_logo,1,1);

771 
i
+= 0x3F;

772 i‡(
i
>0x3FFË
°©e
 = 255;

775 if(
buâ⁄s
.
	`aBä
()Ë
°©e
=255;

778 
	}
}

780 
	gC‹e
::
	$ªadSëtögs
() {

788 
sound
.
	`£tMaxVﬁ
(
VOLUME_HEADPHONE_MAX
);

789 
sound
.
globÆVﬁume
 = 
VOLUME_STARTUP
;

791 
°¨tMíuTimî
 = 
START_MENU_TIMER
;

797 
	}
}

799 
	gC‹e
::
	$tôÀS¸ìn
(c⁄° * 
«me
){

800 
	`tôÀS¸ìn
(
«me
, 0);

801 
	}
}

803 
	gC‹e
::
	$tôÀS¸ìn
(c⁄° 
uöt8_t
* 
logo
){

804 
	`tôÀS¸ìn
((""), 
logo
);

805 
	}
}

807 
	gC‹e
::
	$tôÀS¸ìn
(){

808 
	`tôÀS¸ìn
((""));

809 
	}
}

811 
	gC‹e
::
	$tôÀS¸ìn
(c⁄° * 
«me
, c⁄° 
uöt8_t
 *
logo
){

812 
di•œy
.
	`£tF⁄t
(
f⁄t5x7
);

813 if(
°¨tMíuTimî
){

814 
di•œy
.
f⁄tSize
 = 1;

815 
di•œy
.
ãxtWøp
 = 
Ál£
;

816 
di•œy
.
≥rsi°í˚
 = 
Ál£
;

817 
b©ãry
.
show
 = 
Ál£
;

818 
di•œy
.
	`£tCﬁ‹
(
BLACK
);

819 
	`isRu¬ög
()){

820 if(
	`upd©e
()){

821 
uöt8_t
 
logoOff£t
 = 
«me
[0]?
di•œy
.
f⁄tHeight
:0;

823 
di•œy
.
	`£tCﬁ‹Dïth
(1);

824 
di•œy
.
	`£tCﬁ‹
(3);

826 
di•œy
.
	`£tCﬁ‹
(1);

827 if(
logo
){

828 
di•œy
.
	`døwBôm≠
(0, 12+
logoOff£t
, 
logo
);

830 
di•œy
.
curs‹X
 = 0;

831 
di•œy
.
curs‹Y
 = 12;

832 
di•œy
.
	`¥öt
(
«me
);

835 
di•œy
.
curs‹X
 = 
LCDWIDTH
 - di•œy.
f⁄tWidth
*3 -1;

836 
di•œy
.
curs‹Y
 = 
LCDHEIGHT
 - di•œy.
f⁄tHeight
*3 - 3;

837 if((
‰ameCou¡
/16)%2)

838 
di•œy
.
	`¥öén
(("\25 \20"));

840 
di•œy
.
	`¥öén
(("\25\20 "));

842 
di•œy
.
curs‹X
 = 
LCDWIDTH
 - di•œy.
f⁄tWidth
*3 - 1;

843 
di•œy
.
curs‹Y
++;

844 if(
sound
.
globÆVﬁume
)

845 
di•œy
.
	`¥öén
(("\26\23\24"));

847 
di•œy
.
	`¥öén
(("\26\23x"));

849 
di•œy
.
curs‹X
 = 
LCDWIDTH
 - di•œy.
f⁄tWidth
*3 - 1;

850 
di•œy
.
curs‹Y
++;

854 if(
buâ⁄s
.
	`¥es£d
(
BTN_B
)){

855 
sound
.
	`£tVﬁume
(sound.
	`gëVﬁume
() + 1);

856 
sound
.
	`∂ayTick
();

859 if(
buâ⁄s
.
	`¥es£d
(
BTN_A
Ë|| ((
‰ameCou¡
>=
°¨tMíuTimî
)&&(startMenuTimer != 255))){

860 
°¨tMíuTimî
 = 255;

861 
sound
.
	`°›P©ã∫
(0);

862 
sound
.
	`∂ayOK
();

870 
b©ãry
.
show
 = 
åue
;

872 
	}
}

885 
boﬁ
 
	gC‹e
::
	$upd©e
(
boﬁ
 
u£Dúe˘Mode
, 
uöt8_t
 
updRe˘X
, uöt8_à
updRe˘Y
, uöt8_à
updRe˘W
, uöt8_à
updRe˘H
) {

887 #i‡
POK_STREAMING_MUSIC


888 
sound
.
	`upd©eSåóm
();

891 
uöt32_t
 
now
 = 
	`gëTime
();

892 i‡((((
√xtFømeMûlis
 - 
now
)Ë> 
timePîFøme
Ë&& 
‰ameEndMi¸os
) {

893 
√xtFømeMûlis
 = 
now
 + 
timePîFøme
;

894 
‰ameCou¡
++;

896 
‰ameEndMi¸os
 = 0;

897 
backlight
.
	`upd©e
();

898 
buâ⁄s
.
	`upd©e
();

899 
b©ãry
.
	`upd©e
();

902 #i‡
	`deföed
(
PROJ_USE_FPS_COUNTER
Ë|| deföed(
PROJ_SHOW_FPS_COUNTER
)

903 c⁄° 
uöt32_t
 
ÂsI¡îvÆ_ms
 = 1000*3;

905 
Âs_‰ameCou¡
++;

906 i‡(
now
 > 
Âs_ª‰eshtime
) {

907 
Âs_cou¡î
 = (1000*
Âs_‰ameCou¡
Ë/ (
now
 - 
Âs_ª‰eshtime
 + 
ÂsI¡îvÆ_ms
);

908 
Âs_ª‰eshtime
 = 
now
 + 
ÂsI¡îvÆ_ms
;

909 
Âs_‰ameCou¡
 = 0;

910 
Âs_cou¡î_upd©ed
 = 
åue
;

914  
åue
;

917 i‡(!
‰ameEndMi¸os
) {

918 #i‡
POK_ENABLE_SOUND
 > 0

919 
sound
.
	`upd©eTøck
();

920 
sound
.
	`upd©eP©ã∫
();

921 
sound
.
	`upd©eNŸe
();

923 
	`upd©eP›up
();

924 
	`di•œyB©ãry
();

926 
di•œy
.
	`upd©e
(
u£Dúe˘Mode
, 
updRe˘X
, 
updRe˘Y
, 
updRe˘W
, 
updRe˘H
);

928 
‰ameEndMi¸os
 = 1;

931  
Ál£
;

933 
	}
}

935 
	gC‹e
::
	$di•œyB©ãry
(){

936 #i‡(
ENABLE_BATTERY
 > 0)

938 
uöt8_t
 
ox
,
oy
;

939 
ox
=
di•œy
.
curs‹X
;

940 
oy
=
di•œy
.
curs‹Y
;

941 
di•œy
.
curs‹X
 = 
LCDWIDTH
-di•œy.
f⁄tWidth
+1;

942 
di•œy
.
curs‹Y
 = 0;

943 
b©ãry
.
Àvñ
){

945 
sound
.
	`°›P©ã∫
();

946 
backlight
.
	`£t
(0);

947 
di•œy
.
	`˛ór
();

948 
di•œy
.
f⁄tSize
 = 1;

949 
di•œy
.
	`¥öt
(("LOW BATTERY\n"));

950 
di•œy
.
	`¥öt
(
b©ãry
.
vﬁège
);

951 
di•œy
.
	`¥öt
(("mV\n\nPLEASE\nTURN OFF"));

952 
di•œy
.
	`upd©e
();

955 if((
‰ameCou¡
 % 16Ë< 8Ë
di•œy
.
	`¥öt
('\7');

956 
di•œy
.
	`¥öt
('x');

961 if(
b©ãry
.
show
){

962 
di•œy
.
	`¥öt
((5+
b©ãry
.
Àvñ
));

966 if(
b©ãry
.
show
){

967 
di•œy
.
	`¥öt
('/');

971 
di•œy
.
curs‹X
 = 
ox
;

972 
di•œy
.
curs‹Y
 = 
oy
;

974 
	}
}

976 * 
	gC‹e
::
	$fûemíu
(*
ext
) {

977 
uöt8_t
 
ﬁdPîsi°í˚
 = 
di•œy
.
≥rsi°í˚
;

978 
di•œy
.
≥rsi°í˚
 = 
Ál£
;

979 
uöt16_t
 
ﬁd∑l0
=
di•œy
.
∑Àâe
[0];

980 
uöt16_t
 
ﬁd∑l1
=
di•œy
.
∑Àâe
[1];

981 
uöt16_t
 
ﬁd∑l2
=
di•œy
.
∑Àâe
[2];

982 
di•œy
.
∑Àâe
[2]=
COLOR_GREEN
;

983 
di•œy
.
∑Àâe
[1]=
COLOR_WHITE
;

984 
di•œy
.
∑Àâe
[0]=
COLOR_BLACK
;

985 
uöt8_t
 
ﬁdbg
=
di•œy
.
bgcﬁ‹
;

986 
uöt8_t
 
ﬁdfg
=
di•œy
.
cﬁ‹
;

987 
di•œy
.
cﬁ‹
=1;

988 
di•œy
.
bgcﬁ‹
=0;

990 
öt16_t
 
rowh
 = 
di•œy
.
f⁄tHeight
 + 2;

991 
öt8_t
 
a˘iveIãm
 = 0;

992 
öt16_t
 
cuºítT›Iãm
 = 0;

993 
öt16_t
 
ôemsPîS¸ìn
 = (
di•œy
.
height
+1Ë/ 
rowh
;

994 
öt16_t
 
numOfIãmsFound
 = 0;

995 
boﬁón
 
exô
 = 
Ál£
;

997 * 
txt
;

999 
	`pokInôSD
();

1001 
boﬁ
 
upd©ed
 = 
åue
;

1002 
	`isRu¬ög
()) {

1003 i‡(
	`upd©e
(
åue
)) {

1004 i‡(
buâ⁄s
.
	`¥es£d
(
BTN_A
Ë|| buâ⁄s.¥es£d(
BTN_B
Ë|| buâ⁄s.¥es£d(
BTN_C
)) {

1005 
exô
 = 
åue
;

1006 i‡(
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

1007 
sound
.
	`∂ayOK
();

1009 *
£À˘edfûe
 = 0;

1010 
sound
.
	`∂ayC™˚l
();

1012 
upd©ed
 = 
åue
;

1014 i‡(
exô
 =
Ál£
) {

1015 i‡(
buâ⁄s
.
	`ª≥©
(
BTN_DOWN
,4)) {

1016 if–++
a˘iveIãm
 >
numOfIãmsFound
 )áctiveItem =ÇumOfItemsFound - 1;

1017 if–
a˘iveIãm
 >
cuºítT›Iãm
 + 
ôemsPîS¸ìn
) currentTopItem += itemsPerScreen;

1018 
sound
.
	`∂ayTick
();

1019 
upd©ed
 = 
åue
;

1021 i‡(
buâ⁄s
.
	`ª≥©
(
BTN_UP
,4)) {

1022 if–--
a˘iveIãm
 < 0 )áctiveItem = 0;

1023 if–
a˘iveIãm
 < 
cuºítT›Iãm
ËcuºítT›Iãm -
ôemsPîS¸ìn
;

1024 
sound
.
	`∂ayTick
();

1025 
upd©ed
 = 
åue
;

1029 
di•œy
.
bgcﬁ‹
=
ﬁdbg
;

1030 
di•œy
.
cﬁ‹
=
ﬁdfg
;

1031 
di•œy
.
∑Àâe
[0] = 
ﬁd∑l0
;

1032 
di•œy
.
∑Àâe
[1] = 
ﬁd∑l1
;

1033 
di•œy
.
∑Àâe
[2] = 
ﬁd∑l2
;

1034 
di•œy
.
≥rsi°í˚
 = 
ﬁdPîsi°í˚
;

1035  
£À˘edfûe
;

1039 
di•œy
.
ãxtWøp
 = 
Ál£
;

1040 
uöt16_t
 
fc
,
bc
;

1041 
fc
 = 
di•œy
.
cﬁ‹
;

1042 
bc
 = 
di•œy
.
bgcﬁ‹
;

1043 if–
upd©ed
 ) {

1044 #i‡
POK_SIM


1045 
	`gëFú°Fûe
(
ext
);

1047 
boﬁ
 
isFú°Fûe
 = 
åue
;

1049 
i
 = 0; ; i++) {

1050 
di•œy
.
curs‹X
 = 0;

1051 
di•œy
.
övisibÀcﬁ‹
=255;

1052 
di•œy
.
curs‹Y
 = (
i
 - 
cuºítT›Iãm
 ) * 
rowh
;

1055 #i‚de‡
POK_SIM


1056 if(
isFú°Fûe
) {

1057 
txt
 = 
	`gëFú°Fûe
(
ext
);

1058 
isFú°Fûe
 = 
Ál£
;

1063 
txt
 = 
	`gëNextFûe
(
ext
);

1065 i‡(
txt
) {

1067 
numOfIãmsFound
 = 
i
+1;

1070 i‡(
i
 =
a˘iveIãm
){

1071 
di•œy
.
curs‹X
 = 3;

1072 
di•œy
.
cﬁ‹
=2;

1073 
di•œy
.
	`fûlRe˘
(0, di•œy.
curs‹Y
 - 2, 
LCDWIDTH
, 
rowh
);

1074 
di•œy
.
	`£tCﬁ‹
(0,2);

1075 } 
di•œy
.
	`£tCﬁ‹
(1,0);

1078 if(
i
 >
cuºítT›Iãm
 + 
ôemsPîS¸ìn
 ) {

1083 if–
i
 >
cuºítT›Iãm
) {

1084 
di•œy
.
	`¥öt
(di•œy.
curs‹X
, di•œy.
curs‹Y
, 
txt
);

1085 i‡(
i
 =
a˘iveIãm
)

1086 
	`°r˝y
(
£À˘edfûe
,
txt
);

1091 
di•œy
.
	`£tCﬁ‹
(1,0);

1094 
di•œy
.
	`upd©e
();

1096 
upd©ed
 = 
Ál£
;

1099 
di•œy
.
	`£tCﬁ‹
(1,0);

1102 
	}
}

1104 * 
	gC‹e
::
	$fûemíu
() {

1105  
	`fûemíu
("");

1106 
	}
}

1108 
öt8_t
 
	gC‹e
::
	$míu
(c⁄° * c⁄°* 
ôems
, 
uöt8_t
 
Àngth
) {

1109 i‡(
di•œy
.
cﬁ‹
>3) display.color=1;

1110 #i‡(
ENABLE_GUI
 > 0)

1111 
di•œy
.
≥rsi°í˚
 = 
Ál£
;

1112 
öt8_t
 
a˘iveIãm
 = 0;

1113 
öt16_t
 
cuºítY
 = 
di•œy
.
height
;

1114 
öt16_t
 
èrgëY
 = 0, 
rowh
 = 
di•œy
.
f⁄tHeight
 + 2;

1115 
boﬁón
 
exô
 = 
Ál£
;

1116 
öt8_t
 
™swî
 = -1;

1117 
	`isRu¬ög
()) {

1118 i‡(
	`upd©e
()) {

1119 i‡(
buâ⁄s
.
	`¥es£d
(
BTN_A
Ë|| buâ⁄s.¥es£d(
BTN_B
Ë|| buâ⁄s.¥es£d(
BTN_C
)) {

1120 
exô
 = 
åue
;

1121 
èrgëY
 = - 
di•œy
.
f⁄tHeight
 * 
Àngth
 - 2;

1122 i‡(
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

1123 
™swî
 = 
a˘iveIãm
;

1124 
sound
.
	`∂ayOK
();

1126 
sound
.
	`∂ayC™˚l
();

1129 i‡(
exô
 =
Ál£
) {

1130 i‡(
buâ⁄s
.
	`ª≥©
(
BTN_DOWN
,4)) {

1131 
a˘iveIãm
++;

1132 
sound
.
	`∂ayTick
();

1134 i‡(
buâ⁄s
.
	`ª≥©
(
BTN_UP
,4)) {

1135 
a˘iveIãm
--;

1136 
sound
.
	`∂ayTick
();

1139 i‡(
a˘iveIãm
 =
Àngth
)áctiveItem = 0;

1140 i‡(
a˘iveIãm
 < 0Ëa˘iveIãm = 
Àngth
 - 1;

1142 
èrgëY
 = -
rowh
 * 
a˘iveIãm
 + (rowh+4);

1144 i‡((
cuºítY
 - 
èrgëY
) <= 1)

1145  (
™swî
);

1148 
cuºítY
 = (cuºítY + 
èrgëY
) / 2;

1149 
di•œy
.
curs‹X
 = 0;

1150 
di•œy
.
curs‹Y
 = 
cuºítY
;

1151 
di•œy
.
ãxtWøp
 = 
Ál£
;

1152 
uöt16_t
 
fc
,
bc
;

1153 
fc
 = 
di•œy
.
cﬁ‹
;

1154 
bc
 = 
di•œy
.
bgcﬁ‹
;

1155 
byã
 
i
 = 0; i < 
Àngth
; i++) {

1156 
di•œy
.
curs‹Y
 = 
cuºítY
 + 
rowh
 * 
i
;

1157 i‡(
i
 =
a˘iveIãm
){

1158 
di•œy
.
curs‹X
 = 3;

1161 
di•œy
.
	`fûlRe˘
(0, 
cuºítY
 + 
rowh
 * 
a˘iveIãm
 - 2, 
LCDWIDTH
, (rowh));

1162 
di•œy
.
	`£tCﬁ‹
(
bc
,
fc
);

1163 } 
di•œy
.
	`£tCﬁ‹
(
fc
,
bc
);

1165 
di•œy
.
	`¥öén
((*)*(c⁄° *)(
ôems
+
i
));

1166 
di•œy
.
	`£tCﬁ‹
(
fc
,
bc
);

1175 
	}
}

1177 
	gC‹e
::
	$keybﬂrd
(* 
ãxt
, 
uöt8_t
 
Àngth
) {

1178 #i‡(
ENABLE_GUI
 > 0)

1179 
di•œy
.
≥rsi°í˚
 = 
Ál£
;

1181 
ãxt
[
Àngth
-1] = '\0';

1183 
öt8_t
 
a˘iveCh¨
 = 0;

1185 
öt8_t
 
a˘iveX
 = 0;

1186 
öt8_t
 
a˘iveY
 = 2;

1188 
öt8_t
 
cuºítX
 = 
LCDWIDTH
;

1189 
öt8_t
 
cuºítY
 = 
LCDHEIGHT
;

1190 
öt8_t
 
èrgëX
 = 0;

1191 
öt8_t
 
èrgëY
 = 0;

1194 i‡(
	`upd©e
()) {

1196 i‡(
buâ⁄s
.
	`ª≥©
(
BTN_DOWN
, 4)) {

1197 
a˘iveY
++;

1198 
sound
.
	`∂ayTick
();

1200 i‡(
buâ⁄s
.
	`ª≥©
(
BTN_UP
, 4)) {

1201 
a˘iveY
--;

1202 
sound
.
	`∂ayTick
();

1204 i‡(
buâ⁄s
.
	`ª≥©
(
BTN_RIGHT
, 4)) {

1205 
a˘iveX
++;

1206 
sound
.
	`∂ayTick
();

1208 i‡(
buâ⁄s
.
	`ª≥©
(
BTN_LEFT
, 4)) {

1209 
a˘iveX
--;

1210 
sound
.
	`∂ayTick
();

1213 i‡(
a˘iveX
 =
KEYBOARD_W
)áctiveX = 0;

1214 i‡(
a˘iveX
 < 0Ëa˘iveX = 
KEYBOARD_W
 - 1;

1215 i‡(
a˘iveY
 =
KEYBOARD_H
)áctiveY = 0;

1216 i‡(
a˘iveY
 < 0Ëa˘iveY = 
KEYBOARD_H
 - 1;

1218 
èrgëX
 = -(
di•œy
.
f⁄tWidth
+1Ë* 
a˘iveX
 + 
LCDWIDTH
 / 2 - 3;

1219 
èrgëY
 = -(
di•œy
.
f⁄tHeight
+1Ë* 
a˘iveY
 + 
LCDHEIGHT
 / 2 - 4 - display.fontHeight;

1221 
cuºítX
 = (
èrgëX
 + currentX) / 2;

1222 
cuºítY
 = (
èrgëY
 + currentY) / 2;

1224 i‡(
buâ⁄s
.
	`¥es£d
(
BTN_A
)) {

1225 i‡(
a˘iveCh¨
 < (
Àngth
-1)) {

1226 
byã
 
thisCh¨
 = 
a˘iveX
 + 
KEYBOARD_W
 * 
a˘iveY
;

1227 if((
thisCh¨
 == 0)||(thisChar == 10)||(thisChar == 13))

1229 
ãxt
[
a˘iveCh¨
] = 
thisCh¨
;

1230 
ãxt
[
a˘iveCh¨
+1] = '\0';

1232 
a˘iveCh¨
++;

1233 
sound
.
	`∂ayOK
();

1234 i‡(
a˘iveCh¨
 > 
Àngth
)

1235 
a˘iveCh¨
 = 
Àngth
;

1238 i‡(
buâ⁄s
.
	`¥es£d
(
BTN_B
)) {

1239 
a˘iveCh¨
--;

1240 
sound
.
	`∂ayC™˚l
();

1241 i‡(
a˘iveCh¨
 >= 0)

1242 
ãxt
[
a˘iveCh¨
] = 0;

1244 
a˘iveCh¨
 = 0;

1247 i‡(
buâ⁄s
.
	`¥es£d
(
BTN_C
)) {

1248 
sound
.
	`∂ayOK
();

1250 i‡(
	`upd©e
()) {

1252 
di•œy
.
	`¥öén
(("YouÉntered\n"));

1253 
di•œy
.
	`¥öt
(
ãxt
);

1254 
di•œy
.
	`¥öén
(("\n\n\n\x15:okay \x16:edit"));

1255 if(
buâ⁄s
.
	`¥es£d
(
BTN_A
)){

1256 
sound
.
	`∂ayOK
();

1259 if(
buâ⁄s
.
	`¥es£d
(
BTN_B
)){

1260 
sound
.
	`∂ayC™˚l
();

1267 
öt8_t
 
y
 = 0; y < 
KEYBOARD_H
; y++) {

1268 
öt8_t
 
x
 = 0; x < 
KEYBOARD_W
; x++) {

1269 
di•œy
.
	`døwCh¨
(
cuºítX
 + 
x
 * (di•œy.
f⁄tWidth
+1), 
cuºítY
 + 
y
 * (di•œy.
f⁄tHeight
+1), x + y * 
KEYBOARD_W
, 1);

1273 
di•œy
.
curs‹X
 = 
cuºítX
-di•œy.
f⁄tWidth
*6-2;

1274 
di•œy
.
curs‹Y
 = 
cuºítY
+1*(di•œy.
f⁄tHeight
+1);

1275 
di•œy
.
	`¥öt
(("\25type"));

1277 
di•œy
.
curs‹X
 = 
cuºítX
-di•œy.
f⁄tWidth
*6-2;

1278 
di•œy
.
curs‹Y
 = 
cuºítY
+2*(di•œy.
f⁄tHeight
+1);

1279 
di•œy
.
	`¥öt
(("\26back"));

1281 
di•œy
.
curs‹X
 = 
cuºítX
-di•œy.
f⁄tWidth
*6-2;

1282 
di•œy
.
curs‹Y
 = 
cuºítY
+3*(di•œy.
f⁄tHeight
+1);

1283 
di•œy
.
	`¥öt
(("\27save"));

1286 
di•œy
.
	`£tCﬁ‹
(
WHITE
);

1287 
di•œy
.
	`døwFa°HLöe
(
cuºítX
 + 
a˘iveX
 * (di•œy.
f⁄tWidth
+1Ë- 1, 
cuºítY
 + 
a˘iveY
 * (di•œy.
f⁄tHeight
+1) - 2, 7);

1289 
di•œy
.
	`£tCﬁ‹
(
BLACK
);

1290 
di•œy
.
	`døwRoundRe˘
(
cuºítX
 + 
a˘iveX
 * (di•œy.
f⁄tWidth
+1Ë- 2, 
cuºítY
 + 
a˘iveY
 * (di•œy.
f⁄tHeight
+1) - 3, (display.fontWidth+2)+(display.fontWidth-1)%2, (display.fontHeight+5), 3);

1294 
di•œy
.
	`døwFa°HLöe
(0, 
LCDHEIGHT
-di•œy.
f⁄tHeight
-2, 
LCDWIDTH
);

1295 
di•œy
.
	`£tCﬁ‹
(
WHITE
);

1296 
di•œy
.
	`fûlRe˘
(0, 
LCDHEIGHT
-di•œy.
f⁄tHeight
-1, 
LCDWIDTH
, display.fontHeight+1);

1298 
di•œy
.
curs‹X
 = 0;

1299 
di•œy
.
curs‹Y
 = 
LCDHEIGHT
-di•œy.
f⁄tHeight
;

1300 
di•œy
.
	`£tCﬁ‹
(
BLACK
);

1301 
di•œy
.
	`¥öt
(
ãxt
);

1303 i‡(((
‰ameCou¡
 % 8Ë< 4Ë&& (
a˘iveCh¨
 < (
Àngth
-1)))

1304 
di•œy
.
	`døwCh¨
(di•œy.
f⁄tWidth
 * 
a˘iveCh¨
, 
LCDHEIGHT
-di•œy.
f⁄tHeight
, '_',1);

1308 
	}
}

1310 
	gC‹e
::
	$p›up
(c⁄° * 
ãxt
, 
uöt8_t
 
duøti⁄
){

1311 #i‡(
ENABLE_GUI
 > 0)

1312 
p›upText
 = 
ãxt
;

1313 
p›upTimeLe·
 = 
duøti⁄
+12;

1315 
	}
}

1317 
	gC‹e
::
	$upd©eP›up
(){

1318 #i‡(
ENABLE_GUI
 > 0)

1319 i‡(
p›upTimeLe·
){

1320 
uöt8_t
 
yOff£t
 = 0;

1321 if(
p›upTimeLe·
<12){

1322 
yOff£t
 = 12-
p›upTimeLe·
;

1324 
di•œy
.
f⁄tSize
 = 1;

1325 
di•œy
.
	`£tCﬁ‹
(
WHITE
);

1326 
di•œy
.
	`fûlRoundRe˘
(0,
LCDHEIGHT
-di•œy.
f⁄tHeight
+
yOff£t
-3,84,display.fontHeight+3,3);

1327 
di•œy
.
	`£tCﬁ‹
(
BLACK
);

1328 
di•œy
.
	`døwRoundRe˘
(0,
LCDHEIGHT
-di•œy.
f⁄tHeight
+
yOff£t
-3,84,display.fontHeight+3,3);

1329 
di•œy
.
curs‹X
 = 4;

1330 
di•œy
.
curs‹Y
 = 
LCDHEIGHT
-di•œy.
f⁄tHeight
+
yOff£t
-1;

1331 
di•œy
.
	`¥öt
(
p›upText
);

1332 
p›upTimeLe·
--;

1335 
	}
}

1337 
	gC‹e
::
	$£tFømeR©e
(
uöt8_t
 
Âs
) {

1338 
timePîFøme
 = 1000 / 
Âs
;

1339 
sound
.
¥esˇÀr
 = 
Âs
 / 20;

1340 
sound
.
¥esˇÀr
 = 
	`__avrmax
(1, sound.prescaler);

1341 
	}
}

1343 
	gC‹e
::
	$pickR™domSìd
(){

1344 
	`öôR™dom
();

1345 
	}
}

1347 
boﬁ
 
	gC‹e
::
	$cﬁlidePoötRe˘
(
öt16_t
 
x1
, i¡16_à
y1
 ,öt16_à
x2
 ,öt16_à
y2
, i¡16_à
w
, i¡16_à
h
){

1348 if((
x1
>=
x2
)&&(x1<x2+
w
))

1349 if((
y1
>=
y2
)&&(y1<y2+
h
))

1350  
åue
;

1351  
Ál£
;

1352 
	}
}

1354 
boﬁ
 
	gC‹e
::
	$cﬁlideRe˘Re˘
(
öt16_t
 
x1
, i¡16_à
y1
, i¡16_à
w1
, i¡16_à
h1
 ,öt16_à
x2
 ,öt16_à
y2
, i¡16_à
w2
, i¡16_à
h2
){

1355  !–
x2
 >
x1
+
w1
 ||

1356 
x2
+
w2
 <
x1
 ||

1357 
y2
 >
y1
+
h1
 ||

1358 
y2
+
h2
 <
y1
 );

1359 
	}
}

1361 
boﬁ
 
	gC‹e
::
	$cﬁlideBôm≠Bôm≠
(
öt16_t
 
x1
, i¡16_à
y1
, c⁄° 
uöt8_t
* 
b1
, i¡16_à
x2
, i¡16_à
y2
, c⁄° uöt8_t* 
b2
){

1362 
öt16_t
 
w1
 = 
	`pgm_ªad_byã
(
b1
);

1363 
öt16_t
 
h1
 = 
	`pgm_ªad_byã
(
b1
 + 1);

1364 
öt16_t
 
w2
 = 
	`pgm_ªad_byã
(
b2
);

1365 
öt16_t
 
h2
 = 
	`pgm_ªad_byã
(
b2
 + 1);

1367 if(
	`cﬁlideRe˘Re˘
(
x1
, 
y1
, 
w1
, 
h1
, 
x2
, 
y2
, 
w2
, 
h2
Ë=
Ál£
){

1368  
Ál£
;

1371 
öt16_t
 
xmö
 = (
x1
>=
x2
)? 0 : x2-x1;

1372 
öt16_t
 
ymö
 = (
y1
>=
y2
)? 0 : y2-y1;

1373 
öt16_t
 
xmax
 = (
x1
+
w1
>=
x2
+
w2
)? x2+w2-x1 : w1;

1374 
öt16_t
 
ymax
 = (
y1
+
h1
>=
y2
+
h2
)? y2+h2-y1 : h1;

1375 
uöt8_t
 
y
 = 
ymö
; y < 
ymax
; y++){

1376 
uöt8_t
 
x
 = 
xmö
; x < 
xmax
; x++){

1377 if(
di•œy
.
	`gëBôm≠Pixñ
(
b1
, 
x
, 
y
Ë&& di•œy.gëBôm≠Pixñ(
b2
, 
x1
+x-
x2
, 
y1
+y-
y2
)){

1378  
åue
;

1382  
Ál£
;

1383 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoCore.h

37 #i‚de‡
POKITTOCORE_H


38 
	#POKITTOCORE_H


	)

40 
	~<°döt.h
>

41 
	~<m©h.h
>

42 #i‚de‡
POK_SIM


43 
	~"pwmout_≠i.h
"

44 
	~"HWBuâ⁄s.h
"

46 
	~"PokôtoSimuœt‹.h
"

48 #i‡
POK_USE_CONSOLE
 > 0

49 
	~"PokôtoC⁄sﬁe.h
"

51 #i‡
POK_ENABLE_SD
 > 0

52 
	~"PokôtoDisk.h
"

55 
	~"PokôtoF⁄ts.h
"

56 
	~"PokôtoPÆëãs.h
"

57 
	~"PokôtoDi•œy.h
"

58 
	~"PokôtoBuâ⁄s.h
"

59 
	~"PokôtoB©ãry.h
"

60 
	~"PokôtoBacklight.h
"

61 
	~"PokôtoSound.h
"

62 
	~"PokôtoFakóvr.h
"

64 
	#PALETTE_SIZE
 256

	)

65 
	#PI
 3.141592741f

	)

68 #i‡
PROJ_GAMEBUINO
 > 0

69 
£tup
();

70 
lo›
();

73 
uöt32_t
* 
±imî
;

75 
«me•a˚
 
	gPokôto
 {

100 ˛as†
	cC‹e


102 
	gpublic
:

105 
C‹e
();

108 
Backlight
 
	gbacklight
;

110 
Buâ⁄s
 
	gbuâ⁄s
;

112 
B©ãry
 
	gb©ãry
;

114 
Sound
 
	gsound
;

116 
Di•œy
 
	gdi•œy
;

119 
	gpublic
:

121 
begö
();

123 
öô
();

125 
öô
(
uöt8_t
);

127 
boﬁ
 
isRu¬ög
();

129 
quô
();

132 
boﬁ
 
	grun_°©e
;

134 
	gpublic
:

137 
öôDi•œy
();

139 
öôR™dom
();

141 
öôGPIO
();

143 
öôLCD
();

145 
öôAudio
();

149 
	gpublic
:

151 
öôBacklight
();

153 
	g¥iv©e
:

155 #i‚de‡
POK_SIM


156 
pwmout_t
 
backlighçwm
;

160 
	gpublic
:

162 
öôClock
();

164 
uöt32_t
 
gëTime
();

166 
waô
(
uöt16_t
);

168 
uöt32_t
 
	gÂs_cou¡î
;

169 
boﬁ
 
	gÂs_cou¡î_upd©ed
;

170 
	g¥iv©e
:

172 
uöt32_t
 
ª‰eshtime
;

175 
	gpublic
:

177 
showLogo
();

178 
showW¨nög
();

179 
£tVﬁLimô
();

182 
	gpublic
:

183 
öôBuâ⁄s
();

184 
pﬁlBuâ⁄s
();

185 
uöt8_t
 
À·Bä
();

186 
uöt8_t
 
rightBä
();

187 
uöt8_t
 
upBä
();

188 
uöt8_t
 
downBä
();

189 
uöt8_t
 
aBä
();

190 
uöt8_t
 
bBä
();

191 
uöt8_t
 
cBä
();

192 
uöt8_t
 
À·Hñd
();

193 
uöt8_t
 
rightHñd
();

194 
uöt8_t
 
upHñd
();

195 
uöt8_t
 
downHñd
();

196 
uöt8_t
 
aHñd
();

197 
uöt8_t
 
bHñd
();

198 
uöt8_t
 
cHñd
();

200 
uöt8_t
 
À·Rñó£d
();

201 
uöt8_t
 
rightRñó£d
();

202 
uöt8_t
 
upRñó£d
();

203 
uöt8_t
 
downRñó£d
();

204 
uöt8_t
 
aRñó£d
();

205 
uöt8_t
 
bRñó£d
();

206 
uöt8_t
 
cRñó£d
();

209 
uöt8_t
 
ampIsOn
();

210 
ampE«bÀ
(
uöt8_t
);

211 
uöt8_t
 
	gsoundbyã
;

214 
	gpublic
:

215 
ªadSëtögs
();

216 
tôÀS¸ìn
(c⁄° * 
«me
, c⁄° 
uöt8_t
 *
logo
);

217 
tôÀS¸ìn
(c⁄° * 
«me
);

218 
tôÀS¸ìn
(c⁄° 
uöt8_t
* 
logo
);

219 
tôÀS¸ìn
();

220 
boﬁ
 
upd©e
(boﬁ 
u£Dúe˘Mode
=
Ál£
, 
uöt8_t
 
updRe˘X
=0, uöt8_à
updRe˘Y
=0, uöt8_à
updRe˘W
=
LCDWIDTH
, uöt8_à
updRe˘H
=
LCDHEIGHT
);

221 
uöt32_t
 
	g‰ameCou¡
;

222 
öt8_t
 
míu
(c⁄° * c⁄°* 
ôems
, 
uöt8_t
 
Àngth
);

223 * 
fûemíu
(*);

224 * 
fûemíu
();

225 
keybﬂrd
(* 
ãxt
, 
uöt8_t
 
Àngth
);

226 
p›up
(c⁄° * 
ãxt
, 
uöt8_t
 
duøti⁄
);

227 
£tFømeR©e
(
uöt8_t
 
Âs
);

228 
pickR™domSìd
();

230 
uöt8_t
 
gëCpuLﬂd
();

231 
uöt16_t
 
gëFªeRam
();

233 
boﬁ
 
cﬁlidePoötRe˘
(
öt16_t
 
x1
, i¡16_à
y1
 ,öt16_à
x2
 ,öt16_à
y2
, i¡16_à
w
, i¡16_à
h
);

234 
boﬁ
 
cﬁlideRe˘Re˘
(
öt16_t
 
x1
, i¡16_à
y1
, i¡16_à
w1
, i¡16_à
h1
 ,öt16_à
x2
 ,öt16_à
y2
, i¡16_à
w2
, i¡16_à
h2
);

235 
boﬁ
 
cﬁlideBôm≠Bôm≠
(
öt16_t
 
x1
, i¡16_à
y1
, c⁄° 
uöt8_t
* 
b1
, i¡16_à
x2
, i¡16_à
y2
, c⁄° uöt8_t* 
b2
);

237 
	g¥iv©e
:

238 
uöt8_t
 
timePîFøme
;

239 
uöt32_t
 
	g√xtFømeMûlis
;

240 
upd©eP›up
();

241 c⁄° * 
	gp›upText
;

242 
uöt8_t
 
	gp›upTimeLe·
;

243 
di•œyB©ãry
();

244 
uöt16_t
 
	g‰ameDuøti⁄Mi¸os
;

245 
uöt32_t
 
	g‰ameSèπMi¸os
, 
	g‰ameEndMi¸os
;

246 
uöt8_t
 
	g°¨tMíuTimî
;

247 
upd©eLﬂdî
(
uöt32_t
,uint32_t);

248 
uöt32_t
 
	gÂs_ª‰eshtime
;

249 
uöt32_t
 
	gÂs_‰ameCou¡
;

251 
	gpublic
:

252 
uöt8_t
 
vﬁb¨_visibÀ
;

253 
døwvﬁb¨
(,,, 
boﬁ
);

254 
askLﬂdî
();

255 
jumpToLﬂdî
();

259 
C‹e
 
c‹e
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoDisk.cpp

21 
	~"Pokôto.h
"

23 
	#SD_MOSI_PORT
 0

	)

24 
	#SD_MISO_PORT
 0

	)

25 
	#SD_SCK_PORT
 0

	)

26 
	#SD_CS_PORT
 0

	)

27 
	#SD_MOSI_PIN
 9

	)

28 
	#SD_MISO_PIN
 8

	)

29 
	#SD_SCK_PIN
 6

	)

30 
	#SD_CS_PIN
 7

	)

32 #i‡
POK_ENABLE_SD
 > 0

33 
	gPFFS
::
BYTE
 
ªs
;

34 
	gPFFS
::
FATFS
 
fs
;

35 
	gPFFS
::
FATDIR
 
dú
;

36 
	gPFFS
::
FILINFO
 
‚o
;

40 
boﬁ
 
	gdú›íed
=
Ál£
;

42 
	#SPEAKER
 3

	)

44 
	#SONGLENGTH
 0x1BFBCD

45 
	#FILESIZE
 0x1BFBCD

	)

47 
uöt8_t
 
	gfûemode
 = 
FILE_MODE_UNINITIALIZED
;

48 
	gcuºítfûe
[15];

50 
SPI
 
devi˚
(
CONNECT_MOSI
,
CONNECT_MISO
,
CONNECT_SCK
);

53 c⁄° *
	$gë_fûíame_ext
(c⁄° *
fûíame
) {

54 c⁄° *
dŸ
 = 
	`°ºchr
(
fûíame
, '.');

55 if(!
dŸ
 || dŸ =
fûíame
)  "";

56  
dŸ
 + 1;

57 
	}
}

59 
__©åibuã__
((
£˘i⁄
(".SD_Code"))Ë
	$öôSDGPIO
() {

60 
LPC_GPIO_PORT
->
DIR
[
SD_MOSI_PORT
] |(1 << 
SD_MOSI_PIN
 );

61 
LPC_GPIO_PORT
->
DIR
[
SD_MISO_PORT
] |(1 << 
SD_MISO_PIN
 );

62 
LPC_GPIO_PORT
->
DIR
[
SD_SCK_PORT
] |(1 << 
SD_SCK_PIN
 );

63 
LPC_GPIO_PORT
->
DIR
[
SD_CS_PORT
] |(1 << 
SD_CS_PIN
 );

64 
	}
}

66 
__©åibuã__
((
£˘i⁄
(".SD_Code"))Ë
	$pokInôSD
() {

67 
	`öôSDGPIO
();

68 
ªs
 = 
PFFS
::
	`disk_öôülize
();

70 
ªs
 = (
	`pf_mou¡
(&
fs
));

71 
ªs
 = 
	`pf_›ídú
(&
dú
,"");

72 i‡(
ªs
Ë
dú›íed
=
Ál£
;

73 
dú›íed
=
åue
;

74  
ªs
;

75 
	}
}

78 
	$em±yF«me
() {

79 
i
=0; i<13; i++Ë
‚o
.
‚ame
[i]=
NULL
;

80 
	}
}

84 * 
	$gëFú°DúE¡ry
() {

85 
ªs
=0;

86 i‡(!
dú›íed
) {

87 
	`pokInôSD
();

89 
ªs
 = 
	`pf_›ídú
(&
dú
,"");

90 
	`em±yF«me
();

91 
ªs
 = 
	`pf_ªaddú
(&
dú
,&
‚o
);

92 i‡(
ªs
)  0;

93 
ªs
==0) {

94 i‡((
‚o
.
Áârib
 & 0x02)==0) {

95 i‡(
‚o
.
Áârib
 & 0x10) {

96 
‚o
.
‚ame
[8]='.';

97 
‚o
.
‚ame
[9]='D';

98 
‚o
.
‚ame
[10]='I';

99 
‚o
.
‚ame
[11]='R';

100 
‚o
.
‚ame
[12]='\0';

102  
‚o
.
‚ame
;

104 
	`em±yF«me
();

105 
ªs
 = 
	`pf_ªaddú
(&
dú
,&
‚o
);

106 i‡(
ªs
==0 && 
dú
.
ödex
==0) ;

109 
	}
}

111 * 
	$gëNextDúE¡ry
() {

112 i‡(!
dú›íed
Ë
	`pokInôSD
();

113 
	`em±yF«me
();

114 
ªs
 = 
	`pf_ªaddú
(&
dú
,&
‚o
);

115 i‡(
ªs
==0) {

116 
‚o
.
Áârib
 & 0x02 && !
ªs
Ë{
	`em±yF«me
();Ñe†
	`pf_ªaddú
(&
dú
,&fno);}

117 i‡(
‚o
.
Áârib
 & 0x10) {

118 
a
=12;

119 
a
) {

120 
‚o
.
‚ame
[
a
] = fno.fname[a-1];

121 
a
--;

123 i‡(
‚o
.
‚ame
[0]) {

124 
‚o
.
‚ame
[0]='/';

125 
a
=0;

126 
‚o
.
‚ame
[
a
])á++;

127 
‚o
.
‚ame
[
a
]='/';

136  
‚o
.
‚ame
;

138  
NULL
;

139 
	}
}

141 * 
	$gëNextFûe
 (* 
ext
){

143 i‡(!
dú›íed
Ë
	`pokInôSD
();

144 
a
=1;

145 
	`em±yF«me
();

146 
ªs
 = 
	`pf_ªaddú
(&
dú
,&
‚o
);

147 
ªs
==0 || 
a
) {

148 i‡(
dú
.
ödex
==0)  0;

149 
a
 = 
	`°rcmp
((c⁄° *)
	`gë_fûíame_ext
(
‚o
.
‚ame
),(c⁄° *)
ext
);

150 i‡(
	`°rcmp
(
ext
,"")==0 && (
‚o
.
Áârib
 & 0x10Ë=0Ë
a
=0;

151 i‡(
a
 =0 && (
‚o
.
Áârib
 & 0x10Ë=0Ë fno.
‚ame
;

152 i‡(
‚o
.
‚ame
[0]==
NULL
)  NULL;

154 
	`em±yF«me
();

155 
ªs
 = 
	`pf_ªaddú
(&
dú
,&
‚o
);

158 
	}
}

161 * 
	$gëNextFûe
() {

162  
	`gëNextFûe
("");

163 
	}
}

165 * 
	$gëFú°Fûe
(* 
ext
) {

166 
ªs
=0;

167 i‡(!
dú›íed
) {

168 
	`pokInôSD
();

170 
ªs
 = 
	`pf_›ídú
(&
dú
,"");

171 
	`em±yF«me
();

172 
ªs
 = 
	`pf_ªaddú
(&
dú
,&
‚o
);

173 i‡(
ªs
)  0;

174 
ªs
==0 || (
‚o
.
Áârib
 & 0x10) == 0) {

175 
a
=0;

176 
a
 = 
	`°rcmp
((c⁄° *)
	`gë_fûíame_ext
(
‚o
.
‚ame
),(c⁄° *)
ext
);

177 i‡(!
	`°rcmp
(
ext
,"")Ë
a
=0;

178 i‡–
a
 =0 && (
‚o
.
Áârib
 & 0x10Ë=0Ë fno.
‚ame
;

179 
	`em±yF«me
();

180 
ªs
 = 
	`pf_ªaddú
(&
dú
,&
‚o
);

181 i‡(
‚o
.
‚ame
[0]==
NULL
) ;

182 i‡(
ªs
==0 && 
dú
.
ödex
==0) ;

185 
	}
}

187 * 
	$gëFú°Fûe
() {

188  
	`gëFú°Fûe
("");

189 
	}
}

191 
	$isThisFûeO≥n
(* 
buf„r
){

192 
a
=0;

193 
a
 = 
	`°rcmp
((c⁄° *)
buf„r
,(c⁄° *)
cuºítfûe
);

194 i‡–
a
 =0 && 
fûemode
 !
FILE_MODE_FAILED
)  1;

196 
	}
}

198 
	$fûeOK
() {

199 i‡(
fûemode
 !
FILE_MODE_FAILED
)  1;

201 
	}
}

203 
uöt8_t
 
	$fûeO≥n
(* 
buf„r
, 
fmode
) {

204 
îr
;

205 i‡(
fûemode
 =
FILE_MODE_UNINITIALIZED
) {

206 
a
 = 
	`pf_mou¡
(&
fs
);

207 i‡(
a
)  1;

210 
fûemode
 = 
fmode
;

211 
îr
 = 
PFFS
::
	`pf_›í
(
buf„r
);

212 i‡(
îr
==0) {

213 
	`°r˝y
(
cuºítfûe
,(c⁄° *)
buf„r
);

217 
fûemode
 = 
FILE_MODE_FAILED
;

219 
	}
}

221 
	$fûeClo£
() {

222 
fûemode
 = 
FILE_MODE_UNINITIALIZED
;

223 
uöt8_t
 
i
=0; i<15; i++Ë
cuºítfûe
[i]=0;

224 
	}
}

226 
	$fûeGëCh¨
() {

227 
PFFS
::
BYTE
 
buff
[1];

228 
PFFS
::
WORD
 
br
;

229 
îr
 = 
PFFS
::
	`pf_ªad
(
buff
, 1, &
br
);

230  
buff
[0];

231 
	}
}

233 
	$fûePutCh¨
(
c
) {

234 
PFFS
::
WORD
 
bw
;

235 
PFFS
::
	`pf_wrôe
((c⁄° *)&
c
, 1, &
bw
);

236 
PFFS
::
	`pf_wrôe
(0, 0, &
bw
);

237 
	}
}

239 
	$fûeWrôeByãs
(
uöt8_t
 * 
b
, 
uöt16_t
 
n
) {

240 
PFFS
::
WORD
 
bw
;

241 
PFFS
::
	`pf_wrôe
((c⁄° *)&
b
, 
n
, &
bw
);

242 
PFFS
::
	`pf_wrôe
(0, 0, &
bw
);

243 
	}
}

245 
uöt16_t
 
	$fûeRódByãs
(
uöt8_t
 * 
b
, 
uöt16_t
 
n
) {

246 
PFFS
::
WORD
 
br
;

247 
PFFS
::
	`pf_ªad
(
b
, 
n
, &
br
);

248  
br
;

249 
	}
}

251 
	$fûeSìkAbsﬁuã
(
n
) {

252 
ªs
 = 
PFFS
::
	`pf_l£ek
(
n
);

253 
	}
}

255 
	$fûeSìkRñ©ive
(
n
) {

256 i‡(
n
<0Ëi‡(
fs
.
Âå
 < -n)Ç=-fs.fptr;

257 i‡(
n
>0Ëi‡(
fs
.
Âå
+¿> fs.
fsize
)Ç=fs.fsize-fs.fptr;

258 
ªs
 = 
PFFS
::
	`pf_l£ek
(
fs
.
Âå
 + 
n
);

259 
	}
}

261 
	$fûeRewöd
() {

262 
ªs
 = 
PFFS
::
	`pf_l£ek
(0);

263 
	}
}

265 
	$fûeEnd
() {

266 
ªs
 = 
PFFS
::
	`pf_l£ek
(
fs
.
fsize
);

267 
	}
}

269 
	$fûeGëPosôi⁄
() {

270  
fs
.
Âå
;

271 
	}
}

273 
uöt8_t
 
	$fûePìk
(
n
) {

274 
PFFS
::
	`pf_l£ek
(
n
);

275  
	`fûeGëCh¨
();

276 
	}
}

278 
	$fûePoke
(
n
, 
uöt8_t
 
c
) {

279 
PFFS
::
	`pf_l£ek
(
n
);

280 
	`fûePutCh¨
(
c
);

281 
	}
}

283 
	$fûeRódLöe
(* 
de°ö©i⁄
, 
maxch¨s
) {

284 
n
=0;

285 
c
=1;

286 
löebuf
[80];

287 
	`fûeRódByãs
((
uöt8_t
*)
löebuf
,80);

288 
ödex
=0;

289 
c
!=
NULL
) {

290 
c
 = 
löebuf
[
ödex
++];

291 i‡(
n
 == 0) {

292 
c
 ='\n' || c ='\r'Ë¯
löebuf
[
ödex
++];

294 
n
++;

295 i‡(
c
=='\n' || c=='\r' || 
n
==
maxch¨s
-1Ëc=
NULL
;

296 *
de°ö©i⁄
++ = 
c
;

298 
	`fûeSìkRñ©ive
(-80+
ödex
);

299  
n
;

300 
	}
}

302 
	$dúO≥n
() {

303  
PFFS
::
	`pf_›ídú
(&
dú
,"");

304 
	}
}

306 
	$dúUp
() {

309 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoDisk.h

38 #i‚de‡
POKITTO_DISK_H


39 
	#POKITTO_DISK_H


	)

41 #i‚de‡
POK_SIM


44 
	~"diskio.h
"

45 
	~"pff.h
"

46 
	~"c⁄√˘.h
"

50 
PFFS
::
BYTE
 
ªs
;

51 
PFFS
::
FATFS
 
fs
;

52 
PFFS
::
FATDIR
 
dú
;

53 
PFFS
::
FILINFO
 
‚o
;

55 
	~"mbed.h
"

57 
SPI
 
devi˚
;

58 
DigôÆOut
 
mmccs
;

65 
	#CLR_SD_CS
 
LPC_GPIO_PORT
->
CLR
[0] = (1 << 7)

	)

66 
	#SET_SD_CS
 
LPC_GPIO_PORT
->
SET
[0] = (1 << 7)

	)

67 
	#GET_SD_CS
 
LPC_GPIO_PORT
->
PIN
[0] & (1 << 7)

	)

73 
	~<°döt.h
>

77 
pokInôSD
();

80 
	#FILE_MODE_APPEND
 0x1

	)

81 
	#FILE_MODE_OVERWRITE
 0

	)

82 
	#FILE_MODE_READONLY
 0x2

	)

83 
	#FILE_MODE_READWRITE
 0

	)

84 
	#FILE_MODE_BINARY
 0x4

	)

85 
	#FILE_MODE_ASCII
 0

	)

86 
	#FILE_MODE_FAILED
 0x8

	)

87 
	#FILE_MODE_UNINITIALIZED
 0x10

	)

89 
uöt8_t
 
fûeO≥n
(*, );

90 
fûeClo£
();

91 
fûeGëCh¨
();

92 
fûePutCh¨
();

93 
fûeWrôeByãs
(
uöt8_t
 *, 
uöt16_t
);

94 
uöt16_t
 
fûeRódByãs
(
uöt8_t
 *, uint16_t);

95 
fûeSìkAbsﬁuã
();

96 
fûeSìkRñ©ive
();

97 
fûeRewöd
();

98 
fûeEnd
();

99 
fûeGëPosôi⁄
();

100 
	#fûeSëPosôi⁄
(
n
Ë(
	`fûeSìkAbsﬁuã
“))

	)

101 
uöt8_t
 
fûePìk
();

102 
fûePoke
(, 
uöt8_t
);

103 
fûeRódLöe
(*,);

104 * 
gëCuºítFûeName
 ();

105 * 
gëNextFûe
 (*);

106 * 
gëNextFûe
 ();

107 * 
gëFú°Fûe
(*);

108 * 
gëFú°Fûe
();

109 * 
gëFú°DúE¡ry
();

110 * 
gëNextDúE¡ry
();

111 
isThisFûeO≥n
(*);

112 
fûeOK
();

113 
dúO≥n
();

114 
dúUp
();

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoDisplay.cpp

67 
	~"PokôtoDi•œy.h
"

68 
	~"Pokôto_£âögs.h
"

69 
	~"GBcom∑tibûôy.h
"

70 
	~"PokôtoC‹e.h
"

71 
	~"PokôtoSound.h
"

72 
	~<°dio.h
>

73 
	~<°rög.h
>

74 #ifde‡
DISABLEAVRMIN


75 
	~<Æg‹ôhm
>

76 
usög
 
	g°d
::
mö
;

77 
usög
 
	g°d
::
max
;

80 #i‚de‡
POK_SIM


81 
	~"HWLCD.h
"

83 
	~"SimLCD.h
"

86 "C" 
CheckSèck
();

87 
_ebss
[];

88 
_vSèckT›
[];

90 
	gPokôto
::
C‹e
 
c‹e
;

91 
	gPokôto
::
Sound
 
_pdsound
;

93 
usög
 
«me•a˚
 
	gPokôto
;

97 
uöt8_t
* 
	gDi•œy
::
m_s¸buf
;

98 
uöt8_t
* 
	gDi•œy
::
m_tûe£t
;

99 
uöt8_t
* 
	gDi•œy
::
m_tûebuf
;

100 
uöt8_t
* 
	gDi•œy
::
m_tûecﬁ‹buf
;

101 
uöt8_t
 
	gDi•œy
::
m_mode
, Di•œy::
m_cﬁ‹dïth
;

102 
uöt8_t
 
	gDi•œy
::
∑lOff£t
;

103 
S¥ôeInfo
 
	gDi•œy
::
m_•rôes
[
SPRITE_COUNT
];

104 
uöt8_t
 
	gDi•œy
::
f⁄tSize
=1;

105 
öt16_t
 
	gDi•œy
::
curs‹X
,Di•œy::
curs‹Y
;

106 
uöt16_t
 
	gDi•œy
::
m_w
,Di•œy::
m_h
;

107 
uöt8_t
 
	gDi•œy
::
f⁄tWidth
, Di•œy::
f⁄tHeight
;

108 
boﬁ
 
	gDi•œy
::
ãxtWøp
=
åue
;

110 
uöt8_t
 
	gDi•œy
::
≥rsi°í˚
 = 0;

111 
uöt16_t
 
	gDi•œy
::
cﬁ‹
 = 1;

112 
uöt16_t
 
	gDi•œy
::
bgcﬁ‹
 = 0;

113 
uöt16_t
 
	gDi•œy
::
övisibÀcﬁ‹
 = 17;

114 
uöt16_t
 
	gDi•œy
::
dúe˘cﬁ‹
=0xFFFF;

115 
uöt16_t
 
	gDi•œy
::
dúe˘bgcﬁ‹
=0x0;

116 
boﬁ
 
	gDi•œy
::
dúe˘ãxåŸ©ed
=
Ál£
;

117 
öt16_t
 
	gDi•œy
::
˛ùX
 = 0;

118 
öt16_t
 
	gDi•œy
::
˛ùY
 = 0;

119 
öt16_t
 
	gDi•œy
::
˛ùW
 = 
LCDWIDTH
;

120 
öt16_t
 
	gDi•œy
::
˛ùH
 = 
LCDHEIGHT
;

122 
uöt16_t
* 
	gDi•œy
::
∑Àâïå
;

123 
uöt16_t
 
	gDi•œy
::
∑Àâe
[
PALETTE_SIZE
];

124 c⁄° * 
	gDi•œy
::
f⁄t
;

125 
öt8_t
 
	gDi•œy
::
adju°Ch¨Sãp
 = 1;

126 
öt8_t
 
	gDi•œy
::
adju°LöeSãp
 = 1;

127 
boﬁ
 
	gDi•œy
::
fixedWidthF⁄t
 = 
Ál£
;

133 
uöt8_t
 
	gDi•œy
::
bµ
 = 
POK_COLORDEPTH
;

134 #i‚de‡
POK_TILEDMODE


135 #i‡(
POK_SCREENMODE
 =
MODE_HI_MONOCHROME
)

136 
uöt8_t
 
	gDi•œy
::
width
 = 
POK_LCD_W
;

137 
uöt8_t
 
	gDi•œy
::
height
 = 
POK_LCD_H
;

138 
uöt8_t
 
	gDi•œy
::
s¸ìnbuf„r
[((
POK_LCD_H
+1)*
POK_LCD_W
)*
POK_COLORDEPTH
/8];

139 #ñi‡(
POK_SCREENMODE
 =
MODE_HI_4COLOR
)

140 
uöt8_t
 
	gDi•œy
::
width
 = 
POK_LCD_W
;

141 
uöt8_t
 
	gDi•œy
::
height
 = 
POK_LCD_H
;

142 
uöt8_t
 
__©åibuã__
((
£˘i⁄
 (".bss"))Ë
	gDi•œy
::
s¸ìnbuf„r
[((
POK_LCD_H
)*
POK_LCD_W
)/4];

143 #ñi‡(
POK_SCREENMODE
 =
MODE_FAST_16COLOR
)

144 
uöt8_t
 
	gDi•œy
::
width
 = 
POK_LCD_W
/2;

145 
uöt8_t
 
	gDi•œy
::
height
 = 
POK_LCD_H
/2;

146 
uöt8_t
 
	gDi•œy
::
s¸ìnbuf„r
[(((
POK_LCD_H
/2)+1)*
POK_LCD_W
/2)*
POK_COLORDEPTH
/8];

147 #ñi‡(
POK_SCREENMODE
 =
MODE_HI_16COLOR
)

148 
uöt8_t
 
	gDi•œy
::
width
 = 
POK_LCD_W
;

149 
uöt8_t
 
	gDi•œy
::
height
 = 
POK_LCD_H
;

150 
uöt8_t
 
	gDi•œy
::
s¸ìnbuf„r
[
POK_LCD_H
*
POK_LCD_W
/2];

151 #ñi‡(
POK_SCREENMODE
 =
MODE_LAMENES
)

152 
uöt8_t
 
	gDi•œy
::
width
 = 128;

153 
uöt8_t
 
	gDi•œy
::
height
 = 120;

154 
uöt8_t
 
	gDi•œy
::
s¸ìnbuf„r
[((121)*128)*
POK_COLORDEPTH
/8];

155 #ñi‡(
POK_SCREENMODE
 =
MODE_GAMEBOY
)

156 
uöt8_t
 
	gDi•œy
::
width
 = 160;

157 
uöt8_t
 
	gDi•œy
::
height
 = 144;

158 
uöt8_t
 
	gDi•œy
::
s¸ìnbuf„r
[160*144/4];

159 #ñi‡(
POK_SCREENMODE
 =
MODE14
)

160 
uöt8_t
 
	gDi•œy
::
width
 = 220;

161 
uöt8_t
 
	gDi•œy
::
height
 = 176;

162 
uöt8_t
 
	gDi•œy
::
s¸ìnbuf„r
[14520];

163 #ñi‡(
POK_SCREENMODE
 =
MODE13
)

164 
uöt8_t
 
	gDi•œy
::
width
 = 110;

165 
uöt8_t
 
	gDi•œy
::
height
 = 88;

166 
uöt8_t
 
	gDi•œy
::
s¸ìnbuf„r
[110*88];

167 #ñi‡(
POK_SCREENMODE
 =
MODE15
)

168 
uöt8_t
 
	gDi•œy
::
width
 = 220;

169 
uöt8_t
 
	gDi•œy
::
height
 = 176;

170 
uöt8_t
 
	gDi•œy
::
s¸ìnbuf„r
[0x4BA0];

172 
uöt8_t
 
	gDi•œy
::
width
 = 84;

173 
uöt8_t
 
	gDi•œy
::
height
 = 48;

174 
uöt8_t
 
	gDi•œy
::
s¸ìnbuf„r
[128*64];

177 #i‡(
POK_SCREENMODE
 =
MODE_TILED_1BIT
)

178 
uöt8_t
 
	gDi•œy
::
width
 = 
POK_LCD_W
;

179 
uöt8_t
 
	gDi•œy
::
height
 = 
POK_LCD_H
;

180 
uöt8_t
 
	gDi•œy
::
s¸ìnbuf„r
[0];

182 
uöt8_t
 
	gDi•œy
::
width
 = 
POK_LCD_W
;

183 
uöt8_t
 
	gDi•œy
::
height
 = 
POK_LCD_H
;

184 
uöt8_t
 
	gDi•œy
::
s¸ìnbuf„r
[0];

189 
	#RLE_ESC_EOL
 0

	)

190 
	#RLE_ESC_EOB
 1

	)

191 
	#RLE_ESC_OFFSET
 2

	)

193 
	gDi•œy
::
	$Di•œy
() {

194 
m_s¸buf
 = 
s¸ìnbuf„r
;

195 
	`£tDeÁu…PÆëã
();

196 
m_mode
 = 1;

197 
m_w
 = 
POK_LCD_W
;

198 
m_h
 = 
POK_LCD_H
;

199 
	`£tF⁄t
(
DEFAULT_FONT
);

200 
övisibÀcﬁ‹
=17;

201 
bgcﬁ‹
=0;

202 i‡(
POK_COLORDEPTH
Ë
m_cﬁ‹dïth
 = POK_COLORDEPTH;

203 
m_cﬁ‹dïth
 = 4;

204 #i‡
POK_GAMEBUINO_SUPPORT


205 
	`£tCﬁ‹Dïth
(1);

209 
m_tûecﬁ‹buf
 = 
NULL
;

210 
uöt8_t
 
s
 = 0; s < 
SPRITE_COUNT
; s++Ë
m_•rôes
[s].
bôm≠D©a
 = 
NULL
;

211 
	}
}

213 
uöt16_t
 
	gDi•œy
::
	$gëWidth
() {

214  
width
;

215 
	}
}

217 
uöt8_t
 
	gDi•œy
::
	$gëNumbîOfCﬁ‹s
() {

218  1<<
POK_COLORDEPTH
;

219 
	}
}

221 
uöt16_t
 
	gDi•œy
::
	$gëHeight
() {

222  
height
;

223 
	}
}

225 
uöt8_t
 
	gDi•œy
::
	$gëCﬁ‹Dïth
() {

226  
m_cﬁ‹dïth
;

227 
	}
}

229 
	gDi•œy
::
	$£tCﬁ‹Dïth
(
uöt8_t
 
v
) {

230 i‡(
v
 > 
POK_COLORDEPTH
) v=POK_COLORDEPTH;

231 
m_cﬁ‹dïth
 = 
v
;

232 
	}
}

234 
	gDi•œy
::
	$˛órLCD
() {

235 
	`lcdFûlSurÁ˚
(0);

236 
	`£tCurs‹
(0,0);

237 
	}
}

239 
	gDi•œy
::
	$fûlLCD
(
uöt16_t
 
c
) {

240 
	`lcdFûlSurÁ˚
(
c
);

241 
	}
}

243 
	gDi•œy
::
	$dúe˘Pixñ
(
öt16_t
 
x
, i¡16_à
y
, 
uöt16_t
 
cﬁ‹
) {

244 i‡((
övisibÀcﬁ‹
 < 
PALETTE_SIZE
Ë&& (övisibÀcﬁ‹ < 16Ë&& (
cﬁ‹
 =
∑Àâe
[invisiblecolor])) ;

245 
	`lcdPixñ
(
x
,
y
,
cﬁ‹
);

246 
	}
}

248 
	gDi•œy
::
	$dúe˘Tûe
(
öt16_t
 
x
, i¡16_à
y
, i¡16_à
x2
, i¡16_à
y2
, 
uöt16_t
* 
gfx
) {

249 
	`lcdTûe
(
x
,
y
,
x2
,
y2
,
gfx
);

250 
	}
}

252 
	gDi•œy
::
	$dúe˘Re˘™gÀ
(
öt16_t
 
x
, i¡16_à
y
,öt16_à
x2
, i¡16_à
y2
, 
uöt16_t
 
cﬁ‹
) {

253 
	`lcdRe˘™gÀ
(
x
,
y
,
x2
,
y2
,
cﬁ‹
);

254 
	}
}

256 
	gDi•œy
::
	$begö
() {

257 
	`lcdInô
();

258 
	}
}

260 
	gDi•œy
::
	$£tCurs‹
(
öt16_t
 
x
,öt16_à
y
) {

261 
curs‹X
 = 
x
;

262 
curs‹Y
 = 
y
;

263 
	}
}

276 
	gDi•œy
::
	$upd©e
(
boﬁ
 
u£Dúe˘DøwMode
, 
uöt8_t
 
updRe˘X
, uöt8_à
updRe˘Y
, uöt8_à
updRe˘W
, uöt8_à
updRe˘H
) {

278 #i‡
POK_SCREENMODE
 =
MODE_HI_4COLOR


280 i‡(
m_•rôes
[0].
bôm≠D©a
 !
NULL
)

281 
	`lcdRe‰eshMode1S¥
(
m_s¸buf
, 
updRe˘X
, 
updRe˘Y
, 
updRe˘W
, 
updRe˘H
, 
∑Àâïå
, 
m_•rôes
, 
u£Dúe˘DøwMode
);

282 i‡(!
u£Dúe˘DøwMode
)

283 
	`lcdRe‰eshMode1
(
m_s¸buf
, 
updRe˘X
, 
updRe˘Y
, 
updRe˘W
, 
updRe˘H
, 
∑Àâïå
);

287 i‡(! 
u£Dúe˘DøwMode
) {

288 #i‡
POK_SCREENMODE
 =
MODE13


289 
	`lcdRe‰eshMode13
(
m_s¸buf
, 
∑Àâïå
, 
∑lOff£t
);

292 #i‡
POK_SCREENMODE
 =
MODE_GAMEBOY


293 
	`lcdRe‰eshModeGBC
(
m_s¸buf
, 
∑Àâïå
);

296 #i‡
POK_SCREENMODE
 =
MODE_HI_16COLOR


297 
	`lcdRe‰eshMode3
(
m_s¸buf
, 
∑Àâïå
);

300 #i‡
POK_SCREENMODE
 =
MODE_FAST_16COLOR


301 
	`lcdRe‰eshMode2
(
m_s¸buf
, 
∑Àâïå
);

304 #i‡
POK_SCREENMODE
 =
MODE_GAMEBUINO_16COLOR


305 
	`lcdRe‰eshGB
(
m_s¸buf
, 
∑Àâïå
);

308 #i‡
POK_SCREENMODE
 =
MODE_ARDUBOY_16COLOR


309 
	`lcdRe‰eshAB
(
m_s¸buf
, 
∑Àâïå
);

312 #i‡
POK_SCREENMODE
 =
MODE14


313 
	`lcdRe‰eshMode14
(
m_s¸buf
, 
∑Àâïå
);

316 #i‡
POK_SCREENMODE
 =
MODE15


317 
	`lcdRe‰eshMode15
(
∑Àâïå
, 
m_s¸buf
);

320 #i‡
POK_SCREENMODE
 =
MODE_TILED_1BIT


321 
	`lcdRe‰eshT1
(
m_tûebuf
, 
m_tûecﬁ‹buf
, 
m_tûe£t
, 
∑Àâïå
);

325 i‡(!
≥rsi°í˚
Ë
	`˛ór
();

328 #i‡
POK_SHOW_VOLUME
 > 0

329 i‡(
c‹e
.
vﬁb¨_visibÀ
) {

330 
c‹e
.
	`døwvﬁb¨
(4,20,
_pdsound
.
	`gëVﬁume
(),
åue
);

331 
c‹e
.
vﬁb¨_visibÀ
--;

336 #ifde‡
PROJ_SHOW_FPS_COUNTER


338 if(
c‹e
.
Âs_cou¡î_upd©ed
) {

341 
boﬁ
 
ãmp
 = 
	`isDúe˘PrötögE«bÀd
();

342 
uöt16_t
 
ﬁdcﬁ
 = 
dúe˘cﬁ‹
;

343 
uöt16_t
 
ﬁdövisibÀcﬁ‹
 = 
övisibÀcﬁ‹
;

344 
uöt16_t
 
ﬁdbgcﬁ
 = 
dúe˘bgcﬁ‹
;

345 
boﬁ
 
ﬁddúe˘ãxåŸ©ed
 = 
dúe˘ãxåŸ©ed
;

346 
öt8_t
 
ﬁdadju°Ch¨Sãp
 = 
adju°Ch¨Sãp
;

347 c⁄° * 
ﬁdF⁄t
 = 
f⁄t
;

350 
°r
[16];

351 
	`•rötf
(
°r
,"FPS:%d ", ()
c‹e
.
Âs_cou¡î
);

352 
dúe˘cﬁ‹
 = 
COLOR_WHITE
;

353 
övisibÀcﬁ‹
 = 
COLOR_BLACK
;

354 
dúe˘bgcﬁ‹
 = 0x0001;

355 
dúe˘ãxåŸ©ed
 = 
åue
;

356 
adju°Ch¨Sãp
 = 0;

357 
	`£tF⁄t
(
f⁄tC64
);

358 
	`íabÀDúe˘Prötög
(
åue
);

359 
	`¥öt
(0,0, 
°r
);

362 
	`íabÀDúe˘Prötög
(
ãmp
);

363 
dúe˘cﬁ‹
 = 
ﬁdcﬁ
;

364 
övisibÀcﬁ‹
 = 
ﬁdövisibÀcﬁ‹
;

365 
dúe˘bgcﬁ‹
 = 
ﬁdbgcﬁ
;

366 
dúe˘ãxåŸ©ed
 = 
ﬁddúe˘ãxåŸ©ed
;

367 
adju°Ch¨Sãp
 = 
ﬁdadju°Ch¨Sãp
;

368 
	`£tF⁄t
(
ﬁdF⁄t
);

370 
c‹e
.
Âs_cou¡î_upd©ed
 = 
Ál£
;

373 
	}
}

375 
	gDi•œy
::
	$dúe˘Bôm≠
(
öt16_t
 
x
, i¡16_à
y
, c⁄° 
uöt8_t
 *
bôm≠
, uöt8_à
dïth
, uöt8_à
sˇÀ
) {

376 
uöt8_t
 
w
 = *
bôm≠
;

377 
uöt8_t
 
h
 = *(
bôm≠
 + 1);

378 
bôm≠
 = bitmap + 2;

379 
öt16_t
 
i
, 
j
;

380 
öt8_t
 
byãNum
, 
bôNum
, 
byãWidth
 = (
w
 + 7) >> 3;

382 i‡(
dïth
 == 1) {

383 
i
 = 0; i < 
w
; i++) {

384 
byãNum
 = 
i
 / 8;

385 
bôNum
 = 
i
 % 8;

386 
j
 = 0; j < 
h
; j++) {

387 i‡(*(
bôm≠
 + 
j
 * 
byãWidth
 + 
byãNum
Ë& (0x80 >> 
bôNum
)) {

388 i‡(
sˇÀ
==1Ë
	`dúe˘Pixñ
(
x
 + 
i
, 
y
 + 
j
,
dúe˘cﬁ‹
);

390 
	`dúe˘Pixñ
(
x
 + 
i
 + i, 
y
 + 
j
 + j,
dúe˘cﬁ‹
);

391 
	`dúe˘Pixñ
(
x
 + 1 + 
i
 + i, 
y
 + 
j
 + j,
dúe˘cﬁ‹
);

392 
	`dúe˘Pixñ
(
x
 + 
i
 + i, 
y
 + 
j
 + j + 1,
dúe˘cﬁ‹
);

393 
	`dúe˘Pixñ
(
x
 + 
i
 + i + 1 , 
y
 + 
j
 + j + 1,
dúe˘cﬁ‹
);

398 } i‡(
dïth
 == 4) {

399 
j
 = 0; j < 
h
; j+=1) {

400 
i
 = 0; i < 
w
; i+=2) {

401 
uöt16_t
 
cﬁ
 = 
∑Àâïå
[*
bôm≠
>>4];

402 i‡(
sˇÀ
==2) {

403 
	`dúe˘Pixñ
(
x
 + (
i
<<1), 
y
 + (
j
<<1),
cﬁ
);

404 
	`dúe˘Pixñ
(
x
 + (
i
<<1Ë+ 1, 
y
 + (
j
<<1),
cﬁ
);

405 
	`dúe˘Pixñ
(
x
 + (
i
<<1Ë+ 1, 
y
 + (
j
<<1Ë+ 1,
cﬁ
);

406 
	`dúe˘Pixñ
(
x
 + (
i
<<1), 
y
 + (
j
<<1Ë+ 1,
cﬁ
);

407 } 
	`dúe˘Pixñ
(
x
 + 
i
, 
y
 + 
j
,
cﬁ
);

408 
cﬁ
 = 
∑Àâïå
[*
bôm≠
&0xF];

409 i‡(
sˇÀ
==2) {

410 
	`dúe˘Pixñ
(
x
 + (
i
<<1Ë+ 2, 
y
 + (
j
<<1),
cﬁ
);

411 
	`dúe˘Pixñ
(
x
 + (
i
<<1Ë+ 1 + 2, 
y
 + (
j
<<1),
cﬁ
);

412 
	`dúe˘Pixñ
(
x
 + (
i
<<1Ë+ 1 + 2, 
y
 + (
j
<<1Ë+ 1,
cﬁ
);

413 
	`dúe˘Pixñ
(
x
 + (
i
<<1Ë+ 2 , 
y
 + (
j
<<1Ë+ 1,
cﬁ
);

414 } 
	`dúe˘Pixñ
(
x
 + 
i
 + 1, 
y
 + 
j
,
cﬁ
);

415 
bôm≠
++;

420 
	}
}

422 
	gDi•œy
::
	$dúe˘Ch¨
(
öt16_t
 
x
, i¡16_à
y
, 
uöt16_t
 
ödex
){

423 c⁄° 
uöt8_t
* 
bôm≠
 = 
f⁄t
;

424 
uöt8_t
 
w
 = *
bôm≠
;

425 
uöt8_t
 
h
 = *(
bôm≠
 + 1);

426 
uöt8_t
 
hbyãs
=0, 
xåa
=1;

427 i‡(
h
==8 || h==16Ë
xåa
=0;

428 
hbyãs
=(
h
>>3)+
xåa
;

430 
bôm≠
 = bôm≠ + 4 + 
ödex
 * (
w
 * 
hbyãs
 + 1);

432 
öt8_t
 
i
, 
j
, 
numByãs
;

433 
numByãs
 = *
bôm≠
++;

435 
uöt16_t
 
bôcﬁumn
;

437 
i
 = 0; i < 
numByãs
; i++) {

438 
bôcﬁumn
 = *
bôm≠
++;

439 i‡(
hbyãs
 =2Ë
bôcﬁumn
 |(*
bôm≠
++)<<8;

440 
j
 = 0; j < 
h
; j++) {

441 i‡(
bôcﬁumn
&0x1) {

442 i‡(
f⁄tSize
==2) {

443 
	`dúe˘Pixñ
(
x
 + (
i
<<1Ë, 
y
 + (
j
<<1),
dúe˘cﬁ‹
);

444 
	`dúe˘Pixñ
(
x
 + (
i
<<1)+1, 
y
 + (
j
<<1),
dúe˘cﬁ‹
);

445 
	`dúe˘Pixñ
(
x
 + (
i
<<1Ë, 
y
 + (
j
<<1)+1,
dúe˘cﬁ‹
);

446 
	`dúe˘Pixñ
(
x
 + (
i
<<1)+1, 
y
 + (
j
<<1)+1,
dúe˘cﬁ‹
);

448 if(
dúe˘ãxåŸ©ed
Ë
	`dúe˘Pixñ
(
y
 + 
h
 - 
j
 - 1, 
x
 + 
i
,
dúe˘cﬁ‹
);

449 
	`dúe˘Pixñ
(
x
 + 
i
, 
y
 + 
j
,
dúe˘cﬁ‹
);

452 } i‡(
dúe˘bgcﬁ‹
 !
övisibÀcﬁ‹
) {

453 i‡(
f⁄tSize
==2) {

454 
	`dúe˘Pixñ
(
x
 + (
i
<<1Ë, 
y
 + (
j
<<1),
dúe˘bgcﬁ‹
);

455 
	`dúe˘Pixñ
(
x
 + (
i
<<1)+1, 
y
 + (
j
<<1),
dúe˘bgcﬁ‹
);

456 
	`dúe˘Pixñ
(
x
 + (
i
<<1Ë, 
y
 + (
j
<<1)+1,
dúe˘bgcﬁ‹
);

457 
	`dúe˘Pixñ
(
x
 + (
i
<<1)+1, 
y
 + (
j
<<1)+1,
dúe˘bgcﬁ‹
);

459 if(
dúe˘ãxåŸ©ed
Ë
	`dúe˘Pixñ
(
y
 + 
h
 - 
j
 - 1, 
x
 + 
i
,
dúe˘bgcﬁ‹
);

460 
	`dúe˘Pixñ
(
x
 + 
i
, 
y
 + 
j
,
dúe˘bgcﬁ‹
);

463 
bôcﬁumn
>>=1;

466  (
numByãs
+
adju°Ch¨Sãp
)*
f⁄tSize
;

467 
	}
}

469 
	gDi•œy
::
	$buf„rCh¨
(
öt16_t
 
x
, i¡16_à
y
, 
uöt16_t
 
ödex
){

470 c⁄° 
uöt8_t
* 
bôm≠
 = 
f⁄t
;

471 
uöt8_t
 
w
 = *
bôm≠
;

472 
uöt8_t
 
h
 = *(
bôm≠
 + 1);

473 
uöt8_t
 
hbyãs
=0, 
xåa
=1;

474 i‡(
h
==8 || h==16Ë
xåa
=0;

475 
hbyãs
=(
h
>>3)+
xåa
;

477 
bôm≠
 = bôm≠ + 4 + 
ödex
 * (
w
 * 
hbyãs
 + 1);

479 
öt8_t
 
i
, 
j
, 
numByãs
;

480 
numByãs
 = *
bôm≠
++;

482 
uöt16_t
 
bôcﬁumn
;

484 
i
 = 0; i < 
numByãs
; i++) {

485 
bôcﬁumn
 = *
bôm≠
++;

486 i‡(
hbyãs
 =2Ë
bôcﬁumn
 |(*
bôm≠
++)<<8;

487 
j
 = 0; j <
h
; j++) {

488 #i‡
PROJ_ARDUBOY
 > 0

489 i‡(
bôcﬁumn
&0x1) {

490 
	`døwPixñ
(
x
 + 
i
, 
y
 + 7 - 
j
,
cﬁ‹
);

491 } 
	`døwPixñ
(
x
 + 
i
, 
y
 + 7 - 
j
,
bgcﬁ‹
);

492 
bôcﬁumn
>>=1;

494 i‡(
f⁄tSize
==2) {

495 i‡(
bôcﬁumn
&0x1) {

496 
	`døwPixñ
(
x
 + (
i
<<1Ë, 
y
 + (
j
<<1),
cﬁ‹
);

497 
	`døwPixñ
(
x
 + (
i
<<1)+1, 
y
 + (
j
<<1),
cﬁ‹
);

498 
	`døwPixñ
(
x
 + (
i
<<1Ë, 
y
 + (
j
<<1)+1,
cﬁ‹
);

499 
	`døwPixñ
(
x
 + (
i
<<1)+1, 
y
 + (
j
<<1)+1,
cﬁ‹
);

501 
	`døwPixñ
(
x
 + (
i
<<1Ë, 
y
 + (
j
<<1),
bgcﬁ‹
);

502 
	`døwPixñ
(
x
 + (
i
<<1)+1, 
y
 + (
j
<<1),
bgcﬁ‹
);

503 
	`døwPixñ
(
x
 + (
i
<<1Ë, 
y
 + (
j
<<1)+1,
bgcﬁ‹
);

504 
	`døwPixñ
(
x
 + (
i
<<1)+1, 
y
 + (
j
<<1)+1,
bgcﬁ‹
);

507 i‡(
bôcﬁumn
&0x1Ë
	`døwPixñ
(
x
 + 
i
, 
y
 + 
j
,
cﬁ‹
);

508 
	`døwPixñ
(
x
 + 
i
, 
y
 + 
j
,
bgcﬁ‹
);

510 
bôcﬁumn
>>=1;

515 i‡(
f⁄tSize
==2Ë (
numByãs
+
adju°Ch¨Sãp
)<<1;

516  
numByãs
+
adju°Ch¨Sãp
;

517 
	}
}

519 
	gDi•œy
::
	$˛ór
() {

521 
uöt8_t
 
c
=0;

522 
c
 = 
bgcﬁ‹
 & (
PALETTE_SIZE
-1) ;

523 i‡(
bµ
==1 && 
bgcﬁ‹
Ë
c
=0xFF;

524 i‡(
bµ
==2) {

525 
c
 = 
bgcﬁ‹
 & 0x3;

526 
c
 = c | (c << 2);

527 
c
 = c | (c << 4);

528 } i‡(
bµ
==3){

529 
uöt16_t
 
j
 = 
POK_BITFRAME
;

530 i‡(
bgcﬁ‹
 & 0x1Ë
	`mem£t
((*)
m_s¸buf
,0xFF,
j
);

531 
	`mem£t
((*)
m_s¸buf
,0x00,
j
);

532 i‡((
bgcﬁ‹
>>1Ë& 0x1Ë
	`mem£t
((*)
m_s¸buf
+
POK_BITFRAME
,0xFF,
j
);

533 
	`mem£t
((*)
m_s¸buf
+
POK_BITFRAME
,0x00,
j
);

534 i‡((
bgcﬁ‹
>>2Ë& 0x1Ë
	`mem£t
((*)
m_s¸buf
+
POK_BITFRAME
*2,0xFF,
j
);

535 
	`mem£t
((*)
m_s¸buf
+
POK_BITFRAME
*2,0x00,
j
);

536 
	`£tCurs‹
(0,0);

539 
c
 = (c & 0x0F) | (c << 4);

541 
uöt16_t
 
j
 = (
s¸ìnbuf„r
);

542 
	`mem£t
((*)
m_s¸buf
,
c
,
j
);

544 
	`£tCurs‹
(0,0);

546 
	}
}

548 
	gDi•œy
::
	$s¸ﬁl
(
öt16_t
 
pixñrows
) {

549 
uöt16_t
 
ödex
 = 0, 
ödex2
=0,
oc
;

550 i‡(
pixñrows
==0) ;

551 i‡(
pixñrows
 >
height
)Öixelrows=height-1;

552 i‡(
bµ
 =4Ë
ödex2
 = 
pixñrows
*
width
/2;

553 i‡(
bµ
 =2Ë
ödex2
 = 
pixñrows
*
width
/4;

555 
oc
 = 
cﬁ‹
;

556 
cﬁ‹
 = 
bgcﬁ‹
;

557 i‡(
pixñrows
>0) {

558 
uöt16_t
 
y
=0;y<
height
-
pixñrows
;y++) {

559 
uöt16_t
 
x
=0;x<(
width
/8)*
bµ
;x++Ë
s¸ìnbuf„r
[
ödex
++]=s¸ìnbuf„r[
ödex2
++];

561 
	`fûlRe˘
(0,
curs‹Y
,
width
,
height
);

563 
uöt16_t
 
y
=
pixñrows
;y<
height
;y++) {

564 
uöt16_t
 
x
=0;x<(
width
*
bµ
)/8;x++Ë
s¸ìnbuf„r
[
ödex2
++]=s¸ìnbuf„r[
ödex
++];

566 
	`fûlRe˘
(0,0,
width
,
pixñrows
);

568 
cﬁ‹
=
oc
;

569 
	}
}

571 
	gDi•œy
::
	$fûlS¸ìn
(
uöt16_t
 
c
) {

572 
c
 = c & (
PALETTE_SIZE
-1) ;

573 i‡(
bµ
==1 && 
c
) c=0xFF;

574 i‡(
bµ
==2) {

575 
c
 = c & 0x3;

576 
c
 = c | (c << 2);

577 
c
 = c | (c << 4);

579 
c
 = (c & 0x0F) | (c << 4);

581 
	`mem£t
((*)
m_s¸buf
,
c
,(
s¸ìnbuf„r
));

582 
	}
}

584 
	gDi•œy
::
	$£tDeÁu…PÆëã
() {

585 #i‡
PICOPALETTE


586 
	`lﬂdRGBPÆëã
(
∑ÀâePico
);

588 
	`lﬂdRGBPÆëã
(
POK_DEFAULT_PALETTE
);

590 
	}
}

592 
	gDi•œy
::
	$£tCﬁ‹
(
uöt8_t
 
c
) {

593 
cﬁ‹
 = 
c
 & ((1<<
POK_COLORDEPTH
)-1);

594 
	}
}

596 
	gDi•œy
::
	$£tCﬁ‹
(
uöt8_t
 
c
,uöt8_à
bgc
){

597 
cﬁ‹
 = 
c
 & ((1<<
POK_COLORDEPTH
)-1);

598 
bgcﬁ‹
 = 
bgc
 & ((1<<
POK_COLORDEPTH
)-1);

599 
	}
}

601 
	gDi•œy
::
	$£tInvisibÀCﬁ‹
(
uöt16_t
 
c
){

602 
övisibÀcﬁ‹
 = 
c
;

603 
	}
}

605 
uöt8_t
 
	gDi•œy
::
	$gëCﬁ‹
() {

606  
cﬁ‹
;

607 
	}
}

609 
uöt8_t
 
	gDi•œy
::
	$gëBgCﬁ‹
() {

610  
bgcﬁ‹
;

611 
	}
}

613 
uöt16_t
 
	gDi•œy
::
	$gëInvisibÀCﬁ‹
() {

614  
övisibÀcﬁ‹
;

615 
	}
}

617 
	gDi•œy
::
	$£tClùRe˘
(
öt16_t
 
x
, i¡16_à
y
, i¡16_à
w
, i¡16_à
h
) {

618 
˛ùX
 = 
x
; 
˛ùY
 = 
y
; 
˛ùW
 = 
w
; 
˛ùH
 = 
h
;

619 
	}
}

622 
	gDi•œy
::
	$døwPixñ
(
öt16_t
 
x
,öt16_à
y
, 
uöt8_t
 
cﬁ
) {

623 i‡(
cﬁ
==
övisibÀcﬁ‹
) ;

624 i‡((
uöt16_t
)
x
 >
width
 || (uöt16_t)
y
 >
height
) ;

625 
cﬁ
 &(
PALETTE_SIZE
-1);

627 #i‡
POK_COLORDEPTH
 == 8

628 
m_s¸buf
[
x
+
width
*
y
] = 
cﬁ
;

631 #i‡
POK_GAMEBUINO_SUPPORT
 >0

633 
uöt8_t
 
c
 = 
cﬁ
;

634 
uöt8_t
 
˘
 = 
cﬁ
;

636 
uöt16_t
 
bô±r
=0;

637 
uöt8_t
 
cbô
=0;cbô<
POK_COLORDEPTH
;cbit++) {

638 
c
 = 
˘
 & 1;

639 if(
c
 == 0){

640 
m_s¸buf
[
x
 + (
y
 / 8Ë* 
LCDWIDTH
 + 
bô±r
] &~
	`_BV
(y % 8);

642 
m_s¸buf
[
x
 + (
y
 / 8Ë* 
LCDWIDTH
 + 
bô±r
] |
	`_BV
(y % 8);

644 
˘
 >>=1;

645 
bô±r
 +
POK_BITFRAME
;

649 #i‡
POK_COLORDEPTH
 == 1

650 i‡(
cﬁ
Ë{
m_s¸buf
[(
y
 >> 3Ë* 
width
 + 
x
] |= (0x80 >> (y & 7)); ;}

651 
m_s¸buf
[(
y
 >> 3Ë* 
width
 + 
x
] &= ~(0x80 >> (y & 7));

652 #ñi‡
POK_COLORDEPTH
 == 2

653 i‡(
cﬁ
) {

654 
cﬁ
 &= 3;

656 
uöt16_t
 
i
 = 
y
*(
width
>>2Ë+ (
x
>>2);

657 
uöt8_t
 
pixñ
 = 
m_s¸buf
[
i
];

658 
uöt8_t
 
cﬁumn
 = 
x
&0x03;

659 i‡(
cﬁumn
==3Ë
pixñ
 = (pixñ&0xFC)|(
cﬁ
);

660 i‡(
cﬁumn
==2Ë
pixñ
 = (pixñ&0xF3)|(
cﬁ
<<2);

661 i‡(
cﬁumn
==1Ë
pixñ
 = (pixñ&0xCF)|(
cﬁ
<<4);

662 
pixñ
 = (pixñ&0x3F)|(
cﬁ
<<6);

663 
m_s¸buf
[
i
] = 
pixñ
;

664 #ñi‡
POK_COLORDEPTH
 == 3

665 
uöt8_t
 
c
 = 
cﬁ
;

666 
uöt8_t
 
˘
 = 
cﬁ
;

668 
uöt16_t
 
bô±r
=0;

669 
uöt8_t
 
cbô
=0;cbô<
POK_COLORDEPTH
;cbit++) {

670 
c
 = 
˘
 & 1;

671 if(
c
 == 0){

672 
m_s¸buf
[
x
 + (
y
 / 8Ë* 
LCDWIDTH
 + 
bô±r
] &~
	`_BV
(y % 8);

674 
m_s¸buf
[
x
 + (
y
 / 8Ë* 
LCDWIDTH
 + 
bô±r
] |
	`_BV
(y % 8);

676 
˘
 >>=1;

677 
bô±r
 +
POK_BITFRAME
;

679 #ñi‡
POK_COLORDEPTH
 == 4

680 
uöt16_t
 
i
 = 
y
*(
width
>>1Ë+ (
x
>>1);

681 
uöt8_t
 
pixñ
 = 
m_s¸buf
[
i
];

682 i‡(
x
&1Ë
pixñ
 = (pixñ&0xF0)|(
cﬁ
);

683 
pixñ
 = (pixñ&0x0FË| (
cﬁ
<<4);

684 
m_s¸buf
[
i
] = 
pixñ
;

687 
	}
}

689 
	gDi•œy
::
	$døwPixñ
(
öt16_t
 
x
,öt16_à
y
) {

690 i‡((
uöt16_t
)
x
 >
width
 || (uöt16_t)
y
 >
height
) ;

692 #i‡
POK_COLORDEPTH
 == 8

693 
m_s¸buf
[
x
+
width
*
y
] = 
cﬁ‹
;

696 #i‡
POK_GAMEBUINO_SUPPORT
 > 0

698 
uöt8_t
 
c
 = 
cﬁ‹
;

699 
uöt8_t
 
˘
 = 
cﬁ‹
;

700 if(
˘
 =
INVERT
){

701 
˘
 = !
	`gëPixñ
(
x
, 
y
);

704 
uöt16_t
 
bô±r
=0;

705 
uöt8_t
 
cbô
=0;cbô<
POK_COLORDEPTH
;cbit++) {

706 
c
 = 
˘
 & 1;

707 if(
c
 == 0){

708 #i‡
DISPLAY_ROT
 =
NOROT


709 
m_s¸buf
[
x
 + (
y
 / 8Ë* 
LCDWIDTH
 + 
bô±r
] &~
	`_BV
(y % 8);

710 #ñi‡
DISPLAY_ROT
 =
ROTCCW


711 
m_s¸buf
[
LCDHEIGHT
 - 
y
 - 1 + (
x
 / 8Ë* 
LCDWIDTH_NOROT
 + 
bô±r
] &~
	`_BV
(x % 8);

712 #ñi‡
DISPLAY_ROT
 =
ROT180


713 
m_s¸buf
[
LCDWIDTH
 - 
x
 - 1 + ((
LCDHEIGHT
 - 
y
 - 1Ë/ 8Ë* 
LCDWIDTH_NOROT
 + 
bô±r
] &~
	`_BV
((LCDHEIGHT - y - 1) % 8);

714 #ñi‡
DISPLAY_ROT
 =
ROTCW


715 
m_s¸buf
[
y
 + ((
LCDWIDTH
 - 
x
 - 1Ë/ 8Ë* 
LCDWIDTH_NOROT
 + 
bôbå
] &~
	`_BV
((LCDWIDTH - x - 1) % 8);

719 #i‡
DISPLAY_ROT
 =
NOROT


720 
m_s¸buf
[
x
 + (
y
 / 8Ë* 
LCDWIDTH
 + 
bô±r
] |
	`_BV
(y % 8);

721 #ñi‡
DISPLAY_ROT
 =
ROTCCW


722 
m_s¸buf
[
LCDHEIGHT
 - 
y
 - 1 + (
x
 / 8Ë* 
LCDWIDTH_NOROT
 + 
bô±r
] |
	`_BV
(x % 8);

723 #ñi‡
DISPLAY_ROT
 =
ROT180


724 
m_s¸buf
[
LCDWIDTH
 - 
x
 - 1 + ((
LCDHEIGHT
 - 
y
 - 1Ë/ 8Ë* 
LCDWIDTH_NOROT
 + 
bô±r
] |
	`_BV
((LCDHEIGHT - y - 1) % 8);

725 #ñi‡
DISPLAY_ROT
 =
ROTCW


726 
m_s¸buf
[
y
 + ((
LCDWIDTH
 - 
x
 - 1Ë/ 8Ë* 
LCDWIDTH_NOROT
 + 
bô±r
] |
	`_BV
((LCDWIDTH - x -1) % 8);

730 
˘
 >>=1;

731 
bô±r
 +
POK_BITFRAME
;

737 #i‡
POK_COLORDEPTH
 == 1

738 i‡(
cﬁ‹
Ë{
m_s¸buf
[(
y
 >> 3Ë* 
width
 + 
x
] |= (0x80 >> (y & 7)); ;}

739 
m_s¸buf
[(
y
 >> 3Ë* 
width
 + 
x
] &= ~(0x80 >> (y & 7));

740 #ñi‡
POK_COLORDEPTH
 == 2

741 
uöt16_t
 
i
 = 
y
*(
width
>>2Ë+ (
x
>>2);

742 
uöt8_t
 
pixñ
 = 
m_s¸buf
[
i
];

743 
uöt8_t
 
cﬁumn
 = 
x
&0x03;

744 i‡(
cﬁumn
==3Ë
pixñ
 = (pixñ&0xFC)|(
cﬁ‹
);

745 i‡(
cﬁumn
==2Ë
pixñ
 = (pixñ&0xF3)|(
cﬁ‹
<<2);

746 i‡(
cﬁumn
==1Ë
pixñ
 = (pixñ&0xCF)|(
cﬁ‹
<<4);

747 
pixñ
 = (pixñ&0x3F)|(
cﬁ‹
<<6);

748 
m_s¸buf
[
i
] = 
pixñ
;

749 #ñi‡
POK_COLORDEPTH
 == 3

750 #ñi‡
POK_COLORDEPTH
 == 4

751 
uöt16_t
 
i
 = 
y
*(
width
>>1Ë+ (
x
>>1);

752 
uöt8_t
 
pixñ
 = 
m_s¸buf
[
i
];

753 i‡(
x
&1Ë
pixñ
 = (pixñ&0xF0)|(
cﬁ‹
);

754 
pixñ
 = (pixñ&0x0FË| (
cﬁ‹
<<4);

755 
m_s¸buf
[
i
] = 
pixñ
;

758 
	}
}

760 
uöt8_t
 
	gDi•œy
::
	$gëPixñ
(
öt16_t
 
x
,öt16_à
y
) {

761 i‡((
uöt16_t
)
x
 >
width
 || (uöt16_t)
y
 >
height
)  0;

762 #i‡
POK_COLORDEPTH
 == 8

763 
uöt16_t
 
i
 = 
y
*
width
+
x
;

764  
m_s¸buf
[
i
];

767 #i‡
POK_GAMEBUINO_SUPPORT


768 
uöt8_t
 
cﬁ‹
=0;

769 
uöt8_t
 
cbô
=0; cbô<
POK_COLORDEPTH
;cbit++) {

770 
cﬁ‹
 |(
m_s¸buf
[
x
 + (
y
 / 8Ë* 
LCDWIDTH
+
POK_BITFRAME
*
cbô
] >> (y % 8)) & 0x1 ;

772  
cﬁ‹
;

775 #i‡
POK_COLORDEPTH
 == 1

776  (
m_s¸buf
[(
y
 >> 3Ë* 
width
 + 
x
] & (0x80 >> (y & 7))) ? 1:0;

777 #ñi‡
POK_COLORDEPTH
 == 2

778 
uöt16_t
 
i
 = 
y
*(
width
>>2Ë+ (
x
>>2);

779 
uöt8_t
 
pixñ
 = 
m_s¸buf
[
i
];

780 
uöt8_t
 
cﬁumn
 = 
x
&0x03;

781 i‡(
cﬁumn
==0Ë 
pixñ
 & 0x03;

782 i‡(
cﬁumn
==1Ë (
pixñ
 & 0x0C)>>2;

783 i‡(
cﬁumn
==2Ë (
pixñ
 & 0x30)>>4;

784  
pixñ
>>6;;

785 #ñi‡
POK_COLORDEPTH
 == 3

786 #ñi‡
POK_COLORDEPTH
 == 4

787 
uöt16_t
 
i
 = 
y
*(
width
>>1Ë+ (
x
>>1);

788 
uöt8_t
 
pixñ
 = 
m_s¸buf
[
i
];

789 i‡(
x
&1Ë 
pixñ
 & 0x0F;

790  
pixñ
>>4;

793 
	}
}

795 
	gDi•œy
::
	$døwLöe
(
öt16_t
 
x0
, i¡16_à
y0
, i¡16_à
x1
, i¡16_à
y1
) {

796 i‡((
uöt16_t
)
x0
 >
width
 || (uöt16_t)
y0
 >
height
 || (uöt16_t)
x1
 >width || (uöt16_t)
y1
 >= height ) {

797 i‡(
	`˛ùLöe
 (&
x0
,&
y0
,&
x1
,&
y1
)==0) ;

799 i‡(
x0
 =
x1
)

800 
	`døwCﬁumn
(
x0
,
y0
,
y1
);

801 i‡(
y0
 =
y1
)

802 
	`døwRow
(
x0
,
x1
,
y0
);

804 
e
;

805 sig√d 
dx
,
dy
,
j
, 
ãmp
;

806 sig√d 
s1
,
s2
, 
xch™ge
;

807 sig√d 
x
,
y
;

809 
x
 = 
x0
;

810 
y
 = 
y0
;

813 i‡(
x1
 < 
x0
) {

814 
dx
 = 
x0
 - 
x1
;

815 
s1
 = -1;

817 i‡(
x1
 =
x0
) {

818 
dx
 = 0;

819 
s1
 = 0;

822 
dx
 = 
x1
 - 
x0
;

823 
s1
 = 1;

826 i‡(
y1
 < 
y0
) {

827 
dy
 = 
y0
 - 
y1
;

828 
s2
 = -1;

830 i‡(
y1
 =
y0
) {

831 
dy
 = 0;

832 
s2
 = 0;

835 
dy
 = 
y1
 - 
y0
;

836 
s2
 = 1;

839 
xch™ge
 = 0;

841 i‡(
dy
>
dx
) {

842 
ãmp
 = 
dx
;

843 
dx
 = 
dy
;

844 
dy
 = 
ãmp
;

845 
xch™ge
 = 1;

848 
e
 = (()
dy
<<1Ë- 
dx
;

850 
j
=0; j<=
dx
; j++) {

851 
	`døwPixñ
(
x
,
y
);

853 i‡(
e
>=0) {

854 i‡(
xch™ge
==1Ë
x
 = x + 
s1
;

855 
y
 = y + 
s2
;

856 
e
 =É - (()
dx
<<1);

858 i‡(
xch™ge
==1)

859 
y
 = y + 
s2
;

861 
x
 = x + 
s1
;

862 
e
 =É + (()
dy
<<1);

865 
	}
}

867 
uöt8_t
 
	gDi•œy
::
	$˛ùLöe
(
öt16_t
 *
x0
, i¡16_à*
y0
, i¡16_à*
x1
, i¡16_à*
y1
){

869 i‡(*
x1
 < *
x0
) {

871 
	`sw≠WT
(
öt16_t
*, 
x1
, 
x0
);

873 
	`sw≠WT
(
öt16_t
*, 
y1
, 
y0
);

876 i‡(*
x0
 >
width
)  0;

879 i‡(*
x0
 < 0) {

880 i‡(*
x1
 < 0)  0;

881 
öt32_t
 
dx
 = (*
x1
 - *
x0
);

882 
öt32_t
 
dy
 = ((*
y1
 - *
y0
) << 16);

883 
öt32_t
 
m
 = 
dy
/
dx
;

884 *
y0
 = *y0 + ((
m
*-*
x0
) >> 16);

885 *
x0
 = 0;

889 i‡(*
x1
 >
width
) {

890 
öt32_t
 
dx
 = (*
x1
 - *
x0
);

891 
öt32_t
 
dy
 = ((*
y1
 - *
y0
) << 16);

892 
öt32_t
 
m
 = 
dy
 / 
dx
;

893 *
y1
 = *y1 + ((
m
 * ((
width
 - 1Ë- *
x1
)) >> 16);

894 *
x1
 = 
width
-1;

898 i‡(*
y1
 < *
y0
) {

900 
	`sw≠WT
(
öt16_t
*, 
x1
, 
x0
);

902 
	`sw≠WT
(
öt16_t
*, 
y1
, 
y0
);

905 i‡(*
y0
 >
height
)  0;

907 i‡(*
y0
 < 0) {

908 i‡(*
y1
 < 0)  0;

909 
öt32_t
 
dx
 = (*
x1
 - *
x0
) << 16;

910 
öt32_t
 
dy
 = (*
y1
 - *
y0
);

911 
öt32_t
 
m
 = 
dx
 / 
dy
;

912 *
x0
 = *x0 + ((
m
 * -(*
y0
)) >> 16);

913 *
y0
 = 0;

917 i‡(*
y1
 >
height
) {

918 
öt32_t
 
dx
 = (*
x1
 - *
x0
) << 16;

919 
öt32_t
 
dy
 = (*
y1
 - *
y0
);

920 
öt32_t
 
m
 = 
dx
 / 
dy
;

921 *
x1
 = *x1 + ((
m
 * ((
height
 - 1Ë- *
y1
)) >> 16);

922 *
y1
 = 
height
-1;

925 
	}
}

927 
	gDi•œy
::
	$m≠1BôCﬁumn
(
öt16_t
 
x
, i¡16_à
sy
, i¡16_à
ey
, c⁄° 
uöt8_t
* 
bôm≠
, 
uöt16_t
 
cﬁumn
){

928 i‡((
uöt16_t
)
sy
>=
height
 && (uöt16_t)
ey
>=height) ;

929 i‡((
uöt16_t
)
x
>=
width
) ;

930 i‡(
sy
>
ey
) {

931 
y
=
sy
;

932 
sy
=
ey
;

933 
ey
=
y
;

935 
uöt16_t
 
bmw
,
bmh
;

936 
ãxñ°ï
, 
ãxñödex
;

937 
bmw
 = *(
bôm≠
);

938 
bmh
 = *(
bôm≠
+1);

939 i‡(
cﬁumn
>
bmw
-1) column=bmw-1;

940 
bôm≠
 += 2;

941 
bôm≠
 +
cﬁumn
;

942 
ãxñ°ï
 = ()
bmh
/(()
ey
-()
sy
);

943 
ãxñödex
 = 0;

944 
y
=
sy
; y <
ey
; y++, 
ãxñödex
 +
ãxñ°ï
) {

945 
uöt8_t
 
ãxñ
;

946 
uöt8_t
 
cuºbyã
, 
bô
;

947 
cuºbyã
 = 
ãxñödex
 / 8;

948 
bô
 = 7-((
uöt16_t
Ë
ãxñödex
 & 0x7);

949 
ãxñ
=*(
bôm≠
+
cuºbyã
*
bmw
);

950 i‡(
ãxñ
 & (1<<
bô
)Ë
	`døwPixñ
(
x
,
y
);

951 i‡(
bgcﬁ‹
 !
övisibÀcﬁ‹
Ë
	`døwPixñ
(
x
,
y
,bgcolor);

953 
	}
};

955 
	gDi•œy
::
	$døwCﬁumn
(
öt16_t
 
x
, i¡16_à
sy
, i¡16_à
ey
){

956 i‡((
uöt16_t
)
sy
>=
height
 && (uöt16_t)
ey
>=height) ;

957 i‡((
uöt16_t
)
x
>=
width
) ;

958 i‡(
sy
>
ey
) {

959 
y
=
sy
;

960 
sy
=
ey
;

961 
ey
=
y
;

963 
y
=
sy
; y <
ey
; y++) {

964 
	`døwPixñ
(
x
,
y
);

966 
	}
}

968 
	gDi•œy
::
	$døwRow
(
öt16_t
 
x0
, i¡16_à
x1
, i¡16_à
y
){

969 i‡((
uöt16_t
)
x0
>=
width
 && (uöt16_t)
x1
>=width) ;

970 i‡((
uöt16_t
)
y
>=
height
) ;

972 i‡(
x0
>
x1
) {

973 
x
=
x0
;

974 
x0
=
x1
;

975 
x1
=
x
;

977 
x
=
x0
; x <
x1
; x++) {

978 
	`døwPixñ
(
x
,
y
);

980 
	}
}

982 
	gDi•œy
::
	$døwFa°VLöe
(
öt16_t
 
x
, i¡16_à
y
, i¡16_à
h
){

983 i‡(
h
<0Ë{
y
 += h; h = -h;}

984 
	`døwCﬁumn
(
x
,
y
,y+
h
);

985 
	}
}

987 
	gDi•œy
::
	$døwFa°HLöe
(
öt16_t
 
x
, i¡16_à
y
, i¡16_à
w
){

988 i‡(
w
<0Ë{
x
 += w; w = -w;}

989 
	`døwRow
(
x
,x+
w
-1,
y
);

990 
	}
}

992 
	gDi•œy
::
	$døwRe˘™gÀ
(
öt16_t
 
x0
, i¡16_à
y0
, i¡16_à
w
, i¡16_à
h
) {

993 
	`døwCﬁumn
(
x0
,
y0
,y0+
h
);

994 
	`døwCﬁumn
(
x0
+
w
,
y0
,y0+
h
);

995 
	`døwRow
(
x0
,x0+
w
,
y0
);

996 
	`døwRow
(
x0
,x0+
w
,
y0
+
h
);

997 
	}
}

999 
	gDi•œy
::
	$fûlRe˘™gÀ
(
öt16_t
 
x0
,öt16_à
y0
, i¡16_à
w
, i¡16_à
h
){

1000 
öt16_t
 
x
,
y
,
x1
,
y1
;

1001 
x1
=
x0
+
w
;
y1
=
y0
+
h
;

1002 i‡((
x0
<0 && 
x1
<0Ë|| (x0>=
width
 && x1 >=width)) ;

1003 i‡((
y0
<0 && 
y1
<0Ë|| (y0>=
height
 && y1 >=height)) ;

1004 i‡(
x0
>
x1
Ë{
x
=x1;x1=x0;}

1005 
x
=
x0
;

1006 i‡(
y0
>
y1
Ë{
y
=y1;y1=y0;}

1007 
y
=
y0
;

1008 i‡(
x
<0) x=0;

1009 i‡(
y
<0) y=0;

1010 ;
x
<
x1
;x++Ë
	`døwCﬁumn
(x,
y
,
y1
);

1011 
	}
}

1013 
	gDi•œy
::
	$fûlRe˘
(
öt16_t
 
x
, i¡16_à
y
, i¡16_à
w
, i¡16_à
h
) {

1014 
	`fûlRe˘™gÀ
(
x
,
y
,
w
,
h
);

1015 
	}
}

1017 
	gDi•œy
::
	$døwRe˘
(
öt16_t
 
x
, i¡16_à
y
, i¡16_à
w
, i¡16_à
h
) {

1018 
	`døwRe˘™gÀ
(
x
,
y
,
w
,
h
);

1019 
	}
}

1021 
	gDi•œy
::
	$døwCú˛e
(
öt16_t
 
x0
, i¡16_à
y0
, i¡16_à
r
) {

1022 
öt16_t
 
f
 = 1 - 
r
;

1023 
öt16_t
 
ddF_x
 = 1;

1024 
öt16_t
 
ddF_y
 = -2 * 
r
;

1025 
öt16_t
 
x
 = 0;

1026 
öt16_t
 
y
 = 
r
;

1028 
	`døwPixñ
(
x0
, 
y0
 + 
r
);

1029 
	`døwPixñ
(
x0
, 
y0
 - 
r
);

1030 
	`døwPixñ
(
x0
 + 
r
, 
y0
);

1031 
	`døwPixñ
(
x0
 - 
r
, 
y0
);

1033 
x
 < 
y
) {

1034 i‡(
f
 >= 0) {

1036 
y
--;

1037 
ddF_y
 += 2;

1038 
f
 +
ddF_y
;

1040 
x
++;

1041 
ddF_x
 += 2;

1042 
f
 +
ddF_x
;

1044 
	`døwPixñ
(
x0
 + 
x
, 
y0
 + 
y
);

1045 
	`døwPixñ
(
x0
 - 
x
, 
y0
 + 
y
);

1046 
	`døwPixñ
(
x0
 + 
x
, 
y0
 - 
y
);

1047 
	`døwPixñ
(
x0
 - 
x
, 
y0
 - 
y
);

1048 
	`døwPixñ
(
x0
 + 
y
, 
y0
 + 
x
);

1049 
	`døwPixñ
(
x0
 - 
y
, 
y0
 + 
x
);

1050 
	`døwPixñ
(
x0
 + 
y
, 
y0
 - 
x
);

1051 
	`døwPixñ
(
x0
 - 
y
, 
y0
 - 
x
);

1054 
	}
}

1056 
	gDi•œy
::
	$døwCú˛eHñ≥r
(
öt16_t
 
x0
, i¡16_à
y0
, i¡16_à
r
, 
uöt16_t
 
c‹√∫ame
) {

1057 
öt16_t
 
f
 = 1 - 
r
;

1058 
öt16_t
 
ddF_x
 = 1;

1059 
öt16_t
 
ddF_y
 = -2 * 
r
;

1060 
öt16_t
 
x
 = 0;

1061 
öt16_t
 
y
 = 
r
;

1063 
x
 < 
y
) {

1064 i‡(
f
 >= 0) {

1065 
y
--;

1066 
ddF_y
 += 2;

1067 
f
 +
ddF_y
;

1069 
x
++;

1070 
ddF_x
 += 2;

1071 
f
 +
ddF_x
;

1072 i‡(
c‹√∫ame
 & 0x4) {

1073 
	`døwPixñ
(
x0
 + 
x
, 
y0
 + 
y
);

1074 
	`døwPixñ
(
x0
 + 
y
, 
y0
 + 
x
);

1076 i‡(
c‹√∫ame
 & 0x2) {

1077 
	`døwPixñ
(
x0
 + 
x
, 
y0
 - 
y
);

1078 
	`døwPixñ
(
x0
 + 
y
, 
y0
 - 
x
);

1080 i‡(
c‹√∫ame
 & 0x8) {

1081 
	`døwPixñ
(
x0
 - 
y
, 
y0
 + 
x
);

1082 
	`døwPixñ
(
x0
 - 
x
, 
y0
 + 
y
);

1084 i‡(
c‹√∫ame
 & 0x1) {

1086 
	`døwPixñ
(
x0
 - 
y
, 
y0
 - 
x
);

1087 
	`døwPixñ
(
x0
 - 
x
, 
y0
 - 
y
);

1090 
	}
}

1092 
	gDi•œy
::
	$fûlCú˛e
(
öt16_t
 
x0
, i¡16_à
y0
, i¡16_à
r
) {

1093 
	`døwFa°VLöe
(
x0
, 
y0
 - 
r
, 2 *Ñ );

1094 
	`fûlCú˛eHñ≥r
(
x0
, 
y0
, 
r
, 3, 0);

1095 
	}
}

1097 
	gDi•œy
::
	$fûlCú˛eHñ≥r
(
öt16_t
 
x0
, i¡16_à
y0
, i¡16_à
r
, 
uöt16_t
 
c‹√∫ame
, i¡16_à
dñè
) {

1098 
öt16_t
 
f
 = 1 - 
r
;

1099 
öt16_t
 
ddF_x
 = 1;

1100 
öt16_t
 
ddF_y
 = -2 * 
r
;

1101 
öt16_t
 
x
 = 0;

1102 
öt16_t
 
y
 = 
r
;

1104 
x
 < 
y
) {

1105 i‡(
f
 >= 0) {

1106 
y
--;

1107 
ddF_y
 += 2;

1108 
f
 +
ddF_y
;

1110 
x
++;

1111 
ddF_x
 += 2;

1112 
f
 +
ddF_x
;

1114 i‡(
c‹√∫ame
 & 0x1) {

1115 
	`døwFa°VLöe
(
x0
 + 
x
, 
y0
 - 
y
, 2 * y + 1 + 
dñè
-1);

1116 
	`døwFa°VLöe
(
x0
 + 
y
, 
y0
 - 
x
, 2 * x + 1 + 
dñè
-1);

1118 i‡(
c‹√∫ame
 & 0x2) {

1120 
	`døwFa°VLöe
(
x0
 - 
x
, 
y0
 - 
y
, 2 * y + 1 + 
dñè
-1);

1121 
	`døwFa°VLöe
(
x0
 - 
y
, 
y0
 - 
x
, 2 * x + 1 + 
dñè
-1);

1124 
	}
}

1126 
	gDi•œy
::
	$døwRoundRe˘
(
öt16_t
 
x
, i¡16_à
y
, i¡16_à
w
,öt16_à
h
, i¡16_à
r
) {

1127 i‡(
r
<2Ë{
	`døwRe˘™gÀ
(
x
,
y
,
w
,
h
);;}

1129 
	`døwFa°HLöe
(
x
 + 
r
, 
y
, 
w
 - 2 *Ñ);

1130 
	`døwFa°HLöe
(
x
 + 
r
, 
y
 + 
h
 - 1, 
w
 - 2 *Ñ);

1131 
	`døwFa°VLöe
(
x
, 
y
 + 
r
, 
h
 - 2 *Ñ);

1132 
	`døwFa°VLöe
(
x
 + 
w
 - 1, 
y
 + 
r
, 
h
 - 2 *Ñ);

1134 
	`døwCú˛eHñ≥r
(
x
 + 
r
, 
y
 +Ñ,Ñ, 1);

1135 
	`døwCú˛eHñ≥r
(
x
 + 
w
 - 
r
 - 1, 
y
 +Ñ,Ñ, 2);

1136 
	`døwCú˛eHñ≥r
(
x
 + 
w
 - 
r
 - 1, 
y
 + 
h
 -Ñ - 1,Ñ, 4);

1137 
	`døwCú˛eHñ≥r
(
x
 + 
r
, 
y
 + 
h
 -Ñ - 1,Ñ, 8);

1138 
	}
}

1140 
	gDi•œy
::
	$fûlRoundRe˘
(
öt16_t
 
x
, i¡16_à
y
, i¡16_à
w
,öt16_à
h
, i¡16_à
r
) {

1141 i‡(
r
<2Ë{
	`fûlRe˘™gÀ
(
x
,
y
,
w
,
h
);;}

1142 
	`fûlRe˘™gÀ
(
x
 + 
r
, 
y
, 
w
 - 2 *Ñ, 
h
-1);

1144 
	`fûlCú˛eHñ≥r
(
x
 + 
w
 - 
r
 - 1, 
y
 +Ñ,Ñ, 1, 
h
 - 2 *Ñ - 1);

1145 
	`fûlCú˛eHñ≥r
(
x
 + 
r
, 
y
 +Ñ,Ñ, 2, 
h
 - 2 *Ñ - 1);

1146 
	}
}

1148 
	gDi•œy
::
	$døwTrüngÀ
(
öt16_t
 
x0
, i¡16_à
y0
,

1149 
öt16_t
 
x1
, i¡16_à
y1
,

1150 
öt16_t
 
x2
, i¡16_à
y2
) {

1151 
	`døwLöe
(
x0
, 
y0
, 
x1
, 
y1
);

1152 
	`døwLöe
(
x1
, 
y1
, 
x2
, 
y2
);

1153 
	`døwLöe
(
x2
, 
y2
, 
x0
, 
y0
);

1154 
	}
}

1156 
	gDi•œy
::
	$fûlTrüngÀ
(
öt16_t
 
x0
, i¡16_à
y0
,

1157 
öt16_t
 
x1
, i¡16_à
y1
,

1158 
öt16_t
 
x2
, i¡16_à
y2
) {

1159 
öt16_t
 
a
, 
b
, 
y
, 
œ°
;

1162 i‡(
y0
 > 
y1
) {

1163 
	`sw≠WT
(
öt16_t
,
y0
, 
y1
);

1164 
	`sw≠WT
(
öt16_t
,
x0
, 
x1
);

1166 i‡(
y1
 > 
y2
) {

1167 
	`sw≠WT
(
öt16_t
,
y2
, 
y1
);

1168 
	`sw≠WT
(
öt16_t
,
x2
, 
x1
);

1170 i‡(
y0
 > 
y1
) {

1171 
	`sw≠WT
(
öt16_t
,
y0
, 
y1
);

1172 
	`sw≠WT
(
öt16_t
,
x0
, 
x1
);

1175 i‡(
y0
 =
y2
) {

1176 
a
 = 
b
 = 
x0
;

1177 i‡(
x1
 < 
a
)á = x1;

1178 i‡(
x1
 > 
b
) b = x1;

1179 i‡(
x2
 < 
a
)á = x2;

1180 i‡(
x2
 > 
b
) b = x2;

1181 
	`døwFa°HLöe
(
a
, 
y0
, 
b
 -á + 1);

1185 
öt16_t


1186 
dx01
 = 
x1
 - 
x0
,

1187 
dy01
 = 
y1
 - 
y0
,

1188 
dx02
 = 
x2
 - 
x0
,

1189 
dy02
 = 
y2
 - 
y0
,

1190 
dx12
 = 
x2
 - 
x1
,

1191 
dy12
 = 
y2
 - 
y1
,

1192 
ß
 = 0,

1193 
sb
 = 0;

1201 i‡(
y1
 =
y2
Ë
œ°
 = y1;

1202 
œ°
 = 
y1
 - 1;

1204 
y
 = 
y0
; y <
œ°
; y++) {

1205 
a
 = 
x0
 + 
ß
 / 
dy01
;

1206 
b
 = 
x0
 + 
sb
 / 
dy02
;

1207 
ß
 +
dx01
;

1208 
sb
 +
dx02
;

1213 i‡(
a
 > 
b
Ë
	`sw≠WT
(
öt16_t
,a, b);

1214 
	`døwFa°HLöe
(
a
, 
y
, 
b
 -á + 1);

1219 
ß
 = 
dx12
 * (
y
 - 
y1
);

1220 
sb
 = 
dx02
 * (
y
 - 
y0
);

1221 ; 
y
 <
y2
; y++) {

1222 
a
 = 
x1
 + 
ß
 / 
dy12
;

1223 
b
 = 
x0
 + 
sb
 / 
dy02
;

1224 
ß
 +
dx12
;

1225 
sb
 +
dx02
;

1227 i‡(
a
 > 
b
Ë
	`sw≠WT
(
öt16_t
,a, b);

1228 
	`døwFa°HLöe
(
a
, 
y
, 
b
 -á + 1);

1230 
	}
}

1232 
	gDi•œy
::
	$£tF⁄t
(c⁄° * 
f
) {

1233 
f⁄t
 = 
f
;

1234 
f⁄tWidth
 = *(
f⁄t
)+1;

1235 
f⁄tHeight
 = *(
f⁄t
 + 1)+1;

1236 
	}
}

1238 
	gDi•œy
::
	$døwM⁄oBôm≠
(
öt16_t
 
x
, i¡16_à
y
, c⁄° 
uöt8_t
* 
bôm≠
, uöt8_à
ödex
) {

1239 
uöt8_t
 
w
 = *
bôm≠
;

1240 
uöt8_t
 
h
 = *(
bôm≠
 + 1);

1241 
uöt8_t
 
xåa
=0;

1242 i‡(
w
&0x7Ë
xåa
=1;

1243 
bôm≠
 = bôm≠ + 3 + 
ödex
 * 
h
 * ((
w
>>3)+
xåa
);

1244 #i‡
POK_GAMEBUINO_SUPPORT
 > 0

1245 
öt8_t
 
i
, 
j
, 
byãNum
, 
bôNum
, 
byãWidth
 = (
w
 + 7) >> 3;

1246 
i
 = 0; i < 
w
; i++) {

1247 
byãNum
 = 
i
 / 8;

1248 
bôNum
 = 
i
 % 8;

1249 
j
 = 0; j < 
h
; j++) {

1250 
uöt8_t
 
sour˚
 = *(
bôm≠
 + 
j
 * 
byãWidth
 + 
byãNum
);

1251 i‡(
sour˚
 & (0x80 >> 
bôNum
)) {

1252 
	`døwPixñ
(
x
 + 
i
, 
y
 + 
j
);

1258 
öt8_t
 
s¸x
,
s¸y
;

1259 
uöt8_t
* 
s¸±r
 = 
m_s¸buf
 + (
y
*(
width
>>1Ë+ (
x
>>1));

1260 
öt8_t
 
bô±r
;

1261 
s¸y
 = 
y
; s¸y < y+
h
; scry+=1) {

1262 i‡((
x
&1)==0) {

1263 
s¸x
 = 
x
, 
bô±r
=7; s¸x < 
w
+x; scrx+=2) {

1264 
uöt8_t
 
èrgëpixñ
 = *
s¸±r
;

1265 i‡(*
bôm≠
 & (1<<
bô±r
)Ë
èrgëpixñ
 = (èrgëpixñ & 0xFË| 
cﬁ‹
<<4;

1266 i‡(
bgcﬁ‹
 !
övisibÀcﬁ‹
Ë
èrgëpixñ
 = (targetpixel & 0xF) | bgcolor<<4;

1267 
bô±r
--;

1268 i‡(*
bôm≠
 & (1<<
bô±r
)Ë
èrgëpixñ
 = (èrgëpixñ & 0xF0Ë| 
cﬁ‹
;

1269 i‡(
bgcﬁ‹
 !
övisibÀcﬁ‹
Ë
èrgëpixñ
 = (targetpixel & 0xF0) | bgcolor;

1270 
bô±r
--;

1271 i‡(
bô±r
<0Ë{ bô±∏7; 
bôm≠
++; }

1272 *
s¸±r
 = 
èrgëpixñ
;

1273 
s¸±r
++;

1276 
s¸x
 = 
x
, 
bô±r
=7; s¸x < 
w
+x; scrx+=2) {

1277 
uöt8_t
 
èrgëpixñ
 = *
s¸±r
;

1279 i‡(*
bôm≠
 & (1<<
bô±r
)Ë
èrgëpixñ
 = (èrgëpixñ & 0xF0Ë| 
cﬁ‹
;

1280 i‡(
bgcﬁ‹
 !
övisibÀcﬁ‹
Ë
èrgëpixñ
 = (targetpixel & 0xF0) | bgcolor;

1281 *
s¸±r
 = 
èrgëpixñ
;

1282 
bô±r
--;
s¸±r
++;
èrgëpixñ
 = *scrptr;

1284 i‡(*
bôm≠
 & (1<<
bô±r
)Ë
èrgëpixñ
 = (èrgëpixñ & 0xFË| 
cﬁ‹
<<4;

1285 i‡(
bgcﬁ‹
 !
övisibÀcﬁ‹
Ë
èrgëpixñ
 = (targetpixel & 0xF) | bgcolor<<4;

1286 *
s¸±r
 = 
èrgëpixñ
;

1287 
bô±r
--;

1290 i‡(
bô±r
!=7Ë
bôm≠
++;

1292 
s¸±r
 = s¸±∏+ ((
width
 - 
w
)>>1);

1295 
	}
}

1298 
	gDi•œy
::
	$døwBôm≠
(
öt16_t
 
x
, i¡16_à
y
, c⁄° 
uöt8_t
* 
bôm≠
, uöt8_à
‰ame
)

1300 
öt16_t
 
w
 = *
bôm≠
;

1301 
öt16_t
 
h
 = *(
bôm≠
 + 1);

1302 
uöt8_t
 
‰amew
 = *(
bôm≠
+2);

1303 
bôm≠
 = bitmap + 3;

1305 i‡(
y
<-
h
 || y>
height
) ;

1306 i‡(
x
<-
‰amew
 || x>
width
) ;

1308 i‡(
m_cﬁ‹dïth
<2) {

1309 
öt16_t
 
i
, 
j
, 
byãNum
, 
bôNum
, 
byãWidth
 = (
w
 + 7) >> 3;

1310 
i
 = 0; i < 
w
; i++) {

1311 
byãNum
 = 
i
 / 8;

1312 
bôNum
 = 
i
 % 8;

1313 
j
 = 0; j < 
h
; j++) {

1314 
uöt8_t
 
sour˚
 = *(
bôm≠
 + 
j
 * 
byãWidth
 + 
byãNum
);

1315 i‡(
sour˚
 & (0x80 >> 
bôNum
)) {

1316 
	`døwPixñ
(
x
 + 
i
, 
y
 + 
j
);

1324 i‡(
m_cﬁ‹dïth
<4) {

1325 
öt16_t
 
i
, 
j
, 
byãNum
, 
bôNum
, 
byãWidth
 = 
w
 >> 2;

1326 
i
 = 0; i < 
w
; i++) {

1327 
byãNum
 = 
i
 / 4;

1328 
bôNum
 = (
i
 % 4)<<1;

1329 
j
 = 0; j < 
h
; j++) {

1330 
uöt8_t
 
sour˚
 = *(
bôm≠
 + 
j
 * 
byãWidth
 + 
byãNum
);

1331 
uöt8_t
 
ouçut
 = (
sour˚
 & (0xC0 >> 
bôNum
));

1332 
ouçut
 >>(6-
bôNum
);

1333 i‡(
ouçut
 !
övisibÀcﬁ‹
) {

1334 
	`£tCﬁ‹
(
ouçut
);

1335 
	`døwPixñ
(
x
 + 
i
, 
y
 + 
j
);

1343 
öt16_t
 
s¸x
,
s¸y
,
x˛ù
,
xjump
,
s¸xjump
;

1344 
x˛ù
=
xjump
=
s¸xjump
=0;

1345 
bôm≠
 +(
‰amew
*
‰ame
)>>1;

1347 i‡(
y
<0Ë{ 
h
+=y; 
bôm≠
 -y*(
w
>>1); y=0;}

1348 i‡(
y
+
h
>
height
) { h -=(y-height);}

1350 
xjump
 = (
w
-
‰amew
)>>1;

1351 i‡(
x
<0Ë{ 
x˛ù
=(x&1)<<1; 
‰amew
+=x; 
xjump
 = ((-x)>>1); 
bôm≠
 += xjump; x=0;}

1352 i‡(
x
+
‰amew
>
width
) {

1353 
x˛ù
 = (
x
&1)<<1;

1354 
s¸xjump
 = 
x
&1;

1355 
xjump
=((
x
+
‰amew
-
width
)>>1)+
s¸xjump
;

1356 
‰amew
 = 
width
-
x
;}

1358 
uöt8_t
* 
s¸±r
 = 
m_s¸buf
 + (
y
*(
width
>>1Ë+ (
x
>>1));

1360 
s¸y
 = 
y
; s¸y < y+
h
; scry+=1) {

1361 i‡(
s¸y
>=
height
) ;

1362 i‡((
x
&1)==0) {

1363 
s¸x
 = 
x
; s¸x < 
‰amew
+x-
x˛ù
; scrx+=2) {

1364 
uöt8_t
 
sour˚pixñ
 = *
bôm≠
;

1365 i‡(
x˛ù
) {

1366 
sour˚pixñ
 <<=4;

1367 
sour˚pixñ
 |((*(
bôm≠
+1))>>4);

1369 
uöt8_t
 
èrgëpixñ
 = *
s¸±r
;

1370 i‡((
sour˚pixñ
>>4Ë!
övisibÀcﬁ‹
 ) 
èrgëpixñ
 = (targetpixel&0x0F) | (sourcepixel & 0xF0);

1371 i‡((
sour˚pixñ
&0x0FË!
övisibÀcﬁ‹
Ë
èrgëpixñ
 = (targetpixel & 0xF0) | (sourcepixel & 0x0F);

1372 *
s¸±r
 = 
èrgëpixñ
;

1373 
bôm≠
++;

1374 
s¸±r
++;

1376 i‡(
x˛ù
){

1377 i‡(
‰amew
&1) {

1379 
uöt8_t
 
sour˚pixñ
 = *
bôm≠
;

1380 i‡((
sour˚pixñ
&0x0FË!
övisibÀcﬁ‹
) {

1381 
sour˚pixñ
 <<=4;

1382 
uöt8_t
 
èrgëpixñ
 = *
s¸±r
;

1383 
èrgëpixñ
 |
sour˚pixñ
;

1384 *
s¸±r
 = 
èrgëpixñ
;

1388 
bôm≠
++;

1389 
s¸±r
++;

1391 
bôm≠
 +
xjump
;

1393 
s¸x
 = 
x
; s¸x < 
‰amew
+x-
x˛ù
; scrx+=2) {

1394 
uöt8_t
 
sour˚pixñ
 = *
bôm≠
;

1395 
uöt8_t
 
èrgëpixñ
 = *
s¸±r
;

1397 if((
sour˚pixñ
>>4)!=
övisibÀcﬁ‹
Ë
èrgëpixñ
 = (targetpixel & 0xF0) | (sourcepixel >> 4 );

1398 *
s¸±r
 = 
èrgëpixñ
;

1399 
s¸±r
++;

1400 
èrgëpixñ
 = *
s¸±r
;

1402 if((
sour˚pixñ
&0x0F)!=
övisibÀcﬁ‹
Ë
èrgëpixñ
 = (targetpixel & 0x0F) | (sourcepixel << 4);

1403 *
s¸±r
 = 
èrgëpixñ
;

1404 
bôm≠
++;

1406 
bôm≠
+=
xjump
;

1409 
s¸±r
 = s¸±∏+ ((
width
 - 
‰amew
)>>1)+
s¸xjump
;

1411 
	}
}

1414 
	gDi•œy
::
	$døwBôm≠
(
öt16_t
 
x
, i¡16_à
y
, c⁄° 
uöt8_t
* 
bôm≠
)

1416 
öt16_t
 
w
 = *
bôm≠
;

1417 
öt16_t
 
h
 = *(
bôm≠
 + 1);

1418 
bôm≠
 = bitmap + 2;

1419 
	`døwBôm≠D©a
(
x
, 
y
, 
w
, 
h
, 
bôm≠
);

1420 
	}
}

1422 
	gDi•œy
::
	$døwBôm≠D©a
(
öt16_t
 
x
, i¡16_à
y
, i¡16_à
w
, i¡16_à
h
, c⁄° 
uöt8_t
* 
bôm≠
) {

1424 i‡(
y
<-
h
 || y>
height
) ;

1425 i‡(
x
<-
w
 || x>
width
) ;

1427 i‡(
m_cﬁ‹dïth
<2) {

1428 
öt16_t
 
i
, 
j
, 
byãNum
, 
bôNum
, 
byãWidth
 = (
w
 + 7) >> 3;

1429 
i
 = 0; i < 
w
; i++) {

1430 
byãNum
 = 
i
 / 8;

1431 
bôNum
 = 
i
 % 8;

1432 
j
 = 0; j < 
h
; j++) {

1433 
uöt8_t
 
sour˚
 = *(
bôm≠
 + 
j
 * 
byãWidth
 + 
byãNum
);

1434 i‡(
sour˚
 & (0x80 >> 
bôNum
)) {

1435 
	`døwPixñ
(
x
 + 
i
, 
y
 + 
j
);

1443 i‡(
m_cﬁ‹dïth
==2) {

1444 if(
˛ùH
 > 0) {

1447 
öt16_t
 
x1
 = 
	`max
(
x
, 
˛ùX
);

1448 
öt16_t
 
x2
 = 
	`mö
(
x
 + 
w
, 
˛ùX
 + 
˛ùW
);

1449 
öt16_t
 
bmupd©eX
 = 
x1
 - 
x
;

1450 
öt16_t
 
bmupd©eX2
 = 
x2
 - 
x
;

1451 
öt16_t
 
y1
 = 
	`max
(
y
, 
˛ùY
);

1452 
öt16_t
 
y2
 = 
	`mö
(
y
 + 
h
, 
˛ùY
 + 
˛ùH
);

1453 
öt16_t
 
bmupd©eY
 = 
y1
 - 
y
;

1454 
öt16_t
 
bmupd©eY2
 = 
y2
 - 
y
;

1456 
öt16_t
 
i
, 
j
, 
byãNum
, 
bôNum
, 
byãWidth
 = 
w
 >> 2;

1457 
i
 = 
bmupd©eX
; i < 
bmupd©eX2
; i++) {

1458 
byãNum
 = 
i
 / 4;

1459 
bôNum
 = (
i
 % 4)<<1;

1460 
j
 = 
bmupd©eY
; j < 
bmupd©eY2
; j++) {

1461 
uöt8_t
 
sour˚
 = *(
bôm≠
 + (
j
 * 
byãWidth
Ë+ 
byãNum
);

1462 
uöt8_t
 
ouçut
 = (
sour˚
 & (0xC0 >> 
bôNum
));

1463 
ouçut
 >>(6-
bôNum
);

1464 i‡(
ouçut
 !
övisibÀcﬁ‹
) {

1465 
	`£tCﬁ‹
(
ouçut
);

1466 
	`døwPixñ
(
x
 + 
i
, 
y
 + 
j
);

1472 
öt16_t
 
i
, 
j
, 
byãNum
, 
bôNum
, 
byãWidth
 = 
w
 >> 2;

1473 
i
 = 0; i < 
w
; i++) {

1474 
byãNum
 = 
i
 / 4;

1475 
bôNum
 = (
i
 % 4)<<1;

1476 
j
 = 0; j < 
h
; j++) {

1477 
uöt8_t
 
sour˚
 = *(
bôm≠
 + (
j
 * 
byãWidth
Ë+ 
byãNum
);

1478 
uöt8_t
 
ouçut
 = (
sour˚
 & (0xC0 >> 
bôNum
));

1479 
ouçut
 >>(6-
bôNum
);

1480 i‡(
ouçut
 !
övisibÀcﬁ‹
) {

1481 
	`£tCﬁ‹
(
ouçut
);

1482 
	`døwPixñ
(
x
 + 
i
, 
y
 + 
j
);

1491 i‡(
m_cﬁ‹dïth
==3) {

1492 
öt16_t
 
i
, 
j
, 
byãNum
, 
bôNum
, 
byãWidth
 = (
w
 + 7) >> 3;

1493 
öt16_t
 
bôFøme
 = 
w
 * 
h
 / 8;

1494 
i
 = 0; i < 
w
; i++) {

1495 
byãNum
 = 
i
 / 8;

1496 
bôNum
 = 
i
 % 8;

1498 
uöt8_t
 
bôcou¡
=0;

1499 
j
 = 0; j <
h
/8; j++) {

1500 
uöt8_t
 
r_vÆ
 = *(
bôm≠
 + 
j
 * 
byãWidth
 + 
byãNum
);

1501 
uöt8_t
 
g_vÆ
 = *(
bôm≠
 + 
bôFøme
 + 
j
 * 
byãWidth
 + 
byãNum
);

1502 
uöt8_t
 
b_vÆ
 = *(
bôm≠
 + (
bôFøme
<<1Ë+ 
j
 * 
byãWidth
 + 
byãNum
);

1503 
bôcou¡
=0; bitcount<8; bitcount++) {

1504 
uöt8_t
 
cﬁ
 = (
r_vÆ
&0x1Ë| ((
g_vÆ
&0x1)<<1Ë| ((
b_vÆ
&0x1)<<2);

1505 
r_vÆ
 >>1; 
g_vÆ
 >>1; 
b_vÆ
 >>= 1;

1506 
	`døwPixñ
(
x
 + 
i
, 
y
 + 
j
+
bôcou¡
,
cﬁ
);

1516 i‡(
m_cﬁ‹dïth
==4) {

1519 
öt16_t
 
s¸x
,
s¸y
,
x˛ù
,
xjump
,
s¸xjump
;

1520 
x˛ù
=
xjump
=
s¸xjump
=0;

1522 i‡(
y
<0Ë{ 
h
+=y; 
bôm≠
 -y*(
w
>>1); y=0;}

1523 i‡(
y
+
h
>
height
) { h -=(y-height);}

1525 i‡(
x
<0Ë{ 
x˛ù
=(x&1)<<1; 
w
+=x; 
xjump
 = ((-x)>>1); 
bôm≠
 += xjump; x=0;}

1526 i‡(
x
+
w
>
width
) {

1527 
x˛ù
 = (
x
&1)<<1;

1528 
s¸xjump
 = 
x
&1;

1529 
xjump
=((
x
+
w
-
width
)>>1)+
s¸xjump
;

1530 
w
 = 
width
-
x
;}

1532 
uöt8_t
* 
s¸±r
 = 
m_s¸buf
 + (
y
*(
width
>>1Ë+ (
x
>>1));

1534 
s¸y
 = 
y
; s¸y < y+
h
; scry+=1) {

1535 i‡(
s¸y
>=
height
) ;

1536 i‡((
x
&1)==0) {

1537 
s¸x
 = 
x
; s¸x < 
w
+x-
x˛ù
; scrx+=2) {

1538 
uöt8_t
 
sour˚pixñ
 = *
bôm≠
;

1539 i‡(
x˛ù
) {

1540 
sour˚pixñ
 <<=4;

1541 
sour˚pixñ
 |((*(
bôm≠
+1))>>4);

1543 
uöt8_t
 
èrgëpixñ
 = *
s¸±r
;

1544 i‡((
sour˚pixñ
>>4Ë!
övisibÀcﬁ‹
 ) 
èrgëpixñ
 = (targetpixel&0x0F) | (sourcepixel & 0xF0);

1545 i‡((
sour˚pixñ
&0x0FË!
övisibÀcﬁ‹
Ë
èrgëpixñ
 = (targetpixel & 0xF0) | (sourcepixel & 0x0F);

1546 *
s¸±r
 = 
èrgëpixñ
;

1547 
bôm≠
++;

1548 
s¸±r
++;

1550 i‡(
x˛ù
){

1551 i‡(
w
&1) {

1553 
uöt8_t
 
sour˚pixñ
 = *
bôm≠
;

1554 i‡((
sour˚pixñ
&0x0FË!
övisibÀcﬁ‹
) {

1555 
sour˚pixñ
 <<=4;

1556 
uöt8_t
 
èrgëpixñ
 = *
s¸±r
;

1557 
èrgëpixñ
 |
sour˚pixñ
;

1558 *
s¸±r
 = 
èrgëpixñ
;

1562 
bôm≠
++;

1563 
s¸±r
++;

1565 
bôm≠
 +
xjump
;

1567 
s¸x
 = 
x
; s¸x < 
w
+x-
x˛ù
; scrx+=2) {

1568 
uöt8_t
 
sour˚pixñ
 = *
bôm≠
;

1569 
uöt8_t
 
èrgëpixñ
 = *
s¸±r
;

1571 if((
sour˚pixñ
>>4)!=
övisibÀcﬁ‹
Ë
èrgëpixñ
 = (targetpixel & 0xF0) | (sourcepixel >> 4 );

1572 *
s¸±r
 = 
èrgëpixñ
;

1573 
s¸±r
++;

1574 
èrgëpixñ
 = *
s¸±r
;

1576 if((
sour˚pixñ
&0x0F)!=
övisibÀcﬁ‹
Ë
èrgëpixñ
 = (targetpixel & 0x0F) | (sourcepixel << 4);

1577 *
s¸±r
 = 
èrgëpixñ
;

1578 
bôm≠
++;

1580 
bôm≠
+=
xjump
;

1583 
s¸±r
 = s¸±∏+ ((
width
 - 
w
)>>1)+
s¸xjump
;

1591 i‡(
m_cﬁ‹dïth
==8) {

1592 
öt16_t
 
s¸x
,
s¸y
,
x˛ù
,
xjump
,
s¸xjump
;

1593 
x˛ù
=
xjump
=
s¸xjump
=0;

1595 i‡(
y
<0Ë{ 
h
+=y; 
bôm≠
 -y*
w
; y=0;}

1596 i‡(
y
+
h
>
height
) { h -=(y-height);}

1598 i‡(
x
<0Ë{ 
x˛ù
=x; 
w
+=x; 
xjump
 = (-x); 
bôm≠
 += xjump; x=0;}

1599 i‡(
x
+
w
>
width
) {

1600 
x˛ù
 = 
x
;

1601 
s¸xjump
 = 
x
;

1602 
xjump
=(
x
+
w
-
width
)+
s¸xjump
;

1603 
w
 = 
width
-
x
;}

1605 
uöt8_t
* 
s¸±r
 = 
m_s¸buf
 + (
y
*
width
 + 
x
);

1606 
s¸y
 = 
y
; s¸y < y+
h
; scry+=1) {

1607 i‡(
s¸y
>=
height
) ;

1608 
s¸x
 = 
x
; s¸x < 
w
+x; scrx++) {

1609 
uöt8_t
 
sour˚pixñ
 = *
bôm≠
;

1610 
uöt8_t
 
èrgëpixñ
 = *
s¸±r
;

1611 i‡(
sour˚pixñ
 !
övisibÀcﬁ‹
 ) 
èrgëpixñ
 = sourcepixel;

1612 *
s¸±r
 = 
èrgëpixñ
;

1613 
bôm≠
++;

1614 
s¸±r
++;

1616 
bôm≠
 +
xjump
;

1617 
s¸±r
 = s¸±∏+ (
width
 - 
w
)+
s¸xjump
;

1623 
	}
}

1625 
	gDi•œy
::
	$døwRÀBôm≠
(
öt16_t
 
x
, i¡16_à
y
, c⁄° 
uöt8_t
* 
æebôm≠
)

1628 #i‡(
POK_SCREENMODE
 !
MODE_FAST_16COLOR
)

1632 
öt16_t
 
w
 = *
æebôm≠
;

1633 
öt16_t
 
h
 = *(
æebôm≠
 + 1);

1634 
æebôm≠
 =Ñlebitmap + 2;

1637 i‡(
y
<-
h
 || y>
height
) ;

1638 i‡(
x
<-
w
 || x>
width
) ;

1641 i‡((
x
 < 0Ë|| (x+
w
 > 
width
Ë|| (
y
 < 0Ë|| (y+
h
 > 
height
)) ;

1644 i‡(
m_cﬁ‹dïth
 != 4)

1648 
uöt8_t
* 
s¸±r
 = 
m_s¸buf
 + (
y
*(
width
>>1Ë+ (
x
>>1));

1649 
boﬁ
 
is_ídofbôm≠
 = 
Ál£
;

1650 
öt16_t
 
s¸y
 = 
y
; s¸y < y+
h
 && !
is_ídofbôm≠
;) {

1653 
öt16_t
 
s¸x
 = 
x
;;) {

1654 
uöt8_t
 
æe_cou¡
 = *
æebôm≠
++;

1656 i‡(
æe_cou¡
 == 0) {

1660 
uöt8_t
 
æe_esˇ≥_‹_runsize
 = *
æebôm≠
++;

1661 i‡–
æe_esˇ≥_‹_runsize
 =
RLE_ESC_EOL
) {

1665 i‡–
æe_esˇ≥_‹_runsize
 =
RLE_ESC_EOB
) {

1667 
is_ídofbôm≠
 = 
åue
;

1670 i‡–
æe_esˇ≥_‹_runsize
 =
RLE_ESC_OFFSET
) {

1673 
uöt8_t
 
xoff£t
 = *
æebôm≠
++;

1674 
uöt8_t
 
yoff£t
 = *
æebôm≠
++;

1675 
s¸±r
 +(
xoff£t
>1);

1676 
s¸x
 +
xoff£t
;

1677 
s¸±r
 +
yoff£t
*
width
;

1678 
s¸y
 +
yoff£t
;

1684 
öt16_t
 
runsize
 = 
æe_esˇ≥_‹_runsize
;

1685 
uöt8_t
 
èrgëpixñ
 = *
s¸±r
;

1686 
uöt8_t
 
sour˚pixñ
 = *
æebôm≠
;

1687  
öt16_t
 
runx
 = 0;Ñunx < 
runsize
; ) {

1688 i‡(
s¸x
&0x1) {

1689 i‡(
runx
&0x1) {

1690 i‡((
sour˚pixñ
&0x0FË!
övisibÀcﬁ‹
)

1691 
èrgëpixñ
 = (èrgëpixñ&0xF0Ë| (
sour˚pixñ
&0x0F);

1692 
æebôm≠
++;

1695 i‡((
sour˚pixñ
>>4Ë!
övisibÀcﬁ‹
)

1696 
èrgëpixñ
 = (èrgëpixñ&0xF0Ë| (
sour˚pixñ
>>4);

1699 *
s¸±r
 = 
èrgëpixñ
;

1700 
s¸±r
++;

1703 
èrgëpixñ
 = *
s¸±r
;

1704 
sour˚pixñ
 = *
æebôm≠
;

1705 i‡(
runx
&0x1) {

1706 i‡((
sour˚pixñ
&0x0FË!
övisibÀcﬁ‹
 )

1707 
èrgëpixñ
 = (èrgëpixñ&0x0FË| ((
sour˚pixñ
<<4)&0xF0);

1708 
æebôm≠
++;

1711 i‡((
sour˚pixñ
>>4Ë!
övisibÀcﬁ‹
 )

1712 
èrgëpixñ
 = (èrgëpixñ&0x0FË| (
sour˚pixñ
&0xF0);

1714 
runx
++;

1715 
s¸x
++;

1719 i‡(
s¸x
&0x1) {

1720 *
s¸±r
 = 
èrgëpixñ
;

1721 
s¸±r
++;

1725 i‡(
runsize
%4) {

1726 
öt16_t
 
∑dpixcou¡
 = 4 - (
runsize
%4);

1727 
æebôm≠
 +
∑dpixcou¡
>>1;

1735 
öt16_t
 
runsize
 = 
æe_cou¡
;

1736 
uöt8_t
 
˛⁄ïixñ∑ú
 = *
æebôm≠
++;

1737 
uöt8_t
 
èrgëpixñ
 = *
s¸±r
;

1738  
öt16_t
 
runx
 = 0;Ñunx < 
runsize
; ) {

1739 i‡(
s¸x
&0x1) {

1740 i‡(
runx
&0x1) {

1741 i‡((
˛⁄ïixñ∑ú
&0x0FË!
övisibÀcﬁ‹
)

1742 
èrgëpixñ
 = (èrgëpixñ&0xF0Ë| (
˛⁄ïixñ∑ú
&0x0F);

1745 i‡((
˛⁄ïixñ∑ú
>>4Ë!
övisibÀcﬁ‹
)

1746 
èrgëpixñ
 = (èrgëpixñ&0xF0Ë| (
˛⁄ïixñ∑ú
>>4);

1749 *
s¸±r
 = 
èrgëpixñ
;

1750 
s¸±r
++;

1753 
èrgëpixñ
 = *
s¸±r
;

1754 i‡(
runx
&0x1) {

1755 i‡((
˛⁄ïixñ∑ú
&0x0FË!
övisibÀcﬁ‹
 )

1756 
èrgëpixñ
 = (èrgëpixñ&0x0FË| ((
˛⁄ïixñ∑ú
<<4)&0xF0);

1759 i‡((
˛⁄ïixñ∑ú
>>4Ë!
övisibÀcﬁ‹
 )

1760 
èrgëpixñ
 = (èrgëpixñ&0x0FË| (
˛⁄ïixñ∑ú
&0xF0);

1762 
runx
++;

1763 
s¸x
++;

1768 i‡(
s¸x
&0x1) {

1769 *
s¸±r
 = 
èrgëpixñ
;

1770 
s¸±r
++;

1776 
s¸±r
 = s¸±∏+ ((
width
 - 
w
)>>1);

1777 
s¸y
++;

1779 
	}
}

1781 
	gDi•œy
::
	$døwBôm≠XFlù≥d
(
öt16_t
 
x
, i¡16_à
y
, c⁄° 
uöt8_t
* 
bôm≠
)

1783 
öt16_t
 
w
 = *
bôm≠
;

1784 
öt16_t
 
h
 = *(
bôm≠
 + 1);

1785 
bôm≠
 = bitmap + 2;

1787 i‡(
y
<-
h
 || y>
height
) ;

1788 i‡(
x
<-
w
 || x>
width
) ;

1790 i‡(
m_cﬁ‹dïth
<2) {

1791 
öt16_t
 
i
, 
j
, 
byãNum
, 
bôNum
, 
byãWidth
 = (
w
 + 7) >> 3;

1792 
i
 = 0; i < 
w
; i++) {

1793 
byãNum
 = 
i
 / 8;

1794 
bôNum
 = 
i
 % 8;

1795 
j
 = 0; j < 
h
; j++) {

1796 
uöt8_t
 
sour˚
 = *(
bôm≠
 + 
j
 * 
byãWidth
 + 
byãNum
);

1797 i‡(
sour˚
 & (0x80 >> 
bôNum
)) {

1798 
	`døwPixñ
(
x
 + 
w
 - 
i
, 
y
 + 
j
);

1806 i‡(
m_cﬁ‹dïth
<4) {

1807 
öt16_t
 
i
, 
j
, 
byãNum
, 
bôNum
, 
byãWidth
 = 
w
 >> 2;

1808 
i
 = 0; i < 
w
; i++) {

1809 
byãNum
 = 
i
 / 4;

1810 
bôNum
 = (
i
 % 4)<<1;

1811 
j
 = 0; j < 
h
; j++) {

1812 
uöt8_t
 
sour˚
 = *(
bôm≠
 + 
j
 * 
byãWidth
 + 
byãNum
);

1813 
uöt8_t
 
ouçut
 = (
sour˚
 & (0xC0 >> 
bôNum
));

1814 
ouçut
 >>(6-
bôNum
);

1815 i‡(
ouçut
 !
övisibÀcﬁ‹
) {

1816 
	`£tCﬁ‹
(
ouçut
);

1817 
	`døwPixñ
(
x
 + 
i
, 
y
 + 
j
);

1825 
öt16_t
 
s¸x
,
s¸y
,
x˛ù
,
xjump
,
s¸xjump
;

1826 
x˛ù
=
xjump
=
s¸xjump
=0;

1828 i‡(
y
<0Ë{ 
h
+=y; 
bôm≠
 -y*(
w
>>1); y=0;}

1829 i‡(
y
+
h
>
height
) { h -=(y-height);}

1831 
bôm≠
 +((
w
>>1)-1);

1832 i‡(
x
<0) {

1833 
x˛ù
=(
x
&1)<<1;

1834 
w
+=
x
;

1835 
xjump
 = ((-
x
)>>1);

1837 
x
=0;

1839 i‡(
x
+
w
>
width
) {

1840 
x˛ù
 = (
x
&1)<<1;

1841 
s¸xjump
 = 
x
&1;

1842 
xjump
=((
x
+
w
-
width
)>>1)+
s¸xjump
;

1843 
w
 = 
width
-
x
;}

1846 
uöt8_t
* 
s¸±r
 = 
m_s¸buf
 + (
y
*(
width
>>1Ë+ (
x
>>1));

1848 
s¸y
 = 
y
; s¸y < y+
h
; scry+=1) {

1850 i‡(
s¸y
>=
height
) ;

1851 i‡((
x
&1)==0) {

1853 
s¸x
 = 
x
; s¸x < 
w
+x-
x˛ù
; scrx+=2) {

1854 
uöt8_t
 
sour˚pixñ
 = *(
bôm≠
);

1855 i‡(
x˛ù
) {

1856 
sour˚pixñ
 <<=4;

1857 
sour˚pixñ
 |((*(
bôm≠
-1))>>4);

1859 
uöt8_t
 
èrgëpixñ
 = *
s¸±r
;

1861 i‡((
sour˚pixñ
>>4Ë!
övisibÀcﬁ‹
 ) 
èrgëpixñ
 = (targetpixel&0xF0) | (sourcepixel>>4);

1862 i‡((
sour˚pixñ
&0x0FË!
övisibÀcﬁ‹
Ë
èrgëpixñ
 = (targetpixel & 0x0F) | (sourcepixel<<4);

1863 *
s¸±r
 = 
èrgëpixñ
;

1864 
bôm≠
--;

1865 
s¸±r
++;

1867 
bôm≠
 +
w
;

1868 i‡(
x˛ù
){

1869 i‡(
w
&1) {

1871 
uöt8_t
 
sour˚pixñ
 = *
bôm≠
;

1872 i‡((
sour˚pixñ
&0x0FË!
övisibÀcﬁ‹
) {

1873 
sour˚pixñ
 <<=4;

1874 
uöt8_t
 
èrgëpixñ
 = *
s¸±r
;

1875 
èrgëpixñ
 |
sour˚pixñ
;

1876 *
s¸±r
 = 
èrgëpixñ
;

1880 
bôm≠
++;

1881 
s¸±r
++;

1883 
bôm≠
 +
xjump
;

1885 
s¸x
 = 
x
; s¸x < 
w
+x-
x˛ù
; scrx+=2 ) {

1886 
uöt8_t
 
sour˚pixñ
 = *
bôm≠
;

1887 
uöt8_t
 
èrgëpixñ
 = *
s¸±r
;

1889 if((
sour˚pixñ
&0x0F)!=
övisibÀcﬁ‹
Ë
èrgëpixñ
 = (targetpixel & 0xF0) | (sourcepixel & 0x0F );

1890 *
s¸±r
 = 
èrgëpixñ
;

1891 
s¸±r
++;

1892 
èrgëpixñ
 = *
s¸±r
;

1894 if((
sour˚pixñ
>>4)!=
övisibÀcﬁ‹
Ë
èrgëpixñ
 = (targetpixel & 0x0F) | (sourcepixel & 0xF0);

1895 *
s¸±r
 = 
èrgëpixñ
;

1896 
bôm≠
--;

1898 
bôm≠
 +
w
;

1899 
bôm≠
+=
xjump
;

1902 
s¸±r
 = s¸±∏+ ((
width
 - 
w
)>>1)+
s¸xjump
;

1904 
	}
}

1906 
	gDi•œy
::
	$døwBôm≠
(
öt16_t
 
x
, i¡16_à
y
, c⁄° 
uöt8_t
 *
bôm≠
, uöt8_à
rŸ©i⁄
, uöt8_à
Êù
) {

1907 #i‡
PROJ_GAMEBUINO
 == 0

1908 i‡(!
Êù
Ë
	`døwBôm≠
(
x
,
y
,
bôm≠
);

1909 
	`døwBôm≠XFlù≥d
(
x
,
y
,
bôm≠
);

1911 if((
rŸ©i⁄
 =
NOROT
Ë&& (
Êù
 =
NOFLIP
)){

1912 
	`døwBôm≠
(
x
,
y
,
bôm≠
);

1915 
uöt8_t
 
w
 = 
bôm≠
[0];

1916 
uöt8_t
 
h
 = 
bôm≠
[1];

1917 
bôm≠
 = bitmap + 2;

1918 
öt8_t
 
i
, 
j
,

1919 
k
, 
l
,

1920 
byãNum
, 
bôNum
, 
byãWidth
 = (
w
 + 7) >> 3;

1922 
rŸ©i⁄
 %= 4;

1924 
i
 = 0; i < 
w
; i++) {

1925 
byãNum
 = 
i
 / 8;

1926 
bôNum
 = 
i
 % 8;

1927 
j
 = 0; j < 
h
; j++) {

1928 i‡(
bôm≠
[
j
 * 
byãWidth
 + 
byãNum
] & (
B10000000
 >> 
bôNum
)) {

1929 
rŸ©i⁄
) {

1930 
NOROT
:

1931 
k
 = 
i
;

1932 
l
 = 
j
;

1934 
ROTCCW
:

1935 
k
 = 
j
;

1936 
l
 = 
w
 - 
i
 - 1;

1938 
ROT180
:

1939 
k
 = 
w
 - 
i
 - 1;

1940 
l
 = 
h
 - 
j
 - 1;

1942 
ROTCW
:

1943 
k
 = 
h
 - 
j
 - 1;

1944 
l
 = 
i
;

1947 i‡(
Êù
) {

1948 
Êù
 %= 4;

1949 i‡(
Êù
 & 
B00000001
) {

1950 
k
 = 
w
 - k;

1952 i‡(
Êù
 & 
B00000010
) {

1953 
l
 = 
h
 -Ü;

1956 
k
 +
x
;

1957 
l
 +
y
;

1958 
	`døwPixñ
(
k
, 
l
);

1964 
	}
}

1966 
uöt8_t
* 
	gDi•œy
::
	$gëBuf„r
() {

1967  
m_s¸buf
;

1968 
	}
}

1970 
uöt8_t
 
	gDi•œy
::
	$gëBôm≠Pixñ
(c⁄° 
uöt8_t
* 
bôm≠
, 
uöt16_t
 
x
, uöt16_à
y
) {

1971 
uöt16_t
 
w
 = *
bôm≠
;

1972 
uöt8_t
 
sour˚byã
 = 
bôm≠
[2+(
y
 * ((
w
+7)>>3))+ (
x
>>3)];

1973  
sour˚byã
 & (0x80>>(
x
&7));

1974 
	}
}

1976 
	gDi•œy
::
	$¥öt_ch¨
(
uöt8_t
 
x
, uöt8_à
y
, 
c
) {

1977 
c
 -
f⁄t
[2];

1978 i‡(
m_mode
Ë 
	`dúe˘Ch¨
(
x
,
y
,
c
);

1979  
	`buf„rCh¨
(
x
,
y
,
c
);

1980 
	}
}

1982 
	gDi•œy
::
	$døwCh¨
(
öt8_t
 
x
, i¡8_à
y
, 
c
, 
uöt8_t
 
size
) {

1983 
	`¥öt_ch¨
(
x
,
y
,
c
);

1985 
	}
}

1988 
boﬁ
 
	gDi•œy
::
	$isDúe˘PrötögE«bÀd
() {

1989  
m_mode
;

1990 
	}
}

1992 
	gDi•œy
::
	$íabÀDúe˘Prötög
(
uöt8_t
 
m
) {

1993 i‡(
m
) {

1994 
m_mode
=
åue
;

1995 
m_w
 = 
POK_LCD_W
;

1996 
m_h
 = 
POK_LCD_H
;

1998 
m_mode
=
Ál£
;

1999 
m_w
 = 
	`gëWidth
();

2000 
m_h
 = 
	`gëHeight
();

2002 
	}
}

2004 
	gDi•œy
::
	$wrôe
(
uöt8_t
 
c
) {

2005 
ch¨°ï
=0;

2006 if(
f⁄t
[3]) {

2008 i‡(
c
>=97) c-=32;

2010 
c
) {

2014 
curs‹X
 = 0;

2015 
	`öc_txéöe
();

2018 
curs‹X
 -
f⁄t
[0];

2019 
ch¨°ï
=
	`¥öt_ch¨
(
curs‹X
,
curs‹Y
,' ');

2022 
curs‹X
 = 0;

2028 i‡(
curs‹X
 >(
m_w
 - 
f⁄t
[0])) {

2029 
curs‹X
 = 0;

2030 i‡(
ãxtWøp
Ë
	`öc_txéöe
();

2032 
ch¨°ï
=
	`¥öt_ch¨
(
curs‹X
,
curs‹Y
,
c
);

2035 
ch¨°ï
=
	`¥öt_ch¨
(
curs‹X
,
curs‹Y
,
c
);

2036 #i‚de‡
FULLWIDTHSPACES


2037 i‡(
c
==' ' && 
adju°Ch¨Sãp
Ë
ch¨°ï
=(charstep>>1)+1;

2039 
curs‹X
 +
ch¨°ï
;

2041 
	}
}

2043 
	gDi•œy
::
	$öc_txéöe
() {

2044 i‡(
curs‹Y
 > 
m_h
 - 2*
f⁄t
[1])

2045 #i‡
SCROLL_TEXT
 > 0

2046 
	`s¸ﬁl
(
f⁄t
[1] + 
adju°LöeSãp
);

2048 
curs‹Y
 = 0;

2051 
curs‹Y
 +
f⁄t
[1] + 
adju°LöeSãp
;

2052 
	}
}

2055 
	gDi•œy
::
	$wrôe
(c⁄° *
°r
)

2057 *
°r
)

2058 
	`wrôe
(*
°r
++);

2059 
	}
}

2062 
	gDi•œy
::
	$wrôe
(c⁄° 
uöt8_t
 *
buf„r
, uöt8_à
size
)

2064 
size
--)

2065 
	`wrôe
(*
buf„r
++);

2066 
	}
}

2068 
	gDi•œy
::
	$¥öt
(c⁄° 
°r
[])

2070 
	`wrôe
(
°r
);

2071 
	}
}

2073 
	gDi•œy
::
	$¥öt
(
c
, 
ba£
)

2075 
	`¥öt
((Ë
c
, 
ba£
);

2076 
	}
}

2078 
	gDi•œy
::
	$¥öt
(
b
, 
ba£
)

2080 
	`¥öt
((Ë
b
, 
ba£
);

2081 
	}
}

2083 
	gDi•œy
::
	$¥öt
(
n
, 
ba£
)

2085 
	`¥öt
((Ë
n
, 
ba£
);

2086 
	}
}

2088 
	gDi•œy
::
	$¥öt
(
n
, 
ba£
)

2090 
	`¥öt
((Ë
n
, 
ba£
);

2091 
	}
}

2093 
	gDi•œy
::
	$¥öt
(
n
, 
ba£
)

2095 i‡(
ba£
 == 0) {

2096 
	`wrôe
(
n
);

2097 } i‡(
ba£
 == 10) {

2098 i‡(
n
 < 0) {

2099 
	`¥öt
('-');

2100 
n
 = -n;

2102 
	`¥ötNumbî
(
n
, 10);

2104 
	`¥ötNumbî
(
n
, 
ba£
);

2106 
	}
}

2108 
	gDi•œy
::
	$¥öt
(
n
, 
ba£
)

2110 i‡(
ba£
 =0Ë
	`wrôe
(
n
);

2111 
	`¥ötNumbî
(
n
, 
ba£
);

2112 
	}
}

2114 
	gDi•œy
::
	$¥öt
(
n
, 
digôs
)

2116 
	`¥ötFlﬂt
(
n
, 
digôs
);

2117 
	}
}

2119 
	gDi•œy
::
	$¥öén
()

2121 
	`¥öt
('\r');

2122 
	`¥öt
('\n');

2123 
	}
}

2125 
	gDi•œy
::
	$¥öén
(c⁄° 
c
[])

2127 
	`¥öt
(
c
);

2128 
	`¥öén
();

2129 
	}
}

2131 
	gDi•œy
::
	$¥öén
(
c
, 
ba£
)

2133 
	`¥öt
(
c
, 
ba£
);

2134 
	`¥öén
();

2135 
	}
}

2137 
	gDi•œy
::
	$¥öén
(
b
, 
ba£
)

2139 
	`¥öt
(
b
, 
ba£
);

2140 
	`¥öén
();

2141 
	}
}

2143 
	gDi•œy
::
	$¥öén
(
n
, 
ba£
)

2145 
	`¥öt
(
n
, 
ba£
);

2146 
	`¥öén
();

2147 
	}
}

2149 
	gDi•œy
::
	$¥öén
(
n
, 
ba£
)

2151 
	`¥öt
(
n
, 
ba£
);

2152 
	`¥öén
();

2153 
	}
}

2155 
	gDi•œy
::
	$¥öén
(
n
, 
ba£
)

2157 
	`¥öt
(
n
, 
ba£
);

2158 
	`¥öén
();

2159 
	}
}

2161 
	gDi•œy
::
	$¥öén
(
n
, 
ba£
)

2163 
	`¥öt
(
n
, 
ba£
);

2164 
	`¥öén
();

2165 
	}
}

2167 
	gDi•œy
::
	$¥öén
(
n
, 
digôs
)

2169 
	`¥öt
(
n
, 
digôs
);

2170 
	`¥öén
();

2171 
	}
}

2173 
	gDi•œy
::
	$£t_curs‹
(
uöt8_t
 
x
, uöt8_à
y
) {

2174 
curs‹X
 = 
x
;

2175 
curs‹Y
 = 
y
;

2176 
	}
}

2178 
	gDi•œy
::
	$¥öt
(
uöt8_t
 
x
, uöt8_à
y
, c⁄° 
°r
[]) {

2179 
curs‹X
 = 
x
;

2180 
curs‹Y
 = 
y
;

2181 
	`wrôe
(
°r
);

2183 
	}
}

2184 
	gDi•œy
::
	$¥öt
(
uöt8_t
 
x
, uöt8_à
y
, 
c
, 
ba£
) {

2185 
curs‹X
 = 
x
;

2186 
curs‹Y
 = 
y
;

2187 
	`¥öt
((Ë
c
, 
ba£
);

2188 
	}
}

2189 
	gDi•œy
::
	$¥öt
(
uöt8_t
 
x
, uöt8_à
y
, 
b
, 
ba£
) {

2190 
curs‹X
 = 
x
;

2191 
curs‹Y
 = 
y
;

2192 
	`¥öt
((Ë
b
, 
ba£
);

2193 
	}
}

2194 
	gDi•œy
::
	$¥öt
(
uöt8_t
 
x
, uöt8_à
y
, 
n
, 
ba£
) {

2195 
curs‹X
 = 
x
;

2196 
curs‹Y
 = 
y
;

2197 
	`¥öt
((Ë
n
, 
ba£
);

2198 
	}
}

2199 
	gDi•œy
::
	$¥öt
(
uöt8_t
 
x
, uöt8_à
y
, 
n
, 
ba£
) {

2200 
curs‹X
 = 
x
;

2201 
curs‹Y
 = 
y
;

2202 
	`¥öt
((Ë
n
, 
ba£
);

2203 
	}
}

2204 
	gDi•œy
::
	$¥öt
(
uöt8_t
 
x
, uöt8_à
y
, 
n
, 
ba£
) {

2205 
curs‹X
 = 
x
;

2206 
curs‹Y
 = 
y
;

2207 
	`¥öt
(
n
,
ba£
);

2208 
	}
}

2209 
	gDi•œy
::
	$¥öt
(
uöt8_t
 
x
, uöt8_à
y
, 
n
, 
ba£
) {

2210 
curs‹X
 = 
x
;

2211 
curs‹Y
 = 
y
;

2212 
	`¥öt
(
n
,
ba£
);

2213 
	}
}

2214 
	gDi•œy
::
	$¥öt
(
uöt8_t
 
x
, uöt8_à
y
, 
n
, 
digôs
) {

2215 
curs‹X
 = 
x
;

2216 
curs‹Y
 = 
y
;

2217 
	`¥öt
(
n
,
digôs
);

2218 
	}
}

2220 
	gDi•œy
::
	$¥öén
(
uöt8_t
 
x
, uöt8_à
y
, c⁄° 
c
[])

2222 
curs‹X
 = 
x
;

2223 
curs‹Y
 = 
y
;

2224 
	`¥öt
(
c
);

2225 
	`¥öén
();

2226 
	}
}

2228 
	gDi•œy
::
	$¥öén
(
uöt8_t
 
x
, uöt8_à
y
, 
c
, 
ba£
)

2230 
curs‹X
 = 
x
;

2231 
curs‹Y
 = 
y
;

2232 
	`¥öt
(
c
, 
ba£
);

2233 
	`¥öén
();

2234 
	}
}

2236 
	gDi•œy
::
	$¥öén
(
uöt8_t
 
x
, uöt8_à
y
, 
b
, 
ba£
)

2238 
curs‹X
 = 
x
;

2239 
curs‹Y
 = 
y
;

2240 
	`¥öt
(
b
, 
ba£
);

2241 
	`¥öén
();

2242 
	}
}

2244 
	gDi•œy
::
	$¥öén
(
uöt8_t
 
x
, uöt8_à
y
, 
n
, 
ba£
)

2246 
curs‹X
 = 
x
;

2247 
curs‹Y
 = 
y
;

2248 
	`¥öt
(
n
, 
ba£
);

2249 
	`¥öén
();

2250 
	}
}

2252 
	gDi•œy
::
	$¥öén
(
uöt8_t
 
x
, uöt8_à
y
, 
n
, 
ba£
)

2254 
curs‹X
 = 
x
;

2255 
curs‹Y
 = 
y
;

2256 
	`¥öt
(
n
, 
ba£
);

2257 
	`¥öén
();

2258 
	}
}

2260 
	gDi•œy
::
	$¥öén
(
uöt8_t
 
x
, uöt8_à
y
, 
n
, 
ba£
)

2262 
curs‹X
 = 
x
;

2263 
curs‹Y
 = 
y
;

2264 
	`¥öt
(
n
, 
ba£
);

2265 
	`¥öén
();

2266 
	}
}

2268 
	gDi•œy
::
	$¥öén
(
uöt8_t
 
x
, uöt8_à
y
, 
n
, 
ba£
)

2270 
curs‹X
 = 
x
;

2271 
curs‹Y
 = 
y
;

2272 
	`¥öt
(
n
, 
ba£
);

2273 
	`¥öén
();

2274 
	}
}

2276 
	gDi•œy
::
	$¥öén
(
uöt8_t
 
x
, uöt8_à
y
, 
n
, 
digôs
)

2278 
curs‹X
 = 
x
;

2279 
curs‹Y
 = 
y
;

2280 
	`¥öt
(
n
, 
digôs
);

2281 
	`¥öén
();

2282 
	}
}

2284 
	gDi•œy
::
	$¥ötNumbî
(
n
, 
uöt8_t
 
ba£
)

2286 
buf
[8 * ()];

2287 
i
 = 0;

2289 i‡(
n
 == 0) {

2290 
	`¥öt
('0');

2294 
n
 > 0) {

2295 
buf
[
i
++] = 
n
 % 
ba£
;

2296 
n
 /
ba£
;

2299 ; 
i
 > 0; i--)

2300 
	`¥öt
((Ë(
buf
[
i
 - 1] < 10 ?

2301 '0' + 
buf
[
i
 - 1] :

2302 'A' + 
buf
[
i
 - 1] - 10));

2303 
	}
}

2305 
	gDi•œy
::
	$¥ötFlﬂt
(
numbî
, 
uöt8_t
 
digôs
)

2308 i‡(
numbî
 < 0.0)

2310 
	`¥öt
('-');

2311 
numbî
 = -number;

2315 
roundög
 = 0.5;

2316 
uöt8_t
 
i
=0; i<
digôs
; ++i)

2317 
roundög
 /= 10.0;

2319 
numbî
 +
roundög
;

2322 
öt_∑π
 = ()
numbî
;

2323 
ªmaödî
 = 
numbî
 - ()
öt_∑π
;

2324 
	`¥öt
(
öt_∑π
);

2327 i‡(
digôs
 > 0)

2328 
	`¥öt
(".");

2331 
digôs
-- > 0)

2333 
ªmaödî
 *= 10.0;

2334 
toPröt
 = (
ªmaödî
);

2335 
	`¥öt
(
toPröt
);

2336 
ªmaödî
 -
toPröt
;

2338 
	}
}

2340 
	gDi•œy
::
	$døw4BôCﬁumn
(
öt16_t
 
x
, i¡16_à
y
, 
uöt8_t
 
h
, uöt8_t* 
bôm≠
)

2342 
öt8_t
 
s¸y
;

2343 
uöt8_t
* 
s¸±r
 = 
m_s¸buf
 + (
y
*(
width
>>1Ë+ (
x
>>1));

2347 i‡((
x
&1)==0) {

2348 
s¸y
 = 
y
; s¸y < 
h
+y; scry++) {

2349 
uöt8_t
 
sour˚pixñ
 = *
bôm≠
;

2350 
uöt8_t
 
èrgëpixñ
 = *
s¸±r
;

2351 
èrgëpixñ
 = (èrgëpixñ&0x0FË| (
sour˚pixñ
 << 4);

2352 *
s¸±r
 = 
èrgëpixñ
;

2353 
bôm≠
++;

2354 
s¸±r
+=55;

2357 
s¸y
 = 
y
; s¸y < 
h
+y; scry++) {

2358 
uöt8_t
 
sour˚pixñ
 = *
bôm≠
;

2359 
uöt8_t
 
èrgëpixñ
 = *
s¸±r
;

2361 
èrgëpixñ
 = (èrgëpixñ & 0xF0Ë| (
sour˚pixñ
);

2362 *
s¸±r
 = 
èrgëpixñ
;

2363 
s¸±r
+=55;

2364 
bôm≠
++;

2367 
	}
}

2381 
	gDi•œy
::
	$£tS¥ôeBôm≠
(
uöt8_t
 
ödex
, c⁄° uöt8_t* 
bôm≠
, c⁄° 
uöt16_t
* 
∑Àâe4x16bô
, 
öt16_t
 
x
, i¡16_à
y
, 
boﬁ
 
doRe£tDútyRe˘
 ) {

2383 
	`£tS¥ôe
(
ödex
, &(
bôm≠
[2]), 
∑Àâe4x16bô
, 
x
, 
y
, bôm≠[0], bôm≠[1], 
doRe£tDútyRe˘
);

2384 
	}
}

2399 
	gDi•œy
::
	$£tS¥ôe
(
uöt8_t
 
ödex
, c⁄° uöt8_t* 
d©a
, c⁄° 
uöt16_t
* 
∑Àâe4x16bô
, 
öt16_t
 
x
, i¡16_à
y
, uöt8_à
w
, uöt8_à
h
, 
boﬁ
 
doRe£tDútyRe˘
 ) {

2401 if(
ödex
 >
SPRITE_COUNT
) ;

2402 
m_•rôes
[
ödex
].
bôm≠D©a
 = 
d©a
;

2403 
m_•rôes
[
ödex
].
x
 = x;

2404 
m_•rôes
[
ödex
].
y
 = y;

2405 i‡(
doRe£tDútyRe˘
) {

2406 
m_•rôes
[
ödex
].
ﬁdx
 = 
x
;

2407 
m_•rôes
[
ödex
].
ﬁdy
 = 
y
;

2409 
m_•rôes
[
ödex
].
w
 = w;

2410 
m_•rôes
[
ödex
].
h
 = h;

2411 if–
∑Àâe4x16bô
 ) 
	`mem˝y
(
m_•rôes
[
ödex
].
∑Àâe
,Öalette4x16bit, 4*2);

2412 
	}
}

2420 
	gDi•œy
::
	$£tS¥ôePos
(
uöt8_t
 
ödex
, 
öt16_t
 
x
, i¡16_à
y
) {

2422 if(
ödex
 >
SPRITE_COUNT
) ;

2423 
m_•rôes
[
ödex
].
x
 = x;

2424 
m_•rôes
[
ödex
].
y
 = y;

2425 
	}
}

2427 
	gDi•œy
::
	$lcdRe‰esh
(* 
s¸
, 
boﬁ
 
u£Dúe˘DøwMode
) {

2429 #i‡
POK_SCREENMODE
 =
MODE_HI_4COLOR


2431 i‡(
m_•rôes
[0].
bôm≠D©a
 !
NULL
)

2432 
	`lcdRe‰eshMode1S¥
(
s¸
, 0, 0, 
LCDWIDTH
, 
LCDHEIGHT
, 
∑Àâïå
, 
m_•rôes
, 
u£Dúe˘DøwMode
);

2433 i‡(!
u£Dúe˘DøwMode
)

2434 
	`lcdRe‰eshMode1
(
m_s¸buf
, 0, 0, 
LCDWIDTH
, 
LCDHEIGHT
, 
∑Àâïå
);

2438 i‡(
u£Dúe˘DøwMode
) ;

2439 #i‡
POK_SCREENMODE
 =
MODE13


2440 
	`lcdRe‰eshMode13
(
m_s¸buf
, 
∑Àâïå
, 
∑lOff£t
);

2443 #i‡
POK_SCREENMODE
 =
MODE_GAMEBOY


2444 
	`lcdRe‰eshModeGBC
(
s¸
, 
∑Àâïå
);

2447 #i‡
POK_SCREENMODE
 =
MODE_FAST_16COLOR


2448 
	`lcdRe‰eshMode2
(
s¸
, 
∑Àâïå
);

2451 #i‡
POK_SCREENMODE
 =
MODE_GAMEBUINO_16COLOR


2452 
	`lcdRe‰eshGB
(
s¸
, 
∑Àâïå
);

2455 #i‡
POK_SCREENMODE
 =
MODE_ARDUBOY_16COLOR


2456 
	`lcdRe‰eshAB
(
s¸
, 
∑Àâïå
);

2459 
	}
}

2461 
	gDi•œy
::
	$£tFømeBuf„rTo
(
uöt8_t
* 
sb
) {

2462 
m_s¸buf
 = 
sb
;

2463 
	}
};

2465 
	gDi•œy
::
	$£tTûeBuf„rTo
(
uöt8_t
* 
tb
) {

2466 
m_tûebuf
 = 
tb
;

2467 
	}
};

2469 
	gDi•œy
::
	$lﬂdTûe£t
(c⁄° 
uöt8_t
* 
ts
) {

2470 
m_tûe£t
 = (
uöt8_t
*Ë
ts
;

2471 
	}
};

2473 
	gDi•œy
::
	$£tTûe
(
uöt16_t
 
i
, 
uöt8_t
 
t
) {

2474 i‡(!
m_tûebuf
) ;

2475 
m_tûebuf
[
i
]=
t
;

2476 
	}
};

2479 * 
	$ôﬂ_hex
(
num
, * 
de°
, 
de°Lí
) {

2480 
i
 = 
de°Lí
-1;

2482 
c
 = (
num
 % 16) + '0';

2483 i‡(
c
 > '9') c += 7;

2484 
de°
[
i
--] = 
c
;

2485 
num
 /= 16;

2486 } 
num
 && 
i
 >= 0);

2487  &(
de°
[
i
+1]);

2488 
	}
}

2491 
	$ShowCøshS¸ìnAndWaô
–c⁄° * 
ãxLöe1
, c⁄° * 
ãxLöe2
, c⁄° * 
ãxLöe3
, c⁄° * 
ãxLöe4
, c⁄° * 
ãxLöe5
 ) {

2494 
	`lcdFûlSurÁ˚
(
COLOR_RED
);

2497 
Di•œy
::
dúe˘cﬁ‹
 = 
COLOR_WHITE
;

2498 
Di•œy
::
övisibÀcﬁ‹
 = 
COLOR_RED
;

2499 
Di•œy
::
dúe˘bgcﬁ‹
 = 
COLOR_RED
;

2500 
Di•œy
::
dúe˘ãxåŸ©ed
 = 
Ál£
;

2501 
Di•œy
::
adju°Ch¨Sãp
 = 0;

2502 
Di•œy
::
adju°LöeSãp
 = 0;

2503 
Di•œy
::
	`£tF⁄t
(
‚tC64UIGfx
);

2504 
Di•œy
::
fixedWidthF⁄t
 = 
åue
;

2505 
Di•œy
::
	`íabÀDúe˘Prötög
(
åue
);

2508 
yOff£tInPixñs
 = 5;

2509 
Di•œy
::
	`£t_curs‹
(0, 9 + 
yOff£tInPixñs
);

2510 
Di•œy
::
	`¥öt
(" "); Di•œy::
	`¥öén
(
ãxLöe1
);

2511 
Di•œy
::
	`¥öt
(" "); Di•œy::
	`¥öén
(
ãxLöe2
);

2512 
Di•œy
::
	`¥öt
(" "); Di•œy::
	`¥öén
(
ãxLöe3
);

2513 
Di•œy
::
	`¥öén
();

2514 
Di•œy
::
	`¥öt
(" *"); Di•œy::
	`¥öén
(
ãxLöe4
);

2515 
Di•œy
::
	`¥öt
(" *"); Di•œy::
	`¥öén
(
ãxLöe5
);

2517 
Di•œy
::
	`£t_curs‹
(0, 0 + 
yOff£tInPixñs
);

2520 
Di•œy
::
	`¥öén
("ábbbbbbbbbbbbbbbbbbbbbbbbc");

2521 
Di•œy
::
	`¥öt
 (" |"); Di•œy::
	`¥öén
(26*8, Di•œy::
curs‹Y
,"|");

2522 
Di•œy
::
	`¥öt
 (" |"); Di•œy::
	`¥öén
(26*8, Di•œy::
curs‹Y
,"|");

2523 
Di•œy
::
	`¥öt
 (" |"); Di•œy::
	`¥öén
(26*8, Di•œy::
curs‹Y
,"|");

2524 
Di•œy
::
	`¥öt
 (" |"); Di•œy::
	`¥öén
(26*8, Di•œy::
curs‹Y
,"|");

2525 
Di•œy
::
	`¥öt
 (" |"); Di•œy::
	`¥öén
(26*8, Di•œy::
curs‹Y
,"|");

2526 
Di•œy
::
	`¥öt
 (" |"); Di•œy::
	`¥öén
(26*8, Di•œy::
curs‹Y
,"|");

2527 
Di•œy
::
	`¥öén
(" dbbbzybbbbbbbbbbbbbbbbbbbe");

2528 
Di•œy
::
	`¥öén
(" {e");

2531 
Di•œy
::
	`¥öén
 ("");

2532 
Di•œy
::
	`¥öén
 (" ijkl");

2533 
Di•œy
::
	`¥öén
 (" mnop");

2534 
Di•œy
::
	`¥öén
 (" qrst");

2535 
Di•œy
::
	`¥öén
 (" uvwx");

2539 
	}
}

2542 
	$CheckSèck
() {

2543 #i‚de‡
POK_SIM


2544 #i‚de‡
__ARMCC_VERSION


2545 
cuºSèckT›
;

2546 c⁄° 
‰ìSèckThªshﬁd
 = 200;

2547 i‡(()&
cuºSèckT›
 - ()
_ebss
 < 
‰ìSèckThªshﬁd
) {

2550 c⁄° 
öfoSåögLí
 = 8+1+8;

2551 
öfoSåög
[
öfoSåögLí
+1];

2552 
	`mem£t
(
öfoSåög
,0,
öfoSåögLí
+1);

2553 c⁄° 
°ackSize
 = ()
_vSèckT›
 - ()&
cuºSèckT›
;

2554 c⁄° 
tmpSåLí
 = 8;

2555 
tmpSå
[
tmpSåLí
+1];

2556 
	`mem£t
(
tmpSå
,0,
tmpSåLí
+1);

2557 * 
subSå
 = 
	`ôﬂ_hex
(
°ackSize
, 
tmpSå
, 
tmpSåLí
);

2558 
	`°rˇt
(
öfoSåög
, 
subSå
);

2559 
	`°rˇt
(
öfoSåög
, ":");

2560 
subSå
 = 
	`ôﬂ_hex
(()&
cuºSèckT›
, 
tmpSå
, 
tmpSåLí
);

2561 
	`°rˇt
(
öfoSåög
, 
subSå
);

2564 c⁄° * 
ãxLöe1
 = "OOPS! PLEASE, RESTART";

2565 c⁄° * 
ãxLöe2
 = "POKITTO OR RELOAD";

2566 c⁄° * 
ãxLöe3
 = "SOFTWARE.";

2567 c⁄° * 
ãxLöe4
 = "STACK TOO BIG!";

2568 
	`ShowCøshS¸ìnAndWaô
(
ãxLöe1
, 
ãxLöe2
, 
ãxLöe3
, 
ãxLöe4
, 
öfoSåög
);

2572 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoDisplay.h

68 #i‚de‡
POKITTODISPLAY_H


69 
	#POKITTODISPLAY_H


	)

71 
	~<°döt.h
>

72 
	~"Pokôto_£âögs.h
"

73 
	~"PokôtoGlobs.h
"

74 
	~"PokôtoF⁄ts.h
"

75 
	~"PokôtoPÆëãs.h
"

78 
	#COLOR_BLACK
 (
uöt16_t
)(0x0000)

	)

79 
	#COLOR_BLUE
 (
uöt16_t
)(0x001F)

	)

80 
	#COLOR_RED
 (
uöt16_t
)(0xF800)

	)

81 
	#COLOR_GREEN
 (
uöt16_t
)(0x07E0)

	)

82 
	#COLOR_CYAN
 (
uöt16_t
)(0x07FF)

	)

83 
	#COLOR_MAGENTA
 (
uöt16_t
)(0xF81F)

	)

84 
	#COLOR_YELLOW
 (
uöt16_t
)(0xFFE0)

	)

85 
	#COLOR_WHITE
 (
uöt16_t
)(0xFFFF)

	)

88 
	#COLOR_GRAY_15
 (
uöt16_t
)(0x0861)

89 
	#COLOR_GRAY_30
 (
uöt16_t
)(0x18E3)

90 
	#COLOR_GRAY_50
 (
uöt16_t
)(0x3186)

91 
	#COLOR_GRAY_80
 (
uöt16_t
)(0x528A)

92 
	#COLOR_GRAY_128
 (
uöt16_t
)(0x8410)

93 
	#COLOR_GRAY_200
 (
uöt16_t
)(0xCE59)

94 
	#COLOR_GRAY_225
 (
uöt16_t
)(0xE71C)

95 

	)

98 
	edefcﬁ‹s
 {

99 
	mC_BLACK
,

100 
	mC_DARKBLUE
,

101 
	mC_PURPLE
,

102 
	mC_DARKGREEN
,

104 
	mC_BROWN
,

105 
	mC_DARKBROWN
,

106 
	mC_LIGHTGRAY
,

107 
	mC_WHITE
,

109 
	mC_RED
,

110 
	mC_ORANGE
,

111 
	mC_YELLOW
,

112 
	mC_GREEN
,

114 
	mC_BLUE
,

115 
	mC_DARKGRAY
,

116 
	mC_PINK
,

117 
	mC_PEACH


120 c⁄° 
uöt16_t
 
	gdef565∑Àâe
[16] = {

128 
	#PALETTE_SIZE
 256

	)

129 
	~<°döt.h
>

130 
	~<°dlib.h
>

131 
	~<°rög.h
>

134 
«me•a˚
 
	gPokôto
 {

136 ˛as†
	cDi•œy
 {

137 
	gpublic
:

138 
Di•œy
();

141 
	g¥iv©e
:

142 
uöt8_t
* 
ˇnvas
;

143 
uöt8_t
 
	gbµ
;

144 
uöt8_t
 
	gm_cﬁ‹dïth
;

145 
	gpublic
:

146 
uöt8_t
 
∑lOff£t
;

147 
uöt8_t
 
	gwidth
;

148 
uöt8_t
 
	gheight
;

149 
uöt8_t
 
	gs¸ìnbuf„r
[];

152 
£tCﬁ‹Dïth
(
uöt8_t
);

153 
uöt8_t
 
gëCﬁ‹Dïth
();

154 
uöt8_t
 
gëBôsPîPixñ
();

155 
uöt16_t
 
gëWidth
();

156 
uöt16_t
 
gëHeight
();

157 
uöt8_t
 
gëNumbîOfCﬁ‹s
();

161 c⁄° * 
	gf⁄t
;

163 
uöt8_t
 
	g≥rsi°í˚
;

165 
uöt16_t
 
	gcﬁ‹
;

167 
uöt16_t
 
	gbgcﬁ‹
;

169 
uöt16_t
 
	gövisibÀcﬁ‹
;

171 
uöt16_t
 
	gdúe˘cﬁ‹
;

173 
uöt16_t
 
	gdúe˘bgcﬁ‹
;

175 
boﬁ
 
	gdúe˘ãxåŸ©ed
;

177 
öt16_t
 
	g˛ùX
;

178 
öt16_t
 
	g˛ùY
;

179 
öt16_t
 
	g˛ùW
;

180 
öt16_t
 
	g˛ùH
;

182 
£tCﬁ‹
(
uöt8_t
);

184 
£tCﬁ‹
(
uöt8_t
,uint8_t);

186 
£tInvisibÀCﬁ‹
(
uöt16_t
);

188 
uöt8_t
 
gëCﬁ‹
();

190 
uöt8_t
 
gëBgCﬁ‹
();

192 
uöt16_t
 
gëInvisibÀCﬁ‹
();

194 
£tClùRe˘
(
öt16_t
 
x
, i¡16_à
y
, i¡16_à
w
, i¡16_à
h
);

197 
begö
();

199 
˛ór
();

201 
s¸ﬁl
(
öt16_t
);

203 
fûlS¸ìn
(
uöt16_t
);

205 
upd©e
(
boﬁ
 
u£Dúe˘Mode
=
Ál£
, 
uöt8_t
 
updRe˘X
=0, uöt8_à
updRe˘Y
=0, uöt8_à
updRe˘W
=
LCDWIDTH
, uöt8_à
updRe˘H
=
LCDHEIGHT
);

207 
lcdRe‰esh
(*, 
boﬁ
 
u£Dúe˘Mode
=
Ál£
);

209 
˛órLCD
();

211 
fûlLCD
(
uöt16_t
);

213 
showLogo
();

215 
£tFømeBuf„rTo
(
uöt8_t
*);

218 
	gpublic
:

220 
£tDeÁu…PÆëã
();

222 
uöt16_t
 
	g∑Àâe
[
PALETTE_SIZE
];

224 
uöt16_t
 *
	g∑Àâïå
;

226 
uöt16_t
 
RGBto565
(
uöt8_t
,uint8_t,uint8_t);

228 
uöt16_t
 
öãΩﬁ©eCﬁ‹
(uöt16_t, uöt16_t, 
uöt8_t
);

230 
lﬂdRGBPÆëã
(const *);

232 
lﬂd565PÆëã
(c⁄° 
uöt16_t
*);

234 
rŸ©ePÆëã
(
öt8_t
);

236 
twìnPÆëã
(
uöt16_t
*, c⁄° uöt16_t*, c⁄° uöt16_t*, 
uöt8_t
);

240 
dúe˘Pixñ
(
öt16_t
,öt16_t,
uöt16_t
);

242 
dúe˘Tûe
(
öt16_t
 
x
, i¡16_à
y
, i¡16_à
x2
, i¡16_à
y2
, 
uöt16_t
* 
gfx
);

244 
dúe˘Re˘™gÀ
(
öt16_t
, i¡16_t,öt16_t, i¡16_t, 
uöt16_t
);

246 
£tCurs‹
(
öt16_t
,int16_t);

248 
dúe˘Bôm≠
(
öt16_t
,öt16_t,c⁄° 
uöt8_t
*, uint8_t,uint8_t);

253 
døwPixñ
(
öt16_t
,int16_t);

255 
døwPixñ
(
öt16_t
 
x
,öt16_à
y
, 
uöt8_t
 
cﬁ
);

257 
uöt8_t
 
gëPixñ
(
öt16_t
,int16_t);

259 
døwLöe
(
öt16_t
,int16_t,int16_t,int16_t);

261 
uöt8_t
 
˛ùLöe
(
öt16_t
*, int16_t*, int16_t*, int16_t*);

263 
døwCﬁumn
(
öt16_t
, int16_t, int16_t);

265 
m≠1BôCﬁumn
(
öt16_t
, i¡16_t, i¡16_t, c⁄° 
uöt8_t
*, 
uöt16_t
);

267 
døwRow
(
öt16_t
, int16_t, int16_t);

269 
døwFa°VLöe
(
öt16_t
, int16_t, int16_t);

271 
døwFa°HLöe
(
öt16_t
, int16_t, int16_t);

273 
døwRe˘™gÀ
(
öt16_t
,int16_t,int16_t,int16_t);

275 
fûlRe˘™gÀ
(
öt16_t
,int16_t,int16_t,int16_t);

277 
fûlRe˘
(
öt16_t
 
x
, i¡16_à
y
, i¡16_à
w
, i¡16_à
h
);

279 
døwRe˘
(
öt16_t
 
x
, i¡16_à
y
, i¡16_à
w
, i¡16_à
h
);

283 
døwCú˛e
(
öt16_t
 
x0
, i¡16_à
y0
, i¡16_à
r
);

285 
døwCú˛eHñ≥r
(
öt16_t
 
x0
, i¡16_à
y0
, i¡16_à
r
, 
uöt16_t
 
c‹√∫ame
);

287 
fûlCú˛e
(
öt16_t
 
x0
, i¡16_à
y0
, i¡16_à
r
);

289 
fûlCú˛eHñ≥r
(
öt16_t
 
x0
, i¡16_à
y0
, i¡16_à
r
, 
uöt16_t
 
c‹√∫ame
, i¡16_à
dñè
);

291 
døwTrüngÀ
(
öt16_t
 
x0
, i¡16_à
y0
, i¡16_à
x1
, i¡16_à
y1
, i¡16_à
x2
, i¡16_à
y2
);

293 
fûlTrüngÀ
(
öt16_t
 
x0
, i¡16_à
y0
, i¡16_à
x1
, i¡16_à
y1
, i¡16_à
x2
, i¡16_à
y2
);

295 
døwRoundRe˘
(
öt16_t
 
x0
, i¡16_à
y0
, i¡16_à
w
, i¡16_à
h
, i¡16_à
ødius
);

297 
fûlRoundRe˘
(
öt16_t
 
x0
, i¡16_à
y0
, i¡16_à
w
, i¡16_à
h
, i¡16_à
ødius
);

301 
døwM⁄oBôm≠
(
öt16_t
 
x
, i¡16_à
y
, c⁄° 
uöt8_t
* 
bôm≠
, uöt8_à
ödex
);

303 
døwBôm≠D©a
(
öt16_t
 
x
, i¡16_à
y
, i¡16_à
w
, i¡16_à
h
, c⁄° 
uöt8_t
* 
bôm≠
);

305 
døwBôm≠
(
öt16_t
 
x
, i¡16_à
y
, c⁄° 
uöt8_t
* 
bôm≠
);

307 
døwRÀBôm≠
(
öt16_t
 
x
, i¡16_à
y
, c⁄° 
uöt8_t
* 
bôm≠
);

309 
døwBôm≠
(
öt16_t
 
x
, i¡16_à
y
, c⁄° 
uöt8_t
* 
bôm≠
, uöt8_à
‰ame
);

311 
døwBôm≠XFlù≥d
(
öt16_t
 
x
, i¡16_à
y
, c⁄° 
uöt8_t
* 
bôm≠
);

313 
døwBôm≠
(
öt16_t
 
x
, i¡16_à
y
, c⁄° 
uöt8_t
 *
bôm≠
, uöt8_à
rŸ©i⁄
, uöt8_à
Êù
);

315 
uöt8_t
* 
gëBuf„r
();

317 
uöt8_t
 
gëBôm≠Pixñ
(c⁄° uöt8_t*, 
uöt16_t
, uint16_t);

319 
døw4BôCﬁumn
(
öt16_t
 
x
, i¡16_à
y
, 
uöt8_t
 
h
, uöt8_t* 
bôm≠
);

323 
£tS¥ôeBôm≠
(
uöt8_t
 
ödex
, c⁄° uöt8_t* 
bôm≠
, c⁄° 
uöt16_t
* 
∑Àâe4x16bô
, 
öt16_t
 
x
, i¡16_à
y
, 
boﬁ
 
doRe£tDútyRe˘
=
åue
 );

325 
£tS¥ôe
(
uöt8_t
 
ödex
, c⁄° uöt8_t* 
d©a
, c⁄° 
uöt16_t
* 
∑Àâe4x16bô
, 
öt16_t
 
x
, i¡16_à
y
, uöt8_à
w
, uöt8_à
h
, 
boﬁ
 
doRe£tDútyRe˘
=
åue
 );

327 
£tS¥ôePos
(
uöt8_t
 
ödex
, 
öt16_t
 
x
, i¡16_à
y
);

331 
dúe˘Ch¨
(
öt16_t
, i¡16_t, 
uöt16_t
);

333 
buf„rCh¨
(
öt16_t
, i¡16_t, 
uöt16_t
);

335 
£tF⁄t
(c⁄° * 
f
);

337 
uöt8_t
 
	gf⁄tWidth
, 
	gf⁄tHeight
;

339 
boﬁ
 
	gãxtWøp
;

341 
døwCh¨
(
öt8_t
 
x
, i¡8_à
y
, 
c
, 
uöt8_t
 
size
);

343 
íabÀDúe˘Prötög
(
uöt8_t
 
m
);

344 
boﬁ
 
isDúe˘PrötögE«bÀd
();

345 
¥öt_ch¨
(
uöt8_t
 
x
, uöt8_à
y
, 
c
);

346 
£t_curs‹
(
uöt8_t
, uint8_t);

347 
wrôe
(
uöt8_t
);

348 
wrôe
(c⁄° *
°r
);

349 
wrôe
(c⁄° 
uöt8_t
 *
buf„r
, uöt8_à
size
);

350 
¥öt
(const []);

351 
¥öt
(, 
ba£
 = 0);

352 
¥öt
(, 
ba£
 = 0);

353 
¥öt
(, 
ba£
 = 10);

354 
¥öt
(, 
ba£
 = 10);

355 
¥öt
(, 
ba£
 = 10);

356 
¥öt
(, 
ba£
 = 10);

357 
¥öt
(, 
ba£
 = 2);

358 
¥öt
(
uöt8_t
, uint8_t, const []);

359 
¥öt
(
uöt8_t
, uint8_t, , = 0);

360 
¥öt
(
uöt8_t
, uint8_t, , = 0);

361 
¥öt
(
uöt8_t
, uint8_t, , = 10);

362 
¥öt
(
uöt8_t
, uint8_t, , = 10);

363 
¥öt
(
uöt8_t
, uint8_t, , = 10);

364 
¥öt
(
uöt8_t
, uint8_t, , = 10);

365 
¥öt
(
uöt8_t
, uint8_t, , = 2);

366 
¥öén
(
uöt8_t
, uint8_t, const []);

367 
¥öén
(
uöt8_t
, uint8_t, , = 0);

368 
¥öén
(
uöt8_t
, uint8_t, , = 0);

369 
¥öén
(
uöt8_t
, uint8_t, , = 10);

370 
¥öén
(
uöt8_t
, uint8_t, , = 10);

371 
¥öén
(
uöt8_t
, uint8_t, , = 10);

372 
¥öén
(
uöt8_t
, uint8_t, , = 10);

373 
¥öén
(
uöt8_t
, uint8_t, , = 2);

374 
¥öén
(
uöt8_t
, uint8_t);

375 
¥öén
(const []);

376 
¥öén
(, = 0);

377 
¥öén
(, = 0);

378 
¥öén
(, = 10);

379 
¥öén
(, = 10);

380 
¥öén
(, = 10 );

381 
¥öén
(, = 10);

382 
¥öén
(, = 2);

383 
¥öén
();

385 
öt16_t
 
	gcurs‹X
,
	gcurs‹Y
;

386 
uöt8_t
 
	gf⁄tSize
;

387 
öt8_t
 
	gadju°Ch¨Sãp
, 
	gadju°LöeSãp
;

388 
boﬁ
 
	gfixedWidthF⁄t
;

390 
öc_txéöe
();

391 
¥ötNumbî
(, 
uöt8_t
);

392 
¥ötFlﬂt
(, 
uöt8_t
);

396 
lﬂdTûe£t
(c⁄° 
uöt8_t
*);

398 
£tTûeBuf„rTo
(
uöt8_t
*);

399 
˛órTûeBuf„r
();

400 
shi·TûeBuf„r
(
öt8_t
,int8_t);

402 
£tTûe
(
uöt16_t
,
uöt8_t
);

403 
uöt8_t
 
gëTûe
(
uöt16_t
);

404 
uöt8_t
 
gëTûe
(uint8_t,uint8_t);

408 
	g¥iv©e
:

409 
uöt8_t
 
m_mode
;

410 
uöt16_t
 
	gm_w
,
	gm_h
;

412 
uöt8_t
* 
	gm_s¸buf
;

414 
uöt8_t
* 
	gm_tûe£t
;

416 
uöt8_t
* 
	gm_tûebuf
;

418 
uöt8_t
* 
	gm_tûecﬁ‹buf
;

420 
S¥ôeInfo
 
	gm_•rôes
[
SPRITE_COUNT
];

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoFakeavr.h

37 #i‚de‡
_POKITTO_FAKEAVR_H_


38 
	#_POKITTO_FAKEAVR_H_


	)

40 
	~"PokôtoItﬂ.h
"

41 
	~"bö¨y.h
"

42 
	~<°döt.h
>

43 
	~<°dlib.h
>

45 #ifde‡
POK_SIM


46 
	~<°dboﬁ.h
>

48 
	~<°dboﬁ.h
>

51 
	#_BV
(
bô
) (1 << (bit))

52 

	)

54 #i‚de‡
_RPCNDR_H


55 
boﬁ
 
	tboﬁón
;

57 
uöt8_t
 
	tbyã
;

60 
	#PROGMEM


	)

64 
	#•rötf_P
 
•rötf


	)

65 
	#°r°r_P
 
°r°r


	)

66 
	#°r˝y_P
 
°r˝y


	)

68 
	#utﬂ
 
pokItﬂ


	)

69 
	#u…ﬂ
 
pokItﬂ


	)

72 
	#PROGMEM


	)

73 
	#pgm_ªad_byã
(
addr
Ë(*(c⁄° *)◊ddr))

	)

74 #i‚de‡
WIN32


75 
	#pgm_ªad_w‹d
(
addr
Ë(*◊ddr))

	)

77 
	#pgm_ªad_w‹d
(
addr
Ë(*(c⁄° *)◊ddr))

	)

83 #i‚de‡
DISABLEAVRMIN


84 
	#max
(
a
,
b
Ë(◊)>(b)?◊):(b))

	)

85 
	#mö
(
a
,
b
Ë(◊)<(b)?◊):(b))

	)

87 
	#__avrmax
(
a
,
b
Ë(◊)>(b)?◊):(b))

	)

88 
	#__avrmö
(
a
,
b
Ë(◊)<(b)?◊):(b))

	)

89 
	#c⁄°øö
(
amt
,
low
,
high
Ë(◊mt)<÷ow)?÷ow):(◊mt)>(high)?(high):◊mt)))

	)

90 
	#mö2
(
a
,
b
Ë((◊)<(b))?◊):(b))

	)

94 #ifde‡
__˝lu•lus


98 
˛i
();

99 
£i
();

101 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoFonts.h

37 #i‚de‡
POK_FONTS_H


38 
	#POK_FONTS_H


	)

40 
	~"Pokôto_£âögs.h
"

42 c⁄° 
f⁄tMöi
[];

43 c⁄° 
f⁄tD⁄ut
[];

44 c⁄° 
f⁄tDøg⁄
[];

45 c⁄° 
f⁄tK¨©eka
[];

46 c⁄° 
f⁄tKoubô
[];

47 c⁄° 
f⁄tRu√s
[];

48 c⁄° 
f⁄tTight
[];

49 c⁄° 
f⁄tTöy
[];

50 c⁄° 
f⁄tAdvítuªr
[];

51 c⁄° 
f⁄t5x7
[];

52 c⁄° 
f⁄t3x5
[];

53 c⁄° 
f⁄t3x3
[];

54 c⁄° 
f⁄tC64
[];

55 c⁄° 
‚tC64UIGfx
[];

56 c⁄° 
f⁄tZXS≥c
[];

57 c⁄° 
f⁄tTIC806x6
[];

58 c⁄° 
f⁄tM⁄key
[];

60 #i‡
POK_GAMEBUINO_SUPPORT
 > 0

61 
	#DEFAULT_FONT
 
f⁄t3x5


	)

63 
	#DEFAULT_FONT
 
f⁄t5x7


	)

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoGlobs.h

37 #i‚de‡
POKITTO_GLOBS_H


38 
	#POKITTO_GLOBS_H


	)

40 
	~<°döt.h
>

42 #ifde‡
POK_SIM


43 
	~"SimLCD.h
"

44 
	~"SimSound.h
"

45 
	~"PokôtoSimuœt‹.h
"

47 
	~"mbed.h
"

48 
	~"HWLCD.h
"

49 
	~"HWSound.h
"

52 
øndom
();

53 
øndom
(,);

55 
	#HIGH
 1

	)

56 
	#LOW
 0

	)

58 
	#sw≠WT
(
ty≥
, 
a
, 
b
) \

60 
ty≥
 
_t_
; \

61 
_t_
 = 
a
; \

62 
a
 = 
b
; \

63 
b
 = 
_t_
; \

64 }

	)

66 
	#SAMPLE_RATE
 
POK_AUD_FREQ


67 
	#NUMFRAMES
 570

68 

	)

71 
ÁkeISR
();

72 
audio_IRQ
();

73 
upd©e_SDAudioSåóm
();

74 
uöt16_t
 
soundbyã
;

76 #i‡
POK_STREAMING_MUSIC


77 
	#SPEAKER
 3

	)

79 
buf„rs
[][
BUFFER_SIZE
];

80 vﬁ©ûê
cuºítBuf„r
, 
ﬁdBuf„r
;

81 vﬁ©ûê
bufödex
, 
vﬁ
;

82 vﬁ©ûê* 
cuºítPå
;

83 vﬁ©ûê* 
ídPå
;

84 
öt8_t
 
°ªamvﬁ
;

85 
uöt32_t
 
°ªamcou¡î
;

86 
uöt8_t
 
°ªam°ï
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoItoa.cpp

37 
	~"PokôtoItﬂ.h
"

38 
	~<°rög.h
>

39 
	~<°döt.h
>

42 
	$pokItﬂ
(
uöt16_t
 
vÆue
, *
°r
, 
ba£
)

52 *
p
 = 
°r
;

53 
uöt8_t
 
v
;

54 i‡(
vÆue
 > 499)

56 i‡(
vÆue
 > 799)

58 i‡(
vÆue
 > 999)

62 *
p
++ = '1';

63 *
p
++ = '0';

64 
uöt8_t
 
v
 = 
vÆue
 - 1000;

66 i‡(
v
 > 19Ë{ *
p
++ = '2'; v -= 20; }

67 i‡(
v
 > 9Ë{ *
p
++ = '1'; v -= 10; }

68 { *
p
++ = '0'; }

70 *
p
++ = 
v
 + '0';

71 *
p
 = 0;

75 i‡(
vÆue
 > 899Ë{ *
p
++ = '9'; 
v
 = value - 900; }

76 { *
p
++ = '8'; 
v
 = 
vÆue
 - 800; }

80 i‡(
vÆue
 > 699Ë{ *
p
++ = '7'; 
v
 = value - 700; }

81 i‡(
vÆue
 > 599Ë{ *
p
++ = '6'; 
v
 = value - 600; }

82 { *
p
++ = '5'; 
v
 = 
vÆue
 - 500; }

87 i‡(
vÆue
 > 299)

89 i‡(
vÆue
 > 399Ë{ *
p
++ = '4'; 
v
 = value - 400; }

90 { *
p
++ = '3'; 
v
 = 
vÆue
 - 300; }

94 i‡(
vÆue
 > 199Ë{ *
p
++ = '2'; 
v
 = value - 200; }

95 i‡(
vÆue
 > 99Ë{ *
p
++ = '1'; 
v
 = value - 100; }

96 { 
v
 = 
vÆue
; }

100 i‡(
v
 > 49)

102 i‡(
v
 > 69)

104 i‡(
v
 > 89Ë{ *
p
++ = '9'; v -= 90; }

105 i‡(
v
 > 79Ë{ *
p
++ = '8'; v -= 80; }

106 { *
p
++ = '7'; 
v
 -= 70; }

110 i‡(
v
 > 59Ë{ *
p
++ = '6'; v -= 60; }

111 { *
p
++ = '5'; 
v
 -= 50; }

116 i‡(
v
 > 19)

118 i‡(
v
 > 39Ë{ *
p
++ = '4'; v -= 40; }

119 i‡(
v
 > 29Ë{ *
p
++ = '3'; v -= 30; }

120 { *
p
++ = '2'; 
v
 -= 20; }

124 i‡(
v
 > 9Ë{ *
p
++ = '1'; v -= 10; }

125 i‡(
p
 !
°r
) { *p++ = '0'; }

129 *
p
++ = 
v
 + '0';

130 *
p
 = 0;

131 
	}
}

133 
	$pokUtﬂ
(
uöt16_t
 
vÆue
, *
°r
, 
ba£
) {

134 
	`pokItﬂ
(
vÆue
,
°r
,
ba£
);

135 
	}
}

137 
	$pokLtﬂ
(
vÆue
, *
°r
, 
ba£
) {

138 
	`pokItﬂ
(
vÆue
,
°r
,
ba£
);

139 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoItoa.h

38 #i‚de‡
POKITTO_ITOA_H


39 
	#POKITTO_ITOA_H


	)

41 
	~<°döt.h
>

45 
pokItﬂ
(
uöt16_t
, *,);

46 
pokUtﬂ
(
öt16_t
, *,);

47 
pokLtﬂ
(, *,);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoLogos.cpp

38 
	~"PokôtoLogos.h
"

40 c⁄° 
uöt8_t
 
	gPokôto_•ókî
[] = {

45 c⁄° 
uöt8_t
 
	gPokôto_hódph⁄es
[] = {

50 c⁄° 
uöt8_t
 
	gPokôto_vﬁumeb¨
[] = {

55 c⁄° 
uöt8_t
 
	gPokôto_logo
[] = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoLogos.h

37 #i‚de‡
POKITTO_LOGOS_H


38 
	#POKITTO_LOGOS_H


	)

40 
	~<°döt.h
>

42 c⁄° 
uöt8_t
 
Pokôto_logo
[];

43 c⁄° 
uöt8_t
 
Pokôto_hódph⁄es
[];

44 c⁄° 
uöt8_t
 
Pokôto_•ókî
[];

45 c⁄° 
uöt8_t
 
Pokôto_vﬁumeb¨
[];

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoPalette.cpp

37 
	~"PokôtoDi•œy.h
"

38 
	~"Pokôto_£âögs.h
"

39 
	~"GBcom∑tibûôy.h
"

40 
	~<°dio.h
>

41 
	~<°rög.h
>

43 #i‚de‡
POK_SIM


44 
	~"HWLCD.h
"

46 
	~"SimLCD.h
"

49 #i‚de‡
PROJ_MODE13


50 
	#PALSIZE
 16

	)

52 
	#PALSIZE
 256

	)

55 
usög
 
«me•a˚
 
	gPokôto
;

58 
	gDi•œy
::
	$lﬂdRGBPÆëã
(c⁄° * 
p
) {

59 
i
=0;i<
PALSIZE
;i++Ë
∑Àâe
[i] = 
	`RGBto565
(
p
[i*3],Ö[i*3+1],p[i*3+2]);

60 
∑Àâïå
 = 
∑Àâe
;

61 
	}
}

63 
	gDi•œy
::
	$lﬂd565PÆëã
(c⁄° 
uöt16_t
* 
p
) {

64 
i
=0;i<
PALSIZE
;i++Ë
∑Àâe
[i] = 
p
[i];

65 
∑Àâïå
 = 
∑Àâe
;

66 
	}
}

68 
	gDi•œy
::
	$rŸ©ePÆëã
(
öt8_t
 
°ï
) {

69 
uöt16_t
 
çÆ
[
PALSIZE
];

70 i‡(
°ï
 == 0) ;

71 
°ï
 = 0-step;

72 i‡(
°ï
>0) {

73 
i
=
°ï
;i<
PALSIZE
;i++Ë
çÆ
[i]=
∑Àâe
[i-step];

74 
i
=0; i < 
°ï
; i++Ë
çÆ
[i]=
∑Àâe
[
PALSIZE
-step+i];

76 
i
=0;i<
PALSIZE
+
°ï
;i++)

78 
çÆ
[
i
]=
∑Àâe
[i-
°ï
];

80 
i
=0;i<-
°ï
; i++) {

81 
çÆ
[
PALSIZE
+
°ï
+
i
]=
∑Àâe
[i];

85 
i
=0; i<
PALSIZE
;i++Ë
∑Àâe
[i] = 
çÆ
[i];

86 
	}
}

88 
uöt16_t
 
	gDi•œy
::
	$RGBto565
(
uöt8_t
 
R
,uöt8_à
G
,uöt8_à
B
) {

89 
uöt16_t
 
cﬁ‹
;

90 
cﬁ‹
 = 
B
>>3;

91 
cﬁ‹
 |((
G
 >> 2) << 5);

92 
cﬁ‹
 |((
R
 >> 3) << 11);

93  
cﬁ‹
;

94 
	}
}

96 
uöt16_t
 
	gDi•œy
::
	$öãΩﬁ©eCﬁ‹
(
uöt16_t
 
c1
, uöt16_à
c2
, 
uöt8_t
 
Á˘‹
) {

97 
öt16_t
 
R
,
G
,
B
;

98 
öt16_t
 
dR
,
dG
,
dB
;

99 
uöt16_t
 
cﬁ‹
;

101 
B
 = (
c1
 & 0x1F);

102 
dB
 = (
c2
 & 0x1F)-
B
;

103 
dB
 = (dB*
Á˘‹
)>>8;

104 
B
 +
dB
;

105 i‡(
B
<0) B = 0;

107 
G
 = ((
c1
>>5) & 0x3F);

108 
dG
 = ((
c2
>>5Ë& 0x3F)-
G
;

109 
dG
 = (dG*
Á˘‹
)>>8;

110 
G
 +
dG
;

111 i‡(
G
<0) G=0;

113 
R
 = (
c1
>>11);

114 
dR
 = (
c2
>>11)-
R
;

115 
dR
 = (dR*
Á˘‹
)>>8;

116 
R
 +
dR
;

117 i‡(
R
<0) R=0;

119 
cﬁ‹
 = 
B
;

120 
cﬁ‹
 |(
G
 << 5);

121 
cﬁ‹
 |(
R
 << 11);

122  
cﬁ‹
;

123 
	}
}

125 
	gDi•œy
::
	$twìnPÆëã
(
uöt16_t
* 
øm_∑l
, c⁄° uöt16_t* 
∑l_1
, c⁄° uöt16_t* 
∑l_2
, 
uöt8_t
 
Á˘‹
) {

126 
uöt8_t
 
i
 = 0; i<16 ; i++) {

127 
øm_∑l
[
i
] = 
	`öãΩﬁ©eCﬁ‹
(
∑l_1
[i],
∑l_2
[i],
Á˘‹
);

129 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoPalettes.h

1 #i‚de‡
POK_PALETTES_H


2 
	#POK_PALETTES_H


	)

4 
	~"Pokôto_£âögs.h
"

6 c⁄° 
∑ÀâeDeÁu…
[];

7 c⁄° 
∑ÀâeCGA
[];

8 c⁄° 
∑ÀâeNe⁄
[];

9 c⁄° 
∑ÀâePico
[];

10 c⁄° 
∑ÀâeC›≥r
[];

11 c⁄° 
∑ÀâeA˘i⁄
[];

12 c⁄° 
∑ÀâeMagma
[];

13 c⁄° 
∑ÀâeRaöbow
[];

14 c⁄° 
∑ÀâeM⁄o
[];

15 c⁄° 
∑ÀâeGameboy
[];

16 c⁄° 
∑ÀâeZXS≥c
[];

17 c⁄° 
∑ÀâeDB16
[];

20 
	#POK_DEFAULT_PALETTE
 
∑ÀâeCGA


	)

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoSound.cpp

64 
	~"PokôtoSound.h
"

65 
	~"Pokôto_£âögs.h
"

66 
	~"PokôtoC‹e.h
"

67 
	~"Sy¡h.h
"

69 #i‚de‡
POK_SIM


70 
	~"HWSound.h
"

72 
	~"SimSound.h
"

73 
	~"PokôtoSimuœt‹.h
"

76 
uöt8_t
 
	tbyã
;

78 
usög
 
«me•a˚
 
	gPokôto
;

82 
uöt8_t
 
	gPokôto
::
dis¸ëe_vﬁ
 = 0;

83 
uöt8_t
 c⁄° 
	gPokôto
::
dis¸ëe_vﬁ_Àvñs
[8] {0,32,64,96,128,160,192,224};

84 
uöt8_t
 c⁄° 
	gPokôto
::
dis¸ëe_vﬁ_hw_Àvñs
[8] {0,27,64,96,36,117,127,127};

85 
uöt8_t
 c⁄° 
	gPokôto
::
dis¸ëe_vﬁ_mu…ùlõrs
[8] {0,127,127,127,192,192,255,255};

87 
	gPokôto
::
C‹e
 
_soundc
;

89 
uöt8_t
 
	gSound
::
¥esˇÀr
;

90 
uöt16_t
 
	gSound
::
globÆVﬁume
;

91 
uöt16_t
 
	gSound
::
vﬁumeMax
 = 
VOLUME_HEADPHONE_MAX
;

92 
uöt8_t
 
	gSound
::
hódPh⁄eLevñ
=1;

94 
boﬁ
 
	gSound
::
åackIsPœyög
[
NUM_CHANNELS
];

95 
boﬁ
 
	gSound
::
∑âînIsPœyög
[
NUM_CHANNELS
];

96 
uöt8_t
 
	gSound
::
ouçutPôch
[
NUM_CHANNELS
];

97 
öt8_t
 
	gSound
::
ouçutVﬁume
[
NUM_CHANNELS
];

99 
uöt16_t
 *
	gSound
::
åackD©a
[
NUM_CHANNELS
];

100 
uöt8_t
 
	gSound
::
åackCurs‹
[
NUM_CHANNELS
];

101 
uöt16_t
 **
	gSound
::
∑âînSë
[
NUM_CHANNELS
];

102 
öt8_t
 
	gSound
::
∑âînPôch
[
NUM_CHANNELS
];

105 
uöt16_t
 *
	gSound
::
∑âînD©a
[
NUM_CHANNELS
];

106 
uöt16_t
 **
	gSound
::
ö°rumítSë
[
NUM_CHANNELS
];

107 
boﬁ
 
	gSound
::
∑âînLo›ög
[
NUM_CHANNELS
];

108 
uöt16_t
 
	gSound
::
∑âînCurs‹
[
NUM_CHANNELS
];

111 
uöt8_t
 
	gSound
::
nŸePôch
[
NUM_CHANNELS
];

112 
uöt8_t
 
	gSound
::
nŸeDuøti⁄
[
NUM_CHANNELS
];

113 
öt8_t
 
	gSound
::
nŸeVﬁume
[
NUM_CHANNELS
];

114 
boﬁ
 
	gSound
::
nŸePœyög
[
NUM_CHANNELS
];

117 
öt8_t
 
	gSound
::
comm™dsCou¡î
[
NUM_CHANNELS
];

118 
öt8_t
 
	gSound
::
vﬁumeSlideSãpDuøti⁄
[
NUM_CHANNELS
];

119 
öt8_t
 
	gSound
::
vﬁumeSlideSãpSize
[
NUM_CHANNELS
];

120 
uöt8_t
 
	gSound
::
¨≥ggioSãpDuøti⁄
[
NUM_CHANNELS
];

121 
öt8_t
 
	gSound
::
¨≥ggioSãpSize
[
NUM_CHANNELS
];

122 
uöt8_t
 
	gSound
::
åemﬁoSãpDuøti⁄
[
NUM_CHANNELS
];

123 
öt8_t
 
	gSound
::
åemﬁoSãpSize
[
NUM_CHANNELS
];

126 
uöt16_t
 *
	gSound
::
ö°rumítD©a
[
NUM_CHANNELS
];

127 
uöt8_t
 
	gSound
::
ö°rumítLígth
[
NUM_CHANNELS
];

128 
uöt8_t
 
	gSound
::
ö°rumítLo›ög
[
NUM_CHANNELS
];

129 
uöt16_t
 
	gSound
::
ö°rumítCurs‹
[
NUM_CHANNELS
];

130 
uöt8_t
 
	gSound
::
ö°rumítNextCh™ge
[
NUM_CHANNELS
];

133 
öt8_t
 
	gSound
::
°ïVﬁume
[
NUM_CHANNELS
];

134 
uöt8_t
 
	gSound
::
°ïPôch
[
NUM_CHANNELS
];

135 
uöt8_t
 
	gSound
::
ch™Vﬁumes
[
NUM_CHANNELS
];

137 #i‡(
POK_ENABLE_SOUND
 < 1)

138 
	#NUM_CHANNELS
 0

	)

141 #if(
NUM_CHANNELS
 > 0)

142 #i‚de‡
POK_SIM


143 
uöt32_t
 
	gsbyã
;

145 
uöt32_t
 
	gsbyã
;

146 
	gpwm1
;

150 
uöt8_t
 
	g_ønd
 = 1;

151 
uöt8_t
 
	g_ch™Cou¡
[
NUM_CHANNELS
];

152 
boﬁ
 
	g_ch™Sèã
[
NUM_CHANNELS
];

153 
uöt8_t
 
	g_ch™HÆfPîiod
[
NUM_CHANNELS
];

154 
uöt8_t
 
	g_ch™OuçutVﬁume
[
NUM_CHANNELS
];

155 
uöt8_t
 
	g_ch™Ouçut
[
NUM_CHANNELS
];

156 
boﬁ
 
	g_ch™Noi£
[
NUM_CHANNELS
];

158 #i‡
POK_GBSOUND
 > 0

159 c⁄° 
uöt16_t
 
	gsqu¨eWaveIn°rumít
[] = {0x0101, 0x03F7};

160 c⁄° 
uöt16_t
 
	gnoi£In°rumít
[] = {0x0101, 0x03FF};

161 c⁄° 
uöt16_t
* c⁄° 
	gdeÁu…In°rumíts
[] = {
squ¨eWaveIn°rumít
,
noi£In°rumít
};

163 c⁄° 
uöt16_t
 
	g∂ayOKP©ã∫
[] = {0x0005,0x138,0x168,0x0000};

164 c⁄° 
uöt16_t
 
	g∂ayC™˚lP©ã∫
[] = {0x0005,0x168,0x138,0x0000};

165 c⁄° 
uöt16_t
 
	g∂ayTickP
[] = {0x0045,0x168,0x0000};

167 #if(
EXTENDED_NOTE_RANGE
 > 0)

169 
	#NUM_PITCH
 59

	)

170 c⁄° 
uöt8_t
 
	g_hÆfPîiods
[
NUM_PITCH
] = {246,232,219,207,195,184,174,164,155,146,138,130,123,116,110,104,98,92,87,82,78,73,69,65,62,58,55,52,49,46,44,41,39,37,35,33,31,29,28,26,25,23,22,21,20,19,18,17,16,15,14,13,12,11,10,9,8,7,6};

173 
	#NUM_PITCH
 36

	)

174 c⁄° 
uöt8_t
 
	g_hÆfPîiods
[
NUM_PITCH
] = {246,232,219,207,195,184,174,164,155,146,138,130,123,116,110,104,98,92,87,82,78,73,69,65,62,58,55,52,49,46,44,41,39,37,35,33};

179 
	gPokôto
::
	$audio_IRQ
() {

180 #i‡
POK_STREAMING_MUSIC
 > 0

181 #i‡
POK_STREAMFREQ_HALVE
 > 0

182 
°ªam°ï
 = 1-streamstep;

184 
°ªam°ï
=1;

187 
°ªam°ï
 &
°ªam⁄
;

189 if(
°ªamvﬁ
 && 
°ªam°ï
) {

190 
uöt8_t
 
ouçut
 = (*
cuºítPå
++);

191 
sbyã
 = 
ouçut
;

193 
sbyã
 = 0;

196 i‡(
cuºítPå
 >
ídPå
)

198 
cuºítBuf„r
++;

199 i‡(
cuºítBuf„r
==4) currentBuffer=0;

200 
cuºítPå
 = 
buf„rs
[
cuºítBuf„r
];

201 
ídPå
 = 
cuºítPå
 + 
BUFFER_SIZE
;

205 #i‡(
NUM_CHANNELS
 > 0)

206 
Sound
::
	`gíî©eOuçut
();

208 
	}
}

210 
	gSound
::
	$vﬁumeUp
() {

211 
Pokôto
::
dis¸ëe_vﬁ
++;

212 i‡(
dis¸ëe_vﬁ
>7) discrete_vol=7;

213 
globÆVﬁume
 = 
dis¸ëe_vﬁ_Àvñs
[
dis¸ëe_vﬁ
];

214 
	`£tVﬁume
(
globÆVﬁume
);

217 
	}
}

219 
	gSound
::
	$vﬁumeDown
() {

220 i‡(
dis¸ëe_vﬁ
Ë
Pokôto
::discrete_vol--;

221 
globÆVﬁume
 = 
dis¸ëe_vﬁ_Àvñs
[
dis¸ëe_vﬁ
];

222 
	`£tVﬁume
(
globÆVﬁume
);

225 
	}
}

228 
	gSound
::
	$£tMaxVﬁ
(
öt16_t
 
v
) {

229 i‡(
v
 < 0) v = 0;

230 i‡(
v
 > 
VOLUME_SPEAKER_MAX
) {

231 
v
 = 
VOLUME_SPEAKER_MAX
;

233 
vﬁumeMax
 = 
v
;

234 
	`£tVﬁume
(
globÆVﬁume
);

235 
	}
}

237 
uöt16_t
 
	gSound
::
	$gëMaxVﬁ
() {

238  
vﬁumeMax
;

239 
	}
}

241 
	gSound
::
	$upd©eSåóm
() {

242 #i‡
POK_STREAMING_MUSIC


243 i‡(
ﬁdBuf„r
 !
cuºítBuf„r
) {

244 i‡(
cuºítBuf„r
==0Ë
	`fûeRódByãs
(&
buf„rs
[3][0],
BUFFER_SIZE
);

245 i‡(
cuºítBuf„r
==1Ë
	`fûeRódByãs
(&
buf„rs
[0][0],
BUFFER_SIZE
);

246 i‡(
cuºítBuf„r
==2Ë
	`fûeRódByãs
(&
buf„rs
[1][0],
BUFFER_SIZE
);

247 
	`fûeRódByãs
(&
buf„rs
[2][0],
BUFFER_SIZE
);

248 
ﬁdBuf„r
 = 
cuºítBuf„r
;

249 
°ªamcou¡î
 +
BUFFER_SIZE
;

252 #i‚de‡
POK_SIM


253 i‡–
°ªamcou¡î
 > 
fs
.
fsize
 - (
BUFFER_SIZE
)) {

255 i‡–
°ªamcou¡î
 > 
	`gëFûeLígth
(Ë- (
BUFFER_SIZE
)) {

257 
°ªamcou¡î
=0;

258 #i‡
POK_STREAM_LOOP
 > 0

259 
	`fûeRewöd
();

261 #i‚de‡
POK_SIM


262 
°ªam⁄
=0;

267 
	}
}

269 
	gSound
::
	$begö
() {

270 #i‡
POK_ENABLE_SOUND
 > 0

271 
	`soundInô
();

272 
	`ampE«bÀ
(
åue
);

274 #i‡(
NUM_CHANNELS
 > 0)

275 #i‡
POK_ENABLE_SOUND
 > 0

276 #i‡
POK_GBSOUND
 > 0

277 
¥esˇÀr
 = 1;

278 
byã
 
i
=0; i<
NUM_CHANNELS
; i++){

279 
ch™Vﬁumes
[
i
] = 
VOLUME_CHANNEL_MAX
;

280 
	`ch™geIn°rumítSë
(
deÁu…In°rumíts
, 
i
);

281 
	`comm™d
(
CMD_INSTRUMENT
, 0, 0, 
i
);

286 
	}
}

288 
	gSound
::
	$∂ayTøck
(c⁄° 
uöt16_t
* 
åack
, 
uöt8_t
 
ch™√l
){

289 #if(
NUM_CHANNELS
 > 0)

290 if(
ch™√l
>=
NUM_CHANNELS
)

292 
	`°›Tøck
(
ch™√l
);

293 
åackCurs‹
[
ch™√l
] = 0;

294 
åackD©a
[
ch™√l
] = (
uöt16_t
*)
åack
;

295 
åackIsPœyög
[
ch™√l
] = 
åue
;

297 
	}
}

299 
	gSound
::
	$°›Tøck
(
uöt8_t
 
ch™√l
){

300 #if(
NUM_CHANNELS
 > 0)

301 if(
ch™√l
>=
NUM_CHANNELS
)

303 
åackIsPœyög
[
ch™√l
] = 
Ál£
;

304 
	`°›P©ã∫
(
ch™√l
);

306 
	}
}

308 
	gSound
::
	$°›Tøck
(){

309 #if(
NUM_CHANNELS
 > 0)

310 
uöt8_t
 
i
=0; i<
NUM_CHANNELS
; i++){

311 
	`°›Tøck
(
i
);

314 
	}
}

316 
	gSound
::
	$upd©eTøck
(
uöt8_t
 
ch™√l
){

317 #if(
NUM_CHANNELS
 > 0)

318 if(
ch™√l
>=
NUM_CHANNELS
)

320 if(
åackIsPœyög
[
ch™√l
] && !
∑âînIsPœyög
[channel]){

321 
uöt16_t
 
d©a
 = 
	`pgm_ªad_w‹d
(
åackD©a
[
ch™√l
] + 
åackCurs‹
[channel]);

322 if(
d©a
 == 0xFFFF){

323 
åackIsPœyög
[
ch™√l
] = 
Ál£
;

326 
uöt8_t
 
∑âînID
 = 
d©a
 & 0xFF;

327 
d©a
 >>= 8;

328 
∑âînPôch
[
ch™√l
] = 
d©a
;

329 
	`∂ayP©ã∫
((c⁄° 
uöt16_t
*)
	`pgm_ªad_w‹d
(&(
∑âînSë
[
ch™√l
][
∑âînID
])), channel);

330 
åackCurs‹
[
ch™√l
] ++;

333 
	}
}

335 
	gSound
::
	$upd©eTøck
(){

336 #if(
NUM_CHANNELS
 > 0)

337 
uöt8_t
 
i
=0; i<
NUM_CHANNELS
; i++){

338 
	`upd©eTøck
(
i
);

341 
	}
}

343 
	gSound
::
	$ch™geP©ã∫Së
(c⁄° 
uöt16_t
* c⁄°* 
∑âîns
, 
uöt8_t
 
ch™√l
){

344 #if(
NUM_CHANNELS
 > 0)

345 if(
ch™√l
>=
NUM_CHANNELS
)

347 
∑âînSë
[
ch™√l
] = (
uöt16_t
**)
∑âîns
;

349 
	}
}

351 
	gSound
::
	$∂ayP©ã∫
(c⁄° 
uöt16_t
* 
∑âîn
, 
uöt8_t
 
ch™√l
){

352 #if(
NUM_CHANNELS
 > 0)

353 if(
ch™√l
>=
NUM_CHANNELS
)

355 
	`°›P©ã∫
(
ch™√l
);

356 
∑âînD©a
[
ch™√l
] = (
uöt16_t
*)
∑âîn
;

357 
∑âînCurs‹
[
ch™√l
] = 0;

358 
∑âînIsPœyög
[
ch™√l
] = 
åue
;

359 
nŸeVﬁume
[
ch™√l
] = 9;

361 
vﬁumeSlideSãpDuøti⁄
[
ch™√l
] = 0;

362 
¨≥ggioSãpDuøti⁄
[
ch™√l
] = 0;

363 
åemﬁoSãpDuøti⁄
[
ch™√l
] = 0;

365 
	}
}

367 
	gSound
::
	$upd©eP©ã∫
(){

368 #if(
NUM_CHANNELS
 > 0)

369 
uöt8_t
 
i
=0; i<
NUM_CHANNELS
; i++){

370 
	`upd©eP©ã∫
(
i
);

373 
	}
}

375 
	gSound
::
	$ch™geIn°rumítSë
(c⁄° 
uöt16_t
* c⁄°* 
ö°rumíts
, 
uöt8_t
 
ch™√l
){

376 #if(
NUM_CHANNELS
 > 0)

377 if(
ch™√l
>=
NUM_CHANNELS
)

379 
ö°rumítSë
[
ch™√l
] = (
uöt16_t
**)
ö°rumíts
;

381 
	}
}

383 
	gSound
::
	$upd©eP©ã∫
(
uöt8_t
 
i
){

384 #if(
NUM_CHANNELS
 > 0)

385 if(
i
>=
NUM_CHANNELS
)

387 if(
∑âînIsPœyög
[
i
]){

388 if(
nŸeDuøti⁄
[
i
]==0){

390 
uöt16_t
 
d©a
 = 
	`pgm_ªad_w‹d
(
∑âînCurs‹
[
i
] + 
∑âînD©a
[i]);

392 if(
d©a
 == 0){

393 if(
∑âînLo›ög
[
i
] =
åue
){

394 
∑âînCurs‹
[
i
] = 0;

395 
d©a
 = 
	`pgm_ªad_w‹d
(
∑âînCurs‹
[
i
] + 
∑âînD©a
[i]);

398 
∑âînIsPœyög
[
i
] = 
Ál£
;

399 if(
åackIsPœyög
[
i
]){

400 
	`upd©eTøck
(
i
);

401 
d©a
 = 
	`pgm_ªad_w‹d
(
∑âînCurs‹
[
i
] + 
∑âînD©a
[i]);

403 
	`°›NŸe
(
i
);

410 
d©a
 & 0x0001){

411 
d©a
 >>= 2;

413 
uöt8_t
 
cmd
 = 
d©a
 & 0x0F;

414 
d©a
 >>= 4;

415 
uöt8_t
 
X
 = 
d©a
 & 0x1F;

416 
d©a
 >>= 5;

417 
öt8_t
 
Y
 = 
d©a
 - 16;

418 
	`comm™d
(
cmd
,
X
,
Y
,
i
);

419 
∑âînCurs‹
[
i
]++;

420 
d©a
 = 
	`pgm_ªad_w‹d
(
∑âînCurs‹
[
i
] + 
∑âînD©a
[i]);

422 
d©a
 >>= 2;

424 
uöt8_t
 
pôch
 = 
d©a
 & 0x003F;

425 
d©a
 >>= 6;

427 
uöt8_t
 
duøti⁄
 = 
d©a
;

428 if(
pôch
 != 63){

431 
	`∂ayNŸe
(
pôch
, 
duøti⁄
, 
i
);

433 
∑âînCurs‹
[
i
]++;

437 
	}
}

439 
	gSound
::
	$°›P©ã∫
(
uöt8_t
 
ch™√l
){

440 #if(
NUM_CHANNELS
 > 0)

441 if(
ch™√l
>=
NUM_CHANNELS
)

443 
	`°›NŸe
(
ch™√l
);

444 
∑âînIsPœyög
[
ch™√l
] = 
Ál£
;

446 
	}
}

448 
	gSound
::
	$°›P©ã∫
(){

449 #if(
NUM_CHANNELS
 > 0)

450 
uöt8_t
 
i
=0; i<
NUM_CHANNELS
; i++){

451 
	`°›P©ã∫
(
i
);

454 
	}
}

456 
	gSound
::
	$comm™d
(
uöt8_t
 
cmd
, uöt8_à
X
, 
öt8_t
 
Y
, uöt8_à
i
){

457 #if(
NUM_CHANNELS
 > 0)

458 if(
i
>=
NUM_CHANNELS
)

460 
cmd
){

461 
CMD_VOLUME
:

462 
X
 = 
	`c⁄°øö
((
öt8_t
)X, 0, 10);

463 
nŸeVﬁume
[
i
] = 
X
;

465 
CMD_INSTRUMENT
:

466 
ö°rumítD©a
[
i
] = (
uöt16_t
*)
	`pgm_ªad_w‹d
(&(
ö°rumítSë
[i][
X
]));

467 
ö°rumítLígth
[
i
] = 
	`pgm_ªad_w‹d
(&(
ö°rumítD©a
[i][0])) & 0x00FF;

468 
ö°rumítLígth
[
i
] *
¥esˇÀr
;

469 
ö°rumítLo›ög
[
i
] = 
	`mö2
((
	`pgm_ªad_w‹d
(&(
ö°rumítD©a
[i][0])Ë>> 8), 
ö°rumítLígth
[i]);

470 
ö°rumítLo›ög
[
i
] *
¥esˇÀr
;

472 
CMD_SLIDE
:

473 
vﬁumeSlideSãpDuøti⁄
[
i
] = 
X
 * 
¥esˇÀr
;

474 
vﬁumeSlideSãpSize
[
i
] = 
Y
;

476 
CMD_ARPEGGIO
:

477 
¨≥ggioSãpDuøti⁄
[
i
] = 
X
 * 
¥esˇÀr
;

478 
¨≥ggioSãpSize
[
i
] = 
Y
;

480 
CMD_TREMOLO
:

481 
åemﬁoSãpDuøti⁄
[
i
] = 
X
 * 
¥esˇÀr
;

482 
åemﬁoSãpSize
[
i
] = 
Y
;

488 
	}
}

490 
	gSound
::
	$∂ayNŸe
(
uöt8_t
 
pôch
, uöt8_à
duøti⁄
, uöt8_à
ch™√l
){

491 #if(
NUM_CHANNELS
 > 0)

492 if(
ch™√l
>=
NUM_CHANNELS
)

495 
nŸePôch
[
ch™√l
] = 
pôch
;

496 
nŸeDuøti⁄
[
ch™√l
] = 
duøti⁄
 * 
¥esˇÀr
;

498 
ö°rumítNextCh™ge
[
ch™√l
] = 0;

499 
ö°rumítCurs‹
[
ch™√l
] = 0;

500 
nŸePœyög
[
ch™√l
] = 
åue
;

501 
_ch™Sèã
[
ch™√l
] = 
åue
;

502 
comm™dsCou¡î
[
ch™√l
] = 0;

504 
	}
}

506 
	gSound
::
	$°›NŸe
(
uöt8_t
 
ch™√l
) {

507 #if(
NUM_CHANNELS
 > 0)

508 if(
ch™√l
>=
NUM_CHANNELS
)

510 
nŸePœyög
[
ch™√l
] = 
Ál£
;

512 
nŸeDuøti⁄
[
ch™√l
] = 0;

513 
ö°rumítCurs‹
[
ch™√l
] = 0;

514 
comm™dsCou¡î
[
ch™√l
] = 0;

516 
_ch™Ouçut
[
ch™√l
] = 0;

517 
_ch™OuçutVﬁume
[
ch™√l
] = 0;

518 
_ch™Sèã
[
ch™√l
] = 
Ál£
;

519 
	`upd©eOuçut
();

521 
	}
}

523 
	gSound
::
	$°›NŸe
() {

524 #if(
NUM_CHANNELS
 > 0)

525 
uöt8_t
 
ch™√l
 = 0; ch™√»< 
NUM_CHANNELS
; channel++) {

526 
	`°›NŸe
(
ch™√l
);

529 
	}
}

531 
	gSound
::
	$upd©eNŸe
() {

532 #if(
NUM_CHANNELS
 > 0)

533 
uöt8_t
 
i
 = 0; i < 
NUM_CHANNELS
; i++) {

534 
	`upd©eNŸe
(
i
);

537 
	}
}

539 
	gSound
::
	$upd©eNŸe
(
uöt8_t
 
i
) {

540 #if(
NUM_CHANNELS
 > 0)

541 if(
i
>=
NUM_CHANNELS
)

543 i‡(
nŸePœyög
[
i
]) {

545 if(
nŸeDuøti⁄
[
i
] == 0){

546 
	`°›NŸe
(
i
);

550 
nŸeDuøti⁄
[
i
]--;

553 i‡(
ö°rumítNextCh™ge
[
i
] == 0) {

556 
uöt16_t
 
thisSãp
 = 
	`pgm_ªad_w‹d
(&(
ö°rumítD©a
[
i
][1 + 
ö°rumítCurs‹
[i]]));

558 
°ïVﬁume
[
i
] = 
thisSãp
 & 0x0007;

559 
thisSãp
 >>= 3;

561 
uöt8_t
 
°ïNoi£
 = 
thisSãp
 & 0x0001;

562 
thisSãp
 >>= 1;

564 
uöt8_t
 
°ïDuøti⁄
 = 
thisSãp
 & 0x003F;

565 
thisSãp
 >>= 6;

567 
°ïPôch
[
i
] = 
thisSãp
;

570 
ö°rumítNextCh™ge
[
i
] = 
°ïDuøti⁄
 * 
¥esˇÀr
;

572 
_ch™Noi£
[
i
] = 
°ïNoi£
;

575 
ö°rumítCurs‹
[
i
]++;

577 i‡(
ö°rumítCurs‹
[
i
] >
ö°rumítLígth
[i]) {

578 i‡(
ö°rumítLo›ög
[
i
]) {

579 
ö°rumítCurs‹
[
i
] = 
ö°rumítLígth
[i] - 
ö°rumítLo›ög
[i];

581 
	`°›NŸe
(
i
);

585 
ö°rumítNextCh™ge
[
i
]--;

587 
comm™dsCou¡î
[
i
]++;

591 
ouçutPôch
[
i
] = 
nŸePôch
[i] + 
°ïPôch
[i] + 
∑âînPôch
[i];

592 if(
¨≥ggioSãpDuøti⁄
[
i
]){

593 
ouçutPôch
[
i
] +
comm™dsCou¡î
[i] / 
¨≥ggioSãpDuøti⁄
[i] * 
¨≥ggioSãpSize
[i];

595 
ouçutPôch
[
i
] = (ouçutPôch[i] + 
NUM_PITCH
) % NUM_PITCH;

597 
ouçutVﬁume
[
i
] = 
nŸeVﬁume
[i];

598 if(
vﬁumeSlideSãpDuøti⁄
[
i
]){

599 
ouçutVﬁume
[
i
] +
comm™dsCou¡î
[i] / 
vﬁumeSlideSãpDuøti⁄
[i] * 
vﬁumeSlideSãpSize
[i];

601 if(
åemﬁoSãpDuøti⁄
[
i
]){

602 
ouçutVﬁume
[
i
] +((
comm™dsCou¡î
[i]/
åemﬁoSãpDuøti⁄
[i]Ë% 2Ë* 
åemﬁoSãpSize
[i];

604 
ouçutVﬁume
[
i
] = 
	`c⁄°øö
(outputVolume[i], 0, 9);

605 if(
nŸePôch
[
i
] == 63){

606 
ouçutVﬁume
[
i
] = 0;

609 
_ch™HÆfPîiod
[
i
] = 
	`pgm_ªad_byã
(
_hÆfPîiods
 + 
ouçutPôch
[i]);

610 
_ch™Ouçut
[
i
] = 
_ch™OuçutVﬁume
[i] = 
ouçutVﬁume
[i] * (
globÆVﬁume
>>
GLOBVOL_SHIFT
Ë* 
ch™Vﬁumes
[i] * 
°ïVﬁume
[i];

615 
	}
}

617 
	gSound
::
	$£tCh™√lHÆfPîiod
(
uöt8_t
 
ch™√l
, uöt8_à
hÆfPîiod
) {

618 #if(
NUM_CHANNELS
 > 0)

619 if(
ch™√l
>=
NUM_CHANNELS
)

621 
_ch™HÆfPîiod
[
ch™√l
] = 
hÆfPîiod
;

622 
_ch™Sèã
[
ch™√l
] = 
Ál£
;

623 
_ch™Cou¡
[
ch™√l
] = 0;

624 
	`upd©eOuçut
();

626 
	}
}

629 
	gSound
::
	$gíî©eOuçut
() {

630 #if(
NUM_CHANNELS
 > 0)

631 
boﬁ
 
ouçutCh™ged
 = 
Ál£
;

634 i‡(
_ch™OuçutVﬁume
[0]) {

635 
_ch™Cou¡
[0]++;

636 i‡(
_ch™Cou¡
[0] >
_ch™HÆfPîiod
[0]) {

637 
ouçutCh™ged
 = 
åue
;

638 
_ch™Sèã
[0] = !_chanState[0];

639 
_ch™Cou¡
[0] = 0;

640 i‡(
_ch™Noi£
[0]) {

641 
_ønd
 = 67 * _rand + 71;

642 
_ch™Ouçut
[0] = 
_ønd
 % 
_ch™OuçutVﬁume
[0];

649 #i‡(
NUM_CHANNELS
 > 1)

650 i‡(
_ch™OuçutVﬁume
[1]) {

651 
_ch™Cou¡
[1]++;

652 i‡(
_ch™Cou¡
[1] >
_ch™HÆfPîiod
[1]) {

653 
ouçutCh™ged
 = 
åue
;

654 
_ch™Sèã
[1] = !_chanState[1];

655 
_ch™Cou¡
[1] = 0;

656 i‡(
_ch™Noi£
[1]) {

657 
_ønd
 = 67 * _rand + 71;

658 
_ch™Ouçut
[1] = 
_ønd
 % 
_ch™OuçutVﬁume
[1];

665 #i‡(
NUM_CHANNELS
 > 2)

666 i‡(
_ch™OuçutVﬁume
[2]) {

667 
_ch™Cou¡
[2]++;

668 i‡(
_ch™Cou¡
[2] >
_ch™HÆfPîiod
[2]) {

669 
ouçutCh™ged
 = 
åue
;

670 
_ch™Sèã
[2] = !_chanState[2];

671 
_ch™Cou¡
[2] = 0;

672 i‡(
_ch™Noi£
[2]) {

673 
_ønd
 = 67 * _rand + 71;

674 
_ch™Ouçut
[2] = 
_ønd
 % 
_ch™OuçutVﬁume
[2];

681 #i‡(
NUM_CHANNELS
 > 3)

682 i‡(
_ch™OuçutVﬁume
[3]) {

683 
_ch™Cou¡
[3]++;

684 i‡(
_ch™Cou¡
[3] >
_ch™HÆfPîiod
[3]) {

685 
ouçutCh™ged
 = 
åue
;

686 
_ch™Sèã
[3] = !_chanState[3];

687 
_ch™Cou¡
[3] = 0;

688 i‡(
_ch™Noi£
[3]) {

689 
_ønd
 = 67 * _rand + 71;

690 
_ch™Ouçut
[3] = 
_ønd
 % 
_ch™OuçutVﬁume
[3];

696 #i‡
POK_STREAMING_MUSIC


697 i‡(
°ªam°ï
) {

698 
ouçutCh™ged
=
åue
;

702 i‡(
ouçutCh™ged
) {

703 
	`upd©eOuçut
();

706 
	}
}

708 
	gSound
::
	$upd©eOuçut
() {

709 #if(
NUM_CHANNELS
 > 0)

710 
uöt32_t
 
ouçut
 = 0;

713 i‡(
_ch™Sèã
[0]) {

714 
ouçut
 +
_ch™Ouçut
[0];

718 #i‡(
NUM_CHANNELS
 > 1)

719 i‡(
_ch™Sèã
[1]) {

720 
ouçut
 +
_ch™Ouçut
[1];

725 #i‡(
NUM_CHANNELS
 > 2)

726 i‡(
_ch™Sèã
[2]) {

727 
ouçut
 +
_ch™Ouçut
[2];

732 #i‡(
NUM_CHANNELS
 > 3)

733 i‡(
_ch™Sèã
[3]) {

734 
ouçut
 +
_ch™Ouçut
[3];

738 #i‚de‡
POK_SIM


739 #i‡
POK_ENABLE_SOUND


742 #i‡
POK_STREAMING_MUSIC


743 i‡(
°ªam°ï
) {

745 
sbyã
 *
dis¸ëe_vﬁ_mu…ùlõrs
[
dis¸ëe_vﬁ
];

746 
sbyã
 >>= 8;

747 
	`pwmout_wrôe
(&
audi›wm
,()(
sbyã
)/()255);

750 
ouçut
 *
dis¸ëe_vﬁ_mu…ùlõrs
[
dis¸ëe_vﬁ
];

751 
ouçut
 >>= 8;

752 
	`dac_wrôe
((
uöt8_t
)
ouçut
);

753 
soundbyã
 = 
ouçut
;

757 #i‡
POK_STREAMING_MUSIC


758 i‡(
°ªam°ï
) {

759 
uöt16_t
 
o
 = 
ouçut
 + 
sbyã
;

760 
ouçut
 = (
o
/2);

763 
soundbyã
 = 
ouçut
;

766 
	}
}

768 
	gSound
::
	$£tP©ã∫Lo›ög
(
boﬁ
 
lo›
, 
uöt8_t
 
ch™√l
) {

769 #if(
NUM_CHANNELS
 > 0)

770 if(
ch™√l
>=
NUM_CHANNELS
)

772 
∑âînLo›ög
[
ch™√l
] = 
lo›
;

774 
	}
}

776 
	gSound
::
	$∂ayOK
(){

777 #i‡
POK_GBSOUND


778 #if(
NUM_CHANNELS
 > 0)

779 
	`∂ayP©ã∫
(
∂ayOKP©ã∫
,0);

782 
	}
}

784 
	gSound
::
	$∂ayC™˚l
(){

785 #i‡
POK_GBSOUND


786 #if(
NUM_CHANNELS
 > 0)

787 
	`∂ayP©ã∫
(
∂ayC™˚lP©ã∫
,0);

790 
	}
}

792 
	gSound
::
	$∂ayTick
(){

793 #i‡
POK_GBSOUND


794 #if(
NUM_CHANNELS
 > 0)

795 
	`∂ayP©ã∫
(
∂ayTickP
,0);

798 
	}
}

800 
	gSound
::
	$£tVﬁume
(
öt16_t
 
vﬁume
) {

802 i‡(
vﬁume
<0) volume = 0;

804 
globÆVﬁume
 = 
vﬁume
;

805 #i‡
POK_ENABLE_SOUND
 > 0

806 
dis¸ëe_vﬁ
 = (
vﬁume
>>5);

807 #i‚de‡
POK_SIM


808 
	`£tHWvﬁume
(
dis¸ëe_vﬁ_hw_Àvñs
[
dis¸ëe_vﬁ
]);

811 #i‡
POK_SHOW_VOLUME
 > 0

812 
_soundc
.
vﬁb¨_visibÀ
 = 
VOLUMEBAR_TIMEOUT
;

815 
	}
}

817 
uöt16_t
 
	gSound
::
	$gëVﬁume
() {

819  
globÆVﬁume
;

823 
	}
}

825 
	gSound
::
	$£tVﬁume
(
öt8_t
 
vﬁume
, 
uöt8_t
 
ch™√l
) {

826 #if(
NUM_CHANNELS
 > 0)

827 if(
ch™√l
>=
NUM_CHANNELS
)

829 
vﬁume
 = (vﬁumê> 
VOLUME_CHANNEL_MAX
) ? VOLUME_CHANNEL_MAX : volume;

830 
vﬁume
 = (volume < 0) ? 0 : volume;

831 
ch™Vﬁumes
[
ch™√l
] = 
vﬁume
;

833 
	}
}

835 
uöt8_t
 
	gSound
::
	$gëVﬁume
(
uöt8_t
 
ch™√l
) {

836 #if(
NUM_CHANNELS
 > 0)

837 if(
ch™√l
>=
NUM_CHANNELS
)

839  (
ch™Vﬁumes
[
ch™√l
]);

843 
	}
}

845 
	gSound
::
	$∂ayT⁄e
(
uöt8_t
 
os
, 
‰q
, uöt8_à
amp
, uöt8_à
wav
,uöt8_à
¨pmode
)

847 i‡(
wav
>5) wav=0;

848 i‡(
¨pmode
>
MAX_ARPMODE
)árpmode=MAX_ARPMODE;

849 i‡(
os
==1Ë
	`£tOSC
(&
osc1
,1,
wav
,1,0,0,
‰q
,
amp
,0,0,0,0,0,0,
¨pmode
,0,0);

850 i‡(
os
==2Ë
	`£tOSC
(&
osc2
,1,
wav
,1,0,0,
‰q
,
amp
,0,0,0,0,0,0,
¨pmode
,0,0);

851 i‡(
os
==3Ë
	`£tOSC
(&
osc3
,1,
wav
,1,0,0,
‰q
,
amp
,0,0,0,0,0,0,
¨pmode
,0,0);

852 
	}
}

854 
	gSound
::
	$∂ayT⁄e
(
uöt8_t
 
os
, 
uöt16_t
 
‰q
, uöt8_à
vﬁume
, 
uöt32_t
 
duøti⁄
)

856 i‡(
os
==1Ë
	`£tOSC
(&
osc1
,1,
WSQUARE
,
‰q
,
vﬁume
,
duøti⁄
);

857 i‡(
os
==2Ë
	`£tOSC
(&
osc2
,1,
WTRI
,
‰q
,
vﬁume
,
duøti⁄
);

858 i‡(
os
==3Ë
	`£tOSC
(&
osc3
,1,
WTRI
,
‰q
,
vﬁume
,
duøti⁄
);

859 
	}
}

861 
uöt8_t
 
	gSound
::
	$ampIsOn
()

863 #ifde‡
POK_SIM


864  
c‹e
.
	`ampIsOn
();

866 #i‡
POK_ENABLE_SOUND
 > 0

867  
Pokôto
::
	`ampIsOn
();

871 
	}
}

873 
	gSound
::
	$ampE«bÀ
(
uöt8_t
 
v
) {

874 #ifde‡
POK_SIM


875 
c‹e
.
	`ampE«bÀ
(
v
);

877 #i‡
POK_ENABLE_SOUND
 > 0

878 
Pokôto
::
	`ampE«bÀ
(
v
);

882 
	}
}

884 
	gSound
::
	$∂ayMusicSåóm
(* 
fûíame
)

886  
	`∂ayMusicSåóm
(
fûíame
,
FILE_MODE_READONLY
 | 
FILE_MODE_BINARY
);

887 
	}
}

889 
	gSound
::
	$∂ayMusicSåóm
()

891 #i‡
POK_STREAMING_MUSIC
 >0

892 i‡(
cuºítPå
) {

893 
	`pokPœySåóm
();

897 
	}
}

899 
	gSound
::
	$∑u£MusicSåóm
() {

900 #i‡
POK_ENABLE_SOUND
 > 0

901 
	`pokPau£Såóm
();

903 
	}
}

905 
	gSound
::
	$∂ayMusicSåóm
(* 
fûíame
, 
uöt8_t
 
›ti⁄s
)

907 #i‡
POK_STREAMING_MUSIC


908 
uöt8_t
 
ªsu…
;

909 
ªsu…
 = 
	`pokInôSD
();

910 i‡(!
	`isThisFûeO≥n
(
fûíame
)) {

911 
	`fûeClo£
();

912 
ªsu…
 = 
	`fûeO≥n
(
fûíame
,
FILE_MODE_READONLY
 | 
FILE_MODE_BINARY
);

915 i‡(
ªsu…
) {

916 
cuºítPå
 = 0;

920 
	`fûeRódByãs
(&
buf„rs
[0][0],
BUFFER_SIZE
);

921 
	`fûeRódByãs
(&
buf„rs
[1][0],
BUFFER_SIZE
);

922 
	`fûeRódByãs
(&
buf„rs
[2][0],
BUFFER_SIZE
);

923 
	`fûeRódByãs
(&
buf„rs
[3][0],
BUFFER_SIZE
);

924 
cuºítBuf„r
 = 0;

925 
cuºítPå
 = 
buf„rs
[
cuºítBuf„r
];

926 
ídPå
 = 
cuºítPå
 + 
BUFFER_SIZE
;

930 i‡(!
›ti⁄s
Ë
	`pokPœySåóm
();

933 
	}
}

935 
uöt32_t
 
	gSound
::
	$gëMusicSåómEœp£dSec
() {

936 #i‡
POK_STREAMING_MUSIC


937  
°ªamcou¡î
/
POK_AUD_FREQ
;

940 
	}
}

942 
uöt32_t
 
	gSound
::
	$gëMusicSåómEœp£dMûliSec
() {

943 #i‡
POK_STREAMING_MUSIC


944  
°ªamcou¡î
/(
POK_AUD_FREQ
/1000);

947 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoSound.h

38 #i‚de‡
POKITTOSOUND_H


39 
	#POKITTOSOUND_H


	)

41 
	~<°döt.h
>

42 
	~"Pokôto_£âögs.h
"

43 
	~"GBcom∑tibûôy.h
"

44 
	~"PokôtoFakóvr.h
"

45 
	~"PokôtoGlobs.h
"

47 
pokPau£Såóm
();

48 
pokPœySåóm
();

49 
uöt8_t
 
pokSåómPau£d
();

52 
	#GLOBVOL_SHIFT
 5

53 

	)

55 #i‚de‡
MAX_VOL_TEST


56 
	#VOLUME_SPEAKER_MAX
 255

57 
	#VOLUME_HEADPHONE_MAX
 127

	)

58 
	#VOLUME_STARTUP
 
VOLUME_HEADPHONE_MAX


	)

60 
	#VOLUME_SPEAKER_MAX
 255

	)

61 
	#VOLUME_HEADPHONE_MAX
 
VOLUME_SPEAKER_MAX


	)

62 
	#VOLUME_STARTUP
 
VOLUME_SPEAKER_MAX


	)

65 #ifde‡
POK_SIM


66 
	#VOLUME_STEP
 1

	)

68 
	#VOLUME_STEP
 8

	)

73 
	#CMD_VOLUME
 0

	)

74 
	#CMD_INSTRUMENT
 1

	)

75 
	#CMD_SLIDE
 2

	)

76 
	#CMD_ARPEGGIO
 3

	)

77 
	#CMD_TREMOLO
 4

	)

79 
	#STR_PLAYING
 0x1

	)

80 
	#STR_VISUALIZER
 0x2

	)

81 
	#STR_LOOP
 0x4

	)

82 
	#STR_PAUSED
 0x8

	)

84 
«me•a˚
 
	gPokôto
 {

95 
uöt8_t
 
dis¸ëe_vﬁ
;

96 c⁄° 
uöt8_t
 
dis¸ëe_vﬁ_Àvñs
[];

97 c⁄° 
uöt8_t
 
dis¸ëe_vﬁ_hw_Àvñs
[];

98 c⁄° 
uöt8_t
 
dis¸ëe_vﬁ_mu…ùlõrs
[];

100 
audio_IRQ
();

102 ˛as†
	cSound
 {

103 
	g¥iv©e
:

104 
uöt16_t
 
vﬁumeMax
;

106 
	gpublic
:

107 
begö
();

110 
uöt8_t
 
	ghódPh⁄eLevñ
;

111 
£tMaxVﬁ
(
öt16_t
);

112 
uöt16_t
 
gëMaxVﬁ
();

113 
vﬁumeUp
();

114 
vﬁumeDown
();

117 
upd©eSåóm
();

118 
∂ayT⁄e
(
uöt8_t
 
os
, 
‰q
, uöt8_à
amp
, uöt8_à
wav
,uöt8_à
¨pmode
);

119 
∂ayT⁄e
(
uöt8_t
 
os
, 
uöt16_t
 
‰eq
, uöt8_à
vﬁume
, 
uöt32_t
 
duøti⁄
);

120 
uöt8_t
 
ampIsOn
();

121 
ampE«bÀ
(
uöt8_t
);

122 
∂ayMusicSåóm
(* 
fûíame
, 
uöt8_t
 
›ti⁄s
);

123 
∂ayMusicSåóm
(* 
fûíame
);

124 
∂ayMusicSåóm
();

125 
∑u£MusicSåóm
();

126 
uöt32_t
 
gëMusicSåómEœp£dSec
();

127 
uöt32_t
 
gëMusicSåómEœp£dMûliSec
();

130 
∂ayTøck
(c⁄° 
uöt16_t
* 
åack
, 
uöt8_t
 
ch™√l
);

131 
upd©eTøck
(
uöt8_t
 
ch™√l
);

132 
upd©eTøck
();

133 
°›Tøck
(
uöt8_t
 
ch™√l
);

134 
°›Tøck
();

135 
ch™geP©ã∫Së
(c⁄° 
uöt16_t
* c⁄°* 
∑âîns
, 
uöt8_t
 
ch™√l
);

136 
boﬁ
 
	gåackIsPœyög
[
NUM_CHANNELS
];

138 
∂ayP©ã∫
(c⁄° 
uöt16_t
* 
∑âîn
, 
uöt8_t
 
ch™√l
);

139 
ch™geIn°rumítSë
(c⁄° 
uöt16_t
* c⁄°* 
ö°rumíts
, 
uöt8_t
 
ch™√l
);

140 
upd©eP©ã∫
(
uöt8_t
 
i
);

141 
upd©eP©ã∫
();

142 
£tP©ã∫Lo›ög
(
boﬁ
 
lo›
, 
uöt8_t
 
ch™√l
);

143 
°›P©ã∫
(
uöt8_t
 
ch™√l
);

144 
°›P©ã∫
();

145 
boﬁ
 
	g∑âînIsPœyög
[
NUM_CHANNELS
];

147 
comm™d
(
uöt8_t
 
cmd
, uöt8_à
X
, 
öt8_t
 
Y
, uöt8_à
i
);

148 
∂ayNŸe
(
uöt8_t
 
pôch
, uöt8_à
duøti⁄
, uöt8_à
ch™√l
);

149 
upd©eNŸe
();

150 
upd©eNŸe
(
uöt8_t
 
i
);

151 
°›NŸe
(
uöt8_t
 
ch™√l
);

152 
°›NŸe
();

154 
uöt8_t
 
	gouçutPôch
[
NUM_CHANNELS
];

155 
öt8_t
 
	gouçutVﬁume
[
NUM_CHANNELS
];

157 
£tMa°îVﬁume
(
uöt8_t
);

158 
uöt8_t
 
GëMa°îVﬁume
();

159 
£tVﬁume
(
öt16_t
 
vﬁume
);

160 
uöt16_t
 
gëVﬁume
();

161 
£tVﬁume
(
öt8_t
 
vﬁume
, 
uöt8_t
 
ch™√l
);

162 
uöt8_t
 
gëVﬁume
(uöt8_à
ch™√l
);

164 
∂ayOK
();

165 
∂ayC™˚l
();

166 
∂ayTick
();

168 
uöt8_t
 
	g¥esˇÀr
;

170 
£tCh™√lHÆfPîiod
(
uöt8_t
 
ch™√l
, uöt8_à
hÆfPîiod
);

172 
gíî©eOuçut
();

173 
uöt16_t
 
	gglobÆVﬁume
;

176 #i‡(
NUM_CHANNELS
 > 0)

178 
uöt16_t
 *
	gåackD©a
[
NUM_CHANNELS
];

179 
uöt8_t
 
	gåackCurs‹
[
NUM_CHANNELS
];

180 
uöt16_t
 **
	g∑âînSë
[
NUM_CHANNELS
];

181 
öt8_t
 
	g∑âînPôch
[
NUM_CHANNELS
];

184 
uöt16_t
 *
	g∑âînD©a
[
NUM_CHANNELS
];

185 
uöt16_t
 **
	gö°rumítSë
[
NUM_CHANNELS
];

186 
boﬁ
 
	g∑âînLo›ög
[
NUM_CHANNELS
];

187 
uöt16_t
 
	g∑âînCurs‹
[
NUM_CHANNELS
];

190 
uöt8_t
 
	gnŸePôch
[
NUM_CHANNELS
];

191 
uöt8_t
 
	gnŸeDuøti⁄
[
NUM_CHANNELS
];

192 
öt8_t
 
	gnŸeVﬁume
[
NUM_CHANNELS
];

193 
boﬁ
 
	gnŸePœyög
[
NUM_CHANNELS
];

196 
öt8_t
 
	gcomm™dsCou¡î
[
NUM_CHANNELS
];

197 
öt8_t
 
	gvﬁumeSlideSãpDuøti⁄
[
NUM_CHANNELS
];

198 
öt8_t
 
	gvﬁumeSlideSãpSize
[
NUM_CHANNELS
];

199 
uöt8_t
 
	g¨≥ggioSãpDuøti⁄
[
NUM_CHANNELS
];

200 
öt8_t
 
	g¨≥ggioSãpSize
[
NUM_CHANNELS
];

201 
uöt8_t
 
	gåemﬁoSãpDuøti⁄
[
NUM_CHANNELS
];

202 
öt8_t
 
	gåemﬁoSãpSize
[
NUM_CHANNELS
];

206 
uöt16_t
 *
	gö°rumítD©a
[
NUM_CHANNELS
];

207 
uöt8_t
 
	gö°rumítLígth
[
NUM_CHANNELS
];

208 
uöt8_t
 
	gö°rumítLo›ög
[
NUM_CHANNELS
];

209 
uöt16_t
 
	gö°rumítCurs‹
[
NUM_CHANNELS
];

210 
uöt8_t
 
	gö°rumítNextCh™ge
[
NUM_CHANNELS
];

213 
öt8_t
 
	g°ïVﬁume
[
NUM_CHANNELS
];

214 
uöt8_t
 
	g°ïPôch
[
NUM_CHANNELS
];

216 
uöt8_t
 
	gch™Vﬁumes
[
NUM_CHANNELS
];

218 
upd©eOuçut
();

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoTimer.h

37 #i‚de‡
POKITTO_TIMER_H


38 
	#POKITTO_TIMER_H


	)

40 
pokInôTimî
();

41 
pokGëTime
();

42 
pokWaôms
(
uöt16_t
);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\binary.h

1 #i‚de‡
Bö¨y_h


2 
	#Bö¨y_h


	)

5 
	#B00
 0

	)

6 
	#B000
 0

	)

7 
	#B0000
 0

	)

8 
	#B00000
 0

	)

9 
	#B000000
 0

	)

10 
	#B0000000
 0

	)

11 
	#B00000000
 0

	)

13 
	#B01
 1

	)

14 
	#B001
 1

	)

15 
	#B0001
 1

	)

16 
	#B00001
 1

	)

17 
	#B000001
 1

	)

18 
	#B0000001
 1

	)

19 
	#B00000001
 1

	)

20 
	#B10
 2

	)

21 
	#B010
 2

	)

22 
	#B0010
 2

	)

23 
	#B00010
 2

	)

24 
	#B000010
 2

	)

25 
	#B0000010
 2

	)

26 
	#B00000010
 2

	)

27 
	#B11
 3

	)

28 
	#B011
 3

	)

29 
	#B0011
 3

	)

30 
	#B00011
 3

	)

31 
	#B000011
 3

	)

32 
	#B0000011
 3

	)

33 
	#B00000011
 3

	)

34 
	#B100
 4

	)

35 
	#B0100
 4

	)

36 
	#B00100
 4

	)

37 
	#B000100
 4

	)

38 
	#B0000100
 4

	)

39 
	#B00000100
 4

	)

40 
	#B101
 5

	)

41 
	#B0101
 5

	)

42 
	#B00101
 5

	)

43 
	#B000101
 5

	)

44 
	#B0000101
 5

	)

45 
	#B00000101
 5

	)

46 
	#B110
 6

	)

47 
	#B0110
 6

	)

48 
	#B00110
 6

	)

49 
	#B000110
 6

	)

50 
	#B0000110
 6

	)

51 
	#B00000110
 6

	)

52 
	#B111
 7

	)

53 
	#B0111
 7

	)

54 
	#B00111
 7

	)

55 
	#B000111
 7

	)

56 
	#B0000111
 7

	)

57 
	#B00000111
 7

	)

58 
	#B1000
 8

	)

59 
	#B01000
 8

	)

60 
	#B001000
 8

	)

61 
	#B0001000
 8

	)

62 
	#B00001000
 8

	)

63 
	#B1001
 9

	)

64 
	#B01001
 9

	)

65 
	#B001001
 9

	)

66 
	#B0001001
 9

	)

67 
	#B00001001
 9

	)

68 
	#B1010
 10

	)

69 
	#B01010
 10

	)

70 
	#B001010
 10

	)

71 
	#B0001010
 10

	)

72 
	#B00001010
 10

	)

73 
	#B1011
 11

	)

74 
	#B01011
 11

	)

75 
	#B001011
 11

	)

76 
	#B0001011
 11

	)

77 
	#B00001011
 11

	)

78 
	#B1100
 12

	)

79 
	#B01100
 12

	)

80 
	#B001100
 12

	)

81 
	#B0001100
 12

	)

82 
	#B00001100
 12

	)

83 
	#B1101
 13

	)

84 
	#B01101
 13

	)

85 
	#B001101
 13

	)

86 
	#B0001101
 13

	)

87 
	#B00001101
 13

	)

88 
	#B1110
 14

	)

89 
	#B01110
 14

	)

90 
	#B001110
 14

	)

91 
	#B0001110
 14

	)

92 
	#B00001110
 14

	)

93 
	#B1111
 15

	)

94 
	#B01111
 15

	)

95 
	#B001111
 15

	)

96 
	#B0001111
 15

	)

97 
	#B00001111
 15

	)

98 
	#B10000
 16

	)

99 
	#B010000
 16

	)

100 
	#B0010000
 16

	)

101 
	#B00010000
 16

	)

102 
	#B10001
 17

	)

103 
	#B010001
 17

	)

104 
	#B0010001
 17

	)

105 
	#B00010001
 17

	)

106 
	#B10010
 18

	)

107 
	#B010010
 18

	)

108 
	#B0010010
 18

	)

109 
	#B00010010
 18

	)

110 
	#B10011
 19

	)

111 
	#B010011
 19

	)

112 
	#B0010011
 19

	)

113 
	#B00010011
 19

	)

114 
	#B10100
 20

	)

115 
	#B010100
 20

	)

116 
	#B0010100
 20

	)

117 
	#B00010100
 20

	)

118 
	#B10101
 21

	)

119 
	#B010101
 21

	)

120 
	#B0010101
 21

	)

121 
	#B00010101
 21

	)

122 
	#B10110
 22

	)

123 
	#B010110
 22

	)

124 
	#B0010110
 22

	)

125 
	#B00010110
 22

	)

126 
	#B10111
 23

	)

127 
	#B010111
 23

	)

128 
	#B0010111
 23

	)

129 
	#B00010111
 23

	)

130 
	#B11000
 24

	)

131 
	#B011000
 24

	)

132 
	#B0011000
 24

	)

133 
	#B00011000
 24

	)

134 
	#B11001
 25

	)

135 
	#B011001
 25

	)

136 
	#B0011001
 25

	)

137 
	#B00011001
 25

	)

138 
	#B11010
 26

	)

139 
	#B011010
 26

	)

140 
	#B0011010
 26

	)

141 
	#B00011010
 26

	)

142 
	#B11011
 27

	)

143 
	#B011011
 27

	)

144 
	#B0011011
 27

	)

145 
	#B00011011
 27

	)

146 
	#B11100
 28

	)

147 
	#B011100
 28

	)

148 
	#B0011100
 28

	)

149 
	#B00011100
 28

	)

150 
	#B11101
 29

	)

151 
	#B011101
 29

	)

152 
	#B0011101
 29

	)

153 
	#B00011101
 29

	)

154 
	#B11110
 30

	)

155 
	#B011110
 30

	)

156 
	#B0011110
 30

	)

157 
	#B00011110
 30

	)

158 
	#B11111
 31

	)

159 
	#B011111
 31

	)

160 
	#B0011111
 31

	)

161 
	#B00011111
 31

	)

162 
	#B100000
 32

	)

163 
	#B0100000
 32

	)

164 
	#B00100000
 32

	)

165 
	#B100001
 33

	)

166 
	#B0100001
 33

	)

167 
	#B00100001
 33

	)

168 
	#B100010
 34

	)

169 
	#B0100010
 34

	)

170 
	#B00100010
 34

	)

171 
	#B100011
 35

	)

172 
	#B0100011
 35

	)

173 
	#B00100011
 35

	)

174 
	#B100100
 36

	)

175 
	#B0100100
 36

	)

176 
	#B00100100
 36

	)

177 
	#B100101
 37

	)

178 
	#B0100101
 37

	)

179 
	#B00100101
 37

	)

180 
	#B100110
 38

	)

181 
	#B0100110
 38

	)

182 
	#B00100110
 38

	)

183 
	#B100111
 39

	)

184 
	#B0100111
 39

	)

185 
	#B00100111
 39

	)

186 
	#B101000
 40

	)

187 
	#B0101000
 40

	)

188 
	#B00101000
 40

	)

189 
	#B101001
 41

	)

190 
	#B0101001
 41

	)

191 
	#B00101001
 41

	)

192 
	#B101010
 42

	)

193 
	#B0101010
 42

	)

194 
	#B00101010
 42

	)

195 
	#B101011
 43

	)

196 
	#B0101011
 43

	)

197 
	#B00101011
 43

	)

198 
	#B101100
 44

	)

199 
	#B0101100
 44

	)

200 
	#B00101100
 44

	)

201 
	#B101101
 45

	)

202 
	#B0101101
 45

	)

203 
	#B00101101
 45

	)

204 
	#B101110
 46

	)

205 
	#B0101110
 46

	)

206 
	#B00101110
 46

	)

207 
	#B101111
 47

	)

208 
	#B0101111
 47

	)

209 
	#B00101111
 47

	)

210 
	#B110000
 48

	)

211 
	#B0110000
 48

	)

212 
	#B00110000
 48

	)

213 
	#B110001
 49

	)

214 
	#B0110001
 49

	)

215 
	#B00110001
 49

	)

216 
	#B110010
 50

	)

217 
	#B0110010
 50

	)

218 
	#B00110010
 50

	)

219 
	#B110011
 51

	)

220 
	#B0110011
 51

	)

221 
	#B00110011
 51

	)

222 
	#B110100
 52

	)

223 
	#B0110100
 52

	)

224 
	#B00110100
 52

	)

225 
	#B110101
 53

	)

226 
	#B0110101
 53

	)

227 
	#B00110101
 53

	)

228 
	#B110110
 54

	)

229 
	#B0110110
 54

	)

230 
	#B00110110
 54

	)

231 
	#B110111
 55

	)

232 
	#B0110111
 55

	)

233 
	#B00110111
 55

	)

234 
	#B111000
 56

	)

235 
	#B0111000
 56

	)

236 
	#B00111000
 56

	)

237 
	#B111001
 57

	)

238 
	#B0111001
 57

	)

239 
	#B00111001
 57

	)

240 
	#B111010
 58

	)

241 
	#B0111010
 58

	)

242 
	#B00111010
 58

	)

243 
	#B111011
 59

	)

244 
	#B0111011
 59

	)

245 
	#B00111011
 59

	)

246 
	#B111100
 60

	)

247 
	#B0111100
 60

	)

248 
	#B00111100
 60

	)

249 
	#B111101
 61

	)

250 
	#B0111101
 61

	)

251 
	#B00111101
 61

	)

252 
	#B111110
 62

	)

253 
	#B0111110
 62

	)

254 
	#B00111110
 62

	)

255 
	#B111111
 63

	)

256 
	#B0111111
 63

	)

257 
	#B00111111
 63

	)

258 
	#B1000000
 64

	)

259 
	#B01000000
 64

	)

260 
	#B1000001
 65

	)

261 
	#B01000001
 65

	)

262 
	#B1000010
 66

	)

263 
	#B01000010
 66

	)

264 
	#B1000011
 67

	)

265 
	#B01000011
 67

	)

266 
	#B1000100
 68

	)

267 
	#B01000100
 68

	)

268 
	#B1000101
 69

	)

269 
	#B01000101
 69

	)

270 
	#B1000110
 70

	)

271 
	#B01000110
 70

	)

272 
	#B1000111
 71

	)

273 
	#B01000111
 71

	)

274 
	#B1001000
 72

	)

275 
	#B01001000
 72

	)

276 
	#B1001001
 73

	)

277 
	#B01001001
 73

	)

278 
	#B1001010
 74

	)

279 
	#B01001010
 74

	)

280 
	#B1001011
 75

	)

281 
	#B01001011
 75

	)

282 
	#B1001100
 76

	)

283 
	#B01001100
 76

	)

284 
	#B1001101
 77

	)

285 
	#B01001101
 77

	)

286 
	#B1001110
 78

	)

287 
	#B01001110
 78

	)

288 
	#B1001111
 79

	)

289 
	#B01001111
 79

	)

290 
	#B1010000
 80

	)

291 
	#B01010000
 80

	)

292 
	#B1010001
 81

	)

293 
	#B01010001
 81

	)

294 
	#B1010010
 82

	)

295 
	#B01010010
 82

	)

296 
	#B1010011
 83

	)

297 
	#B01010011
 83

	)

298 
	#B1010100
 84

	)

299 
	#B01010100
 84

	)

300 
	#B1010101
 85

	)

301 
	#B01010101
 85

	)

302 
	#B1010110
 86

	)

303 
	#B01010110
 86

	)

304 
	#B1010111
 87

	)

305 
	#B01010111
 87

	)

306 
	#B1011000
 88

	)

307 
	#B01011000
 88

	)

308 
	#B1011001
 89

	)

309 
	#B01011001
 89

	)

310 
	#B1011010
 90

	)

311 
	#B01011010
 90

	)

312 
	#B1011011
 91

	)

313 
	#B01011011
 91

	)

314 
	#B1011100
 92

	)

315 
	#B01011100
 92

	)

316 
	#B1011101
 93

	)

317 
	#B01011101
 93

	)

318 
	#B1011110
 94

	)

319 
	#B01011110
 94

	)

320 
	#B1011111
 95

	)

321 
	#B01011111
 95

	)

322 
	#B1100000
 96

	)

323 
	#B01100000
 96

	)

324 
	#B1100001
 97

	)

325 
	#B01100001
 97

	)

326 
	#B1100010
 98

	)

327 
	#B01100010
 98

	)

328 
	#B1100011
 99

	)

329 
	#B01100011
 99

	)

330 
	#B1100100
 100

	)

331 
	#B01100100
 100

	)

332 
	#B1100101
 101

	)

333 
	#B01100101
 101

	)

334 
	#B1100110
 102

	)

335 
	#B01100110
 102

	)

336 
	#B1100111
 103

	)

337 
	#B01100111
 103

	)

338 
	#B1101000
 104

	)

339 
	#B01101000
 104

	)

340 
	#B1101001
 105

	)

341 
	#B01101001
 105

	)

342 
	#B1101010
 106

	)

343 
	#B01101010
 106

	)

344 
	#B1101011
 107

	)

345 
	#B01101011
 107

	)

346 
	#B1101100
 108

	)

347 
	#B01101100
 108

	)

348 
	#B1101101
 109

	)

349 
	#B01101101
 109

	)

350 
	#B1101110
 110

	)

351 
	#B01101110
 110

	)

352 
	#B1101111
 111

	)

353 
	#B01101111
 111

	)

354 
	#B1110000
 112

	)

355 
	#B01110000
 112

	)

356 
	#B1110001
 113

	)

357 
	#B01110001
 113

	)

358 
	#B1110010
 114

	)

359 
	#B01110010
 114

	)

360 
	#B1110011
 115

	)

361 
	#B01110011
 115

	)

362 
	#B1110100
 116

	)

363 
	#B01110100
 116

	)

364 
	#B1110101
 117

	)

365 
	#B01110101
 117

	)

366 
	#B1110110
 118

	)

367 
	#B01110110
 118

	)

368 
	#B1110111
 119

	)

369 
	#B01110111
 119

	)

370 
	#B1111000
 120

	)

371 
	#B01111000
 120

	)

372 
	#B1111001
 121

	)

373 
	#B01111001
 121

	)

374 
	#B1111010
 122

	)

375 
	#B01111010
 122

	)

376 
	#B1111011
 123

	)

377 
	#B01111011
 123

	)

378 
	#B1111100
 124

	)

379 
	#B01111100
 124

	)

380 
	#B1111101
 125

	)

381 
	#B01111101
 125

	)

382 
	#B1111110
 126

	)

383 
	#B01111110
 126

	)

384 
	#B1111111
 127

	)

385 
	#B01111111
 127

	)

386 
	#B10000000
 128

	)

387 
	#B10000001
 129

	)

388 
	#B10000010
 130

	)

389 
	#B10000011
 131

	)

390 
	#B10000100
 132

	)

391 
	#B10000101
 133

	)

392 
	#B10000110
 134

	)

393 
	#B10000111
 135

	)

394 
	#B10001000
 136

	)

395 
	#B10001001
 137

	)

396 
	#B10001010
 138

	)

397 
	#B10001011
 139

	)

398 
	#B10001100
 140

	)

399 
	#B10001101
 141

	)

400 
	#B10001110
 142

	)

401 
	#B10001111
 143

	)

402 
	#B10010000
 144

	)

403 
	#B10010001
 145

	)

404 
	#B10010010
 146

	)

405 
	#B10010011
 147

	)

406 
	#B10010100
 148

	)

407 
	#B10010101
 149

	)

408 
	#B10010110
 150

	)

409 
	#B10010111
 151

	)

410 
	#B10011000
 152

	)

411 
	#B10011001
 153

	)

412 
	#B10011010
 154

	)

413 
	#B10011011
 155

	)

414 
	#B10011100
 156

	)

415 
	#B10011101
 157

	)

416 
	#B10011110
 158

	)

417 
	#B10011111
 159

	)

418 
	#B10100000
 160

	)

419 
	#B10100001
 161

	)

420 
	#B10100010
 162

	)

421 
	#B10100011
 163

	)

422 
	#B10100100
 164

	)

423 
	#B10100101
 165

	)

424 
	#B10100110
 166

	)

425 
	#B10100111
 167

	)

426 
	#B10101000
 168

	)

427 
	#B10101001
 169

	)

428 
	#B10101010
 170

	)

429 
	#B10101011
 171

	)

430 
	#B10101100
 172

	)

431 
	#B10101101
 173

	)

432 
	#B10101110
 174

	)

433 
	#B10101111
 175

	)

434 
	#B10110000
 176

	)

435 
	#B10110001
 177

	)

436 
	#B10110010
 178

	)

437 
	#B10110011
 179

	)

438 
	#B10110100
 180

	)

439 
	#B10110101
 181

	)

440 
	#B10110110
 182

	)

441 
	#B10110111
 183

	)

442 
	#B10111000
 184

	)

443 
	#B10111001
 185

	)

444 
	#B10111010
 186

	)

445 
	#B10111011
 187

	)

446 
	#B10111100
 188

	)

447 
	#B10111101
 189

	)

448 
	#B10111110
 190

	)

449 
	#B10111111
 191

	)

450 
	#B11000000
 192

	)

451 
	#B11000001
 193

	)

452 
	#B11000010
 194

	)

453 
	#B11000011
 195

	)

454 
	#B11000100
 196

	)

455 
	#B11000101
 197

	)

456 
	#B11000110
 198

	)

457 
	#B11000111
 199

	)

458 
	#B11001000
 200

	)

459 
	#B11001001
 201

	)

460 
	#B11001010
 202

	)

461 
	#B11001011
 203

	)

462 
	#B11001100
 204

	)

463 
	#B11001101
 205

	)

464 
	#B11001110
 206

	)

465 
	#B11001111
 207

	)

466 
	#B11010000
 208

	)

467 
	#B11010001
 209

	)

468 
	#B11010010
 210

	)

469 
	#B11010011
 211

	)

470 
	#B11010100
 212

	)

471 
	#B11010101
 213

	)

472 
	#B11010110
 214

	)

473 
	#B11010111
 215

	)

474 
	#B11011000
 216

	)

475 
	#B11011001
 217

	)

476 
	#B11011010
 218

	)

477 
	#B11011011
 219

	)

478 
	#B11011100
 220

	)

479 
	#B11011101
 221

	)

480 
	#B11011110
 222

	)

481 
	#B11011111
 223

	)

482 
	#B11100000
 224

	)

483 
	#B11100001
 225

	)

484 
	#B11100010
 226

	)

485 
	#B11100011
 227

	)

486 
	#B11100100
 228

	)

487 
	#B11100101
 229

	)

488 
	#B11100110
 230

	)

489 
	#B11100111
 231

	)

490 
	#B11101000
 232

	)

491 
	#B11101001
 233

	)

492 
	#B11101010
 234

	)

493 
	#B11101011
 235

	)

494 
	#B11101100
 236

	)

495 
	#B11101101
 237

	)

496 
	#B11101110
 238

	)

497 
	#B11101111
 239

	)

498 
	#B11110000
 240

	)

499 
	#B11110001
 241

	)

500 
	#B11110010
 242

	)

501 
	#B11110011
 243

	)

502 
	#B11110100
 244

	)

503 
	#B11110101
 245

	)

504 
	#B11110110
 246

	)

505 
	#B11110111
 247

	)

506 
	#B11111000
 248

	)

507 
	#B11111001
 249

	)

508 
	#B11111010
 250

	)

509 
	#B11111011
 251

	)

510 
	#B11111100
 252

	)

511 
	#B11111101
 253

	)

512 
	#B11111110
 254

	)

513 
	#B11111111
 255

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\HWButtons.cpp

37 
	~"HWBuâ⁄s.h
"

38 
	~"PokôtoC‹e.h
"

39 
	~"PokôtoSound.h
"

40 
	~"PokôtoDi•œy.h
"

42 
	gPokôto
::
Sound
 
_s
;

43 
	gPokôto
::
Di•œy
 
_bd
;

45 
usög
 
«me•a˚
 
	gmbed
;

47 
I¡îru±In
 
ABä
(
POK_BTN_A_PIN
);

48 
I¡îru±In
 
BBä
(
POK_BTN_B_PIN
);

49 
I¡îru±In
 
CBä
(
POK_BTN_C_PIN
);

50 
I¡îru±In
 
UBä
(
POK_BTN_UP_PIN
);

51 
I¡îru±In
 
DBä
(
POK_BTN_DOWN_PIN
);

52 
I¡îru±In
 
LBä
(
POK_BTN_LEFT_PIN
);

53 
I¡îru±In
 
RBä
(
POK_BTN_RIGHT_PIN
);

55 
	#BS_IDLE
 0

	)

56 
	#BS_DOWN
 1

	)

57 
	#BS_UP
 2

	)

59 
uöt8_t
 
	gPokôto
::
hñdSèãs
[
NUM_BTN
];

60 
boﬁ
 
	gvﬁ_c⁄åﬁ_˛icked
=
Ál£
;

62 
	$APªs£d
() {

63 
Pokôto
::
hñdSèãs
[
BTN_A
] = 1;

64 
	}
}

65 
	$ARñó£d
() {

66 
Pokôto
::
hñdSèãs
[
BTN_A
] = 0;

67 
	}
}

68 
	$BPªs£d
(Ë{ 
Pokôto
::
hñdSèãs
[
BTN_B
] = 1; 
	}
}

69 
	$BRñó£d
(Ë{ 
Pokôto
::
hñdSèãs
[
BTN_B
] = 0; 
	}
}

70 
	$CPªs£d
() {

71 
Pokôto
::
hñdSèãs
[
BTN_C
] = 1;

72 
	}
}

73 
	$CRñó£d
(Ë{ 
Pokôto
::
hñdSèãs
[
BTN_C
] = 0; 
	}
}

74 
	$UPªs£d
(Ë{ 
Pokôto
::
hñdSèãs
[
BTN_UP
] = 1; 
	}
}

75 
	$URñó£d
(Ë{ 
Pokôto
::
hñdSèãs
[
BTN_UP
] = 0; 
	}
}

76 
	$DPªs£d
(Ë{ 
Pokôto
::
hñdSèãs
[
BTN_DOWN
] = 1; 
	}
}

77 
	$DRñó£d
(Ë{ 
Pokôto
::
hñdSèãs
[
BTN_DOWN
] = 0; 
	}
}

78 
	$RPªs£d
() {

80 i‡(
Pokôto
::
hñdSèãs
[
BTN_C
]Ë
_s
.
	`vﬁumeUp
();

81 
Pokôto
::
hñdSèãs
[
BTN_RIGHT
] = 1;

82 
	}
}

83 
	$RRñó£d
(Ë{ 
Pokôto
::
hñdSèãs
[
BTN_RIGHT
] = 0; 
	}
}

84 
	$LPªs£d
() {

86 i‡(
Pokôto
::
hñdSèãs
[
BTN_C
]Ë
_s
.
	`vﬁumeDown
();

87 
Pokôto
::
hñdSèãs
[
BTN_LEFT
] = 1;

88 
	}
}

89 
	$LRñó£d
(Ë{ 
Pokôto
::
hñdSèãs
[
BTN_LEFT
] = 0; 
	}
}

91 
ölöe
 
	$CÀ¨PöI¡
(
LPC_PIN_INT_T
 *
pPININT
, 
uöt32_t
 
pös
)

93 
pPININT
->
IST
 = 
pös
;

94 
	}
}

96 
	$PIN_INT0_IRQH™dÀr
()

102 
Pokôto
::
hñdSèãs
[
BTN_A
]=
ABä
.
	`ªad
();

103 
	`CÀ¨PöI¡
((
LPC_PIN_INT_T
 *)
LPC_PININT
, 
	`PININTCH
(0));

104 
	}
}

106 
	$PIN_INT1_IRQH™dÀr
()

110 
Pokôto
::
hñdSèãs
[
BTN_B
]=
BBä
.
	`ªad
();

111 
	`CÀ¨PöI¡
((
LPC_PIN_INT_T
 *)
LPC_PININT
, 
	`PININTCH
(1));

112 
	}
}

114 
	$PIN_INT2_IRQH™dÀr
()

118 
Pokôto
::
hñdSèãs
[
BTN_C
]=
CBä
.
	`ªad
();

119 
	`CÀ¨PöI¡
((
LPC_PIN_INT_T
 *)
LPC_PININT
, 
	`PININTCH
(2));

120 
	}
}

122 
	$PIN_INT3_IRQH™dÀr
()

126 
Pokôto
::
hñdSèãs
[
BTN_UP
]=
UBä
.
	`ªad
();

127 
	`CÀ¨PöI¡
((
LPC_PIN_INT_T
 *)
LPC_PININT
, 
	`PININTCH
(3));

128 
	}
}

130 
	$PIN_INT4_IRQH™dÀr
()

134 
Pokôto
::
hñdSèãs
[
BTN_DOWN
]=
DBä
.
	`ªad
();

135 
	`CÀ¨PöI¡
((
LPC_PIN_INT_T
 *)
LPC_PININT
, 
	`PININTCH
(4));

136 
	}
}

138 
	$PIN_INT5_IRQH™dÀr
()

143 
Pokôto
::
hñdSèãs
[
BTN_C
]=
CBä
.
	`ªad
();

144 
Pokôto
::
hñdSèãs
[
BTN_LEFT
]=
LBä
.
	`ªad
();

145 i‡(
Pokôto
::
hñdSèãs
[
BTN_C
] && Pokôto::hñdSèãs[
BTN_LEFT
])

147 i‡(!
vﬁ_c⁄åﬁ_˛icked
Ë
_s
.
	`vﬁumeDown
();

148 
Pokôto
::
hñdSèãs
[
BTN_LEFT
]=0;

149 
vﬁ_c⁄åﬁ_˛icked
=
åue
;

150 } 
vﬁ_c⁄åﬁ_˛icked
=
Ál£
;

152 
	`CÀ¨PöI¡
((
LPC_PIN_INT_T
 *)
LPC_PININT
, 
	`PININTCH
(5));

153 
	}
}

155 
	$PIN_INT6_IRQH™dÀr
()

160 
Pokôto
::
hñdSèãs
[
BTN_C
]=
CBä
.
	`ªad
();

161 
Pokôto
::
hñdSèãs
[
BTN_RIGHT
]=
RBä
.
	`ªad
();

162 i‡(
Pokôto
::
hñdSèãs
[
BTN_C
] && Pokôto::hñdSèãs[
BTN_RIGHT
])

164 i‡(!
vﬁ_c⁄åﬁ_˛icked
Ë
_s
.
	`vﬁumeUp
();

165 
Pokôto
::
hñdSèãs
[
BTN_RIGHT
]=0;

166 
vﬁ_c⁄åﬁ_˛icked
=
åue
;

167 } 
vﬁ_c⁄åﬁ_˛icked
=
Ál£
;

169 
	`CÀ¨PöI¡
((
LPC_PIN_INT_T
 *)
LPC_PININT
, 
	`PININTCH
(6));

170 
	}
}

173 
	gPokôto
::
	$öôBuâ⁄s
() {

174 
ABä
.
	`ÁŒ
(&
ARñó£d
);

175 
ABä
.
	`ri£
(&
APªs£d
);

176 
BBä
.
	`ÁŒ
(&
BRñó£d
);

177 
BBä
.
	`ri£
(&
BPªs£d
);

178 
CBä
.
	`ÁŒ
(&
CRñó£d
);

179 
CBä
.
	`ri£
(&
CPªs£d
);

180 
UBä
.
	`ÁŒ
(&
URñó£d
);

181 
UBä
.
	`ri£
(&
UPªs£d
);

182 
DBä
.
	`ÁŒ
(&
DRñó£d
);

183 
DBä
.
	`ri£
(&
DPªs£d
);

184 
LBä
.
	`ÁŒ
(&
LRñó£d
);

185 
LBä
.
	`ri£
(&
LPªs£d
);

186 
RBä
.
	`ÁŒ
(&
RRñó£d
);

187 
RBä
.
	`ri£
(&
RPªs£d
);

188 
	`NVIC_SëVe˘‹
((
IRQn_Ty≥
)(
PIN_INT0_IRQn
), (
uöt32_t
)&
PIN_INT0_IRQH™dÀr
);

189 
	`NVIC_SëVe˘‹
((
IRQn_Ty≥
)(
PIN_INT1_IRQn
), (
uöt32_t
)&
PIN_INT1_IRQH™dÀr
);

190 
	`NVIC_SëVe˘‹
((
IRQn_Ty≥
)(
PIN_INT2_IRQn
), (
uöt32_t
)&
PIN_INT2_IRQH™dÀr
);

191 
	`NVIC_SëVe˘‹
((
IRQn_Ty≥
)(
PIN_INT3_IRQn
), (
uöt32_t
)&
PIN_INT3_IRQH™dÀr
);

192 
	`NVIC_SëVe˘‹
((
IRQn_Ty≥
)(
PIN_INT4_IRQn
), (
uöt32_t
)&
PIN_INT4_IRQH™dÀr
);

193 
	`NVIC_SëVe˘‹
((
IRQn_Ty≥
)(
PIN_INT5_IRQn
), (
uöt32_t
)&
PIN_INT5_IRQH™dÀr
);

194 
	`NVIC_SëVe˘‹
((
IRQn_Ty≥
)(
PIN_INT6_IRQn
), (
uöt32_t
)&
PIN_INT6_IRQH™dÀr
);

195 
	}
}

197 
uöt8_t
 
	gPokôto
::
C‹e
::
	$aBä
() {

198  
Pokôto
::
hñdSèãs
[
BTN_A
];

199 
	}
}

201 
uöt8_t
 
	gPokôto
::
C‹e
::
	$bBä
() {

202  
Pokôto
::
hñdSèãs
[
BTN_B
];

203 
	}
}

205 
uöt8_t
 
	gPokôto
::
C‹e
::
	$cBä
() {

206  
Pokôto
::
hñdSèãs
[
BTN_C
];

207 
	}
}

209 
uöt8_t
 
	gPokôto
::
C‹e
::
	$upBä
() {

210  
Pokôto
::
hñdSèãs
[
BTN_UP
];

211 
	}
}

212 
uöt8_t
 
	gPokôto
::
C‹e
::
	$downBä
() {

213  
Pokôto
::
hñdSèãs
[
BTN_DOWN
];

214 
	}
}

216 
uöt8_t
 
	gPokôto
::
C‹e
::
	$À·Bä
() {

217  
Pokôto
::
hñdSèãs
[
BTN_LEFT
];

218 
	}
}

219 
uöt8_t
 
	gPokôto
::
C‹e
::
	$rightBä
() {

220  
Pokôto
::
hñdSèãs
[
BTN_RIGHT
];

221 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\HWButtons.h

36 #i‚de‡
HWBUTTONS_H


37 
	#HWBUTTONS_H


	)

39 
	~"mbed.h
"

40 
	~"Pokôto_£âögs.h
"

42 
	#BTN_UP
 1

	)

43 
	#BTN_RIGHT
 2

	)

44 
	#BTN_DOWN
 3

	)

45 
	#BTN_LEFT
 0

	)

46 
	#BTN_A
 4

	)

47 
	#BTN_B
 5

	)

48 
	#BTN_C
 6

	)

49 
	#NUM_BTN
 7

	)

52 
__IO
 
uöt32_t
 
	mISEL
;

53 
__IO
 
uöt32_t
 
	mIENR
;

54 
__IO
 
uöt32_t
 
	mSIENR
;

55 
__IO
 
uöt32_t
 
	mCIENR
;

56 
__IO
 
uöt32_t
 
	mIENF
;

57 
__IO
 
uöt32_t
 
	mSIENF
;

58 
__IO
 
uöt32_t
 
	mCIENF
;

59 
__IO
 
uöt32_t
 
	mRISE
;

60 
__IO
 
uöt32_t
 
	mFALL
;

61 
__IO
 
uöt32_t
 
	mIST
;

62 
__IO
 
uöt32_t
 
	mPMCTRL
;

63 
__IO
 
uöt32_t
 
	mPMSRC
;

64 
__IO
 
uöt32_t
 
	mPMCFG
;

65 } 
	tLPC_PIN_INT_T
;

67 
	#LPC_PININT
 0xA0004000

	)

68 
	#PININTCH
(
ch
Ë(1 << (ch))

	)

70 
«me•a˚
 
	gPokôto
 {

72 
uöt8_t
 
hñdSèãs
[];

73 
öôBuâ⁄s
();

74 
pﬁlBuâ⁄s
();

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\HWLCD.cpp

37 
	~"HWLCD.h
"

38 
	~"Pokôto_£âögs.h
"

40 
	#avrmax
(
a
,
b
Ë(◊)>(b)?◊):(b))

	)

41 
	#avrmö
(
a
,
b
Ë(◊)<(b)?◊):(b))

	)

43 #ifde‡
DISABLEAVRMIN


44 
	~<Æg‹ôhm
>

45 
usög
 
	g°d
::
mö
;

46 
usög
 
	g°d
::
max
;

49 
	#AB_JUMP
 1024

50 
	#GB_JUMP
 504

51 

	)

52 
usög
 
«me•a˚
 
	gPokôto
;

54 
uöt16_t
 
	g¥evd©a
=0;

56 #i‡
POK_BOARDREV
 == 2

57 
pwmout_t
 
	gbacklighçwm
;

67 
ölöe
 
	$£tup_d©a_16
(
uöt16_t
 
d©a
)

79 
SET_MASK_P2
;

80 
LPC_GPIO_PORT
->
MPIN
[2] = (
d©a
<<3);

81 
CLR_MASK_P2
;

84 
	}
}

92 
ölöe
 
	$wrôe_comm™d_16
(
uöt16_t
 
d©a
)

94 
CLR_CS
;

95 
CLR_CD
;

96 
SET_RD
;

97 
	`£tup_d©a_16
(
d©a
);

98 
CLR_WR_SLOW
;

99 
SET_WR
;

100 
SET_CS
;

101 
	}
}

108 
ölöe
 
	$wrôe_d©a_16
(
uöt16_t
 
d©a
)

110 
CLR_CS
;

111 
SET_CD
;

112 
SET_RD
;

113 
	`£tup_d©a_16
(
d©a
);

114 
CLR_WR
;

115 
SET_WR
;

116 
SET_CS
;

117 
	}
}

124 
	gPokôto
::
	$pumpDRAMd©a
(
uöt16_t
* 
d©a
,uöt16_à
cou¡î
)

126 
cou¡î
--) {

127 
CLR_CS
;

128 
SET_CD
;

129 
SET_RD
;

130 
	`£tup_d©a_16
(*
d©a
++);

131 
CLR_WR
;

132 
SET_WR
;

133 
SET_CS
;

135 
	}
}

143 
ölöe
 
	$£tDRAM±r
(
uöt8_t
 
x±r
, uöt8_à
yoff£t
)

145 
	`wrôe_comm™d
(0x20);

146 
	`wrôe_d©a
(
yoff£t
);

147 
	`wrôe_comm™d
(0x21);

148 
	`wrôe_d©a
(
x±r
);

149 
	`wrôe_comm™d
(0x22);

150 
CLR_CS_SET_CD_RD_WR
;

151 
	}
}

158 
	gPokôto
::
	$£tDRAMpoöt
(
uöt8_t
 
x±r
, uöt8_à
yoff£t
)

160 
	`wrôe_comm™d
(0x20);

161 
	`wrôe_d©a
(
yoff£t
);

162 
	`wrôe_comm™d
(0x21);

163 
	`wrôe_d©a
(
x±r
);

164 
	`wrôe_comm™d
(0x22);

165 
CLR_CS_SET_CD_RD_WR
;

166 
	}
}

168 
	gPokôto
::
	$öôBacklight
() {

169 #i‡
POK_BOARDREV
 == 2

170 
	`pwmout_öô
(&
backlighçwm
,
POK_BACKLIGHT_PIN
);

171 
	`pwmout_≥riod_us
(&
backlighçwm
,5);

172 
	`pwmout_wrôe
(&
backlighçwm
,
POK_BACKLIGHT_INITIALVALUE
);

174 
	}
}

176 
	gPokôto
::
	$£tBacklight
(
vÆue
) {

177 i‡(
vÆue
>0.999f) value = 0.999f;

178 
	`pwmout_wrôe
(&
backlighçwm
,
vÆue
);

179 
	}
}

181 
	gPokôto
::
	$lcdInô
() {

182 
	`öôBacklight
();

184 
SET_RESET
;

185 
	`waô_ms
(10);

186 
CLR_RESET
;

187 
	`waô_ms
(10);

188 
SET_RESET
;

189 
	`waô_ms
(10);

191 
	`wrôe_comm™d
(0x01);

192 
	`wrôe_d©a
(0x11C);

202 
	`wrôe_comm™d
(0x02);

203 
	`wrôe_d©a
(0x0100);

205 
	`wrôe_comm™d
(0x03);

206 
	`wrôe_d©a
(0x1030);

213 
	`wrôe_comm™d
(0x08);

214 
	`wrôe_d©a
(0x0808);

216 
	`wrôe_comm™d
(0x0C);

217 
	`wrôe_d©a
(0x0000);

219 
	`wrôe_comm™d
(0x0F);

220 
	`wrôe_d©a
(0x0001);

222 
	`wrôe_comm™d
(0x20);

223 
	`wrôe_d©a
(0x0000);

225 
	`wrôe_comm™d
(0x21);

226 
	`wrôe_d©a
(0x0000);

229 
	`wrôe_comm™d
(0x10);

230 
	`wrôe_d©a
(0x0000);

232 
	`wrôe_comm™d
(0x11);

233 
	`wrôe_d©a
(0x1000);

234 
	`waô_ms
(10);

236 
	`wrôe_comm™d
(0x30);

237 
	`wrôe_d©a
(0x0000);

239 
	`wrôe_comm™d
(0x31);

240 
	`wrôe_d©a
(0x00DB);

242 
	`wrôe_comm™d
(0x32);

243 
	`wrôe_d©a
(0x0000);

245 
	`wrôe_comm™d
(0x33);

246 
	`wrôe_d©a
(0x0000);

248 
	`wrôe_comm™d
(0x34);

249 
	`wrôe_d©a
(0x00DB);

251 
	`wrôe_comm™d
(0x35);

252 
	`wrôe_d©a
(0x0000);

254 
	`wrôe_comm™d
(0x36);

255 
	`wrôe_d©a
(0x00AF);

257 
	`wrôe_comm™d
(0x37);

258 
	`wrôe_d©a
(0x0000);

260 
	`wrôe_comm™d
(0x38);

261 
	`wrôe_d©a
(0x00DB);

263 
	`wrôe_comm™d
(0x39);

264 
	`wrôe_d©a
(0x0000);

265 
	`waô_ms
(10);

266 
	`wrôe_comm™d
(0xff);

267 
	`wrôe_d©a
(0x0003);

270 
	`wrôe_comm™d
(0x50);

271 
	`wrôe_d©a
(0x0203);

273 
	`wrôe_comm™d
(0x051);

274 
	`wrôe_d©a
(0x0A09);

276 
	`wrôe_comm™d
(0x52);

277 
	`wrôe_d©a
(0x0005);

279 
	`wrôe_comm™d
(0x53);

280 
	`wrôe_d©a
(0x1021);

282 
	`wrôe_comm™d
(0x54);

283 
	`wrôe_d©a
(0x0602);

285 
	`wrôe_comm™d
(0x55);

286 
	`wrôe_d©a
(0x0003);

288 
	`wrôe_comm™d
(0x56);

289 
	`wrôe_d©a
(0x0703);

291 
	`wrôe_comm™d
(0x57);

292 
	`wrôe_d©a
(0x0507);

294 
	`wrôe_comm™d
(0x58);

295 
	`wrôe_d©a
(0x1021);

297 
	`wrôe_comm™d
(0x59);

298 
	`wrôe_d©a
(0x0703);

300 
	`wrôe_comm™d
(0xB0);

301 
	`wrôe_d©a
(0x2501);

303 
	`wrôe_comm™d
(0xFF);

304 
	`wrôe_d©a
(0x0000);

306 
	`wrôe_comm™d
(0x07);

307 
	`wrôe_d©a
(0x1017);

308 
	`waô_ms
(200);

309 
	`wrôe_comm™d
(0x22);

311 
	`lcdCÀ¨
();

312 
	}
}

314 
	gPokôto
::
	$lcdSÀï
(){

315 
	`wrôe_comm™d
(0xFF);

316 
	`wrôe_d©a
(0x0000);

318 
	`wrôe_comm™d
(0x07);

319 
	`wrôe_d©a
(0x0000);

320 
	`waô_ms
(50);

321 
	`wrôe_comm™d
(0x10);

322 
	`wrôe_d©a
(0x0003);

323 
	`waô_ms
(200);

325 
	}
}

327 
	gPokôto
::
	$lcdWakeUp
 (){

329 
	`waô_ms
(200);

330 
	`wrôe_comm™d
(0xFF);

331 
	`wrôe_d©a
(0x0000);

333 
	`wrôe_comm™d
(0x10);

334 
	`wrôe_d©a
(0x0000);

335 
	`waô_ms
(50);

336 
	`wrôe_comm™d
(0x07);

337 
	`wrôe_d©a
(0x0117);

338 
	`waô_ms
(200);

339 
	}
}

341 
	gPokôto
::
	$lcdFûlSurÁ˚
(
uöt16_t
 
c
) {

342 
uöt32_t
 
i
;

343 
	`wrôe_comm™d
(0x20);

344 
	`wrôe_d©a
(0x0000);

345 
	`wrôe_comm™d
(0x21);

346 
	`wrôe_d©a
(0);

347 
	`wrôe_comm™d
(0x22);

348 
	`£tup_d©a_16
(
c
);

349 
CLR_CS_SET_CD_RD_WR
;

350 
i
=0;i<220*176;i++)

352 
CLR_WR
;

353 
SET_WR
;

355 
	}
}

357 
	gPokôto
::
	$lcdCÀ¨
() {

358 
uöt32_t
 
i
;

359 
	`wrôe_comm™d
(0x20);

360 
	`wrôe_d©a
(0x0000);

361 
	`wrôe_comm™d
(0x21);

362 
	`wrôe_d©a
(0);

363 
	`wrôe_comm™d
(0x22);

364 
	`£tup_d©a_16
(0x0000);

365 
CLR_CS_SET_CD_RD_WR
;

366 
i
=0;i<220*176;i++)

368 
CLR_WR
;

369 
SET_WR
;

371 
	}
}

373 
	gPokôto
::
	$lcdPixñ
(
öt16_t
 
x
, i¡16_à
y
, 
uöt16_t
 
cﬁ‹
) {

374 i‡((
x
 < 0Ë|| (x >
POK_LCD_W
Ë|| (
y
 < 0Ë|| (y >
POK_LCD_H
))

376 
	`wrôe_comm™d
(0x20);

377 
	`wrôe_d©a
(
y
);

378 
	`wrôe_comm™d
(0x21);

379 
	`wrôe_d©a
(
x
);

380 
	`wrôe_comm™d
(0x22);

381 
CLR_CS_SET_CD_RD_WR
;

382 
	`£tup_d©a_16
(
cﬁ‹
);

383 
CLR_WR
;
SET_WR
;

384 
	}
}

386 
	gPokôto
::
	$£tWödow
(
uöt8_t
 
x1
, uöt8_à
y1
, uöt8_à
x2
, uöt8_à
y2
) {

387 
	`wrôe_comm™d
(0x37); 
	`wrôe_d©a
(
x1
);

388 
	`wrôe_comm™d
(0x36); 
	`wrôe_d©a
(
x2
);

389 
	`wrôe_comm™d
(0x39); 
	`wrôe_d©a
(
y1
);

390 
	`wrôe_comm™d
(0x38); 
	`wrôe_d©a
(
y2
);

391 
	`wrôe_comm™d
(0x20); 
	`wrôe_d©a
(
x1
);

392 
	`wrôe_comm™d
(0x21); 
	`wrôe_d©a
(
y1
);

393 
	}
}

395 
	gPokôto
::
	$lcdTûe
(
öt16_t
 
x0
, i¡16_à
y0
, i¡16_à
x1
, i¡16_à
y1
, 
uöt16_t
* 
gfx
){

396 
width
=
x1
-
x0
;

397 
height
=
y1
-
y0
;

398 i‡(
x0
 > 
POK_LCD_W
) ;

399 i‡(
y0
 > 
POK_LCD_H
) ;

400 i‡(
x0
 < 0) x0=0;

401 i‡(
y0
 < 0) y0=0;

403 
	`£tWödow
(
y0
, 
x0
, 
y1
-1, 
x1
-1);

404 
	`wrôe_comm™d
(0x22);

406 
x
=0; x<=
width
*
height
-1;x++) {

407 
	`wrôe_d©a
(
gfx
[
x
]);

409 
	`£tWödow
(0, 0, 175, 219);

410 
	}
}

413 
	gPokôto
::
	$lcdRe˘™gÀ
(
öt16_t
 
x0
, i¡16_à
y0
, i¡16_à
x1
, i¡16_à
y1
, 
uöt16_t
 
cﬁ‹
) {

414 
öt16_t
 
ãmp
;

415 i‡(
x0
>
x1
Ë{
ãmp
=x0;x0=x1;x1=temp;}

416 i‡(
y0
>
y1
Ë{
ãmp
=y0;y0=y1;y1=temp;}

417 i‡(
x0
 > 
POK_LCD_W
) ;

418 i‡(
y0
 > 
POK_LCD_H
) ;

419 i‡(
x1
 > 
POK_LCD_W
) x1=POK_LCD_W;

420 i‡(
y1
 > 
POK_LCD_H
) y1=POK_LCD_H;

421 i‡(
x0
 < 0) x0=0;

422 i‡(
y0
 < 0) y0=0;

424 
öt16_t
 
x
,
y
;

425 
x
=
x0
; x<=
x1
;x++) {

426 
	`wrôe_comm™d
(0x20);

427 
	`wrôe_d©a
(
y0
);

428 
	`wrôe_comm™d
(0x21);

429 
	`wrôe_d©a
(
x
);

430 
	`wrôe_comm™d
(0x22);

432 
CLR_CS_SET_CD_RD_WR
;

435 
y
=
y0
; y<
y1
;y++) {

436 
	`£tup_d©a_16
(
cﬁ‹
);

437 
CLR_WR
;
SET_WR
;

440 
	}
}

455 
	gPokôto
::
	$lcdRe‰eshMode1
(
uöt8_t
 * 
s¸buf
, uöt8_à
updRe˘X
, uöt8_à
updRe˘Y
, uöt8_à
updRe˘W
, uöt8_à
updRe˘H
, 
uöt16_t
* 
∑Àâïå
) {

457 
uöt16_t
 
x
,
y
,
x±r
;

458 
uöt16_t
 
sˇ∆öe
[4][176];

459 
uöt8_t
 *
d
, 
yoff£t
=0;

462 i‡–
updRe˘X
 !0 || 
updRe˘Y
 !0 ||
updRe˘W
 !
LCDWIDTH
 ||
updRe˘H
 !
LCDHEIGHT
 ) {

463 
uöt8_t
 
‹g_s¸ìnx
 = 
updRe˘X
;

464 
updRe˘X
 &= 0xfc;

465 
updRe˘W
 +
‹g_s¸ìnx
 - 
updRe˘X
;

466 
updRe˘W
 = (updRectW + 3) & 0xfc;

468 
uöt8_t
 
‹g_s¸ìny
 = 
updRe˘Y
;

469 
updRe˘Y
 &= 0xfc;

470 
updRe˘H
 +
‹g_s¸ìny
 - 
updRe˘Y
;

471 
updRe˘H
 = (updRectH + 7) & 0xf8;

475 #ifde‡
PROJ_SHOW_FPS_COUNTER


476 
x±r
 = 8;

477 
	`£tDRAM±r
(8, 0);

479 
x±r
 = 0;

480 
	`£tDRAM±r
(0, 0);

483 
x
=
updRe˘X
; x<updRe˘X+
updRe˘W
; x+=4) {

484 
d
 = 
s¸buf
+(
x
>>2);

487 
uöt8_t
 
s
=0;

488 
d
 +(
updRe˘Y
 * 220/4);

489 
y
=
updRe˘Y
; y<updRe˘Y+
updRe˘H
; y++) {

490 
uöt8_t
 
td©a
 = *
d
;

491 
uöt8_t
 
t4
 = 
td©a
 & 0x03;Ådata >>= 2;

492 
uöt8_t
 
t3
 = 
td©a
 & 0x03;Ådata >>= 2;

493 
uöt8_t
 
t2
 = 
td©a
 & 0x03;Ådata >>= 2;

494 
uöt8_t
 
t
 = 
td©a
 & 0x03;

497 
sˇ∆öe
[0][
y
] = 
∑Àâïå
[
t
];

498 
sˇ∆öe
[1][
y
] = 
∑Àâïå
[
t2
];

499 
sˇ∆öe
[2][
y
] = 
∑Àâïå
[
t3
];

500 
sˇ∆öe
[3][
y
] = 
∑Àâïå
[
t4
];

502 
d
 += 220/4;

505 #ifde‡
PROJ_SHOW_FPS_COUNTER


506 i‡(
x
>=8 ) {

513 
	`£tDRAM±r
(
x
, 
updRe˘Y
);

514 
uöt8_t
 
s
=
updRe˘Y
; s<updRe˘Y+
updRe˘H
;) {

515 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

516 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

517 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

518 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

519 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

520 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

521 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

522 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

524 
	`£tDRAM±r
(
x
+1, 
updRe˘Y
);

525 
uöt8_t
 
s
=
updRe˘Y
; s<updRe˘Y+
updRe˘H
;) {

526 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

527 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

528 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

529 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

530 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

531 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

532 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

533 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

535 
	`£tDRAM±r
(
x
+2, 
updRe˘Y
);

536 
uöt8_t
 
s
=
updRe˘Y
; s<updRe˘Y+
updRe˘H
;) {

537 
	`£tup_d©a_16
(
sˇ∆öe
[2][
s
++]);
CLR_WR
;
SET_WR
;

538 
	`£tup_d©a_16
(
sˇ∆öe
[2][
s
++]);
CLR_WR
;
SET_WR
;

539 
	`£tup_d©a_16
(
sˇ∆öe
[2][
s
++]);
CLR_WR
;
SET_WR
;

540 
	`£tup_d©a_16
(
sˇ∆öe
[2][
s
++]);
CLR_WR
;
SET_WR
;

541 
	`£tup_d©a_16
(
sˇ∆öe
[2][
s
++]);
CLR_WR
;
SET_WR
;

542 
	`£tup_d©a_16
(
sˇ∆öe
[2][
s
++]);
CLR_WR
;
SET_WR
;

543 
	`£tup_d©a_16
(
sˇ∆öe
[2][
s
++]);
CLR_WR
;
SET_WR
;

544 
	`£tup_d©a_16
(
sˇ∆öe
[2][
s
++]);
CLR_WR
;
SET_WR
;

546 
	`£tDRAM±r
(
x
+3, 
updRe˘Y
);

547 
uöt8_t
 
s
=
updRe˘Y
; s<updRe˘Y+
updRe˘H
;) {

548 
	`£tup_d©a_16
(
sˇ∆öe
[3][
s
++]);
CLR_WR
;
SET_WR
;

549 
	`£tup_d©a_16
(
sˇ∆öe
[3][
s
++]);
CLR_WR
;
SET_WR
;

550 
	`£tup_d©a_16
(
sˇ∆öe
[3][
s
++]);
CLR_WR
;
SET_WR
;

551 
	`£tup_d©a_16
(
sˇ∆öe
[3][
s
++]);
CLR_WR
;
SET_WR
;

552 
	`£tup_d©a_16
(
sˇ∆öe
[3][
s
++]);
CLR_WR
;
SET_WR
;

553 
	`£tup_d©a_16
(
sˇ∆öe
[3][
s
++]);
CLR_WR
;
SET_WR
;

554 
	`£tup_d©a_16
(
sˇ∆öe
[3][
s
++]);
CLR_WR
;
SET_WR
;

555 
	`£tup_d©a_16
(
sˇ∆öe
[3][
s
++]);
CLR_WR
;
SET_WR
;

560 #ifde‡
POK_SIM


561 
simuœt‹
.
	`ª‰eshDi•œy
();

563 
	}
}

566 
	#SPRITE_2BPP_INNER_LOOP
(
n
)\

569 i‡(
•rSˇ∆öeAddr
[(
n
)] &&\

570 
y
 >
•rôes
[(
n
)].y && y < s¥ôes[“)].y + s¥ôes[“)].
h
 ) {\

572 
öt16_t
 
•rx
 = 
•rôes
[(
n
)].
x
;\

573 
uöt16_t
 
s_d©a16b
 = 0; \

577 i‡(
•rSˇ∆öeBôshi·Mode
[(
n
)] =
BITSHIFT_MODE_MIDDLE_BYTE
) {\

578 
s_d©a16b
 = *(
•rSˇ∆öeAddr
[(
n
)]);\

579 
uöt16_t
 
À·Byã
 = *(
•rSˇ∆öeAddr
[(
n
)]-1);\

580 
s_d©a16b
 = (
À·Byã
 << 8) | s_data16b;\

582 i‡(
•rSˇ∆öeBôshi·Mode
[(
n
)] =
BITSHIFT_MODE_FIRST_BYTE
) {\

583 
s_d©a16b
 = *(
•rSˇ∆öeAddr
[(
n
)]);\

586 
uöt16_t
 
À·Byã
 = *(
•rSˇ∆öeAddr
[(
n
)]-1);\

587 
s_d©a16b
 = (
À·Byã
 << 8) | s_data16b;\

591 
uöt8_t
 
shi·Right
 = (
•rx
&0x3) << 1;\

592 
s_d©a16b
 = (s_d©a16b >> 
shi·Right
);\

595 
uöt8_t
 
s_t4
 = 
s_d©a16b
 & 0x03; s_data16b >>= 2; \

596 
uöt8_t
 
s_t3
 = 
s_d©a16b
 & 0x03; s_data16b >>= 2; \

597 
uöt8_t
 
s_t2
 = 
s_d©a16b
 & 0x03; s_data16b >>= 2; \

598 
uöt8_t
 
s_t1
 = 
s_d©a16b
 & 0x03; \

601 i‡(
s_t4
 !
å™•¨ítCﬁ‹
Ë
p4
 = 
•rôes
[(
n
)].
∑Àâe
[s_t4];\

602 i‡(
s_t3
 !
å™•¨ítCﬁ‹
Ë
p3
 = 
•rôes
[(
n
)].
∑Àâe
[s_t3];\

603 i‡(
s_t2
 !
å™•¨ítCﬁ‹
Ë
p2
 = 
•rôes
[(
n
)].
∑Àâe
[s_t2];\

604 i‡(
s_t1
 !
å™•¨ítCﬁ‹
Ë
p
 = 
•rôes
[(
n
)].
∑Àâe
[s_t1];\

607 
•rSˇ∆öeAddr
[(
n
)] +(
•rôes
[“)].
w
 >> 2);\

608 }

	)

611 
	#UNROLLED_LOOP_1
(Ë
	`SPRITE_2BPP_INNER_LOOP
(0)

	)

612 
	#UNROLLED_LOOP_2
(Ë
	`UNROLLED_LOOP_1
(Ë
	`SPRITE_2BPP_INNER_LOOP
(1)

	)

613 
	#UNROLLED_LOOP_3
(Ë
	`UNROLLED_LOOP_2
(Ë
	`SPRITE_2BPP_INNER_LOOP
(2)

	)

614 
	#UNROLLED_LOOP_4
(Ë
	`UNROLLED_LOOP_3
(Ë
	`SPRITE_2BPP_INNER_LOOP
(3)

	)

615 
	#UNROLLED_LOOP_5
(Ë
	`UNROLLED_LOOP_4
(Ë
	`SPRITE_2BPP_INNER_LOOP
(4)

	)

616 
	#UNROLLED_LOOP_6
(Ë
	`UNROLLED_LOOP_5
(Ë
	`SPRITE_2BPP_INNER_LOOP
(5)

	)

617 
	#UNROLLED_LOOP_7
(Ë
	`UNROLLED_LOOP_6
(Ë
	`SPRITE_2BPP_INNER_LOOP
(6)

	)

618 
	#UNROLLED_LOOP_8
(Ë
	`UNROLLED_LOOP_7
(Ë
	`SPRITE_2BPP_INNER_LOOP
(7)

	)

619 
	#UNROLLED_LOOP_9
(Ë
	`UNROLLED_LOOP_8
(Ë
	`SPRITE_2BPP_INNER_LOOP
(8)

	)

620 
	#UNROLLED_LOOP_10
(Ë
	`UNROLLED_LOOP_9
(Ë
	`SPRITE_2BPP_INNER_LOOP
(9)

	)

621 
	#UNROLLED_LOOP_11
(Ë
	`UNROLLED_LOOP_10
(Ë
	`SPRITE_2BPP_INNER_LOOP
(10)

	)

622 
	#UNROLLED_LOOP_12
(Ë
	`UNROLLED_LOOP_11
(Ë
	`SPRITE_2BPP_INNER_LOOP
(11)

	)

623 
	#UNROLLED_LOOP_13
(Ë
	`UNROLLED_LOOP_12
(Ë
	`SPRITE_2BPP_INNER_LOOP
(12)

	)

624 
	#UNROLLED_LOOP_14
(Ë
	`UNROLLED_LOOP_13
(Ë
	`SPRITE_2BPP_INNER_LOOP
(13)

	)

625 
	#UNROLLED_LOOP_15
(Ë
	`UNROLLED_LOOP_14
(Ë
	`SPRITE_2BPP_INNER_LOOP
(14)

	)

626 
	#UNROLLED_LOOP_16
(Ë
	`UNROLLED_LOOP_15
(Ë
	`SPRITE_2BPP_INNER_LOOP
(15)

	)

627 
	#UNROLLED_LOOP_N_
(
n
Ë
UNROLLED_LOOP_
##
	`n
()

	)

628 
	#UNROLLED_LOOP_N
(
n
Ë
	`UNROLLED_LOOP_N_
“)

	)

649 
	gPokôto
::
	$lcdRe‰eshMode1S¥
(

650 
uöt8_t
 * 
s¸buf
, uöt8_à
updRe˘X
, uöt8_à
updRe˘Y
, uöt8_à
updRe˘W
, uöt8_à
updRe˘H
, 
uöt16_t
* 
∑Àâïå
,

651 
S¥ôeInfo
* 
•rôes
, 
boﬁ
 
døwS¥ôesO∆y
) {

654 i‡(
døwS¥ôesO∆y
 && (
•rôes
 =
NULL
 || s¥ôes[0].
bôm≠D©a
 == NULL))

657 
uöt16_t
 
x
,
y
;

658 
uöt16_t
 
sˇ∆öe
[4][176];

659 c⁄° 
uöt8_t
 
å™•¨ítCﬁ‹
 = 0;

662 i‡–
updRe˘X
 !0 || 
updRe˘Y
 !0 ||
updRe˘W
 !
LCDWIDTH
 ||
updRe˘H
 !
LCDHEIGHT
 ) {

663 
uöt8_t
 
‹g_s¸ìnx
 = 
updRe˘X
;

664 
updRe˘X
 &= 0xfc;

665 
updRe˘W
 +
‹g_s¸ìnx
 - 
updRe˘X
;

666 
updRe˘W
 = (updRectW + 3) & 0xfc;

668 
uöt8_t
 
‹g_s¸ìny
 = 
updRe˘Y
;

669 
updRe˘Y
 &= 0xfc;

670 
updRe˘H
 +
‹g_s¸ìny
 - 
updRe˘Y
;

671 
updRe˘H
 = (updRectH + 7) & 0xf8;

676 
uöt8_t
 
•rôeCou¡
 = 0;

677 i‡(
•rôes
 !
NULL
)

678 ;
•rôes
[
•rôeCou¡
].
bôm≠D©a
 !
NULL
 && s¥ôeCou¡ < 
SPRITE_COUNT
; spriteCount++);

681 #ifde‡
PROJ_SHOW_FPS_COUNTER


682 i‡(!
døwS¥ôesO∆y
Ë
	`£tDRAM±r
(8, 0);

684 i‡(!
døwS¥ôesO∆y
Ë
	`£tDRAM±r
(0, 0);

689 
x
=0; x<
LCDWIDTH
; x+=4) {

691 
uöt8_t
 *
s¸ìnBufSˇ∆öeAddr
 = 
s¸buf
 + (
x
>>2);

694 
uöt8_t
 *
•rSˇ∆öeAddr
[
SPRITE_COUNT
];

695 
uöt8_t
 
•rSˇ∆öeBôshi·Mode
[
SPRITE_COUNT
];

696 c⁄° 
uöt8_t
 
BITSHIFT_MODE_MIDDLE_BYTE
 = 0;

697 c⁄° 
uöt8_t
 
BITSHIFT_MODE_FIRST_BYTE
 = 1;

698 c⁄° 
uöt8_t
 
BITSHIFT_MODE_LAST_BYTE
 = 2;

699 
uöt8_t
 
sˇ∆öeMöY
 = 255;

700 
uöt8_t
 
sˇ∆öeMaxY
 = 0;

704 i‡(
•rôes
 !
NULL
) {

709 
•rödex
 = 0; s¥ödex <
•rôeCou¡
; sprindex++) {

711 
öt16_t
 
•rx
, 
•ry
, 
•rOldX
, 
•rOldY
;

712 
uöt8_t
 
•rw
, 
•rh
;

713 
boﬁ
 
isCuºítS¥ôeOutOfS¸ìn
 = 
Ál£
;

714 
boﬁ
 
isOldS¥ôeOutOfS¸ìn
 = 
Ál£
;

716 i‡(
•rödex
 < 
•rôeCou¡
) {

718 
•rx
 = 
•rôes
[
•rödex
].
x
;

719 
•ry
 = 
•rôes
[
•rödex
].
y
;

720 
•rw
 = 
•rôes
[
•rödex
].
w
;

721 
•rh
 = 
•rôes
[
•rödex
].
h
;

722 
•rOldX
 = 
•rôes
[
•rödex
].
ﬁdx
;

723 
•rOldY
 = 
•rôes
[
•rödex
].
ﬁdy
;

727 if(!
døwS¥ôesO∆y
){

729 
•rx
 = 
updRe˘X
;

730 
•ry
 = 
updRe˘Y
;

731 
•rw
 = 
updRe˘W
;

732 
•rh
 = 
updRe˘H
;

733 
•rOldX
 = 
updRe˘X
;

734 
•rOldY
 = 
updRe˘Y
;

735 
isCuºítS¥ôeOutOfS¸ìn
 = 
Ál£
;

736 
isOldS¥ôeOutOfS¸ìn
 = 
Ál£
;

740 i‡(
•rx
 >
LCDWIDTH
 || 
•ry
 >
LCDHEIGHT
)

741 
isCuºítS¥ôeOutOfS¸ìn
 = 
åue
;

742 i‡(
•rOldX
 >
LCDWIDTH
 || 
•rOldY
 >
LCDHEIGHT
)

743 
isOldS¥ôeOutOfS¸ìn
 = 
åue
;

746 i‡(
isCuºítS¥ôeOutOfS¸ìn
 && 
isOldS¥ôeOutOfS¸ìn
)

750 
öt16_t
 
•rDútyXMö
 = 
	`avrmö
(
•rx
, 
•rOldX
);

751 
öt16_t
 
•rDútyXMax
 = 
	`avrmax
(
•rx
, 
•rOldX
);

752 i‡(
isCuºítS¥ôeOutOfS¸ìn
)

753 
•rDútyXMax
 = 
•rOldX
;

754 i‡(
isOldS¥ôeOutOfS¸ìn
)

755 
•rDútyXMax
 = 
•rx
;

758 
öt16_t
 
•rDútyXMaxEnd
 = 
•rDútyXMax
 + 
•rw
 - 1 + 4;

759 i‡(
•rDútyXMö
 <
x
+3 && x <
•rDútyXMaxEnd
) {

764 
•rDútyYMö
 = 
	`avrmö
(
•ry
, 
•rOldY
);

765 
•rDútyYMö
 = 
	`avrmax
(()sprDirtyYMin, 0);

766 
•rDútyYMax
 = 
	`avrmax
(
•ry
, 
•rOldY
);

767 i‡(
isCuºítS¥ôeOutOfS¸ìn
)

768 
•rDútyYMax
 = 
•rOldY
;

769 i‡(
isOldS¥ôeOutOfS¸ìn
)

770 
•rDútyYMax
 = 
•ry
;

771 
•rDútyYMaxEnd
 = 
•rDútyYMax
 + 
•rh
 - 1;

772 
•rDútyYMaxEnd
 = 
	`avrmö
(•rDútyYMaxEnd, 
LCDHEIGHT
 - 1);

775 i‡(
•rDútyYMö
 < 
sˇ∆öeMöY
)

776 
sˇ∆öeMöY
 = 
•rDútyYMö
;

777 i‡(
•rDútyYMaxEnd
 > 
sˇ∆öeMaxY
)

778 
sˇ∆öeMaxY
 = 
•rDútyYMaxEnd
;

783 i‡(
•rödex
 < 
•rôeCou¡
 &&

784 !
isCuºítS¥ôeOutOfS¸ìn
 &&

785 
•rx
 <
x
+3 && x < s¥x + 
•rw
) {

788 
öt16_t
 
byãNum
 = ((
x
+3Ë- 
•rx
)>>2;

791 
•rSˇ∆öeAddr
[
•rödex
] = 
c⁄°_ˇ°
<
uöt8_t
*>(
•rôes
[•rödex].
bôm≠D©a
 + 
byãNum
);

794 if(
•ry
 < 0)

795 
•rSˇ∆öeAddr
[
•rödex
] +(-
•ry
Ë* (
•rw
 >> 2);

798 i‡(
byãNum
 == 0)

799 
•rSˇ∆öeBôshi·Mode
[
•rödex
] = 
BITSHIFT_MODE_FIRST_BYTE
;

800 i‡(
byãNum
 >(
•rw
 >> 2))

801 
•rSˇ∆öeBôshi·Mode
[
•rödex
] = 
BITSHIFT_MODE_LAST_BYTE
;

803 
•rSˇ∆öeBôshi·Mode
[
•rödex
] = 
BITSHIFT_MODE_MIDDLE_BYTE
;

806 
•rSˇ∆öeAddr
[
•rödex
] = 
NULL
;

809 
•rSˇ∆öeAddr
[
•rödex
] = 
NULL
;

816 i‡(
sˇ∆öeMaxY
 - 
sˇ∆öeMöY
 + 1 > 0) {

817 
uöt8_t
 
sˇ∆öeH
 = 
sˇ∆öeMaxY
 - 
sˇ∆öeMöY
 + 1;

818 
uöt8_t
 
addW
 = 8 - (
sˇ∆öeH
 & 0x7);

821 i‡(
addW
 != 0) {

822 i‡(
sˇ∆öeMöY
 > 
addW
 )

823 
sˇ∆öeMöY
 -
addW
;

824 if–
sˇ∆öeMaxY
 + 
addW
 < 
updRe˘Y
+
updRe˘H
)

825 
sˇ∆öeMaxY
 +
addW
;

828 
sˇ∆öeMöY
 = 
updRe˘Y
;

829 
sˇ∆öeMaxY
 = 
updRe˘Y
+
updRe˘H
-1;

837 
s¸ìnBufSˇ∆öeAddr
 +(
sˇ∆öeMöY
 * 220/4);

838 
y
=
sˇ∆öeMöY
; y<=
sˇ∆öeMaxY
; y++)

841 
uöt8_t
 
td©a
 = *
s¸ìnBufSˇ∆öeAddr
;

842 
uöt8_t
 
t4
 = 
td©a
 & 0x03;Ådata >>= 2;

843 
uöt8_t
 
t3
 = 
td©a
 & 0x03;Ådata >>= 2;

844 
uöt8_t
 
t2
 = 
td©a
 & 0x03;Ådata >>= 2;

845 
uöt8_t
 
t
 = 
td©a
 & 0x03;

848 
uöt16_t
 
p
 = 
∑Àâïå
[
t
];

849 
uöt16_t
 
p2
 = 
∑Àâïå
[
t2
];

850 
uöt16_t
 
p3
 = 
∑Àâïå
[
t3
];

851 
uöt16_t
 
p4
 = 
∑Àâïå
[
t4
];

855 
p
 = 
COLOR_BLUE
 >> (
C‹e
::
‰ameCou¡
 % 5);

856 
p2
 = 
COLOR_BLUE
 >> (
C‹e
::
‰ameCou¡
 % 5);

857 
p3
 = 
COLOR_BLUE
 >> (
C‹e
::
‰ameCou¡
 % 5);

858 
p4
 = 
COLOR_BLUE
 >> (
C‹e
::
‰ameCou¡
 % 5);

862 i‡(
•rôes
 !
NULL
) {

865 
	`UNROLLED_LOOP_N
(
SPRITE_COUNT
)

869 
sˇ∆öe
[0][
y
] = 
p
;

870 
sˇ∆öe
[1][
y
] = 
p2
;

871 
sˇ∆öe
[2][
y
] = 
p3
;

872 
sˇ∆öe
[3][
y
] = 
p4
;

874 
s¸ìnBufSˇ∆öeAddr
 += 220>>2;

879 #ifde‡
PROJ_SHOW_FPS_COUNTER


880 i‡(
x
>=8 && 
sˇ∆öeMaxY
 - 
sˇ∆öeMöY
 +1 > 0) {

882 i‡(
sˇ∆öeMaxY
 - 
sˇ∆öeMöY
 +1 > 0) {

886 
	`£tDRAM±r
(
x
, 
sˇ∆öeMöY
);

887 
uöt8_t
 
s
=
sˇ∆öeMöY
;s<=
sˇ∆öeMaxY
;) {

888 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

889 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

890 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

891 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

892 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

893 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

894 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

895 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

898 
	`£tDRAM±r
(
x
+1, 
sˇ∆öeMöY
);

899 
uöt8_t
 
s
=
sˇ∆öeMöY
;s<=
sˇ∆öeMaxY
;) {

900 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

901 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

902 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

903 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

904 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

905 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

906 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

907 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

910 
	`£tDRAM±r
(
x
+2, 
sˇ∆öeMöY
);

911 
uöt8_t
 
s
=
sˇ∆öeMöY
;s<=
sˇ∆öeMaxY
;) {

912 
	`£tup_d©a_16
(
sˇ∆öe
[2][
s
++]);
CLR_WR
;
SET_WR
;

913 
	`£tup_d©a_16
(
sˇ∆öe
[2][
s
++]);
CLR_WR
;
SET_WR
;

914 
	`£tup_d©a_16
(
sˇ∆öe
[2][
s
++]);
CLR_WR
;
SET_WR
;

915 
	`£tup_d©a_16
(
sˇ∆öe
[2][
s
++]);
CLR_WR
;
SET_WR
;

916 
	`£tup_d©a_16
(
sˇ∆öe
[2][
s
++]);
CLR_WR
;
SET_WR
;

917 
	`£tup_d©a_16
(
sˇ∆öe
[2][
s
++]);
CLR_WR
;
SET_WR
;

918 
	`£tup_d©a_16
(
sˇ∆öe
[2][
s
++]);
CLR_WR
;
SET_WR
;

919 
	`£tup_d©a_16
(
sˇ∆öe
[2][
s
++]);
CLR_WR
;
SET_WR
;

922 
	`£tDRAM±r
(
x
+3, 
sˇ∆öeMöY
);

923 
uöt8_t
 
s
=
sˇ∆öeMöY
;s<=
sˇ∆öeMaxY
;) {

924 
	`£tup_d©a_16
(
sˇ∆öe
[3][
s
++]);
CLR_WR
;
SET_WR
;

925 
	`£tup_d©a_16
(
sˇ∆öe
[3][
s
++]);
CLR_WR
;
SET_WR
;

926 
	`£tup_d©a_16
(
sˇ∆öe
[3][
s
++]);
CLR_WR
;
SET_WR
;

927 
	`£tup_d©a_16
(
sˇ∆öe
[3][
s
++]);
CLR_WR
;
SET_WR
;

928 
	`£tup_d©a_16
(
sˇ∆öe
[3][
s
++]);
CLR_WR
;
SET_WR
;

929 
	`£tup_d©a_16
(
sˇ∆öe
[3][
s
++]);
CLR_WR
;
SET_WR
;

930 
	`£tup_d©a_16
(
sˇ∆öe
[3][
s
++]);
CLR_WR
;
SET_WR
;

931 
	`£tup_d©a_16
(
sˇ∆öe
[3][
s
++]);
CLR_WR
;
SET_WR
;

937 i‡(
•rôes
 !
NULL
) {

938 
•rödex
 = 0; s¥ödex < 
•rôeCou¡
; sprindex++) {

939 
•rôes
[
•rödex
].
ﬁdx
 = s¥ôes[•rödex].
x
;

940 
•rôes
[
•rödex
].
ﬁdy
 = s¥ôes[•rödex].
y
;

944 #ifde‡
POK_SIM


945 
simuœt‹
.
	`ª‰eshDi•œy
();

947 
	}
}

949 
	gPokôto
::
	$lcdRe‰eshMode2
(
uöt8_t
 * 
s¸buf
, 
uöt16_t
* 
∑Àâïå
) {

950 
uöt16_t
 
x
,
y
;

951 
uöt16_t
 
sˇ∆öe
[2][88];

952 
uöt8_t
 *
d
;

954 
	`wrôe_comm™d
(0x20);

955 
	`wrôe_d©a
(0);

956 
	`wrôe_comm™d
(0x21);

957 
	`wrôe_d©a
(0);

958 
	`wrôe_comm™d
(0x22);

959 
CLR_CS_SET_CD_RD_WR
;

961 
x
=0;x<110;x+=2)

963 
d
 = 
s¸buf
+(
x
>>1);

965 
uöt8_t
 
s
=0;

966 
y
=0;y<88;y++)

968 
uöt8_t
 
t
 = *
d
 >> 4;

969 
uöt8_t
 
t2
 = *
d
 & 0xF;

971 
sˇ∆öe
[0][
s
] = 
∑Àâïå
[
t
];

972 
sˇ∆öe
[1][
s
++] = 
∑Àâïå
[
t2
];

978 
d
+=110/2;

980 
s
=0;

984 #ifde‡
PROJ_SHOW_FPS_COUNTER


985 i‡(
x
<4) ;

986 
	`£tDRAM±r
(
x
<<1, 0);

989 
s
=0;s<88;) {

990 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

991 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

992 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

993 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

994 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

995 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

996 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

997 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1000 
s
=0;s<88;) {

1001 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1002 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1003 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1004 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1005 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1006 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1007 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1008 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1012 
s
=0;s<88;) {

1013 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1014 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1015 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1016 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1017 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1018 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1019 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1020 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1023 
s
=0;s<88;) {

1024 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1025 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1026 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1027 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1028 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1029 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1030 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1031 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1034 
	}
}

1036 
	gPokôto
::
	$lcdRe‰eshMode3
(
uöt8_t
 * 
s¸buf
, 
uöt16_t
* 
∑Àâïå
) {

1037 
uöt16_t
 
x
,
y
;

1038 
uöt16_t
 
sˇ∆öe
[2][176];

1039 
uöt8_t
 *
d
;

1041 
	`wrôe_comm™d
(0x20);

1042 
	`wrôe_d©a
(0);

1043 
	`wrôe_comm™d
(0x21);

1044 
	`wrôe_d©a
(0);

1045 
	`wrôe_comm™d
(0x22);

1046 
CLR_CS_SET_CD_RD_WR
;

1048 
x
=0;x<220;x+=2)

1050 
d
 = 
s¸buf
+(
x
>>1);

1052 
uöt8_t
 
s
=0;

1053 
y
=0;y<176;y++)

1055 
uöt8_t
 
t
 = *
d
 >> 4;

1056 
uöt8_t
 
t2
 = *
d
 & 0xF;

1058 
sˇ∆öe
[0][
s
] = 
∑Àâïå
[
t
];

1059 
sˇ∆öe
[1][
s
++] = 
∑Àâïå
[
t2
];

1065 
d
+=220/2;

1067 
s
=0;

1071 #ifde‡
PROJ_SHOW_FPS_COUNTER


1072 i‡(
x
<8) ;

1073 
	`£tDRAM±r
(
x
, 0);

1076 
s
=0;s<176;) {

1077 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

1078 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

1079 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

1080 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

1081 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

1082 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

1083 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

1084 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

1089 
s
=0;s<176;) {

1090 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

1091 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

1092 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

1093 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

1094 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

1095 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

1096 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

1097 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

1100 
	}
}

1102 
	gPokôto
::
	$lcdRe‰eshGB
(
uöt8_t
 * 
s¸buf
, 
uöt16_t
* 
∑Àâïå
) {

1103 
uöt16_t
 
x
,
y
;

1104 
uöt16_t
 
sˇ∆öe
[48];

1105 
uöt8_t
 * 
d
;

1107 #i‡
POK_STRETCH


1113 
	`wrôe_comm™d
(0x20);

1114 
	`wrôe_d©a
(0);

1115 
	`wrôe_comm™d
(0x21);

1116 
	`wrôe_d©a
(0);

1117 
	`wrôe_comm™d
(0x22);

1118 
CLR_CS_SET_CD_RD_WR
;

1121 
s
=0;s<5*176;) {

1122 
	`£tup_d©a_16
(
COLOR_BLACK
);
CLR_WR
;
SET_WR
;
s
++;

1125 
x
=0;x<84;x++)

1128 
d
 = 
s¸buf
 + 
x
;

1131 
uöt8_t
 
s
=0;

1132 
y
=0;y<6;y++)

1134 
uöt8_t
 
t
 = *
d
;

1135 #i‡
POK_COLORDEPTH
 > 1

1136 
uöt8_t
 
t2
 = *(
d
+504);

1138 #i‡
POK_COLORDEPTH
 > 2

1139 
uöt8_t
 
t3
 = *(
d
+504+504);

1141 #i‡
POK_COLORDEPTH
 > 3

1142 
uöt8_t
 
t4
 = *(
d
+504+504+504);

1144 
uöt8_t
 
∑Àâeödex
 = 0;

1147 #i‡
POK_COLORDEPTH
 == 1

1148 
∑Àâeödex
 = (
t
 & 0x1);

1149 #ñi‡
POK_COLORDEPTH
 == 2

1150 
∑Àâeödex
 = ((
t
 & 0x1)Ë| ((
t2
 & 0x01)<<1);

1151 #ñi‡
POK_COLORDEPTH
 == 3

1152 
∑Àâeödex
 = (
t
 & 0x1Ë| ((
t2
 & 0x1)<<1Ë| ((
t3
 & 0x1)<<2);

1153 #ñi‡
POK_COLORDEPTH
 == 4

1154 
∑Àâeödex
 = (
t
 & 0x1Ë| ((
t2
 & 0x1)<<1Ë| ((
t3
 & 0x1)<<2Ë| ((
t4
 & 0x1)<<3);

1156 
sˇ∆öe
[
s
++] = 
∑Àâïå
[
∑Àâeödex
];

1159 #i‡
POK_COLORDEPTH
 == 1

1160 
∑Àâeödex
 = (
t
 & 0x2)>>1;

1161 #ñi‡
POK_COLORDEPTH
 == 2

1162 
∑Àâeödex
 = ((
t
 & 0x2)>>1Ë| ((
t2
 & 0x02));

1163 #ñi‡
POK_COLORDEPTH
 == 3

1164 
∑Àâeödex
 = ((
t
 & 0x2)>>1Ë| ((
t2
 & 0x2)Ë| ((
t3
 & 0x2)<<1);

1165 #ñi‡
POK_COLORDEPTH
 == 4

1166 
∑Àâeödex
 = ((
t
 & 0x2)>>1Ë| ((
t2
 & 0x2)Ë| ((
t3
 & 0x2)<<1Ë| ((
t4
 & 0x2)<<2);

1168 
sˇ∆öe
[
s
++] = 
∑Àâïå
[
∑Àâeödex
];

1171 #i‡
POK_COLORDEPTH
 == 1

1172 
∑Àâeödex
 = (
t
 & 0x4)>>2;

1173 #ñi‡
POK_COLORDEPTH
 == 2

1174 
∑Àâeödex
 = ((
t
 & 4)>>2Ë| ((
t2
 & 0x04)>>1);

1175 #ñi‡
POK_COLORDEPTH
 == 3

1176 
∑Àâeödex
 = ((
t
 & 0x4)>>2Ë| ((
t2
 & 0x4)>>1Ë| (
t3
 & 0x4);

1177 #ñi‡
POK_COLORDEPTH
 == 4

1178 
∑Àâeödex
 = ((
t
 & 0x4)>>2Ë| ((
t2
 & 0x4)>>1Ë| (
t3
 & 0x4Ë| ((
t4
 & 0x4)<<1);

1180 
sˇ∆öe
[
s
++] = 
∑Àâïå
[
∑Àâeödex
];

1183 #i‡
POK_COLORDEPTH
 == 1

1184 
∑Àâeödex
 = (
t
 & 0x8)>>3;

1185 #ñi‡
POK_COLORDEPTH
 == 2

1186 
∑Àâeödex
 = ((
t
 & 0x8)>>3Ë| ((
t2
 & 0x08)>>2);

1187 #ñi‡
POK_COLORDEPTH
 == 3

1188 
∑Àâeödex
 = ((
t
 & 0x8)>>3Ë| ((
t2
 & 0x8)>>2Ë| ((
t3
 & 0x8)>>1);

1189 #ñi‡
POK_COLORDEPTH
 == 4

1190 
∑Àâeödex
 = ((
t
 & 0x8)>>3Ë| ((
t2
 & 0x8)>>2Ë| ((
t3
 & 0x8)>>1Ë| (
t4
 & 0x8);

1192 
sˇ∆öe
[
s
++] = 
∑Àâïå
[
∑Àâeödex
];

1195 #i‡
POK_COLORDEPTH
 == 1

1196 
∑Àâeödex
 = (
t
 & 0x10)>>4;

1197 #ñi‡
POK_COLORDEPTH
 == 2

1198 
∑Àâeödex
 = ((
t
 & 0x10)>>4Ë| ((
t2
 & 0x10)>>3);

1199 #ñi‡
POK_COLORDEPTH
 == 3

1200 
∑Àâeödex
 = ((
t
 & 0x10)>>4Ë| ((
t2
 & 0x10)>>3Ë| ((
t3
 & 0x10)>>2);

1201 #ñi‡
POK_COLORDEPTH
 == 4

1202 
∑Àâeödex
 = ((
t
 & 0x10)>>4Ë| ((
t2
 & 0x10)>>3Ë| ((
t3
 & 0x10)>>2Ë| ((
t4
 & 0x10)>>1);

1204 
sˇ∆öe
[
s
++] = 
∑Àâïå
[
∑Àâeödex
];

1207 #i‡
POK_COLORDEPTH
 == 1

1208 
∑Àâeödex
 = (
t
 & 0x20)>>5;

1209 #ñi‡
POK_COLORDEPTH
 == 2

1210 
∑Àâeödex
 = ((
t
 & 0x20)>>5Ë| ((
t2
 & 0x20)>>4);

1211 #ñi‡
POK_COLORDEPTH
 == 3

1212 
∑Àâeödex
 = ((
t
 & 0x20)>>5Ë| ((
t2
 & 0x20)>>4Ë| ((
t3
 & 0x20)>>3);

1213 #ñi‡
POK_COLORDEPTH
 == 4

1214 
∑Àâeödex
 = ((
t
 & 0x20)>>5Ë| ((
t2
 & 0x20)>>4Ë| ((
t3
 & 0x20)>>3Ë| ((
t4
 & 0x20)>>2);

1216 
sˇ∆öe
[
s
++] = 
∑Àâïå
[
∑Àâeödex
];

1219 #i‡
POK_COLORDEPTH
 == 1

1220 
∑Àâeödex
 = (
t
 & 0x40)>>6;

1221 #ñi‡
POK_COLORDEPTH
 == 2

1222 
∑Àâeödex
 = ((
t
 & 0x40)>>6Ë| ((
t2
 & 0x40)>>5);

1223 #ñi‡
POK_COLORDEPTH
 == 3

1224 
∑Àâeödex
 = ((
t
 & 0x40)>>6Ë| ((
t2
 & 0x40)>>5Ë| ((
t3
 & 0x40)>>4) ;

1225 #ñi‡
POK_COLORDEPTH
 == 4

1226 
∑Àâeödex
 = ((
t
 & 0x40)>>6Ë| ((
t2
 & 0x40)>>5Ë| ((
t3
 & 0x40)>>4Ë| ((
t4
 & 0x40)>>3);

1228 
sˇ∆öe
[
s
++] = 
∑Àâïå
[
∑Àâeödex
];

1231 #i‡
POK_COLORDEPTH
 == 1

1232 
∑Àâeödex
 = (
t
 & 0x80)>>7;

1233 #ñi‡
POK_COLORDEPTH
 == 2

1234 
∑Àâeödex
 = ((
t
 & 0x80)>>7Ë| ((
t2
 & 0x80)>>6);

1235 #ñi‡
POK_COLORDEPTH
 == 3

1236 
∑Àâeödex
 = ((
t
 & 0x80)>>7Ë| ((
t2
 & 0x80)>>6Ë| ((
t3
 & 0x80)>>5);

1237 #ñi‡
POK_COLORDEPTH
 == 4

1238 
∑Àâeödex
 = ((
t
 & 0x80)>>7Ë| ((
t2
 & 0x80)>>6Ë| ((
t3
 & 0x80)>>5Ë| ((
t4
 & 0x80)>>4);

1240 
sˇ∆öe
[
s
++] = 
∑Àâïå
[
∑Àâeödex
];

1242 
d
+=84;

1253 
	`£tup_d©a_16
(
COLOR_BLACK
);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR; CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;

1255 
s
=0;

1258 
s
=0;s<48;) {

1259 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;

1260 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;

1261 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;

1262 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;

1263 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;

1264 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;

1265 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;

1266 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;

1269 
	`£tup_d©a_16
(
COLOR_BLACK
);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR; CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;

1279 
	`£tup_d©a_16
(
COLOR_BLACK
);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR; CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;

1281 
s
=0;s<48;) {

1282 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;

1283 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;

1284 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;

1285 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;

1286 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;

1287 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;

1288 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;

1289 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;

1293 
	`£tup_d©a_16
(
COLOR_BLACK
);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR; CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;

1296 #i‡
POK_STRETCH


1298 i‡(
x
&2)

1307 
	`£tup_d©a_16
(
COLOR_BLACK
);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR; CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;

1310 
s
=0;s<48;) {

1311 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;

1312 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;

1313 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;

1314 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;

1315 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;

1316 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;

1317 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;

1318 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;

1322 
	`£tup_d©a_16
(
COLOR_BLACK
);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR; CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;CLR_WR;SET_WR;

1328 
s
=0;s<5*176;) {

1329 
	`£tup_d©a_16
(
COLOR_BLACK
);
CLR_WR
;
SET_WR
;
s
++;

1331 
	}
}

1334 
	gPokôto
::
	$lcdRe‰eshAB
(
uöt8_t
 * 
s¸buf
, 
uöt16_t
* 
∑Àâïå
) {

1335 
uöt16_t
 
x
,
y
;

1336 
uöt16_t
 
sˇ∆öe
[64];

1337 
uöt8_t
 *
d
;

1339 #i‡
POK_STRETCH


1340 
uöt16_t
 
x±r
 = 14;

1341 
uöt8_t
 
yoff£t
 = 24;

1343 
uöt16_t
 
x±r
 = 0;

1344 
uöt8_t
 
yoff£t
 = 0;

1347 
x
=0;x<128;x++)

1349 
	`wrôe_comm™d
(0x20);

1350 
	`wrôe_d©a
(
yoff£t
);

1351 
	`wrôe_comm™d
(0x21);

1352 
	`wrôe_d©a
(
x±r
++);

1353 
	`wrôe_comm™d
(0x22);

1354 
CLR_CS_SET_CD_RD_WR
;

1357 
d
 = 
s¸buf
 + 
x
;

1360 
uöt8_t
 
s
=0;

1361 
y
=0;y<8;y++)

1363 
uöt8_t
 
t
 = *
d
;

1364 #i‡
POK_COLORDEPTH
 > 1

1365 
uöt8_t
 
t2
 = *(
d
+
AB_JUMP
);

1367 #i‡
POK_COLORDEPTH
 > 2

1368 
uöt8_t
 
t3
 = *(
d
+
AB_JUMP
+AB_JUMP);

1370 #i‡
POK_COLORDEPTH
 > 3

1371 
uöt8_t
 
t4
 = *(
d
+
AB_JUMP
+AB_JUMP+AB_JUMP);

1373 
uöt8_t
 
∑Àâeödex
 = 0;

1376 #i‡
POK_COLORDEPTH
 == 1

1377 
∑Àâeödex
 = (
t
 & 0x1);

1378 #ñi‡
POK_COLORDEPTH
 == 2

1379 
∑Àâeödex
 = ((
t
 & 0x1)Ë| ((
t2
 & 0x01)<<1);

1380 #ñi‡
POK_COLORDEPTH
 == 3

1381 
∑Àâeödex
 = (
t
 & 0x1Ë| ((
t2
 & 0x1)<<1Ë| ((
t3
 & 0x1)<<2);

1382 #ñi‡
POK_COLORDEPTH
 == 4

1383 
∑Àâeödex
 = (
t
 & 0x1Ë| ((
t2
 & 0x1)<<1Ë| ((
t3
 & 0x1)<<2Ë| ((
t4
 & 0x1)<<3);

1385 
sˇ∆öe
[
s
++] = 
∑Àâïå
[
∑Àâeödex
];

1388 #i‡
POK_COLORDEPTH
 == 1

1389 
∑Àâeödex
 = (
t
 & 0x2)>>1;

1390 #ñi‡
POK_COLORDEPTH
 == 2

1391 
∑Àâeödex
 = ((
t
 & 0x2)>>1Ë| ((
t2
 & 0x02));

1392 #ñi‡
POK_COLORDEPTH
 == 3

1393 
∑Àâeödex
 = ((
t
 & 0x2)>>1Ë| ((
t2
 & 0x2)Ë| ((
t3
 & 0x2)<<1);

1394 #ñi‡
POK_COLORDEPTH
 == 4

1395 
∑Àâeödex
 = ((
t
 & 0x2)>>1Ë| ((
t2
 & 0x2)Ë| ((
t3
 & 0x2)<<1Ë| ((
t4
 & 0x2)<<2);

1397 
sˇ∆öe
[
s
++] = 
∑Àâïå
[
∑Àâeödex
];

1400 #i‡
POK_COLORDEPTH
 == 1

1401 
∑Àâeödex
 = (
t
 & 0x4)>>2;

1402 #ñi‡
POK_COLORDEPTH
 == 2

1403 
∑Àâeödex
 = ((
t
 & 4)>>2Ë| ((
t2
 & 0x04)>>1);

1404 #ñi‡
POK_COLORDEPTH
 == 3

1405 
∑Àâeödex
 = ((
t
 & 0x4)>>2Ë| ((
t2
 & 0x4)>>1Ë| (
t3
 & 0x4);

1406 #ñi‡
POK_COLORDEPTH
 == 4

1407 
∑Àâeödex
 = ((
t
 & 0x4)>>2Ë| ((
t2
 & 0x4)>>1Ë| (
t3
 & 0x4Ë| ((
t4
 & 0x4)<<1);

1409 
sˇ∆öe
[
s
++] = 
∑Àâïå
[
∑Àâeödex
];

1412 #i‡
POK_COLORDEPTH
 == 1

1413 
∑Àâeödex
 = (
t
 & 0x8)>>3;

1414 #ñi‡
POK_COLORDEPTH
 == 2

1415 
∑Àâeödex
 = ((
t
 & 0x8)>>3Ë| ((
t2
 & 0x08)>>2);

1416 #ñi‡
POK_COLORDEPTH
 == 3

1417 
∑Àâeödex
 = ((
t
 & 0x8)>>3Ë| ((
t2
 & 0x8)>>2Ë| ((
t3
 & 0x8)>>1);

1418 #ñi‡
POK_COLORDEPTH
 == 4

1419 
∑Àâeödex
 = ((
t
 & 0x8)>>3Ë| ((
t2
 & 0x8)>>2Ë| ((
t3
 & 0x8)>>1Ë| (
t4
 & 0x8);

1421 
sˇ∆öe
[
s
++] = 
∑Àâïå
[
∑Àâeödex
];

1424 #i‡
POK_COLORDEPTH
 == 1

1425 
∑Àâeödex
 = (
t
 & 0x10)>>4;

1426 #ñi‡
POK_COLORDEPTH
 == 2

1427 
∑Àâeödex
 = ((
t
 & 0x10)>>4Ë| ((
t2
 & 0x10)>>3);

1428 #ñi‡
POK_COLORDEPTH
 == 3

1429 
∑Àâeödex
 = ((
t
 & 0x10)>>4Ë| ((
t2
 & 0x10)>>3Ë| ((
t3
 & 0x10)>>2);

1430 #ñi‡
POK_COLORDEPTH
 == 4

1431 
∑Àâeödex
 = ((
t
 & 0x10)>>4Ë| ((
t2
 & 0x10)>>3Ë| ((
t3
 & 0x10)>>2Ë| ((
t4
 & 0x10)>>1);

1433 
sˇ∆öe
[
s
++] = 
∑Àâïå
[
∑Àâeödex
];

1436 #i‡
POK_COLORDEPTH
 == 1

1437 
∑Àâeödex
 = (
t
 & 0x20)>>5;

1438 #ñi‡
POK_COLORDEPTH
 == 2

1439 
∑Àâeödex
 = ((
t
 & 0x20)>>5Ë| ((
t2
 & 0x20)>>4);

1440 #ñi‡
POK_COLORDEPTH
 == 3

1441 
∑Àâeödex
 = ((
t
 & 0x20)>>5Ë| ((
t2
 & 0x20)>>4Ë| ((
t3
 & 0x20)>>3);

1442 #ñi‡
POK_COLORDEPTH
 == 4

1443 
∑Àâeödex
 = ((
t
 & 0x20)>>5Ë| ((
t2
 & 0x20)>>4Ë| ((
t3
 & 0x20)>>3Ë| ((
t4
 & 0x20)>>2);

1445 
sˇ∆öe
[
s
++] = 
∑Àâïå
[
∑Àâeödex
];

1448 #i‡
POK_COLORDEPTH
 == 1

1449 
∑Àâeödex
 = (
t
 & 0x40)>>6;

1450 #ñi‡
POK_COLORDEPTH
 == 2

1451 
∑Àâeödex
 = ((
t
 & 0x40)>>6Ë| ((
t2
 & 0x40)>>5);

1452 #ñi‡
POK_COLORDEPTH
 == 3

1453 
∑Àâeödex
 = ((
t
 & 0x40)>>6Ë| ((
t2
 & 0x40)>>5Ë| ((
t3
 & 0x40)>>4) ;

1454 #ñi‡
POK_COLORDEPTH
 == 4

1455 
∑Àâeödex
 = ((
t
 & 0x40)>>6Ë| ((
t2
 & 0x40)>>5Ë| ((
t3
 & 0x40)>>4Ë| ((
t4
 & 0x40)>>3);

1457 
sˇ∆öe
[
s
++] = 
∑Àâïå
[
∑Àâeödex
];

1460 #i‡
POK_COLORDEPTH
 == 1

1461 
∑Àâeödex
 = (
t
 & 0x80)>>7;

1462 #ñi‡
POK_COLORDEPTH
 == 2

1463 
∑Àâeödex
 = ((
t
 & 0x80)>>7Ë| ((
t2
 & 0x80)>>6);

1464 #ñi‡
POK_COLORDEPTH
 == 3

1465 
∑Àâeödex
 = ((
t
 & 0x80)>>7Ë| ((
t2
 & 0x80)>>6Ë| ((
t3
 & 0x80)>>5);

1466 #ñi‡
POK_COLORDEPTH
 == 4

1467 
∑Àâeödex
 = ((
t
 & 0x80)>>7Ë| ((
t2
 & 0x80)>>6Ë| ((
t3
 & 0x80)>>5Ë| ((
t4
 & 0x80)>>4);

1469 
sˇ∆öe
[
s
++] = 
∑Àâïå
[
∑Àâeödex
];

1471 
d
+=128;

1474 
s
=0;

1477 
s
=0;s<64;) {

1478 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1479 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1480 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1481 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1482 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1483 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1484 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1485 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1488 #i‡
POK_STRETCH


1489 i‡(
x
&1) {

1490 
	`wrôe_comm™d
(0x20);

1491 
	`wrôe_d©a
(
yoff£t
);

1492 
	`wrôe_comm™d
(0x21);

1493 
	`wrôe_d©a
(
x±r
++);

1494 
	`wrôe_comm™d
(0x22);

1495 
CLR_CS_SET_CD_RD_WR
;

1498 
s
=0;s<64;) {

1499 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1500 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1501 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1502 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1503 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1504 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1505 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1506 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1511 
	}
}

1513 
	gPokôto
::
	$lcdRe‰eshModeGBC
(
uöt8_t
 * 
s¸buf
, 
uöt16_t
* 
∑Àâïå
) {

1514 
uöt16_t
 
x
,
y
,
x±r
;

1515 
uöt16_t
 
sˇ∆öe
[4][144];

1516 
uöt8_t
 *
d
, 
yoff£t
=0;

1518 
x±r
 = 0;

1519 
	`£tDRAM±r
(
x±r
,
yoff£t
);

1522 
x
=0;x<160;x+=4)

1524 
d
 = 
s¸buf
+(
x
>>2);

1526 
uöt8_t
 
s
=0;

1527 
y
=0;y<144;y++)

1529 
uöt8_t
 
td©a
 = *
d
;

1530 
uöt8_t
 
t4
 = 
td©a
 & 0x03;Ådata >>= 2;

1531 
uöt8_t
 
t3
 = 
td©a
 & 0x03;Ådata >>= 2;

1532 
uöt8_t
 
t2
 = 
td©a
 & 0x03;Ådata >>= 2;

1533 
uöt8_t
 
t
 = 
td©a
 & 0x03;

1537 
sˇ∆öe
[0][
s
] = 
∑Àâïå
[
t
];

1538 
sˇ∆öe
[1][
s
] = 
∑Àâïå
[
t2
];

1539 
sˇ∆öe
[2][
s
] = 
∑Àâïå
[
t3
];

1540 
sˇ∆öe
[3][
s
++] = 
∑Àâïå
[
t4
];

1542 
d
+=160/4;

1545 
s
=0;

1547 
s
=0;s<144;) {

1548 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

1549 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

1550 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

1551 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

1552 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

1553 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

1555 
	`£tDRAM±r
(++
x±r
,
yoff£t
);

1556 
s
=0;s<144;) {

1557 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

1558 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

1559 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

1560 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

1561 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

1562 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

1564 
	`£tDRAM±r
(++
x±r
,
yoff£t
);

1565 
s
=0;s<144;) {

1566 
	`£tup_d©a_16
(
sˇ∆öe
[2][
s
++]);
CLR_WR
;
SET_WR
;

1567 
	`£tup_d©a_16
(
sˇ∆öe
[2][
s
++]);
CLR_WR
;
SET_WR
;

1568 
	`£tup_d©a_16
(
sˇ∆öe
[2][
s
++]);
CLR_WR
;
SET_WR
;

1569 
	`£tup_d©a_16
(
sˇ∆öe
[2][
s
++]);
CLR_WR
;
SET_WR
;

1570 
	`£tup_d©a_16
(
sˇ∆öe
[2][
s
++]);
CLR_WR
;
SET_WR
;

1571 
	`£tup_d©a_16
(
sˇ∆öe
[2][
s
++]);
CLR_WR
;
SET_WR
;

1573 
	`£tDRAM±r
(++
x±r
,
yoff£t
);

1574 
s
=0;s<144;) {

1575 
	`£tup_d©a_16
(
sˇ∆öe
[3][
s
++]);
CLR_WR
;
SET_WR
;

1576 
	`£tup_d©a_16
(
sˇ∆öe
[3][
s
++]);
CLR_WR
;
SET_WR
;

1577 
	`£tup_d©a_16
(
sˇ∆öe
[3][
s
++]);
CLR_WR
;
SET_WR
;

1578 
	`£tup_d©a_16
(
sˇ∆öe
[3][
s
++]);
CLR_WR
;
SET_WR
;

1579 
	`£tup_d©a_16
(
sˇ∆öe
[3][
s
++]);
CLR_WR
;
SET_WR
;

1580 
	`£tup_d©a_16
(
sˇ∆öe
[3][
s
++]);
CLR_WR
;
SET_WR
;

1582 
	`£tDRAM±r
(++
x±r
,
yoff£t
);

1584 
	}
}

1587 
	gPokôto
::
	$lcdRe‰eshT1
(
uöt8_t
* 
tûebuf
, uöt8_t* 
tûecﬁ‹buf
, uöt8_t* 
tûe£t
, 
uöt16_t
* 
∑Àâïå
) {

1588 #ifde‡
POK_TILEMODE


1589 
uöt16_t
 
x
,
y
,
d©a
,
x±r
;

1590 
uöt16_t
 
sˇ∆öe
[176];

1591 
uöt8_t
 
yoff£t
=0, 
tûebyã
, 
tûeödex
, 
tûex
=0, 
tûey
=0,
xcou¡
;

1594 i‡(!
tûe£t
) ;

1596 #i‡
LCDWIDTH
 < 
POK_LCD_W


1597 
x±r
 = (
POK_LCD_W
-
LCDWIDTH
)/2;

1599 
x±r
 = 0;

1601 #i‡
LCDHEIGHT
 < 
POK_LCD_H


1602 
yoff£t
 = (
POK_LCD_H
-
LCDHEIGHT
)/2;

1604 
yoff£t
 = 0;

1607 
x
=0, 
xcou¡
=0 ;x<
LCDWIDTH
;x++,xcount++)

1609 
	`£tDRAM±r
(
x±r
++,
yoff£t
);

1612 
uöt8_t
 
s
=0, 
tûey
=0;

1614 i‡(
xcou¡
==
POK_TILE_W
) {

1615 
tûex
++;

1616 
xcou¡
=0;

1619 
y
=0;y<
LCDHEIGHT
;)

1621 
uöt8_t
 
tûevÆ
 = 
tûebuf
[
tûex
+
tûey
*
POK_TILES_X
];

1622 
uöt16_t
 
ödex
 = 
tûevÆ
*
POK_TILE_W
+
xcou¡
;

1623 
uöt8_t
 
tûebyã
 = 
tûe£t
[
ödex
];

1624 
uöt8_t
 
ycou¡
=0, 
bôcou¡
=0; ycou¡<
POK_TILE_H
; ycou¡++, 
y
++, bitcount++) {

1625 i‡(
bôcou¡
==8) {

1626 
bôcou¡
=0;

1627 
ödex
 += 176;

1628 
tûebyã
 = 
tûe£t
[
ödex
];

1632 i‡(!
tûevÆ
Ë
sˇ∆öe
[
s
++] = 
COLOR_MAGENTA
*((
tûebyã
>>
bôcou¡
)&0x1);

1633 
sˇ∆öe
[
s
++] = 
∑Àâïå
[((
tûebyã
>>
bôcou¡
)&0x1)*
tûevÆ
];

1635 
tûey
++;

1637 
s
=0;

1640 
s
=0;s<
LCDHEIGHT
;) {

1641 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;

1645 
	}
}

1648 
	gPokôto
::
	$lcdRe‰eshMode13
(
uöt8_t
 * 
s¸buf
, 
uöt16_t
* 
∑Àâïå
, uöt8_à
off£t
){

1649 
uöt16_t
 
x
,
y
;

1650 
uöt16_t
 
sˇ∆öe
[2][110];

1651 
uöt8_t
 *
d
;

1653 
	`wrôe_comm™d
(0x20); 
	`wrôe_d©a
(0);

1654 
	`wrôe_comm™d
(0x21); 
	`wrôe_d©a
(0);

1655 
	`wrôe_comm™d
(0x22);

1656 
CLR_CS_SET_CD_RD_WR
;

1658 
x
=0;x<110;x+=2)

1660 
d
 = 
s¸buf
+
x
;

1661 
uöt8_t
 
s
=0;

1662 
y
=0;y<88;y++)

1664 
uöt8_t
 
t
 = *
d
;

1665 
uöt8_t
 
t1
 = *(
d
+1);

1666 
sˇ∆öe
[0][
s
] = 
∑Àâïå
[(
t
+
off£t
)&255];

1667 
sˇ∆öe
[1][
s
++] = 
∑Àâïå
[(
t1
+
off£t
)&255];

1668 
d
+=110;

1670 
s
=0;

1671 
s
=0;s<88;) {

1672 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1673 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1674 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1675 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1676 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1677 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1678 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1679 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1681 
s
=0;s<88;) {

1682 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1683 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1684 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1685 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1686 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1687 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1688 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1689 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1691 
s
=0;s<88;) {

1692 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1693 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1694 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1695 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1696 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1697 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1698 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1699 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1701 
s
=0;s<88;) {

1702 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1703 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1704 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1705 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1706 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1707 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1708 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1709 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;CLR_WR;SET_WR;

1713 
	}
}

1717 
	gPokôto
::
	$lcdRe‰eshMode14
(
uöt8_t
 * 
s¸buf
, 
uöt16_t
* 
∑Àâïå
) {

1718 
uöt16_t
 
x
,
y
,
d©a
,
x±r
;

1719 
uöt16_t
 
sˇ∆öe
[176]; uöt16_t* 
s˝å
;

1720 
uöt8_t
 *
d
;

1722 
	`wrôe_comm™d
(0x20); 
	`wrôe_d©a
(0);

1723 
	`wrôe_comm™d
(0x21); 
	`wrôe_d©a
(0);

1724 
	`wrôe_comm™d
(0x22);

1725 
CLR_CS_SET_CD_RD_WR
;

1727 
x
=0;x<220;x++)

1729 
d
 = 
s¸buf
+
x
;

1730 
s˝å
 = &
sˇ∆öe
[0];

1755 
s˝å
 = &
sˇ∆öe
[0];

1756 
y
=0;y<22;y++, 
d
 +=220)

1758 
uöt16_t
 
t
 = *
d
 & 0xFF;

1760 *
s˝å
++ = 
R_MASK
 * (
t
&0x1);Å >>= 1;

1761 *
s˝å
++ = 
R_MASK
 * (
t
&0x1);Å >>= 1;

1762 *
s˝å
++ = 
R_MASK
 * (
t
&0x1);Å >>= 1;

1763 *
s˝å
++ = 
R_MASK
 * (
t
&0x1);Å >>= 1;

1764 *
s˝å
++ = 
R_MASK
 * (
t
&0x1);Å >>= 1;

1765 *
s˝å
++ = 
R_MASK
 * (
t
&0x1);Å >>= 1;

1766 *
s˝å
++ = 
R_MASK
 * (
t
&0x1);Å >>= 1;

1767 *
s˝å
++ = 
R_MASK
 * (
t
&0x1);

1769 
s˝å
 = &
sˇ∆öe
[0];

1770 
d
 = 
s¸buf
+
x
+
POK_BITFRAME
;

1771 
y
=0;y<22;y++, 
d
 +=220)

1773 
uöt16_t
 
t
 = *
d
 & 0xFF;

1775 *
s˝å
++ |
G_MASK
 * (
t
&0x1);Å >>= 1;

1776 *
s˝å
++ |
G_MASK
 * (
t
&0x1);Å >>= 1;

1777 *
s˝å
++ |
G_MASK
 * (
t
&0x1);Å >>= 1;

1778 *
s˝å
++ |
G_MASK
 * (
t
&0x1);Å >>= 1;

1779 *
s˝å
++ |
G_MASK
 * (
t
&0x1);Å >>= 1;

1780 *
s˝å
++ |
G_MASK
 * (
t
&0x1);Å >>= 1;

1781 *
s˝å
++ |
G_MASK
 * (
t
&0x1);Å >>= 1;

1782 *
s˝å
++ |
G_MASK
 * (
t
&0x1);

1784 
s˝å
 = &
sˇ∆öe
[0];

1785 
d
 = 
s¸buf
+
x
+
POK_BITFRAME
*2;

1786 
y
=0;y<22;y++, 
d
 +=220)

1788 
uöt16_t
 
t
 = *
d
 & 0xFF;

1790 *
s˝å
++ |
B_MASK
 * (
t
&0x1);Å >>= 1;

1791 *
s˝å
++ |
B_MASK
 * (
t
&0x1);Å >>= 1;

1792 *
s˝å
++ |
B_MASK
 * (
t
&0x1);Å >>= 1;

1793 *
s˝å
++ |
B_MASK
 * (
t
&0x1);Å >>= 1;

1794 *
s˝å
++ |
B_MASK
 * (
t
&0x1);Å >>= 1;

1795 *
s˝å
++ |
B_MASK
 * (
t
&0x1);Å >>= 1;

1796 *
s˝å
++ |
B_MASK
 * (
t
&0x1);Å >>= 1;

1797 *
s˝å
++ |
B_MASK
 * (
t
&0x1);

1801 #ifde‡
PROJ_SHOW_FPS_COUNTER


1802 i‡(
x
<8) ;

1803 
	`£tDRAM±r
(
x
, 0);

1807 
s
=0;s<176;) {

1808 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;

1809 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;

1810 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;

1811 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;

1812 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;

1813 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;

1814 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;

1815 
	`£tup_d©a_16
(
sˇ∆öe
[
s
++]);
CLR_WR
;
SET_WR
;

1820 
	}
}

1824 #ifde‡
ADEKTOSMODE15


1825 
	gPokôto
::
	$lcdRe‰eshMode15
(
uöt16_t
* 
∑l
, 
uöt8_t
* 
s¸buf
){

1826 
	`wrôe_comm™d
(0x03); 
	`wrôe_d©a
(0x1038);

1827 
	`wrôe_comm™d
(0x20); 
	`wrôe_d©a
(0);

1828 
	`wrôe_comm™d
(0x21); 
	`wrôe_d©a
(0);

1830 
	`wrôe_comm™d
(0x22);

1832 #ifde‡
PROJ_SHOW_FPS_COUNTER


1833 
x
=0,
xt
=0; x<0x4BA0;x++,xt++) {

1834 i‡(
xt
==110) xt=0;

1835 i‡(
xt
<8) {

1836 
	`wrôe_d©a
(0);

1837 
	`wrôe_d©a
(0);

1839 
	`wrôe_d©a
(
∑l
[(((
s¸buf
[
x
]) & 0xf0) >> 4)]);

1840 
	`wrôe_d©a
(
∑l
[–(
s¸buf
[
x
]) & 0x0f)]);

1845 
x
=0; x<0x4BA0;x++) {

1846 
	`wrôe_d©a
(
∑l
[(((
s¸buf
[
x
]) & 0xf0) >> 4)]);

1847 
	`wrôe_d©a
(
∑l
[–(
s¸buf
[
x
]) & 0x0f)]);

1850 
	}
}

1854 
	gPokôto
::
	$lcdRe‰eshMode15
(
uöt16_t
* 
∑Àâïå
, 
uöt8_t
* 
s¸buf
){

1855 
uöt16_t
 
x
,
y
,
x±r
;

1856 
uöt16_t
 
sˇ∆öe
[2][176];

1857 
uöt8_t
 *
d
, 
yoff£t
=0;

1859 
x±r
 = 0;

1862 
	`wrôe_comm™d
(0x20); 
	`wrôe_d©a
(0);

1863 
	`wrôe_comm™d
(0x21); 
	`wrôe_d©a
(0);

1864 
	`wrôe_comm™d
(0x22);

1865 
CLR_CS_SET_CD_RD_WR
;

1867 
x
=0;x<220;x+=2)

1869 
d
 = 
s¸buf
+(
x
>>1);

1871 
uöt8_t
 
s
=0;

1872 
y
=0;y<176;y++)

1874 
uöt8_t
 
t
 = *
d
 >> 4;

1875 
uöt8_t
 
t2
 = *
d
 & 0xF;

1877 
sˇ∆öe
[0][
s
] = 
∑Àâïå
[
t
];

1878 
sˇ∆öe
[1][
s
++] = 
∑Àâïå
[
t2
];

1880 
d
+=220/2;

1882 
s
=0;

1885 #ifde‡
PROJ_SHOW_FPS_COUNTER


1886 i‡(
x
<8) ;

1887 
	`£tDRAM±r
(
x
, 0);

1890 
s
=0;s<176;) {

1891 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

1892 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

1893 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

1894 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

1895 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

1896 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

1897 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

1898 
	`£tup_d©a_16
(
sˇ∆öe
[0][
s
++]);
CLR_WR
;
SET_WR
;

1901 
s
=0;s<176;) {

1902 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

1903 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

1904 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

1905 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

1906 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

1907 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

1908 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

1909 
	`£tup_d©a_16
(
sˇ∆öe
[1][
s
++]);
CLR_WR
;
SET_WR
;

1912 
	}
}

1915 
	gPokôto
::
	$blôW‹d
(
uöt16_t
 
c
) {

1916 
	`£tup_d©a_16
(
c
);
CLR_WR
;
SET_WR
;

1917 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\HWLCD.h

37 #i‚de‡
__HWLCD_H__


38 
	#__HWLCD_H__


	)

40 
	~"mbed.h
"

41 
	~"gpio_≠i.h
"

42 
	~"pöm≠.h
"

44 
	#wrôe_comm™d
 
wrôe_comm™d_16


	)

45 
	#wrôe_d©a
 
wrôe_d©a_16


	)

47 
«me•a˚
 
	gPokôto
 {

49 
	sS¥ôeInfo
 {

50 c⁄° 
uöt8_t
* 
	gbôm≠D©a
;

51 
öt16_t
 
	gx
;

52 
öt16_t
 
	gy
;

53 
öt16_t
 
	gﬁdx
;

54 
öt16_t
 
	gﬁdy
;

55 
uöt8_t
 
	gw
;

56 
uöt8_t
 
	gh
;

57 
uöt16_t
 
	g∑Àâe
[4];

60 
£tDRAMpoöt
(
uöt8_t
, uint8_t);

61 
pumpDRAMd©a
(
uöt16_t
*, uint16_t);

62 
öôBacklight
();

63 
£tBacklight
();

64 
lcdFûlSurÁ˚
(
uöt16_t
);

65 
lcdPixñ
(
öt16_t
 
x
, i¡16_à
y
, 
uöt16_t
 
c
);

66 
£tWödow
(
uöt8_t
 
x1
, uöt8_à
y1
, uöt8_à
x2
, uöt8_à
y2
);

67 
lcdTûe
(
öt16_t
 
x0
, i¡16_à
y0
, i¡16_à
width
, i¡16_à
height
, 
uöt16_t
* 
gfx
);

68 
lcdRe˘™gÀ
(
öt16_t
 
x
, i¡16_à
y
,öt16_à
x2
, i¡16_à
y2
, 
uöt16_t
 
cﬁ‹
);

69 
lcdInô
();

70 
lcdSÀï
();

71 
lcdWakeUp
();

72 
lcdRe‰esh
(
uöt8_t
 *, 
uöt16_t
*);

73 
lcdRe‰eshAB
(
uöt8_t
 *, 
uöt16_t
*);

74 
lcdRe‰eshMode14
(
uöt8_t
 *, 
uöt16_t
*);

75 
lcdRe‰eshGB
(
uöt8_t
 *, 
uöt16_t
*);

76 
lcdRe‰eshMode1
(
uöt8_t
* 
s¸buf
, uöt8_à
updRe˘X
, uöt8_à
updRe˘Y
, uöt8_à
updRe˘W
, uöt8_à
updRe˘H
, 
uöt16_t
* 
∑Àâïå
);

77 
lcdRe‰eshMode1S¥
(
uöt8_t
 * 
s¸buf
, uöt8_à
s¸ìnx
, uöt8_à
s¸ìny
, uöt8_à
s¸ìnw
, uöt8_à
s¸ình
, 
uöt16_t
* 
∑Àâïå
, 
Pokôto
::
S¥ôeInfo
* 
•rôes
, 
boﬁ
 
døwS¥ôesO∆y
);

78 
lcdRe‰eshMode2
(
uöt8_t
 *, 
uöt16_t
*);

79 
lcdRe‰eshMode3
(
uöt8_t
 *, 
uöt16_t
*);

80 
lcdRe‰eshModeGBC
(
uöt8_t
 *, 
uöt16_t
*);

81 
lcdRe‰eshMode13
(
uöt8_t
 *, 
uöt16_t
*, uint8_t);

83 
lcdRe‰eshMode15
(
uöt16_t
*, 
uöt8_t
*);

87 
lcdRe‰eshT1
(
uöt8_t
*, uöt8_t*, uöt8_t*, 
uöt16_t
*);

88 
lcdCÀ¨
();

89 
lcdFûl
(
uöt16_t
);

91 
blôW‹d
(
uöt16_t
);

97 #i‡
POK_BOARDREV
 == 1

99 
	#LCD_CD_PORT
 0

	)

100 
	#LCD_CD_PIN
 2

	)

101 
	#LCD_WR_PORT
 1

	)

102 
	#LCD_WR_PIN
 23

	)

103 
	#LCD_RD_PORT
 1

	)

104 
	#LCD_RD_PIN
 24

	)

105 
	#LCD_RES_PORT
 1

	)

106 
	#LCD_RES_PIN
 28

	)

109 
	#LCD_CD_PORT
 0

	)

110 
	#LCD_CD_PIN
 2

	)

111 
	#LCD_WR_PORT
 1

	)

112 
	#LCD_WR_PIN
 12

	)

113 
	#LCD_RD_PORT
 1

	)

114 
	#LCD_RD_PIN
 24

	)

115 
	#LCD_RES_PORT
 1

	)

116 
	#LCD_RES_PIN
 0

	)

123 
	#CLR_RESET
 
LPC_GPIO_PORT
->
CLR
[
LCD_RES_PORT
] = 1 << 
LCD_RES_PIN
;

124 
	#SET_RESET
 
LPC_GPIO_PORT
->
SET
[
LCD_RES_PORT
] = 1 << 
LCD_RES_PIN
;

125 

	)

126 
	#CLR_CD
 { 
LPC_GPIO_PORT
->
CLR
[
LCD_CD_PORT
] = 1 << 
LCD_CD_PIN
; }

127 
	#SET_CD
 { 
LPC_GPIO_PORT
->
SET
[
LCD_CD_PORT
] = 1 << 
LCD_CD_PIN
; }

128 

	)

129 
	#CLR_WR
 { 
LPC_GPIO_PORT
->
CLR
[
LCD_WR_PORT
] = 1 << 
LCD_WR_PIN
;
	`__asm
("nop");}

130 
	#CLR_WR_SLOW
 { 
LPC_GPIO_PORT
->
CLR
[
LCD_WR_PORT
] = 1 << 
LCD_WR_PIN
;
	`__asm
("nop");__asm("nop");}

131 
	#SET_WR
 
LPC_GPIO_PORT
->
SET
[
LCD_WR_PORT
] = 1 << 
LCD_WR_PIN
;

132 

	)

133 
	#CLR_RD
 
LPC_GPIO_PORT
->
CLR
[
LCD_RD_PORT
] = 1 << 
LCD_RD_PIN
;

134 
	#SET_RD
 
LPC_GPIO_PORT
->
SET
[
LCD_RD_PORT
] = 1 << 
LCD_RD_PIN
;

135 

	)

136 
	#SET_CS


137 
	#CLR_CS


	)

139 
	#CLR_CS_CD_SET_RD_WR
 {
CLR_CD
; 
SET_RD
; 
SET_WR
;}

	)

140 
	#CLR_CS_SET_CD_RD_WR
 {
SET_CD
; 
SET_RD
; 
SET_WR
;}

	)

141 
	#SET_CD_RD_WR
 {
SET_CD
; 
SET_RD
; 
SET_WR
;}

	)

142 
	#SET_WR_CS
 
SET_WR
;

	)

144 
	#SET_MASK_P2
 
LPC_GPIO_PORT
->
MASK
[2] = ~(0x7FFF8);

145 
	#CLR_MASK_P2
 
LPC_GPIO_PORT
->
MASK
[2] = 0;

146 

	)

153 
£tup_gpio
()

156 
	gLPC_GPIO_PORT
->
	gDIR
[
LCD_CD_PORT
] |(1 << 
LCD_CD_PIN
 );

157 
	gLPC_GPIO_PORT
->
	gDIR
[
LCD_WR_PORT
] |(1 << 
LCD_WR_PIN
 );

158 
	gLPC_GPIO_PORT
->
	gDIR
[
LCD_RD_PORT
] |(1 << 
LCD_RD_PIN
 );

159 
	gLPC_GPIO_PORT
->
	gDIR
[
LCD_RES_PORT
] |(1 << 
LCD_RES_PIN
 );

161 
	gLPC_GPIO_PORT
->
	gDIR
[2] |= (0xFFFF << 3);

163 
pö_mode
(
P2_3
,
PuŒN⁄e
);

164 
pö_mode
(
P2_4
,
PuŒN⁄e
);

165 
pö_mode
(
P2_5
,
PuŒN⁄e
);

166 
pö_mode
(
P2_6
,
PuŒN⁄e
);

168 
pö_mode
(
P2_7
,
PuŒN⁄e
);

169 
pö_mode
(
P2_8
,
PuŒN⁄e
);

170 
pö_mode
(
P2_9
,
PuŒN⁄e
);

171 
pö_mode
(
P2_10
,
PuŒN⁄e
);

173 
pö_mode
(
P2_11
,
PuŒN⁄e
);

174 
pö_mode
(
P2_12
,
PuŒN⁄e
);

175 
pö_mode
(
P2_13
,
PuŒN⁄e
);

176 
pö_mode
(
P2_14
,
PuŒN⁄e
);

178 
pö_mode
(
P2_15
,
PuŒN⁄e
);

179 
pö_mode
(
P2_16
,
PuŒN⁄e
);

180 
pö_mode
(
P2_17
,
PuŒN⁄e
);

181 
pö_mode
(
P2_18
,
PuŒN⁄e
);

187 
	#HI_BYTE
(
d
Ë(
LPC_GPIO
->
MPIN
[1]= (d<<13))

188 
	#LO_BYTE
(
d
Ë(
LPC_GPIO
->
MPIN
[1]= (d<<21))

189 

	)

191 
	#LCD_GPIO2DATA_SETINPUT
 
GPIO_GPIO2DIR
 &~
LCD_DATA_MASK


	)

192 
	#LCD_GPIO2DATA_SETOUTPUT
 
GPIO_GPIO2DIR
 |
LCD_DATA_MASK


	)

196 
	#COLOR_BLACK
 (
uöt16_t
)(0x0000)

	)

197 
	#COLOR_BLUE
 (
uöt16_t
)(0x001F)

	)

198 
	#COLOR_RED
 (
uöt16_t
)(0xF800)

	)

199 
	#COLOR_GREEN
 (
uöt16_t
)(0x07E0)

	)

200 
	#COLOR_CYAN
 (
uöt16_t
)(0x07FF)

	)

201 
	#COLOR_MAGENTA
 (
uöt16_t
)(0xF81F)

	)

202 
	#COLOR_YELLOW
 (
uöt16_t
)(0xFFE0)

	)

203 
	#COLOR_WHITE
 (
uöt16_t
)(0xFFFF)

	)

206 
	#COLOR_GRAY_15
 (
uöt16_t
)(0x0861)

207 
	#COLOR_GRAY_30
 (
uöt16_t
)(0x18E3)

208 
	#COLOR_GRAY_50
 (
uöt16_t
)(0x3186)

209 
	#COLOR_GRAY_80
 (
uöt16_t
)(0x528A)

210 
	#COLOR_GRAY_128
 (
uöt16_t
)(0x8410)

211 
	#COLOR_GRAY_200
 (
uöt16_t
)(0xCE59)

212 
	#COLOR_GRAY_225
 (
uöt16_t
)(0xE71C)

213 

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\HWSound.cpp

37 
	~"mbed.h
"

38 
	~"HWSound.h
"

40 
	~"So·w¨eI2C.h
"

41 
	~"Pokôto_£âögs.h
"

42 
	~"PokôtoDisk.h
"

43 
	~"PokôtoGlobs.h
"

44 
	~"Sy¡h.h
"

45 
	~"timî_11u6x.h
"

46 
	~"˛ock_11u6x.h
"

47 
	~"HWLCD.h
"

51 
	gPokôto
::
Sound
 
__shw
;

53 #ifde‡
XPERIMENTAL


54 
DigôÆOut
 
e4
(
EXT4
);

55 
	ge4
=0;

58 
usög
 
«me•a˚
 
	gPokôto
;

62 #i‚de‡
POK_SIM


63 #i‡
POK_ENABLE_SOUND


64 
pwmout_t
* 
	gobj
 = &
audi›wm
;

69 #i‡(
POK_STREAMING_MUSIC
 > 0)

70 
	gbuf„rs
[4][
BUFFER_SIZE
];

71 vﬁ©ûê
	gcuºítBuf„r
 = 0, 
	gﬁdBuf„r
 = 0;

72 vﬁ©ûê
	gbufödex
 = 0, 
	gvﬁ
=1;

73 vﬁ©ûê* 
	gcuºítPå
;

74 vﬁ©ûê* 
	gídPå
;

75 
öt8_t
 
	g°ªamvﬁ
=3;

76 
uöt32_t
 
	g°ªamcou¡î
=0;

77 
uöt8_t
 
	g°ªam°ï
=0;

80 #i‡
POK_ENABLE_SOUND
 > 0

81 
pwmout_t
 
	gPokôto
::
audi›wm
;

84 
usög
 
«me•a˚
 
	gPokôto
;

88 
uöt8_t
 
	gPokôto
::
°ªambyã
,Pokôto::
°ªam⁄
;

90 
uöt8_t
 
	gsoundbuf
[
SBUFSIZE
];

91 
uöt8_t
 
	gPokôto
::
HWvﬁume
=0;

92 
uöt16_t
 
	gsoundbufödex
;

93 
uöt8_t
* 
	gsoundbuÂå
;

95 
boﬁ
 
	gvﬁpŸEº‹
=
Ál£
;

97 
uöt16_t
 
	gsoundbyã
;

100 #i‡
POK_USE_DAC
 > 0

101 #i‡
POK_BOARDREV
 == 1

103 
DigôÆOut
 
dac0
(
P1_6
);

104 
DigôÆOut
 
dac1
(
P1_0
);

105 
DigôÆOut
 
dac2
(
P1_16
);

106 
DigôÆOut
 
dac3
(
P0_19
);

107 
DigôÆOut
 
dac4
(
P0_17
);

108 
DigôÆOut
 
dac5
(
P1_12
);

109 
DigôÆOut
 
dac6
(
P1_15
);

110 
DigôÆOut
 
dac7
(
P1_8
);

113 
DigôÆOut
 
dac0
(
P1_28
);

114 
DigôÆOut
 
dac1
(
P1_29
);

115 
DigôÆOut
 
dac2
(
P1_30
);

116 
DigôÆOut
 
dac3
(
P1_31
);

118 
DigôÆOut
 
dac4
(
P2_20
);

119 
DigôÆOut
 
dac5
(
P2_21
);

120 
DigôÆOut
 
dac6
(
P2_22
);

121 
DigôÆOut
 
dac7
(
P2_23
);

123 
DigôÆOut
 
amp
(
P1_17
);

128 #i‡
POK_BOARDREV
 == 2

136 
uöt32_t
 
	gp
=0;

137 
uöt8_t
 
	gpixx
=0, 
	gpixy
=0;

139 "C" 
	$TIMER32_0_IRQH™dÀr
()

141 i‡(
	`Chù_TIMER_M©chPídög
(
LPC_TIMER32_0
, 1)) {

142 
	`Chù_TIMER_CÀ¨M©ch
(
LPC_TIMER32_0
, 1);

144 #i‡
POK_GBSOUND
 > 0

146 
Pokôto
::
	`audio_IRQ
();

149 #i‡
POK_SOUND_BUFFERED


150 
	`pokSoundBuf„ªdIRQ
();

152 
	`pokSoundIRQ
();

156 
	}
}

159 
	$öôHWvﬁumec⁄åﬁ
() {

160 
HWvﬁume
=0;

161 
vﬁpŸEº‹
=
åue
;

163 
	`£tHWvﬁume
(
dis¸ëe_vﬁ_hw_Àvñs
[
VOLUME_STARTUP
>>5]);

164 
	}
}

166 
Pokôto
::
	$£tHWvﬁume
(
uöt8_t
 
v
) {

167 
HWvﬁume
=
v
;

168 i‡(
HWvﬁume
>127) HWvolume=127;

172 
So·w¨eI2C
 
	`swvﬁpŸ
(
P0_4
, 
P0_5
);

173 
swvﬁpŸ
.
	`wrôe
(0x5e,
HWvﬁume
);

174  
HWvﬁume
;

175 
	}
}

177 
uöt8_t
 
Pokôto
::
	$gëHWvﬁume
() {

178  
HWvﬁume
;

179 
	}
}

181 
Pokôto
::
	$ch™geHWvﬁume
(
öt8_t
 
v
) {

182 
ãmp
 = 
HWvﬁume
 + 
v
;

183 i‡(
ãmp
 < 0)Åemp = 0;

184 i‡(
ãmp
 > 127)Åemp = 127;

185 
	`£tHWvﬁume
(
ãmp
);

186 
	}
}

188 
uöt8_t
 
Pokôto
::
	$ampIsOn
() {

189  
amp
;

190 
	}
}

192 
Pokôto
::
	$ampE«bÀ
(
uöt8_t
 
v
) {

193 i‡(
v
>1) v=1;

194 
amp
=
v
;

195 
	}
}

198 
Pokôto
::
	$dac_wrôe
(
uöt8_t
 
vÆue
) {

199 #i‡
POK_USE_DAC
 > 0

200 #i‡
POK_BOARDREV
 == 1

201 i‡(
vÆue
 & 1Ë
SET_DAC0
 
CLR_DAC0
;

202 
vÆue
 >>= 1;

203 i‡(
vÆue
 & 1Ë
SET_DAC1
 
CLR_DAC1
;

204 
vÆue
 >>= 1;

205 i‡(
vÆue
 & 1Ë
SET_DAC2
 
CLR_DAC2
;

206 
vÆue
 >>= 1;

207 i‡(
vÆue
 & 1Ë
SET_DAC3
 
CLR_DAC3
;

208 
vÆue
 >>= 1;

209 i‡(
vÆue
 & 1Ë
SET_DAC4
 
CLR_DAC4
;

210 
vÆue
 >>= 1;

211 i‡(
vÆue
 & 1Ë
SET_DAC5
 
CLR_DAC5
;

212 
vÆue
 >>= 1;

213 i‡(
vÆue
 & 1Ë
SET_DAC6
 
CLR_DAC6
;

214 
vÆue
 >>= 1;

215 i‡(
vÆue
 & 1Ë
SET_DAC7
 
CLR_DAC7
;

227 
	#MASKED_DAC
 0

	)

228 #i‡
MASKED_DAC


229 
uöt32_t
 
vÆ
;

230 
vÆ
=
vÆue
;

231 
SET_MASK_DAC_LO
;

232 
LPC_GPIO_PORT
->
MPIN
[1] = 
vÆ
<<28;

233 
CLR_MASK_DAC_LO
;

234 
SET_MASK_DAC_HI
;

235 
LPC_GPIO_PORT
->
MPIN
[2] = 
vÆ
<<(20-4);

236 
CLR_MASK_DAC_HI
;

238 i‡(
vÆue
 & 1Ë
SET_DAC0
 
CLR_DAC0
;

239 
vÆue
 >>= 1;

240 i‡(
vÆue
 & 1Ë
SET_DAC1
 
CLR_DAC1
;

241 
vÆue
 >>= 1;

242 i‡(
vÆue
 & 1Ë
SET_DAC2
 
CLR_DAC2
;

243 
vÆue
 >>= 1;

244 i‡(
vÆue
 & 1Ë
SET_DAC3
 
CLR_DAC3
;

245 
vÆue
 >>= 1;

246 i‡(
vÆue
 & 1Ë
SET_DAC4
 
CLR_DAC4
;

247 
vÆue
 >>= 1;

248 i‡(
vÆue
 & 1Ë
SET_DAC5
 
CLR_DAC5
;

249 
vÆue
 >>= 1;

250 i‡(
vÆue
 & 1Ë
SET_DAC6
 
CLR_DAC6
;

251 
vÆue
 >>= 1;

252 i‡(
vÆue
 & 1Ë
SET_DAC7
 
CLR_DAC7
;

257 
	}
}

260 
Pokôto
::
	$soundInô
() {

261 #i‡
POK_ENABLE_SOUND
 > 0

262 
uöt32_t
 
timîFªq
;

263 #i‡
POK_USE_PWM


265 
	`pwmout_öô
(&
audi›wm
,
POK_AUD_PIN
);

266 
	`pwmout_≥riod_us
(&
audi›wm
,
POK_AUD_PWM_US
);

267 
	`pwmout_wrôe
(&
audi›wm
,0.1f);

277 
	`Chù_TIMER_Inô
(
LPC_TIMER32_0
);

280 
timîFªq
 = 
	`Chù_Clock_GëSy°emClockR©e
();

283 
	`Chù_TIMER_Re£t
(
LPC_TIMER32_0
);

286 
	`Chù_TIMER_M©chE«bÀI¡
(
LPC_TIMER32_0
, 1);

289 
	`Chù_TIMER_SëM©ch
(
LPC_TIMER32_0
, 1, (
timîFªq
 / 
POK_AUD_FREQ
));

292 
	`Chù_TIMER_Re£tOnM©chE«bÀ
(
LPC_TIMER32_0
, 1);

295 
	`Chù_TIMER_E«bÀ
(
LPC_TIMER32_0
);

298 
	#TIMER_32_0_IRQn
 18

	)

299 
	`NVIC_CÀ¨PídögIRQ
((
IRQn_Ty≥
)
TIMER_32_0_IRQn
);

302 
	`NVIC_SëVe˘‹
((
IRQn_Ty≥
)
TIMER_32_0_IRQn
, (
uöt32_t
)&
TIMER32_0_IRQH™dÀr
);

305 
	`NVIC_E«bÀIRQ
((
IRQn_Ty≥
)
TIMER_32_0_IRQn
);

312 #ifde‡
TEST_SOUND


313 
	`ã°Osc
();

315 #i‡
POK_BOARDREV
 == 2

319 #i‡
POK_ENABLE_SYNTH


320 
	`em±yOscûœt‹s
();

326 
	}
}

329 
uöt8_t
 
Pokôto
::
	$°ªamPau£d
() {

330  !
°ªam⁄
;

331 
	}
}

333 
Pokôto
::
	$∑u£Såóm
() {

334 
°ªam⁄
=0;

335 
	}
}

337 
Pokôto
::
	$∂aySåóm
() {

338 
°ªam⁄
=1;

339 
	}
}

342 
	$pokPau£Såóm
() {

343 
°ªam⁄
=0;

344 
	}
}

346 
	$pokPœySåóm
() {

347 
°ªam⁄
=1;

348 
	}
}

352 
ölöe
 
	$pokSoundBuf„ªdIRQ
() {

353 
uöt32_t
 
ouçut
 = 
soundbuf
[
soundbufödex
+=
Pokôto
::
°ªam⁄
];

354 i‡(
soundbufödex
==
SBUFSIZE
) soundbufindex=0;

359 
ouçut
 *
dis¸ëe_vﬁ_mu…ùlõrs
[
dis¸ëe_vﬁ
];

360 
ouçut
 >>= 8;

361 
	`dac_wrôe
(
ouçut
);

364 
	}
}

366 
ölöe
 
	$pokSoundIRQ
() {

367 #i‡
POK_ENABLE_SOUND
 > 0

370 
uöt32_t
 
ouçut
=0;uöt32_à
›
;

377 #i‚de‡
POK_SIM


378 #i‡
POK_USE_PWM


379 
pwmout_t
* 
obj
 = &
audi›wm
;

382 #i‡
POK_STREAMING_MUSIC
 > 0

383 #i‡
POK_STREAMFREQ_HALVE


384 
°ªam°ï
 = 1-streamstep;

386 
°ªam°ï
 = 1;

388 
°ªam°ï
 &
°ªam⁄
;

389 i‡(
°ªam°ï
) {

390 
ouçut
 = (*
cuºítPå
++);

391 if(
°ªamvﬁ
 && 
°ªam⁄
) {

392 
ouçut
 >>3-
°ªamvﬁ
;

393 
°ªambyã
 = 
ouçut
;

395 
°ªambyã
 = 0;

396 
ouçut
 = 0;

398 i‡(
cuºítPå
 >
ídPå
)

400 
cuºítBuf„r
++;

401 i‡(
cuºítBuf„r
==4) currentBuffer=0;

402 
cuºítPå
 = 
buf„rs
[
cuºítBuf„r
];

403 
ídPå
 = 
cuºítPå
 + 
BUFFER_SIZE
;

410 #i‡
POK_ENABLE_SYNTH


412 i‡(
∂ayög
) {

413 
nŸëick
++;

414 
	`upd©ePœyback
();

417 
osc1
.
cou¡
 +osc1.
cöc
 + (osc1.
pôchbíd
 >> 4);

418 
osc2
.
cou¡
 +osc2.
cöc
 + (osc2.
pôchbíd
 >> 4);

419 
osc3
.
cou¡
 +osc3.
cöc
 + (osc3.
pôchbíd
 >> 4);

420 
M¨r
[
tick
]();

421 --
tick
;

425 
›
 = (
uöt32_t
Ë((
osc1
.
ouçut
)*(osc1.
vﬁ
>>8))>>9;

426 
›
 +(
uöt32_t
Ë((
osc2
.
ouçut
)*(osc2.
vﬁ
>>8))>>9;

427 
›
 +(
uöt32_t
Ë((
osc3
.
ouçut
)*(osc3.
vﬁ
>>8))>>9;

428 
›
 *
dis¸ëe_vﬁ_mu…ùlõrs
[
dis¸ëe_vﬁ
];

429 
›
 >>= 8;

430 
ouçut
 = 
›
 & 0xFF;

434 #i‚de‡
POK_SIM


436 #i‡
POK_ENABLE_SOUND
 > 0

437 #i‡
POK_STREAMING_MUSIC
 > 0

439 #i‡
POK_STREAM_TO_DAC
 > 0

441 #i‡
POK_USE_DAC
 > 0

442 
uöt32_t
 
sbyã
 = 
°ªambyã
;

443 
sbyã
 *
dis¸ëe_vﬁ_mu…ùlõrs
[
dis¸ëe_vﬁ
];

444 
sbyã
 >>= 8;

445 
	`dac_wrôe
((
uöt8_t
)
sbyã
);

449 i‡(
°ªam°ï
) {

451 #i‡
POK_USE_PWM


452 
uöt32_t
 
sbyã
 = 
°ªambyã
;

453 
sbyã
 *
dis¸ëe_vﬁ_mu…ùlõrs
[
dis¸ëe_vﬁ
];

454 
sbyã
 >>= 8;

455 
uöt32_t
 
t_⁄
 = (uöt32_t)((((
obj
->
pwm
->
MATCHREL0
)*
sbyã
)>>8));

456 
obj
->
pwm
->
MATCHREL1
 = 
t_⁄
;

462 #i‡
POK_STREAM_TO_DAC
 > 0

465 #i‡
POK_USE_PWM


466 
›
 = 
ouçut
;

467 
›
 *
dis¸ëe_vﬁ_mu…ùlõrs
[
dis¸ëe_vﬁ
];

468 
›
 >>= 8;

469 
uöt32_t
 
t_⁄
 = (uöt32_t)((((
obj
->
pwm
->
MATCHREL0
)*
›
)>>8));

470 
obj
->
pwm
->
MATCHREL1
 = 
t_⁄
;

473 
›
 = 
ouçut
;

474 
›
 *
dis¸ëe_vﬁ_mu…ùlõrs
[
dis¸ëe_vﬁ
];

475 
›
 >>= 8;

476 
	`dac_wrôe
((
uöt8_t
)
›
);

478 
soundbyã
 = (
ouçut
+
°ªambyã
)>>1;

479 
soundbuf
[
soundbufödex
++]=
soundbyã
;

480 i‡(
soundbufödex
==256) soundbufindex=0;

484 
	}
}

487 
Pokôto
::
	$upd©eSDAudioSåóm
() {

488 i‡(
	`°ªamPau£d
()) ;

490 #i‡
POK_STREAMING_MUSIC
 > 0

491 i‡(
ﬁdBuf„r
 !
cuºítBuf„r
) {

492 i‡(
cuºítBuf„r
==0Ë
	`fûeRódByãs
(&
buf„rs
[3][0],
BUFFER_SIZE
);

493 i‡(
cuºítBuf„r
==1Ë
	`fûeRódByãs
(&
buf„rs
[0][0],
BUFFER_SIZE
);

494 i‡(
cuºítBuf„r
==2Ë
	`fûeRódByãs
(&
buf„rs
[1][0],
BUFFER_SIZE
);

495 
	`fûeRódByãs
(&
buf„rs
[2][0],
BUFFER_SIZE
);

496 
ﬁdBuf„r
 = 
cuºítBuf„r
;

497 
°ªamcou¡î
 +
BUFFER_SIZE
;

500 #i‚de‡
POK_SIM


501 i‡–
°ªamcou¡î
 > 
fs
.
fsize
 - (
BUFFER_SIZE
*6)) {

503 i‡–
°ªamcou¡î
 > 
	`gëFûeLígth
(Ë- (
BUFFER_SIZE
*6)) {

505 
°ªamcou¡î
=0;

506 #i‡
POK_STREAM_LOOP


507 
	`fûeRewöd
();

509 
	`pokPau£Såóm
();

513 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\HWSound.h

36 #i‚de‡
HWSOUND_H


37 
	#HWSOUND_H


	)

39 
	~"mbed.h
"

40 
	~"Pokôto_£âögs.h
"

42 
	#SPEAKER
 3

	)

43 
	#BUFFER_SIZE
 512*4

44 

	)

45 
	#SBUFSIZE
 512*4

	)

47 #i‡
POK_BOARDREV
 == 1

49 
	#DAC0_PORT
 1

	)

50 
	#DAC0_PIN
 6

	)

51 
	#DAC1_PORT
 1

	)

52 
	#DAC1_PIN
 0

	)

53 
	#DAC2_PORT
 1

	)

54 
	#DAC2_PIN
 16

	)

55 
	#DAC3_PORT
 0

	)

56 
	#DAC3_PIN
 19

	)

57 
	#DAC4_PORT
 0

	)

58 
	#DAC4_PIN
 17

	)

59 
	#DAC5_PORT
 1

	)

60 
	#DAC5_PIN
 12

	)

61 
	#DAC6_PORT
 1

	)

62 
	#DAC6_PIN
 15

	)

63 
	#DAC7_PORT
 1

	)

64 
	#DAC7_PIN
 8

	)

67 
	#DAC0_PORT
 1

	)

68 
	#DAC0_PIN
 28

	)

69 
	#DAC1_PORT
 1

	)

70 
	#DAC1_PIN
 29

	)

71 
	#DAC2_PORT
 1

	)

72 
	#DAC2_PIN
 30

	)

73 
	#DAC3_PORT
 1

	)

74 
	#DAC3_PIN
 31

	)

76 
	#DAC4_PORT
 2

	)

77 
	#DAC4_PIN
 20

	)

78 
	#DAC5_PORT
 2

	)

79 
	#DAC5_PIN
 21

	)

80 
	#DAC6_PORT
 2

	)

81 
	#DAC6_PIN
 22

	)

82 
	#DAC7_PORT
 2

	)

83 
	#DAC7_PIN
 23

	)

86 
	#SET_MASK_DAC
 
LPC_GPIO_PORT
->
MASK
[1] = ~(0xF0078000);

87 
	#CLR_MASK_DAC
 
LPC_GPIO_PORT
->
MASK
[1] = 0;

88 

	)

90 
	#SET_MASK_DAC_LO
 
LPC_GPIO_PORT
->
MASK
[1] = ~(0xF0000000);

91 
	#CLR_MASK_DAC_LO
 
LPC_GPIO_PORT
->
MASK
[1] = 0;

92 
	#SET_MASK_DAC_HI
 
LPC_GPIO_PORT
->
MASK
[2] = ~(0xF00000);

93 
	#CLR_MASK_DAC_HI
 
LPC_GPIO_PORT
->
MASK
[2] = 0;

94 

	)

97 
	#CLR_DAC0
 
LPC_GPIO_PORT
->
CLR
[
DAC0_PORT
] = 1UL << 
DAC0_PIN
;

	)

98 
	#SET_DAC0
 
LPC_GPIO_PORT
->
SET
[
DAC0_PORT
] = 1UL << 
DAC0_PIN
;

	)

99 
	#CLR_DAC1
 
LPC_GPIO_PORT
->
CLR
[
DAC1_PORT
] = 1UL << 
DAC1_PIN
;

	)

100 
	#SET_DAC1
 
LPC_GPIO_PORT
->
SET
[
DAC1_PORT
] = 1UL << 
DAC1_PIN
;

	)

101 
	#CLR_DAC2
 
LPC_GPIO_PORT
->
CLR
[
DAC2_PORT
] = 1UL << 
DAC2_PIN
;

	)

102 
	#SET_DAC2
 
LPC_GPIO_PORT
->
SET
[
DAC2_PORT
] = 1UL << 
DAC2_PIN
;

	)

103 
	#CLR_DAC3
 
LPC_GPIO_PORT
->
CLR
[
DAC3_PORT
] = 1UL << 
DAC3_PIN
;

	)

104 
	#SET_DAC3
 
LPC_GPIO_PORT
->
SET
[
DAC3_PORT
] = 1UL << 
DAC3_PIN
;

	)

105 
	#CLR_DAC4
 
LPC_GPIO_PORT
->
CLR
[
DAC4_PORT
] = 1UL << 
DAC4_PIN
;

	)

106 
	#SET_DAC4
 
LPC_GPIO_PORT
->
SET
[
DAC4_PORT
] = 1UL << 
DAC4_PIN
;

	)

107 
	#CLR_DAC5
 
LPC_GPIO_PORT
->
CLR
[
DAC5_PORT
] = 1UL << 
DAC5_PIN
;

	)

108 
	#SET_DAC5
 
LPC_GPIO_PORT
->
SET
[
DAC5_PORT
] = 1UL << 
DAC5_PIN
;

	)

109 
	#CLR_DAC6
 
LPC_GPIO_PORT
->
CLR
[
DAC6_PORT
] = 1UL << 
DAC6_PIN
;

	)

110 
	#SET_DAC6
 
LPC_GPIO_PORT
->
SET
[
DAC6_PORT
] = 1UL << 
DAC6_PIN
;

	)

111 
	#CLR_DAC7
 
LPC_GPIO_PORT
->
CLR
[
DAC7_PORT
] = 1UL << 
DAC7_PIN
;

	)

112 
	#SET_DAC7
 
LPC_GPIO_PORT
->
SET
[
DAC7_PORT
] = 1UL << 
DAC7_PIN
;

	)

115 
uöt16_t
 
soundbyã
;

118 
«me•a˚
 
	gPokôto
 {

121 
uöt8_t
 
°ªambyã
, 
°ªam⁄
, 
HWvﬁume
;

123 
pwm2
;

125 
soundInô
();

126 
dac_wrôe
(
uöt8_t
 
vÆue
);

127 
uöt8_t
 
ampIsOn
();

128 
ampE«bÀ
(
uöt8_t
 
v
);

129 
audio_IRQ
();

130 
upd©eSDAudioSåóm
();

131 
uöt8_t
 
°ªamPau£d
();

132 
∑u£Såóm
();

133 
∂aySåóm
();

134 
£tHWvﬁume
(
uöt8_t
);

135 
uöt8_t
 
gëHWvﬁume
();

136 
ch™geHWvﬁume
(
öt8_t
);

138 
pwmout_t
 
audi›wm
;

139 
uöt8_t
 
pokAmpIsOn
();

140 
pokAmpE«bÀ
(
uöt8_t
);

142 
Tickî
 
audio
;

144 
upd©e_SDAudioSåóm
();

148 
pokSoundIRQ
();

149 
pokSoundBuf„ªdIRQ
();

151 #i‡
POK_STREAMING_MUSIC
 > 0

152 
buf„rs
[][
BUFFER_SIZE
];

153 vﬁ©ûê
cuºítBuf„r
, 
ﬁdBuf„r
;

154 vﬁ©ûê
bufödex
, 
vﬁ
;

155 vﬁ©ûê* 
cuºítPå
;

156 vﬁ©ûê* 
ídPå
;

157 
öt8_t
 
°ªamvﬁ
;

158 
uöt32_t
 
°ªamcou¡î
;

159 
uöt8_t
 
°ªam°ï
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\PokittoClock.cpp

37 
	~"PokôtoC‹e.h
"

38 
	~"pöm≠.h
"

39 
	~"HWLCD.h
"

40 
	~"Pokôto_£âögs.h
"

41 
	~"waô_≠i.h
"

43 
uöt32_t
 
	g±_cou¡
=0;

44 
uöt32_t
* 
	g±imî
;

47 
SysTick_H™dÀr
() {

49 #i‡
PROJ_GAMEBOY
 > 0

50 
uöt32_t
 
a
;

51 
a
 = *
±imî
;

52 *
±imî
 = 
a
 + 1;

54 
±_cou¡
+=10;

57 
usög
 
«me•a˚
 
Pokôto
;

59 
uöt32_t
 
	gC‹e
::
ª‰eshtime
;

61 
	gC‹e
::
	$öôClock
() {

63 #i‡
PROJ_GAMEBOY
 > 0

64 
±imî
 = &
±_cou¡
;

65 
SysTick
->
LOAD
 = 480000-1;

67 #ifde‡
_OSCT


68 
SysTick
->
LOAD
 = (480000*3/
_OSCT
)-1;

70 
SysTick
->
LOAD
 = 480000-1;

73 
SysTick
->
VAL
 = 0;

74 
SysTick
->
CTRL
 = 4 | 2 | 1;

75 
±_cou¡
 = 0;

76 
	}
}

78 
uöt32_t
 
	gC‹e
::
	$gëTime
() {

79  
±_cou¡
;

80 
	}
}

82 
	gC‹e
::
	$waô
(
uöt16_t
 
ms
) {

83 
	`waô_ms
(
ms
);

84 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\PokittoEEPROM.h

21 #i‚de‡
EEPROM_h


22 
	#EEPROM_h


	)

24 
	~<°döt.h
>

25 
	~"üp.h
"

35 
	sEERef
{

37 
EERef
–c⁄° 
ödex
 )

38 : 
ödex
( index ) {}

41 
uöt8_t
 
›î©‹
*(Ëc⁄° {  
ì¥om_ªad_byã
–(
uöt16_t
*Ë
ödex
 ); }

42 
›î©‹
 c⁄° 
uöt8_t
(Ëc⁄° {  **
	mthis
; }

45 
	mEERef
 &
	m›î©‹
=–c⁄° 
EERef
 &
ªf
 ) {  *
this
 = *ref; }

46 
	mEERef
 &
	m›î©‹
=–
uöt8_t
 
ö
 ) {  
ì¥om_wrôe_byã
–(
uöt16_t
*Ë
ödex
, i¿), *
this
; }

47 
	mEERef
 &
	m›î©‹
 +=–
uöt8_t
 
ö
 ) {  *
this
 = **this + in; }

48 
	mEERef
 &
	m›î©‹
 -=–
uöt8_t
 
ö
 ) {  *
this
 = **this - in; }

49 
	mEERef
 &
	m›î©‹
 *=–
uöt8_t
 
ö
 ) {  *
this
 = **this * in; }

50 
	mEERef
 &
	m›î©‹
 /=–
uöt8_t
 
ö
 ) {  *
this
 = **this / in; }

51 
	mEERef
 &
	m›î©‹
 ^=–
uöt8_t
 
ö
 ) {  *
this
 = **this ^ in; }

52 
	mEERef
 &
	m›î©‹
 %=–
uöt8_t
 
ö
 ) {  *
this
 = **this % in; }

53 
	mEERef
 &
	m›î©‹
 &=–
uöt8_t
 
ö
 ) {  *
this
 = **this & in; }

54 
	mEERef
 &
	m›î©‹
 |=–
uöt8_t
 
ö
 ) {  *
this
 = **this | in; }

55 
	mEERef
 &
	m›î©‹
 <<=–
uöt8_t
 
ö
 ) {  *
this
 = **this << in; }

56 
	mEERef
 &
	m›î©‹
 >>=–
uöt8_t
 
ö
 ) {  *
this
 = **this >> in; }

58 
	mEERef
 &
upd©e
–
uöt8_t
 
ö
 ) {  
	mö
 !*
this
 ? *this = in : *this; }

61 
	mEERef
& 
	m›î©‹
++(Ë{  *
	mthis
 += 1; }

62 
	mEERef
& 
	m›î©‹
--(Ë{  *
	mthis
 -= 1; }

65 
uöt8_t
 
	m›î©‹
++ (){

66 
uöt8_t
 
	mªt
 = **
this
;

67  ++(*
	mthis
), 
	mªt
;

70 
uöt8_t
 
	m›î©‹
-- (){

71 
uöt8_t
 
	mªt
 = **
this
;

72  --(*
	mthis
), 
	mªt
;

75 
	mödex
;

86 
	sEEPå
{

88 
EEPå
–c⁄° 
ödex
 )

89 : 
ödex
( index ) {}

91 
›î©‹
 c⁄° (Ëc⁄° {  
ödex
; }

92 
	mEEPå
 &
	m›î©‹
=–
ö
 ) {  
ödex
 = in, *
	mthis
; }

95 
boﬁ
 
	m›î©‹
!=–c⁄° 
EEPå
 &
±r
 ) {  
ödex
 !=Ötr.index; }

96 
EERef
 
	m›î©‹
*(Ë{  
	mödex
; }

99 
	mEEPå
& 
	m›î©‹
++(Ë{  ++
	mödex
, *
	mthis
; }

100 
	mEEPå
& 
	m›î©‹
--(Ë{  --
	mödex
, *
	mthis
; }

101 
EEPå
 
	m›î©‹
++ (Ë{  
	mödex
++; }

102 
EEPå
 
	m›î©‹
-- (Ë{  
	mödex
--; }

104 
	mödex
;

115 
	sEEPROMCœss
{

118 
EERef
 
	m›î©‹
[]–c⁄° 
	midx
 ) {  idx; }

119 
uöt8_t
 
ªad
–
idx
 ) {  
EERef
( idx ); }

120 
wrôe
–
idx
, 
uöt8_t
 
vÆ
 ) { (
EERef
( idx )) = val; }

121 
upd©e
–
idx
, 
uöt8_t
 
vÆ
 ) { 
EERef
( idx ).update( val ); }

124 
EEPå
 
begö
() {  0x00; }

125 
EEPå
 
íd
(Ë{  
Àngth
(); }

126 
uöt16_t
 
Àngth
(Ë{  
	mEESETTINGS_VOL
; }

129 
	mãm∂©e
< 
ty≥«me
 
	mT
 > T &
gë
–
idx
, 
T
 &
t
 ){

130 
EEPå
 
	me
 = 
idx
;

131 
uöt8_t
 *
	m±r
 = (uöt8_t*Ë&
t
;

132  
	mcou¡
 = (
T
Ë; cou¡ ; --cou¡, ++
	me
 ) *
	m±r
++ = *
e
;

133  
	mt
;

136 
	mãm∂©e
< 
ty≥«me
 
	mT
 > c⁄° T &
put
–
idx
, c⁄° 
T
 &
t
 ){

137 
EEPå
 
	me
 = 
idx
;

138 c⁄° 
uöt8_t
 *
	m±r
 = (c⁄° uöt8_t*Ë&
t
;

139  
	mcou¡
 = (
T
Ë; cou¡ ; --cou¡, ++
	me
 ) (*e).
upd©e
–*
±r
++ );

140  
	mt
;

144 
EEPROMCœss
 
	gEEPROM
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\PokittoHW.cpp

37 
	~"PokôtoC‹e.h
"

38 
	~"pöm≠.h
"

39 
	~"HWLCD.h
"

42 
usög
 
«me•a˚
 
	gPokôto
;

45 
	gC‹e
::
	$quô
() {

46 
run_°©e
 = 
Ál£
;

47 
	}
}

49 
	gC‹e
::
	$öôR™dom
() {

50 
time_t
 
£c⁄ds
 = 
	`time
(
NULL
);

51 
Pokôto
::
B©ãry
::
	`upd©e
();

52 
	`§™d
((Ë(
Pokôto
::
B©ãry
::
Àvñ
 + (
£c⁄ds
)));

53 
	}
}

55 
	gC‹e
::
	$öôGPIO
() {

57 
LPC_GPIO_PORT
->
DIR
[
LCD_CD_PORT
] |(1 << 
LCD_CD_PIN
 );

58 
LPC_GPIO_PORT
->
DIR
[
LCD_WR_PORT
] |(1 << 
LCD_WR_PIN
 );

59 
LPC_GPIO_PORT
->
DIR
[
LCD_RD_PORT
] |(1 << 
LCD_RD_PIN
 );

60 
LPC_GPIO_PORT
->
DIR
[
LCD_RES_PORT
] |(1 << 
LCD_RES_PIN
 );

62 
LPC_GPIO_PORT
->
DIR
[2] |= (0xFFFF << 3);

64 
	`pö_mode
(
P2_3
,
PuŒN⁄e
);

65 
	`pö_mode
(
P2_4
,
PuŒN⁄e
);

66 
	`pö_mode
(
P2_5
,
PuŒN⁄e
);

67 
	`pö_mode
(
P2_6
,
PuŒN⁄e
);

69 
	`pö_mode
(
P2_7
,
PuŒN⁄e
);

70 
	`pö_mode
(
P2_8
,
PuŒN⁄e
);

71 
	`pö_mode
(
P2_9
,
PuŒN⁄e
);

72 
	`pö_mode
(
P2_10
,
PuŒN⁄e
);

74 
	`pö_mode
(
P2_11
,
PuŒN⁄e
);

75 
	`pö_mode
(
P2_12
,
PuŒN⁄e
);

76 
	`pö_mode
(
P2_13
,
PuŒN⁄e
);

77 
	`pö_mode
(
P2_14
,
PuŒN⁄e
);

79 
	`pö_mode
(
P2_15
,
PuŒN⁄e
);

80 
	`pö_mode
(
P2_16
,
PuŒN⁄e
);

81 
	`pö_mode
(
P2_17
,
PuŒN⁄e
);

82 
	`pö_mode
(
P2_18
,
PuŒN⁄e
);

83 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\Pokitto_extport.cpp

21 
	~"Pokôto.h
"

23 
usög
 
«me•a˚
 
	gmbed
;

25 #i‡
POK_USE_EXT
 > 0

31 
A«logIn
 
ext0
(
P1_19
);

32 
DigôÆIn
 
ext1
(
P0_11
, 
PuŒUp
);

35 
DigôÆOut
 
ext2
(
P0_12
);

36 
DigôÆOut
 
ext3
(
P0_13
);

37 
DigôÆOut
 
ext4
(
P0_14
);

38 
DigôÆOut
 
ext5
(
P0_17
);

39 
DigôÆOut
 
ext6
(
P0_18
);

40 
DigôÆOut
 
ext7
(
P0_19
);

41 
DigôÆOut
 
ext8
(
P1_20
);

42 
DigôÆOut
 
ext9
(
P1_21
);

43 
DigôÆOut
 
ext10
(
P1_22
);

44 
DigôÆOut
 
ext11
(
P1_23
);

45 
DigôÆOut
 
ext12
(
P1_5
);

46 
DigôÆOut
 
ext13
(
P1_6
);

47 
DigôÆOut
 
ext14
(
P1_8
);

48 
DigôÆOut
 
ext15
(
P1_26
);

49 
DigôÆOut
 
ext16
(
P1_27
);

50 
DigôÆOut
 
ext17
(
P0_16
);

56 
	$ext_wrôe
(
uöt32_t
 
vÆue
) {

57 #i‡
POK_USE_EXT
 > 0

58 i‡(
vÆue
 & 1Ë
SET_EXT0
 
CLR_EXT0
;

59 
vÆue
 >>= 1;

60 i‡(
vÆue
 & 1Ë
SET_EXT1
 
CLR_EXT1
;

61 
vÆue
 >>= 1;

62 i‡(
vÆue
 & 1Ë
SET_EXT2
 
CLR_EXT2
;

63 
vÆue
 >>= 1;

64 i‡(
vÆue
 & 1Ë
SET_EXT3
 
CLR_EXT3
;

65 
vÆue
 >>= 1;

66 i‡(
vÆue
 & 1Ë
SET_EXT4
 
CLR_EXT4
;

67 
vÆue
 >>= 1;

68 i‡(
vÆue
 & 1Ë
SET_EXT5
 
CLR_EXT5
;

69 
vÆue
 >>= 1;

70 i‡(
vÆue
 & 1Ë
SET_EXT6
 
CLR_EXT6
;

71 
vÆue
 >>= 1;

72 i‡(
vÆue
 & 1Ë
SET_EXT7
 
CLR_EXT7
;

73 
vÆue
 >>= 1;

74 i‡(
vÆue
 & 1Ë
SET_EXT8
 
CLR_EXT8
;

75 
vÆue
 >>= 1;

76 i‡(
vÆue
 & 1Ë
SET_EXT9
 
CLR_EXT9
;

77 
vÆue
 >>= 1;

78 i‡(
vÆue
 & 1Ë
SET_EXT10
 
CLR_EXT10
;

79 
vÆue
 >>= 1;

80 i‡(
vÆue
 & 1Ë
SET_EXT11
 
CLR_EXT11
;

81 
vÆue
 >>= 1;

82 i‡(
vÆue
 & 1Ë
SET_EXT12
 
CLR_EXT12
;

83 
vÆue
 >>= 1;

84 i‡(
vÆue
 & 1Ë
SET_EXT13
 
CLR_EXT13
;

85 
vÆue
 >>= 1;

86 i‡(
vÆue
 & 1Ë
SET_EXT14
 
CLR_EXT14
;

87 
vÆue
 >>= 1;

88 i‡(
vÆue
 & 1Ë
SET_EXT15
 
CLR_EXT15
;

89 
vÆue
 >>= 1;

90 i‡(
vÆue
 & 1Ë
SET_EXT16
 
CLR_EXT16
;

91 
vÆue
 >>= 1;

92 i‡(
vÆue
 & 1Ë
SET_EXT17
 
CLR_EXT17
;

94 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\Pokitto_extport.h

21 #i‚de‡
POKITTO_EXTPORT_H


22 
	#POKITTO_EXTPORT_H


	)

24 
	~"mbed.h
"

26 
usög
 
«me•a˚
 
	gmbed
;

28 #i‡
POK_BOARDREV
 == 1

30 
	#EXT0_PORT
 1

	)

31 
	#EXT0_PIN
 19

	)

32 
	#EXT1_PORT
 0

	)

33 
	#EXT1_PIN
 11

	)

34 
	#EXT2_PORT
 0

	)

35 
	#EXT2_PIN
 12

	)

36 
	#EXT3_PORT
 0

	)

37 
	#EXT3_PIN
 13

	)

38 
	#EXT4_PORT
 0

	)

39 
	#EXT4_PIN
 14

	)

40 
	#EXT5_PORT
 0

	)

41 
	#EXT5_PIN
 17

	)

42 
	#EXT6_PORT
 0

	)

43 
	#EXT6_PIN
 18

	)

44 
	#EXT7_PORT
 0

	)

45 
	#EXT7_PIN
 19

	)

46 
	#EXT8_PORT
 1

	)

47 
	#EXT8_PIN
 20

	)

48 
	#EXT9_PORT
 1

	)

49 
	#EXT9_PIN
 21

	)

50 
	#EXT10_PORT
 1

	)

51 
	#EXT10_PIN
 22

	)

52 
	#EXT11_PORT
 1

	)

53 
	#EXT11_PIN
 23

	)

54 
	#EXT12_PORT
 1

	)

55 
	#EXT12_PIN
 5

	)

56 
	#EXT13_PORT
 1

	)

57 
	#EXT13_PIN
 6

	)

58 
	#EXT14_PORT
 1

	)

59 
	#EXT14_PIN
 8

	)

60 
	#EXT15_PORT
 0

	)

61 
	#EXT15_PIN
 19

	)

62 
	#EXT16_PORT
 0

	)

63 
	#EXT16_PIN
 13

	)

64 
	#EXT17_PORT
 0

	)

65 
	#EXT17_PIN
 16

	)

68 
	#EXT0_PORT
 1

	)

69 
	#EXT0_PIN
 19

	)

70 
	#EXT1_PORT
 0

	)

71 
	#EXT1_PIN
 11

	)

72 
	#EXT2_PORT
 0

	)

73 
	#EXT2_PIN
 12

	)

74 
	#EXT3_PORT
 0

	)

75 
	#EXT3_PIN
 13

	)

76 
	#EXT4_PORT
 0

	)

77 
	#EXT4_PIN
 14

	)

78 
	#EXT5_PORT
 0

	)

79 
	#EXT5_PIN
 17

	)

80 
	#EXT6_PORT
 0

	)

81 
	#EXT6_PIN
 18

	)

82 
	#EXT7_PORT
 0

	)

83 
	#EXT7_PIN
 19

	)

84 
	#EXT8_PORT
 1

	)

85 
	#EXT8_PIN
 20

	)

86 
	#EXT9_PORT
 1

	)

87 
	#EXT9_PIN
 21

	)

88 
	#EXT10_PORT
 1

	)

89 
	#EXT10_PIN
 22

	)

90 
	#EXT11_PORT
 1

	)

91 
	#EXT11_PIN
 23

	)

92 
	#EXT12_PORT
 1

	)

93 
	#EXT12_PIN
 5

	)

94 
	#EXT13_PORT
 1

	)

95 
	#EXT13_PIN
 6

	)

96 
	#EXT14_PORT
 1

	)

97 
	#EXT14_PIN
 8

	)

98 
	#EXT15_PORT
 0

	)

99 
	#EXT15_PIN
 19

	)

100 
	#EXT16_PORT
 0

	)

101 
	#EXT16_PIN
 13

	)

102 
	#EXT17_PORT
 0

	)

103 
	#EXT17_PIN
 16

	)

105 
	#EXT0
 
P1_19


	)

106 
	#EXT1
 
P0_11


	)

107 
	#EXT2
 
P0_12


	)

108 
	#EXT3
 
P0_13


	)

109 
	#EXT4
 
P0_14


	)

110 
	#EXT5
 
P0_17


	)

111 
	#EXT6
 
P0_18


	)

112 
	#EXT7
 
P0_19


	)

113 
	#EXT8
 
P1_20


	)

114 
	#EXT9
 
P1_21


	)

115 
	#EXT10
 
P1_22


	)

116 
	#EXT11
 
P1_23


	)

117 
	#EXT12
 
P1_5


	)

118 
	#EXT13
 
P1_6


	)

119 
	#EXT14
 
P1_8


	)

120 
	#EXT15
 
P1_26


	)

121 
	#EXT16
 
P1_27


	)

122 
	#EXT17
 
P0_16


	)

126 
	#CLR_EXT0
 
LPC_GPIO_PORT
->
CLR
[
EXT0_PORT
] = 1 << 
EXT0_PIN
;

	)

127 
	#SET_EXT0
 
LPC_GPIO_PORT
->
SET
[
EXT0_PORT
] = 1 << 
EXT0_PIN
;

	)

128 
	#CLR_EXT1
 
LPC_GPIO_PORT
->
CLR
[
EXT1_PORT
] = 1 << 
EXT1_PIN
;

	)

129 
	#SET_EXT1
 
LPC_GPIO_PORT
->
SET
[
EXT1_PORT
] = 1 << 
EXT1_PIN
;

	)

130 
	#CLR_EXT2
 
LPC_GPIO_PORT
->
CLR
[
EXT2_PORT
] = 1 << 
EXT2_PIN
;

	)

131 
	#SET_EXT2
 
LPC_GPIO_PORT
->
SET
[
EXT2_PORT
] = 1 << 
EXT2_PIN
;

	)

132 
	#CLR_EXT3
 
LPC_GPIO_PORT
->
CLR
[
EXT3_PORT
] = 1 << 
EXT3_PIN
;

	)

133 
	#SET_EXT3
 
LPC_GPIO_PORT
->
SET
[
EXT3_PORT
] = 1 << 
EXT3_PIN
;

	)

134 
	#CLR_EXT4
 
LPC_GPIO_PORT
->
CLR
[
EXT4_PORT
] = 1 << 
EXT4_PIN
;

	)

135 
	#SET_EXT4
 
LPC_GPIO_PORT
->
SET
[
EXT4_PORT
] = 1 << 
EXT4_PIN
;

	)

136 
	#CLR_EXT5
 
LPC_GPIO_PORT
->
CLR
[
EXT5_PORT
] = 1 << 
EXT5_PIN
;

	)

137 
	#SET_EXT5
 
LPC_GPIO_PORT
->
SET
[
EXT5_PORT
] = 1 << 
EXT5_PIN
;

	)

138 
	#CLR_EXT6
 
LPC_GPIO_PORT
->
CLR
[
EXT6_PORT
] = 1 << 
EXT6_PIN
;

	)

139 
	#SET_EXT6
 
LPC_GPIO_PORT
->
SET
[
EXT6_PORT
] = 1 << 
EXT6_PIN
;

	)

140 
	#CLR_EXT7
 
LPC_GPIO_PORT
->
CLR
[
EXT7_PORT
] = 1 << 
EXT7_PIN
;

	)

141 
	#SET_EXT7
 
LPC_GPIO_PORT
->
SET
[
EXT7_PORT
] = 1 << 
EXT7_PIN
;

	)

142 
	#CLR_EXT8
 
LPC_GPIO_PORT
->
CLR
[
EXT8_PORT
] = 1 << 
EXT8_PIN
;

	)

143 
	#SET_EXT8
 
LPC_GPIO_PORT
->
SET
[
EXT8_PORT
] = 1 << 
EXT8_PIN
;

	)

144 
	#CLR_EXT9
 
LPC_GPIO_PORT
->
CLR
[
EXT9_PORT
] = 1 << 
EXT9_PIN
;

	)

145 
	#SET_EXT9
 
LPC_GPIO_PORT
->
SET
[
EXT9_PORT
] = 1 << 
EXT9_PIN
;

	)

146 
	#CLR_EXT10
 
LPC_GPIO_PORT
->
CLR
[
EXT10_PORT
] = 1 << 
EXT10_PIN
;

	)

147 
	#SET_EXT10
 
LPC_GPIO_PORT
->
SET
[
EXT10_PORT
] = 1 << 
EXT10_PIN
;

	)

148 
	#CLR_EXT11
 
LPC_GPIO_PORT
->
CLR
[
EXT11_PORT
] = 1 << 
EXT11_PIN
;

	)

149 
	#SET_EXT11
 
LPC_GPIO_PORT
->
SET
[
EXT11_PORT
] = 1 << 
EXT11_PIN
;

	)

150 
	#CLR_EXT12
 
LPC_GPIO_PORT
->
CLR
[
EXT12_PORT
] = 1 << 
EXT12_PIN
;

	)

151 
	#SET_EXT12
 
LPC_GPIO_PORT
->
SET
[
EXT12_PORT
] = 1 << 
EXT12_PIN
;

	)

152 
	#CLR_EXT13
 
LPC_GPIO_PORT
->
CLR
[
EXT13_PORT
] = 1 << 
EXT13_PIN
;

	)

153 
	#SET_EXT13
 
LPC_GPIO_PORT
->
SET
[
EXT13_PORT
] = 1 << 
EXT13_PIN
;

	)

154 
	#CLR_EXT14
 
LPC_GPIO_PORT
->
CLR
[
EXT14_PORT
] = 1 << 
EXT14_PIN
;

	)

155 
	#SET_EXT14
 
LPC_GPIO_PORT
->
SET
[
EXT14_PORT
] = 1 << 
EXT14_PIN
;

	)

156 
	#CLR_EXT15
 
LPC_GPIO_PORT
->
CLR
[
EXT15_PORT
] = 1 << 
EXT15_PIN
;

	)

157 
	#SET_EXT15
 
LPC_GPIO_PORT
->
SET
[
EXT15_PORT
] = 1 << 
EXT15_PIN
;

	)

158 
	#CLR_EXT16
 
LPC_GPIO_PORT
->
CLR
[
EXT16_PORT
] = 1 << 
EXT16_PIN
;

	)

159 
	#SET_EXT16
 
LPC_GPIO_PORT
->
SET
[
EXT16_PORT
] = 1 << 
EXT16_PIN
;

	)

160 
	#CLR_EXT17
 
LPC_GPIO_PORT
->
CLR
[
EXT17_PORT
] = 1 << 
EXT17_PIN
;

	)

161 
	#SET_EXT17
 
LPC_GPIO_PORT
->
SET
[
EXT17_PORT
] = 1 << 
EXT17_PIN
;

	)

163 #i‡
POK_USE_EXT
 > 0

169 
A«logIn
 
ext0
;

170 
DigôÆIn
 
ext1
;

173 
DigôÆOut
 
ext2
;

174 
DigôÆOut
 
ext3
;

175 
DigôÆOut
 
ext4
;

176 
DigôÆOut
 
ext5
;

177 
DigôÆOut
 
ext6
;

178 
DigôÆOut
 
ext7
;

179 
DigôÆOut
 
ext8
;

180 
DigôÆOut
 
ext9
;

181 
DigôÆOut
 
ext10
;

182 
DigôÆOut
 
ext11
;

183 
DigôÆOut
 
ext12
;

184 
DigôÆOut
 
ext13
;

185 
DigôÆOut
 
ext14
;

186 
DigôÆOut
 
ext15
;

187 
DigôÆOut
 
ext16
;

188 
DigôÆOut
 
ext17
;

192 
tu∫
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\SoftwareI2C.cpp

7 
	~"So·w¨eI2C.h
"

15 
	gSo·w¨eI2C
::
	$So·w¨eI2C
(
PöName
 
sda
, PöNamê
s˛
Ë: 
	`_sda
(sdaË, 
	$_s˛
(
s˛
) {

16 
_s˛
.
	`ouçut
();

17 
_s˛
.
	`mode
(
O≥nDøö
);

18 
_sda
.
	`ouçut
();

19 
_sda
.
	`mode
(
O≥nDøö
);

21 
_devi˚_addªss
 = 0;

22 
_‰equícy_dñay
 = 1;

24 
	`öôüli£
();

25 
	}
}

27 
	gSo·w¨eI2C
::~
	$So·w¨eI2C
() {

29 
	}
}

37 
So·w¨eI2C
::
	$ªad
(
uöt8_t
 
devi˚_addªss
, uöt8_t* 
d©a
, uöt8_à
d©a_byãs
) {

38 i‡(
d©a
 =0 || 
d©a_byãs
 == 0) ;

40 
devi˚_addªss
 = device_address | 0x01;

41 
	`°¨t
();

42 
	`putByã
(
devi˚_addªss
);

43 
	`gëAck
();

44 
x
 = 0; x < 
d©a_byãs
; ++x) {

45 
d©a
[
x
] = 
	`gëByã
();

46 i‡–
x
 < (
d©a_byãs
 -1)) {

47 
	`giveAck
();

50 
	`°›
();

51 
	}
}

59 
	gSo·w¨eI2C
::
	$wrôe
(
uöt8_t
 
devi˚_addªss
, uöt8_t* 
d©a
, uöt8_à
d©a_byãs
) {

60 i‡(
d©a
 =0 || 
d©a_byãs
 == 0) ;

62 
devi˚_addªss
 = device_address & 0xFE;

63 
	`°¨t
();

64 
	`putByã
(
devi˚_addªss
);

65 
	`gëAck
();

66  
x
 = 0; x < 
d©a_byãs
; ++x ) {

67 
	`putByã
(
d©a
[
x
]);

68 
	`gëAck
();

70 
	`°›
();

71 
	}
}

78 
	gSo·w¨eI2C
::
	$wrôe
(
uöt8_t
 
devi˚_addªss
, uöt8_à
byã
) {

79 
devi˚_addªss
 = device_address & 0xFE;

80 
	`°¨t
();

81 
	`putByã
(
devi˚_addªss
);

82 
	`gëAck
();

83 
	`putByã
(
byã
);

84 
	`gëAck
();

85 
	`°›
();

86 
	}
}

95 
	gSo·w¨eI2C
::
	$øndomRód
(
uöt8_t
 
devi˚_addªss
, uöt8_à
°¨t_addªss
, uöt8_t* 
d©a
, uöt8_à
d©a_byãs
) {

96 i‡(
d©a
 =0 || 
d©a_byãs
 == 0) ;

98 
devi˚_addªss
 = device_address & 0xFE;

99 
	`°¨t
();

100 
	`putByã
(
devi˚_addªss
);

101 i‡(!
	`gëAck
()) {

104 
	`putByã
(
°¨t_addªss
);

105 i‡(!
	`gëAck
()) {

109 
devi˚_addªss
=device_address | 0x01;

110 
	`°¨t
();

111 
	`putByã
(
devi˚_addªss
);

112 i‡(!
	`gëAck
()) {

115  
x
 = 0; x < 
d©a_byãs
; ++x) {

116 
d©a
[
x
] = 
	`gëByã
();

117 i‡(
x
 !(
d©a_byãs
 - 1)Ë
	`giveAck
();

119 
	`°›
();

120 
	}
}

128 
	gSo·w¨eI2C
::
	$øndomWrôe
(
uöt8_t
 
devi˚_addªss
, uöt8_à
°¨t_addªss
, uöt8_à
byã
) {

129 
devi˚_addªss
 = device_address & 0xFE;

130 
	`°¨t
();

131 
	`putByã
(
devi˚_addªss
);

132 
	`gëAck
();

133 
	`putByã
(
°¨t_addªss
);

134 
	`gëAck
();

135 
	`putByã
(
byã
);

136 
	`gëAck
();

137 
	`°›
();

138 
	}
}

147 
	gSo·w¨eI2C
::
	$øndomWrôe
(
uöt8_t
 
devi˚_addªss
, uöt8_à
°¨t_addªss
, uöt8_t* 
d©a
, uöt8_à
d©a_byãs
) {

148 i‡(
d©a
 =0 || 
d©a_byãs
 == 0) ;

150 
devi˚_addªss
 = device_address & 0xFE;

151 
	`°¨t
();

152 
	`putByã
(
devi˚_addªss
);

153 
	`gëAck
();

154 
	`putByã
(
°¨t_addªss
);

155 
	`gëAck
();

156  
x
 = 0; x <
d©a_byãs
; ++x ) {

157 
	`putByã
(
d©a
[
x
]);

158 
	`gëAck
();

160 
	`°›
();

161 
	}
}

169 
uöt16_t
 
	gSo·w¨eI2C
::
	$ªad16
(
uöt8_t
 
devi˚_addªss
, uöt8_à
°¨t_addªss
) {

170 
uöt8_t
 
sh‹t_¨øy
[2] = {0, 0};

171 
	`øndomRód
(
devi˚_addªss
, 
°¨t_addªss
, 
sh‹t_¨øy
, 2 );

172 
uöt16_t
 
vÆue
 = 0;

173 
vÆue
 = 
sh‹t_¨øy
[0] << 8;

174 
vÆue
 |
sh‹t_¨øy
[1];

176  
vÆue
;

177 
	}
}

185 
uöt32_t
 
	gSo·w¨eI2C
::
	$ªad24
(
uöt8_t
 
devi˚_addªss
, uöt8_à
°¨t_addªss
) {

186 
uöt8_t
 
vÆue_¨øy
[4] = {0, 0, 0};

187 
	`øndomRód
(
devi˚_addªss
, 
°¨t_addªss
, 
vÆue_¨øy
, 3 );

188 
uöt32_t
 
vÆue
 = 0;

189 
vÆue
 = 
vÆue_¨øy
[0] << 16;

190 
vÆue
 |
vÆue_¨øy
[1] << 8;

191 
vÆue
 |
vÆue_¨øy
[2];

193  
vÆue
;

194 
	}
}

202 
uöt32_t
 
	gSo·w¨eI2C
::
	$ªad32
(
uöt8_t
 
devi˚_addªss
, uöt8_à
°¨t_addªss
) {

203 
uöt8_t
 
vÆue_¨øy
[4] = {0, 0, 0, 0};

204 
	`øndomRód
(
devi˚_addªss
, 
°¨t_addªss
, 
vÆue_¨øy
, 4 );

205 
uöt32_t
 
vÆue
 = 0;

206 
vÆue
 = 
vÆue_¨øy
[0] << 24;

207 
vÆue
 |
vÆue_¨øy
[1] << 16;

208 
vÆue
 |
vÆue_¨øy
[2] << 8;

209 
vÆue
 |
vÆue_¨øy
[3];

211  
vÆue
;

212 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\SoftwareI2C.h

7 #i‚de‡
_SOFTWARE_I2C_H_


8 
	#_SOFTWARE_I2C_H_


	)

10 
	~"mbed.h
"

16 ˛as†
	cSo·w¨eI2C
 {

17 
	mpublic
:

18 
So·w¨eI2C
(
PöName
 
sda
, PöNamê
s˛
);

19 ~
So·w¨eI2C
();

21 
ªad
(
uöt8_t
 
devi˚_addªss
, uöt8_t* 
d©a
, uöt8_à
d©a_byãs
);

22 
wrôe
(
uöt8_t
 
devi˚_addªss
, uöt8_t* 
d©a
, uöt8_à
d©a_byãs
);

23 
wrôe
(
uöt8_t
 
devi˚_addªss
, uöt8_à
byã
);

24 
øndomRód
(
uöt8_t
 
devi˚_addªss
, uöt8_à
°¨t_addªss
, uöt8_t* 
d©a
, uöt8_à
d©a_byãs
);

25 
øndomWrôe
(
uöt8_t
 
devi˚_addªss
, uöt8_à
°¨t_addªss
, uöt8_t* 
d©a
, uöt8_à
d©a_byãs
);

26 
øndomWrôe
(
uöt8_t
 
devi˚_addªss
, uöt8_à
°¨t_addªss
, uöt8_à
byã
);

28 
uöt8_t
 
ªad8
(uöt8_à
devi˚_addªss
, uöt8_à
°¨t_addªss
);

29 
uöt16_t
 
ªad16
(
uöt8_t
 
devi˚_addªss
, uöt8_à
°¨t_addªss
);

30 
uöt32_t
 
ªad24
(
uöt8_t
 
devi˚_addªss
, uöt8_à
°¨t_addªss
);

31 
uöt32_t
 
ªad32
(
uöt8_t
 
devi˚_addªss
, uöt8_à
°¨t_addªss
);

33 
	$£tDevi˚Addªss
(
uöt8_t
 
addªss
){

34 
_devi˚_addªss
 = 
addªss
;

37 
	$£tFªquícy
(
uöt32_t
 
‰equícy
){

38 
_‰equícy_dñay
 = 1000000 / 
‰equícy
;

39 
	}
}

41 
ölöe
 
	$öôüli£
() {

42 
_s˛
.
	`ouçut
();

43 
_sda
.
	`ouçut
();

45 
_sda
 = 1;

46 
_s˛
 = 0;

47 
	`waô_us
(
_‰equícy_dñay
);

49  
n
 = 0;Ç <= 3; ++n ) {

50 
	`°›
();

52 
	}
}

54 
	g¥iv©e
:

55 
ölöe
 
	$°¨t
() {

56 
_sda
.
	`ouçut
();

57 
	`waô_us
(
_‰equícy_dñay
);

58 
_s˛
 = 1;

59 
_sda
 = 1;

60 
	`waô_us
(
_‰equícy_dñay
);

61 
_sda
 = 0;

62 
	`waô_us
(
_‰equícy_dñay
);

63 
_s˛
 = 0;

64 
	`waô_us
(
_‰equícy_dñay
);

65 
	}
}

67 
ölöe
 
	$°›
() {

68 
_sda
.
	`ouçut
();

69 
	`waô_us
(
_‰equícy_dñay
);

70 
_sda
 = 0;

71 
	`waô_us
(
_‰equícy_dñay
);

72 
_s˛
 = 1;

73 
	`waô_us
(
_‰equícy_dñay
);

74 
_sda
 = 1;

75 
	}
}

77 
ölöe
 
	$putByã
(
uöt8_t
 
byã
) {

78 
_sda
.
	`ouçut
();

79  
n
 = 8;Ç > 0; --n) {

80 
	`waô_us
(
_‰equícy_dñay
);

81 
_sda
 = 
byã
 & (1 << (
n
-1));

82 
_s˛
 = 1;

83 
	`waô_us
(
_‰equícy_dñay
);

84 
_s˛
 = 0;

86 
_sda
 = 1;

87 
	}
}

89 
ölöe
 
uöt8_t
 
	$gëByã
() {

90 
uöt8_t
 
byã
 = 0;

92 
_sda
.
	`öput
();

93 
_sda
.
	`mode
(
O≥nDøö
);

95 
	`waô_us
(
_‰equícy_dñay
);

97  
n
 = 8;Ç > 0; --n ) {

98 
_s˛
=1;

99 
	`waô_us
(
_‰equícy_dñay
);

100 
byã
 |
_sda
 << (
n
-1);

101 
	`waô_us
(
_‰equícy_dñay
);

102 
_s˛
=0;

103 
	`waô_us
(
_‰equícy_dñay
);

106 
_sda
.
	`ouçut
();

108  
byã
;

109 
	}
}

111 
ölöe
 
	$giveAck
() {

112 
_sda
.
	`ouçut
();

113 
	`waô_us
(
_‰equícy_dñay
);

114 
_sda
 = 0;

115 
_s˛
 = 1;

116 
	`waô_us
(
_‰equícy_dñay
);

117 
_s˛
 = 0;

118 
_sda
 = 1;

120 
	}
}

122 
ölöe
 
boﬁ
 
	$gëAck
() {

123 
_sda
.
	`ouçut
();

124 
_sda
 = 1;

125 
_s˛
 = 1;

126 
_sda
.
	`öput
();

127 
_sda
.
	`mode
(
O≥nDøö
);

128 
	`waô_us
(
_‰equícy_dñay
);

129 
_s˛
 = 0;

131 if(
_sda
 !0){ 
Ál£
;}

133 
	`waô_us
(
_‰equícy_dñay
);

134  
åue
;

135 
	}
}

137 
DigôÆInOut
 
	g_sda
;

138 
DigôÆInOut
 
	g_s˛
;

140 
uöt8_t
 
	g_devi˚_addªss
;

141 
uöt32_t
 
	g_‰equícy_dñay
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\clock_11u6x.c

1 
	~"˛ock_11u6x.h
"

5 
STATIC
 c⁄° 
uöt32_t
 
	gwdtOSCR©e
[
WDTLFO_OSC_4_60
 + 1] = {

25 
STATIC
 
uöt32_t
 
	$Chù_Clock_GëPLLFªq
(
uöt32_t
 
PLLReg
, uöt32_à
öputR©e
)

27 
uöt32_t
 
m£l
 = ((
PLLReg
 & 0x1F) + 1);

29  
öputR©e
 * 
m£l
;

30 
	}
}

33 
uöt32_t
 
	$Chù_Clock_GëSy°emPLLOutClockR©e
()

35  
	`Chù_Clock_GëPLLFªq
(
LPC_SYSCTL
->
SYSPLLCTRL
,

36 
	`Chù_Clock_GëSy°emPLLInClockR©e
());

37 
	}
}

41 
STATIC
 
uöt32_t
 
	$Chù_Clock_GëWDTR©e
(
uöt32_t
 
ªg
)

43 
uöt32_t
 
div
;

44 
CHIP_WDTLFO_OSC_T
 
˛k
;

47 
˛k
 = (
CHIP_WDTLFO_OSC_T
Ë((
ªg
 >> 5) & 0xF);

48 
div
 = 
ªg
 & 0x1F;

51  
wdtOSCR©e
[
˛k
] / ((
div
 + 1) << 1);

52 
	}
}

55 
uöt32_t
 
	$Chù_Clock_GëWDTOSCR©e
()

57  
	`Chù_Clock_GëWDTR©e
(
LPC_SYSCTL
->
WDTOSCCTRL
);

58 
	}
}

62 
uöt32_t
 
	$Chù_Clock_GëSy°emPLLInClockR©e
()

64 
uöt32_t
 
˛kR©e
;

66 (
CHIP_SYSCTL_PLLCLKSRC_T
Ë(
LPC_SYSCTL
->
SYSPLLCLKSEL
 & 0x3)) {

67 
SYSCTL_PLLCLKSRC_IRC
:

68 
˛kR©e
 = 
	`Chù_Clock_GëI¡OscR©e
();

71 
SYSCTL_PLLCLKSRC_MAINOSC
:

72 
˛kR©e
 = 
	`Chù_Clock_GëMaöOscR©e
();

75 
SYSCTL_PLLCLKSRC_RTC32K
:

76 
˛kR©e
 = 
	`Chù_Clock_GëRTCOscR©e
();

80 
˛kR©e
 = 0;

83  
˛kR©e
;

84 
	}
}

88 
uöt32_t
 
	$Chù_Clock_GëMaöClockR©e
()

90 
uöt32_t
 
˛kR©e
 = 0;

92 (
CHIP_SYSCTL_MAINCLKSRC_T
Ë(
LPC_SYSCTL
->
MAINCLKSEL
 & 0x3)) {

93 
SYSCTL_MAINCLKSRC_IRC
:

94 
˛kR©e
 = 
	`Chù_Clock_GëI¡OscR©e
();

97 
SYSCTL_MAINCLKSRC_PLLIN
:

98 
˛kR©e
 = 
	`Chù_Clock_GëSy°emPLLInClockR©e
();

101 
SYSCTL_MAINCLKSRC_WDTOSC
:

102 
˛kR©e
 = 
	`Chù_Clock_GëWDTOSCR©e
();

105 
SYSCTL_MAINCLKSRC_PLLOUT
:

106 
˛kR©e
 = 
	`Chù_Clock_GëSy°emPLLOutClockR©e
();

110  
˛kR©e
;

111 
	}
}

114 
uöt32_t
 
	$Chù_Clock_GëSy°emClockR©e
()

117  
	`Chù_Clock_GëMaöClockR©e
(Ë/ 
LPC_SYSCTL
->
SYSAHBCLKDIV
;

118 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\dma_11u6x.c

33 
	~"dma_11u6x.h
"

35 
	#Ál£
 0

	)

36 
	#åue
 1

	)

46 #ifde‡
__˝lu•lus


53 #i‡
deföed
(
__CC_ARM
)

55 
	$__Æign
(256Ë
DMA_CHDESC_T
 
Chù_DMA_TabÀ
[
MAX_DMA_CHANNEL
];

59 #i‡
	`deföed
(
__ICCARM__
)

61 #¥agm®
d©a_Æignmít
=256

62 
DMA_CHDESC_T
 
Chù_DMA_TabÀ
[
MAX_DMA_CHANNEL
];

65 #i‡
	`deföed
–
__GNUC__
 )

67 
DMA_CHDESC_T
 
Chù_DMA_TabÀ
[
MAX_DMA_CHANNEL
] 
	`__©åibuã__
 ((
	`Æig√d
(256)));

70 #ifde‡
__˝lu•lus


71 
	}
}

83 
Chù_DMA_SëTønBôs
(
LPC_DMA_T
 *
pDMA
, 
DMA_CHID_T
 
ch
, 
uöt32_t
 
mask
)

85 
uöt32_t
 
	gãmp
;

89 
	gãmp
 = 
pDMA
->
DMACH
[
ch
].
XFERCFG
 & ~0xFC000CC0;

91 
	gpDMA
->
	gDMACH
[
ch
].
	gXFERCFG
 = 
ãmp
 | 
mask
;

95 
Chù_DMA_CÀ¨TønBôs
(
LPC_DMA_T
 *
pDMA
, 
DMA_CHID_T
 
ch
, 
uöt32_t
 
mask
)

97 
uöt32_t
 
	gãmp
;

101 
	gãmp
 = 
pDMA
->
DMACH
[
ch
].
XFERCFG
 & ~0xFC000CC0;

103 
	gpDMA
->
	gDMACH
[
ch
].
	gXFERCFG
 = 
ãmp
 & ~
mask
;

107 
Chù_DMA_SëupCh™√lTøns„rSize
(
LPC_DMA_T
 *
pDMA
, 
DMA_CHID_T
 
ch
, 
uöt32_t
 
å™s
)

109 
Chù_DMA_CÀ¨TønBôs
(
pDMA
, 
ch
, (0x3FF << 16));

110 
Chù_DMA_SëTønBôs
(
pDMA
, 
ch
, 
DMA_XFERCFG_XFERCOUNT
(
å™s
));

114 
boﬁ
 
Chù_DMA_SëupTønCh™√l
(
LPC_DMA_T
 *
pDMA
, 
DMA_CHID_T
 
ch
, 
DMA_CHDESC_T
 *
desc
)

116 
boﬁ
 
	ggood
 = 
Ál£
;

117 
DMA_CHDESC_T
 *
	gpDesc
 = (DMA_CHDESC_T *Ë
pDMA
->
SRAMBASE
;

119 i‡((
Chù_DMA_GëA˘iveCh™√ls
(
pDMA
Ë& (1 << 
	gch
)) == 0) {

121 
pDesc
[
ch
] = *
desc
;

123 
	ggood
 = 
åue
;

126  
	ggood
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\dma_11u6x.h

32 #i‚de‡
__DMA_11U6X_H_


33 
	#__DMA_11U6X_H_


	)

35 
	~"Õc_ty≥s.h
"

36 
	~"˛ock_11u6x.h
"

38 #ifde‡
__˝lu•lus


51 
__IO
 
uöt32_t
 
ENABLESET
;

52 
__I
 
uöt32_t
 
RESERVED0
;

53 
__O
 
uöt32_t
 
ENABLECLR
;

54 
__I
 
uöt32_t
 
RESERVED1
;

55 
__I
 
uöt32_t
 
ACTIVE
;

56 
__I
 
uöt32_t
 
RESERVED2
;

57 
__I
 
uöt32_t
 
BUSY
;

58 
__I
 
uöt32_t
 
RESERVED3
;

59 
__IO
 
uöt32_t
 
ERRINT
;

60 
__I
 
uöt32_t
 
RESERVED4
;

61 
__IO
 
uöt32_t
 
INTENSET
;

62 
__I
 
uöt32_t
 
RESERVED5
;

63 
__O
 
uöt32_t
 
INTENCLR
;

64 
__I
 
uöt32_t
 
RESERVED6
;

65 
__IO
 
uöt32_t
 
INTA
;

66 
__I
 
uöt32_t
 
RESERVED7
;

67 
__IO
 
uöt32_t
 
INTB
;

68 
__I
 
uöt32_t
 
RESERVED8
;

69 
__O
 
uöt32_t
 
SETVALID
;

70 
__I
 
uöt32_t
 
RESERVED9
;

71 
__O
 
uöt32_t
 
SETTRIG
;

72 
__I
 
uöt32_t
 
RESERVED10
;

73 
__O
 
uöt32_t
 
ABORT
;

74 } 
	tLPC_DMA_COMMON_T
;

80 
__IO
 
uöt32_t
 
CFG
;

81 
__I
 
uöt32_t
 
CTLSTAT
;

82 
__IO
 
uöt32_t
 
XFERCFG
;

83 
__I
 
uöt32_t
 
RESERVED
;

84 } 
	tLPC_DMA_CHANNEL_T
;

87 
	#DMA_CH15
 15

	)

90 
	#MAX_DMA_CHANNEL
 (
DMA_CH15
 + 1)

	)

96 
__IO
 
uöt32_t
 
CTRL
;

97 
__I
 
uöt32_t
 
INTSTAT
;

98 
__IO
 
uöt32_t
 
SRAMBASE
;

99 
__I
 
uöt32_t
 
RESERVED2
[5];

100 
LPC_DMA_COMMON_T
 
DMACOMMON
[1];

101 
__I
 
uöt32_t
 
RESERVED0
[225];

102 
LPC_DMA_CHANNEL_T
 
DMACH
[
MAX_DMA_CHANNEL
];

103 } 
	tLPC_DMA_T
;

114 
STATIC
 
INLINE
 
Chù_DMA_Inô
(
LPC_DMA_T
 *
pDMA
)

116 (Ë
pDMA
;

117 
Chù_Clock_E«bÀPîùhClock
(
SYSCTL_CLOCK_DMA
);

125 
STATIC
 
INLINE
 
Chù_DMA_DeInô
(
LPC_DMA_T
 *
pDMA
)

127 (Ë
pDMA
;

128 
Chù_Clock_DißbÀPîùhClock
(
SYSCTL_CLOCK_DMA
);

136 
STATIC
 
INLINE
 
Chù_DMA_E«bÀ
(
LPC_DMA_T
 *
pDMA
)

138 
pDMA
->
CTRL
 = 1;

146 
STATIC
 
INLINE
 
Chù_DMA_DißbÀ
(
LPC_DMA_T
 *
pDMA
)

148 
pDMA
->
CTRL
 = 0;

152 
	#DMA_INTSTAT_ACTIVEINT
 0x2

	)

153 
	#DMA_INTSTAT_ACTIVEERRINT
 0x4

	)

163 
STATIC
 
INLINE
 
uöt32_t
 
Chù_DMA_GëI¡Sètus
(
LPC_DMA_T
 *
pDMA
)

165  
pDMA
->
INTSTAT
;

172 
DMA_CHDESC_T
 
Chù_DMA_TabÀ
[
MAX_DMA_CHANNEL
];

186 
STATIC
 
INLINE
 
Chù_DMA_SëSRAMBa£
(
LPC_DMA_T
 *
pDMA
, 
uöt32_t
 
ba£
)

188 
	gpDMA
->
	gSRAMBASE
 = 
ba£
;

196 
STATIC
 
INLINE
 
uöt32_t
 
Chù_DMA_GëSRAMBa£
(
LPC_DMA_T
 *
pDMA
)

198  
	gpDMA
->
	gSRAMBASE
;

215 
STATIC
 
INLINE
 
Chù_DMA_E«bÀCh™√l
(
LPC_DMA_T
 *
pDMA
, 
DMA_CHID_T
 
ch
)

217 
	gpDMA
->
	gDMACOMMON
[0].
	gENABLESET
 = (1 << 
ch
);

226 
STATIC
 
INLINE
 
Chù_DMA_DißbÀCh™√l
(
LPC_DMA_T
 *
pDMA
, 
DMA_CHID_T
 
ch
)

228 
	gpDMA
->
	gDMACOMMON
[0].
	gENABLECLR
 = (1 << 
ch
);

239 
STATIC
 
INLINE
 
uöt32_t
 
Chù_DMA_GëE«bÀdCh™√ls
(
LPC_DMA_T
 *
pDMA
)

241  
	gpDMA
->
	gDMACOMMON
[0].
	gENABLESET
;

254 
STATIC
 
INLINE
 
uöt32_t
 
Chù_DMA_GëA˘iveCh™√ls
(
LPC_DMA_T
 *
pDMA
)

256  
	gpDMA
->
	gDMACOMMON
[0].
	gACTIVE
;

270 
STATIC
 
INLINE
 
uöt32_t
 
Chù_DMA_GëBusyCh™√ls
(
LPC_DMA_T
 *
pDMA
)

272  
	gpDMA
->
	gDMACOMMON
[0].
	gBUSY
;

284 
STATIC
 
INLINE
 
uöt32_t
 
Chù_DMA_GëEº‹I¡Ch™√ls
(
LPC_DMA_T
 *
pDMA
)

286  
	gpDMA
->
	gDMACOMMON
[0].
	gERRINT
;

295 
STATIC
 
INLINE
 
Chù_DMA_CÀ¨Eº‹I¡Ch™√l
(
LPC_DMA_T
 *
pDMA
, 
DMA_CHID_T
 
ch
)

297 
	gpDMA
->
	gDMACOMMON
[0].
	gERRINT
 = (1 << 
ch
);

306 
STATIC
 
INLINE
 
Chù_DMA_E«bÀI¡Ch™√l
(
LPC_DMA_T
 *
pDMA
, 
DMA_CHID_T
 
ch
)

308 
	gpDMA
->
	gDMACOMMON
[0].
	gINTENSET
 = (1 << 
ch
);

317 
STATIC
 
INLINE
 
Chù_DMA_DißbÀI¡Ch™√l
(
LPC_DMA_T
 *
pDMA
, 
DMA_CHID_T
 
ch
)

319 
	gpDMA
->
	gDMACOMMON
[0].
	gINTENCLR
 = (1 << 
ch
);

332 
STATIC
 
INLINE
 
uöt32_t
 
Chù_DMA_GëE«bÀI¡Ch™√ls
(
LPC_DMA_T
 *
pDMA
)

334  
	gpDMA
->
	gDMACOMMON
[0].
	gINTENSET
;

346 
STATIC
 
INLINE
 
uöt32_t
 
Chù_DMA_GëA˘iveI¡ACh™√ls
(
LPC_DMA_T
 *
pDMA
)

348  
	gpDMA
->
	gDMACOMMON
[0].
	gINTA
;

357 
STATIC
 
INLINE
 
Chù_DMA_CÀ¨A˘iveI¡ACh™√l
(
LPC_DMA_T
 *
pDMA
, 
DMA_CHID_T
 
ch
)

359 
	gpDMA
->
	gDMACOMMON
[0].
	gINTA
 = (1 << 
ch
);

371 
STATIC
 
INLINE
 
uöt32_t
 
Chù_DMA_GëA˘iveI¡BCh™√ls
(
LPC_DMA_T
 *
pDMA
)

373  
	gpDMA
->
	gDMACOMMON
[0].
	gINTB
;

382 
STATIC
 
INLINE
 
Chù_DMA_CÀ¨A˘iveI¡BCh™√l
(
LPC_DMA_T
 *
pDMA
, 
DMA_CHID_T
 
ch
)

384 
	gpDMA
->
	gDMACOMMON
[0].
	gINTB
 = (1 << 
ch
);

395 
STATIC
 
INLINE
 
Chù_DMA_SëVÆidCh™√l
(
LPC_DMA_T
 *
pDMA
, 
DMA_CHID_T
 
ch
)

397 
	gpDMA
->
	gDMACOMMON
[0].
	gSETVALID
 = (1 << 
ch
);

407 
STATIC
 
INLINE
 
Chù_DMA_SëTrigCh™√l
(
LPC_DMA_T
 *
pDMA
, 
DMA_CHID_T
 
ch
)

409 
	gpDMA
->
	gDMACOMMON
[0].
	gSETTRIG
 = (1 << 
ch
);

423 
STATIC
 
INLINE
 
Chù_DMA_Ab‹tCh™√l
(
LPC_DMA_T
 *
pDMA
, 
DMA_CHID_T
 
ch
)

425 
	gpDMA
->
	gDMACOMMON
[0].
	gABORT
 = (1 << 
ch
);

441 
__IO
 
uöt32_t
 
	gDMA_ITRIG_INMUX
[
MAX_DMA_CHANNEL
];

442 } 
	tLPC_DMATRIGMUX_T
;

446 
	gDMATRIG_ADC0_SEQA_IRQ
 = 0,

447 
	gDMATRIG_ADC0_SEQB_IRQ
,

448 
	gDMATRIG_CT16B0_MAT0
,

449 
	gDMATRIG_CT16B1_MAT0
,

450 
	gDMATRIG_CT32B0_MAT0
,

451 
	gDMATRIG_CT32B1_MAT0
,

452 
	gDMATRIG_PINT0
,

453 
	gDMATRIG_PINT1
,

454 
	gDMATRIG_SCT0_DMA0
,

455 
	gDMATRIG_SCT0_DMA1
,

456 
	gDMATRIG_SCT1_DMA0
,

457 
	gDMATRIG_SCT1_DMA1


458 } 
	tDMA_TRIGSRC_T
;

470 
STATIC
 
INLINE
 
Chù_DMA_SëHWTriggî
(
LPC_DMATRIGMUX_T
 *
pDMATRIG
, 
DMA_CHID_T
 
ch
, 
DMA_TRIGSRC_T
 
åig
)

472 
	gpDMATRIG
->
	gDMA_ITRIG_INMUX
[
ch
] = (
uöt32_t
Ë
åig
;

484 
	#DMA_ADDR
(
addr
Ë((
uöt32_t
Ë◊ddr))

	)

488 
	#DMA_CFG_PERIPHREQEN
 (1 << 0Ë

	)

489 
	#DMA_CFG_HWTRIGEN
 (1 << 1Ë

	)

490 
	#DMA_CFG_TRIGPOL_LOW
 (0 << 4Ë

	)

491 
	#DMA_CFG_TRIGPOL_HIGH
 (1 << 4Ë

	)

492 
	#DMA_CFG_TRIGTYPE_EDGE
 (0 << 5Ë

	)

493 
	#DMA_CFG_TRIGTYPE_LEVEL
 (1 << 5Ë

	)

494 
	#DMA_CFG_TRIGBURST_SNGL
 (0 << 6Ë

	)

495 
	#DMA_CFG_TRIGBURST_BURST
 (1 << 6Ë

	)

496 
	#DMA_CFG_BURSTPOWER_1
 (0 << 8Ë

	)

497 
	#DMA_CFG_BURSTPOWER_2
 (1 << 8Ë

	)

498 
	#DMA_CFG_BURSTPOWER_4
 (2 << 8Ë

	)

499 
	#DMA_CFG_BURSTPOWER_8
 (3 << 8Ë

	)

500 
	#DMA_CFG_BURSTPOWER_16
 (4 << 8Ë

	)

501 
	#DMA_CFG_BURSTPOWER_32
 (5 << 8Ë

	)

502 
	#DMA_CFG_BURSTPOWER_64
 (6 << 8Ë

	)

503 
	#DMA_CFG_BURSTPOWER_128
 (7 << 8Ë

	)

504 
	#DMA_CFG_BURSTPOWER_256
 (8 << 8Ë

	)

505 
	#DMA_CFG_BURSTPOWER_512
 (9 << 8Ë

	)

506 
	#DMA_CFG_BURSTPOWER_1024
 (10 << 8Ë

	)

507 
	#DMA_CFG_BURSTPOWER
(
n
Ë(“Ë<< 8Ë

	)

508 
	#DMA_CFG_SRCBURSTWRAP
 (1 << 14Ë

	)

509 
	#DMA_CFG_DSTBURSTWRAP
 (1 << 15Ë

	)

510 
	#DMA_CFG_CHPRIORITY
(
p
Ë(’Ë<< 16Ë

	)

541 
STATIC
 
INLINE
 
Chù_DMA_SëupCh™√lC⁄fig
(
LPC_DMA_T
 *
pDMA
, 
DMA_CHID_T
 
ch
, 
uöt32_t
 
cfg
)

543 
	gpDMA
->
	gDMACH
[
ch
].
	gCFG
 = 
cfg
;

547 
	#DMA_CTLSTAT_VALIDPENDING
 (1 << 0Ë

	)

548 
	#DMA_CTLSTAT_TRIG
 (1 << 2Ë

	)

556 
STATIC
 
INLINE
 
uöt32_t
 
Chù_DMA_GëCh™√lSètus
(
LPC_DMA_T
 *
pDMA
, 
DMA_CHID_T
 
ch
)

558  
	gpDMA
->
	gDMACH
[
ch
].
	gXFERCFG
;

562 
	#DMA_XFERCFG_CFGVALID
 (1 << 0Ë

	)

563 
	#DMA_XFERCFG_RELOAD
 (1 << 1Ë

	)

564 
	#DMA_XFERCFG_SWTRIG
 (1 << 2Ë

	)

565 
	#DMA_XFERCFG_CLRTRIG
 (1 << 3Ë

	)

566 
	#DMA_XFERCFG_SETINTA
 (1 << 4Ë

	)

567 
	#DMA_XFERCFG_SETINTB
 (1 << 5Ë

	)

568 
	#DMA_XFERCFG_WIDTH_8
 (0 << 8Ë

	)

569 
	#DMA_XFERCFG_WIDTH_16
 (1 << 8Ë

	)

570 
	#DMA_XFERCFG_WIDTH_32
 (2 << 8Ë

	)

571 
	#DMA_XFERCFG_SRCINC_0
 (0 << 12Ë

	)

572 
	#DMA_XFERCFG_SRCINC_1
 (1 << 12Ë

	)

573 
	#DMA_XFERCFG_SRCINC_2
 (2 << 12Ë

	)

574 
	#DMA_XFERCFG_SRCINC_4
 (3 << 12Ë

	)

575 
	#DMA_XFERCFG_DSTINC_0
 (0 << 14Ë

	)

576 
	#DMA_XFERCFG_DSTINC_1
 (1 << 14Ë

	)

577 
	#DMA_XFERCFG_DSTINC_2
 (2 << 14Ë

	)

578 
	#DMA_XFERCFG_DSTINC_4
 (3 << 14Ë

	)

579 
	#DMA_XFERCFG_XFERCOUNT
(
n
Ë(“ - 1Ë<< 16Ë

	)

598 
STATIC
 
INLINE
 
Chù_DMA_SëupCh™√lTøns„r
(
LPC_DMA_T
 *
pDMA
, 
DMA_CHID_T
 
ch
, 
uöt32_t
 
cfg
)

600 
	gpDMA
->
	gDMACH
[
ch
].
	gXFERCFG
 = 
cfg
;

612 
Chù_DMA_SëTønBôs
(
LPC_DMA_T
 *
pDMA
, 
DMA_CHID_T
 
ch
, 
uöt32_t
 
mask
);

623 
Chù_DMA_CÀ¨TønBôs
(
LPC_DMA_T
 *
pDMA
, 
DMA_CHID_T
 
ch
, 
uöt32_t
 
mask
);

632 
Chù_DMA_SëupCh™√lTøns„rSize
(
LPC_DMA_T
 *
pDMA
, 
DMA_CHID_T
 
ch
, 
uöt32_t
 
å™s
);

640 
STATIC
 
INLINE
 
Chù_DMA_SëCh™√lVÆid
(
LPC_DMA_T
 *
pDMA
, 
DMA_CHID_T
 
ch
)

642 
Chù_DMA_SëTønBôs
(
pDMA
, 
ch
, 
DMA_XFERCFG_CFGVALID
);

651 
STATIC
 
INLINE
 
Chù_DMA_SëCh™√lInVÆid
(
LPC_DMA_T
 *
pDMA
, 
DMA_CHID_T
 
ch
)

653 
Chù_DMA_CÀ¨TønBôs
(
pDMA
, 
ch
, 
DMA_XFERCFG_CFGVALID
);

662 
STATIC
 
INLINE
 
Chù_DMA_SWTriggîCh™√l
(
LPC_DMA_T
 *
pDMA
, 
DMA_CHID_T
 
ch
)

664 
Chù_DMA_SëTønBôs
(
pDMA
, 
ch
, 
DMA_XFERCFG_SWTRIG
);

683 
boﬁ
 
Chù_DMA_SëupTønCh™√l
(
LPC_DMA_T
 *
pDMA
, 
DMA_CHID_T
 
ch
, 
DMA_CHDESC_T
 *
desc
);

693 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\iap.cpp

1 
	~<°dio.h
>

2 
	~<°döt.h
>

3 
	~<üp.h
>

4 
	~"LPC11U6x.h
"

5 
	~"PokôtoDisk.h
"

7 
	#TICKRATE_HZ
 (10Ë

	)

9 vﬁ©ûê
uöt32_t
 
	gsysTick
;

12 
	#IAP_LOCATION
 0x1fff1ff1

	)

14 
	#œ°_£˘‹_Êash
 0x00038000

15 
	#IAP_LAST_SECTOR
 28

	)

16 
	#IAP_NUM_BYTES_TO_WRITE
 256

	)

17 
	#WRITECOUNT
 (
IAP_NUM_BYTES_TO_WRITE
 / 4Ë

	)

19 
	#IAP_PREWRRITE_CMD
 50

	)

20 
	#IAP_WRISECTOR_CMD
 51

	)

21 
	#IAP_ERSSECTOR_CMD
 52

	)

22 
	#IAP_REPID_CMD
 54

	)

25 
	gcomm™d
[5], 
	gªsu…
[4];

28 (*
	tIAP
)([], []);

29 
IAP
 
üp_íåy
 = (IAPË
IAP_LOCATION
;

31 
	$C›yPageToFœsh
 (
uöt32_t
 
addªss
, 
uöt8_t
* 
d©a
) {

32 
IAP
 
üp_ˇŒ
 = (IAPË
IAP_LOCATION
;

33 
uöt32_t
 
wrôecou¡
=0;

34 
	`__dißbÀ_úq
();

36 
£˘‹
, 
∑ge
;

37 
boﬁ
 
fú°∑ge
=
Ál£
, 
îa£∑ge
=false;

43 i‡(
addªss
 < 0x18000Ë
£˘‹
 =áddress/0x1000;

44 i‡(
addªss
 >0x38000Ë
£˘‹
 = 28;

45 i‡(
addªss
 >0x30000Ë
£˘‹
 = 27;

46 i‡(
addªss
 >0x28000Ë
£˘‹
 = 26;

47 i‡(
addªss
 >0x20000Ë
£˘‹
 = 25;

48 
£˘‹
 = 24;

51 i‡(
£˘‹
 < 24) {

53 
fú°∑ge
 = ((
addªss
 & 0x0FFF) == 0);

56 
fú°∑ge
 = ((
addªss
 & 0x7FFF) == 0);

60 
comm™d
[0] = 
IAP_PREWRRITE_CMD
;

61 
comm™d
[1] = 
£˘‹
;

62 
comm™d
[2] = 
£˘‹
;

63 
	`üp_ˇŒ
(
comm™d
, 
ªsu…
);

64 i‡(
ªsu…
[0])  1;

67 i‡(
addªss
==0x39000) {

68 
îa£∑ge
=
åue
;

72 i‡(
fú°∑ge
) {

74 
comm™d
[0] = 
IAP_ERSSECTOR_CMD
;

75 
comm™d
[1] = 
£˘‹
;

76 
comm™d
[2] = 
£˘‹
;

77 
comm™d
[3] = 
Sy°emC‹eClock
 / 1000UL;

78 
	`üp_ˇŒ
(
comm™d
, 
ªsu…
);

79 i‡(
ªsu…
[0])  1;

81 
comm™d
[0] = 
IAP_PREWRRITE_CMD
;

82 
comm™d
[1] = 
£˘‹
;

83 
comm™d
[2] = 
£˘‹
;

84 
	`üp_ˇŒ
(
comm™d
, 
ªsu…
);

85 i‡(
ªsu…
[0])  1;

89 i‡(
îa£∑ge
) {

90 
comm™d
[0] = 59;

91 
comm™d
[1] = 896;

92 
comm™d
[2] = 1023;

93 
comm™d
[3] = 
Sy°emC‹eClock
 / 1000UL;

94 
	`üp_ˇŒ
(
comm™d
, 
ªsu…
);

95 i‡(
ªsu…
[0])  1;

97 
comm™d
[0] = 
IAP_PREWRRITE_CMD
;

98 
comm™d
[1] = 
£˘‹
;

99 
comm™d
[2] = 
£˘‹
;

100 
	`üp_ˇŒ
(
comm™d
, 
ªsu…
);

101 i‡(
ªsu…
[0])  1;

105 
comm™d
[0] = 
IAP_WRISECTOR_CMD
;

106 
comm™d
[1] = (
uöt32_t
Ë(uöt32_t*Ë
addªss
;

107 
comm™d
[2] = (
uöt32_t
Ë
d©a
;

108 
comm™d
[3] = 0x100;

109 
comm™d
[4] = 
Sy°emC‹eClock
 / 1000;

110 
	`üp_ˇŒ
(
comm™d
, 
ªsu…
);

111 i‡(
ªsu…
[0])  1;

114 
	`__íabÀ_úq
();

118 
	}
}

120 
__©åibuã__
((
£˘i⁄
(".IAP_Code"))Ë
	$HñloFromIAP
() {

121 
uöt32_t
 
¨øy_d©a
[
WRITECOUNT
];

122 
i
;

124 
i
 = 0; i < 
WRITECOUNT
; i++) {

125 
¨øy_d©a
[
i
] = 0xB007AB1E;

128 
IAP
 
üp_ˇŒ
 = (IAPË
IAP_LOCATION
;

129 
uöt8_t
 
ãahupoo
;

131 
ãahupoo
++;

135 
	`pokInôSD
();

136 
‚
[20];

137 * 
now
;

138 
now
 = (*)
œ°_£˘‹_Êash
;

139 
now
[0]) {

141 
‚
[0]='B';fn[1]='B';fn[2]='.';fn[3]='B';fn[4]='I';fn[5]='N';fn[6]='\0';;

143 
‚
[0]='C';fn[1]='C';fn[2]='.';fn[3]='B';fn[4]='I';fn[5]='N';fn[6]='\0';;

145 
‚
[0]='A';fn[1]='A';fn[2]='.';fn[3]='B';fn[4]='I';fn[5]='N';fn[6]='\0';

147 if(
	`fûeO≥n
(
‚
,
FILE_MODE_BINARY
)) {

150 
i
 = 0; i < 
WRITECOUNT
; i++) {

151 
	`fûeRódByãs
((
uöt8_t
*)&
¨øy_d©a
[
i
],4);

158 
comm™d
[0] = 
IAP_REPID_CMD
;

159 
	`üp_ˇŒ
(
comm™d
, 
ªsu…
);

161 
	`__dißbÀ_úq
();

164 
comm™d
[0] = 
IAP_PREWRRITE_CMD
;

165 
comm™d
[1] = 
IAP_LAST_SECTOR
;

166 
comm™d
[2] = 
IAP_LAST_SECTOR
;

167 
	`üp_ˇŒ
(
comm™d
, 
ªsu…
);

169 
comm™d
[0] = 
IAP_ERSSECTOR_CMD
;

170 
comm™d
[1] = 
IAP_LAST_SECTOR
;

171 
comm™d
[2] = 
IAP_LAST_SECTOR
;

172 
comm™d
[3] = 
Sy°emC‹eClock
 / 1000UL;

173 
	`üp_ˇŒ
(
comm™d
, 
ªsu…
);

175 
comm™d
[0] = 
IAP_PREWRRITE_CMD
;

176 
comm™d
[1] = 
IAP_LAST_SECTOR
;

177 
comm™d
[2] = 
IAP_LAST_SECTOR
;

178 
	`üp_ˇŒ
(
comm™d
, 
ªsu…
);

180 
comm™d
[0] = 
IAP_WRISECTOR_CMD
;

181 
comm™d
[1] = (
uöt32_t
Ë
œ°_£˘‹_Êash
;

182 
comm™d
[2] = (
uöt32_t
Ë&
¨øy_d©a
;

183 
comm™d
[3] = 
IAP_NUM_BYTES_TO_WRITE
;

184 
comm™d
[4] = 
Sy°emC‹eClock
 / 1000;

185 
	`üp_ˇŒ
(
comm™d
, 
ªsu…
);

188 
	`__íabÀ_úq
();

191 
SCB
->
AIRCR
 = 0x05FA0004;

193  
ãahupoo
;

194 
	}
}

199 
	$IAP°ackßve
()

202 
	#RAM1_0
 (*((vﬁ©ûê*Ë0x20000000))

	)

203 
	#RAM1_1
 (*((vﬁ©ûê*Ë0x20000004))

	)

204 
	#RAM1_2
 (*((vﬁ©ûê*Ë0x20000008))

	)

205 
	#RAM1_3
 (*((vﬁ©ûê*Ë0x2000000C))

	)

206 
	#RAM1_4
 (*((vﬁ©ûê*Ë0x20000010))

	)

207 
	#RAM1_5
 (*((vﬁ©ûê*Ë0x20000014))

	)

208 
	#RAM1_6
 (*((vﬁ©ûê*Ë0x20000018))

	)

209 
	#RAM1_7
 (*((vﬁ©ûê*Ë0x2000001C))

	)

211 
uöt32_t
 *
ßvñoc
 = (uint32_t*)(0x10002000-0x20);

212 
RAM1_0
 = *
ßvñoc
++;

213 
RAM1_1
 = *
ßvñoc
++;

214 
RAM1_2
 = *
ßvñoc
++;

215 
RAM1_3
 = *
ßvñoc
++;

216 
RAM1_4
 = *
ßvñoc
++;

217 
RAM1_5
 = *
ßvñoc
++;

218 
RAM1_6
 = *
ßvñoc
++;

219 
RAM1_7
 = *
ßvñoc
;

220 
	}
}

223 
	$ü±e°
() {

224 
uöt32_t
 
¨øy_d©a
[
WRITECOUNT
];

225 
i
;

227 
i
 = 0; i < 
WRITECOUNT
; i++) {

228 
¨øy_d©a
[
i
] = 0x11223340 + i;

232 
comm™d
[0] = 
IAP_REPID_CMD
;

233 
	`üp_íåy
(
comm™d
, 
ªsu…
);

236 
	`__dißbÀ_úq
();

238 
comm™d
[0] = 
IAP_REPID_CMD
;

239 
	`üp_íåy
(
comm™d
, 
ªsu…
);

242 
comm™d
[0] = 
IAP_PREWRRITE_CMD
;

243 
comm™d
[1] = 
IAP_LAST_SECTOR
;

244 
comm™d
[2] = 
IAP_LAST_SECTOR
;

245 
	`üp_íåy
(
comm™d
, 
ªsu…
);

248 
comm™d
[0] = 
IAP_ERSSECTOR_CMD
;

249 
comm™d
[1] = 
IAP_LAST_SECTOR
;

250 
comm™d
[2] = 
IAP_LAST_SECTOR
;

251 
	`üp_íåy
(
comm™d
, 
ªsu…
);

254 
comm™d
[0] = 
IAP_PREWRRITE_CMD
;

255 
comm™d
[1] = 
IAP_LAST_SECTOR
;

256 
comm™d
[2] = 
IAP_LAST_SECTOR
;

257 
	`üp_íåy
(
comm™d
, 
ªsu…
);

260 
comm™d
[0] = 
IAP_WRISECTOR_CMD
;

261 
comm™d
[1] = (
uöt32_t
Ë
œ°_£˘‹_Êash
;

262 
comm™d
[2] = (
uöt32_t
Ë&
¨øy_d©a
;

263 
comm™d
[3] = 
IAP_NUM_BYTES_TO_WRITE
;

264 
comm™d
[4] = 
Sy°emC‹eClock
 / 1000;

265 
	`üp_íåy
(
comm™d
, 
ªsu…
);

268 
	`__íabÀ_úq
();

276 
	}
}

288 
__©åibuã__
((
£˘i⁄
(".IAP_Code"))Ë
	$wrôeEEPROM
–
uöt16_t
* 
ìAddªss
, 
uöt8_t
* 
buffAddªss
, 
uöt32_t
 
byãCou¡
 )

290 
comm™d
[5], 
ªsu…
[4];

292 
comm™d
[0] = 61;

293 
comm™d
[1] = (
uöt32_t
Ë
ìAddªss
;

294 
comm™d
[2] = (
uöt32_t
Ë
buffAddªss
;

295 
comm™d
[3] = 
byãCou¡
;

296 
comm™d
[4] = 
Sy°emC‹eClock
/1000;

299 #i‡(
EEPROM_PROFILE
!=0)

300 
LPC_CT32B0
->
TCR
 = 1;

301 
	`__dißbÀ_úq
();

302 
	`üp_íåy
(
comm™d
, 
ªsu…
);

303 
	`__íabÀ_úq
();

304 
LPC_CT32B0
->
TCR
 = 0;

306 
	`__dißbÀ_úq
();

307 
	`üp_íåy
(
comm™d
, 
ªsu…
);

308 
	`__íabÀ_úq
();

310 i‡(0 !
ªsu…
[0])

316 
	}
}

326 
__©åibuã__
((
£˘i⁄
(".IAP_Code"))Ë
	$ªadEEPROM
–
uöt16_t
* 
ìAddªss
, 
uöt8_t
* 
buffAddªss
, 
uöt32_t
 
byãCou¡
 )

328 
comm™d
[5], 
ªsu…
[4];

330 
comm™d
[0] = 62;

331 
comm™d
[1] = (
uöt32_t
Ë
ìAddªss
;

332 
comm™d
[2] = (
uöt32_t
Ë
buffAddªss
;

333 
comm™d
[3] = 
byãCou¡
;

334 
comm™d
[4] = 
Sy°emC‹eClock
/1000;

337 
	`__dißbÀ_úq
();

338 
	`üp_íåy
–
comm™d
, 
ªsu…
);

339 
	`__íabÀ_úq
();

340 i‡(0 !
ªsu…
[0])

346 
	}
}

348 
__©åibuã__
((
£˘i⁄
(".IAP_Code"))Ë
	$IAPªadP¨tId
–
uöt8_t
* 
ìAddªss
, uöt8_t* 
buffAddªss
, 
uöt32_t
 
byãCou¡
 )

350 
comm™d
[5], 
ªsu…
[4];

352 
comm™d
[0] = 62;

353 
comm™d
[1] = (
uöt32_t
Ë
ìAddªss
;

354 
comm™d
[2] = (
uöt32_t
Ë
buffAddªss
;

355 
comm™d
[3] = 
byãCou¡
;

356 
comm™d
[4] = 
Sy°emC‹eClock
/1000;

359 
	`__dißbÀ_úq
();

360 
	`üp_íåy
–
comm™d
, 
ªsu…
);

361 
	`__íabÀ_úq
();

362 i‡(0 !
ªsu…
[0])

368 
	}
}

370 
uöt8_t
 
	$ì¥om_ªad_byã
(
uöt16_t
* 
ödex
) {

371 
uöt8_t
 
vÆ
;

372 
	`ªadEEPROM
(
ödex
,&
vÆ
,1);

373  
vÆ
;

374 
	}
}

376 
	$ì¥om_wrôe_byã
(
uöt16_t
* 
ödex
 , 
uöt8_t
 
vÆ
) {

377 
	`wrôeEEPROM
(
ödex
,&
vÆ
,1);

378 
	}
}

405 
	#IAP_CMD_PREPARE_SECTORS
 50

	)

406 
	#IAP_CMD_COPY_RAM_TO_FLASH
 51

	)

407 
	#IAP_CMD_ERASE_SECTORS
 52

	)

408 
	#IAP_CMD_BLANK_CHECK_SECTORS
 53

	)

409 
	#IAP_CMD_READ_PART_ID
 54

	)

410 
	#IAP_CMD_READ_BOOT_ROM_VERSION
 55

	)

411 
	#IAP_CMD_COMPARE
 56

	)

412 
	#IAP_CMD_REINVOKE_ISP
 57

	)

413 
	#IAP_CMD_READ_UID
 58

	)

415 
	#IAP_CMD_ERASE_PAGE
 59

416 

	)

418 
	#IAP_ROM_LOCATION
 0x1FFF1FF1UL

	)

421 
__©åibuã__
((
£˘i⁄
(".IAP_Code"))Ë
	$IAP_EXECUTE_CMD
(
uöt32_t
* 
a
, uöt32_t* 
b
) {

422 (*
u£r_code_íåy
)(
uöt32_t
*,uint32_t*);

423 
uöt32_t
 *
p
;

424 
p
 = (
uöt32_t
 *)
IAP_ROM_LOCATION
;

425 
u£r_code_íåy
 = ((*)(
uöt32_t
*,uöt32_t*))(*
p
);

426 
	`u£r_code_íåy
(
a
, 
b
);

427 
	}
}

443 
__©åibuã__
((
£˘i⁄
(".IAP_Code"))Ë
uöt32_t
 
	$u32IAP_Pª∑ªSe˘‹s
(
uöt32_t
 
u32SèπSe˘‹
, uöt32_à
u32EndSe˘‹
)

445 
uöt32_t
 
u32Sètus
;

446 
uöt32_t
 
au32Resu…
[3];

447 
uöt32_t
 
au32Comm™d
[5];

449 i‡(
u32EndSe˘‹
 < 
u32SèπSe˘‹
)

451 
u32Sètus
 = 
IAP_STA_INVALD_PARAM
;

455 
au32Comm™d
[0] = 
IAP_CMD_PREPARE_SECTORS
;

456 
au32Comm™d
[1] = 
u32SèπSe˘‹
;

457 
au32Comm™d
[2] = 
u32EndSe˘‹
;

458 
	`__dißbÀ_úq
();

459 
	`IAP_EXECUTE_CMD
(
au32Comm™d
, 
au32Resu…
);

460 
	`__íabÀ_úq
();

461 
u32Sètus
 = 
au32Resu…
[0];

463  
u32Sètus
;

464 
	}
}

480 
__©åibuã__
((
£˘i⁄
(".IAP_Code"))Ë
uöt32_t
 
	$u32IAP_C›yRAMToFœsh
(
uöt32_t
 
u32D°Addr
, uöt32_à
u32SrcAddr
, uöt32_à
u32Lí
)

482 
uöt32_t
 
au32Resu…
[3];

483 
uöt32_t
 
au32Comm™d
[5];

485 
au32Comm™d
[0] = 
IAP_CMD_COPY_RAM_TO_FLASH
;

486 
au32Comm™d
[1] = 
u32D°Addr
;

487 
au32Comm™d
[2] = 
u32SrcAddr
;

488 
au32Comm™d
[3] = 
u32Lí
;

489 
au32Comm™d
[4] = 
Sy°emC‹eClock
 / 1000UL;

491 
	`IAP_EXECUTE_CMD
(
au32Comm™d
, 
au32Resu…
);

493  
au32Resu…
[0];

494 
	}
}

507 
__©åibuã__
((
£˘i⁄
(".IAP_Code"))Ë
uöt32_t
 
	$u32IAP_Eø£Se˘‹s
(
uöt32_t
 
u32SèπSe˘‹
, uöt32_à
u32EndSe˘‹
)

509 
uöt32_t
 
u32Sètus
;

510 
uöt32_t
 
au32Resu…
[3];

511 
uöt32_t
 
au32Comm™d
[5];

513 i‡(
u32EndSe˘‹
 < 
u32SèπSe˘‹
)

515 
u32Sètus
 = 
IAP_STA_INVALD_PARAM
;

519 
au32Comm™d
[0] = 
IAP_CMD_ERASE_SECTORS
;

520 
au32Comm™d
[1] = 
u32SèπSe˘‹
;

521 
au32Comm™d
[2] = 
u32EndSe˘‹
;

522 
au32Comm™d
[3] = 
Sy°emC‹eClock
 / 1000UL;

524 
	`IAP_EXECUTE_CMD
(
au32Comm™d
, 
au32Resu…
);

526 
u32Sètus
 = 
au32Resu…
[0];

528  
u32Sètus
;

529 
	}
}

546 
__©åibuã__
((
£˘i⁄
(".IAP_Code"))Ë
uöt32_t
 
	$u32IAP_BœnkCheckSe˘‹s
(
uöt32_t
 
u32SèπSe˘‹
, uöt32_à
u32EndSe˘‹
, uöt32_à*
pu32Resu…
)

548 
uöt32_t
 
u32Sètus
;

549 
uöt32_t
 
au32Resu…
[3];

550 
uöt32_t
 
au32Comm™d
[5];

552 i‡(
u32EndSe˘‹
 < 
u32SèπSe˘‹
)

554 
u32Sètus
 = 
IAP_STA_INVALD_PARAM
;

558 
au32Comm™d
[0] = 
IAP_CMD_BLANK_CHECK_SECTORS
;

559 
au32Comm™d
[1] = 
u32SèπSe˘‹
;

560 
au32Comm™d
[2] = 
u32EndSe˘‹
;

562 
	`IAP_EXECUTE_CMD
(
au32Comm™d
, 
au32Resu…
);

564 i‡(
au32Resu…
[0] =
IAP_STA_SECTOR_NOT_BLANK
)

566 *
pu32Resu…
 = 
au32Resu…
[0];

567 *(
pu32Resu…
 + 1Ë
au32Resu…
[1];

569 
u32Sètus
 = 
au32Resu…
[0];

571  
u32Sètus
;

572 
	}
}

584 
__©åibuã__
((
£˘i⁄
(".IAP_Code"))Ë
uöt32_t
 
	$u32IAP_RódP¨tID
(
uöt32_t
 *
pu32P¨tID
)

586 
uöt32_t
 
au32Resu…
[3];

587 
uöt32_t
 
au32Comm™d
[5];

589 
au32Comm™d
[0] = 
IAP_CMD_READ_PART_ID
;

590 
	`__dißbÀ_úq
();

591 
	`IAP_EXECUTE_CMD
(
au32Comm™d
, 
au32Resu…
);

592 
	`__íabÀ_úq
();

593 *
pu32P¨tID
 = 
au32Resu…
[1];

595  
au32Resu…
[0];

596 
	}
}

609 
__©åibuã__
((
£˘i⁄
(".IAP_Code"))Ë
uöt32_t
 
	$u32IAP_RódBoŸVîsi⁄
(
uöt32_t
 *
pu32Maj‹
, uöt32_à*
pu32Mö‹
)

612 
uöt32_t
 
au32Resu…
[3];

613 
uöt32_t
 
au32Comm™d
[5];

615 
au32Comm™d
[0] = 
IAP_CMD_READ_BOOT_ROM_VERSION
;

617 
	`IAP_EXECUTE_CMD
(
au32Comm™d
, 
au32Resu…
);

620 *
pu32Maj‹
 = (
au32Resu…
[1] & 0x0000FF00UL) >> 8;

621 *
pu32Mö‹
 = 
au32Resu…
[1] & 0x000000FFUL;

623  
au32Resu…
[0];

624 
	}
}

637 
__©åibuã__
((
£˘i⁄
(".IAP_Code"))Ë
uöt32_t
 
	$u32IAP_Com∑ª
(
uöt32_t
 
u32D°Addr
, uöt32_à
u32SrcAddr
, uöt32_à
u32Lí
, uöt32_à*
pu32Off£t
)

639 
uöt32_t
 
au32Resu…
[3];

640 
uöt32_t
 
au32Comm™d
[5];

642 
au32Comm™d
[0] = 
IAP_CMD_COMPARE
;

643 
au32Comm™d
[1] = 
u32D°Addr
;

644 
au32Comm™d
[2] = 
u32SrcAddr
;

645 
au32Comm™d
[3] = 
u32Lí
;

647 
	`IAP_EXECUTE_CMD
(
au32Comm™d
, 
au32Resu…
);

649 i‡(
au32Resu…
[0] =
IAP_STA_COMPARE_ERROR
)

651 i‡(
pu32Off£t
 != 0)

653 *
pu32Off£t
 = 
au32Resu…
[1];

656  
au32Resu…
[0];

657 
	}
}

669 
__©åibuã__
((
£˘i⁄
(".IAP_Code"))Ë
	$vIAP_ReövokeISP
()

671 
uöt32_t
 
au32Resu…
[3];

672 
uöt32_t
 
au32Comm™d
[5];

674 
au32Comm™d
[0] = 
IAP_CMD_REINVOKE_ISP
;

676 
	`IAP_EXECUTE_CMD
(
au32Comm™d
, 
au32Resu…
);

677 
	}
}

680 
__©åibuã__
((
£˘i⁄
(".IAP_Code"))Ë
uöt32_t
 
	$u32IAP_RódUID
(
uöt32_t
 * 
pu32UID
)

682 
uöt32_t
 
au32Resu…
[5];

683 
uöt32_t
 
au32Comm™d
[5];

685 
au32Comm™d
[0] = 
IAP_CMD_READ_UID
;

687 
	`IAP_EXECUTE_CMD
(
au32Comm™d
, 
au32Resu…
);

693 *
pu32UID
 = 
au32Resu…
[1];

694 *
pu32UID
++ = 
au32Resu…
[2];

695 *
pu32UID
++ = 
au32Resu…
[3];

696 *
pu32UID
++ = 
au32Resu…
[4];

698  
au32Resu…
[0];

700 
	}
}

703 
__©åibuã__
((
£˘i⁄
(".IAP_Code"))Ë
uöt32_t
 
	$u32IAP_Eø£Page
(
uöt32_t
 
u32SèπPage
, uöt32_à
u32EndPage
)

705 
uöt32_t
 
u32Sètus
;

706 
uöt32_t
 
au32Resu…
[3];

707 
uöt32_t
 
au32Comm™d
[5];

709 i‡(
u32EndPage
 < 
u32SèπPage
)

711 
u32Sètus
 = 
IAP_STA_INVALD_PARAM
;

715 
au32Comm™d
[0] = 
IAP_CMD_ERASE_PAGE
;

716 
au32Comm™d
[1] = 
u32SèπPage
;

717 
au32Comm™d
[2] = 
u32EndPage
;

718 
au32Comm™d
[3] = 
Sy°emC‹eClock
 / 1000UL;

720 
	`IAP_EXECUTE_CMD
(
au32Comm™d
, 
au32Resu…
);

722 
u32Sètus
 = 
au32Resu…
[0];

724  
u32Sètus
;

725 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\iap.h

1 #i‚de‡
IAP_H_INCLUDED


2 
	#IAP_H_INCLUDED


	)

4 
	~"Pokôto_£âögs.h
"

6 
HñloFromIAP
();

7 
C›yPageToFœsh
(
uöt32_t
,
uöt8_t
*);

8 
ü±e°
();

9 
IAP°ackßve
();

10 
	#EEPROM_PROFILE
 1

	)

11 
wrôeEEPROM
–
uöt16_t
* 
ìAddªss
, 
uöt8_t
* 
buffAddªss
, 
uöt32_t
 
byãCou¡
 );

12 
ªadEEPROM
–
uöt16_t
* 
ìAddªss
, 
uöt8_t
* 
buffAddªss
, 
uöt32_t
 
byãCou¡
 );

13 
uöt8_t
 
ì¥om_ªad_byã
(
uöt16_t
*);

14 
ì¥om_wrôe_byã
(
uöt16_t
*,
uöt8_t
);

40 
	~<°döt.h
>

43 
	#IAP_STA_CMD_SUCCESS
 0

	)

44 
	#IAP_STA_INVALID_COMMAND
 1

	)

45 
	#IAP_STA_SRC_ADDR_ERROR
 2

	)

46 
	#IAP_STA_DST_ADDR_ERROR
 3

	)

47 
	#IAP_STA_SRC_ADDR_NOT_MAPPED
 4

	)

48 
	#IAP_STA_DST_ADDR_NOT_MAPPED
 5

	)

49 
	#IAP_STA_COUNT_ERROR
 6

	)

50 
	#IAP_STA_INVALID_SECTOR
 7

	)

51 
	#IAP_STA_SECTOR_NOT_BLANK
 8

	)

52 
	#IAP_STA_SECTOR_NOT_PREPARED_FOR_WRITE_OPERATION
 9

	)

53 
	#IAP_STA_COMPARE_ERROR
 10

	)

54 
	#IAP_STA_BUSY
 11

	)

55 
	#IAP_STA_INVALD_PARAM
 12

	)

58 
	#IAP_FLASH_PAGE_SIZE_BYTES
 256

	)

59 
	#IAP_FLASH_PAGE_SIZE_WORDS
 (
IAP_FLASH_PAGE_SIZE_BYTES
 >> 2)

	)

61 
vIAP_ReövokeISP
();

62 
uöt32_t
 
u32IAP_RódP¨tID
(uöt32_à*
pu32P¨tID
);

63 
uöt32_t
 
u32IAP_RódBoŸVîsi⁄
(uöt32_à*
pu32Maj‹
, uöt32_à*
pu32Mö‹
);

65 
uöt32_t
 
u32IAP_Eø£Se˘‹s
(uöt32_à
u32SèπSe˘‹
, uöt32_à
u32EndSe˘‹
);

66 
uöt32_t
 
u32IAP_Pª∑ªSe˘‹s
(uöt32_à
u32SèπSe˘‹
, uöt32_à
u32EndSe˘‹
);

67 
uöt32_t
 
u32IAP_C›yRAMToFœsh
(uöt32_à
u32D°Addr
, uöt32_à
u32SrcAddr
, uöt32_à
u32Lí
);

68 
uöt32_t
 
u32IAP_BœnkCheckSe˘‹s
(uöt32_à
u32SèπSe˘‹
, uöt32_à
u32EndSe˘‹
, uöt32_à*
pu32Resu…
);

69 
uöt32_t
 
u32IAP_Com∑ª
(uöt32_à
u32D°Addr
, uöt32_à
u32SrcAddr
, uöt32_à
u32Lí
, uöt32_à*
pu32Off£t
);

70 
uöt32_t
 
u32IAP_RódUID
(uöt32_à* 
pu32UID
);

71 
uöt32_t
 
u32IAP_Eø£Page
(uöt32_à
u32SèπPage
, uöt32_à
u32EndPage
);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\loader.h

1 #i‚de‡
MINIHI_BIN_H


2 
	#MINIHI_BIN_H


	)

5 c⁄° 
	glﬂdîh
[] 
__©åibuã__
((
©
(0x39000))) = {

2324 c⁄° 
	gboŸabÀ
[]
__©åibuã__
((
©
(0x3FE04))) = {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\lpc_defs.h

1 #i‚de‡
LPCDEFS_H


2 
	#LPCDEFS_H


	)

4 
	~<°döt.h
>

6 #ifde‡
__˝lu•lus


7 
	#__I
 vﬁ©ûê

	)

9 
	#__I
 vﬁ©ûêc⁄°

	)

11 
	#__O
 vﬁ©ûê

	)

12 
	#__IO
 vﬁ©ûê

	)

15 
	#LPC_PMU_BASE
 0x40038000

	)

16 
	#LPC_IOCON_BASE
 0x40044000

	)

17 
	#LPC_SYSCTL_BASE
 0x40048000

	)

18 
	#LPC_GPIO_PORT_BASE
 0xA0000000

	)

19 
	#LPC_GPIO_GROUP_INT0_BASE
 0x4005C000

	)

20 
	#LPC_GPIO_GROUP_INT1_BASE
 0x40060000

	)

21 
	#LPC_PIN_INT_BASE
 0xA0004000

	)

22 
	#LPC_USART0_BASE
 0x40008000

	)

23 
	#LPC_USART1_BASE
 0x4006C000

	)

24 
	#LPC_USART2_BASE
 0x40070000

	)

25 
	#LPC_USART3_BASE
 0x40074000

	)

26 
	#LPC_USART4_BASE
 0x4004C000

	)

27 
	#LPC_I2C0_BASE
 0x40000000

	)

28 
	#LPC_I2C1_BASE
 0x40020000

	)

29 
	#LPC_SSP0_BASE
 0x40040000

	)

30 
	#LPC_SSP1_BASE
 0x40058000

	)

31 
	#LPC_USB0_BASE
 0x40080000

	)

32 
	#LPC_ADC_BASE
 0x4001C000

	)

33 
	#LPC_SCT0_BASE
 0x5000C000

	)

34 
	#LPC_SCT1_BASE
 0x5000E000

	)

35 
	#LPC_TIMER16_0_BASE
 0x4000C000

	)

36 
	#LPC_TIMER16_1_BASE
 0x40010000

	)

37 
	#LPC_TIMER32_0_BASE
 0x40014000

	)

38 
	#LPC_TIMER32_1_BASE
 0x40018000

	)

39 
	#LPC_RTC_BASE
 0x40024000

	)

40 
	#LPC_WWDT_BASE
 0x40004000

	)

41 
	#LPC_DMA_BASE
 0x50004000

	)

42 
	#LPC_CRC_BASE
 0x50000000

	)

43 
	#LPC_FLASH_BASE
 0x4003C000

	)

44 
	#LPC_DMATRIGMUX_BASE
 0x40028000UL

	)

50 
__IO
 
uöt32_t
 
	mSYSMEMREMAP
;

51 
__IO
 
uöt32_t
 
	mPRESETCTRL
;

52 
__IO
 
uöt32_t
 
	mSYSPLLCTRL
;

53 
__I
 
uöt32_t
 
	mSYSPLLSTAT
;

54 
__IO
 
uöt32_t
 
	mUSBPLLCTRL
;

55 
__I
 
uöt32_t
 
	mUSBPLLSTAT
;

56 
__I
 
uöt32_t
 
	mRESERVED1
[1];

57 
__IO
 
uöt32_t
 
	mRTCOSCCTRL
;

58 
__IO
 
uöt32_t
 
	mSYSOSCCTRL
;

59 
__IO
 
uöt32_t
 
	mWDTOSCCTRL
;

60 
__I
 
uöt32_t
 
	mRESERVED2
[2];

61 
__IO
 
uöt32_t
 
	mSYSRSTSTAT
;

62 
__I
 
uöt32_t
 
	mRESERVED3
[3];

63 
__IO
 
uöt32_t
 
	mSYSPLLCLKSEL
;

64 
__IO
 
uöt32_t
 
	mSYSPLLCLKUEN
;

65 
__IO
 
uöt32_t
 
	mUSBPLLCLKSEL
;

66 
__IO
 
uöt32_t
 
	mUSBPLLCLKUEN
;

67 
__I
 
uöt32_t
 
	mRESERVED4
[8];

68 
__IO
 
uöt32_t
 
	mMAINCLKSEL
;

69 
__IO
 
uöt32_t
 
	mMAINCLKUEN
;

70 
__IO
 
uöt32_t
 
	mSYSAHBCLKDIV
;

71 
__I
 
uöt32_t
 
	mRESERVED5
;

72 
__IO
 
uöt32_t
 
	mSYSAHBCLKCTRL
;

73 
__I
 
uöt32_t
 
	mRESERVED6
[4];

74 
__IO
 
uöt32_t
 
	mSSP0CLKDIV
;

75 
__IO
 
uöt32_t
 
	mUSART0CLKDIV
;

76 
__IO
 
uöt32_t
 
	mSSP1CLKDIV
;

77 
__IO
 
uöt32_t
 
	mFRGCLKDIV
;

78 
__I
 
uöt32_t
 
	mRESERVED7
[7];

79 
__IO
 
uöt32_t
 
	mUSBCLKSEL
;

80 
__IO
 
uöt32_t
 
	mUSBCLKUEN
;

81 
__IO
 
uöt32_t
 
	mUSBCLKDIV
;

82 
__I
 
uöt32_t
 
	mRESERVED8
[5];

83 
__IO
 
uöt32_t
 
	mCLKOUTSEL
;

84 
__IO
 
uöt32_t
 
	mCLKOUTUEN
;

85 
__IO
 
uöt32_t
 
	mCLKOUTDIV
;

86 
__I
 
uöt32_t
 
	mRESERVED9
;

87 
__IO
 
uöt32_t
 
	mUARTFRGDIV
;

88 
__IO
 
uöt32_t
 
	mUARTFRGMULT
;

89 
__I
 
uöt32_t
 
	mRESERVED10
;

90 
__IO
 
uöt32_t
 
	mEXTTRACECMD
;

91 
__I
 
uöt32_t
 
	mPIOPORCAP
[3];

92 
__I
 
uöt32_t
 
	mRESERVED11
[10];

93 
__IO
 
uöt32_t
 
	mIOCONCLKDIV
[7];

94 
__IO
 
uöt32_t
 
	mBODCTRL
;

95 
__IO
 
uöt32_t
 
	mSYSTCKCAL
;

96 
__I
 
uöt32_t
 
	mRESERVED12
[6];

97 
__IO
 
uöt32_t
 
	mIRQLATENCY
;

98 
__IO
 
uöt32_t
 
	mNMISRC
;

99 
__IO
 
uöt32_t
 
	mPINTSEL
[8];

100 
__IO
 
uöt32_t
 
	mUSBCLKCTRL
;

101 
__I
 
uöt32_t
 
	mUSBCLKST
;

102 
__I
 
uöt32_t
 
	mRESERVED13
[25];

103 
__IO
 
uöt32_t
 
	mSTARTERP0
;

104 
__I
 
uöt32_t
 
	mRESERVED14
[3];

105 
__IO
 
uöt32_t
 
	mSTARTERP1
;

106 
__I
 
uöt32_t
 
	mRESERVED15
[6];

107 
__IO
 
uöt32_t
 
	mPDSLEEPCFG
;

108 
__IO
 
uöt32_t
 
	mPDWAKECFG
;

109 
__IO
 
uöt32_t
 
	mPDRUNCFG
;

110 
__I
 
uöt32_t
 
	mRESERVED16
[110];

111 
__I
 
uöt32_t
 
	mDEVICEID
;

112 } 
	tLPC_SYSCTL_T
;

115 
	#LPC_SYSCTL_BASE
 0x40048000

	)

117 
	#LPC_SYSCTL
 ((
LPC_SYSCTL_T
 *Ë
LPC_SYSCTL_BASE
)

	)

121 
	#LPC_DMA
 ((
LPC_DMA_T
 *Ë
LPC_DMA_BASE
)

	)

125 
uöt32_t
 
	mx„rcfg
;

126 
uöt32_t
 
	msour˚
;

127 
uöt32_t
 
	mde°
;

128 
uöt32_t
 
	m√xt
;

129 } 
	tDMA_CHDESC_T
;

135 
	mSSP0_RX_DMA
 = 0,

136 
	mDMA_CH0
 = 
SSP0_RX_DMA
,

137 
	mDMAREQ_SSP0_TX
,

138 
	mDMA_CH1
 = 
DMAREQ_SSP0_TX
,

139 
	mDMAREQ_SSP1_RX
,

140 
	mDMA_CH2
 = 
DMAREQ_SSP1_RX
,

141 
	mDMAREQ_SSP1_TX
,

142 
	mDMA_CH3
 = 
DMAREQ_SSP1_TX
,

143 
	mDMAREQ_USART0_RX
,

144 
	mDMA_CH4
 = 
DMAREQ_USART0_RX
,

145 
	mDMAREQ_USART0_TX
,

146 
	mDMA_CH5
 = 
DMAREQ_USART0_TX
,

147 
	mDMAREQ_USART1_RX
,

148 
	mDMA_CH6
 = 
DMAREQ_USART1_RX
,

149 
	mDMAREQ_USART1_TX
,

150 
	mDMA_CH7
 = 
DMAREQ_USART1_TX
,

151 
	mDMAREQ_USART2_RX
,

152 
	mDMA_CH8
 = 
DMAREQ_USART2_RX
,

153 
	mDMAREQ_USART2_TX
,

154 
	mDMA_CH9
 = 
DMAREQ_USART2_TX
,

155 
	mDMAREQ_USART3_RX
,

156 
	mDMA_CH10
 = 
DMAREQ_USART3_RX
,

157 
	mDMAREQ_USART3_TX
,

158 
	mDMA_CH11
 = 
DMAREQ_USART3_TX
,

159 
	mDMAREQ_USART4_RX
,

160 
	mDMA_CH12
 = 
DMAREQ_USART4_RX
,

161 
	mDMAREQ_USART4_TX
,

162 
	mDMA_CH13
 = 
DMAREQ_USART4_TX
,

163 
	mDMAREQ_RESERVED_14
,

164 
	mDMA_CH14
 = 
DMAREQ_RESERVED_14
,

165 
	mDMAREQ_RESERVED_15
,

166 
	mDMA_CH15
 = 
DMAREQ_RESERVED_15


167 } 
	tDMA_CHID_T
;

170 
	#MAX_DMA_CHANNEL
 (
DMA_CH15
 + 1)

	)

172 #unde‡
_BIT


174 
	#_BIT
(
n
Ë(1 << (n))

	)

180 #unde‡
_SBF


182 
	#_SBF
(
f
, 
v
Ë((vË<< (f))

	)

197 #unde‡
_BITMASK


199 
	#_BITMASK
(
fõld_width
Ë–
	`_BIT
(fõld_widthË- 1)

	)

202 #i‚de‡
NULL


203 
	#NULL
 ((*Ë0)

	)

207 
	#NELEMENTS
(
¨øy
Ë(◊ºayË/ ◊ºay[0]))

	)

209 
	#LPC_SCT0
 ((
LPC_SCT_T
 *Ë
LPC_SCT0_BASE
)

	)

210 
	#LPC_SCT1
 ((
LPC_SCT_T
 *Ë
LPC_SCT1_BASE
)

	)

211 
	#LPC_TIMER16_0
 ((
LPC_TIMER_T
 *Ë
LPC_TIMER16_0_BASE
)

	)

212 
	#LPC_TIMER16_1
 ((
LPC_TIMER_T
 *Ë
LPC_TIMER16_1_BASE
)

	)

213 
	#LPC_TIMER32_0
 ((
LPC_TIMER_T
 *Ë
LPC_TIMER32_0_BASE
)

	)

214 
	#LPC_TIMER32_1
 ((
LPC_TIMER_T
 *Ë
LPC_TIMER32_1_BASE
)

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\timer_11u6x.c

34 
	~"timî_11u6x.h
"

35 
	~"˛ock_11u6x.h
"

38 c⁄° 
uöt32_t
 
	gOscR©eIn
 = 12000000;

39 c⁄° 
uöt32_t
 
	gRTCOscR©eIn
 = 32768;

55 
	#STATIC
 

	)

57 
	#EXTERN
 

	)

63 
STATIC
 
CHIP_SYSCTL_CLOCK_T
 
	$Chù_TIMER_GëClock
(
LPC_TIMER_T
 *
pTMR
)

65 
CHIP_SYSCTL_CLOCK_T
 
tmrClk
;

66 i‡(
pTMR
 =
LPC_TIMER32_1
) {

67 
tmrClk
 = 
SYSCTL_CLOCK_CT32B1
;

69 i‡(
pTMR
 =
LPC_TIMER16_0
) {

70 
tmrClk
 = 
SYSCTL_CLOCK_CT16B0
;

72 i‡(
pTMR
 =
LPC_TIMER16_1
) {

73 
tmrClk
 = 
SYSCTL_CLOCK_CT16B1
;

76 
tmrClk
 = 
SYSCTL_CLOCK_CT32B0
;

79  
tmrClk
;

80 
	}
}

87 
	$Chù_TIMER_Inô
(
LPC_TIMER_T
 *
pTMR
)

89 
	`Chù_Clock_E«bÀPîùhClock
(
	`Chù_TIMER_GëClock
(
pTMR
));

90 
	}
}

93 
	$Chù_TIMER_DeInô
(
LPC_TIMER_T
 *
pTMR
)

95 
	`Chù_Clock_DißbÀPîùhClock
(
	`Chù_TIMER_GëClock
(
pTMR
));

96 
	}
}

99 
	$Chù_TIMER_Re£t
(
LPC_TIMER_T
 *
pTMR
)

101 
uöt32_t
 
ªg
;

104 
ªg
 = 
pTMR
->
TCR
;

105 
pTMR
->
TCR
 = 0;

106 
pTMR
->
TC
 = 1;

109 
pTMR
->
TCR
 = 
TIMER_RESET
;

112 
pTMR
->
TC
 != 0) {}

115 
pTMR
->
TCR
 = 
ªg
;

116 
	}
}

119 
	$Chù_TIMER_ExtM©chC⁄åﬁSë
(
LPC_TIMER_T
 *
pTMR
, 
öt8_t
 
öôül_°©e
,

120 
TIMER_PIN_MATCH_STATE_T
 
m©chSèã
, 
öt8_t
 
m©chnum
)

122 
uöt32_t
 
mask
, 
ªg
;

125 
mask
 = (1 << 
m©chnum
) | (0x03 << (4 + (matchnum * 2)));

126 
ªg
 = 
pTMR
->
EMR
 &~
mask
;

129 
pTMR
->
EMR
 = 
ªg
 | (((
uöt32_t
Ë
öôül_°©e
Ë<< 
m©chnum
) |

130 (((
uöt32_t
Ë
m©chSèã
Ë<< (4 + (
m©chnum
 * 2)));

131 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\MicroPython\My_settings.h

12 #i‚de‡
MY_SETTINGS_H


13 
	#MY_SETTINGS_H


	)

15 
	#PROJ_HIRES
 0

16 
	#PROJ_STARTUPLOGO
 1

	)

17 
	#PROJ_GAMEBUINO
 0

	)

18 
	#PROJ_STREAMING_MUSIC
 0

	)

19 
	#PROJ_ENABLE_SYNTH
 0

	)

23 
	#PROJ_PYTHON_REPL
 0

	)

24 
	#MICROPY_ENABLE_GC
 1

25 

	)

26 #ifde‡
POK_SIM


27 
	#USE_USB_SERIAL_PRINT
 (0)

	)

29 
	#USE_USB_SERIAL_PRINT
 (1)

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\MicroPython\PythonBindings.cpp

37 
	~"PokôtoC‹e.h
"

38 
	~"PokôtoDi•œy.h
"

39 
	~"Pyth⁄Bödögs.h
"

40 
	~"time.h
"

42 
usög
 
«me•a˚
 
	gPokôto
;

44 #i‡
MICROPY_ENABLE_GC
==1

47 
	#EVENT_RING_BUFFER_SIZE
 10

	)

50 
EvítRögBuf„rIãm
 
	gevítRögBuf„r
[
EVENT_RING_BUFFER_SIZE
];

51 
	grbNextFªeIãmIndex
 = 0;

52 
	grbOlde°IãmIndex
 = -1;

55 
boﬁ
 
	$Pok_addToRögBuf„r
(
uöt8_t
 
ty≥
, uöt8_à
key
) {

57 if(
rbNextFªeIãmIndex
 =
rbOlde°IãmIndex
) {

59  
Ál£
;

63 
evítRögBuf„r
[
rbNextFªeIãmIndex
].
key
 = key;

64 
evítRögBuf„r
[
rbNextFªeIãmIndex
].
ty≥
 =Åype;

67 if(
rbOlde°IãmIndex
 == -1) {

68 
rbOlde°IãmIndex
 = 
rbNextFªeIãmIndex
;

73 if(++
rbNextFªeIãmIndex
 >
EVENT_RING_BUFFER_SIZE
)

74 
rbNextFªeIãmIndex
 = 0;

78 
size
 = 
rbNextFªeIãmIndex
-
rbOlde°IãmIndex
;

79 if(
size
<0)

80 
size
 +
EVENT_RING_BUFFER_SIZE
;

84  
åue
;

85 
	}
}

88 
boﬁ
 
	$Pok_ªadAndRemoveFromRögBuf„r
(
EvítRögBuf„rIãm
* 
ôemOut
){

90 if(
rbOlde°IãmIndex
 == -1) {

92  
Ál£
;

96 *
ôemOut
 = 
evítRögBuf„r
[
rbOlde°IãmIndex
];

99 if(++
rbOlde°IãmIndex
 >
EVENT_RING_BUFFER_SIZE
)

100 
rbOlde°IãmIndex
 = 0;

102 if(
rbOlde°IãmIndex
 =
rbNextFªeIãmIndex
) {

103 
rbOlde°IãmIndex
 = -1;

109 
size
 = 
rbNextFªeIãmIndex
-
rbOlde°IãmIndex
;

110 if(
size
<0)

111 
size
 +
EVENT_RING_BUFFER_SIZE
;

115  
åue
;

116 
	}
}

118 
uöt8_t
 
	$Pok_Di•œy_gëNumbîOfCﬁ‹s
() {

120  
Di•œy
::
	`gëNumbîOfCﬁ‹s
();

121 
	}
}

123 
uöt16_t
 
	$Pok_Di•œy_gëWidth
() {

125  
Di•œy
::
	`gëWidth
();

126 
	}
}

128 
uöt16_t
 
	$Pok_Di•œy_gëHeight
() {

130  
Di•œy
::
	`gëHeight
();

131 
	}
}

133 
	$Pok_Di•œy_wrôe
(c⁄° 
uöt8_t
 *
buf„r
, uöt8_à
size
) {

135 
Di•œy
::
	`wrôe
(
buf„r
, 
size
);

136 
	}
}

138 
	$Pok_Di•œy_¥öt
(
uöt8_t
 
x
, uöt8_à
y
, c⁄° 
°r
[], uöt8_à
cﬁ‹
) {

140 
Di•œy
::
cﬁ‹
 = color;

141 
Di•œy
::
	`¥öt
–
x
, 
y
, 
°r
 );

142 
	}
}

144 
	$Pok_Di•œy_blôFømeBuf„r
(
öt16_t
 
x
, i¡16_à
y
, i¡16_à
w
, i¡16_à
h
, i¡16_à
övisibÀcﬁ_
, c⁄° 
uöt8_t
 *
buf„r
) {

145 if–
övisibÀcﬁ_
 != -1)

146 
Di•œy
::
övisibÀcﬁ‹
 = (
uöt8_t
)
övisibÀcﬁ_
;

147 
Di•œy
::
	`døwBôm≠D©a
(
x
, 
y
, 
w
, 
h
, 
buf„r
 );

148 
	}
}

150 
	$Pok_Di•œy_£tS¥ôe
(
uöt8_t
 
ödex
, 
öt16_t
 
x
, i¡16_à
y
, i¡16_à
w
, i¡16_à
h
, i¡16_à
övisibÀcﬁ_
, uöt8_à*
buf„r
, 
uöt16_t
* 
∑Àâe16x16bô
, 
boﬁ
 
doRe£tDútyRe˘
) {

151 
Di•œy
::
övisibÀcﬁ‹
 = (
uöt8_t
)
övisibÀcﬁ_
;

152 
Di•œy
::
	`£tS¥ôe
(
ödex
, 
buf„r
, 
∑Àâe16x16bô
, 
x
, 
y
, 
w
, 
h
, 
doRe£tDútyRe˘
 );

153 
	}
}

155 
	$Pok_Di•œy_£tS¥ôePos
(
uöt8_t
 
ödex
, 
öt16_t
 
x
, i¡16_à
y
) {

156 
Di•œy
::
	`£tS¥ôePos
(
ödex
, 
x
, 
y
);

157 
	}
}

159 
	$Pok_Di•œy_fûlRe˘™gÀ
(
öt16_t
 
x
, i¡16_à
y
, i¡16_à
w
, i¡16_à
h
, 
uöt8_t
 
cﬁ‹
) {

160 
Di•œy
::
cﬁ‹
 = color;

161 
Di•œy
::
	`fûlRe˘™gÀ
(
x
, 
y
, 
w
, 
h
);

162 
	}
}

165 
uöt16_t
 
	$POK_game_di•œy_RGBto565
(
uöt8_t
 
r
, uöt8_à
g
, uöt8_à
b
) {

166  
Di•œy
::
	`RGBto565
(
r
, 
g
, 
b
);

167 
	}
}

169 
	$POK_game_di•œy_£tPÆëã
(
uöt16_t
* 
∑ÀâeAºay
, 
öt16_t
 
Àn
) {

170  
i
 = 0; i < 
Àn
; i++ )

171 
Di•œy
::
∑Àâe
[
i
] = 
∑ÀâeAºay
[i];

172 
	}
}

174 
	$Pok_Di•œy_£tClùRe˘
(
öt16_t
 
x
, i¡16_à
y
, i¡16_à
w
, i¡16_à
h
) {

175 if(
h
 == 0)

176 
Di•œy
::
	`£tClùRe˘
(0, 0, 
LCDWIDTH
, 
LCDHEIGHT
);

178 
Di•œy
::
	`£tClùRe˘
(
x
, 
y
, 
w
, 
h
);

179 
	}
}

182 
	$Pok_Di•œy_upd©e
(
boﬁ
 
u£Dúe˘Mode
, 
uöt8_t
 
x
, uöt8_à
y
, uöt8_à
w
, uöt8_à
h
) {

183 
Di•œy
::
	`upd©e
(
u£Dúe˘Mode
, 
x
, 
y
, 
w
, 
h
);

184 
	}
}

187 
boﬁ
 
	$Pok_C‹e_upd©e
(
boﬁ
 
u£Dúe˘Mode
, 
uöt8_t
 
x
, uöt8_à
y
, uöt8_à
w
, uöt8_à
h
) {

189 
boﬁ
 
ªt
 = 
C‹e
::
	`upd©e
(
u£Dúe˘Mode
, 
x
, 
y
, 
w
, 
h
);

191  
ªt
;

192 
	}
}

196 
boﬁ
 
	$Pok_C‹e_isRu¬ög
() {

198  
C‹e
::
	`isRu¬ög
();

199 
	}
}

201 
boﬁ
 
	$Pok_C‹e_buâ⁄s_ª≥©
(
uöt8_t
 
buâ⁄
, uöt8_à
≥riod
) {

203  
C‹e
::
buâ⁄s
.
	`ª≥©
(
buâ⁄
, 
≥riod
);

204 
	}
}

206 
boﬁ
 
	$Pok_C‹e_buâ⁄s_hñd
(
uöt8_t
 
buâ⁄
, uöt8_à
≥riod
) {

208  
C‹e
::
buâ⁄s
.
	`hñd
(
buâ⁄
, 
≥riod
);

209 
	}
}

211 
boﬁ
 
	$Pok_C‹e_buâ⁄s_ªÀa£d
(
uöt8_t
 
buâ⁄
) {

213  
C‹e
::
buâ⁄s
.
	`ªÀa£d
(
buâ⁄
);

214 
	}
}

218 
	$Pok_Sound_Re£t
() {

220 #i‡
POK_STREAMING_MUSIC
 > 0

223 
cuºítBuf„r
 = 0;

224 
cuºítPå
 = 
buf„rs
[
cuºítBuf„r
];

225 
ídPå
 = 
cuºítPå
 + 
BUFFER_SIZE
;

229 
Sound
::
	`∂ayMusicSåóm
();

242 
	}
}

244 
uöt8_t
 
	$Pok_Sound_GëCuºítBuf„rIndex
() {

246 #i‡
POK_STREAMING_MUSIC
 > 0

247  
cuºítBuf„r
;

251 
	}
}

253 
uöt32_t
 
	$Pok_Sound_GëCuºítBuf„rPos
() {

255 #i‡
POK_STREAMING_MUSIC
 > 0

256  (
cuºítPå
 - &(
buf„rs
[
cuºítBuf„r
][0])) / (buffers[currentBuffer][0]);

260 
	}
}

262 
uöt32_t
 
	$Pok_Sound_GëBuf„rSize
() {

264 #i‡
POK_STREAMING_MUSIC
 > 0

265  
BUFFER_SIZE
;

269 
	}
}

271 
	$Pok_Sound_FûlBuf„r
(* 
buf
, 
uöt16_t
 
Àn
, 
uöt8_t
 
soundBuf„rIndex
, uöt16_à
soundBuf„rPos
) {

273 #i‡
POK_STREAMING_MUSIC
 > 0

280 
	`mem˝y
(&(
buf„rs
[
soundBuf„rIndex
][
soundBuf„rPos
]), 
buf
, 
Àn
);

282 
	}
}

284 
	$Pok_Sound_Pœy
() {

285 #i‡
POK_STREAMING_MUSIC
 > 0

286 
°ªamvﬁ
 = 3;

288 
	}
}

291 
	$Pok_Sound_Pau£
() {

292 #i‡
POK_STREAMING_MUSIC
 > 0

293 
°ªamvﬁ
 = 0;

295 
	}
}

297 
	$Pok_Waô
(
uöt32_t
 
dur_ms
) {

298 #ifde‡
POK_SIM


299 
Simuœt‹
::
	`waô_ms
(
dur_ms
);

301 
	`waô_ms
(
dur_ms
);

303 
	}
}

306 
tm
 * 
	$loˇ…ime_˝p
(c⁄° 
time_t
 * 
timî
)

308 (
	`loˇ…ime
(
timî
));

309 
	}
}

311 
time_t
 
	$time_˝p
(
time_t
* 
timî
){

312 (
	`time
(
timî
));

313 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\MicroPython\PythonBindings.h

37 #i‚de‡
PYTHON_BINDINGS_H


38 
	#PYTHON_BINDINGS_H


	)

40 #i‡
MICROPY_ENABLE_GC
==1

41 #ifde‡
__˝lu•lus


42 
	#EXTERNC
 "C"

	)

44 
	#EXTERNC


	)

47 
	#BTN_UP
 1

	)

48 
	#BTN_RIGHT
 2

	)

49 
	#BTN_DOWN
 3

	)

50 
	#BTN_LEFT
 0

	)

51 
	#BTN_A
 4

	)

52 
	#BTN_B
 5

	)

53 
	#BTN_C
 6

	)

56 
EXTERNC
 
Pyth⁄Maö
(
¨gc
, **
¨gv
);

61 
	#EVENT_RING_BUFFER_SIZE
 10

	)

62 
	s_EvítRögBuf„rIãm
 {

63 
uöt8_t
 
	mty≥
;

64 
uöt8_t
 
	mkey
;

65 } 
	tEvítRögBuf„rIãm
;

68 
EXTERNC
 
boﬁ
 
Pok_addToRögBuf„r
(
uöt8_t
 
ty≥
, uöt8_à
key
);

69 
EXTERNC
 
boﬁ
 
Pok_ªadAndRemoveFromRögBuf„r
(
EvítRögBuf„rIãm
* 
ôemOut
);

72 
EXTERNC
 
uöt8_t
 
Pok_Di•œy_gëNumbîOfCﬁ‹s
();

73 
EXTERNC
 
uöt16_t
 
Pok_Di•œy_gëWidth
();

74 
EXTERNC
 
uöt16_t
 
Pok_Di•œy_gëHeight
();

75 
EXTERNC
 
Pok_Di•œy_blôFømeBuf„r
(
öt16_t
 
x
, i¡16_à
y
, i¡16_à
w
, i¡16_à
h
, i¡16_à
övisibÀcﬁ_
, c⁄° 
uöt8_t
 *
buf„r
);

76 
EXTERNC
 
Pok_Di•œy_£tS¥ôe
(
uöt8_t
 
ödex
, 
öt16_t
 
x
, i¡16_à
y
, i¡16_à
w
, i¡16_à
h
, i¡16_à
övisibÀcﬁ_
, uöt8_à*
buf„r
, 
uöt16_t
* 
∑Àâe16x16bô
, 
boﬁ
 
doRe£tDútyRe˘
);

77 
EXTERNC
 
Pok_Di•œy_£tS¥ôePos
(
uöt8_t
 
ödex
, 
öt16_t
 
x
, i¡16_à
y
);

78 
EXTERNC
 
Pok_Di•œy_fûlRe˘™gÀ
(
öt16_t
 
x
, i¡16_à
y
, i¡16_à
w
, i¡16_à
h
, 
uöt8_t
 
cﬁ‹
);

79 
EXTERNC
 
Pok_Di•œy_wrôe
(c⁄° 
uöt8_t
 *
buf„r
, uöt8_à
size
);

80 
EXTERNC
 
Pok_Di•œy_¥öt
(
uöt8_t
 
x
, uöt8_à
y
, c⁄° 
°r
[], uöt8_à
cﬁ‹
);

81 
EXTERNC
 
uöt16_t
 
POK_game_di•œy_RGBto565
(
uöt8_t
 
r
, uöt8_à
g
, uöt8_à
b
);

82 
EXTERNC
 
POK_game_di•œy_£tPÆëã
(
uöt16_t
* 
∑ÀâeAºay
, 
öt16_t
 
Àn
);

83 
EXTERNC
 
Pok_Di•œy_£tClùRe˘
(
öt16_t
 
x
, i¡16_à
y
, i¡16_à
w
, i¡16_à
h
);

84 
EXTERNC
 
Pok_Di•œy_upd©e
(
boﬁ
 
u£Dúe˘Mode
, 
uöt8_t
 
x
, uöt8_à
y
, uöt8_à
w
, uöt8_à
h
);

87 
EXTERNC
 
boﬁ
 
Pok_C‹e_upd©e
(boﬁ 
u£Dúe˘Mode
, 
uöt8_t
 
x
, uöt8_à
y
, uöt8_à
w
, uöt8_à
h
);

88 
EXTERNC
 
boﬁ
 
Pok_C‹e_isRu¬ög
();

89 
EXTERNC
 
boﬁ
 
Pok_C‹e_buâ⁄s_ª≥©
(
uöt8_t
 
buâ⁄
, uöt8_à
≥riod
);

90 
EXTERNC
 
boﬁ
 
Pok_C‹e_buâ⁄s_hñd
(
uöt8_t
 
buâ⁄
, uöt8_à
≥riod
);

91 
EXTERNC
 
boﬁ
 
Pok_C‹e_buâ⁄s_ªÀa£d
(
uöt8_t
 
buâ⁄
);

94 
EXTERNC
 
Pok_Sound_Re£t
();

95 
EXTERNC
 
uöt8_t
 
Pok_Sound_GëCuºítBuf„rIndex
();

96 
EXTERNC
 
uöt32_t
 
Pok_Sound_GëCuºítBuf„rPos
();

97 
EXTERNC
 
uöt32_t
 
Pok_Sound_GëBuf„rSize
();

98 
EXTERNC
 
Pok_Sound_FûlBuf„r
(* 
buf
, 
uöt16_t
 
Àn
, 
uöt8_t
 
soundBuf„rIndex
, uöt16_à
soundBuf„rPos
);

99 
EXTERNC
 
Pok_Sound_Pœy
();

100 
EXTERNC
 
Pok_Sound_Pau£
();

102 
EXTERNC
 
Pok_Waô
(
uöt32_t
 
dur_ms
);

104 
EXTERNC
 
tm
 * 
loˇ…ime_˝p
(c⁄° 
time_t
 * 
timî
);

105 
EXTERNC
 
time_t
 
time_˝p
—ime_t* 
timî
);

108 
EXTERNC
 
pc_¥ötf
(c⁄° * 
f‹m©
, ...);

109 
EXTERNC
 
pc_puts
(c⁄° * 
°rWôhNuŒ
);

110 
EXTERNC
 
pc_put¢
(c⁄° * 
°r
, 
Àn
);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\MicroPython\UsbSerialPrint.cpp

37 
	~"Pokôto.h
"

38 
	~<c°d¨g
>

40 #i‚de‡
POK_SIM


41 
	~"USBSîül.h
"

43 #ifde‡
USE_SEGGER_SERIAL_PRINT


51 
	~"SEGGER_RTT.h
"

55 
	~"Pyth⁄Bödögs.h
"

57 #i‡
USE_USB_SERIAL_PRINT


59 
USBSîül
 
	gpc
;

61 "C" 
	$pc_putc
(
c
) {

62  
pc
.
	`putc
(
c
);

63 
	}
}

65 "C" 
	$pc_gëc
() {

66  
pc
.
	`gëc
();

67 
	}
}

69 "C" 
	$pc_puts
(c⁄° * 
°rWôhNuŒ
) {

71 
	`pc_put¢
(
°rWôhNuŒ
, 
	`°æí
(strWithNull));

72 
	}
}

73 "C" 
	$pc_put¢
(c⁄° * 
°r
, 
Àn
) {

75 
i
 = 0;

76 
i
<
Àn
)

77 
pc
.
	`putc
(()
°r
[
i
++]);

78 
	}
}

80 "C" 
	$pc_¥ötf
(c⁄° * 
f‹m©
, ...) {

82 
°d
::
va_li°
 
¨g
;

83 
	`va_°¨t
(
¨g
, 
f‹m©
);

84 
ªt
 = 
pc
.
	`¥ötf
–
f‹m©
, 
¨g
);

85 
	`va_íd
(
¨g
);

86  
ªt
;

87 
	}
}

91 #ifde‡
USE_SEGGER_SERIAL_PRINT


93 "C" 
	$pc_putc
(
c
) {

94 
cc
 = 
c
;

95  
	`SEGGER_RTT_Wrôe
(0, &
cc
, 1);

96 
	}
}

97 "C" 
	$pc_gëc
() {

98  
	`SEGGER_RTT_WaôKey
();

99 
	}
}

100 "C" 
	$pc_puts
(c⁄° * 
°rWôhNuŒ
) {

102 
	`SEGGER_RTT_WrôeSåög
(0, 
°rWôhNuŒ
);

103 
	}
}

104 "C" 
	$pc_put¢
(c⁄° * 
°r
, 
Àn
) {

105 
	`SEGGER_RTT_Wrôe
(0, 
°r
, 
Àn
);

106 
	}
}

107 "C" 
	$pc_¥ötf
(c⁄° * 
f‹m©
, ...) {

109 
°d
::
va_li°
 
¨g
;

110 
	`va_°¨t
(
¨g
, 
f‹m©
);

111 
ªt
 = 
	`SEGGER_RTT_¥ötf
–0, 
f‹m©
, 
¨g
);

112 
	`va_íd
(
¨g
);

113  
ªt
;

114 
	}
}

117 "C" 
	$pc_putc
(
c
Ë{  0;
	}
}

118 "C" 
	$pc_gëc
(Ë{ 0;
	}
}

119 "C" 
	$pc_puts
(c⁄° * 
°rWôhNuŒ
Ë{
	}
}

120 "C" 
	$pc_put¢
(c⁄° * 
°r
, 
Àn
Ë{
	}
}

121 "C" 
	$pc_¥ötf
(c⁄° * 
f‹m©
, ...Ë{ 0;
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\MicroPython\main.cpp

37 
	~"Pokôto.h
"

39 #i‚de‡
POK_SIM


40 
	~"USBSîül.h
"

41 #ifde‡
USE_SEGGER_SERIAL_PRINT


42 
	~"SEGGER_RTT.h
"

46 
	~"Pyth⁄Bödögs.h
"

48 #ifde‡
POK_SIM


49 
	#PYTHON_SOURCE_FILE_PATH
 "..\\..\\..\\POKITTO_LIBS\\Mi¸oPyth⁄\\§c_py\\"

	)

51 
	#PYTHON_SOURCE_FILE_PATH


	)

54 
	gPokôto
::
C‹e
 
game
;

56 "C" 
Pyth⁄Maö
(
¨gc
, **
¨gv
);

58 
	$maö
 () {

60 
game
.
	`begö
();

62 
game
.
di•œy
.
≥rsi°í˚
 = 0;

64 
game
.
di•œy
.
	`£tF⁄t
(
f⁄tC64
);

66 i‡(
game
.
	`isRu¬ög
()) {

68 #i‡
PROJ_PYTHON_REPL


70 
	`Pyth⁄Maö
(0, 
NULL
);

75 #¥agm®
GCC
 
dügno°ic
 
push


76 #¥agm®
GCC
 
dügno°ic
 
ign‹ed
 "-Wwrite-strings"

77 * 
¨gv
[] = {

79 
PYTHON_SOURCE_FILE_PATH
"example_main.py"

81 #¥agm®
GCC
 
dügno°ic
 
p›


83 
	`Pyth⁄Maö
(2, 
¨gv
);

90 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\MicroPython\src_py\sprite.py

1 #Slighéy 
modifõd
 
Pygame
 
•rôe
 
˛as£s


2 #Auth‹: 
H™nu
 
ViôÆa
, 2018

4 #OrigöÆ 
li˚n£
 
as
 
fﬁlows
:

6 ## 
pygame
 - 
Pyth⁄
 
Game
 
Libøry


7 ## 
C›yright
 (
C
Ë2000-2003, 2007 
Pëe
 
Shö√rs


8 ## (
C
Ë2004 
J€
 
Wªschnig


9 ## 
This
 
libøry
 
is
 
‰ì
 
so·w¨e
; 
you
 
ˇn
 
ªdi°ribuã
 
ô
 
™d
/
‹


10 ## 
modify
 
ô
 
undî
 
the
 
ãrms
 
of
Åhê
GNU
 
Libøry
 
GíîÆ
 
Public


11 ## 
Li˚n£
 
as
 
published
 
by
 
the
 
Fªe
 
So·w¨e
 
Found©i⁄
; 
eôhî


12 ## 
vîsi⁄
 2 
of
 
the
 
Li˚n£
, 
‹
 (
©
 
your
 
›ti⁄
Ë
™y
 
œãr
 version.

14 ## 
This
 
libøry
 
is
 
di°ribuãd
 
ö
 
the
 
h›e
 
th©
 
ô
 
wûl
 
be
 
u£ful
,

15 ## 
but
 
WITHOUT
 
ANY
 
WARRANTY
; 
wôhout
 
eví
 
the
 
im∂õd
 
w¨ø¡y
 
of


16 ## 
MERCHANTABILITY
 
‹
 
FITNESS
 
FOR
 
A
 
PARTICULAR
 
PURPOSE
. 
Sì
 
the
 
GNU


17 ## 
Libøry
 
GíîÆ
 
Public
 
Li˚n£
 
m‹e
 
dëaûs
.

19 ## 
You
 
should
 
have
 
ª˚ived
 
a
 
c›y
 
of
 
the
 
GNU
 
Libøry
 
GíîÆ
 
Public


20 ## 
Li˚n£
 
Æ⁄g
 
wôh
 
this
 
libøry
; 
nŸ
, 
wrôe
 
to
 
the
 
Fªe


21 ## 
Found©i⁄
, 
Inc
., 59 
Tem∂e
 
Pœ˚
, 
Suôe
 330, 
Bo°⁄
, 
MA
 02111-1307 
USA


23 ## 
Pëe
 
Shö√rs


24 ## 
≥ã
@
shö√rs
.
‹g


26 
imp‹t
 
upygame
 
as
 
pygame


28 
˛ass
 
	$S¥ôe
(
obje˘
):

29 
def
 
	$__öô__
(
£lf
, *
groups
):

30 
£lf
.
__g
 = {
	}
} #Thê
groups
 
the
 
•rôe
 
is
 
ö


31 
groups
:

32 
£lf
.
	$add
(*
groups
)

34 
def
 
	$add
(
£lf
, *
groups
):

35 
has
 = 
£lf
.
__g
.
__c⁄èös__


36 
group
 
ö
 
groups
:

37 
	`haßâr
(
group
, '_spritegroup'):

38 
nŸ
 
	$has
(
group
):

39 
group
.
	$add_öã∫Æ
(
£lf
)

40 
£lf
.
	$add_öã∫Æ
(
group
)

42 
£lf
.
	$add
(*
group
)

44 
def
 
	$ªmove
(
£lf
, *
groups
):

45 
has
 = 
£lf
.
__g
.
__c⁄èös__


46 
group
 
ö
 
groups
:

47 
	`haßâr
(
group
, '_spritegroup'):

48 
	$has
(
group
):

49 
group
.
	$ªmove_öã∫Æ
(
£lf
)

50 
£lf
.
	$ªmove_öã∫Æ
(
group
)

52 
£lf
.
	$ªmove
(*
group
)

54 
def
 
	$add_öã∫Æ
(
£lf
, 
group
):

55 
£lf
.
__g
[
group
] = 0

57 
def
 
	$ªmove_öã∫Æ
(
£lf
, 
group
):

58 
dñ
 
£lf
.
__g
[
group
]

60 
def
 
	$upd©e
(
£lf
, *
¨gs
):

61 
∑ss


63 
def
 
	$kûl
(
£lf
):

64 
c
 
ö
 
£lf
.
__g
:

65 
c
.
	$ªmove_öã∫Æ
(
£lf
)

66 
£lf
.
__g
.
	$˛ór
()

68 
def
 
	$groups
(
£lf
):

69  
	$li°
(
£lf
.
__g
)

71 
def
 
	$Æive
(
£lf
):

72  
	$åuth
(
£lf
.
__g
)

74 
def
 
	$__ª¥__
(
£lf
):

75  "<%†•rôe(ö %d groups)>" % (
£lf
.
__˛ass__
.
__«me__
, 
	$Àn
(
£lf
.
__g
))

78 
˛ass
 
	$Ab°ø˘Group
(
obje˘
):

80 #dummy 
vÆ
 
to
 
idítify
 
•rôe
 
groups
, 
™d
 
avoid
 
öföôe
 
ªcursi⁄


81 
_•rôegroup
 = 
True


83 
def
 
	$__öô__
(
£lf
):

84 
£lf
.
•rôedi˘
 = {
	}
}

85 
£lf
.
lo°•rôes
 = []

87 
def
 
	$•rôes
(
£lf
):

88  
	$li°
(
£lf
.
•rôedi˘
)

90 
def
 
	$add_öã∫Æ
(
£lf
, 
•rôe
):

91 
£lf
.
•rôedi˘
[
•rôe
] = 0

93 
def
 
	$ªmove_öã∫Æ
(
£lf
, 
•rôe
):

94 
r
 = 
£lf
.
•rôedi˘
[
•rôe
]

95 
r
:

96 
£lf
.
lo°•rôes
.
	$≠≥nd
(
r
)

97 
dñ
 
£lf
.
•rôedi˘
[
•rôe
]

99 
def
 
	$has_öã∫Æ
(
£lf
, 
•rôe
):

100  
•rôe
 
ö
 
£lf
.
•rôedi˘


102 
def
 
	$c›y
(
£lf
):

103  
£lf
.
	`__˛ass__
(£lf.
	$•rôes
())

105 
def
 
	$__ôî__
(
£lf
):

106  
	`ôî
(
£lf
.
	$•rôes
())

108 
def
 
	$__c⁄èös__
(
£lf
, 
•rôe
):

109  
£lf
.
	$has
(
•rôe
)

111 
def
 
	$add
(
£lf
, *
•rôes
):

112 
•rôe
 
ö
 
•rôes
:

114 #I‡
this
 
is
 
the
 , 
we
 
should
 
add
Åhê
•rôe
 
ô£lf
,

115 #™d 
nŸ
 
the
 
ôî©‹
 
obje˘
.

116 
	$isö°™˚
(
•rôe
, 
S¥ôe
):

117 
nŸ
 
£lf
.
	$has_öã∫Æ
(
•rôe
):

118 
£lf
.
	$add_öã∫Æ
(
•rôe
)

119 
•rôe
.
	$add_öã∫Æ
(
£lf
)

121 
åy
:

122 #Sì 
•rôe
 
is
 
™
 
ôî©‹
, 
like
 
a
 
li°
 
‹
 sprite

124 
£lf
.
	$add
(*
•rôe
)

125 
	$ex˚±
 (
Ty≥Eº‹
, 
AâribuãEº‹
):

126 #NŸ 
ôîabÀ
. 
This
 
is
 
¥obably
 
a
 
•rôe
 
th©
 i†
nŸ
 
™


127 #ö°™˚ 
of
 
the
 
S¥ôe
 
˛ass
 
‹
 
is
 
nŸ
 
™
 
ö°™˚
 o‡
a


128 #sub˛as†
of
 
the
 
S¥ôe
 
˛ass
. 
A…î«ãly
, 
ô
 
could
 
be
 
™


129 #ﬁd-
°yÀ
 
•rôe
 
group
.

130 
	`haßâr
(
•rôe
, '_spritegroup'):

131 
•r
 
ö
 
•rôe
.
	$•rôes
():

132 
nŸ
 
£lf
.
	$has_öã∫Æ
(
•r
):

133 
£lf
.
	$add_öã∫Æ
(
•r
)

134 
•r
.
	$add_öã∫Æ
(
£lf
)

135 
ñif
 
nŸ
 
£lf
.
	$has_öã∫Æ
(
•rôe
):

136 
£lf
.
	$add_öã∫Æ
(
•rôe
)

137 
•rôe
.
	$add_öã∫Æ
(
£lf
)

139 
def
 
	$ªmove
(
£lf
, *
•rôes
):

141 
•rôe
 
ö
 
•rôes
:

142 
	$isö°™˚
(
•rôe
, 
S¥ôe
):

143 
£lf
.
	$has_öã∫Æ
(
•rôe
):

144 
£lf
.
	$ªmove_öã∫Æ
(
•rôe
)

145 
•rôe
.
	$ªmove_öã∫Æ
(
£lf
)

147 
åy
:

148 
£lf
.
	$ªmove
(*
•rôe
)

149 
	$ex˚±
 (
Ty≥Eº‹
, 
AâribuãEº‹
):

150 
	`haßâr
(
•rôe
, '_spritegroup'):

151 
•r
 
ö
 
•rôe
.
	$•rôes
():

152 
£lf
.
	$has_öã∫Æ
(
•r
):

153 
£lf
.
	$ªmove_öã∫Æ
(
•r
)

154 
•r
.
	$ªmove_öã∫Æ
(
£lf
)

155 
ñif
 
£lf
.
	$has_öã∫Æ
(
•rôe
):

156 
£lf
.
	$ªmove_öã∫Æ
(
•rôe
)

157 
•rôe
.
	$ªmove_öã∫Æ
(
£lf
)

159 
def
 
	$has
(
£lf
, *
•rôes
):

160 
ªtu∫_vÆue
 = 
FÆ£


162 
•rôe
 
ö
 
•rôes
:

163 
	$isö°™˚
(
•rôe
, 
S¥ôe
):

164 #Check 
S¥ôe
 
ö°™˚
's membership inÅhis group

165 
£lf
.
	$has_öã∫Æ
(
•rôe
):

166 
ªtu∫_vÆue
 = 
True


168  
FÆ£


170 
åy
:

171 
£lf
.
	$has
(*
•rôe
):

172 
ªtu∫_vÆue
 = 
True


174  
FÆ£


175 
	$ex˚±
 (
Ty≥Eº‹
, 
AâribuãEº‹
):

176 
	`haßâr
(
•rôe
, '_spritegroup'):

177 
•r
 
ö
 
•rôe
.
	$•rôes
():

178 
£lf
.
	$has_öã∫Æ
(
•r
):

179 
ªtu∫_vÆue
 = 
True


181  
FÆ£


183 
£lf
.
	$has_öã∫Æ
(
•rôe
):

184 
ªtu∫_vÆue
 = 
True


186  
FÆ£


188  
ªtu∫_vÆue


190 
def
 
	$upd©e
(
£lf
, *
¨gs
):

191 
s
 
ö
 
£lf
.
	$•rôes
():

192 
s
.
	$upd©e
(*
¨gs
)

194 
def
 
	$døw
(
£lf
, 
surÁ˚
):

195 
•rôes
 = 
£lf
.
	$•rôes
()

196 
surÁ˚_blô
 = 
surÁ˚
.
blô


197 
•r
 
ö
 
•rôes
:

198 
£lf
.
•rôedi˘
[
•r
] = 
	$surÁ˚_blô
(
•r
.
image
, s¥.
ª˘
.
x
, s¥.ª˘.
y
)

199 
£lf
.
lo°•rôes
 = []

201 
def
 
	$˛ór
(
£lf
, 
surÁ˚
, 
bgd
):

202 
	$ˇŒabÀ
(
bgd
):

203 
r
 
ö
 
£lf
.
lo°•rôes
:

204 
	$bgd
(
surÁ˚
, 
r
)

205 
r
 
ö
 
£lf
.
•rôedi˘
.
	$vÆues
():

206 
r
:

207 
	$bgd
(
surÁ˚
, 
r
)

209 
surÁ˚_blô
 = 
surÁ˚
.
blô


210 
r
 
ö
 
£lf
.
lo°•rôes
:

211 
	$surÁ˚_blô
(
bgd
, 
r
,Ñ)

212 
r
 
ö
 
£lf
.
•rôedi˘
.
	$vÆues
():

213 
r
:

214 
	$surÁ˚_blô
(
bgd
, 
r
,Ñ)

216 
def
 
	$em±y
(
£lf
):

217 
s
 
ö
 
£lf
.
	$•rôes
():

218 
£lf
.
	$ªmove_öã∫Æ
(
s
)

219 
s
.
	$ªmove_öã∫Æ
(
£lf
)

221 
def
 
	$__n⁄zîo__
(
£lf
):

222  
	`åuth
(
£lf
.
	$•rôes
())

224 
def
 
	$__Àn__
(
£lf
):

225  
	`Àn
(
£lf
.
	$•rôes
())

227 
def
 
	$__ª¥__
(
£lf
):

228  "<%s(%d s¥ôes)>" % (
£lf
.
__˛ass__
.
__«me__
, 
	$Àn
(
£lf
))

231 
˛ass
 
	$Group
(
Ab°ø˘Group
):

232 
def
 
	$__öô__
(
£lf
, *
•rôes
):

233 
Ab°ø˘Group
.
	$__öô__
(
£lf
)

234 
£lf
.
	$add
(*
•rôes
)

236 #RídîPœö = 
Group


237 #RídîCÀ¨ = 
Group


239 
def
 
	$•rôecﬁlidóny
(
•rôe
, 
group
, 
cﬁlided
=
N⁄e
):

240 
cﬁlided
:

241 
s
 
ö
 
group
:

242 
	$cﬁlided
(
•rôe
, 
s
):

243  
s


245 #S≥cü»
ﬁd
 
behaviour
 
•ìd
.

246 
•rôecﬁlide
 = 
•rôe
.
ª˘
.
cﬁlidîe˘


247 
s
 
ö
 
group
:

248 
	$•rôecﬁlide
(
s
.
ª˘
):

249  
s


250  
N⁄e


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\CRC16.cpp

17 
	~"CRC16.h
"

19 
	g«me•a˚


21 c⁄° 
	gm_CRC16TabÀ
[256] = {

57 
	$CRC16
(c⁄° * 
d©a
, 
Àngth
)

60 
¸c
 = 0;

61 
i
 = 0; i < 
Àngth
; i++) {

62 
¸c
 = (¸¯<< 8Ë^ 
m_CRC16TabÀ
[((¸¯>> 8Ë^ 
d©a
[
i
]) & 0x00FF];

66  
¸c
;

67 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\CRC16.h

17 #i‚de‡
CRC16_H


18 
	#CRC16_H


	)

20 
	~"mbed.h
"

22 
CRC16
(c⁄° * 
d©a
, 
Àngth
);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\CRC7.cpp

17 
	~"CRC7.h
"

19 
	g«me•a˚


21 c⁄° 
	gm_CRC7TabÀ
[] = {

57 
	$CRC7
(c⁄° * 
d©a
, 
Àngth
)

60 
¸c
 = 0;

61 
i
 = 0; i < 
Àngth
; i++) {

62 
¸c
 = 
m_CRC7TabÀ
[(¸¯<< 1Ë^ 
d©a
[
i
]];

66  
¸c
;

67 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\CRC7.h

17 #i‚de‡
CRC7_H


18 
	#CRC7_H


	)

20 
	~"mbed.h
"

22 
CRC7
(c⁄° * 
d©a
, 
Àngth
);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\ChaN\ccsbcs.cpp

28 
	~"ff.h
"

30 
«me•a˚
 
	gSDFS


33 #i‡
_CODE_PAGE
 == 437

34 
	#_TBLDEF
 1

	)

36 c⁄° 
WCHAR
 
	gTbl
[] = {

55 #ñi‡
_CODE_PAGE
 == 720

56 
	#_TBLDEF
 1

	)

58 c⁄° 
WCHAR
 
	gTbl
[] = {

73 0x2261, 0x064B, 0x064C, 0x064D, 0x064E, 0x064F, 0x
O650
, 0x2248,

77 #ñi‡
_CODE_PAGE
 == 737

78 
	#_TBLDEF
 1

	)

80 c⁄° 
WCHAR
 
	gTbl
[] = {

99 #ñi‡
_CODE_PAGE
 == 775

100 
	#_TBLDEF
 1

	)

102 c⁄° 
WCHAR
 
	gTbl
[] = {

121 #ñi‡
_CODE_PAGE
 == 850

122 
	#_TBLDEF
 1

	)

124 c⁄° 
WCHAR
 
	gTbl
[] = {

143 #ñi‡
_CODE_PAGE
 == 852

144 
	#_TBLDEF
 1

	)

146 c⁄° 
WCHAR
 
	gTbl
[] = {

165 #ñi‡
_CODE_PAGE
 == 855

166 
	#_TBLDEF
 1

	)

168 c⁄° 
WCHAR
 
	gTbl
[] = {

187 #ñi‡
_CODE_PAGE
 == 857

188 
	#_TBLDEF
 1

	)

190 c⁄° 
WCHAR
 
	gTbl
[] = {

209 #ñi‡
_CODE_PAGE
 == 858

210 
	#_TBLDEF
 1

	)

212 c⁄° 
WCHAR
 
	gTbl
[] = {

231 #ñi‡
_CODE_PAGE
 == 862

232 
	#_TBLDEF
 1

	)

234 c⁄° 
WCHAR
 
	gTbl
[] = {

253 #ñi‡
_CODE_PAGE
 == 866

254 
	#_TBLDEF
 1

	)

256 c⁄° 
WCHAR
 
	gTbl
[] = {

275 #ñi‡
_CODE_PAGE
 == 874

276 
	#_TBLDEF
 1

	)

278 c⁄° 
WCHAR
 
	gTbl
[] = {

297 #ñi‡
_CODE_PAGE
 == 1250

298 
	#_TBLDEF
 1

	)

300 c⁄° 
WCHAR
 
	gTbl
[] = {

319 #ñi‡
_CODE_PAGE
 == 1251

320 
	#_TBLDEF
 1

	)

322 c⁄° 
WCHAR
 
	gTbl
[] = {

341 #ñi‡
_CODE_PAGE
 == 1252

342 
	#_TBLDEF
 1

	)

344 c⁄° 
WCHAR
 
	gTbl
[] = {

363 #ñi‡
_CODE_PAGE
 == 1253

364 
	#_TBLDEF
 1

	)

366 c⁄° 
WCHAR
 
	gTbl
[] = {

385 #ñi‡
_CODE_PAGE
 == 1254

386 
	#_TBLDEF
 1

	)

388 c⁄° 
WCHAR
 
	gTbl
[] = {

407 #ñi‡
_CODE_PAGE
 == 1255

408 
	#_TBLDEF
 1

	)

410 c⁄° 
WCHAR
 
	gTbl
[] = {

429 #ñi‡
_CODE_PAGE
 == 1256

430 
	#_TBLDEF
 1

	)

432 c⁄° 
WCHAR
 
	gTbl
[] = {

451 #ñi‡
_CODE_PAGE
 == 1257

452 
	#_TBLDEF
 1

	)

454 c⁄° 
WCHAR
 
Tbl
[] = {

473 #ñi‡
_CODE_PAGE
 == 1258

474 
	#_TBLDEF
 1

	)

476 c⁄° 
WCHAR
 
	gTbl
[] = {

498 #i‡!
_TBLDEF
 || !
_USE_LFN


499 #îr‹ 
This
 
fûe
 
is
 
nŸ
 
√eded
 
ö
 
cuºít
 
c⁄figuøti⁄
. 
Remove
 
‰om
 
the
 
¥oje˘
.

503 
WCHAR
 
ff_c⁄vît
 (

504 
WCHAR
 
§c
,

505 
UINT
 
dú


508 
WCHAR
 
	gc
;

511 i‡(
	g§c
 < 0x80) {

512 
	gc
 = 
§c
;

515 i‡(
	gdú
) {

516 
	gc
 = (
§c
 >0x100Ë? 0 : 
Tbl
[src - 0x80];

519 
	gc
 = 0; c < 0x80; c++) {

520 i‡(
	g§c
 =
Tbl
[
c
]) ;

522 
	gc
 = (
c
 + 0x80) & 0xFF;

526  
	gc
;

530 
WCHAR
 
ff_wtouµî
 (

531 
WCHAR
 
chr


534 c⁄° 
WCHAR
 
	gtbl_lowî
[] = { 0x61, 0x62, 0x63, 0x64, 0x65, 0x66, 0x67, 0x68, 0x69, 0x6A, 0x6B, 0x6C, 0x6D, 0x6E, 0x6F, 0x70, 0x71, 0x72, 0x73, 0x74, 0x75, 0x76, 0x77, 0x78, 0x79, 0x7A, 0xA1, 0x00A2, 0x00A3, 0x00A5, 0x00AC, 0x00AF, 0xE0, 0xE1, 0xE2, 0xE3, 0xE4, 0xE5, 0xE6, 0xE7, 0xE8, 0xE9, 0xEA, 0xEB, 0xEC, 0xED, 0xEE, 0xEF, 0xF0, 0xF1, 0xF2, 0xF3, 0xF4, 0xF5, 0xF6, 0xF8, 0xF9, 0xFA, 0xFB, 0xFC, 0xFD, 0xFE, 0x0FF, 0x101, 0x103, 0x105, 0x107, 0x109, 0x10B, 0x10D, 0x10F, 0x111, 0x113, 0x115, 0x117, 0x119, 0x11B, 0x11D, 0x11F, 0x121, 0x123, 0x125, 0x127, 0x129, 0x12B, 0x12D, 0x12F, 0x131, 0x133, 0x135, 0x137, 0x13A, 0x13C, 0x13E, 0x140, 0x142, 0x144, 0x146, 0x148, 0x14B, 0x14D, 0x14F, 0x151, 0x153, 0x155, 0x157, 0x159, 0x15B, 0x15D, 0x15F, 0x161, 0x163, 0x165, 0x167, 0x169, 0x16B, 0x16D, 0x16F, 0x171, 0x173, 0x175, 0x177, 0x17A, 0x17C, 0x17E, 0x192, 0x3B1, 0x3B2, 0x3B3, 0x3B4, 0x3B5, 0x3B6, 0x3B7, 0x3B8, 0x3B9, 0x3BA, 0x3BB, 0x3BC, 0x3BD, 0x3BE, 0x3BF, 0x3C0, 0x3C1, 0x3C3, 0x3C4, 0x3C5, 0x3C6, 0x3C7, 0x3C8, 0x3C9, 0x3CA, 0x430, 0x431, 0x432, 0x433, 0x434, 0x435, 0x436, 0x437, 0x438, 0x439, 0x43A, 0x43B, 0x43C, 0x43D, 0x43E, 0x43F, 0x440, 0x441, 0x442, 0x443, 0x444, 0x445, 0x446, 0x447, 0x448, 0x449, 0x44A, 0x44B, 0x44C, 0x44D, 0x44E, 0x44F, 0x451, 0x452, 0x453, 0x454, 0x455, 0x456, 0x457, 0x458, 0x459, 0x45A, 0x45B, 0x45C, 0x45E, 0x45F, 0x2170, 0x2171, 0x2172, 0x2173, 0x2174, 0x2175, 0x2176, 0x2177, 0x2178, 0x2179, 0x217A, 0x217B, 0x217C, 0x217D, 0x217E, 0x217F, 0xFF41, 0xFF42, 0xFF43, 0xFF44, 0xFF45, 0xFF46, 0xFF47, 0xFF48, 0xFF49, 0xFF4A, 0xFF4B, 0xFF4C, 0xFF4D, 0xFF4E, 0xFF4F, 0xFF50, 0xFF51, 0xFF52, 0xFF53, 0xFF54, 0xFF55, 0xFF56, 0xFF57, 0xFF58, 0xFF59, 0xFF5A, 0 };

535 c⁄° 
WCHAR
 
	gtbl_uµî
[] = { 0x41, 0x42, 0x43, 0x44, 0x45, 0x46, 0x47, 0x48, 0x49, 0x4A, 0x4B, 0x4C, 0x4D, 0x4E, 0x4F, 0x50, 0x51, 0x52, 0x53, 0x54, 0x55, 0x56, 0x57, 0x58, 0x59, 0x5A, 0x21, 0xFFE0, 0xFFE1, 0xFFE5, 0xFFE2, 0xFFE3, 0xC0, 0xC1, 0xC2, 0xC3, 0xC4, 0xC5, 0xC6, 0xC7, 0xC8, 0xC9, 0xCA, 0xCB, 0xCC, 0xCD, 0xCE, 0xCF, 0xD0, 0xD1, 0xD2, 0xD3, 0xD4, 0xD5, 0xD6, 0xD8, 0xD9, 0xDA, 0xDB, 0xDC, 0xDD, 0xDE, 0x178, 0x100, 0x102, 0x104, 0x106, 0x108, 0x10A, 0x10C, 0x10E, 0x110, 0x112, 0x114, 0x116, 0x118, 0x11A, 0x11C, 0x11E, 0x120, 0x122, 0x124, 0x126, 0x128, 0x12A, 0x12C, 0x12E, 0x130, 0x132, 0x134, 0x136, 0x139, 0x13B, 0x13D, 0x13F, 0x141, 0x143, 0x145, 0x147, 0x14A, 0x14C, 0x14E, 0x150, 0x152, 0x154, 0x156, 0x158, 0x15A, 0x15C, 0x15E, 0x160, 0x162, 0x164, 0x166, 0x168, 0x16A, 0x16C, 0x16E, 0x170, 0x172, 0x174, 0x176, 0x179, 0x17B, 0x17D, 0x191, 0x391, 0x392, 0x393, 0x394, 0x395, 0x396, 0x397, 0x398, 0x399, 0x39A, 0x39B, 0x39C, 0x39D, 0x39E, 0x39F, 0x3A0, 0x3A1, 0x3A3, 0x3A4, 0x3A5, 0x3A6, 0x3A7, 0x3A8, 0x3A9, 0x3AA, 0x410, 0x411, 0x412, 0x413, 0x414, 0x415, 0x416, 0x417, 0x418, 0x419, 0x41A, 0x41B, 0x41C, 0x41D, 0x41E, 0x41F, 0x420, 0x421, 0x422, 0x423, 0x424, 0x425, 0x426, 0x427, 0x428, 0x429, 0x42A, 0x42B, 0x42C, 0x42D, 0x42E, 0x42F, 0x401, 0x402, 0x403, 0x404, 0x405, 0x406, 0x407, 0x408, 0x409, 0x40A, 0x40B, 0x40C, 0x40E, 0x40F, 0x2160, 0x2161, 0x2162, 0x2163, 0x2164, 0x2165, 0x2166, 0x2167, 0x2168, 0x2169, 0x216A, 0x216B, 0x216C, 0x216D, 0x216E, 0x216F, 0xFF21, 0xFF22, 0xFF23, 0xFF24, 0xFF25, 0xFF26, 0xFF27, 0xFF28, 0xFF29, 0xFF2A, 0xFF2B, 0xFF2C, 0xFF2D, 0xFF2E, 0xFF2F, 0xFF30, 0xFF31, 0xFF32, 0xFF33, 0xFF34, 0xFF35, 0xFF36, 0xFF37, 0xFF38, 0xFF39, 0xFF3A, 0 };

536 
	gi
;

539 
	gi
 = 0; 
	gtbl_lowî
[
i
] && 
	gchr
 !
tbl_lowî
[i]; i++) ;

541  
	gtbl_lowî
[
i
] ? 
	gtbl_uµî
[i] : 
chr
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\ChaN\diskio.cpp

7 
	~"ffc⁄f.h
"

8 
	~"sdfs_diskio.h
"

10 
	~"mbed_debug.h
"

11 
	~"FATFûeSy°em.h
"

13 
usög
 
«me•a˚
 
	gmbed
;

15 
«me•a˚
 
	gSDFS


18 
DSTATUS
 
disk_öôülize
 (

19 
BYTE
 
drv


22 
debug_if
(
FFS_DBG
, "disk_öôülizê⁄ drv [%d]\n", 
drv
);

23  (
	gDSTATUS
)
	gFATFûeSy°em
::
_ffs
[
drv
]->
disk_öôülize
();

26 
DSTATUS
 
disk_°©us
 (

27 
BYTE
 
drv


30 
debug_if
(
FFS_DBG
, "disk_°©u†⁄ drv [%d]\n", 
drv
);

31  (
	gDSTATUS
)
	gFATFûeSy°em
::
_ffs
[
drv
]->
disk_°©us
();

34 
DRESULT
 
disk_ªad
 (

35 
BYTE
 
drv
,

36 
BYTE
 *
buff
,

37 
DWORD
 
£˘‹
,

38 
BYTE
 
cou¡


41 
debug_if
(
FFS_DBG
, "disk_ªad(£˘‹ %d, cou¡ %dË⁄ drv [%d]\n", 
£˘‹
, 
cou¡
, 
drv
);

42 i‡(
	gFATFûeSy°em
::
_ffs
[
drv
]->
disk_ªad
((
uöt8_t
*)
buff
, 
£˘‹
, 
cou¡
))

43  
	gRES_PARERR
;

45  
	gRES_OK
;

48 #i‡
_READONLY
 == 0

49 
DRESULT
 
disk_wrôe
 (

50 
BYTE
 
drv
,

51 c⁄° 
BYTE
 *
buff
,

52 
DWORD
 
£˘‹
,

53 
BYTE
 
cou¡


56 
debug_if
(
FFS_DBG
, "disk_wrôe(£˘‹ %d, cou¡ %dË⁄ drv [%d]\n", 
£˘‹
, 
cou¡
, 
drv
);

57 i‡(
	gFATFûeSy°em
::
_ffs
[
drv
]->
disk_wrôe
((
uöt8_t
*)
buff
, 
£˘‹
, 
cou¡
))

58  
	gRES_PARERR
;

60  
	gRES_OK
;

64 
DRESULT
 
disk_io˘l
 (

65 
BYTE
 
drv
,

66 
BYTE
 
˘æ
,

67 *
buff


70 
debug_if
(
FFS_DBG
, "disk_io˘l(%d)\n", 
˘æ
);

71 
	g˘æ
) {

72 
	gCTRL_SYNC
:

73 if(
FATFûeSy°em
::
_ffs
[
drv
] =
NULL
) {

74  
RES_NOTRDY
;

75 } if(
	gFATFûeSy°em
::
_ffs
[
drv
]->
disk_sync
()) {

76  
RES_ERROR
;

78  
	gRES_OK
;

79 
	gGET_SECTOR_COUNT
:

80 if(
FATFûeSy°em
::
_ffs
[
drv
] =
NULL
) {

81  
RES_NOTRDY
;

83 
DWORD
 
	gªs
 = 
FATFûeSy°em
::
_ffs
[
drv
]->
disk_£˘‹s
();

84 if(
	gªs
 > 0) {

85 *((
	gDWORD
*)
	gbuff
Ë
ªs
;

86  
	gRES_OK
;

88  
	gRES_ERROR
;

91 
	gGET_BLOCK_SIZE
:

92 *((
DWORD
*)
buff
) = 1;

93  
	gRES_OK
;

96  
	gRES_PARERR
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\ChaN\ff.cpp

98 
	~"ff.h
"

99 
	~"sdfs_diskio.h
"

101 
«me•a˚
 
	gSDFS


111 #i‡
_SDFS_FATFS
 != 4004

112 #îr‹ 
Wr⁄g
 
ö˛ude
 
fûe
 (
ff
.
h
).

117 #i‡
_MAX_SS
 != 512 && _MAX_SS != 1024 && _MAX_SS != 2048 && _MAX_SS != 4096

118 #îr‹ 
Wr⁄g
 
£˘‹
 
size
.

120 #i‡
_MAX_SS
 != 512

121 
	#SS
(
fs
Ë((fs)->
ssize
Ë

	)

123 
	#SS
(
fs
Ë512U

	)

128 #i‡
_FS_REENTRANT


129 #i‡
_USE_LFN
 == 1

130 #îr‹ 
Sètic
 
LFN
 
w‹k
 
¨ó
 
mu°
 
nŸ
 
be
 
u£d
 
ö
 
ª
-
íå™t
 
c⁄figuøti⁄
.

132 
	#ENTER_FF
(
fs
Ë{ i‡(!
	`lock_fs
(fs)Ë 
FR_TIMEOUT
; }

	)

133 
	#LEAVE_FF
(
fs
, 
ªs
Ë{ 
	`u∆ock_fs
(fs,Ñes); Ñes; }

	)

135 
	#ENTER_FF
(
fs
)

	)

136 
	#LEAVE_FF
(
fs
, 
ªs
Ë 
	)
res

139 
	#ABORT
(
fs
, 
ªs
Ë{ 
Â
->
Êag
 |
FA__ERROR
; 
	`LEAVE_FF
(fs,Ñes); }

	)

143 #i‡
_FS_LOCK


144 #i‡
_FS_READONLY


145 #îr‹ 
_FS_LOCK
 
mu°
 
be
 0 
⁄
 
ªad
-
⁄ly
 
cfg
.

148 
FATFS
 *
	gfs
;

149 
DWORD
 
	g˛u
;

150 
WORD
 
	gidx
;

151 
WORD
 
	g˘r
;

152 } 
	tFILESEM
;

159 #i‡
_CODE_PAGE
 == 932

160 
	#_DF1S
 0x81

	)

161 
	#_DF1E
 0x9F

	)

162 
	#_DF2S
 0xE0

	)

163 
	#_DF2E
 0xFC

	)

164 
	#_DS1S
 0x40

	)

165 
	#_DS1E
 0x7E

	)

166 
	#_DS2S
 0x80

	)

167 
	#_DS2E
 0xFC

	)

169 #ñi‡
_CODE_PAGE
 == 936

170 
	#_DF1S
 0x81

	)

171 
	#_DF1E
 0xFE

	)

172 
	#_DS1S
 0x40

	)

173 
	#_DS1E
 0x7E

	)

174 
	#_DS2S
 0x80

	)

175 
	#_DS2E
 0xFE

	)

177 #ñi‡
_CODE_PAGE
 == 949

178 
	#_DF1S
 0x81

	)

179 
	#_DF1E
 0xFE

	)

180 
	#_DS1S
 0x41

	)

181 
	#_DS1E
 0x5A

	)

182 
	#_DS2S
 0x61

	)

183 
	#_DS2E
 0x7A

	)

184 
	#_DS3S
 0x81

	)

185 
	#_DS3E
 0xFE

	)

187 #ñi‡
_CODE_PAGE
 == 950

188 
	#_DF1S
 0x81

	)

189 
	#_DF1E
 0xFE

	)

190 
	#_DS1S
 0x40

	)

191 
	#_DS1E
 0x7E

	)

192 
	#_DS2S
 0xA1

	)

193 
	#_DS2E
 0xFE

	)

195 #ñi‡
_CODE_PAGE
 == 437

196 
	#_DF1S
 0

	)

197 
	#_EXCVT
 {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F,0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \

200 0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}

	)

202 #ñi‡
_CODE_PAGE
 == 720

203 
	#_DF1S
 0

	)

204 
	#_EXCVT
 {0x80,0x81,0x45,0x41,0x84,0x41,0x86,0x43,0x45,0x45,0x45,0x49,0x49,0x8D,0x8E,0x8F,0x90,0x92,0x92,0x93,0x94,0x95,0x49,0x49,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \

207 0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}

	)

209 #ñi‡
_CODE_PAGE
 == 737

210 
	#_DF1S
 0

	)

211 
	#_EXCVT
 {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x92,0x92,0x93,0x94,0x95,0x96,0x97,0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87, \

214 0x97,0xEA,0xEB,0xEC,0xE4,0xED,0xEE,0xE7,0xE8,0xF1,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}

	)

216 #ñi‡
_CODE_PAGE
 == 775

217 
	#_DF1S
 0

	)

218 
	#_EXCVT
 {0x80,0x9A,0x91,0xA0,0x8E,0x95,0x8F,0x80,0xAD,0xED,0x8A,0x8A,0xA1,0x8D,0x8E,0x8F,0x90,0x92,0x92,0xE2,0x99,0x95,0x96,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \

221 0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE3,0xE8,0xE8,0xEA,0xEA,0xEE,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}

	)

223 #ñi‡
_CODE_PAGE
 == 850

224 
	#_DF1S
 0

	)

225 
	#_EXCVT
 {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0xDE,0x8E,0x8F,0x90,0x92,0x92,0xE2,0x99,0xE3,0xEA,0xEB,0x59,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \

228 0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE7,0xE9,0xEA,0xEB,0xED,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}

	)

230 #ñi‡
_CODE_PAGE
 == 852

231 
	#_DF1S
 0

	)

232 
	#_EXCVT
 {0x80,0x9A,0x90,0xB6,0x8E,0xDE,0x8F,0x80,0x9D,0xD3,0x8A,0x8A,0xD7,0x8D,0x8E,0x8F,0x90,0x91,0x91,0xE2,0x99,0x95,0x95,0x97,0x97,0x99,0x9A,0x9B,0x9B,0x9D,0x9E,0x9F, \

235 0xE0,0xE1,0xE2,0xE3,0xE3,0xD5,0xE6,0xE6,0xE8,0xE9,0xE8,0xEB,0xED,0xED,0xDD,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xEB,0xFC,0xFC,0xFE,0xFF}

	)

237 #ñi‡
_CODE_PAGE
 == 855

238 
	#_DF1S
 0

	)

239 
	#_EXCVT
 {0x81,0x81,0x83,0x83,0x85,0x85,0x87,0x87,0x89,0x89,0x8B,0x8B,0x8D,0x8D,0x8F,0x8F,0x91,0x91,0x93,0x93,0x95,0x95,0x97,0x97,0x99,0x99,0x9B,0x9B,0x9D,0x9D,0x9F,0x9F, \

242 0xE0,0xE2,0xE2,0xE4,0xE4,0xE6,0xE6,0xE8,0xE8,0xEA,0xEA,0xEC,0xEC,0xEE,0xEE,0xEF,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFD,0xFE,0xFF}

	)

244 #ñi‡
_CODE_PAGE
 == 857

245 
	#_DF1S
 0

	)

246 
	#_EXCVT
 {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0x98,0x8E,0x8F,0x90,0x92,0x92,0xE2,0x99,0xE3,0xEA,0xEB,0x98,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9E, \

249 0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xDE,0x59,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}

	)

251 #ñi‡
_CODE_PAGE
 == 858

252 
	#_DF1S
 0

	)

253 
	#_EXCVT
 {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0xDE,0x8E,0x8F,0x90,0x92,0x92,0xE2,0x99,0xE3,0xEA,0xEB,0x59,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \

256 0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE7,0xE9,0xEA,0xEB,0xED,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}

	)

258 #ñi‡
_CODE_PAGE
 == 862

259 
	#_DF1S
 0

	)

260 
	#_EXCVT
 {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \

263 0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}

	)

265 #ñi‡
_CODE_PAGE
 == 866

266 
	#_DF1S
 0

	)

267 
	#_EXCVT
 {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \

270 0x90,0x91,0x92,0x93,0x9d,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F,0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}

	)

272 #ñi‡
_CODE_PAGE
 == 874

273 
	#_DF1S
 0

	)

274 
	#_EXCVT
 {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \

277 0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}

	)

279 #ñi‡
_CODE_PAGE
 == 1250

280 
	#_DF1S
 0

	)

281 
	#_EXCVT
 {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x8A,0x9B,0x8C,0x8D,0x8E,0x8F, \

284 0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xF7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xFF}

	)

286 #ñi‡
_CODE_PAGE
 == 1251

287 
	#_DF1S
 0

	)

288 
	#_EXCVT
 {0x80,0x81,0x82,0x82,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x80,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x8A,0x9B,0x8C,0x8D,0x8E,0x8F, \

291 0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF}

	)

293 #ñi‡
_CODE_PAGE
 == 1252

294 
	#_DF1S
 0

	)

295 
	#_EXCVT
 {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0xAd,0x9B,0x8C,0x9D,0xAE,0x9F, \

298 0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xF7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0x9F}

	)

300 #ñi‡
_CODE_PAGE
 == 1253

301 
	#_DF1S
 0

	)

302 
	#_EXCVT
 {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \

305 0xE0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xF2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xFB,0xBC,0xFD,0xBF,0xFF}

	)

307 #ñi‡
_CODE_PAGE
 == 1254

308 
	#_DF1S
 0

	)

309 
	#_EXCVT
 {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x8A,0x9B,0x8C,0x9D,0x9E,0x9F, \

312 0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xF7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0x9F}

	)

314 #ñi‡
_CODE_PAGE
 == 1255

315 
	#_DF1S
 0

	)

316 
	#_EXCVT
 {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \

319 0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}

	)

321 #ñi‡
_CODE_PAGE
 == 1256

322 
	#_DF1S
 0

	)

323 
	#_EXCVT
 {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x8C,0x9D,0x9E,0x9F, \

326 0x41,0xE1,0x41,0xE3,0xE4,0xE5,0xE6,0x43,0x45,0x45,0x45,0x45,0xEC,0xED,0x49,0x49,0xF0,0xF1,0xF2,0xF3,0x4F,0xF5,0xF6,0xF7,0xF8,0x55,0xFA,0x55,0x55,0xFD,0xFE,0xFF}

	)

328 #ñi‡
_CODE_PAGE
 == 1257

329 
	#_DF1S
 0

	)

330 
	#_EXCVT
 {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \

333 0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xF7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xFF}

	)

335 #ñi‡
_CODE_PAGE
 == 1258

336 
	#_DF1S
 0

	)

337 
	#_EXCVT
 {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0xAC,0x9D,0x9E,0x9F, \

340 0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xEC,0xCD,0xCE,0xCF,0xD0,0xD1,0xF2,0xD3,0xD4,0xD5,0xD6,0xF7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xFE,0x9F}

	)

342 #ñi‡
_CODE_PAGE
 == 1

343 #i‡
_USE_LFN


344 #îr‹ 
C™nŸ
 
u£
 
LFN
 
„©uª
 
wôhout
 
vÆid
 
code
 
∑ge
.

346 
	#_DF1S
 0

	)

349 #îr‹ 
Unknown
 
code
 
∑ge


355 
	#IsUµî
(
c
Ë(((c)>='A')&&((c)<='Z'))

	)

356 
	#IsLowî
(
c
Ë(((c)>='a')&&((c)<='z'))

	)

357 
	#IsDigô
(
c
Ë(((c)>='0')&&((c)<='9'))

	)

359 #i‡
_DF1S


361 #ifde‡
_DF2S


362 
	#IsDBCS1
(
c
Ë(((
BYTE
)(cË>
_DF1S
 && (BYTE)(cË<
_DF1E
Ë|| ((BYTE)(cË>
_DF2S
 && (BYTE)(cË<
_DF2E
))

	)

364 
	#IsDBCS1
(
c
Ë((
BYTE
)(cË>
_DF1S
 && (BYTE)(cË<
_DF1E
)

	)

367 #ifde‡
_DS3S


368 
	#IsDBCS2
(
c
Ë(((
BYTE
)(cË>
_DS1S
 && (BYTE)(cË<
_DS1E
Ë|| ((BYTE)(cË>
_DS2S
 && (BYTE)(cË<
_DS2E
Ë|| ((BYTE)(cË>
_DS3S
 && (BYTE)(cË<
_DS3E
))

	)

370 
	#IsDBCS2
(
c
Ë(((
BYTE
)(cË>
_DS1S
 && (BYTE)(cË<
_DS1E
Ë|| ((BYTE)(cË>
_DS2S
 && (BYTE)(cË<
_DS2E
))

	)

375 
	#IsDBCS1
(
c
Ë0

	)

376 
	#IsDBCS2
(
c
Ë0

	)

382 
	#NS
 11

	)

383 
	#NS_LOSS
 0x01

	)

384 
	#NS_LFN
 0x02

	)

385 
	#NS_LAST
 0x04

	)

386 
	#NS_BODY
 0x08

	)

387 
	#NS_EXT
 0x10

	)

388 
	#NS_DOT
 0x20

	)

393 
	#MIN_FAT16
 4086

	)

394 
	#MIN_FAT32
 65526

	)

401 
	#BS_jmpBoŸ
 0

	)

402 
	#BS_OEMName
 3

	)

403 
	#BPB_BytsPîSec
 11

	)

404 
	#BPB_SecPîClus
 13

	)

405 
	#BPB_RsvdSecC¡
 14

	)

406 
	#BPB_NumFATs
 16

	)

407 
	#BPB_RoŸE¡C¡
 17

	)

408 
	#BPB_TŸSec16
 19

	)

409 
	#BPB_Medü
 21

	)

410 
	#BPB_FATSz16
 22

	)

411 
	#BPB_SecPîTrk
 24

	)

412 
	#BPB_NumHóds
 26

	)

413 
	#BPB_HiddSec
 28

	)

414 
	#BPB_TŸSec32
 32

	)

415 
	#BS_DrvNum
 36

	)

416 
	#BS_BoŸSig
 38

	)

417 
	#BS_VﬁID
 39

	)

418 
	#BS_VﬁLab
 43

	)

419 
	#BS_FûSysTy≥
 54

	)

420 
	#BPB_FATSz32
 36

	)

421 
	#BPB_ExtFœgs
 40

	)

422 
	#BPB_FSVî
 42

	)

423 
	#BPB_RoŸClus
 44

	)

424 
	#BPB_FSInfo
 48

	)

425 
	#BPB_BkBoŸSec
 50

	)

426 
	#BS_DrvNum32
 64

	)

427 
	#BS_BoŸSig32
 66

	)

428 
	#BS_VﬁID32
 67

	)

429 
	#BS_VﬁLab32
 71

	)

430 
	#BS_FûSysTy≥32
 82

	)

431 
	#FSI_LódSig
 0

	)

432 
	#FSI_SåucSig
 484

	)

433 
	#FSI_Fªe_Cou¡
 488

	)

434 
	#FSI_Nxt_Fªe
 492

	)

435 
	#MBR_TabÀ
 446

	)

436 
	#SZ_PTE
 16

	)

437 
	#BS_55AA
 510

	)

439 
	#DIR_Name
 0

	)

440 
	#DIR_Aâr
 11

	)

441 
	#DIR_NTªs
 12

	)

442 
	#DIR_CπTimeTíth
 13

	)

443 
	#DIR_CπTime
 14

	)

444 
	#DIR_CπD©e
 16

	)

445 
	#DIR_L°AccD©e
 18

	)

446 
	#DIR_F°ClusHI
 20

	)

447 
	#DIR_WπTime
 22

	)

448 
	#DIR_WπD©e
 24

	)

449 
	#DIR_F°ClusLO
 26

	)

450 
	#DIR_FûeSize
 28

	)

451 
	#LDIR_Ord
 0

	)

452 
	#LDIR_Aâr
 11

	)

453 
	#LDIR_Ty≥
 12

	)

454 
	#LDIR_Chksum
 13

	)

455 
	#LDIR_F°ClusLO
 26

	)

456 
	#SZ_DIR
 32

	)

457 
	#LLE
 0x40

	)

458 
	#DDE
 0xE5

	)

459 
	#NDDE
 0x05

	)

470 #i‡
_VOLUMES


472 
FATFS
 *
	gF©Fs
[
_VOLUMES
];

474 #îr‹ 
Numbî
 
of
 
vﬁumes
 
mu°
 
nŸ
 
be
 0.

478 
WORD
 
	gFsid
;

480 #i‡
_FS_RPATH


482 
BYTE
 
	gCuºVﬁ
;

485 #i‡
_FS_LOCK


487 
FILESEM
 
	gFûes
[
_FS_LOCK
];

490 #i‡
_USE_LFN
 == 0

491 
	#DEF_NAMEBUF
 
BYTE
 
s‚
[12]

	)

492 
	#INIT_BUF
(
dobj
Ë(dobj).
‚
 = 
s‚


	)

493 
	#FREE_BUF
()

	)

495 #ñi‡
_USE_LFN
 == 1

496 
WCHAR
 
	gL‚Buf
[
_MAX_LFN
+1];

497 
	#DEF_NAMEBUF
 
BYTE
 
s‚
[12]

	)

498 
	#INIT_BUF
(
dobj
Ë{ (dobj).
‚
 = 
s‚
; (dobj).
l‚
 = 
L‚Buf
; }

	)

499 
	#FREE_BUF
()

	)

501 #ñi‡
_USE_LFN
 == 2

502 
	#DEF_NAMEBUF
 
BYTE
 
s‚
[12]; 
WCHAR
 
lbuf
[
_MAX_LFN
+1]

	)

503 
	#INIT_BUF
(
dobj
Ë{ (dobj).
‚
 = 
s‚
; (dobj).
l‚
 = 
lbuf
; }

	)

504 
	#FREE_BUF
()

	)

506 #ñi‡
_USE_LFN
 == 3

507 
	#DEF_NAMEBUF
 
BYTE
 
s‚
[12]; 
WCHAR
 *
l‚


	)

508 
	#INIT_BUF
(
dobj
Ë{ 
l‚
 = 
	`ff_memÆloc
((
_MAX_LFN
 + 1) * 2); \

509 i‡(!
l‚
Ë
	`LEAVE_FF
((
dobj
).
fs
, 
FR_NOT_ENOUGH_CORE
); \

510 (
dobj
).
l‚
 =Ü‚; (dobj).
‚
 = 
s‚
; }

	)

511 
	#FREE_BUF
(Ë
	`ff_mem‰ì
(
l‚
)

	)

514 #îr‹ 
Wr⁄g
 
LFN
 
c⁄figuøti⁄
.

533 
mem_˝y
 (* 
d°
, c⁄° * 
§c
, 
UINT
 
˙t
) {

534 
BYTE
 *
	gd
 = (BYTE*)
d°
;

535 c⁄° 
BYTE
 *
	gs
 = (c⁄° BYTE*)
§c
;

537 #i‡
_WORD_ACCESS
 == 1

538 
	g˙t
 >=  ()) {

539 *(*)
d
 = *(*)
s
;

540 
	gd
 + (); 
	gs
 +=  ();

541 
	g˙t
 -=  ();

544 
	g˙t
--)

545 *
	gd
++ = *
s
++;

550 
mem_£t
 (* 
d°
, 
vÆ
, 
UINT
 
˙t
) {

551 
BYTE
 *
	gd
 = (BYTE*)
d°
;

553 
	g˙t
--)

554 *
	gd
++ = (
BYTE
)
vÆ
;

559 
mem_cmp
 (c⁄° * 
d°
, c⁄° * 
§c
, 
UINT
 
˙t
) {

560 c⁄° 
BYTE
 *
	gd
 = (c⁄° BYTE *)
d°
, *
	gs
 = (c⁄° BYTE *)
§c
;

561 
	gr
 = 0;

563 
	g˙t
-- && (
	gr
 = *
d
++ - *
s
++) == 0) ;

564  
	gr
;

569 
chk_chr
 (c⁄° * 
°r
, 
chr
) {

570 *
	g°r
 && *°∏!
chr
Ë
°r
++;

571  *
	g°r
;

579 #i‡
_FS_REENTRANT


582 
lock_fs
 (

583 
FATFS
 *
fs


586  
ff_ªq_gø¡
(
fs
->
sobj
);

591 
u∆ock_fs
 (

592 
FATFS
 *
fs
,

593 
FRESULT
 
ªs


596 i‡(
	gfs
 &&

597 
	gªs
 !
FR_NOT_ENABLED
 &&

598 
ªs
 !
FR_INVALID_DRIVE
 &&

599 
ªs
 !
FR_INVALID_OBJECT
 &&

600 
ªs
 !
FR_TIMEOUT
) {

601 
ff_ªl_gø¡
(
fs
->
sobj
);

611 #i‡
_FS_LOCK


614 
FRESULT
 
chk_lock
 (

615 
DIR
* 
dj
,

616 
acc


619 
UINT
 
	gi
, 
	gbe
;

622 
	gi
 = 
be
 = 0; i < 
	g_FS_LOCK
; i++) {

623 i‡(
	gFûes
[
i
].
	gfs
) {

624 i‡(
	gFûes
[
i
].
	gfs
 =
dj
->
fs
 &&

625 
Fûes
[
i
].
˛u
 =
dj
->
s˛u°
 &&

626 
Fûes
[
i
].
idx
 =
dj
->
ödex
) ;

628 
	gbe
++;

631 i‡(
	gi
 =
_FS_LOCK
)

632  (
be
 || 
acc
 =2Ë? 
FR_OK
 : 
FR_TOO_MANY_OPEN_FILES
;

635  (
	gacc
 || 
	gFûes
[
i
].
	g˘r
 =0x100Ë? 
FR_LOCKED
 : 
FR_OK
;

640 
íq_lock
 ()

642 
UINT
 
	gi
;

644 
	gi
 = 0; i < 
	g_FS_LOCK
 && 
	gFûes
[
i
].
	gfs
; i++) ;

645  (
	gi
 =
_FS_LOCK
) ? 0 : 1;

650 
UINT
 
öc_lock
 (

651 
DIR
* 
dj
,

652 
acc


655 
UINT
 
	gi
;

658 
	gi
 = 0; i < 
	g_FS_LOCK
; i++) {

659 i‡(
	gFûes
[
i
].
	gfs
 =
dj
->
fs
 &&

660 
Fûes
[
i
].
˛u
 =
dj
->
s˛u°
 &&

661 
Fûes
[
i
].
idx
 =
dj
->
ödex
) ;

664 i‡(
	gi
 =
_FS_LOCK
) {

665 
i
 = 0; 
	gi
 < 
	g_FS_LOCK
 && 
	gFûes
[i].
	gfs
; i++) ;

666 i‡(
	gi
 =
_FS_LOCK
)  0;

667 
	gFûes
[
i
].
	gfs
 = 
dj
->
fs
;

668 
	gFûes
[
i
].
	g˛u
 = 
dj
->
s˛u°
;

669 
	gFûes
[
i
].
	gidx
 = 
dj
->
ödex
;

670 
	gFûes
[
i
].
	g˘r
 = 0;

673 i‡(
	gacc
 && 
	gFûes
[
i
].
	g˘r
)  0;

675 
	gFûes
[
i
].
	g˘r
 = 
acc
 ? 0x100 : 
Fûes
[i].
˘r
 + 1;

677  
	gi
 + 1;

682 
FRESULT
 
dec_lock
 (

683 
UINT
 
i


686 
WORD
 
	gn
;

687 
FRESULT
 
	gªs
;

690 i‡(--
	gi
 < 
	g_FS_LOCK
) {

691 
	gn
 = 
Fûes
[
i
].
˘r
;

692 i‡(
	gn
 =0x100Ë
n
 = 0;

693 i‡(
	gn
)Ç--;

694 
	gFûes
[
i
].
	g˘r
 = 
n
;

695 i‡(!
	gn
Ë
	gFûes
[
i
].
	gfs
 = 0;

696 
	gªs
 = 
FR_OK
;

698 
	gªs
 = 
FR_INT_ERR
;

700  
	gªs
;

705 
˛ór_lock
 (

706 
FATFS
 *
fs


709 
UINT
 
	gi
;

711 
	gi
 = 0; i < 
	g_FS_LOCK
; i++) {

712 i‡(
	gFûes
[
i
].
	gfs
 =
fs
Ë
Fûes
[i].fs = 0;

724 
FRESULT
 
move_wödow
 (

725 
FATFS
 *
fs
,

726 
DWORD
 
£˘‹


729 
DWORD
 
	gw£˘
;

732 
	gw£˘
 = 
fs
->
wö£˘
;

733 i‡(
	gw£˘
 !
£˘‹
) {

734 #i‡!
_FS_READONLY


735 i‡(
fs
->
wÊag
) {

736 i‡(
disk_wrôe
(
fs
->
drv
, fs->
wö
, 
w£˘
, 1Ë!
RES_OK
)

737  
FR_DISK_ERR
;

738 
	gfs
->
	gwÊag
 = 0;

739 i‡(
	gw£˘
 < (
	gfs
->
	gÁtba£
 + fs->
	gfsize
)) {

740 
BYTE
 
	gnf
;

741 
	gnf
 = 
fs
->
n_Áts
;Çf > 1;Çf--) {

742 
	gw£˘
 +
fs
->
fsize
;

743 
disk_wrôe
(
fs
->
drv
, fs->
wö
, 
w£˘
, 1);

748 i‡(
	g£˘‹
) {

749 i‡(
disk_ªad
(
fs
->
drv
, fs->
wö
, 
£˘‹
, 1Ë!
RES_OK
)

750  
FR_DISK_ERR
;

751 
	gfs
->
	gwö£˘
 = 
£˘‹
;

755  
	gFR_OK
;

764 #i‡!
_FS_READONLY


766 
FRESULT
 
sync
 (

767 
FATFS
 *
fs


770 
FRESULT
 
	gªs
;

773 
	gªs
 = 
move_wödow
(
fs
, 0);

774 i‡(
	gªs
 =
FR_OK
) {

776 i‡(
fs
->
fs_ty≥
 =
FS_FAT32
 && fs->
fsi_Êag
) {

777 
fs
->
wö£˘
 = 0;

779 
mem_£t
(
fs
->
wö
, 0, 512);

780 
ST_WORD
(
fs
->
wö
+
BS_55AA
, 0xAA55);

781 
ST_DWORD
(
fs
->
wö
+
FSI_LódSig
, 0x41615252);

782 
ST_DWORD
(
fs
->
wö
+
FSI_SåucSig
, 0x61417272);

783 
ST_DWORD
(
fs
->
wö
+
FSI_Fªe_Cou¡
, fs->
‰ì_˛u°
);

784 
ST_DWORD
(
fs
->
wö
+
FSI_Nxt_Fªe
, fs->
œ°_˛u°
);

786 
disk_wrôe
(
fs
->
drv
, fs->
wö
, fs->
fsi_£˘‹
, 1);

787 
	gfs
->
	gfsi_Êag
 = 0;

790 i‡(
disk_io˘l
(
fs
->
drv
, 
CTRL_SYNC
, 0Ë!
RES_OK
)

791 
ªs
 = 
FR_DISK_ERR
;

794  
	gªs
;

806 
DWORD
 
˛u°2£˘
 (

807 
FATFS
 *
fs
,

808 
DWORD
 
˛°


811 
	g˛°
 -= 2;

812 i‡(
	g˛°
 >(
fs
->
n_Áã¡
 - 2))  0;

813  
˛°
 * 
	gfs
->
	gcsize
 + fs->
	gd©aba£
;

823 
DWORD
 
gë_Át
 (

824 
FATFS
 *
fs
,

825 
DWORD
 
˛°


828 
UINT
 
	gwc
, 
	gbc
;

829 
BYTE
 *
	gp
;

832 i‡(
	g˛°
 < 2 || cl° >
fs
->
n_Áã¡
)

835 
	gfs
->
	gfs_ty≥
) {

836 
	gFS_FAT12
 :

837 
bc
 = (
UINT
)
˛°
; 
	gbc
 += bc / 2;

838 i‡(
move_wödow
(
fs
, fs->
Átba£
 + (
bc
 / 
SS
(fs)))) ;

839 
	gwc
 = 
fs
->
wö
[
bc
 % 
SS
(fs)]; 
	gbc
++;

840 i‡(
move_wödow
(
fs
, fs->
Átba£
 + (
bc
 / 
SS
(fs)))) ;

841 
	gwc
 |
fs
->
wö
[
bc
 % 
SS
(fs)] << 8;

842  (
	g˛°
 & 1Ë? (
	gwc
 >> 4Ë: (
wc
 & 0xFFF);

844 
	gFS_FAT16
 :

845 i‡(
move_wödow
(
fs
, fs->
Átba£
 + (
˛°
 / (
SS
(fs) / 2)))) ;

846 
	gp
 = &
fs
->
wö
[
˛°
 * 2 % 
SS
(fs)];

847  
LD_WORD
(
p
);

849 
	gFS_FAT32
 :

850 i‡(
move_wödow
(
fs
, fs->
Átba£
 + (
˛°
 / (
SS
(fs) / 4)))) ;

851 
	gp
 = &
fs
->
wö
[
˛°
 * 4 % 
SS
(fs)];

852  
LD_DWORD
(
p
) & 0x0FFFFFFF;

864 #i‡!
_FS_READONLY


866 
FRESULT
 
put_Át
 (

867 
FATFS
 *
fs
,

868 
DWORD
 
˛°
,

869 
DWORD
 
vÆ


872 
UINT
 
	gbc
;

873 
BYTE
 *
	gp
;

874 
FRESULT
 
	gªs
;

877 i‡(
	g˛°
 < 2 || cl° >
fs
->
n_Áã¡
) {

878 
ªs
 = 
FR_INT_ERR
;

881 
	gfs
->
	gfs_ty≥
) {

882 
	gFS_FAT12
 :

883 
bc
 = (
UINT
)
˛°
; 
	gbc
 += bc / 2;

884 
	gªs
 = 
move_wödow
(
fs
, fs->
Átba£
 + (
bc
 / 
SS
(fs)));

885 i‡(
	gªs
 !
FR_OK
) ;

886 
	gp
 = &
fs
->
wö
[
bc
 % 
SS
(fs)];

887 *
	gp
 = (
˛°
 & 1Ë? ((*
p
 & 0x0FË| ((
BYTE
)
vÆ
 << 4)) : (BYTE)val;

888 
	gbc
++;

889 
	gfs
->
	gwÊag
 = 1;

890 
	gªs
 = 
move_wödow
(
fs
, fs->
Átba£
 + (
bc
 / 
SS
(fs)));

891 i‡(
	gªs
 !
FR_OK
) ;

892 
	gp
 = &
fs
->
wö
[
bc
 % 
SS
(fs)];

893 *
	gp
 = (
˛°
 & 1Ë? (
BYTE
)(
vÆ
 >> 4Ë: ((*
p
 & 0xF0) | ((BYTE)(val >> 8) & 0x0F));

896 
	gFS_FAT16
 :

897 
ªs
 = 
move_wödow
(
fs
, fs->
Átba£
 + (
˛°
 / (
SS
(fs) / 2)));

898 i‡(
	gªs
 !
FR_OK
) ;

899 
	gp
 = &
fs
->
wö
[
˛°
 * 2 % 
SS
(fs)];

900 
ST_WORD
(
p
, (
WORD
)
vÆ
);

903 
	gFS_FAT32
 :

904 
ªs
 = 
move_wödow
(
fs
, fs->
Átba£
 + (
˛°
 / (
SS
(fs) / 4)));

905 i‡(
	gªs
 !
FR_OK
) ;

906 
	gp
 = &
fs
->
wö
[
˛°
 * 4 % 
SS
(fs)];

907 
	gvÆ
 |
LD_DWORD
(
p
) & 0xF0000000;

908 
ST_DWORD
(
p
, 
vÆ
);

912 
ªs
 = 
FR_INT_ERR
;

914 
	gfs
->
	gwÊag
 = 1;

917  
	gªs
;

927 #i‡!
_FS_READONLY


929 
FRESULT
 
ªmove_chaö
 (

930 
FATFS
 *
fs
,

931 
DWORD
 
˛°


934 
FRESULT
 
	gªs
;

935 
DWORD
 
	gnxt
;

936 #i‡
_USE_ERASE


937 
DWORD
 
	gs˛
 = 
˛°
, 
	ge˛
 = cl°, 
	gπ
[2];

940 i‡(
	g˛°
 < 2 || cl° >
fs
->
n_Áã¡
) {

941 
ªs
 = 
FR_INT_ERR
;

944 
	gªs
 = 
FR_OK
;

945 
	g˛°
 < 
	gfs
->
	gn_Áã¡
) {

946 
	gnxt
 = 
gë_Át
(
fs
, 
˛°
);

947 i‡(
	gnxt
 == 0) ;

948 i‡(
	gnxt
 =1Ë{ 
ªs
 = 
FR_INT_ERR
; ; }

949 i‡(
	gnxt
 =0xFFFFFFFFË{ 
ªs
 = 
FR_DISK_ERR
; ; }

950 
	gªs
 = 
put_Át
(
fs
, 
˛°
, 0);

951 i‡(
	gªs
 !
FR_OK
) ;

952 i‡(
	gfs
->
	g‰ì_˛u°
 != 0xFFFFFFFF) {

953 
fs
->
‰ì_˛u°
++;

954 
	gfs
->
	gfsi_Êag
 = 1;

956 #i‡
_USE_ERASE


957 i‡(
	ge˛
 + 1 =
nxt
) {

958 
e˛
 = 
nxt
;

960 
	gπ
[0] = 
˛u°2£˘
(
fs
, 
s˛
);

961 
	gπ
[1] = 
˛u°2£˘
(
fs
, 
e˛
Ë+ 
	gfs
->
	gcsize
 - 1;

962 
disk_io˘l
(
fs
->
drv
, 
CTRL_ERASE_SECTOR
, 
π
);

963 
	gs˛
 = 
e˛
 = 
nxt
;

966 
	g˛°
 = 
nxt
;

970  
	gªs
;

980 #i‡!
_FS_READONLY


982 
DWORD
 
¸óã_chaö
 (

983 
FATFS
 *
fs
,

984 
DWORD
 
˛°


987 
DWORD
 
	gcs
, 
	gn˛
, 
	gs˛
;

988 
FRESULT
 
	gªs
;

991 i‡(
	g˛°
 == 0) {

992 
s˛
 = 
fs
->
œ°_˛u°
;

993 i‡(!
	gs˛
 || s˛ >
fs
->
n_Áã¡
Ë
s˛
 = 1;

996 
	gcs
 = 
gë_Át
(
fs
, 
˛°
);

997 i‡(
	gcs
 < 2)  1;

998 i‡(
	gcs
 < 
	gfs
->
	gn_Áã¡
)  cs;

999 
	gs˛
 = 
˛°
;

1002 
	gn˛
 = 
s˛
;

1004 
	gn˛
++;

1005 i‡(
	gn˛
 >
fs
->
n_Áã¡
) {

1006 
n˛
 = 2;

1007 i‡(
	gn˛
 > 
	gs˛
)  0;

1009 
	gcs
 = 
gë_Át
(
fs
, 
n˛
);

1010 i‡(
	gcs
 == 0) ;

1011 i‡(
	gcs
 =0xFFFFFFFF || 
cs
 == 1)

1012  
cs
;

1013 i‡(
	gn˛
 =
s˛
)  0;

1016 
	gªs
 = 
put_Át
(
fs
, 
n˛
, 0x0FFFFFFF);

1017 i‡(
	gªs
 =
FR_OK
 && 
˛°
 != 0) {

1018 
ªs
 = 
put_Át
(
fs
, 
˛°
, 
n˛
);

1020 i‡(
	gªs
 =
FR_OK
) {

1021 
fs
->
œ°_˛u°
 = 
n˛
;

1022 i‡(
	gfs
->
	g‰ì_˛u°
 != 0xFFFFFFFF) {

1023 
fs
->
‰ì_˛u°
--;

1024 
	gfs
->
	gfsi_Êag
 = 1;

1027 
	gn˛
 = (
ªs
 =
FR_DISK_ERR
) ? 0xFFFFFFFF : 1;

1030  
	gn˛
;

1040 #i‡
_USE_FASTSEEK


1042 
DWORD
 
˛mt_˛u°
 (

1043 
FIL
* 
Â
,

1044 
DWORD
 
ofs


1047 
DWORD
 
	g˛
, 
	gn˛
, *
	gtbl
;

1050 
	gtbl
 = 
Â
->
˛tbl
 + 1;

1051 
	g˛
 = 
ofs
 / 
SS
(
Â
->
fs
Ë/ fp->fs->
csize
;

1053 
	gn˛
 = *
tbl
++;

1054 i‡(!
	gn˛
)  0;

1055 i‡(
	g˛
 < 
	gn˛
) ;

1056 
	g˛
 -
n˛
; 
	gtbl
++;

1058  
	g˛
 + *
	gtbl
;

1069 
FRESULT
 
dú_sdi
 (

1070 
FATFS_DIR
 *
dj
,

1071 
WORD
 
idx


1074 
DWORD
 
	g˛°
;

1075 
WORD
 
	gic
;

1078 
	gdj
->
	gödex
 = 
idx
;

1079 
	g˛°
 = 
dj
->
s˛u°
;

1080 i‡(
	g˛°
 =1 || 
˛°
 >
dj
->
fs
->
n_Áã¡
)

1081  
FR_INT_ERR
;

1082 i‡(!
	g˛°
 && 
	gdj
->
	gfs
->
	gfs_ty≥
 =
FS_FAT32
)

1083 
˛°
 = 
dj
->
fs
->
dúba£
;

1085 i‡(
	g˛°
 == 0) {

1086 
dj
->
˛u°
 = 
˛°
;

1087 i‡(
	gidx
 >
dj
->
fs
->
n_roŸdú
)

1088  
FR_INT_ERR
;

1089 
	gdj
->
	g£˘
 = 
dj
->
fs
->
dúba£
 + 
idx
 / (
SS
(dj->fsË/ 
SZ_DIR
);

1092 
	gic
 = 
SS
(
dj
->
fs
Ë/ 
SZ_DIR
 * dj->fs->
csize
;

1093 
	gidx
 >
ic
) {

1094 
˛°
 = 
gë_Át
(
dj
->
fs
, clst);

1095 i‡(
	g˛°
 =0xFFFFFFFFË 
FR_DISK_ERR
;

1096 i‡(
	g˛°
 < 2 || cl° >
dj
->
fs
->
n_Áã¡
)

1097  
FR_INT_ERR
;

1098 
	gidx
 -
ic
;

1100 
	gdj
->
	g˛u°
 = 
˛°
;

1101 
	gdj
->
	g£˘
 = 
˛u°2£˘
(
dj
->
fs
, 
˛°
Ë+ 
	gidx
 / (
SS
(dj->fsË/ 
	gSZ_DIR
);

1104 
	gdj
->
	gdú
 = 
dj
->
fs
->
wö
 + (
idx
 % (
SS
(dj->fsË/ 
SZ_DIR
)) * SZ_DIR;

1106  
	gFR_OK
;

1117 
FRESULT
 
dú_√xt
 (

1118 
FATFS_DIR
 *
dj
,

1119 
°ªtch


1122 
DWORD
 
	g˛°
;

1123 
WORD
 
	gi
;

1126 
	g°ªtch
 = 
°ªtch
;

1127 
	gi
 = 
dj
->
ödex
 + 1;

1128 i‡(!
	gi
 || !
	gdj
->
	g£˘
)

1129  
	gFR_NO_FILE
;

1131 i‡(!(
	gi
 % (
SS
(
dj
->
fs
Ë/ 
	gSZ_DIR
))) {

1132 
	gdj
->
	g£˘
++;

1134 i‡(
	gdj
->
	g˛u°
 == 0) {

1135 i‡(
i
 >
dj
->
fs
->
n_roŸdú
)

1136  
FR_NO_FILE
;

1139 i‡(((
	gi
 / (
SS
(
dj
->
fs
Ë/ 
	gSZ_DIR
)Ë& (
	gdj
->
	gfs
->
	gcsize
 - 1)) == 0) {

1140 
˛°
 = 
gë_Át
(
dj
->
fs
, dj->
˛u°
);

1141 i‡(
	g˛°
 <1Ë 
FR_INT_ERR
;

1142 i‡(
	g˛°
 =0xFFFFFFFFË 
FR_DISK_ERR
;

1143 i‡(
	g˛°
 >
dj
->
fs
->
n_Áã¡
) {

1144 #i‡!
_FS_READONLY


1145 
BYTE
 
c
;

1146 i‡(!
	g°ªtch
Ë 
	gFR_NO_FILE
;

1147 
	g˛°
 = 
¸óã_chaö
(
dj
->
fs
, dj->
˛u°
);

1148 i‡(
	g˛°
 =0Ë 
FR_DENIED
;

1149 i‡(
	g˛°
 =1Ë 
FR_INT_ERR
;

1150 i‡(
	g˛°
 =0xFFFFFFFFË 
FR_DISK_ERR
;

1152 i‡(
move_wödow
(
dj
->
fs
, 0)Ë 
	gFR_DISK_ERR
;

1153 
mem_£t
(
dj
->
fs
->
wö
, 0, 
SS
(dj->fs));

1154 
	gdj
->
	gfs
->
	gwö£˘
 = 
˛u°2£˘
(
dj
->
fs
, 
˛°
);

1155 
	gc
 = 0; c < 
	gdj
->
	gfs
->
	gcsize
; c++) {

1156 
	gdj
->
	gfs
->
	gwÊag
 = 1;

1157 i‡(
move_wödow
(
dj
->
fs
, 0)Ë 
	gFR_DISK_ERR
;

1158 
	gdj
->
	gfs
->
	gwö£˘
++;

1160 
	gdj
->
	gfs
->
	gwö£˘
 -
c
;

1162  
	gFR_NO_FILE
;

1165 
	gdj
->
	g˛u°
 = 
˛°
;

1166 
	gdj
->
	g£˘
 = 
˛u°2£˘
(
dj
->
fs
, 
˛°
);

1171 
	gdj
->
	gödex
 = 
i
;

1172 
	gdj
->
	gdú
 = 
dj
->
fs
->
wö
 + (
i
 % (
SS
(dj->fsË/ 
SZ_DIR
)) * SZ_DIR;

1174  
	gFR_OK
;

1185 
DWORD
 
ld_˛u°
 (

1186 
FATFS
 *
fs
,

1187 
BYTE
 *
dú


1190 
DWORD
 
	g˛
;

1192 
	g˛
 = 
LD_WORD
(
dú
+
DIR_F°ClusLO
);

1193 i‡(
	gfs
->
	gfs_ty≥
 =
FS_FAT32
)

1194 
˛
 |(
DWORD
)
LD_WORD
(
dú
+
DIR_F°ClusHI
) << 16;

1196  
	g˛
;

1200 #i‡!
_FS_READONLY


1202 
°_˛u°
 (

1203 
BYTE
 *
dú
,

1204 
DWORD
 
˛


1207 
ST_WORD
(
dú
+
DIR_F°ClusLO
, 
˛
);

1208 
ST_WORD
(
dú
+
DIR_F°ClusHI
, 
˛
 >> 16);

1217 #i‡
_USE_LFN


1219 c⁄° 
BYTE
 
	gL‚Ofs
[] = {1,3,5,7,9,14,16,18,20,22,24,28,30};

1223 
cmp_l‚
 (

1224 
WCHAR
 *
l‚buf
,

1225 
BYTE
 *
dú


1228 
UINT
 
	gi
, 
	gs
;

1229 
WCHAR
 
	gwc
, 
	guc
;

1232 
	gi
 = ((
dú
[
LDIR_Ord
] & ~
LLE
) - 1) * 13;

1233 
	gs
 = 0; 
	gwc
 = 1;

1235 
	guc
 = 
LD_WORD
(
dú
+
L‚Ofs
[
s
]);

1236 i‡(
	gwc
) {

1237 
	gwc
 = 
ff_wtouµî
(
uc
);

1238 i‡(
	gi
 >
_MAX_LFN
 || 
wc
 !
ff_wtouµî
(
l‚buf
[
i
++]))

1241 i‡(
	guc
 != 0xFFFF)  0;

1243 } ++
	gs
 < 13);

1245 i‡((
	gdú
[
LDIR_Ord
] & 
	gLLE
Ë&& 
	gwc
 && 
	gl‚buf
[
i
])

1254 
pick_l‚
 (

1255 
WCHAR
 *
l‚buf
,

1256 
BYTE
 *
dú


1259 
UINT
 
	gi
, 
	gs
;

1260 
WCHAR
 
	gwc
, 
	guc
;

1263 
	gi
 = ((
dú
[
LDIR_Ord
] & 0x3F) - 1) * 13;

1265 
	gs
 = 0; 
	gwc
 = 1;

1267 
	guc
 = 
LD_WORD
(
dú
+
L‚Ofs
[
s
]);

1268 i‡(
	gwc
) {

1269 i‡(
	gi
 >
_MAX_LFN
)  0;

1270 
	gl‚buf
[
i
++] = 
wc
 = 
uc
;

1272 i‡(
	guc
 != 0xFFFF)  0;

1274 } ++
	gs
 < 13);

1276 i‡(
	gdú
[
LDIR_Ord
] & 
	gLLE
) {

1277 i‡(
	gi
 >
_MAX_LFN
)  0;

1278 
	gl‚buf
[
i
] = 0;

1285 #i‡!
_FS_READONLY


1287 
fô_l‚
 (

1288 c⁄° 
WCHAR
 *
l‚buf
,

1289 
BYTE
 *
dú
,

1290 
BYTE
 
‹d
,

1291 
BYTE
 
sum


1294 
UINT
 
	gi
, 
	gs
;

1295 
WCHAR
 
	gwc
;

1298 
	gdú
[
LDIR_Chksum
] = 
sum
;

1299 
	gdú
[
LDIR_Aâr
] = 
AM_LFN
;

1300 
	gdú
[
LDIR_Ty≥
] = 0;

1301 
ST_WORD
(
dú
+
LDIR_F°ClusLO
, 0);

1303 
	gi
 = (
‹d
 - 1) * 13;

1304 
	gs
 = 
wc
 = 0;

1306 i‡(
	gwc
 !0xFFFFË
wc
 = 
l‚buf
[
i
++];

1307 
ST_WORD
(
dú
+
L‚Ofs
[
s
], 
wc
);

1308 i‡(!
	gwc
) wc = 0xFFFF;

1309 } ++
	gs
 < 13);

1310 i‡(
	gwc
 =0xFFFF || !
l‚buf
[
i
]Ë
‹d
 |
LLE
;

1311 
	gdú
[
LDIR_Ord
] = 
‹d
;

1322 #i‡
_USE_LFN


1323 
gí_num«me
 (

1324 
BYTE
 *
d°
,

1325 c⁄° 
BYTE
 *
§c
,

1326 c⁄° 
WCHAR
 *
l‚
,

1327 
WORD
 
£q


1330 
BYTE
 
	gns
[8], 
	gc
;

1331 
UINT
 
	gi
, 
	gj
;

1334 
mem_˝y
(
d°
, 
§c
, 11);

1336 i‡(
	g£q
 > 5) {

1337 dÿ
	g£q
 = (
£q
 >> 1Ë+ (£q << 15Ë+ (
WORD
)*
l‚
++; *
	gl‚
);

1341 
	gi
 = 7;

1343 
	gc
 = (
£q
 % 16) + '0';

1344 i‡(
	gc
 > '9') c += 7;

1345 
	gns
[
i
--] = 
c
;

1346 
	g£q
 /= 16;

1347 } 
	g£q
);

1348 
	gns
[
i
] = '~';

1351 
	gj
 = 0; j < 
	gi
 && 
	gd°
[
j
] != ' '; j++) {

1352 i‡(
IsDBCS1
(
d°
[
j
])) {

1353 i‡(
	gj
 =
i
 - 1) ;

1354 
	gj
++;

1358 
	gd°
[
j
++] = (
i
 < 8Ë? 
ns
[i++] : ' ';

1359 } 
	gj
 < 8);

1369 #i‡
_USE_LFN


1371 
BYTE
 
sum_s‚
 (

1372 c⁄° 
BYTE
 *
dú


1375 
BYTE
 
	gsum
 = 0;

1376 
UINT
 
	gn
 = 11;

1378 dÿ
	gsum
 = (
sum
 >> 1Ë+ (sum << 7Ë+ *
dú
++; --
	gn
);

1379  
	gsum
;

1391 
FRESULT
 
dú_föd
 (

1392 
FATFS_DIR
 *
dj


1395 
FRESULT
 
	gªs
;

1396 
BYTE
 
	gc
, *
	gdú
;

1397 #i‡
_USE_LFN


1398 
BYTE
 
	ga
, 
	g‹d
, 
	gsum
;

1401 
	gªs
 = 
dú_sdi
(
dj
, 0);

1402 i‡(
	gªs
 !
FR_OK
Ë 
ªs
;

1404 #i‡
_USE_LFN


1405 
	g‹d
 = 
sum
 = 0xFF;

1408 
	gªs
 = 
move_wödow
(
dj
->
fs
, dj->
£˘
);

1409 i‡(
	gªs
 !
FR_OK
) ;

1410 
	gdú
 = 
dj
->
dú
;

1411 
	gc
 = 
dú
[
DIR_Name
];

1412 i‡(
	gc
 =0Ë{ 
ªs
 = 
FR_NO_FILE
; ; }

1413 #i‡
_USE_LFN


1414 
	ga
 = 
dú
[
DIR_Aâr
] & 
AM_MASK
;

1415 i‡(
	gc
 =
DDE
 || ((
a
 & 
AM_VOL
Ë&&á !
AM_LFN
)) {

1416 
‹d
 = 0xFF;

1418 i‡(
	ga
 =
AM_LFN
) {

1419 i‡(
dj
->
l‚
) {

1420 i‡(
c
 & 
LLE
) {

1421 
sum
 = 
dú
[
LDIR_Chksum
];

1422 
	gc
 &~
LLE
; 
	g‹d
 = 
c
;

1423 
	gdj
->
	gl‚_idx
 = 
dj
->
ödex
;

1426 
	g‹d
 = (
c
 =
‹d
 && 
sum
 =
dú
[
LDIR_Chksum
] && 
cmp_l‚
(
dj
->
l‚
, dir)) ? ord - 1 : 0xFF;

1429 i‡(!
	g‹d
 && 
	gsum
 =
sum_s‚
(
dú
)) ;

1430 
	g‹d
 = 0xFF; 
	gdj
->
	gl‚_idx
 = 0xFFFF;

1431 i‡(!(
	gdj
->
	g‚
[
NS
] & 
	gNS_LOSS
Ë&& !
mem_cmp
(
dú
, 
dj
->
‚
, 11)) ;

1435 i‡(!(
	gdú
[
DIR_Aâr
] & 
	gAM_VOL
Ë&& !
mem_cmp
(
dú
, 
dj
->
‚
, 11))

1438 
	gªs
 = 
dú_√xt
(
dj
, 0);

1439 } 
	gªs
 =
FR_OK
);

1441  
	gªs
;

1450 #i‡
_FS_MINIMIZE
 <= 1

1452 
FRESULT
 
dú_ªad
 (

1453 
FATFS_DIR
 *
dj


1456 
FRESULT
 
	gªs
;

1457 
BYTE
 
	gc
, *
	gdú
;

1458 #i‡
_USE_LFN


1459 
BYTE
 
	ga
, 
	g‹d
 = 0xFF, 
	gsum
 = 0xFF;

1462 
	gªs
 = 
FR_NO_FILE
;

1463 
	gdj
->
	g£˘
) {

1464 
	gªs
 = 
move_wödow
(
dj
->
fs
, dj->
£˘
);

1465 i‡(
	gªs
 !
FR_OK
) ;

1466 
	gdú
 = 
dj
->
dú
;

1467 
	gc
 = 
dú
[
DIR_Name
];

1468 i‡(
	gc
 =0Ë{ 
ªs
 = 
FR_NO_FILE
; ; }

1469 #i‡
_USE_LFN


1470 
	ga
 = 
dú
[
DIR_Aâr
] & 
AM_MASK
;

1471 i‡(
	gc
 =
DDE
 || (!
_FS_RPATH
 && 
c
 ='.'Ë|| ((
a
 & 
AM_VOL
Ë&&á !
AM_LFN
)) {

1472 
‹d
 = 0xFF;

1474 i‡(
	ga
 =
AM_LFN
) {

1475 i‡(
c
 & 
LLE
) {

1476 
sum
 = 
dú
[
LDIR_Chksum
];

1477 
	gc
 &~
LLE
; 
	g‹d
 = 
c
;

1478 
	gdj
->
	gl‚_idx
 = 
dj
->
ödex
;

1481 
	g‹d
 = (
c
 =
‹d
 && 
sum
 =
dú
[
LDIR_Chksum
] && 
pick_l‚
(
dj
->
l‚
, dir)) ? ord - 1 : 0xFF;

1483 i‡(
	g‹d
 || 
	gsum
 !
sum_s‚
(
dú
))

1484 
dj
->
l‚_idx
 = 0xFFFF;

1489 i‡(
	gc
 !
DDE
 && (
_FS_RPATH
 || 
c
 !'.'Ë&& !(
dú
[
DIR_Aâr
] & 
AM_VOL
))

1492 
	gªs
 = 
dú_√xt
(
dj
, 0);

1493 i‡(
	gªs
 !
FR_OK
) ;

1496 i‡(
	gªs
 !
FR_OK
Ë
dj
->
£˘
 = 0;

1498  
	gªs
;

1507 #i‡!
_FS_READONLY


1509 
FRESULT
 
dú_ªgi°î
 (

1510 
FATFS_DIR
 *
dj


1513 
FRESULT
 
	gªs
;

1514 
BYTE
 
	gc
, *
	gdú
;

1515 #i‡
_USE_LFN


1516 
WORD
 
	gn
, 
	g√
, 
	gis
;

1517 
BYTE
 
	g¢
[12], *
	g‚
, 
	gsum
;

1518 
WCHAR
 *
	gl‚
;

1521 
	g‚
 = 
dj
->
‚
; 
	gl‚
 = dj->
l‚
;

1522 
mem_˝y
(
¢
, 
‚
, 12);

1524 i‡(
	g_FS_RPATH
 && (
	g¢
[
NS
] & 
	gNS_DOT
))

1525  
	gFR_INVALID_NAME
;

1527 i‡(
	g¢
[
NS
] & 
	gNS_LOSS
) {

1528 
	g‚
[
NS
] = 0; 
	gdj
->
	gl‚
 = 0;

1529 
	gn
 = 1;Ç < 100;Ç++) {

1530 
gí_num«me
(
‚
, 
¢
, 
l‚
, 
n
);

1531 
	gªs
 = 
dú_föd
(
dj
);

1532 i‡(
	gªs
 !
FR_OK
) ;

1534 i‡(
	gn
 =100Ë 
FR_DENIED
;

1535 i‡(
	gªs
 !
FR_NO_FILE
Ë 
ªs
;

1536 
	g‚
[
NS
] = 
¢
[NS]; 
	gdj
->
	gl‚
 = 
l‚
;

1539 i‡(
	g¢
[
NS
] & 
	gNS_LFN
) {

1540 
	g√
 = 0; 
	gl‚
[
√
];Çe++) ;

1541 
	g√
 = (
√
 + 25) / 13;

1543 
	g√
 = 1;

1547 
	gªs
 = 
dú_sdi
(
dj
, 0);

1548 i‡(
	gªs
 !
FR_OK
Ë 
ªs
;

1549 
	gn
 = 
is
 = 0;

1551 
	gªs
 = 
move_wödow
(
dj
->
fs
, dj->
£˘
);

1552 i‡(
	gªs
 !
FR_OK
) ;

1553 
	gc
 = *
dj
->
dú
;

1554 i‡(
	gc
 =
DDE
 || 
c
 == 0) {

1555 i‡(
n
 =0Ë
is
 = 
dj
->
ödex
;

1556 i‡(++
	gn
 =
√
) ;

1558 
	gn
 = 0;

1560 
	gªs
 = 
dú_√xt
(
dj
, 1);

1561 } 
	gªs
 =
FR_OK
);

1563 i‡(
	gªs
 =
FR_OK
 && 
√
 > 1) {

1564 
ªs
 = 
dú_sdi
(
dj
, 
is
);

1565 i‡(
	gªs
 =
FR_OK
) {

1566 
sum
 = 
sum_s‚
(
dj
->
‚
);

1567 
	g√
--;

1569 
	gªs
 = 
move_wödow
(
dj
->
fs
, dj->
£˘
);

1570 i‡(
	gªs
 !
FR_OK
) ;

1571 
fô_l‚
(
dj
->
l‚
, dj->
dú
, (
BYTE
)
√
, 
sum
);

1572 
	gdj
->
	gfs
->
	gwÊag
 = 1;

1573 
	gªs
 = 
dú_√xt
(
dj
, 0);

1574 } 
	gªs
 =
FR_OK
 && --
√
);

1579 
	gªs
 = 
dú_sdi
(
dj
, 0);

1580 i‡(
	gªs
 =
FR_OK
) {

1582 
ªs
 = 
move_wödow
(
dj
->
fs
, dj->
£˘
);

1583 i‡(
	gªs
 !
FR_OK
) ;

1584 
	gc
 = *
dj
->
dú
;

1585 i‡(
	gc
 =
DDE
 || 
c
 == 0) ;

1586 
	gªs
 = 
dú_√xt
(
dj
, 1);

1587 } 
	gªs
 =
FR_OK
);

1591 i‡(
	gªs
 =
FR_OK
) {

1592 
ªs
 = 
move_wödow
(
dj
->
fs
, dj->
£˘
);

1593 i‡(
	gªs
 =
FR_OK
) {

1594 
dú
 = 
dj
->dir;

1595 
mem_£t
(
dú
, 0, 
SZ_DIR
);

1596 
mem_˝y
(
dú
, 
dj
->
‚
, 11);

1597 #i‡
_USE_LFN


1598 
	gdú
[
DIR_NTªs
] = *(
dj
->
‚
+
NS
Ë& (
NS_BODY
 | 
NS_EXT
);

1600 
	gdj
->
	gfs
->
	gwÊag
 = 1;

1604  
	gªs
;

1614 #i‡!
_FS_READONLY
 && !
_FS_MINIMIZE


1616 
FRESULT
 
dú_ªmove
 (

1617 
FATFS_DIR
 *
dj


1620 
FRESULT
 
	gªs
;

1621 #i‡
_USE_LFN


1622 
WORD
 
	gi
;

1624 
	gi
 = 
dj
->
ödex
;

1625 
	gªs
 = 
dú_sdi
(
dj
, (
WORD
)((dj->
l‚_idx
 =0xFFFFË? 
i
 : dj->lfn_idx));

1626 i‡(
	gªs
 =
FR_OK
) {

1628 
ªs
 = 
move_wödow
(
dj
->
fs
, dj->
£˘
);

1629 i‡(
	gªs
 !
FR_OK
) ;

1630 *
	gdj
->
	gdú
 = 
DDE
;

1631 
	gdj
->
	gfs
->
	gwÊag
 = 1;

1632 i‡(
	gdj
->
	gödex
 >
i
) ;

1633 
	gªs
 = 
dú_√xt
(
dj
, 0);

1634 } 
	gªs
 =
FR_OK
);

1635 i‡(
	gªs
 =
FR_NO_FILE
Ë
ªs
 = 
FR_INT_ERR
;

1639 
	gªs
 = 
dú_sdi
(
dj
, dj->
ödex
);

1640 i‡(
	gªs
 =
FR_OK
) {

1641 
ªs
 = 
move_wödow
(
dj
->
fs
, dj->
£˘
);

1642 i‡(
	gªs
 =
FR_OK
) {

1643 *
dj
->
dú
 = 
DDE
;

1644 
	gdj
->
	gfs
->
	gwÊag
 = 1;

1649  
	gªs
;

1661 
FRESULT
 
¸óã_«me
 (

1662 
FATFS_DIR
 *
dj
,

1663 c⁄° 
TCHAR
 **
∑th


1666 #ifde‡
_EXCVT


1667 c⁄° 
BYTE
 
	gexcvt
[] = 
_EXCVT
;

1670 #i‡
_USE_LFN


1671 
BYTE
 
	gb
, 
	gcf
;

1672 
WCHAR
 
	gw
, *
	gl‚
;

1673 
UINT
 
	gi
, 
	gni
, 
	gsi
, 
	gdi
;

1674 c⁄° 
TCHAR
 *
	gp
;

1677 
	gp
 = *
∑th
; *∞='/' || *
p
 == '\\';Ö++) ;

1678 
	gl‚
 = 
dj
->
l‚
;

1679 
	gsi
 = 
di
 = 0;

1681 
	gw
 = 
p
[
si
++];

1682 i‡(
	gw
 < ' ' || w ='/' || 
w
 == '\\') ;

1683 i‡(
	gdi
 >
_MAX_LFN
)

1684  
FR_INVALID_NAME
;

1685 #i‡!
_LFN_UNICODE


1686 
	gw
 &= 0xFF;

1687 i‡(
IsDBCS1
(
w
)) {

1688 
	gb
 = (
BYTE
)
p
[
si
++];

1689 i‡(!
IsDBCS2
(
b
))

1690  
	gFR_INVALID_NAME
;

1691 
	gw
 = (
w
 << 8Ë+ 
b
;

1693 
	gw
 = 
ff_c⁄vît
(
w
, 1);

1694 i‡(!
	gw
Ë 
	gFR_INVALID_NAME
;

1696 i‡(
	gw
 < 0x80 && 
chk_chr
("\"*:<>\?|\x7F", 
w
))

1697  
	gFR_INVALID_NAME
;

1698 
	gl‚
[
di
++] = 
w
;

1700 *
	g∑th
 = &
p
[
si
];

1701 
	gcf
 = (
w
 < ' 'Ë? 
NS_LAST
 : 0;

1702 #i‡
_FS_RPATH


1703 i‡((
	gdi
 =1 && 
l‚
[
di
-1] == '.') ||

1704 (
di
 =2 && 
l‚
[di-1] == '.' &&Üfn[di-2] == '.')) {

1705 
l‚
[
di
] = 0;

1706 
	gi
 = 0; i < 11; i++)

1707 
	gdj
->
	g‚
[
i
] = (ò< 
di
) ? '.' : ' ';

1708 
	gdj
->
	g‚
[
i
] = 
cf
 | 
NS_DOT
;

1709  
	gFR_OK
;

1712 
	gdi
) {

1713 
	gw
 = 
l‚
[
di
-1];

1714 i‡(
	gw
 !' ' && 
w
 != '.') ;

1715 
	gdi
--;

1717 i‡(!
	gdi
Ë 
	gFR_INVALID_NAME
;

1719 
	gl‚
[
di
] = 0;

1722 
mem_£t
(
dj
->
‚
, ' ', 11);

1723 
	gsi
 = 0; 
	gl‚
[
si
] =' ' || 
l‚
[si] == '.'; si++) ;

1724 i‡(
	gsi
Ë
	gcf
 |
NS_LOSS
 | 
NS_LFN
;

1725 
	gdi
 && 
	gl‚
[
di
 - 1] != '.') di--;

1727 
	gb
 = 
i
 = 0; 
	gni
 = 8;

1729 
	gw
 = 
l‚
[
si
++];

1730 i‡(!
	gw
) ;

1731 i‡(
	gw
 =' ' || (
w
 ='.' && 
si
 !
di
)) {

1732 
cf
 |
NS_LOSS
 | 
NS_LFN
; ;

1735 i‡(
	gi
 >
ni
 || 
si
 =
di
) {

1736 i‡(
ni
 == 11) {

1737 
cf
 |
NS_LOSS
 | 
NS_LFN
; ;

1739 i‡(
	gsi
 !
di
Ë
cf
 |
NS_LOSS
 | 
NS_LFN
;

1740 i‡(
	gsi
 > 
	gdi
) ;

1741 
	gsi
 = 
di
; 
	gi
 = 8; 
	gni
 = 11;

1742 
	gb
 <<= 2; ;

1745 i‡(
	gw
 >= 0x80) {

1746 #ifde‡
_EXCVT


1747 
w
 = 
ff_c⁄vît
(w, 0);

1748 i‡(
	gw
Ëw = 
excvt
[
w
 - 0x80];

1750 
	gw
 = 
ff_c⁄vît
(
ff_wtouµî
(
w
), 0);

1752 
	gcf
 |
NS_LFN
;

1755 i‡(
	g_DF1S
 && 
	gw
 >= 0x100) {

1756 i‡(
i
 >
ni
 - 1) {

1757 
cf
 |
NS_LOSS
 | 
NS_LFN
; 
	gi
 = 
ni
; ;

1759 
	gdj
->
	g‚
[
i
++] = (
BYTE
)(
w
 >> 8);

1761 i‡(!
	gw
 || 
chk_chr
("+,;=[]", 
w
)) {

1762 
	gw
 = '_'; 
	gcf
 |
NS_LOSS
 | 
NS_LFN
;

1764 i‡(
IsUµî
(
w
)) {

1765 
	gb
 |= 2;

1767 i‡(
IsLowî
(
w
)) {

1768 
	gb
 |1; 
	gw
 -= 0x20;

1773 
	gdj
->
	g‚
[
i
++] = (
BYTE
)
w
;

1776 i‡(
	gdj
->
	g‚
[0] =
DDE
Ë
dj
->
‚
[0] = 
NDDE
;

1778 i‡(
	gni
 =8Ë
b
 <<= 2;

1779 i‡((
	gb
 & 0x0CË=0x0C || (
b
 & 0x03) == 0x03)

1780 
cf
 |
NS_LFN
;

1781 i‡(!(
	gcf
 & 
	gNS_LFN
)) {

1782 i‡((
	gb
 & 0x03Ë=0x01Ë
cf
 |
NS_EXT
;

1783 i‡((
	gb
 & 0x0CË=0x04Ë
cf
 |
NS_BODY
;

1786 
	gdj
->
	g‚
[
NS
] = 
cf
;

1788  
	gFR_OK
;

1792 
BYTE
 
	gb
, 
	gc
, 
	gd
, *
	gs‚
;

1793 
UINT
 
	gni
, 
	gsi
, 
	gi
;

1794 c⁄° *
	gp
;

1797 
	gp
 = *
∑th
; *∞='/' || *
p
 == '\\';Ö++) ;

1798 
	gs‚
 = 
dj
->
‚
;

1799 
mem_£t
(
s‚
, ' ', 11);

1800 
	gsi
 = 
i
 = 
b
 = 0; 
	gni
 = 8;

1801 #i‡
_FS_RPATH


1802 i‡(
	gp
[
si
] == '.') {

1804 
	gc
 = (
BYTE
)
p
[
si
++];

1805 i‡(
	gc
 !'.' || 
si
 >= 3) ;

1806 
	gs‚
[
i
++] = 
c
;

1808 i‡(
	gc
 !'/' && 
c
 !'\\' && c > ' 'Ë 
FR_INVALID_NAME
;

1809 *
	g∑th
 = &
p
[
si
];

1810 
	gs‚
[
NS
] = (
c
 <' 'Ë? 
NS_LAST
 | 
NS_DOT
 : NS_DOT;

1811  
	gFR_OK
;

1815 
	gc
 = (
BYTE
)
p
[
si
++];

1816 i‡(
	gc
 <' ' || 
c
 == '/' || c == '\\') ;

1817 i‡(
	gc
 ='.' || 
i
 >
ni
) {

1818 i‡(
ni
 !8 || 
c
 !'.'Ë 
FR_INVALID_NAME
;

1819 
	gi
 = 8; 
	gni
 = 11;

1820 
	gb
 <<= 2; ;

1822 i‡(
	gc
 >= 0x80) {

1823 
b
 |= 3;

1824 #ifde‡
_EXCVT


1825 
	gc
 = 
excvt
[
c
 - 0x80];

1827 #i‡!
_DF1S


1828  
	gFR_INVALID_NAME
;

1832 i‡(
IsDBCS1
(
c
)) {

1833 
	gd
 = (
BYTE
)
p
[
si
++];

1834 i‡(!
IsDBCS2
(
d
Ë|| 
	gi
 >
ni
 - 1)

1835  
FR_INVALID_NAME
;

1836 
	gs‚
[
i
++] = 
c
;

1837 
	gs‚
[
i
++] = 
d
;

1839 i‡(
chk_chr
("\"*+,:;<=>\?[]|\x7F", 
c
))

1840  
	gFR_INVALID_NAME
;

1841 i‡(
IsUµî
(
c
)) {

1842 
	gb
 |= 2;

1844 i‡(
IsLowî
(
c
)) {

1845 
	gb
 |1; 
	gc
 -= 0x20;

1848 
	gs‚
[
i
++] = 
c
;

1851 *
	g∑th
 = &
p
[
si
];

1852 
	gc
 = (
c
 <' 'Ë? 
NS_LAST
 : 0;

1854 i‡(!
	gi
Ë 
	gFR_INVALID_NAME
;

1855 i‡(
	gs‚
[0] =
DDE
Ë
s‚
[0] = 
NDDE
;

1857 i‡(
	gni
 =8Ë
b
 <<= 2;

1858 i‡((
	gb
 & 0x03Ë=0x01Ë
c
 |
NS_EXT
;

1859 i‡((
	gb
 & 0x0CË=0x04Ë
c
 |
NS_BODY
;

1861 
	gs‚
[
NS
] = 
c
;

1863  
	gFR_OK
;

1873 #i‡
_FS_MINIMIZE
 <= 1

1875 
gë_fûeöfo
 (

1876 
FATFS_DIR
 *
dj
,

1877 
FILINFO
 *
‚o


1880 
UINT
 
	gi
;

1881 
BYTE
 
	g¡
, *
	gdú
;

1882 
TCHAR
 *
	gp
, 
	gc
;

1885 
	gp
 = 
‚o
->
‚ame
;

1886 i‡(
	gdj
->
	g£˘
) {

1887 
	gdú
 = 
dj
->
dú
;

1888 
	g¡
 = 
dú
[
DIR_NTªs
];

1889 
	gi
 = 0; i < 8; i++) {

1890 
	gc
 = 
dú
[
i
];

1891 i‡(
	gc
 == ' ') ;

1892 i‡(
	gc
 =
NDDE
Ë
c
 = (
TCHAR
)
DDE
;

1893 i‡(
	g_USE_LFN
 && (
	g¡
 & 
	gNS_BODY
Ë&& 
IsUµî
(
c
)Ë
	gc
 += 0x20;

1894 #i‡
_LFN_UNICODE


1895 i‡(
IsDBCS1
(
c
Ë&& 
	gi
 < 7 && 
IsDBCS2
(
dú
[
i
+1]))

1896 
	gc
 = (
c
 << 8Ë| 
dú
[++
i
];

1897 
	gc
 = 
ff_c⁄vît
(
c
, 1);

1898 i‡(!
	gc
) c = '?';

1900 *
	gp
++ = 
c
;

1902 i‡(
	gdú
[8] != ' ') {

1903 *
p
++ = '.';

1904 
	gi
 = 8; i < 11; i++) {

1905 
	gc
 = 
dú
[
i
];

1906 i‡(
	gc
 == ' ') ;

1907 i‡(
	g_USE_LFN
 && (
	g¡
 & 
	gNS_EXT
Ë&& 
IsUµî
(
c
)Ë
	gc
 += 0x20;

1908 #i‡
_LFN_UNICODE


1909 i‡(
IsDBCS1
(
c
Ë&& 
	gi
 < 10 && 
IsDBCS2
(
dú
[
i
+1]))

1910 
	gc
 = (
c
 << 8Ë| 
dú
[++
i
];

1911 
	gc
 = 
ff_c⁄vît
(
c
, 1);

1912 i‡(!
	gc
) c = '?';

1914 *
	gp
++ = 
c
;

1917 
	g‚o
->
	gÁârib
 = 
dú
[
DIR_Aâr
];

1918 
	g‚o
->
	gfsize
 = 
LD_DWORD
(
dú
+
DIR_FûeSize
);

1919 
	g‚o
->
	gfd©e
 = 
LD_WORD
(
dú
+
DIR_WπD©e
);

1920 
	g‚o
->
	g·ime
 = 
LD_WORD
(
dú
+
DIR_WπTime
);

1922 *
	gp
 = 0;

1924 #i‡
_USE_LFN


1925 i‡(
	g‚o
->
	gl‚ame
 && fno->
	glfsize
) {

1926 
TCHAR
 *
	gç
 = 
‚o
->
l‚ame
;

1927 
WCHAR
 
	gw
, *
	gl‚
;

1929 
	gi
 = 0;

1930 i‡(
	gdj
->
	g£˘
 && dj->
	gl‚_idx
 != 0xFFFF) {

1931 
l‚
 = 
dj
->lfn;

1932 (
	gw
 = *
l‚
++) != 0) {

1933 #i‡!
_LFN_UNICODE


1934 
w
 = 
ff_c⁄vît
(w, 0);

1935 i‡(!
	gw
Ë{ 
	gi
 = 0; ; }

1936 i‡(
	g_DF1S
 && 
	gw
 >= 0x100)

1937 
ç
[
i
++] = (
TCHAR
)(
w
 >> 8);

1939 i‡(
	gi
 >
‚o
->
lfsize
 - 1Ë{ 
i
 = 0; ; }

1940 
	gç
[
i
++] = (
TCHAR
)
w
;

1943 
	gç
[
i
] = 0;

1957 
FRESULT
 
fﬁlow_∑th
 (

1958 
FATFS_DIR
 *
dj
,

1959 c⁄° 
TCHAR
 *
∑th


1962 
FRESULT
 
	gªs
;

1963 
BYTE
 *
	gdú
, 
	gns
;

1966 #i‡
_FS_RPATH


1967 i‡(*
	g∑th
 ='/' || *
∑th
 == '\\') {

1968 
∑th
++; 
	gdj
->
	gs˛u°
 = 0;

1970 
	gdj
->
	gs˛u°
 = 
dj
->
fs
->
cdú
;

1973 i‡(*
	g∑th
 ='/' || *
∑th
 == '\\')

1974 
∑th
++;

1975 
	gdj
->
	gs˛u°
 = 0;

1978 i‡((
	gUINT
)*
	g∑th
 < ' ') {

1979 
	gªs
 = 
dú_sdi
(
dj
, 0);

1980 
	gdj
->
	gdú
 = 0;

1983 
	gªs
 = 
¸óã_«me
(
dj
, &
∑th
);

1984 i‡(
	gªs
 !
FR_OK
) ;

1985 
	gªs
 = 
dú_föd
(
dj
);

1986 
	gns
 = *(
dj
->
‚
+
NS
);

1987 i‡(
	gªs
 !
FR_OK
) {

1988 i‡(
ªs
 !
FR_NO_FILE
) ;

1990 i‡(
	g_FS_RPATH
 && (
	gns
 & 
	gNS_DOT
)) {

1991 
	gdj
->
	gs˛u°
 = 0; dj->
	gdú
 = 0;

1992 
	gªs
 = 
FR_OK
;

1993 i‡(!(
	gns
 & 
	gNS_LAST
)) ;

1995 i‡(!(
	gns
 & 
	gNS_LAST
)Ë
	gªs
 = 
FR_NO_PATH
;

1999 i‡(
	gns
 & 
	gNS_LAST
) ;

2000 
	gdú
 = 
dj
->
dú
;

2001 i‡(!(
	gdú
[
DIR_Aâr
] & 
	gAM_DIR
)) {

2002 
	gªs
 = 
FR_NO_PATH
; ;

2004 
	gdj
->
	gs˛u°
 = 
ld_˛u°
(
dj
->
fs
, 
dú
);

2008  
	gªs
;

2019 
BYTE
 
check_fs
 (

2020 
FATFS
 *
fs
,

2021 
DWORD
 
£˘


2024 i‡(
disk_ªad
(
fs
->
drv
, fs->
wö
, 
£˘
, 1Ë!
RES_OK
)

2026 i‡(
LD_WORD
(&
fs
->
wö
[
BS_55AA
]) != 0xAA55)

2029 i‡((
LD_DWORD
(&
fs
->
wö
[
BS_FûSysTy≥
]) & 0xFFFFFF) == 0x544146)

2031 i‡((
LD_DWORD
(&
fs
->
wö
[
BS_FûSysTy≥32
]) & 0xFFFFFF) == 0x544146)

2045 
FRESULT
 
chk_mou¡ed
 (

2046 c⁄° 
TCHAR
 **
∑th
,

2047 
FATFS
 **
rfs
,

2048 
BYTE
 
wmode


2051 
BYTE
 
	gfmt
, 
	gb
, 
	gpi
, *
	gtbl
;

2052 
UINT
 
	gvﬁ
;

2053 
DSTATUS
 
	g°©
;

2054 
DWORD
 
	gb£˘
, 
	gÁsize
, 
	gt£˘
, 
	gsy£˘
, 
	gn˛°
, 
	gszbÁt
;

2055 
WORD
 
	gƒsv
;

2056 c⁄° 
TCHAR
 *
	gp
 = *
∑th
;

2057 
FATFS
 *
	gfs
;

2061 
	gvﬁ
 = 
p
[0] - '0';

2062 i‡(
	gvﬁ
 <9 && 
p
[1] == ':') {

2063 
p
 +2; *
	g∑th
 =Ö;

2065 #i‡
_FS_RPATH


2066 
	gvﬁ
 = 
CuºVﬁ
;

2068 
	gvﬁ
 = 0;

2073 *
	grfs
 = 0;

2074 i‡(
	gvﬁ
 >
_VOLUMES
)

2075  
FR_INVALID_DRIVE
;

2076 
	gfs
 = 
F©Fs
[
vﬁ
];

2077 i‡(!
	gfs
Ë 
	gFR_NOT_ENABLED
;

2079 
ENTER_FF
(
fs
);

2081 *
	grfs
 = 
fs
;

2082 i‡(
	gfs
->
	gfs_ty≥
) {

2083 
	g°©
 = 
disk_°©us
(
fs
->
drv
);

2084 i‡(!(
	g°©
 & 
	gSTA_NOINIT
)) {

2085 i‡(!
	g_FS_READONLY
 && 
	gwmode
 && (
	g°©
 & 
	gSTA_PROTECT
))

2086  
	gFR_WRITE_PROTECTED
;

2087  
	gFR_OK
;

2094 
	gfs
->
	gfs_ty≥
 = 0;

2095 
	gfs
->
	gdrv
 = 
LD2PD
(
vﬁ
);

2096 
	g°©
 = 
disk_öôülize
(
fs
->
drv
);

2097 i‡(
	g°©
 & 
	gSTA_NOINIT
)

2098  
	gFR_NOT_READY
;

2099 i‡(!
	g_FS_READONLY
 && 
	gwmode
 && (
	g°©
 & 
	gSTA_PROTECT
))

2100  
	gFR_WRITE_PROTECTED
;

2101 #i‡
_MAX_SS
 != 512

2102 i‡(
disk_io˘l
(
fs
->
drv
, 
GET_SECTOR_SIZE
, &fs->
ssize
Ë!
RES_OK
)

2103  
FR_DISK_ERR
;

2106 
	gfmt
 = 
check_fs
(
fs
, 
b£˘
 = 0);

2107 i‡(
LD2PT
(
vﬁ
Ë&& !
	gfmt
) fmt = 1;

2108 i‡(
	gfmt
 == 1) {

2110 
pi
 = 
LD2PT
(
vﬁ
);

2111 i‡(
	gpi
)Öi--;

2112 
	gtbl
 = &
fs
->
wö
[
MBR_TabÀ
 + 
pi
 * 
SZ_PTE
];

2113 i‡(
	gtbl
[4]) {

2114 
	gb£˘
 = 
LD_DWORD
(&
tbl
[8]);

2115 
	gfmt
 = 
check_fs
(
fs
, 
b£˘
);

2118 i‡(
	gfmt
 =3Ë 
FR_DISK_ERR
;

2119 i‡(
	gfmt
Ë 
	gFR_NO_FILESYSTEM
;

2123 i‡(
LD_WORD
(
fs
->
wö
+
BPB_BytsPîSec
Ë!
SS
(fs))

2124  
FR_NO_FILESYSTEM
;

2126 
	gÁsize
 = 
LD_WORD
(
fs
->
wö
+
BPB_FATSz16
);

2127 i‡(!
	gÁsize
ËÁsizê
LD_DWORD
(
fs
->
wö
+
BPB_FATSz32
);

2128 
	gfs
->
	gfsize
 = 
Ásize
;

2130 
	gfs
->
	gn_Áts
 = 
b
 = 
fs
->
wö
[
BPB_NumFATs
];

2131 i‡(
	gb
 !1 && 
b
 !2Ë 
FR_NO_FILESYSTEM
;

2132 
	gÁsize
 *
b
;

2134 
	gfs
->
	gcsize
 = 
b
 = 
fs
->
wö
[
BPB_SecPîClus
];

2135 i‡(!
	gb
 || (b & (b - 1))Ë 
	gFR_NO_FILESYSTEM
;

2137 
	gfs
->
	gn_roŸdú
 = 
LD_WORD
(
fs
->
wö
+
BPB_RoŸE¡C¡
);

2138 i‡(
	gfs
->
	gn_roŸdú
 % (
SS
(
fs
Ë/ 
	gSZ_DIR
)Ë 
	gFR_NO_FILESYSTEM
;

2140 
	gt£˘
 = 
LD_WORD
(
fs
->
wö
+
BPB_TŸSec16
);

2141 i‡(!
	gt£˘
Ët£˘ = 
LD_DWORD
(
fs
->
wö
+
BPB_TŸSec32
);

2143 
	gƒsv
 = 
LD_WORD
(
fs
->
wö
+
BPB_RsvdSecC¡
);

2144 i‡(!
	gƒsv
Ë 
	gFR_NO_FILESYSTEM
;

2147 
	gsy£˘
 = 
ƒsv
 + 
Ásize
 + 
fs
->
n_roŸdú
 / (
SS
(fsË/ 
SZ_DIR
);

2148 i‡(
	gt£˘
 < 
	gsy£˘
Ë 
	gFR_NO_FILESYSTEM
;

2149 
	gn˛°
 = (
t£˘
 - 
sy£˘
Ë/ 
fs
->
csize
;

2150 i‡(!
	gn˛°
Ë 
	gFR_NO_FILESYSTEM
;

2151 
	gfmt
 = 
FS_FAT12
;

2152 i‡(
	gn˛°
 >
MIN_FAT16
Ë
fmt
 = 
FS_FAT16
;

2153 i‡(
	gn˛°
 >
MIN_FAT32
Ë
fmt
 = 
FS_FAT32
;

2156 
	gfs
->
	gn_Áã¡
 = 
n˛°
 + 2;

2157 
	gfs
->
	gd©aba£
 = 
b£˘
 + 
sy£˘
;

2158 
	gfs
->
	gÁtba£
 = 
b£˘
 + 
ƒsv
;

2159 i‡(
	gfmt
 =
FS_FAT32
) {

2160 i‡(
fs
->
n_roŸdú
Ë 
FR_NO_FILESYSTEM
;

2161 
	gfs
->
	gdúba£
 = 
LD_DWORD
(
fs
->
wö
+
BPB_RoŸClus
);

2162 
	gszbÁt
 = 
fs
->
n_Áã¡
 * 4;

2164 i‡(!
	gfs
->
	gn_roŸdú
Ë 
	gFR_NO_FILESYSTEM
;

2165 
	gfs
->
	gdúba£
 = 
fs
->
Átba£
 + 
Ásize
;

2166 
	gszbÁt
 = (
fmt
 =
FS_FAT16
) ?

2167 
fs
->
n_Áã¡
 * 2 : fs->n_fatent * 3 / 2 + (fs->n_fatent & 1);

2169 i‡(
	gfs
->
	gfsize
 < (
	gszbÁt
 + (
SS
(
fs
) - 1)) / SS(fs))

2170  
	gFR_NO_FILESYSTEM
;

2172 #i‡!
_FS_READONLY


2174 
	gfs
->
	g‰ì_˛u°
 = 0xFFFFFFFF;

2175 
	gfs
->
	gœ°_˛u°
 = 0;

2178 i‡(
	gfmt
 =
FS_FAT32
) {

2179 
fs
->
fsi_Êag
 = 0;

2180 
	gfs
->
	gfsi_£˘‹
 = 
b£˘
 + 
LD_WORD
(
fs
->
wö
+
BPB_FSInfo
);

2181 i‡(
disk_ªad
(
fs
->
drv
, fs->
wö
, fs->
fsi_£˘‹
, 1Ë=
RES_OK
 &&

2182 
LD_WORD
(
fs
->
wö
+
BS_55AA
) == 0xAA55 &&

2183 
LD_DWORD
(
fs
->
wö
+
FSI_LódSig
) == 0x41615252 &&

2184 
LD_DWORD
(
fs
->
wö
+
FSI_SåucSig
) == 0x61417272) {

2185 
fs
->
œ°_˛u°
 = 
LD_DWORD
(fs->
wö
+
FSI_Nxt_Fªe
);

2186 
	gfs
->
	g‰ì_˛u°
 = 
LD_DWORD
(
fs
->
wö
+
FSI_Fªe_Cou¡
);

2190 
	gfs
->
	gfs_ty≥
 = 
fmt
;

2191 
	gfs
->
	gid
 = ++
Fsid
;

2192 
	gfs
->
	gwö£˘
 = 0;

2193 
	gfs
->
	gwÊag
 = 0;

2194 #i‡
_FS_RPATH


2195 
	gfs
->
	gcdú
 = 0;

2197 #i‡
_FS_LOCK


2198 
˛ór_lock
(
fs
);

2201  
	gFR_OK
;

2212 
FRESULT
 
vÆid©e
 (

2213 * 
obj


2216 
FIL
 *
	gfû
;

2219 
	gfû
 = (
FIL
*)
obj
;

2220 i‡(!
	gfû
->
	gfs
 || !fû->fs->
	gfs_ty≥
 || fû->fs->
	gid
 !
fû
->
id
)

2221  
FR_INVALID_OBJECT
;

2223 
ENTER_FF
(
fû
->
fs
);

2225 i‡(
disk_°©us
(
fû
->
fs
->
drv
Ë& 
	gSTA_NOINIT
)

2226  
	gFR_NOT_READY
;

2228  
	gFR_OK
;

2246 
FRESULT
 
f_mou¡
 (

2247 
BYTE
 
vﬁ
,

2248 
FATFS
 *
fs


2251 
FATFS
 *
	grfs
;

2254 i‡(
	gvﬁ
 >
_VOLUMES
)

2255  
FR_INVALID_DRIVE
;

2256 
	grfs
 = 
F©Fs
[
vﬁ
];

2258 i‡(
	grfs
) {

2259 #i‡
_FS_LOCK


2260 
˛ór_lock
(
rfs
);

2262 #i‡
_FS_REENTRANT


2263 i‡(!
ff_dñ_syncobj
(
rfs
->
sobj
)Ë 
	gFR_INT_ERR
;

2265 
	grfs
->
	gfs_ty≥
 = 0;

2268 i‡(
	gfs
) {

2269 
	gfs
->
	gfs_ty≥
 = 0;

2270 #i‡
_FS_REENTRANT


2271 i‡(!
ff_¸e_syncobj
(
vﬁ
, &
fs
->
sobj
)Ë 
	gFR_INT_ERR
;

2274 
	gF©Fs
[
vﬁ
] = 
fs
;

2276  
	gFR_OK
;

2286 
FRESULT
 
f_›í
 (

2287 
FIL
 *
Â
,

2288 c⁄° 
TCHAR
 *
∑th
,

2289 
BYTE
 
mode


2292 
FRESULT
 
	gªs
;

2293 
FATFS_DIR
 
	gdj
;

2294 
BYTE
 *
	gdú
;

2295 
	gDEF_NAMEBUF
;

2298 i‡(!
	gÂ
Ë 
	gFR_INVALID_OBJECT
;

2299 
	gÂ
->
	gfs
 = 0;

2301 #i‡!
_FS_READONLY


2302 
	gmode
 &
FA_READ
 | 
FA_WRITE
 | 
FA_CREATE_ALWAYS
 | 
FA_OPEN_ALWAYS
 | 
FA_CREATE_NEW
;

2303 
	gªs
 = 
chk_mou¡ed
(&
∑th
, &
dj
.
fs
, (
BYTE
)(
mode
 & ~
FA_READ
));

2305 
	gmode
 &
FA_READ
;

2306 
	gªs
 = 
chk_mou¡ed
(&
∑th
, &
dj
.
fs
, 0);

2308 i‡(
	gªs
 =
FR_OK
) {

2309 
INIT_BUF
(
dj
);

2310 
	gªs
 = 
fﬁlow_∑th
(&
dj
, 
∑th
);

2311 
	gdú
 = 
dj
.
dú
;

2312 #i‡!
_FS_READONLY


2313 i‡(
	gªs
 =
FR_OK
) {

2314 i‡(!
dú
)

2315 
ªs
 = 
FR_INVALID_NAME
;

2316 #i‡
_FS_LOCK


2318 
	gªs
 = 
chk_lock
(&
dj
, (
mode
 & ~
FA_READ
) ? 1 : 0);

2322 i‡(
	gmode
 & (
	gFA_CREATE_ALWAYS
 | 
	gFA_OPEN_ALWAYS
 | 
	gFA_CREATE_NEW
)) {

2323 
DWORD
 
	gdw
, 
	g˛
;

2325 i‡(
	gªs
 !
FR_OK
) {

2326 i‡(
ªs
 =
FR_NO_FILE
)

2327 #i‡
_FS_LOCK


2328 
ªs
 = 
íq_lock
(Ë? 
dú_ªgi°î
(&
dj
Ë: 
FR_TOO_MANY_OPEN_FILES
;

2330 
	gªs
 = 
dú_ªgi°î
(&
dj
);

2332 
	gmode
 |
FA_CREATE_ALWAYS
;

2333 
	gdú
 = 
dj
.
dú
;

2336 i‡(
	gdú
[
DIR_Aâr
] & (
	gAM_RDO
 | 
	gAM_DIR
)) {

2337 
	gªs
 = 
FR_DENIED
;

2339 i‡(
	gmode
 & 
	gFA_CREATE_NEW
)

2340 
	gªs
 = 
FR_EXIST
;

2343 i‡(
	gªs
 =
FR_OK
 && (
mode
 & 
FA_CREATE_ALWAYS
)) {

2344 
dw
 = 
gë_Áâime
();

2345 
ST_DWORD
(
dú
+
DIR_CπTime
, 
dw
);

2346 
	gdú
[
DIR_Aâr
] = 0;

2347 
ST_DWORD
(
dú
+
DIR_FûeSize
, 0);

2348 
	g˛
 = 
ld_˛u°
(
dj
.
fs
, 
dú
);

2349 
°_˛u°
(
dú
, 0);

2350 
	gdj
.
	gfs
->
	gwÊag
 = 1;

2351 i‡(
	g˛
) {

2352 
	gdw
 = 
dj
.
fs
->
wö£˘
;

2353 
	gªs
 = 
ªmove_chaö
(
dj
.
fs
, 
˛
);

2354 i‡(
	gªs
 =
FR_OK
) {

2355 
dj
.
fs
->
œ°_˛u°
 = 
˛
 - 1;

2356 
	gªs
 = 
move_wödow
(
dj
.
fs
, 
dw
);

2362 i‡(
	gªs
 =
FR_OK
) {

2363 i‡(
dú
[
DIR_Aâr
] & 
AM_DIR
) {

2364 
ªs
 = 
FR_NO_FILE
;

2366 i‡((
	gmode
 & 
	gFA_WRITE
Ë&& (
	gdú
[
DIR_Aâr
] & 
	gAM_RDO
))

2367 
	gªs
 = 
FR_DENIED
;

2371 i‡(
	gªs
 =
FR_OK
) {

2372 i‡(
mode
 & 
FA_CREATE_ALWAYS
)

2373 
mode
 |
FA__WRITTEN
;

2374 
	gÂ
->
	gdú_£˘
 = 
dj
.
fs
->
wö£˘
;

2375 
	gÂ
->
	gdú_±r
 = 
dú
;

2376 #i‡
_FS_LOCK


2377 
	gÂ
->
	glockid
 = 
öc_lock
(&
dj
, (
mode
 & ~
FA_READ
) ? 1 : 0);

2378 i‡(!
	gÂ
->
	glockid
Ë
	gªs
 = 
FR_INT_ERR
;

2383 i‡(
	gªs
 =
FR_OK
) {

2384 
dú
 = 
dj
.dir;

2385 i‡(!
	gdú
) {

2386 
	gªs
 = 
FR_INVALID_NAME
;

2388 i‡(
	gdú
[
DIR_Aâr
] & 
	gAM_DIR
)

2389 
	gªs
 = 
FR_NO_FILE
;

2393 
FREE_BUF
();

2395 i‡(
	gªs
 =
FR_OK
) {

2396 
Â
->
Êag
 = 
mode
;

2397 
	gÂ
->
	gs˛u°
 = 
ld_˛u°
(
dj
.
fs
, 
dú
);

2398 
	gÂ
->
	gfsize
 = 
LD_DWORD
(
dú
+
DIR_FûeSize
);

2399 
	gÂ
->
	gÂå
 = 0;

2400 
	gÂ
->
	gd£˘
 = 0;

2401 #i‡
_USE_FASTSEEK


2402 
	gÂ
->
	g˛tbl
 = 0;

2404 
	gÂ
->
	gfs
 = 
dj
.
fs
; fp->
	gid
 = dj.fs->
id
;

2408 
LEAVE_FF
(
dj
.
fs
, 
ªs
);

2418 
FRESULT
 
f_ªad
 (

2419 
FIL
 *
Â
,

2420 *
buff
,

2421 
UINT
 
bå
,

2422 
UINT
 *
br


2425 
FRESULT
 
	gªs
;

2426 
DWORD
 
	g˛°
, 
	g£˘
, 
	gªmaö
;

2427 
UINT
 
	gr˙t
, 
	gcc
;

2428 
BYTE
 
	gc£˘
, *
	grbuff
 = (BYTE *)
buff
;

2431 *
	gbr
 = 0;

2433 
	gªs
 = 
vÆid©e
(
Â
);

2434 i‡(
	gªs
 !
FR_OK
Ë
LEAVE_FF
(
Â
->
fs
, 
ªs
);

2435 i‡(
	gÂ
->
	gÊag
 & 
	gFA__ERROR
)

2436 
LEAVE_FF
(
Â
->
fs
, 
FR_INT_ERR
);

2437 i‡(!(
	gÂ
->
	gÊag
 & 
	gFA_READ
))

2438 
LEAVE_FF
(
Â
->
fs
, 
FR_DENIED
);

2439 
	gªmaö
 = 
Â
->
fsize
 - fp->
Âå
;

2440 i‡(
	gbå
 > 
	gªmaö
Ëbå = (
UINT
)
ªmaö
;

2442  ; 
	gbå
;

2443 
	grbuff
 +
r˙t
, 
	gÂ
->
	gÂå
 +r˙t, *
	gbr
 +r˙t, 
	gbå
 -=Ñcnt) {

2444 i‡((
Â
->
Âå
 % 
SS
(Â->
fs
)) == 0) {

2445 
c£˘
 = (
BYTE
)(
Â
->
Âå
 / 
SS
(Â->
fs
Ë& (Â->fs->
csize
 - 1));

2446 i‡(!
	gc£˘
) {

2447 i‡(
	gÂ
->
	gÂå
 == 0) {

2448 
˛°
 = 
Â
->
s˛u°
;

2450 #i‡
_USE_FASTSEEK


2451 i‡(
	gÂ
->
	g˛tbl
)

2452 
	g˛°
 = 
˛mt_˛u°
(
Â
, fp->
Âå
);

2455 
	g˛°
 = 
gë_Át
(
Â
->
fs
, fp->
˛u°
);

2457 i‡(
	g˛°
 < 2Ë
ABORT
(
Â
->
fs
, 
FR_INT_ERR
);

2458 i‡(
	g˛°
 =0xFFFFFFFFË
ABORT
(
Â
->
fs
, 
FR_DISK_ERR
);

2459 
	gÂ
->
	g˛u°
 = 
˛°
;

2461 
	g£˘
 = 
˛u°2£˘
(
Â
->
fs
, fp->
˛u°
);

2462 i‡(!
	g£˘
Ë
ABORT
(
Â
->
fs
, 
FR_INT_ERR
);

2463 
	g£˘
 +
c£˘
;

2464 
	gcc
 = 
bå
 / 
SS
(
Â
->
fs
);

2465 i‡(
	gcc
) {

2466 i‡(
	gc£˘
 + 
	gcc
 > 
	gÂ
->
	gfs
->
	gcsize
)

2467 
	gcc
 = 
Â
->
fs
->
csize
 - 
c£˘
;

2468 i‡(
disk_ªad
(
Â
->
fs
->
drv
, 
rbuff
, 
£˘
, (
BYTE
)
cc
Ë!
RES_OK
)

2469 
ABORT
(
Â
->
fs
, 
FR_DISK_ERR
);

2470 #i‡!
_FS_READONLY
 && 
_FS_MINIMIZE
 <= 2

2471 #i‡
_FS_TINY


2472 i‡(
	gÂ
->
	gfs
->
	gwÊag
 && fp->fs->
	gwö£˘
 - 
	g£˘
 < 
	gcc
)

2473 
mem_˝y
(
rbuff
 + ((
Â
->
fs
->
wö£˘
 - 
£˘
Ë* 
SS
(Â->fs)), fp->fs->
wö
, SS(fp->fs));

2475 i‡((
	gÂ
->
	gÊag
 & 
	gFA__DIRTY
Ë&& fp->
	gd£˘
 - 
	g£˘
 < 
	gcc
)

2476 
mem_˝y
(
rbuff
 + ((
Â
->
d£˘
 - 
£˘
Ë* 
SS
(Â->
fs
)), fp->
buf
, SS(fp->fs));

2479 
	gr˙t
 = 
SS
(
Â
->
fs
Ë* 
cc
;

2482 #i‡!
_FS_TINY


2483 i‡(
	gÂ
->
	gd£˘
 !
£˘
) {

2484 #i‡!
_FS_READONLY


2485 i‡(
Â
->
Êag
 & 
FA__DIRTY
) {

2486 i‡(
disk_wrôe
(
Â
->
fs
->
drv
, fp->
buf
, fp->
d£˘
, 1Ë!
RES_OK
)

2487 
ABORT
(
Â
->
fs
, 
FR_DISK_ERR
);

2488 
	gÂ
->
	gÊag
 &~
FA__DIRTY
;

2491 i‡(
disk_ªad
(
Â
->
fs
->
drv
, fp->
buf
, 
£˘
, 1Ë!
RES_OK
)

2492 
ABORT
(
Â
->
fs
, 
FR_DISK_ERR
);

2495 
	gÂ
->
	gd£˘
 = 
£˘
;

2497 
	gr˙t
 = 
SS
(
Â
->
fs
Ë- ((
UINT
)Â->
Âå
 % SS(fp->fs));

2498 i‡(
	gr˙t
 > 
	gbå
Ër˙à
bå
;

2499 #i‡
_FS_TINY


2500 i‡(
move_wödow
(
Â
->
fs
, fp->
d£˘
))

2501 
ABORT
(
Â
->
fs
, 
FR_DISK_ERR
);

2502 
mem_˝y
(
rbuff
, &
Â
->
fs
->
wö
[Â->
Âå
 % 
SS
(Â->fs)], 
r˙t
);

2504 
mem_˝y
(
rbuff
, &
Â
->
buf
[Â->
Âå
 % 
SS
(Â->
fs
)], 
r˙t
);

2508 
LEAVE_FF
(
Â
->
fs
, 
FR_OK
);

2514 #i‡!
_FS_READONLY


2519 
FRESULT
 
f_wrôe
 (

2520 
FIL
 *
Â
,

2521 c⁄° *
buff
,

2522 
UINT
 
btw
,

2523 
UINT
 *
bw


2526 
FRESULT
 
	gªs
;

2527 
DWORD
 
	g˛°
, 
	g£˘
;

2528 
UINT
 
	gw˙t
, 
	gcc
;

2529 c⁄° 
BYTE
 *
	gwbuff
 = (c⁄° BYTE *)
buff
;

2530 
BYTE
 
	gc£˘
;

2531 
boﬁ
 
	g√ed_sync
 = 
Ál£
;

2533 *
	gbw
 = 0;

2535 
	gªs
 = 
vÆid©e
(
Â
);

2536 i‡(
	gªs
 !
FR_OK
Ë
LEAVE_FF
(
Â
->
fs
, 
ªs
);

2537 i‡(
	gÂ
->
	gÊag
 & 
	gFA__ERROR
)

2538 
LEAVE_FF
(
Â
->
fs
, 
FR_INT_ERR
);

2539 i‡(!(
	gÂ
->
	gÊag
 & 
	gFA_WRITE
))

2540 
LEAVE_FF
(
Â
->
fs
, 
FR_DENIED
);

2541 i‡((
	gDWORD
)(
	gÂ
->
	gfsize
 + 
	gbtw
) < fp->fsize) btw = 0;

2543  ; 
	gbtw
;

2544 
	gwbuff
 +
w˙t
, 
	gÂ
->
	gÂå
 +w˙t, *
	gbw
 +w˙t, 
	gbtw
 -= wcnt) {

2545 i‡((
Â
->
Âå
 % 
SS
(Â->
fs
)) == 0) {

2546 
c£˘
 = (
BYTE
)(
Â
->
Âå
 / 
SS
(Â->
fs
Ë& (Â->fs->
csize
 - 1));

2547 i‡(!
	gc£˘
) {

2548 i‡(
	gÂ
->
	gÂå
 == 0) {

2549 
˛°
 = 
Â
->
s˛u°
;

2550 i‡(
	g˛°
 == 0)

2551 
Â
->
s˛u°
 = 
˛°
 = 
¸óã_chaö
(Â->
fs
, 0);

2553 #i‡
_USE_FASTSEEK


2554 i‡(
	gÂ
->
	g˛tbl
)

2555 
	g˛°
 = 
˛mt_˛u°
(
Â
, fp->
Âå
);

2558 
	g˛°
 = 
¸óã_chaö
(
Â
->
fs
, fp->
˛u°
);

2560 i‡(
	g˛°
 == 0) ;

2561 i‡(
	g˛°
 =1Ë
ABORT
(
Â
->
fs
, 
FR_INT_ERR
);

2562 i‡(
	g˛°
 =0xFFFFFFFFË
ABORT
(
Â
->
fs
, 
FR_DISK_ERR
);

2563 
	gÂ
->
	g˛u°
 = 
˛°
;

2565 #ifde‡
FLUSH_ON_NEW_CLUSTER


2567 i‡(
	gÂ
->
	gÂå
 != 0) {

2568 
√ed_sync
 = 
åue
;

2572 #i‡
_FS_TINY


2573 i‡(
	gÂ
->
	gfs
->
	gwö£˘
 =
Â
->
d£˘
 && 
move_wödow
(Â->
fs
, 0))

2574 
ABORT
(
Â
->
fs
, 
FR_DISK_ERR
);

2576 i‡(
	gÂ
->
	gÊag
 & 
	gFA__DIRTY
) {

2577 i‡(
disk_wrôe
(
Â
->
fs
->
drv
, fp->
buf
, fp->
d£˘
, 1Ë!
RES_OK
)

2578 
ABORT
(
Â
->
fs
, 
FR_DISK_ERR
);

2579 
	gÂ
->
	gÊag
 &~
FA__DIRTY
;

2582 
	g£˘
 = 
˛u°2£˘
(
Â
->
fs
, fp->
˛u°
);

2583 i‡(!
	g£˘
Ë
ABORT
(
Â
->
fs
, 
FR_INT_ERR
);

2584 
	g£˘
 +
c£˘
;

2585 
	gcc
 = 
btw
 / 
SS
(
Â
->
fs
);

2586 i‡(
	gcc
) {

2587 i‡(
	gc£˘
 + 
	gcc
 > 
	gÂ
->
	gfs
->
	gcsize
)

2588 
	gcc
 = 
Â
->
fs
->
csize
 - 
c£˘
;

2589 i‡(
disk_wrôe
(
Â
->
fs
->
drv
, 
wbuff
, 
£˘
, (
BYTE
)
cc
Ë!
RES_OK
)

2590 
ABORT
(
Â
->
fs
, 
FR_DISK_ERR
);

2591 #i‡
_FS_TINY


2592 i‡(
	gÂ
->
	gfs
->
	gwö£˘
 - 
	g£˘
 < 
	gcc
) {

2593 
mem_˝y
(
Â
->
fs
->
wö
, 
wbuff
 + ((Â->fs->
wö£˘
 - 
£˘
Ë* 
SS
(fp->fs)), SS(fp->fs));

2594 
	gÂ
->
	gfs
->
	gwÊag
 = 0;

2597 i‡(
	gÂ
->
	gd£˘
 - 
	g£˘
 < 
	gcc
) {

2598 
mem_˝y
(
Â
->
buf
, 
wbuff
 + ((Â->
d£˘
 - 
£˘
Ë* 
SS
(Â->
fs
)), SS(fp->fs));

2599 
	gÂ
->
	gÊag
 &~
FA__DIRTY
;

2602 
	gw˙t
 = 
SS
(
Â
->
fs
Ë* 
cc
;

2603 #ifde‡
FLUSH_ON_NEW_SECTOR


2604 
	g√ed_sync
 = 
åue
;

2608 #i‡
_FS_TINY


2609 i‡(
	gÂ
->
	gÂå
 >
Â
->
fsize
) {

2610 i‡(
move_wödow
(
Â
->
fs
, 0)Ë
ABORT
(Â->fs, 
FR_DISK_ERR
);

2611 
	gÂ
->
	gfs
->
	gwö£˘
 = 
£˘
;

2614 i‡(
	gÂ
->
	gd£˘
 !
£˘
) {

2615 i‡(
Â
->
Âå
 < fp->
fsize
 &&

2616 
disk_ªad
(
Â
->
fs
->
drv
, fp->
buf
, 
£˘
, 1Ë!
RES_OK
)

2617 
ABORT
(
Â
->
fs
, 
FR_DISK_ERR
);

2620 
	gÂ
->
	gd£˘
 = 
£˘
;

2622 
	gw˙t
 = 
SS
(
Â
->
fs
Ë- ((
UINT
)Â->
Âå
 % SS(fp->fs));

2623 i‡(
	gw˙t
 > 
	gbtw
Ëw˙à
btw
;

2624 #i‡
_FS_TINY


2625 i‡(
move_wödow
(
Â
->
fs
, fp->
d£˘
))

2626 
ABORT
(
Â
->
fs
, 
FR_DISK_ERR
);

2627 
mem_˝y
(&
Â
->
fs
->
wö
[Â->
Âå
 % 
SS
(Â->fs)], 
wbuff
, 
w˙t
);

2628 
	gÂ
->
	gfs
->
	gwÊag
 = 1;

2630 
mem_˝y
(&
Â
->
buf
[Â->
Âå
 % 
SS
(Â->
fs
)], 
wbuff
, 
w˙t
);

2631 
	gÂ
->
	gÊag
 |
FA__DIRTY
;

2635 i‡(
	gÂ
->
	gÂå
 > fp->
	gfsize
ËÂ->fsizê
Â
->
Âå
;

2636 
	gÂ
->
	gÊag
 |
FA__WRITTEN
;

2638 i‡(
	g√ed_sync
) {

2639 
f_sync
 (
Â
);

2642 
LEAVE_FF
(
Â
->
fs
, 
FR_OK
);

2652 
FRESULT
 
f_sync
 (

2653 
FIL
 *
Â


2656 
FRESULT
 
	gªs
;

2657 
DWORD
 
	gtim
;

2658 
BYTE
 *
	gdú
;

2661 
	gªs
 = 
vÆid©e
(
Â
);

2662 i‡(
	gªs
 =
FR_OK
) {

2663 i‡(
Â
->
Êag
 & 
FA__WRITTEN
) {

2664 #i‡!
_FS_TINY


2665 i‡(
Â
->
Êag
 & 
FA__DIRTY
) {

2666 i‡(
disk_wrôe
(
Â
->
fs
->
drv
, fp->
buf
, fp->
d£˘
, 1Ë!
RES_OK
)

2667 
LEAVE_FF
(
Â
->
fs
, 
FR_DISK_ERR
);

2668 
	gÂ
->
	gÊag
 &~
FA__DIRTY
;

2672 
	gªs
 = 
move_wödow
(
Â
->
fs
, fp->
dú_£˘
);

2673 i‡(
	gªs
 =
FR_OK
) {

2674 
dú
 = 
Â
->
dú_±r
;

2675 
	gdú
[
DIR_Aâr
] |
AM_ARC
;

2676 
ST_DWORD
(
dú
+
DIR_FûeSize
, 
Â
->
fsize
);

2677 
°_˛u°
(
dú
, 
Â
->
s˛u°
);

2678 
	gtim
 = 
gë_Áâime
();

2679 
ST_DWORD
(
dú
+
DIR_WπTime
, 
tim
);

2680 
ST_WORD
(
dú
+
DIR_L°AccD©e
, 0);

2681 
	gÂ
->
	gÊag
 &~
FA__WRITTEN
;

2682 
	gÂ
->
	gfs
->
	gwÊag
 = 1;

2683 
	gªs
 = 
sync
(
Â
->
fs
);

2688 
LEAVE_FF
(
Â
->
fs
, 
ªs
);

2700 
FRESULT
 
f_˛o£
 (

2701 
FIL
 *
Â


2704 
FRESULT
 
	gªs
;

2707 #i‡
_FS_READONLY


2708 
	gªs
 = 
vÆid©e
(
Â
);

2710 #i‡
_FS_REENTRANT


2711 
FATFS
 *
	gfs
 = 
Â
->
fs
;

2713 i‡(
	gªs
 =
FR_OK
Ë
Â
->
fs
 = 0;

2714 
LEAVE_FF
(
fs
, 
ªs
);

2717 
	gªs
 = 
f_sync
(
Â
);

2718 #i‡
_FS_LOCK


2719 i‡(
	gªs
 =
FR_OK
) {

2720 #i‡
_FS_REENTRANT


2721 
FATFS
 *
fs
 = 
Â
->fs;;

2722 
	gªs
 = 
vÆid©e
(
Â
);

2723 i‡(
	gªs
 =
FR_OK
) {

2724 
ªs
 = 
dec_lock
(
Â
->
lockid
);

2725 
u∆ock_fs
(
fs
, 
FR_OK
);

2728 
	gªs
 = 
dec_lock
(
Â
->
lockid
);

2732 i‡(
	gªs
 =
FR_OK
Ë
Â
->
fs
 = 0;

2733  
	gªs
;

2744 #i‡
_FS_RPATH
 >= 1

2746 
FRESULT
 
f_chdrive
 (

2747 
BYTE
 
drv


2750 i‡(
	gdrv
 >
_VOLUMES
Ë 
FR_INVALID_DRIVE
;

2752 
	gCuºVﬁ
 = 
drv
;

2754  
	gFR_OK
;

2759 
FRESULT
 
f_chdú
 (

2760 c⁄° 
TCHAR
 *
∑th


2763 
FRESULT
 
	gªs
;

2764 
DIR
 
	gdj
;

2765 
	gDEF_NAMEBUF
;

2768 
	gªs
 = 
chk_mou¡ed
(&
∑th
, &
dj
.
fs
, 0);

2769 i‡(
	gªs
 =
FR_OK
) {

2770 
INIT_BUF
(
dj
);

2771 
	gªs
 = 
fﬁlow_∑th
(&
dj
, 
∑th
);

2772 
FREE_BUF
();

2773 i‡(
	gªs
 =
FR_OK
) {

2774 i‡(!
dj
.
dú
) {

2775 
dj
.
fs
->
cdú
 = dj.
s˛u°
;

2777 i‡(
	gdj
.
	gdú
[
DIR_Aâr
] & 
	gAM_DIR
)

2778 
	gdj
.
	gfs
->
	gcdú
 = 
ld_˛u°
(
dj
.
fs
, dj.
dú
);

2780 
	gªs
 = 
FR_NO_PATH
;

2783 i‡(
	gªs
 =
FR_NO_FILE
Ë
ªs
 = 
FR_NO_PATH
;

2786 
LEAVE_FF
(
dj
.
fs
, 
ªs
);

2790 #i‡
_FS_RPATH
 >= 2

2791 
FRESULT
 
f_gëcwd
 (

2792 
TCHAR
 *
∑th
,

2793 
UINT
 
sz_∑th


2796 
FRESULT
 
	gªs
;

2797 
DIR
 
	gdj
;

2798 
UINT
 
	gi
, 
	gn
;

2799 
DWORD
 
	gc˛
;

2800 
TCHAR
 *
	gç
;

2801 
FILINFO
 
	g‚o
;

2802 
	gDEF_NAMEBUF
;

2805 *
	g∑th
 = 0;

2806 
	gªs
 = 
chk_mou¡ed
((c⁄° 
TCHAR
**)&
∑th
, &
dj
.
fs
, 0);

2807 i‡(
	gªs
 =
FR_OK
) {

2808 
INIT_BUF
(
dj
);

2809 
	gi
 = 
sz_∑th
;

2810 
	gdj
.
	gs˛u°
 = 
dj
.
fs
->
cdú
;

2811 (
	gc˛
 = 
dj
.
s˛u°
) != 0) {

2812 
ªs
 = 
dú_sdi
(&
dj
, 1);

2813 i‡(
	gªs
 !
FR_OK
) ;

2814 
	gªs
 = 
dú_ªad
(&
dj
);

2815 i‡(
	gªs
 !
FR_OK
) ;

2816 
	gdj
.
	gs˛u°
 = 
ld_˛u°
(
dj
.
fs
, dj.
dú
);

2817 
	gªs
 = 
dú_sdi
(&
dj
, 0);

2818 i‡(
	gªs
 !
FR_OK
) ;

2820 
	gªs
 = 
dú_ªad
(&
dj
);

2821 i‡(
	gªs
 !
FR_OK
) ;

2822 i‡(
	gc˛
 =
ld_˛u°
(
dj
.
fs
, dj.
dú
)) ;

2823 
	gªs
 = 
dú_√xt
(&
dj
, 0);

2824 } 
	gªs
 =
FR_OK
);

2825 i‡(
	gªs
 =
FR_NO_FILE
Ë
ªs
 = 
FR_INT_ERR
;

2826 i‡(
	gªs
 !
FR_OK
) ;

2827 #i‡
_USE_LFN


2828 
	g‚o
.
	gl‚ame
 = 
∑th
;

2829 
	g‚o
.
	glfsize
 = 
i
;

2831 
gë_fûeöfo
(&
dj
, &
‚o
);

2832 
	gç
 = 
‚o
.
‚ame
;

2833 i‡(
	g_USE_LFN
 && *
	g∑th
Ë
	gç
 = 
∑th
;

2834 
	gn
 = 0; 
	gç
[
n
];Ç++) ;

2835 i‡(
	gi
 < 
	gn
 + 3) {

2836 
	gªs
 = 
FR_NOT_ENOUGH_CORE
; ;

2838 
	gn
Ë
	g∑th
[--
i
] = 
ç
[--
n
];

2839 
	g∑th
[--
i
] = '/';

2841 
	gç
 = 
∑th
;

2842 i‡(
	gªs
 =
FR_OK
) {

2843 *
ç
++ = '0' + 
CuºVﬁ
;

2844 *
	gç
++ = ':';

2845 i‡(
	gi
 =
sz_∑th
) {

2846 *
ç
++ = '/';

2849 *
	gç
++ = 
∑th
[
i
++];

2850 
	gi
 < 
	gsz_∑th
);

2853 *
	gç
 = 0;

2854 
FREE_BUF
();

2857 
LEAVE_FF
(
dj
.
fs
, 
ªs
);

2864 #i‡
_FS_MINIMIZE
 <= 2

2869 
FRESULT
 
f_l£ek
 (

2870 
FIL
 *
Â
,

2871 
DWORD
 
ofs


2874 
FRESULT
 
	gªs
;

2877 
	gªs
 = 
vÆid©e
(
Â
);

2878 i‡(
	gªs
 !
FR_OK
Ë
LEAVE_FF
(
Â
->
fs
, 
ªs
);

2879 i‡(
	gÂ
->
	gÊag
 & 
	gFA__ERROR
)

2880 
LEAVE_FF
(
Â
->
fs
, 
FR_INT_ERR
);

2882 #i‡
_USE_FASTSEEK


2883 i‡(
	gÂ
->
	g˛tbl
) {

2884 
DWORD
 
	g˛
, 
	gp˛
, 
	gn˛
, 
	gt˛
, 
	gdsc
, 
	géí
, 
	guÀn
, *
	gtbl
;

2886 i‡(
	gofs
 =
CREATE_LINKMAP
) {

2887 
tbl
 = 
Â
->
˛tbl
;

2888 
	géí
 = *
tbl
++; 
	guÀn
 = 2;

2889 
	g˛
 = 
Â
->
s˛u°
;

2890 i‡(
	g˛
) {

2893 
	gt˛
 = 
˛
; 
	gn˛
 = 0; 
	guÀn
 += 2;

2895 
	gp˛
 = 
˛
; 
	gn˛
++;

2896 
	g˛
 = 
gë_Át
(
Â
->
fs
, 
˛
);

2897 i‡(
	g˛
 <1Ë
ABORT
(
Â
->
fs
, 
FR_INT_ERR
);

2898 i‡(
	g˛
 =0xFFFFFFFFË
ABORT
(
Â
->
fs
, 
FR_DISK_ERR
);

2899 } 
	g˛
 =
p˛
 + 1);

2900 i‡(
	guÀn
 <
éí
) {

2901 *
tbl
++ = 
n˛
; *
	gtbl
++ = 
t˛
;

2903 } 
	g˛
 < 
	gÂ
->
	gfs
->
	gn_Áã¡
);

2905 *
	gÂ
->
	g˛tbl
 = 
uÀn
;

2906 i‡(
	guÀn
 <
éí
)

2907 *
tbl
 = 0;

2909 
	gªs
 = 
FR_NOT_ENOUGH_CORE
;

2912 i‡(
	gofs
 > 
	gÂ
->
	gfsize
)

2913 
	gofs
 = 
Â
->
fsize
;

2914 
	gÂ
->
	gÂå
 = 
ofs
;

2915 i‡(
	gofs
) {

2916 
	gÂ
->
	g˛u°
 = 
˛mt_˛u°
(
Â
, 
ofs
 - 1);

2917 
	gdsc
 = 
˛u°2£˘
(
Â
->
fs
, fp->
˛u°
);

2918 i‡(!
	gdsc
Ë
ABORT
(
Â
->
fs
, 
FR_INT_ERR
);

2919 
	gdsc
 +(
ofs
 - 1Ë/ 
SS
(
Â
->
fs
Ë& (Â->fs->
csize
 - 1);

2920 i‡(
	gÂ
->
	gÂå
 % 
SS
(
Â
->
fs
Ë&& 
	gdsc
 !Â->
d£˘
) {

2921 #i‡!
_FS_TINY


2922 #i‡!
_FS_READONLY


2923 i‡(
Â
->
Êag
 & 
FA__DIRTY
) {

2924 i‡(
disk_wrôe
(
Â
->
fs
->
drv
, fp->
buf
, fp->
d£˘
, 1Ë!
RES_OK
)

2925 
ABORT
(
Â
->
fs
, 
FR_DISK_ERR
);

2926 
	gÂ
->
	gÊag
 &~
FA__DIRTY
;

2929 i‡(
disk_ªad
(
Â
->
fs
->
drv
, fp->
buf
, 
dsc
, 1Ë!
RES_OK
)

2930 
ABORT
(
Â
->
fs
, 
FR_DISK_ERR
);

2932 
	gÂ
->
	gd£˘
 = 
dsc
;

2941 
DWORD
 
	g˛°
, 
	gbcs
, 
	gn£˘
, 
	giÂå
;

2943 i‡(
	gofs
 > 
	gÂ
->
	gfsize


2944 #i‡!
_FS_READONLY


2945 && !(
	gÂ
->
	gÊag
 & 
	gFA_WRITE
)

2947 Ë
	gofs
 = 
Â
->
fsize
;

2949 
	giÂå
 = 
Â
->
Âå
;

2950 
	gÂ
->
	gÂå
 = 
n£˘
 = 0;

2951 i‡(
	gofs
) {

2952 
	gbcs
 = (
DWORD
)
Â
->
fs
->
csize
 * 
SS
(fp->fs);

2953 i‡(
	giÂå
 > 0 &&

2954 (
	gofs
 - 1Ë/ 
	gbcs
 >(
iÂå
 - 1Ë/ 
bcs
) {

2955 
Â
->
Âå
 = (
iÂå
 - 1Ë& ~(
bcs
 - 1);

2956 
	gofs
 -
Â
->
Âå
;

2957 
	g˛°
 = 
Â
->
˛u°
;

2959 
	g˛°
 = 
Â
->
s˛u°
;

2960 #i‡!
_FS_READONLY


2961 i‡(
	g˛°
 == 0) {

2962 
˛°
 = 
¸óã_chaö
(
Â
->
fs
, 0);

2963 i‡(
	g˛°
 =1Ë
ABORT
(
Â
->
fs
, 
FR_INT_ERR
);

2964 i‡(
	g˛°
 =0xFFFFFFFFË
ABORT
(
Â
->
fs
, 
FR_DISK_ERR
);

2965 
	gÂ
->
	gs˛u°
 = 
˛°
;

2968 
	gÂ
->
	g˛u°
 = 
˛°
;

2970 i‡(
	g˛°
 != 0) {

2971 
ofs
 > 
bcs
) {

2972 #i‡!
_FS_READONLY


2973 i‡(
Â
->
Êag
 & 
FA_WRITE
) {

2974 
˛°
 = 
¸óã_chaö
(
Â
->
fs
, clst);

2975 i‡(
	g˛°
 == 0) {

2976 
ofs
 = 
bcs
; ;

2980 
	g˛°
 = 
gë_Át
(
Â
->
fs
, 
˛°
);

2981 i‡(
	g˛°
 =0xFFFFFFFFË
ABORT
(
Â
->
fs
, 
FR_DISK_ERR
);

2982 i‡(
	g˛°
 <1 || 
˛°
 >
Â
->
fs
->
n_Áã¡
Ë
ABORT
(Â->fs, 
FR_INT_ERR
);

2983 
	gÂ
->
	g˛u°
 = 
˛°
;

2984 
	gÂ
->
	gÂå
 +
bcs
;

2985 
	gofs
 -
bcs
;

2987 
	gÂ
->
	gÂå
 +
ofs
;

2988 i‡(
	gofs
 % 
SS
(
Â
->
fs
)) {

2989 
	gn£˘
 = 
˛u°2£˘
(
Â
->
fs
, 
˛°
);

2990 i‡(!
	gn£˘
Ë
ABORT
(
Â
->
fs
, 
FR_INT_ERR
);

2991 
	gn£˘
 +
ofs
 / 
SS
(
Â
->
fs
);

2995 i‡(
	gÂ
->
	gÂå
 % 
SS
(
Â
->
fs
Ë&& 
	gn£˘
 !Â->
d£˘
) {

2996 #i‡!
_FS_TINY


2997 #i‡!
_FS_READONLY


2998 i‡(
Â
->
Êag
 & 
FA__DIRTY
) {

2999 i‡(
disk_wrôe
(
Â
->
fs
->
drv
, fp->
buf
, fp->
d£˘
, 1Ë!
RES_OK
)

3000 
ABORT
(
Â
->
fs
, 
FR_DISK_ERR
);

3001 
	gÂ
->
	gÊag
 &~
FA__DIRTY
;

3004 i‡(
disk_ªad
(
Â
->
fs
->
drv
, fp->
buf
, 
n£˘
, 1Ë!
RES_OK
)

3005 
ABORT
(
Â
->
fs
, 
FR_DISK_ERR
);

3007 
	gÂ
->
	gd£˘
 = 
n£˘
;

3009 #i‡!
_FS_READONLY


3010 i‡(
	gÂ
->
	gÂå
 > fp->
	gfsize
) {

3011 
	gÂ
->
	gfsize
 = 
Â
->
Âå
;

3012 
	gÂ
->
	gÊag
 |
FA__WRITTEN
;

3017 
LEAVE_FF
(
Â
->
fs
, 
ªs
);

3022 #i‡
_FS_MINIMIZE
 <= 1

3027 
FRESULT
 
f_›ídú
 (

3028 
FATFS_DIR
 *
dj
,

3029 c⁄° 
TCHAR
 *
∑th


3032 
FRESULT
 
	gªs
;

3033 
FATFS
 *
	gfs
;

3034 
	gDEF_NAMEBUF
;

3037 i‡(!
	gdj
Ë 
	gFR_INVALID_OBJECT
;

3039 
	gªs
 = 
chk_mou¡ed
(&
∑th
, &
dj
->
fs
, 0);

3040 
	gfs
 = 
dj
->
fs
;

3041 i‡(
	gªs
 =
FR_OK
) {

3042 
INIT_BUF
(*
dj
);

3043 
	gªs
 = 
fﬁlow_∑th
(
dj
, 
∑th
);

3044 
FREE_BUF
();

3045 i‡(
	gªs
 =
FR_OK
) {

3046 i‡(
dj
->
dú
) {

3047 i‡(
dj
->
dú
[
DIR_Aâr
] & 
AM_DIR
) {

3048 
dj
->
s˛u°
 = 
ld_˛u°
(
fs
, dj->
dú
);

3050 
	gªs
 = 
FR_NO_PATH
;

3053 i‡(
	gªs
 =
FR_OK
) {

3054 
dj
->
id
 = 
fs
->id;

3055 
	gªs
 = 
dú_sdi
(
dj
, 0);

3058 i‡(
	gªs
 =
FR_NO_FILE
Ë
ªs
 = 
FR_NO_PATH
;

3059 i‡(
	gªs
 !
FR_OK
Ë
dj
->
fs
 = 0;

3061 
	gdj
->
	gfs
 = 0;

3064 
LEAVE_FF
(
fs
, 
ªs
);

3074 
FRESULT
 
f_ªaddú
 (

3075 
FATFS_DIR
 *
dj
,

3076 
FILINFO
 *
‚o


3079 
FRESULT
 
	gªs
;

3080 
	gDEF_NAMEBUF
;

3083 
	gªs
 = 
vÆid©e
(
dj
);

3084 i‡(
	gªs
 =
FR_OK
) {

3085 i‡(!
‚o
) {

3086 
ªs
 = 
dú_sdi
(
dj
, 0);

3088 
INIT_BUF
(*
dj
);

3089 
	gªs
 = 
dú_ªad
(
dj
);

3090 i‡(
	gªs
 =
FR_NO_FILE
) {

3091 
dj
->
£˘
 = 0;

3092 
	gªs
 = 
FR_OK
;

3094 i‡(
	gªs
 =
FR_OK
) {

3095 
gë_fûeöfo
(
dj
, 
‚o
);

3096 
	gªs
 = 
dú_√xt
(
dj
, 0);

3097 i‡(
	gªs
 =
FR_NO_FILE
) {

3098 
dj
->
£˘
 = 0;

3099 
	gªs
 = 
FR_OK
;

3102 
FREE_BUF
();

3106 
LEAVE_FF
(
dj
->
fs
, 
ªs
);

3111 #i‡
_FS_MINIMIZE
 == 0

3116 
FRESULT
 
f_°©
 (

3117 c⁄° 
TCHAR
 *
∑th
,

3118 
FILINFO
 *
‚o


3121 
FRESULT
 
	gªs
;

3122 
FATFS_DIR
 
	gdj
;

3123 
	gDEF_NAMEBUF
;

3126 
	gªs
 = 
chk_mou¡ed
(&
∑th
, &
dj
.
fs
, 0);

3127 i‡(
	gªs
 =
FR_OK
) {

3128 
INIT_BUF
(
dj
);

3129 
	gªs
 = 
fﬁlow_∑th
(&
dj
, 
∑th
);

3130 i‡(
	gªs
 =
FR_OK
) {

3131 i‡(
dj
.
dú
)

3132 
gë_fûeöfo
(&
dj
, 
‚o
);

3134 
	gªs
 = 
FR_INVALID_NAME
;

3136 
FREE_BUF
();

3139 
LEAVE_FF
(
dj
.
fs
, 
ªs
);

3144 #i‡!
_FS_READONLY


3149 
FRESULT
 
f_gë‰ì
 (

3150 c⁄° 
TCHAR
 *
∑th
,

3151 
DWORD
 *
n˛°
,

3152 
FATFS
 **
Átfs


3155 
FRESULT
 
	gªs
;

3156 
FATFS
 *
	gfs
;

3157 
DWORD
 
	gn
, 
	g˛°
, 
	g£˘
, 
	g°©
;

3158 
UINT
 
	gi
;

3159 
BYTE
 
	gÁt
, *
	gp
;

3163 
	gªs
 = 
chk_mou¡ed
(&
∑th
, 
Átfs
, 0);

3164 
	gfs
 = *
Átfs
;

3165 i‡(
	gªs
 =
FR_OK
) {

3167 i‡(
fs
->
‰ì_˛u°
 <fs->
n_Áã¡
 - 2) {

3168 *
n˛°
 = 
fs
->
‰ì_˛u°
;

3171 
	gÁt
 = 
fs
->
fs_ty≥
;

3172 
	gn
 = 0;

3173 i‡(
	gÁt
 =
FS_FAT12
) {

3174 
˛°
 = 2;

3176 
	g°©
 = 
gë_Át
(
fs
, 
˛°
);

3177 i‡(
	g°©
 =0xFFFFFFFFË{ 
ªs
 = 
FR_DISK_ERR
; ; }

3178 i‡(
	g°©
 =1Ë{ 
ªs
 = 
FR_INT_ERR
; ; }

3179 i‡(
	g°©
 =0Ë
n
++;

3180 } ++
	g˛°
 < 
	gfs
->
	gn_Áã¡
);

3182 
	g˛°
 = 
fs
->
n_Áã¡
;

3183 
	g£˘
 = 
fs
->
Átba£
;

3184 
	gi
 = 0; 
	gp
 = 0;

3186 i‡(!
	gi
) {

3187 
	gªs
 = 
move_wödow
(
fs
, 
£˘
++);

3188 i‡(
	gªs
 !
FR_OK
) ;

3189 
	gp
 = 
fs
->
wö
;

3190 
	gi
 = 
SS
(
fs
);

3192 i‡(
	gÁt
 =
FS_FAT16
) {

3193 i‡(
LD_WORD
(
p
Ë=0Ë
n
++;

3194 
	gp
 +2; 
	gi
 -= 2;

3196 i‡((
LD_DWORD
(
p
Ë& 0x0FFFFFFFË=0Ë
n
++;

3197 
	gp
 +4; 
	gi
 -= 4;

3199 } --
	g˛°
);

3201 
	gfs
->
	g‰ì_˛u°
 = 
n
;

3202 i‡(
	gÁt
 =
FS_FAT32
Ë
fs
->
fsi_Êag
 = 1;

3203 *
	gn˛°
 = 
n
;

3206 
LEAVE_FF
(
fs
, 
ªs
);

3216 
FRESULT
 
f_åunˇã
 (

3217 
FIL
 *
Â


3220 
FRESULT
 
	gªs
;

3221 
DWORD
 
	gn˛
;

3224 i‡(!
	gÂ
Ë 
	gFR_INVALID_OBJECT
;

3226 
	gªs
 = 
vÆid©e
(
Â
);

3227 i‡(
	gªs
 =
FR_OK
) {

3228 i‡(
Â
->
Êag
 & 
FA__ERROR
) {

3229 
ªs
 = 
FR_INT_ERR
;

3231 i‡(!(
	gÂ
->
	gÊag
 & 
	gFA_WRITE
))

3232 
	gªs
 = 
FR_DENIED
;

3235 i‡(
	gªs
 =
FR_OK
) {

3236 i‡(
Â
->
fsize
 > fp->
Âå
) {

3237 
Â
->
fsize
 = fp->
Âå
;

3238 
	gÂ
->
	gÊag
 |
FA__WRITTEN
;

3239 i‡(
	gÂ
->
	gÂå
 == 0) {

3240 
ªs
 = 
ªmove_chaö
(
Â
->
fs
, fp->
s˛u°
);

3241 
	gÂ
->
	gs˛u°
 = 0;

3243 
	gn˛
 = 
gë_Át
(
Â
->
fs
, fp->
˛u°
);

3244 
	gªs
 = 
FR_OK
;

3245 i‡(
	gn˛
 =0xFFFFFFFFË
ªs
 = 
FR_DISK_ERR
;

3246 i‡(
	gn˛
 =1Ë
ªs
 = 
FR_INT_ERR
;

3247 i‡(
	gªs
 =
FR_OK
 && 
n˛
 < 
Â
->
fs
->
n_Áã¡
) {

3248 
ªs
 = 
put_Át
(
Â
->
fs
, fp->
˛u°
, 0x0FFFFFFF);

3249 i‡(
	gªs
 =
FR_OK
Ë
ªs
 = 
ªmove_chaö
(
Â
->
fs
, 
n˛
);

3253 i‡(
	gªs
 !
FR_OK
Ë
Â
->
Êag
 |
FA__ERROR
;

3256 
LEAVE_FF
(
Â
->
fs
, 
ªs
);

3266 
FRESULT
 
f_u∆ök
 (

3267 c⁄° 
TCHAR
 *
∑th


3270 
FRESULT
 
	gªs
;

3271 
FATFS_DIR
 
	gdj
, 
	gsdj
;

3272 
BYTE
 *
	gdú
;

3273 
DWORD
 
	gd˛°
;

3274 
	gDEF_NAMEBUF
;

3277 
	gªs
 = 
chk_mou¡ed
(&
∑th
, &
dj
.
fs
, 1);

3278 i‡(
	gªs
 =
FR_OK
) {

3279 
INIT_BUF
(
dj
);

3280 
	gªs
 = 
fﬁlow_∑th
(&
dj
, 
∑th
);

3281 i‡(
	g_FS_RPATH
 && 
	gªs
 =
FR_OK
 && (
dj
.
‚
[
NS
] & 
NS_DOT
))

3282 
ªs
 = 
FR_INVALID_NAME
;

3283 #i‡
_FS_LOCK


3284 i‡(
	gªs
 =
FR_OK
Ë
ªs
 = 
chk_lock
(&
dj
, 2);

3286 i‡(
	gªs
 =
FR_OK
) {

3287 
dú
 = 
dj
.dir;

3288 i‡(!
	gdú
) {

3289 
	gªs
 = 
FR_INVALID_NAME
;

3291 i‡(
	gdú
[
DIR_Aâr
] & 
	gAM_RDO
)

3292 
	gªs
 = 
FR_DENIED
;

3294 
	gd˛°
 = 
ld_˛u°
(
dj
.
fs
, 
dú
);

3295 i‡(
	gªs
 =
FR_OK
 && (
dú
[
DIR_Aâr
] & 
AM_DIR
)) {

3296 i‡(
d˛°
 < 2) {

3297 
ªs
 = 
FR_INT_ERR
;

3299 
mem_˝y
(&
sdj
, &
dj
,  (
FATFS_DIR
));

3300 
	gsdj
.
	gs˛u°
 = 
d˛°
;

3301 
	gªs
 = 
dú_sdi
(&
sdj
, 2);

3302 i‡(
	gªs
 =
FR_OK
) {

3303 
ªs
 = 
dú_ªad
(&
sdj
);

3304 i‡(
	gªs
 =
FR_OK


3305 #i‡
_FS_RPATH


3306 || 
d˛°
 =
dj
.
fs
->
cdú


3308 Ë
ªs
 = 
FR_DENIED
;

3309 i‡(
	gªs
 =
FR_NO_FILE
Ë
ªs
 = 
FR_OK
;

3313 i‡(
	gªs
 =
FR_OK
) {

3314 
ªs
 = 
dú_ªmove
(&
dj
);

3315 i‡(
	gªs
 =
FR_OK
) {

3316 i‡(
d˛°
)

3317 
ªs
 = 
ªmove_chaö
(
dj
.
fs
, 
d˛°
);

3318 i‡(
	gªs
 =
FR_OK
Ë
ªs
 = 
sync
(
dj
.
fs
);

3322 
FREE_BUF
();

3324 
LEAVE_FF
(
dj
.
fs
, 
ªs
);

3334 
FRESULT
 
f_mkdú
 (

3335 c⁄° 
TCHAR
 *
∑th


3338 
FRESULT
 
	gªs
;

3339 
FATFS_DIR
 
	gdj
;

3340 
BYTE
 *
	gdú
, 
	gn
;

3341 
DWORD
 
	gdsc
, 
	gd˛
, 
	gp˛
, 
	gtim
 = 
gë_Áâime
();

3342 
	gDEF_NAMEBUF
;

3345 
	gªs
 = 
chk_mou¡ed
(&
∑th
, &
dj
.
fs
, 1);

3346 i‡(
	gªs
 =
FR_OK
) {

3347 
INIT_BUF
(
dj
);

3348 
	gªs
 = 
fﬁlow_∑th
(&
dj
, 
∑th
);

3349 i‡(
	gªs
 =
FR_OK
Ë
ªs
 = 
FR_EXIST
;

3350 i‡(
	g_FS_RPATH
 && 
	gªs
 =
FR_NO_FILE
 && (
dj
.
‚
[
NS
] & 
NS_DOT
))

3351 
ªs
 = 
FR_INVALID_NAME
;

3352 i‡(
	gªs
 =
FR_NO_FILE
) {

3353 
d˛
 = 
¸óã_chaö
(
dj
.
fs
, 0);

3354 
	gªs
 = 
FR_OK
;

3355 i‡(
	gd˛
 =0Ë
ªs
 = 
FR_DENIED
;

3356 i‡(
	gd˛
 =1Ë
ªs
 = 
FR_INT_ERR
;

3357 i‡(
	gd˛
 =0xFFFFFFFFË
ªs
 = 
FR_DISK_ERR
;

3358 i‡(
	gªs
 =
FR_OK
)

3359 
ªs
 = 
move_wödow
(
dj
.
fs
, 0);

3360 i‡(
	gªs
 =
FR_OK
) {

3361 
dsc
 = 
˛u°2£˘
(
dj
.
fs
, 
d˛
);

3362 
	gdú
 = 
dj
.
fs
->
wö
;

3363 
mem_£t
(
dú
, 0, 
SS
(
dj
.
fs
));

3364 
mem_£t
(
dú
+
DIR_Name
, ' ', 8+3);

3365 
	gdú
[
DIR_Name
] = '.';

3366 
	gdú
[
DIR_Aâr
] = 
AM_DIR
;

3367 
ST_DWORD
(
dú
+
DIR_WπTime
, 
tim
);

3368 
°_˛u°
(
dú
, 
d˛
);

3369 
mem_˝y
(
dú
+
SZ_DIR
, dir, SZ_DIR);

3370 
	gdú
[33] = '.'; 
	gp˛
 = 
dj
.
s˛u°
;

3371 i‡(
	gdj
.
	gfs
->
	gfs_ty≥
 =
FS_FAT32
 && 
p˛
 =
dj
.
fs
->
dúba£
)

3372 
p˛
 = 0;

3373 
°_˛u°
(
dú
+
SZ_DIR
, 
p˛
);

3374 
	gn
 = 
dj
.
fs
->
csize
;Ç;Ç--) {

3375 
	gdj
.
	gfs
->
	gwö£˘
 = 
dsc
++;

3376 
	gdj
.
	gfs
->
	gwÊag
 = 1;

3377 
	gªs
 = 
move_wödow
(
dj
.
fs
, 0);

3378 i‡(
	gªs
 !
FR_OK
) ;

3379 
mem_£t
(
dú
, 0, 
SS
(
dj
.
fs
));

3382 i‡(
	gªs
 =
FR_OK
Ë
ªs
 = 
dú_ªgi°î
(&
dj
);

3383 i‡(
	gªs
 !
FR_OK
) {

3384 
ªmove_chaö
(
dj
.
fs
, 
d˛
);

3386 
	gdú
 = 
dj
.
dú
;

3387 
	gdú
[
DIR_Aâr
] = 
AM_DIR
;

3388 
ST_DWORD
(
dú
+
DIR_WπTime
, 
tim
);

3389 
°_˛u°
(
dú
, 
d˛
);

3390 
	gdj
.
	gfs
->
	gwÊag
 = 1;

3391 
	gªs
 = 
sync
(
dj
.
fs
);

3394 
FREE_BUF
();

3397 
LEAVE_FF
(
dj
.
fs
, 
ªs
);

3407 
FRESULT
 
f_chmod
 (

3408 c⁄° 
TCHAR
 *
∑th
,

3409 
BYTE
 
vÆue
,

3410 
BYTE
 
mask


3413 
FRESULT
 
	gªs
;

3414 
FATFS_DIR
 
	gdj
;

3415 
BYTE
 *
	gdú
;

3416 
	gDEF_NAMEBUF
;

3419 
	gªs
 = 
chk_mou¡ed
(&
∑th
, &
dj
.
fs
, 1);

3420 i‡(
	gªs
 =
FR_OK
) {

3421 
INIT_BUF
(
dj
);

3422 
	gªs
 = 
fﬁlow_∑th
(&
dj
, 
∑th
);

3423 
FREE_BUF
();

3424 i‡(
	g_FS_RPATH
 && 
	gªs
 =
FR_OK
 && (
dj
.
‚
[
NS
] & 
NS_DOT
))

3425 
ªs
 = 
FR_INVALID_NAME
;

3426 i‡(
	gªs
 =
FR_OK
) {

3427 
dú
 = 
dj
.dir;

3428 i‡(!
	gdú
) {

3429 
	gªs
 = 
FR_INVALID_NAME
;

3431 
	gmask
 &
AM_RDO
|
AM_HID
|
AM_SYS
|
AM_ARC
;

3432 
	gdú
[
DIR_Aâr
] = (
vÆue
 & 
mask
Ë| (
dú
[DIR_Aâr] & (
BYTE
)~mask);

3433 
	gdj
.
	gfs
->
	gwÊag
 = 1;

3434 
	gªs
 = 
sync
(
dj
.
fs
);

3439 
LEAVE_FF
(
dj
.
fs
, 
ªs
);

3449 
FRESULT
 
f_utime
 (

3450 c⁄° 
TCHAR
 *
∑th
,

3451 c⁄° 
FILINFO
 *
‚o


3454 
FRESULT
 
	gªs
;

3455 
FATFS_DIR
 
	gdj
;

3456 
BYTE
 *
	gdú
;

3457 
	gDEF_NAMEBUF
;

3460 
	gªs
 = 
chk_mou¡ed
(&
∑th
, &
dj
.
fs
, 1);

3461 i‡(
	gªs
 =
FR_OK
) {

3462 
INIT_BUF
(
dj
);

3463 
	gªs
 = 
fﬁlow_∑th
(&
dj
, 
∑th
);

3464 
FREE_BUF
();

3465 i‡(
	g_FS_RPATH
 && 
	gªs
 =
FR_OK
 && (
dj
.
‚
[
NS
] & 
NS_DOT
))

3466 
ªs
 = 
FR_INVALID_NAME
;

3467 i‡(
	gªs
 =
FR_OK
) {

3468 
dú
 = 
dj
.dir;

3469 i‡(!
	gdú
) {

3470 
	gªs
 = 
FR_INVALID_NAME
;

3472 
ST_WORD
(
dú
+
DIR_WπTime
, 
‚o
->
·ime
);

3473 
ST_WORD
(
dú
+
DIR_WπD©e
, 
‚o
->
fd©e
);

3474 
	gdj
.
	gfs
->
	gwÊag
 = 1;

3475 
	gªs
 = 
sync
(
dj
.
fs
);

3480 
LEAVE_FF
(
dj
.
fs
, 
ªs
);

3490 
FRESULT
 
f_ª«me
 (

3491 c⁄° 
TCHAR
 *
∑th_ﬁd
,

3492 c⁄° 
TCHAR
 *
∑th_√w


3495 
FRESULT
 
	gªs
;

3496 
FATFS_DIR
 
	gdjo
, 
	gdjn
;

3497 
BYTE
 
	gbuf
[21], *
	gdú
;

3498 
DWORD
 
	gdw
;

3499 
	gDEF_NAMEBUF
;

3502 
	gªs
 = 
chk_mou¡ed
(&
∑th_ﬁd
, &
djo
.
fs
, 1);

3503 i‡(
	gªs
 =
FR_OK
) {

3504 
djn
.
fs
 = 
djo
.fs;

3505 
INIT_BUF
(
djo
);

3506 
	gªs
 = 
fﬁlow_∑th
(&
djo
, 
∑th_ﬁd
);

3507 i‡(
	g_FS_RPATH
 && 
	gªs
 =
FR_OK
 && (
djo
.
‚
[
NS
] & 
NS_DOT
))

3508 
ªs
 = 
FR_INVALID_NAME
;

3509 #i‡
_FS_LOCK


3510 i‡(
	gªs
 =
FR_OK
Ë
ªs
 = 
chk_lock
(&
djo
, 2);

3512 i‡(
	gªs
 =
FR_OK
) {

3513 i‡(!
djo
.
dú
) {

3514 
ªs
 = 
FR_NO_FILE
;

3516 
mem_˝y
(
buf
, 
djo
.
dú
+
DIR_Aâr
, 21);

3517 
mem_˝y
(&
djn
, &
djo
,  (
FATFS_DIR
));

3518 
	gªs
 = 
fﬁlow_∑th
(&
djn
, 
∑th_√w
);

3519 i‡(
	gªs
 =
FR_OK
Ë
ªs
 = 
FR_EXIST
;

3520 i‡(
	gªs
 =
FR_NO_FILE
) {

3522 
ªs
 = 
dú_ªgi°î
(&
djn
);

3523 i‡(
	gªs
 =
FR_OK
) {

3524 
dú
 = 
djn
.dir;

3525 
mem_˝y
(
dú
+13, 
buf
+2, 19);

3526 
	gdú
[
DIR_Aâr
] = 
buf
[0] | 
AM_ARC
;

3527 
	gdjo
.
	gfs
->
	gwÊag
 = 1;

3528 i‡(
	gdjo
.
	gs˛u°
 !
djn
.
s˛u°
 && (
dú
[
DIR_Aâr
] & 
AM_DIR
)) {

3529 
dw
 = 
˛u°2£˘
(
djo
.
fs
, 
ld_˛u°
(djo.fs, 
dú
));

3530 i‡(!
	gdw
) {

3531 
	gªs
 = 
FR_INT_ERR
;

3533 
	gªs
 = 
move_wödow
(
djo
.
fs
, 
dw
);

3534 
	gdú
 = 
djo
.
fs
->
wö
+
SZ_DIR
;

3535 i‡(
	gªs
 =
FR_OK
 && 
dú
[1] == '.') {

3536 
dw
 = (
djo
.
fs
->
fs_ty≥
 =
FS_FAT32
 && 
djn
.
s˛u°
 =djo.fs->
dúba£
) ? 0 : djn.sclust;

3537 
°_˛u°
(
dú
, 
dw
);

3538 
	gdjo
.
	gfs
->
	gwÊag
 = 1;

3542 i‡(
	gªs
 =
FR_OK
) {

3543 
ªs
 = 
dú_ªmove
(&
djo
);

3544 i‡(
	gªs
 =
FR_OK
)

3545 
ªs
 = 
sync
(
djo
.
fs
);

3552 
FREE_BUF
();

3554 
LEAVE_FF
(
djo
.
fs
, 
ªs
);

3567 #i‡
_USE_FORWARD
 && 
_FS_TINY


3569 
FRESULT
 
f_f‹w¨d
 (

3570 
FIL
 *
Â
,

3571 
UINT
 (*
func
)(c⁄° 
BYTE
*,UINT),

3572 
UINT
 
bå
,

3573 
UINT
 *
bf


3576 
FRESULT
 
	gªs
;

3577 
DWORD
 
	gªmaö
, 
	g˛°
, 
	g£˘
;

3578 
UINT
 
	gr˙t
;

3579 
BYTE
 
	gc£˘
;

3582 *
	gbf
 = 0;

3584 i‡(!
	gÂ
Ë 
	gFR_INVALID_OBJECT
;

3586 
	gªs
 = 
vÆid©e
(
Â
);

3587 i‡(
	gªs
 !
FR_OK
Ë
LEAVE_FF
(
Â
->
fs
, 
ªs
);

3588 i‡(
	gÂ
->
	gÊag
 & 
	gFA__ERROR
)

3589 
LEAVE_FF
(
Â
->
fs
, 
FR_INT_ERR
);

3590 i‡(!(
	gÂ
->
	gÊag
 & 
	gFA_READ
))

3591 
LEAVE_FF
(
Â
->
fs
, 
FR_DENIED
);

3593 
	gªmaö
 = 
Â
->
fsize
 - fp->
Âå
;

3594 i‡(
	gbå
 > 
	gªmaö
Ëbå = (
UINT
)
ªmaö
;

3596  ; 
	gbå
 && (*
	gfunc
)(0, 0);

3597 
	gÂ
->
	gÂå
 +
r˙t
, *
	gbf
 +r˙t, 
	gbå
 -=Ñcnt) {

3598 
c£˘
 = (
BYTE
)(
Â
->
Âå
 / 
SS
(Â->
fs
Ë& (Â->fs->
csize
 - 1));

3599 i‡((
	gÂ
->
	gÂå
 % 
SS
(
Â
->
fs
)) == 0) {

3600 i‡(!
c£˘
) {

3601 
˛°
 = (
Â
->
Âå
 == 0) ?

3602 
Â
->
s˛u°
 : 
gë_Át
(Â->
fs
, fp->
˛u°
);

3603 i‡(
	g˛°
 <1Ë
ABORT
(
Â
->
fs
, 
FR_INT_ERR
);

3604 i‡(
	g˛°
 =0xFFFFFFFFË
ABORT
(
Â
->
fs
, 
FR_DISK_ERR
);

3605 
	gÂ
->
	g˛u°
 = 
˛°
;

3608 
	g£˘
 = 
˛u°2£˘
(
Â
->
fs
, fp->
˛u°
);

3609 i‡(!
	g£˘
Ë
ABORT
(
Â
->
fs
, 
FR_INT_ERR
);

3610 
	g£˘
 +
c£˘
;

3611 i‡(
move_wödow
(
Â
->
fs
, 
£˘
))

3612 
ABORT
(
Â
->
fs
, 
FR_DISK_ERR
);

3613 
	gÂ
->
	gd£˘
 = 
£˘
;

3614 
	gr˙t
 = 
SS
(
Â
->
fs
Ë- (
WORD
)(Â->
Âå
 % SS(fp->fs));

3615 i‡(
	gr˙t
 > 
	gbå
Ër˙à
bå
;

3616 
	gr˙t
 = (*
func
)(&
Â
->
fs
->
wö
[(
WORD
)Â->
Âå
 % 
SS
(fp->fs)],Ñcnt);

3617 i‡(!
	gr˙t
Ë
ABORT
(
Â
->
fs
, 
FR_INT_ERR
);

3620 
LEAVE_FF
(
Â
->
fs
, 
FR_OK
);

3626 #i‡
_USE_MKFS
 && !
_FS_READONLY


3630 
	#N_ROOTDIR
 512

	)

3631 
	#N_FATS
 1

	)

3634 
FRESULT
 
f_mkfs
 (

3635 
BYTE
 
drv
,

3636 
BYTE
 
sfd
,

3637 
UINT
 
au


3640 c⁄° 
WORD
 
	gv°
[] = { 1024, 512, 256, 128, 64, 32, 16, 8, 4, 2, 0};

3641 c⁄° 
WORD
 
	gc°
[] = {32768, 16384, 8192, 4096, 2048, 16384, 8192, 4096, 2048, 1024, 512};

3642 
BYTE
 
	gfmt
, 
	gmd
, 
	gsys
, *
	gtbl
, 
	gpdrv
, 
	g∑π
;

3643 
DWORD
 
	gn_˛°
, 
	gvs
, 
	gn
, 
	gw£˘
;

3644 
UINT
 
	gi
;

3645 
DWORD
 
	gb_vﬁ
, 
	gb_Át
, 
	gb_dú
, 
	gb_d©a
;

3646 
DWORD
 
	gn_vﬁ
, 
	gn_rsv
, 
	gn_Át
, 
	gn_dú
;

3647 
FATFS
 *
	gfs
;

3648 
DSTATUS
 
	g°©
;

3652 i‡(
	gdrv
 >
_VOLUMES
Ë 
FR_INVALID_DRIVE
;

3653 i‡(
	gsfd
 > 1Ë 
	gFR_INVALID_PARAMETER
;

3654 i‡(
	gau
 & (au - 1)Ë 
	gFR_INVALID_PARAMETER
;

3655 
	gfs
 = 
F©Fs
[
drv
];

3656 i‡(!
	gfs
Ë 
	gFR_NOT_ENABLED
;

3657 
	gfs
->
	gfs_ty≥
 = 0;

3658 
	gpdrv
 = 
LD2PD
(
drv
);

3659 
	g∑π
 = 
LD2PT
(
drv
);

3662 
	g°©
 = 
disk_öôülize
(
pdrv
);

3663 i‡(
	g°©
 & 
	gSTA_NOINIT
Ë 
	gFR_NOT_READY
;

3664 i‡(
	g°©
 & 
	gSTA_PROTECT
Ë 
	gFR_WRITE_PROTECTED
;

3665 #i‡
_MAX_SS
 != 512

3666 i‡(
disk_io˘l
(
pdrv
, 
GET_SECTOR_SIZE
, &
SS
(
fs
)Ë!
RES_OK
 || SS(fsË> 
_MAX_SS
)

3667  
FR_DISK_ERR
;

3669 i‡(
	g_MULTI_PARTITION
 && 
	g∑π
) {

3671 i‡(
disk_ªad
(
pdrv
, 
fs
->
wö
, 0, 1Ë!
RES_OK
Ë 
FR_DISK_ERR
;

3672 i‡(
LD_WORD
(
fs
->
wö
+
BS_55AA
Ë!0xAA55Ë 
FR_MKFS_ABORTED
;

3673 
	gtbl
 = &
fs
->
wö
[
MBR_TabÀ
 + (
∑π
 - 1Ë* 
SZ_PTE
];

3674 i‡(!
	gtbl
[4]Ë 
	gFR_MKFS_ABORTED
;

3675 
	gb_vﬁ
 = 
LD_DWORD
(
tbl
+8);

3676 
	gn_vﬁ
 = 
LD_DWORD
(
tbl
+12);

3679 i‡(
disk_io˘l
(
pdrv
, 
GET_SECTOR_COUNT
, &
n_vﬁ
Ë!
RES_OK
 ||Ç_vol < 128)

3680  
FR_DISK_ERR
;

3681 
	gb_vﬁ
 = (
sfd
) ? 0 : 63;

3682 
	gn_vﬁ
 -
b_vﬁ
;

3685 i‡(!
	gau
) {

3686 
	gvs
 = 
n_vﬁ
 / (2000 / (
SS
(
fs
) / 512));

3687 
	gi
 = 0; 
	gvs
 < 
	gv°
[
i
]; i++) ;

3688 
	gau
 = 
c°
[
i
];

3690 
	gau
 /
SS
(
fs
);

3691 i‡(
	gau
 =0Ë
au
 = 1;

3692 i‡(
	gau
 > 128)áu = 128;

3695 
	gn_˛°
 = 
n_vﬁ
 / 
au
;

3696 
	gfmt
 = 
FS_FAT12
;

3697 i‡(
	gn_˛°
 >
MIN_FAT16
Ë
fmt
 = 
FS_FAT16
;

3698 i‡(
	gn_˛°
 >
MIN_FAT32
Ë
fmt
 = 
FS_FAT32
;

3701 i‡(
	gfmt
 =
FS_FAT32
) {

3702 
n_Át
 = ((
n_˛°
 * 4Ë+ 8 + 
SS
(
fs
) - 1) / SS(fs);

3703 
	gn_rsv
 = 32;

3704 
	gn_dú
 = 0;

3706 
	gn_Át
 = (
fmt
 =
FS_FAT12
Ë? (
n_˛°
 * 3 + 1) / 2 + 3 : (n_clst * 2) + 4;

3707 
	gn_Át
 = (
n_Át
 + 
SS
(
fs
) - 1) / SS(fs);

3708 
	gn_rsv
 = 1;

3709 
	gn_dú
 = (
DWORD
)
N_ROOTDIR
 * 
SZ_DIR
 / 
SS
(
fs
);

3711 
	gb_Át
 = 
b_vﬁ
 + 
n_rsv
;

3712 
	gb_dú
 = 
b_Át
 + 
n_Át
 * 
N_FATS
;

3713 
	gb_d©a
 = 
b_dú
 + 
n_dú
;

3714 i‡(
	gn_vﬁ
 < 
	gb_d©a
 + 
	gau
 - 
	gb_vﬁ
Ë 
	gFR_MKFS_ABORTED
;

3717 i‡(
disk_io˘l
(
pdrv
, 
GET_BLOCK_SIZE
, &
n
Ë!
RES_OK
 || !n ||Ç > 32768)Ç = 1;

3718 
	gn
 = (
b_d©a
 + 
n
 - 1) & ~(n - 1);

3719 
	gn
 = (
n
 - 
b_d©a
Ë/ 
N_FATS
;

3720 i‡(
	gfmt
 =
FS_FAT32
) {

3721 
n_rsv
 +
n
;

3722 
	gb_Át
 +
n
;

3724 
	gn_Át
 +
n
;

3728 
	gn_˛°
 = (
n_vﬁ
 - 
n_rsv
 - 
n_Át
 * 
N_FATS
 - 
n_dú
Ë/ 
au
;

3729 i‡–(
	gfmt
 =
FS_FAT16
 && 
n_˛°
 < 
MIN_FAT16
)

3730 || (
fmt
 =
FS_FAT32
 && 
n_˛°
 < 
MIN_FAT32
))

3731  
FR_MKFS_ABORTED
;

3733 
	gfmt
) {

3734 
	gFS_FAT12
: 
sys
 = 0x01; ;

3735 
	gFS_FAT16
: 
sys
 = (
n_vﬁ
 < 0x10000) ? 0x04 : 0x06; ;

3736 : 
sys
 = 0x0C;

3739 i‡(
	g_MULTI_PARTITION
 && 
	g∑π
) {

3741 
	gtbl
 = &
fs
->
wö
[
MBR_TabÀ
 + (
∑π
 - 1Ë* 
SZ_PTE
];

3742 
	gtbl
[4] = 
sys
;

3743 i‡(
disk_wrôe
(
pdrv
, 
fs
->
wö
, 0, 1Ë!
RES_OK
Ë 
FR_DISK_ERR
;

3744 
	gmd
 = 0xF8;

3746 i‡(
	gsfd
) {

3747 
	gmd
 = 0xF0;

3749 
mem_£t
(
fs
->
wö
, 0, 
SS
(fs));

3750 
	gtbl
 = 
fs
->
wö
+
MBR_TabÀ
;

3751 
	gtbl
[1] = 1;

3752 
	gtbl
[2] = 1;

3753 
	gtbl
[3] = 0;

3754 
	gtbl
[4] = 
sys
;

3755 
	gtbl
[5] = 254;

3756 
	gn
 = (
b_vﬁ
 + 
n_vﬁ
) / 63 / 255;

3757 
	gtbl
[6] = (
BYTE
)((
n
 >> 2) | 63);

3758 
	gtbl
[7] = (
BYTE
)
n
;

3759 
ST_DWORD
(
tbl
+8, 63);

3760 
ST_DWORD
(
tbl
+12, 
n_vﬁ
);

3761 
ST_WORD
(
fs
->
wö
+
BS_55AA
, 0xAA55);

3762 i‡(
disk_wrôe
(
pdrv
, 
fs
->
wö
, 0, 1Ë!
RES_OK
)

3763  
FR_DISK_ERR
;

3764 
	gmd
 = 0xF8;

3769 
	gtbl
 = 
fs
->
wö
;

3770 
mem_£t
(
tbl
, 0, 
SS
(
fs
));

3771 
mem_˝y
(
tbl
, "\xEB\xFE\x90" "MSDOS5.0", 11);

3772 
	gi
 = 
SS
(
fs
);

3773 
ST_WORD
(
tbl
+
BPB_BytsPîSec
, 
i
);

3774 
	gtbl
[
BPB_SecPîClus
] = (
BYTE
)
au
;

3775 
ST_WORD
(
tbl
+
BPB_RsvdSecC¡
, 
n_rsv
);

3776 
	gtbl
[
BPB_NumFATs
] = 
N_FATS
;

3777 
	gi
 = (
fmt
 =
FS_FAT32
Ë? 0 : 
N_ROOTDIR
;

3778 
ST_WORD
(
tbl
+
BPB_RoŸE¡C¡
, 
i
);

3779 i‡(
	gn_vﬁ
 < 0x10000) {

3780 
ST_WORD
(
tbl
+
BPB_TŸSec16
, 
n_vﬁ
);

3782 
ST_DWORD
(
tbl
+
BPB_TŸSec32
, 
n_vﬁ
);

3784 
	gtbl
[
BPB_Medü
] = 
md
;

3785 
ST_WORD
(
tbl
+
BPB_SecPîTrk
, 63);

3786 
ST_WORD
(
tbl
+
BPB_NumHóds
, 255);

3787 
ST_DWORD
(
tbl
+
BPB_HiddSec
, 
b_vﬁ
);

3788 
	gn
 = 
gë_Áâime
();

3789 i‡(
	gfmt
 =
FS_FAT32
) {

3790 
ST_DWORD
(
tbl
+
BS_VﬁID32
, 
n
);

3791 
ST_DWORD
(
tbl
+
BPB_FATSz32
, 
n_Át
);

3792 
ST_DWORD
(
tbl
+
BPB_RoŸClus
, 2);

3793 
ST_WORD
(
tbl
+
BPB_FSInfo
, 1);

3794 
ST_WORD
(
tbl
+
BPB_BkBoŸSec
, 6);

3795 
	gtbl
[
BS_DrvNum32
] = 0x80;

3796 
	gtbl
[
BS_BoŸSig32
] = 0x29;

3797 
mem_˝y
(
tbl
+
BS_VﬁLab32
, "NO NAME " "FAT32 ", 19);

3799 
ST_DWORD
(
tbl
+
BS_VﬁID
, 
n
);

3800 
ST_WORD
(
tbl
+
BPB_FATSz16
, 
n_Át
);

3801 
	gtbl
[
BS_DrvNum
] = 0x80;

3802 
	gtbl
[
BS_BoŸSig
] = 0x29;

3803 
mem_˝y
(
tbl
+
BS_VﬁLab
, "NO NAME " "FAT ", 19);

3805 
ST_WORD
(
tbl
+
BS_55AA
, 0xAA55);

3806 i‡(
disk_wrôe
(
pdrv
, 
tbl
, 
b_vﬁ
, 1Ë!
RES_OK
)

3807  
FR_DISK_ERR
;

3808 i‡(
	gfmt
 =
FS_FAT32
)

3809 
disk_wrôe
(
pdrv
, 
tbl
, 
b_vﬁ
 + 6, 1);

3812 
	gw£˘
 = 
b_Át
;

3813 
	gi
 = 0; i < 
	gN_FATS
; i++) {

3814 
mem_£t
(
tbl
, 0, 
SS
(
fs
));

3815 
	gn
 = 
md
;

3816 i‡(
	gfmt
 !
FS_FAT32
) {

3817 
n
 |(
fmt
 =
FS_FAT12
) ? 0x00FFFF00 : 0xFFFFFF00;

3818 
ST_DWORD
(
tbl
+0, 
n
);

3820 
	gn
 |= 0xFFFFFF00;

3821 
ST_DWORD
(
tbl
+0, 
n
);

3822 
ST_DWORD
(
tbl
+4, 0xFFFFFFFF);

3823 
ST_DWORD
(
tbl
+8, 0x0FFFFFFF);

3825 i‡(
disk_wrôe
(
pdrv
, 
tbl
, 
w£˘
++, 1Ë!
RES_OK
)

3826  
FR_DISK_ERR
;

3827 
mem_£t
(
tbl
, 0, 
SS
(
fs
));

3828 
	gn
 = 1;Ç < 
	gn_Át
;Ç++) {

3829 i‡(
disk_wrôe
(
pdrv
, 
tbl
, 
w£˘
++, 1Ë!
RES_OK
)

3830  
FR_DISK_ERR
;

3835 
	gi
 = (
fmt
 =
FS_FAT32
Ë? 
au
 : 
n_dú
;

3837 i‡(
disk_wrôe
(
pdrv
, 
tbl
, 
w£˘
++, 1Ë!
RES_OK
)

3838  
FR_DISK_ERR
;

3839 } --
	gi
);

3841 #i‡
_USE_ERASE


3843 
DWORD
 
	geb
[2];

3845 
	geb
[0] = 
w£˘
;Éb[1] = w£˘ + (
n_˛°
 - ((
fmt
 =
FS_FAT32
Ë? 1 : 0)Ë* 
au
 - 1;

3846 
disk_io˘l
(
pdrv
, 
CTRL_ERASE_SECTOR
, 
eb
);

3851 i‡(
	gfmt
 =
FS_FAT32
) {

3852 
ST_DWORD
(
tbl
+
FSI_LódSig
, 0x41615252);

3853 
ST_DWORD
(
tbl
+
FSI_SåucSig
, 0x61417272);

3854 
ST_DWORD
(
tbl
+
FSI_Fªe_Cou¡
, 
n_˛°
 - 1);

3855 
ST_DWORD
(
tbl
+
FSI_Nxt_Fªe
, 2);

3856 
ST_WORD
(
tbl
+
BS_55AA
, 0xAA55);

3857 
disk_wrôe
(
pdrv
, 
tbl
, 
b_vﬁ
 + 1, 1);

3858 
disk_wrôe
(
pdrv
, 
tbl
, 
b_vﬁ
 + 7, 1);

3861  (
disk_io˘l
(
pdrv
, 
CTRL_SYNC
, 0Ë=
RES_OK
Ë? 
FR_OK
 : 
FR_DISK_ERR
;

3865 #i‡
_MULTI_PARTITION
 == 2

3870 
FRESULT
 
f_fdisk
 (

3871 
BYTE
 
pdrv
,

3872 c⁄° 
DWORD
 
szt
[],

3873 * 
w‹k


3876 
UINT
 
	gi
, 
	gn
, 
	gsz_cyl
, 
	gtŸ_cyl
, 
	gb_cyl
, 
	ge_cyl
, 
	gp_cyl
;

3877 
BYTE
 
	gs_hd
, 
	ge_hd
, *
	gp
, *
	gbuf
 = (BYTE*)
w‹k
;

3878 
DSTATUS
 
	g°©
;

3879 
DWORD
 
	gsz_disk
, 
	gsz_∑π
, 
	gs_∑π
;

3882 
	g°©
 = 
disk_öôülize
(
pdrv
);

3883 i‡(
	g°©
 & 
	gSTA_NOINIT
Ë 
	gFR_NOT_READY
;

3884 i‡(
	g°©
 & 
	gSTA_PROTECT
Ë 
	gFR_WRITE_PROTECTED
;

3885 i‡(
disk_io˘l
(
pdrv
, 
GET_SECTOR_COUNT
, &
sz_disk
)Ë 
	gFR_DISK_ERR
;

3888 
	gn
 = 16;Ç < 256 && 
	gsz_disk
 /Ç / 63 > 1024;Ç *= 2) ;

3889 i‡(
	gn
 =256Ë
n
--;

3890 
	ge_hd
 = 
n
 - 1;

3891 
	gsz_cyl
 = 63 * 
n
;

3892 
	gtŸ_cyl
 = 
sz_disk
 / 
sz_cyl
;

3895 
mem_£t
(
buf
, 0, 
_MAX_SS
);

3896 
	gp
 = 
buf
 + 
MBR_TabÀ
; 
	gb_cyl
 = 0;

3897 
	gi
 = 0; i < 4; i++, 
	gp
 +
SZ_PTE
) {

3898 
p_cyl
 = (
szt
[
i
] <100Ë? (
DWORD
)
tŸ_cyl
 * szt[i] / 100 : szt[i] / 
sz_cyl
;

3899 i‡(!
	gp_cyl
) ;

3900 
	gs_∑π
 = (
DWORD
)
sz_cyl
 * 
b_cyl
;

3901 
	gsz_∑π
 = (
DWORD
)
sz_cyl
 * 
p_cyl
;

3902 i‡(
	gi
 == 0) {

3903 
s_hd
 = 1;

3904 
	gs_∑π
 +63; 
	gsz_∑π
 -= 63;

3906 
	gs_hd
 = 0;

3908 
	ge_cyl
 = 
b_cyl
 + 
p_cyl
 - 1;

3909 i‡(
	ge_cyl
 >
tŸ_cyl
Ë 
FR_INVALID_PARAMETER
;

3912 
	gp
[1] = 
s_hd
;

3913 
	gp
[2] = (
BYTE
)((
b_cyl
 >> 2) + 1);

3914 
	gp
[3] = (
BYTE
)
b_cyl
;

3915 
	gp
[4] = 0x06;

3916 
	gp
[5] = 
e_hd
;

3917 
	gp
[6] = (
BYTE
)((
e_cyl
 >> 2) + 63);

3918 
	gp
[7] = (
BYTE
)
e_cyl
;

3919 
ST_DWORD
(
p
 + 8, 
s_∑π
);

3920 
ST_DWORD
(
p
 + 12, 
sz_∑π
);

3923 
	gb_cyl
 +
p_cyl
;

3925 
ST_WORD
(
p
, 0xAA55);

3928  (
disk_wrôe
(
pdrv
, 
buf
, 0, 1Ë|| 
disk_io˘l
’drv, 
CTRL_SYNC
, 0)Ë? 
	gFR_DISK_ERR
 : 
FR_OK
;

3938 #i‡
_USE_STRFUNC


3942 
TCHAR
* 
f_gës
 (

3943 
TCHAR
* 
buff
,

3944 
Àn
,

3945 
FIL
* 
fû


3948 
	gn
 = 0;

3949 
TCHAR
 
	gc
, *
	gp
 = 
buff
;

3950 
BYTE
 
	gs
[2];

3951 
UINT
 
	grc
;

3954 
	gn
 < 
	gÀn
 - 1) {

3955 
f_ªad
(
fû
, 
s
, 1, &
rc
);

3956 i‡(
	grc
 != 1) ;

3957 
	gc
 = 
s
[0];

3958 #i‡
_LFN_UNICODE


3959 i‡(
	gc
 >= 0x80) {

3960 i‡(
c
 < 0xC0) ;

3961 i‡(
	gc
 < 0xE0) {

3962 
f_ªad
(
fû
, 
s
, 1, &
rc
);

3963 i‡(
	grc
 != 1) ;

3964 
	gc
 = ((
c
 & 0x1FË<< 6Ë| (
s
[0] & 0x3F);

3965 i‡(
	gc
 < 0x80) c = '?';

3967 i‡(
	gc
 < 0xF0) {

3968 
f_ªad
(
fû
, 
s
, 2, &
rc
);

3969 i‡(
	grc
 != 2) ;

3970 
	gc
 = (
c
 << 12Ë| ((
s
[0] & 0x3F) << 6) | (s[1] & 0x3F);

3971 i‡(
	gc
 < 0x800) c = '?';

3973 
	gc
 = '?';

3978 #i‡
_USE_STRFUNC
 >= 2

3979 i‡(
	gc
 == '\r') ;

3981 *
	gp
++ = 
c
;

3982 
	gn
++;

3983 i‡(
	gc
 == '\n') ;

3985 *
	gp
 = 0;

3986  
	gn
 ? 
	gbuff
 : 0;

3991 #i‡!
_FS_READONLY


3992 
	~<°d¨g.h
>

3996 
f_putc
 (

3997 
TCHAR
 
c
,

3998 
FIL
* 
fû


4001 
UINT
 
	gbw
, 
	gbtw
;

4002 
BYTE
 
	gs
[3];

4005 #i‡
_USE_STRFUNC
 >= 2

4006 i‡(
	gc
 ='\n'Ë
f_putc
 ('\r', 
fû
);

4009 #i‡
_LFN_UNICODE


4010 i‡(
	gc
 < 0x80) {

4011 
	gs
[0] = (
BYTE
)
c
;

4012 
	gbtw
 = 1;

4014 i‡(
	gc
 < 0x800) {

4015 
	gs
[0] = (
BYTE
)(0xC0 | (
c
 >> 6));

4016 
	gs
[1] = (
BYTE
)(0x80 | (
c
 & 0x3F));

4017 
	gbtw
 = 2;

4019 
	gs
[0] = (
BYTE
)(0xE0 | (
c
 >> 12));

4020 
	gs
[1] = (
BYTE
)(0x80 | ((
c
 >> 6) & 0x3F));

4021 
	gs
[2] = (
BYTE
)(0x80 | (
c
 & 0x3F));

4022 
	gbtw
 = 3;

4026 
	gs
[0] = (
BYTE
)
c
;

4027 
	gbtw
 = 1;

4029 
f_wrôe
(
fû
, 
s
, 
btw
, &
bw
);

4030  (
	gbw
 =
btw
Ë? 1 : 
EOF
;

4039 
f_puts
 (

4040 c⁄° 
TCHAR
* 
°r
,

4041 
FIL
* 
fû


4044 
	gn
;

4047 
	gn
 = 0; *
	g°r
; str++,Ç++) {

4048 i‡(
f_putc
(*
°r
, 
fû
Ë=
EOF
)  EOF;

4050  
	gn
;

4059 
f_¥ötf
 (

4060 
FIL
* 
fû
,

4061 c⁄° 
TCHAR
* 
°r
,

4065 
va_li°
 
	g¨p
;

4066 
BYTE
 
	gf
, 
	gr
;

4067 
UINT
 
	gi
, 
	gj
, 
	gw
;

4068 
ULONG
 
	gv
;

4069 
TCHAR
 
	gc
, 
	gd
, 
	gs
[16], *
	gp
;

4070 
	gªs
, 
	gchc
, 
	gcc
;

4073 
va_°¨t
(
¨p
, 
°r
);

4075 
	gcc
 = 
ªs
 = 0; c¯!
EOF
; 
	gªs
 +
cc
) {

4076 
c
 = *
°r
++;

4077 i‡(
	gc
 == 0) ;

4078 i‡(
	gc
 != '%') {

4079 
cc
 = 
f_putc
(
c
, 
fû
);

4080 i‡(
	gcc
 !
EOF
Ë
cc
 = 1;

4083 
	gw
 = 
f
 = 0;

4084 
	gc
 = *
°r
++;

4085 i‡(
	gc
 == '0') {

4086 
f
 = 1; 
	gc
 = *
°r
++;

4088 i‡(
	gc
 == '-') {

4089 
f
 = 2; 
	gc
 = *
°r
++;

4092 
IsDigô
(
c
)) {

4093 
	gw
 = 
w
 * 10 + 
c
 - '0';

4094 
	gc
 = *
°r
++;

4096 i‡(
	gc
 ='l' || 
c
 == 'L') {

4097 
f
 |4; 
	gc
 = *
°r
++;

4099 i‡(!
	gc
) ;

4100 
	gd
 = 
c
;

4101 i‡(
IsLowî
(
d
)Ë
	gd
 -= 0x20;

4102 
	gd
) {

4104 
p
 = 
va_¨g
(
¨p
, 
TCHAR
*);

4105 
	gj
 = 0; 
	gp
[
j
]; j++) ;

4106 
	gchc
 = 0;

4107 i‡(!(
	gf
 & 2)) {

4108 
	gj
++ < 
	gw
Ë
	gchc
 +(
cc
 = 
f_putc
(' ', 
fû
));

4110 
	gchc
 +(
cc
 = 
f_puts
(
p
, 
fû
));

4111 
	gj
++ < 
	gw
Ë
	gchc
 +(
cc
 = 
f_putc
(' ', 
fû
));

4112 i‡(
	gcc
 !
EOF
Ë
cc
 = 
chc
;

4115 
cc
 = 
f_putc
((
TCHAR
)
va_¨g
(
¨p
, ), 
fû
); ;

4117 
r
 = 2; ;

4119 
r
 = 8; ;

4122 
r
 = 10; ;

4124 
r
 = 16; ;

4126 
cc
 = 
f_putc
(
c
, 
fû
); ;

4130 
	gv
 = (
f
 & 4Ë? (
ULONG
)
va_¨g
(
¨p
, Ë: ((
d
 == 'D') ? (ULONG)()va_arg(arp, ) : (ULONG)va_arg(arp, ));

4131 i‡(
	gd
 ='D' && (
v
 & 0x80000000)) {

4132 
v
 = 0 - v;

4133 
	gf
 |= 8;

4135 
	gi
 = 0;

4137 
	gd
 = (
TCHAR
)(
v
 % 
r
); 
	gv
 /=Ñ;

4138 i‡(
	gd
 > 9Ëd +(
c
 == 'x') ? 0x27 : 0x07;

4139 
	gs
[
i
++] = 
d
 + '0';

4140 } 
	gv
 && 
	gi
 <  
	gs
 /  s[0]);

4141 i‡(
	gf
 & 8Ë
	gs
[
i
++] = '-';

4142 
	gj
 = 
i
; 
	gd
 = (
f
 & 1) ? '0' : ' ';

4143 
	gªs
 = 0;

4144 !(
	gf
 & 2Ë&& 
	gj
++ < 
	gw
Ë
	gªs
 +(
cc
 = 
f_putc
(
d
, 
fû
));

4145 dÿ
	gªs
 +(
cc
 = 
f_putc
(
s
[--
i
], 
fû
)); 
	gi
);

4146 
	gj
++ < 
	gw
Ë
	gªs
 +(
cc
 = 
f_putc
(' ', 
fû
));

4147 i‡(
	gcc
 !
EOF
Ë
cc
 = 
ªs
;

4150 
va_íd
(
¨p
);

4151  (
	gcc
 =
EOF
Ë? 
cc
 : 
ªs
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\ChaN\ff.h

17 #i‚de‡
_SDFS_FATFS


18 
	#_SDFS_FATFS
 4004

	)

20 #ifde‡
__˝lu•lus


24 
	~"sdfs_öãgî.h
"

25 
	~"ffc⁄f.h
"

27 #i‡
_SDFS_FATFS
 !
_FFCONF


28 #îr‹ 
Wr⁄g
 
c⁄figuøti⁄
 
fûe
 (
ffc⁄f
.
h
).

31 
«me•a˚
 
SDFS


36 #i‡
_MULTI_PARTITION


38 
BYTE
 
pd
;

39 
BYTE
 
±
;

40 } 
	tPARTITION
;

41 
PARTITION
 
VﬁToP¨t
[];

42 
	#LD2PD
(
vﬁ
Ë(
VﬁToP¨t
[vﬁ].
pd
Ë

	)

43 
	#LD2PT
(
vﬁ
Ë(
VﬁToP¨t
[vﬁ].
±
Ë

	)

46 
	#LD2PD
(
vﬁ
Ë(
BYTE
)(vﬁË

	)

47 
	#LD2PT
(
vﬁ
Ë0

	)

55 #i‡
_LFN_UNICODE


56 #i‡!
_USE_LFN


57 #îr‹ 
_LFN_UNICODE
 
mu°
 
be
 0 
ö
 
n⁄
-
LFN
 
cfg
.

59 #i‚de‡
_INC_TCHAR


60 
WCHAR
 
	tTCHAR
;

61 
	#_T
(
x
Ë
L
 ## 
	)
x

62 
	#_TEXT
(
x
Ë
L
 ## 
	)
x

66 #i‚de‡
_INC_TCHAR


67 
	tTCHAR
;

68 
	#_T
(
x
Ë
	)
x

69 
	#_TEXT
(
x
Ë
	)
x

79 
BYTE
 
	gfs_ty≥
;

80 
BYTE
 
	gdrv
;

81 
BYTE
 
	gcsize
;

82 
BYTE
 
	gn_Áts
;

83 
BYTE
 
	gwÊag
;

84 
BYTE
 
	gfsi_Êag
;

85 
WORD
 
	gid
;

86 
WORD
 
	gn_roŸdú
;

87 #i‡
_MAX_SS
 != 512

88 
WORD
 
	gssize
;

90 #i‡
_FS_REENTRANT


91 
_SYNC_t
 
	gsobj
;

93 #i‡!
_FS_READONLY


94 
DWORD
 
	gœ°_˛u°
;

95 
DWORD
 
	g‰ì_˛u°
;

96 
DWORD
 
	gfsi_£˘‹
;

98 #i‡
_FS_RPATH


99 
DWORD
 
	gcdú
;

101 
DWORD
 
	gn_Áã¡
;

102 
DWORD
 
	gfsize
;

103 
DWORD
 
	gÁtba£
;

104 
DWORD
 
	gdúba£
;

105 
DWORD
 
	gd©aba£
;

106 
DWORD
 
	gwö£˘
;

107 
BYTE
 
	gwö
[
_MAX_SS
];

108 } 
	tFATFS
;

115 
FATFS
* 
	gfs
;

116 
WORD
 
	gid
;

117 
BYTE
 
	gÊag
;

118 
BYTE
 
	g∑d1
;

119 
DWORD
 
	gÂå
;

120 
DWORD
 
	gfsize
;

121 
DWORD
 
	gs˛u°
;

122 
DWORD
 
	g˛u°
;

123 
DWORD
 
	gd£˘
;

124 #i‡!
_FS_READONLY


125 
DWORD
 
	gdú_£˘
;

126 
BYTE
* 
	gdú_±r
;

128 #i‡
_USE_FASTSEEK


129 
DWORD
* 
	g˛tbl
;

131 #i‡
_FS_LOCK


132 
UINT
 
	glockid
;

134 #i‡!
_FS_TINY


135 
BYTE
 
	gbuf
[
_MAX_SS
];

137 } 
	tFIL
;

144 
FATFS
* 
	gfs
;

145 
WORD
 
	gid
;

146 
WORD
 
	gödex
;

147 
DWORD
 
	gs˛u°
;

148 
DWORD
 
	g˛u°
;

149 
DWORD
 
	g£˘
;

150 
BYTE
* 
	gdú
;

151 
BYTE
* 
	g‚
;

152 #i‡
_USE_LFN


153 
WCHAR
* 
	gl‚
;

154 
WORD
 
	gl‚_idx
;

156 } 
	tFATFS_DIR
;

163 
DWORD
 
	gfsize
;

164 
WORD
 
	gfd©e
;

165 
WORD
 
	g·ime
;

166 
BYTE
 
	gÁârib
;

167 
TCHAR
 
	g‚ame
[13];

168 #i‡
_USE_LFN


169 
TCHAR
* 
	gl‚ame
;

170 
UINT
 
	glfsize
;

172 } 
	tFILINFO
;

179 
	gFR_OK
 = 0,

180 
	gFR_DISK_ERR
,

181 
	gFR_INT_ERR
,

182 
	gFR_NOT_READY
,

183 
	gFR_NO_FILE
,

184 
	gFR_NO_PATH
,

185 
	gFR_INVALID_NAME
,

186 
	gFR_DENIED
,

187 
	gFR_EXIST
,

188 
	gFR_INVALID_OBJECT
,

189 
	gFR_WRITE_PROTECTED
,

190 
	gFR_INVALID_DRIVE
,

191 
	gFR_NOT_ENABLED
,

192 
	gFR_NO_FILESYSTEM
,

193 
	gFR_MKFS_ABORTED
,

194 
	gFR_TIMEOUT
,

195 
	gFR_LOCKED
,

196 
	gFR_NOT_ENOUGH_CORE
,

197 
	gFR_TOO_MANY_OPEN_FILES
,

198 
	gFR_INVALID_PARAMETER


199 } 
	tFRESULT
;

206 
FRESULT
 
f_mou¡
 (
BYTE
, 
FATFS
*);

207 
FRESULT
 
f_›í
 (
FIL
*, c⁄° 
TCHAR
*, 
BYTE
);

208 
FRESULT
 
f_ªad
 (
FIL
*, *, 
UINT
, UINT*);

209 
FRESULT
 
f_l£ek
 (
FIL
*, 
DWORD
);

210 
FRESULT
 
f_˛o£
 (
FIL
*);

211 
FRESULT
 
f_›ídú
 (
FATFS_DIR
*, c⁄° 
TCHAR
*);

212 
FRESULT
 
f_ªaddú
 (
FATFS_DIR
*, 
FILINFO
*);

213 
FRESULT
 
f_°©
 (c⁄° 
TCHAR
*, 
FILINFO
*);

214 
FRESULT
 
f_wrôe
 (
FIL
*, c⁄° *, 
UINT
, UINT*);

215 
FRESULT
 
f_gë‰ì
 (c⁄° 
TCHAR
*, 
DWORD
*, 
FATFS
**);

216 
FRESULT
 
f_åunˇã
 (
FIL
*);

217 
FRESULT
 
f_sync
 (
FIL
*);

218 
FRESULT
 
f_u∆ök
 (c⁄° 
TCHAR
*);

219 
FRESULT
 
f_mkdú
 (c⁄° 
TCHAR
*);

220 
FRESULT
 
f_chmod
 (c⁄° 
TCHAR
*, 
BYTE
, BYTE);

221 
FRESULT
 
f_utime
 (c⁄° 
TCHAR
*, c⁄° 
FILINFO
*);

222 
FRESULT
 
f_ª«me
 (c⁄° 
TCHAR
*, const TCHAR*);

223 
FRESULT
 
f_chdrive
 (
BYTE
);

224 
FRESULT
 
f_chdú
 (c⁄° 
TCHAR
*);

225 
FRESULT
 
f_gëcwd
 (
TCHAR
*, 
UINT
);

226 
FRESULT
 
f_f‹w¨d
 (
FIL
*, 
UINT
(*)(c⁄° 
BYTE
*,UINT), UINT, UINT*);

227 
FRESULT
 
f_mkfs
 (
BYTE
, BYTE, 
UINT
);

228 
FRESULT
 
f_fdisk
 (
BYTE
, c⁄° 
DWORD
[], *);

229 
f_putc
 (
TCHAR
, 
FIL
*);

230 
f_puts
 (c⁄° 
TCHAR
*, 
FIL
*);

231 
f_¥ötf
 (
FIL
*, c⁄° 
TCHAR
*, ...);

232 
TCHAR
* 
f_gës
 (TCHAR*, , 
FIL
*);

234 
	#f_eof
(
Â
Ë(((Â)->
Âå
 =(Â)->
fsize
Ë? 1 : 0)

	)

235 
	#f_îr‹
(
Â
Ë(((Â)->
Êag
 & 
FA__ERROR
Ë? 1 : 0)

	)

236 
	#f_ãŒ
(
Â
Ë((Â)->
Âå
)

	)

237 
	#f_size
(
Â
Ë((Â)->
fsize
)

	)

239 #i‚de‡
EOF


240 
	#EOF
 (-1)

	)

250 #i‡!
_FS_READONLY


251 
DWORD
 
gë_Áâime
 ();

255 #i‡
_USE_LFN


256 
WCHAR
 
ff_c⁄vît
 (WCHAR, 
UINT
);

257 
WCHAR
 
ff_wtouµî
 (WCHAR);

258 #i‡
_USE_LFN
 == 3

259 * 
ff_memÆloc
 (
UINT
);

260 
ff_mem‰ì
 (*);

265 #i‡
_FS_REENTRANT


266 
ff_¸e_syncobj
 (
BYTE
, 
_SYNC_t
*);

267 
ff_ªq_gø¡
 (
_SYNC_t
);

268 
ff_ªl_gø¡
 (
_SYNC_t
);

269 
ff_dñ_syncobj
 (
_SYNC_t
);

281 
	#FA_READ
 0x01

	)

282 
	#FA_OPEN_EXISTING
 0x00

	)

283 
	#FA__ERROR
 0x80

	)

285 #i‡!
_FS_READONLY


286 
	#FA_WRITE
 0x02

	)

287 
	#FA_CREATE_NEW
 0x04

	)

288 
	#FA_CREATE_ALWAYS
 0x08

	)

289 
	#FA_OPEN_ALWAYS
 0x10

	)

290 
	#FA__WRITTEN
 0x20

	)

291 
	#FA__DIRTY
 0x40

	)

297 
	#FS_FAT12
 1

	)

298 
	#FS_FAT16
 2

	)

299 
	#FS_FAT32
 3

	)

304 
	#AM_RDO
 0x01

	)

305 
	#AM_HID
 0x02

	)

306 
	#AM_SYS
 0x04

	)

307 
	#AM_VOL
 0x08

	)

308 
	#AM_LFN
 0x0F

	)

309 
	#AM_DIR
 0x10

	)

310 
	#AM_ARC
 0x20

	)

311 
	#AM_MASK
 0x3F

	)

315 
	#CREATE_LINKMAP
 0xFFFFFFFF

	)

322 #i‡
_WORD_ACCESS
 == 1

323 
	#LD_WORD
(
±r
Ë(
WORD
)(*(WORD*)(
BYTE
*)’å))

	)

324 
	#LD_DWORD
(
±r
Ë(
DWORD
)(*(DWORD*)(
BYTE
*)’å))

	)

325 
	#ST_WORD
(
±r
,
vÆ
Ë*(
WORD
*)(
BYTE
*)’å)=(WORD)(vÆ)

	)

326 
	#ST_DWORD
(
±r
,
vÆ
Ë*(
DWORD
*)(
BYTE
*)’å)=(DWORD)(vÆ)

	)

328 
	#LD_WORD
(
±r
Ë(
WORD
)(((WORD)*((
BYTE
*)’å)+1)<<8)|(WORD)*(BYTE*)’å))

	)

329 
	#LD_DWORD
(
±r
Ë(
DWORD
)(((DWORD)*((
BYTE
*)’å)+3)<<24)|((DWORD)*((BYTE*)’å)+2)<<16)|((
WORD
)*((BYTE*)’å)+1)<<8)|*(BYTE*)’å))

	)

330 
	#ST_WORD
(
±r
,
vÆ
Ë*(
BYTE
*)’å)=(BYTE)(vÆ); *((BYTE*)’å)+1)=(BYTE)((
WORD
)(vÆ)>>8)

	)

331 
	#ST_DWORD
(
±r
,
vÆ
Ë*(
BYTE
*)’å)=(BYTE)(vÆ); *((BYTE*)’å)+1)=(BYTE)((
WORD
)(vÆ)>>8); *((BYTE*)’å)+2)=(BYTE)((
DWORD
)(vÆ)>>16); *((BYTE*)’å)+3)=(BYTE)((DWORD)(vÆ)>>24)

	)

334 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\ChaN\ffconf.h

9 #i‚de‡
_FFCONF


10 
	#_FFCONF
 4004

	)

12 
«me•a˚
 
	gSDFS


14 
	#FFS_DBG
 0

	)

20 
	#_FS_TINY
 0

	)

26 
	#_FS_READONLY
 0

	)

32 
	#_FS_MINIMIZE
 0

	)

42 
	#_USE_STRFUNC
 0

	)

46 
	#_USE_MKFS
 1

	)

50 
	#_USE_FORWARD
 0

	)

54 
	#_USE_FASTSEEK
 0

	)

63 
	#_CODE_PAGE
 858

	)

96 
	#_USE_LFN
 1

	)

97 
	#_MAX_LFN
 255

	)

111 
	#_LFN_UNICODE
 0

	)

116 
	#_FS_RPATH
 0

	)

131 
	#_VOLUMES
 1

	)

135 
	#_MAX_SS
 512

	)

143 
	#_MULTI_PARTITION
 0

	)

149 
	#_USE_ERASE
 0

	)

159 
	#_WORD_ACCESS
 0

	)

176 
	#_FS_REENTRANT
 0

	)

177 
	#_FS_TIMEOUT
 1000

	)

178 
	#_SYNC_t
 
HANDLE


	)

188 
	#_FS_LOCK
 0

	)

192 
	#FLUSH_ON_NEW_CLUSTER
 0

	)

193 
	#FLUSH_ON_NEW_SECTOR
 1

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\ChaN\sdfs_diskio.h

5 #i‚de‡
_SDFS_DISKIO


8 
	~"sdfs_öãgî.h
"

10 
«me•a˚
 
	gSDFS


13 
	#_READONLY
 0

14 
	#_USE_IOCTL
 1

15 

	)

18 
BYTE
 
	tDSTATUS
;

22 
	gRES_OK
 = 0,

23 
	gRES_ERROR
,

24 
	gRES_WRPRT
,

25 
	gRES_NOTRDY
,

26 
	gRES_PARERR


27 } 
	tDRESULT
;

32 
assign_drives
 (, );

33 
DSTATUS
 
disk_öôülize
 (
BYTE
);

34 
DSTATUS
 
disk_°©us
 (
BYTE
);

35 
DRESULT
 
disk_ªad
 (
BYTE
, BYTE*, 
DWORD
, BYTE);

36 #i‡ 
_READONLY
 == 0

37 
DRESULT
 
disk_wrôe
 (
BYTE
, c⁄° BYTE*, 
DWORD
, BYTE);

39 
DRESULT
 
disk_io˘l
 (
BYTE
, BYTE, *);

44 
	#STA_NOINIT
 0x01

45 
	#STA_NODISK
 0x02

46 
	#STA_PROTECT
 0x04

47 

	)

52 
	#CTRL_SYNC
 0

53 
	#GET_SECTOR_COUNT
 1

54 
	#GET_SECTOR_SIZE
 2

55 
	#GET_BLOCK_SIZE
 3

56 
	#CTRL_ERASE_SECTOR
 4

57 

	)

59 
	#CTRL_POWER
 5

60 
	#CTRL_LOCK
 6

61 
	#CTRL_EJECT
 7

62 

	)

64 
	#MMC_GET_TYPE
 10

65 
	#MMC_GET_CSD
 11

66 
	#MMC_GET_CID
 12

67 
	#MMC_GET_OCR
 13

68 
	#MMC_GET_SDSTAT
 14

69 

	)

71 
	#ATA_GET_REV
 20

72 
	#ATA_GET_MODEL
 21

73 
	#ATA_GET_SN
 22

74 

	)

76 
	#NAND_FORMAT
 30

77 

	)

81 
	#_SDFS_DISKIO


	)

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\ChaN\sdfs_integer.h

5 #i‚de‡
_SDFS_INTEGER


6 
	#_SDFS_INTEGER


	)

8 #ifde‡
_WIN32


10 
	~<wödows.h
>

11 
	~<tch¨.h
>

15 
«me•a˚
 
	gSDFS


19 
	tINT
;

20 
	tUINT
;

23 
	tCHAR
;

24 
	tUCHAR
;

25 
	tBYTE
;

28 
	tSHORT
;

29 
	tUSHORT
;

30 
	tWORD
;

31 
	tWCHAR
;

34 
	tLONG
;

35 
	tULONG
;

36 
	tDWORD
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\FATDirHandle.cpp

22 
	~<°rög.h
>

23 
	~"ff.h
"

24 
	~"FATDúH™dÀ.h
"

26 
usög
 
«me•a˚
 
	gmbed
;

28 
	gFATDúH™dÀ
::
	$FATDúH™dÀ
(c⁄° 
FATFS_DIR
 &
the_dú
) {

29 
dú
 = 
the_dú
;

30 
	}
}

32 
	gFATDúH™dÀ
::
	$˛o£dú
() {

33 
dñëe
 
this
;

35 
	}
}

37 
dúít
 *
	gFATDúH™dÀ
::
	$ªaddú
() {

38 
FILINFO
 
föfo
;

40 #i‡
_USE_LFN


41 
föfo
.
l‚ame
 = 
cur_íåy
.
d_«me
;

42 
föfo
.
lfsize
 = (
cur_íåy
.
d_«me
);

45 
FRESULT
 
ªs
 = 
	`f_ªaddú
(&
dú
, &
föfo
);

47 #i‡
_USE_LFN


48 if(
ªs
 !0 || 
föfo
.
‚ame
[0]==0) {

49  
NULL
;

51 if(
cur_íåy
.
d_«me
[0]==0) {

53 
	`mem˝y
(
cur_íåy
.
d_«me
, 
föfo
.
‚ame
, (finfo.fname));

55  &
cur_íåy
;

58 if(
ªs
 !0 || 
föfo
.
‚ame
[0]==0) {

59  
NULL
;

61 
	`mem˝y
(
cur_íåy
.
d_«me
, 
föfo
.
‚ame
, (finfo.fname));

62  &
cur_íåy
;

65 
	}
}

67 
	gFATDúH™dÀ
::
	$ªwöddú
() {

68 
dú
.
ödex
 = 0;

69 
	}
}

71 
off_t
 
	gFATDúH™dÀ
::
	$ãŒdú
() {

72  
dú
.
ödex
;

73 
	}
}

75 
	gFATDúH™dÀ
::
	$£ekdú
(
off_t
 
loˇti⁄
) {

76 
dú
.
ödex
 = 
loˇti⁄
;

77 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\FATDirHandle.h

22 #i‚de‡
MBED_FATDIRHANDLE_H


23 
	#MBED_FATDIRHANDLE_H


	)

25 
	~"DúH™dÀ.h
"

27 
usög
 
«me•a˚
 
	gmbed
;

29 
usög
 
«me•a˚
 
	gSDFS
;

31 ˛as†
	cFATDúH™dÀ
 : 
public
 
DúH™dÀ
 {

33 
public
:

34 
FATDúH™dÀ
(c⁄° 
FATFS_DIR
 &
the_dú
);

35 
vútuÆ
 
˛o£dú
();

36 
vútuÆ
 
dúít
 *
ªaddú
();

37 
vútuÆ
 
ªwöddú
();

38 
vútuÆ
 
off_t
 
ãŒdú
();

39 
vútuÆ
 
£ekdú
(
off_t
 
loˇti⁄
);

41 
	m¥iv©e
:

42 
FATFS_DIR
 
dú
;

43 
dúít
 
	mcur_íåy
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\FATFileHandle.cpp

22 
	~"ff.h
"

23 
	~"ffc⁄f.h
"

24 
	~"mbed_debug.h
"

26 
	~"FATFûeH™dÀ.h
"

28 
	gFATFûeH™dÀ
::
	$FATFûeH™dÀ
(
FIL
 
fh
) {

29 
_fh
 = 
fh
;

30 
	}
}

32 
	gFATFûeH™dÀ
::
	$˛o£
() {

33 
ªtvÆ
 = 
	`f_˛o£
(&
_fh
);

34 
dñëe
 
this
;

35  
ªtvÆ
;

36 
	}
}

38 
ssize_t
 
	gFATFûeH™dÀ
::
	$wrôe
(c⁄° * 
buf„r
, 
size_t
 
Àngth
) {

39 
UINT
 
n
;

40 
FRESULT
 
ªs
 = 
	`f_wrôe
(&
_fh
, 
buf„r
, 
Àngth
, &
n
);

41 i‡(
ªs
) {

42 
	`debug_if
(
FFS_DBG
, "f_wrôe(ËÁûed: %d", 
ªs
);

45  
n
;

46 
	}
}

48 
ssize_t
 
	gFATFûeH™dÀ
::
	$ªad
(* 
buf„r
, 
size_t
 
Àngth
) {

49 
	`debug_if
(
FFS_DBG
, "ªad(%d)\n", 
Àngth
);

50 
UINT
 
n
;

51 
FRESULT
 
ªs
 = 
	`f_ªad
(&
_fh
, 
buf„r
, 
Àngth
, &
n
);

52 i‡(
ªs
) {

53 
	`debug_if
(
FFS_DBG
, "f_ªad(ËÁûed: %d\n", 
ªs
);

56  
n
;

57 
	}
}

59 
	gFATFûeH™dÀ
::
	$ißây
() {

61 
	}
}

63 
off_t
 
	gFATFûeH™dÀ
::
	$l£ek
(
off_t
 
posôi⁄
, 
whí˚
) {

64 i‡(
whí˚
 =
SEEK_END
) {

65 
posôi⁄
 +
_fh
.
fsize
;

66 } if(
whí˚
==
SEEK_CUR
) {

67 
posôi⁄
 +
_fh
.
Âå
;

69 
FRESULT
 
ªs
 = 
	`f_l£ek
(&
_fh
, 
posôi⁄
);

70 i‡(
ªs
) {

71 
	`debug_if
(
FFS_DBG
, "l£ek faûed: %d\n", 
ªs
);

74 
	`debug_if
(
FFS_DBG
, "l£ek OK,Ñëu∫ög %i\n", 
_fh
.
Âå
);

75  
_fh
.
Âå
;

77 
	}
}

79 
	gFATFûeH™dÀ
::
	$fsync
() {

80 
FRESULT
 
ªs
 = 
	`f_sync
(&
_fh
);

81 i‡(
ªs
) {

82 
	`debug_if
(
FFS_DBG
, "f_sync(ËÁûed: %d\n", 
ªs
);

86 
	}
}

88 
off_t
 
	gFATFûeH™dÀ
::
	$Êí
() {

89  
_fh
.
fsize
;

90 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\FATFileHandle.h

22 #i‚de‡
MBED_FATFILEHANDLE_H


23 
	#MBED_FATFILEHANDLE_H


	)

25 
	~"FûeH™dÀ.h
"

27 
usög
 
«me•a˚
 
	gmbed
;

29 
usög
 
«me•a˚
 
	gSDFS
;

31 ˛as†
	cFATFûeH™dÀ
 : 
public
 
FûeH™dÀ
 {

32 
public
:

34 
FATFûeH™dÀ
(
FIL
 
fh
);

35 
vútuÆ
 
˛o£
();

36 
vútuÆ
 
ssize_t
 
wrôe
(c⁄° * 
buf„r
, 
size_t
 
Àngth
);

37 
vútuÆ
 
ssize_t
 
ªad
(* 
buf„r
, 
size_t
 
Àngth
);

38 
vútuÆ
 
ißây
();

39 
vútuÆ
 
off_t
 
l£ek
(off_à
posôi⁄
, 
whí˚
);

40 
vútuÆ
 
fsync
();

41 
vútuÆ
 
off_t
 
Êí
();

43 
	m¥Ÿe˘ed
:

45 
FIL
 
_fh
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\FATFileSystem.cpp

22 
	~"mbed.h
"

24 
	~"ffc⁄f.h
"

25 
	~"mbed_debug.h
"

27 
	~"FATFûeSy°em.h
"

28 
	~"FATFûeH™dÀ.h
"

29 
	~"FATDúH™dÀ.h
"

31 
«me•a˚
 
	gSDFS


33 
DWORD
 
gë_Áâime
() {

34 
time_t
 
	gøwtime
;

35 
time
(&
øwtime
);

36 
tm
 *
	g±m
 = 
loˇ…ime
(&
øwtime
);

37  (
	gDWORD
)(
	g±m
->
	gtm_yór
 - 80) << 25

38 | (
	gDWORD
)(
	g±m
->
	gtm_m⁄
 + 1 ) << 21

39 | (
	gDWORD
)(
	g±m
->
	gtm_mday
 ) << 16

40 | (
	gDWORD
)(
	g±m
->
	gtm_hour
 ) << 11

41 | (
	gDWORD
)(
	g±m
->
	gtm_mö
 ) << 5

42 | (
	gDWORD
)(
	g±m
->
	gtm_£c
/2 );

46 
FATFûeSy°em
 *
	gFATFûeSy°em
::
_ffs
[
_VOLUMES
] = {0};

48 
	gFATFûeSy°em
::
	$FATFûeSy°em
(c⁄° * 
n
Ë: 
	$FûeSy°emLike
(
n
) {

49 
	`debug_if
(
FFS_DBG
, "FATFûeSy°em(%s)\n", 
n
);

50 
i
=0; i<
_VOLUMES
; i++) {

51 if(
_ffs
[
i
] == 0) {

52 
_ffs
[
i
] = 
this
;

53 
_fsid
 = 
i
;

54 
	`debug_if
(
FFS_DBG
, "Mou¡ög [%s] o¿ff†drivê[%d]\n", 
_«me
, 
_fsid
);

55 
	`f_mou¡
(
i
, &
_fs
);

59 
	`îr‹
("Couldn'à¸óã %†ö FATFûeSy°em::FATFûeSy°em\n", 
n
);

60 
	}
}

62 
	gFATFûeSy°em
::~
	$FATFûeSy°em
() {

63 
i
=0; i<
_VOLUMES
; i++) {

64 i‡(
_ffs
[
i
] =
this
) {

65 
_ffs
[
i
] = 0;

66 
	`f_mou¡
(
i
, 
NULL
);

69 
	}
}

71 
FûeH™dÀ
 *
	gFATFûeSy°em
::
	$›í
(c⁄° * 
«me
, 
Êags
) {

72 
	`debug_if
(
FFS_DBG
, "›í(%sË⁄ fûesy°em [%s], drv [%d]\n", 
«me
, 
_«me
, 
_fsid
);

73 
n
[64];

74 
	`•rötf
(
n
, "%d:/%s", 
_fsid
, 
«me
);

77 
BYTE
 
›ímode
;

78 i‡(
Êags
 & 
O_RDWR
) {

79 
›ímode
 = 
FA_READ
|
FA_WRITE
;

80 } if(
Êags
 & 
O_WRONLY
) {

81 
›ímode
 = 
FA_WRITE
;

83 
›ímode
 = 
FA_READ
;

85 if(
Êags
 & 
O_CREAT
) {

86 if(
Êags
 & 
O_TRUNC
) {

87 
›ímode
 |
FA_CREATE_ALWAYS
;

89 
›ímode
 |
FA_OPEN_ALWAYS
;

93 
FIL
 
fh
;

94 
FRESULT
 
ªs
 = 
	`f_›í
(&
fh
, 
n
, 
›ímode
);

95 i‡(
ªs
) {

96 
	`debug_if
(
FFS_DBG
, "f_›í('w'ËÁûed: %d\n", 
ªs
);

97  
NULL
;

99 i‡(
Êags
 & 
O_APPEND
) {

100 
	`f_l£ek
(&
fh
, fh.
fsize
);

102  
√w
 
	`FATFûeH™dÀ
(
fh
);

103 
	}
}

105 
	gFATFûeSy°em
::
	$ªmove
(c⁄° *
fûíame
) {

106 
FRESULT
 
ªs
 = 
	`f_u∆ök
(
fûíame
);

107 i‡(
ªs
) {

108 
	`debug_if
(
FFS_DBG
, "f_u∆ök(ËÁûed: %d\n", 
ªs
);

112 
	}
}

114 
	gFATFûeSy°em
::
	$ª«me
(c⁄° *
ﬁd«me
, c⁄° *
√w«me
) {

115 
FRESULT
 
ªs
 = 
	`f_ª«me
(
ﬁd«me
, 
√w«me
);

116 i‡(
ªs
) {

117 
	`debug_if
(
FFS_DBG
, "f_ª«me(ËÁûed: %d\n", 
ªs
);

121 
	}
}

123 
	gFATFûeSy°em
::
	$f‹m©
() {

124 
FRESULT
 
ªs
 = 
	`f_mkfs
(
_fsid
, 0, 512);

125 i‡(
ªs
) {

126 
	`debug_if
(
FFS_DBG
, "f_mkfs(ËÁûed: %d\n", 
ªs
);

130 
	}
}

132 
DúH™dÀ
 *
	gFATFûeSy°em
::
	$›ídú
(c⁄° *
«me
) {

133 
FATFS_DIR
 
dú
;

134 
FRESULT
 
ªs
 = 
	`f_›ídú
(&
dú
, 
«me
);

135 i‡(
ªs
 != 0) {

136  
NULL
;

138  
√w
 
	`FATDúH™dÀ
(
dú
);

139 
	}
}

141 
	gFATFûeSy°em
::
	$mkdú
(c⁄° *
«me
, 
mode_t
 
mode
) {

142 
FRESULT
 
ªs
 = 
	`f_mkdú
(
«me
);

143  
ªs
 == 0 ? 0 : -1;

144 
	}
}

146 
	gFATFûeSy°em
::
	$mou¡
() {

147 
FRESULT
 
ªs
 = 
	`f_mou¡
(
_fsid
, &
_fs
);

148  
ªs
 == 0 ? 0 : -1;

149 
	}
}

151 
	gFATFûeSy°em
::
	$unmou¡
() {

152 i‡(
	`disk_sync
())

154 
FRESULT
 
ªs
 = 
	`f_mou¡
(
_fsid
, 
NULL
);

155  
ªs
 == 0 ? 0 : -1;

156 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\FATFileSystem.h

22 #i‚de‡
MBED_FATFILESYSTEM_H


23 
	#MBED_FATFILESYSTEM_H


	)

25 
	~"FûeSy°emLike.h
"

26 
	~"FûeH™dÀ.h
"

27 
	~"ff.h
"

28 
	~"ffc⁄f.h
"

29 
	~<°döt.h
>

31 
usög
 
«me•a˚
 
	gmbed
;

33 
usög
 
«me•a˚
 
	gSDFS
;

38 ˛as†
	cFATFûeSy°em
 : 
public
 
FûeSy°emLike
 {

39 
public
:

41 
FATFûeSy°em
(c⁄° * 
n
);

42 
	mvútuÆ
 ~
FATFûeSy°em
();

44 
FATFûeSy°em
 * 
	m_ffs
[
_VOLUMES
];

45 
	mSDFS
::
FATFS
 
_fs
;

46 
	m_fsid
;

51 
vútuÆ
 
FûeH™dÀ
 *
›í
(c⁄° * 
«me
, 
Êags
);

56 
vútuÆ
 
ªmove
(c⁄° *
fûíame
);

61 
vútuÆ
 
ª«me
(c⁄° *
ﬁd«me
, c⁄° *
√w«me
);

66 
vútuÆ
 
f‹m©
();

71 
vútuÆ
 
DúH™dÀ
 *
›ídú
(c⁄° *
«me
);

76 
vútuÆ
 
mkdú
(c⁄° *
«me
, 
mode_t
 
mode
);

81 
vútuÆ
 
mou¡
();

86 
vútuÆ
 
unmou¡
();

88 
vútuÆ
 
	$disk_öôülize
() {  0; }

89 
vútuÆ
 
	$disk_°©us
(Ë{  0; 
	}
}

90 
vútuÆ
 
disk_ªad
(
uöt8_t
 * 
buf„r
, 
uöt64_t
 
£˘‹
, uöt8_à
cou¡
) = 0;

91 
vútuÆ
 
disk_wrôe
(c⁄° 
uöt8_t
 * 
buf„r
, 
uöt64_t
 
£˘‹
, uöt8_à
cou¡
) = 0;

92 
vútuÆ
 
	$disk_sync
(Ë{  0; 
	}
}

93 
vútuÆ
 
uöt64_t
 
disk_£˘‹s
() = 0;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\MemFileSystem.h

6 #i‚de‡
MBED_MEMFILESYSTEM_H


7 
	#MBED_MEMFILESYSTEM_H


	)

9 
	~"FATFûeSy°em.h
"

11 
«me•a˚
 
	gmbed


14 ˛as†
	cMemFûeSy°em
 : 
public
 
FATFûeSy°em


16 
public
:

19 *
£˘‹s
[2000];

21 
MemFûeSy°em
(c⁄° * 
«me
Ë: 
FATFûeSy°em
(name) {

22 
mem£t
(
£˘‹s
, 0, (sectors));

25 
	gvútuÆ
 ~
MemFûeSy°em
() {

26 
	gi
 = 0; i < 2000; i++) {

27 if(
	g£˘‹s
[
i
]) {

28 
‰ì
(
£˘‹s
[
i
]);

34 
vútuÆ
 
disk_ªad
(*
buf„r
, 
£˘‹
) {

35 if(
	g£˘‹s
[
£˘‹
] == 0) {

37 
mem£t
(
buf„r
, 0, 512);

39 
mem˝y
(
buf„r
, 
£˘‹s
[
£˘‹
], 512);

45 
vútuÆ
 
disk_wrôe
(c⁄° *
buf„r
, 
£˘‹
) {

47 
	gzîo
[512];

48 
mem£t
(
zîo
, 0, 512);

49 if(
memcmp
(
zîo
, 
buf„r
, 512)==0) {

50 if(
£˘‹s
[
£˘‹
] != 0) {

51 
‰ì
(
£˘‹s
[
£˘‹
]);

52 
	g£˘‹s
[
£˘‹
] = 0;

57 if(
	g£˘‹s
[
£˘‹
] == 0) {

58 *
£c
 = (*)
mÆloc
(512);

59 if(
	g£c
==0) {

62 
	g£˘‹s
[
£˘‹
] = 
£c
;

64 
mem˝y
(
£˘‹s
[
£˘‹
], 
buf„r
, 512);

69 
vútuÆ
 
disk_£˘‹s
() {

70  (
	g£˘‹s
)/(sectors[0]);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\SDFileSystem.cpp

17 
	~"SDFûeSy°em.h
"

18 
	~"pöm≠.h
"

19 
	~"sdfs_diskio.h
"

20 
	~"CRC7.h
"

21 
	~"CRC16.h
"

23 
	gSDFûeSy°em
::
	$SDFûeSy°em
(
PöName
 
mosi
, PöNamê
miso
, PöNamê
s˛k
, PöNamê
cs
, c⁄° * 
«me
, PöNamê
cd
, 
SwôchTy≥
 
cdty≥
, 
hz
Ë: 
	`FATFûeSy°em
“ame), 
	`m_Spi
(mosi, miso, s˛k), 
	`m_Cs
(cs, 1), 
	`m_Cd
(cd), 
	$m_FREQ
(
hz
)

26 
m_C¨dTy≥
 = 
CARD_NONE
;

27 
m_Crc
 = 
åue
;

28 
m_L¨geFømes
 = 
Ál£
;

29 
m_WrôeVÆid©i⁄
 = 
åue
;

30 
m_Sètus
 = 
STA_NOINIT
;

33 
	`pö_mode
(
miso
, 
PuŒUp
);

36 
m_Spi
.
	`f‹m©
(8, 0);

39 
m_Spi
.
	`‰equícy
(
m_FREQ
);

42 i‡(
cdty≥
 =
SWITCH_POS_NO
) {

43 
m_Cd
.
	`mode
(
PuŒDown
);

44 
m_CdAs£π
 = 1;

45 
m_Cd
.
	`ÁŒ
(
this
, &
SDFûeSy°em
::
⁄C¨dRemovÆ
);

46 } i‡(
cdty≥
 =
SWITCH_POS_NC
) {

47 
m_Cd
.
	`mode
(
PuŒDown
);

48 
m_CdAs£π
 = 0;

49 
m_Cd
.
	`ri£
(
this
, &
SDFûeSy°em
::
⁄C¨dRemovÆ
);

50 } i‡(
cdty≥
 =
SWITCH_NEG_NO
) {

51 
m_Cd
.
	`mode
(
PuŒUp
);

52 
m_CdAs£π
 = 0;

53 
m_Cd
.
	`ri£
(
this
, &
SDFûeSy°em
::
⁄C¨dRemovÆ
);

54 } i‡(
cdty≥
 =
SWITCH_NEG_NC
) {

55 
m_Cd
.
	`mode
(
PuŒUp
);

56 
m_CdAs£π
 = 1;

57 
m_Cd
.
	`ÁŒ
(
this
, &
SDFûeSy°em
::
⁄C¨dRemovÆ
);

59 
m_CdAs£π
 = -1;

61 
	}
}

63 
	gSDFûeSy°em
::
C¨dTy≥
 
SDFûeSy°em
::
	$ˇrd_ty≥
()

66 
	`checkSockë
();

69 i‡(!(
m_Sètus
 & 
STA_NODISK
Ë&& (m_Sètu†& 
STA_NOINIT
))

70 
	`disk_öôülize
();

73  
m_C¨dTy≥
;

74 
	}
}

76 
boﬁ
 
	gSDFûeSy°em
::
	$¸c
()

79  
m_Crc
;

80 
	}
}

82 
	gSDFûeSy°em
::
	$¸c
(
boﬁ
 
íabÀd
)

85 
	`checkSockë
();

88 i‡(
m_Sètus
 & 
STA_NOINIT
) {

89 
m_Crc
 = 
íabÀd
;

94 i‡(
íabÀd
 && !
m_Crc
) {

96 
m_Crc
 = 
åue
;

97 
	`comm™dTønß˘i⁄
(
CMD59
, 0x00000001);

98 } i‡(!
íabÀd
 && 
m_Crc
) {

100 
	`comm™dTønß˘i⁄
(
CMD59
, 0x00000000);

101 
m_Crc
 = 
Ál£
;

103 
	}
}

105 
boﬁ
 
	gSDFûeSy°em
::
	$œrge_‰ames
()

108  
m_L¨geFømes
;

109 
	}
}

111 
	gSDFûeSy°em
::
	$œrge_‰ames
(
boﬁ
 
íabÀd
)

114 
m_L¨geFømes
 = 
íabÀd
;

115 
	}
}

117 
boﬁ
 
	gSDFûeSy°em
::
	$wrôe_vÆid©i⁄
()

120  
m_WrôeVÆid©i⁄
;

121 
	}
}

123 
	gSDFûeSy°em
::
	$wrôe_vÆid©i⁄
(
boﬁ
 
íabÀd
)

126 
m_WrôeVÆid©i⁄
 = 
íabÀd
;

127 
	}
}

129 
	gSDFûeSy°em
::
	$unmou¡
()

132 
FATFûeSy°em
::
	`unmou¡
();

135 
m_Sètus
 |
STA_NOINIT
;

136 
m_C¨dTy≥
 = 
CARD_NONE
;

140 
	}
}

142 
	gSDFûeSy°em
::
	$disk_öôülize
()

144 
tokí
;

145 
ª•
;

148 
	`checkSockë
();

149 i‡(
m_Sètus
 & 
STA_NODISK
)

150  
m_Sètus
;

153 i‡(!(
m_Sètus
 & 
STA_NOINIT
))

154  
m_Sètus
;

157 
m_Spi
.
	`‰equícy
(400000);

160 
m_Cs
 = 1;

161 
i
 = 0; i < 10; i++)

162 
m_Spi
.
	`wrôe
(0xFF);

165 i‡(
	`comm™dTønß˘i⁄
(
CMD0
, 0x00000000) != 0x01) {

167 
m_C¨dTy≥
 = 
CARD_UNKNOWN
;

168  
m_Sètus
;

172 i‡(
m_Crc
) {

173 i‡(
	`comm™dTønß˘i⁄
(
CMD59
, 0x00000001) != 0x01) {

175 
m_C¨dTy≥
 = 
CARD_UNKNOWN
;

176  
m_Sètus
;

181 i‡(
	`comm™dTønß˘i⁄
(
CMD8
, 0x000001AA, &
ª•
) == 0x01) {

183 i‡((
ª•
 & 0xFFF) != 0x1AA) {

185 
m_C¨dTy≥
 = 
CARD_UNKNOWN
;

186  
m_Sètus
;

190 i‡(
	`comm™dTønß˘i⁄
(
CMD58
, 0x00000000, &
ª•
) != 0x01 || !(resp & (1 << 20))) {

192 
m_C¨dTy≥
 = 
CARD_UNKNOWN
;

193  
m_Sètus
;

197 
m_Timî
.
	`°¨t
();

199 
tokí
 = 
	`comm™dTønß˘i⁄
(
ACMD41
, 0x40100000);

200 } 
tokí
 =0x01 && 
m_Timî
.
	`ªad_ms
() < 1000);

201 
m_Timî
.
	`°›
();

202 
m_Timî
.
	`ª£t
();

205 i‡(
tokí
 != 0x00) {

207 
m_C¨dTy≥
 = 
CARD_UNKNOWN
;

208  
m_Sètus
;

212 i‡(
	`comm™dTønß˘i⁄
(
CMD58
, 0x00000000, &
ª•
) == 0x00) {

214 i‡(
ª•
 & (1 << 30))

215 
m_C¨dTy≥
 = 
CARD_SDHC
;

217 
m_C¨dTy≥
 = 
CARD_SD
;

220 i‡(
m_FREQ
 > 25000000)

221 
m_Spi
.
	`‰equícy
(25000000);

223 
m_Spi
.
	`‰equícy
(
m_FREQ
);

226 
m_C¨dTy≥
 = 
CARD_UNKNOWN
;

227  
m_Sètus
;

232 i‡(
	`comm™dTønß˘i⁄
(
CMD58
, 0x00000000, &
ª•
) != 0x01 || !(resp & (1 << 20))) {

234 
m_C¨dTy≥
 = 
CARD_UNKNOWN
;

235  
m_Sètus
;

239 
m_Timî
.
	`°¨t
();

241 
tokí
 = 
	`comm™dTønß˘i⁄
(
ACMD41
, 0x00100000);

242 } 
tokí
 =0x01 && 
m_Timî
.
	`ªad_ms
() < 1000);

243 
m_Timî
.
	`°›
();

244 
m_Timî
.
	`ª£t
();

247 i‡(
tokí
 == 0x00) {

249 
m_C¨dTy≥
 = 
CARD_SD
;

252 i‡(
m_FREQ
 > 25000000)

253 
m_Spi
.
	`‰equícy
(25000000);

255 
m_Spi
.
	`‰equícy
(
m_FREQ
);

258 
m_Timî
.
	`°¨t
();

260 
tokí
 = 
	`comm™dTønß˘i⁄
(
CMD1
, 0x00100000);

261 } 
tokí
 =0x01 && 
m_Timî
.
	`ªad_ms
() < 1000);

262 
m_Timî
.
	`°›
();

263 
m_Timî
.
	`ª£t
();

266 i‡(
tokí
 == 0x00) {

268 
m_C¨dTy≥
 = 
CARD_MMC
;

271 i‡(
m_FREQ
 > 20000000)

272 
m_Spi
.
	`‰equícy
(20000000);

274 
m_Spi
.
	`‰equícy
(
m_FREQ
);

277 
m_C¨dTy≥
 = 
CARD_UNKNOWN
;

278  
m_Sètus
;

284 i‡(
m_C¨dTy≥
 !
CARD_MMC
) {

285 i‡(
	`comm™dTønß˘i⁄
(
ACMD42
, 0x00000000) != 0x00) {

287 
m_C¨dTy≥
 = 
CARD_UNKNOWN
;

288  
m_Sètus
;

293 i‡(
m_C¨dTy≥
 !
CARD_SDHC
) {

294 i‡(
	`comm™dTønß˘i⁄
(
CMD16
, 0x00000200) != 0x00) {

296 
m_C¨dTy≥
 = 
CARD_UNKNOWN
;

297  
m_Sètus
;

302 
m_Sètus
 &~
STA_NOINIT
;

305  
m_Sètus
;

306 
	}
}

308 
	gSDFûeSy°em
::
	$disk_°©us
()

311 
	`checkSockë
();

314  
m_Sètus
;

315 
	}
}

317 
	gSDFûeSy°em
::
	$disk_ªad
(
uöt8_t
* 
buf„r
, 
uöt64_t
 
£˘‹
, uöt8_à
cou¡
)

320 i‡(
m_Sètus
 & 
STA_NOINIT
)

321  
RES_NOTRDY
;

324 i‡(
cou¡
 > 1) {

325  
	`ªadBlocks
((*)
buf„r
, 
£˘‹
, 
cou¡
Ë? 
RES_OK
 : 
RES_ERROR
;

327  
	`ªadBlock
((*)
buf„r
, 
£˘‹
Ë? 
RES_OK
 : 
RES_ERROR
;

329 
	}
}

331 
	gSDFûeSy°em
::
	$disk_wrôe
(c⁄° 
uöt8_t
* 
buf„r
, 
uöt64_t
 
£˘‹
, uöt8_à
cou¡
)

334 i‡(
m_Sètus
 & 
STA_NOINIT
)

335  
RES_NOTRDY
;

338 i‡(
m_Sètus
 & 
STA_PROTECT
)

339  
RES_WRPRT
;

342 i‡(
cou¡
 > 1) {

343  
	`wrôeBlocks
((c⁄° *)
buf„r
, 
£˘‹
, 
cou¡
Ë? 
RES_OK
 : 
RES_ERROR
;

345  
	`wrôeBlock
((c⁄° *)
buf„r
, 
£˘‹
Ë? 
RES_OK
 : 
RES_ERROR
;

347 
	}
}

349 
	gSDFûeSy°em
::
	$disk_sync
()

352 i‡(
	`£À˘
()) {

353 
	`de£À˘
();

354  
RES_OK
;

356  
RES_ERROR
;

358 
	}
}

360 
uöt64_t
 
	gSDFûeSy°em
::
	$disk_£˘‹s
()

363 i‡(
m_Sètus
 & 
STA_NOINIT
)

367 
f
 = 0; f < 3; f++) {

369 if(!
	`£À˘
())

373 i‡(
	`wrôeComm™d
(
CMD9
, 0x00000000) == 0x00) {

375 
csd
[16];

376 
boﬁ
 
suc˚ss
 = 
	`ªadD©a
(
csd
, 16);

377 
	`de£À˘
();

378 i‡(
suc˚ss
) {

380 i‡((
csd
[0] >> 6) == 0x01) {

382 
size
 = (((
csd
[7] & 0x3F) << 16) | (csd[8] << 8) | csd[9]) + 1;

383  
size
 << 10;

386 
size
 = (((
csd
[6] & 0x03) << 10) | (csd[7] << 2) | ((csd[8] & 0xC0) >> 6)) + 1;

387 
size
 <<((((
csd
[9] & 0x03) << 1) | ((csd[10] & 0x80) >> 7)) + 2);

388 
size
 <<(
csd
[5] & 0x0F);

389  
size
 >> 9;

399 
	`de£À˘
();

401 
	}
}

403 
	gSDFûeSy°em
::
	$⁄C¨dRemovÆ
()

406 
	`checkSockë
();

407 
	}
}

409 
ölöe
 
	gSDFûeSy°em
::
	$checkSockë
()

412 i‡(
m_CdAs£π
 =-1 || 
m_Cd
 == m_CdAssert) {

414 
m_Sètus
 &~
STA_NODISK
;

417 
m_Sètus
 |(
STA_NODISK
 | 
STA_NOINIT
);

418 
m_C¨dTy≥
 = 
CARD_NONE
;

420 
	}
}

422 
ölöe
 
boﬁ
 
	gSDFûeSy°em
::
	$waôRódy
(
timeout
)

424 
ª•
;

427 
m_Timî
.
	`°¨t
();

429 
ª•
 = 
m_Spi
.
	`wrôe
(0xFF);

430 } 
ª•
 =0x00 && 
m_Timî
.
	`ªad_ms
(Ë< 
timeout
);

431 
m_Timî
.
	`°›
();

432 
m_Timî
.
	`ª£t
();

435  (
ª•
 > 0x00);

436 
	}
}

438 
ölöe
 
boﬁ
 
	gSDFûeSy°em
::
	$£À˘
()

441 
m_Cs
 = 0;

444 
m_Spi
.
	`wrôe
(0xFF);

447 i‡(
	`waôRódy
(500)) {

448  
åue
;

451 
	`de£À˘
();

452  
Ál£
;

454 
	}
}

456 
ölöe
 
	gSDFûeSy°em
::
	$de£À˘
()

459 
m_Cs
 = 1;

462 
m_Spi
.
	`wrôe
(0xFF);

463 
	}
}

465 
ölöe
 
	gSDFûeSy°em
::
	$comm™dTønß˘i⁄
(
cmd
, 
¨g
, * 
ª•
)

468 if(!
	`£À˘
())

472 
tokí
 = 
	`wrôeComm™d
(
cmd
, 
¨g
, 
ª•
);

475 
	`de£À˘
();

476  
tokí
;

477 
	}
}

479 
	gSDFûeSy°em
::
	$wrôeComm™d
(
cmd
, 
¨g
, * 
ª•
)

481 
tokí
;

484 
f
 = 0; f < 3; f++) {

486 i‡(
cmd
 =
ACMD22
 || cmd =
ACMD23
 || cmd =
ACMD41
 || cmd =
ACMD42
) {

487 
tokí
 = 
	`wrôeComm™d
(
CMD55
, 0x00000000);

488 i‡(
tokí
 > 0x01)

489  
tokí
;

492 
	`de£À˘
();

493 if(!
	`£À˘
())

498 
cmdPackë
[6];

499 
cmdPackë
[0] = 
cmd
;

500 
cmdPackë
[1] = 
¨g
 >> 24;

501 
cmdPackë
[2] = 
¨g
 >> 16;

502 
cmdPackë
[3] = 
¨g
 >> 8;

503 
cmdPackë
[4] = 
¨g
;

504 i‡(
m_Crc
 || 
cmd
 =
CMD0
 || cmd =
CMD8
)

505 
cmdPackë
[5] = (
	`CRC7
(cmdPacket, 5) << 1) | 0x01;

507 
cmdPackë
[5] = 0x01;

510 
i
 = 0; i < 6; i++)

511 
m_Spi
.
	`wrôe
(
cmdPackë
[
i
]);

514 i‡(
cmd
 =
CMD12
)

515 
m_Spi
.
	`wrôe
(0xFF);

518 
i
 = 0; i < 9; i++) {

519 
tokí
 = 
m_Spi
.
	`wrôe
(0xFF);

520 i‡(!(
tokí
 & 0x80))

525 i‡(
tokí
 == 0xFF) {

528 } i‡(
tokí
 & (1 << 3)) {

531 } i‡(
tokí
 > 0x01) {

537 i‡(
cmd
 =
CMD13
 && 
ª•
 !
NULL
) {

539 *
ª•
 = 
m_Spi
.
	`wrôe
(0xFF);

540 } i‡((
cmd
 =
CMD8
 || cmd =
CMD58
Ë&& 
ª•
 !
NULL
) {

542 *
ª•
 = (
m_Spi
.
	`wrôe
(0xFF) << 24);

543 *
ª•
 |(
m_Spi
.
	`wrôe
(0xFF) << 16);

544 *
ª•
 |(
m_Spi
.
	`wrôe
(0xFF) << 8);

545 *
ª•
 |
m_Spi
.
	`wrôe
(0xFF);

553  
tokí
;

554 
	}
}

556 
boﬁ
 
	gSDFûeSy°em
::
	$ªadD©a
(* 
buf„r
, 
Àngth
)

558 
tokí
;

559 
¸c
;

562 
m_Timî
.
	`°¨t
();

564 
tokí
 = 
m_Spi
.
	`wrôe
(0xFF);

565 } 
tokí
 =0xFF && 
m_Timî
.
	`ªad_ms
() < 500);

566 
m_Timî
.
	`°›
();

567 
m_Timî
.
	`ª£t
();

570 i‡(
tokí
 != 0xFE)

571  
Ál£
;

574 i‡(
m_L¨geFømes
) {

576 
m_Spi
.
	`f‹m©
(16, 0);

579 
d©aW‹d
;

580 
i
 = 0; i < 
Àngth
; i += 2) {

581 
d©aW‹d
 = 
m_Spi
.
	`wrôe
(0xFFFF);

582 
buf„r
[
i
] = 
d©aW‹d
 >> 8;

583 
buf„r
[
i
 + 1] = 
d©aW‹d
;

587 
¸c
 = 
m_Spi
.
	`wrôe
(0xFFFF);

590 
m_Spi
.
	`f‹m©
(8, 0);

593 
i
 = 0; i < 
Àngth
; i++)

594 
buf„r
[
i
] = 
m_Spi
.
	`wrôe
(0xFF);

597 
¸c
 = (
m_Spi
.
	`wrôe
(0xFF) << 8);

598 
¸c
 |
m_Spi
.
	`wrôe
(0xFF);

602  (!
m_Crc
 || 
¸c
 =
	`CRC16
(
buf„r
, 
Àngth
));

603 
	}
}

605 
	gSDFûeSy°em
::
	$wrôeD©a
(c⁄° * 
buf„r
, 
tokí
)

608 
¸c
 = (
m_Crc
Ë? 
	`CRC16
(
buf„r
, 512) : 0xFFFF;

611 i‡(!
	`waôRódy
(500))

612  
Ál£
;

615 
m_Spi
.
	`wrôe
(
tokí
);

618 i‡(
m_L¨geFømes
) {

620 
m_Spi
.
	`f‹m©
(16, 0);

623 
i
 = 0; i < 512; i += 2)

624 
m_Spi
.
	`wrôe
((
buf„r
[
i
] << 8) | buffer[i + 1]);

627 
m_Spi
.
	`wrôe
(
¸c
);

630 
m_Spi
.
	`f‹m©
(8, 0);

633 
i
 = 0; i < 512; i++)

634 
m_Spi
.
	`wrôe
(
buf„r
[
i
]);

637 
m_Spi
.
	`wrôe
(
¸c
 >> 8);

638 
m_Spi
.
	`wrôe
(
¸c
);

642  (
m_Spi
.
	`wrôe
(0xFF) & 0x1F);

643 
	}
}

645 
ölöe
 
boﬁ
 
	gSDFûeSy°em
::
	$ªadBlock
(* 
buf„r
, 
lba
)

648 
f
 = 0; f < 3; f++) {

650 if(!
	`£À˘
())

654 i‡(
	`wrôeComm™d
(
CMD17
, (
m_C¨dTy≥
 =
CARD_SDHC
Ë? 
lba
 :Üba << 9) == 0x00) {

656 
boﬁ
 
suc˚ss
 = 
	`ªadD©a
(
buf„r
, 512);

657 
	`de£À˘
();

660 i‡(
suc˚ss
)

661  
åue
;

669 
	`de£À˘
();

670  
Ál£
;

671 
	}
}

673 
ölöe
 
boﬁ
 
	gSDFûeSy°em
::
	$ªadBlocks
(* 
buf„r
, 
lba
, 
cou¡
)

676 
f
 = 0; f < 3;) {

678 if(!
	`£À˘
())

682 i‡(
	`wrôeComm™d
(
CMD18
, (
m_C¨dTy≥
 =
CARD_SDHC
Ë? 
lba
 :Üba << 9) == 0x00) {

686 i‡(!
	`ªadD©a
(
buf„r
, 512)) {

687 
f
++;

692 
lba
++;

693 
buf„r
 += 512;

694 
f
 = 0;

695 } --
cou¡
);

698 i‡(
	`wrôeComm™d
(
CMD12
, 0x00000000) != 0x00) {

704 
	`de£À˘
();

705 i‡(
cou¡
 == 0)

706  
åue
;

714 
	`de£À˘
();

715  
Ál£
;

716 
	}
}

718 
ölöe
 
boﬁ
 
	gSDFûeSy°em
::
	$wrôeBlock
(c⁄° * 
buf„r
, 
lba
)

721 
f
 = 0; f < 3; f++) {

723 if(!
	`£À˘
())

727 i‡(
	`wrôeComm™d
(
CMD24
, (
m_C¨dTy≥
 =
CARD_SDHC
Ë? 
lba
 :Üba << 9) == 0x00) {

729 
tokí
 = 
	`wrôeD©a
(
buf„r
, 0xFE);

730 
	`de£À˘
();

733 i‡(
tokí
 == 0x0A) {

736 } i‡(
tokí
 == 0x0C) {

742 i‡(
m_WrôeVÆid©i⁄
) {

743 
ª•
;

744 i‡(
	`comm™dTønß˘i⁄
(
CMD13
, 0x00000000, &
ª•
) != 0x00 ||Ñesp != 0x00) {

751  
åue
;

759 
	`de£À˘
();

760  
Ál£
;

761 
	}
}

763 
ölöe
 
boﬁ
 
	gSDFûeSy°em
::
	$wrôeBlocks
(c⁄° * 
buf„r
, 
lba
, 
cou¡
)

765 
tokí
;

766 c⁄° * 
cuºítBuf„r
 = 
buf„r
;

767 
cuºítLba
 = 
lba
;

768 
cuºítCou¡
 = 
cou¡
;

771 
f
 = 0; f < 3;) {

773 i‡(
m_C¨dTy≥
 !
CARD_MMC
) {

774 i‡(
	`comm™dTønß˘i⁄
(
ACMD23
, 
cuºítCou¡
) != 0x00) {

781 if(!
	`£À˘
())

785 i‡(
	`wrôeComm™d
(
CMD25
, (
m_C¨dTy≥
 =
CARD_SDHC
Ë? 
cuºítLba
 : currentLba << 9) == 0x00) {

789 
tokí
 = 
	`wrôeD©a
(
cuºítBuf„r
, 0xFC);

790 i‡(
tokí
 != 0x05) {

791 
f
++;

796 
cuºítBuf„r
 += 512;

797 
f
 = 0;

798 } --
cuºítCou¡
);

801 i‡(!
	`waôRódy
(500))

805 i‡(
cuºítCou¡
 == 0) {

807 
m_Spi
.
	`wrôe
(0xFD);

808 
	`de£À˘
();

811 i‡(
m_WrôeVÆid©i⁄
) {

812 
ª•
;

813 i‡(
	`comm™dTønß˘i⁄
(
CMD13
, 0x00000000, &
ª•
) != 0x00 ||Ñesp != 0x00) {

820  
åue
;

823 i‡(
	`wrôeComm™d
(
CMD12
, 0x00000000) != 0x00) {

829 
	`de£À˘
();

832 i‡(
tokí
 == 0x0A) {

834 
wrôãnBlocks
 = 0;

835 i‡(
m_C¨dTy≥
 !
CARD_MMC
 && 
	`£À˘
()) {

837 i‡(
	`wrôeComm™d
(
ACMD22
, 0x00000000) == 0x00) {

839 
acmdD©a
[4];

840 i‡(
	`ªadD©a
(
acmdD©a
, 4)) {

842 
wrôãnBlocks
 = 
acmdD©a
[0] << 24;

843 
wrôãnBlocks
 |
acmdD©a
[1] << 16;

844 
wrôãnBlocks
 |
acmdD©a
[2] << 8;

845 
wrôãnBlocks
 |
acmdD©a
[3];

848 
	`de£À˘
();

852 
cuºítBuf„r
 = 
buf„r
 + (
wrôãnBlocks
 << 9);

853 
cuºítLba
 = 
lba
 + 
wrôãnBlocks
;

854 
cuºítCou¡
 = 
cou¡
 - 
wrôãnBlocks
;

870 
	`de£À˘
();

871  
Ál£
;

872 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\SDFileSystem.h

17 #i‚de‡
SD_FILE_SYSTEM_H


18 
	#SD_FILE_SYSTEM_H


	)

20 
	~"mbed.h
"

21 
	~"FATFûeSy°em.h
"

22 
	~<°döt.h
>

70 ˛as†
	cSDFûeSy°em
 : 
public
 
FATFûeSy°em


72 
public
:

75 
	eSwôchTy≥
 {

76 
SWITCH_NONE
,

77 
	mSWITCH_POS_NO
,

78 
	mSWITCH_POS_NC
,

79 
	mSWITCH_NEG_NO
,

80 
	mSWITCH_NEG_NC


85 
	eC¨dTy≥
 {

86 
	gCARD_NONE
,

87 
	gCARD_MMC
,

88 
	gCARD_SD
,

89 
	gCARD_SDHC
,

90 
	gCARD_UNKNOWN


104 
SDFûeSy°em
(
PöName
 
mosi
, PöNamê
miso
, PöNamê
s˛k
, PöNamê
cs
, c⁄° * 
«me
, PöNamê
cd
 = 
NC
, 
SwôchTy≥
 
cdty≥
 = 
SWITCH_NONE
, 
hz
 = 1000000);

110 
	gSDFûeSy°em
::
C¨dTy≥
 
ˇrd_ty≥
();

118 
boﬁ
 
¸c
();

124 
¸c
(
boﬁ
 
íabÀd
);

132 
boﬁ
 
œrge_‰ames
();

138 
œrge_‰ames
(
boﬁ
 
íabÀd
);

146 
boﬁ
 
wrôe_vÆid©i⁄
();

152 
wrôe_vÆid©i⁄
(
boﬁ
 
íabÀd
);

154 
vútuÆ
 
unmou¡
();

155 
vútuÆ
 
disk_öôülize
();

156 
vútuÆ
 
disk_°©us
();

157 
vútuÆ
 
disk_ªad
(
uöt8_t
* 
buf„r
, 
uöt64_t
 
£˘‹
, uöt8_à
cou¡
);

158 
vútuÆ
 
disk_wrôe
(c⁄° 
uöt8_t
* 
buf„r
, 
uöt64_t
 
£˘‹
, uöt8_à
cou¡
);

159 
vútuÆ
 
disk_sync
();

160 
vútuÆ
 
uöt64_t
 
disk_£˘‹s
();

162 
	g¥iv©e
:

164 
	eComm™d
 {

165 
CMD0
 = (0x40 | 0),

166 
	gCMD1
 = (0x40 | 1),

167 
	gCMD8
 = (0x40 | 8),

168 
	gCMD9
 = (0x40 | 9),

169 
	gCMD12
 = (0x40 | 12),

170 
	gCMD13
 = (0x40 | 13),

171 
	gCMD16
 = (0x40 | 16),

172 
	gCMD17
 = (0x40 | 17),

173 
	gCMD18
 = (0x40 | 18),

174 
	gACMD22
 = (0x40 | 22),

175 
	gACMD23
 = (0x40 | 23),

176 
	gCMD24
 = (0x40 | 24),

177 
	gCMD25
 = (0x40 | 25),

178 
	gACMD41
 = (0x40 | 41),

179 
	gACMD42
 = (0x40 | 42),

180 
	gCMD55
 = (0x40 | 55),

181 
	gCMD58
 = (0x40 | 58),

182 
	gCMD59
 = (0x40 | 59)

186 
Timî
 
	gm_Timî
;

187 
SPI
 
	gm_Spi
;

188 
DigôÆOut
 
	gm_Cs
;

189 
I¡îru±In
 
	gm_Cd
;

190 
	gm_CdAs£π
;

191 c⁄° 
	gm_FREQ
;

192 
	gSDFûeSy°em
::
C¨dTy≥
 
m_C¨dTy≥
;

193 
boﬁ
 
	gm_Crc
;

194 
boﬁ
 
	gm_L¨geFømes
;

195 
boﬁ
 
	gm_WrôeVÆid©i⁄
;

196 
	gm_Sètus
;

199 
⁄C¨dRemovÆ
();

200 
checkSockë
();

201 
boﬁ
 
waôRódy
(
timeout
);

202 
boﬁ
 
£À˘
();

203 
de£À˘
();

204 
comm™dTønß˘i⁄
(
cmd
, 
¨g
, * 
ª•
 = 
NULL
);

205 
wrôeComm™d
(
cmd
, 
¨g
, * 
ª•
 = 
NULL
);

206 
boﬁ
 
ªadD©a
(* 
buf„r
, 
Àngth
);

207 
wrôeD©a
(c⁄° * 
buf„r
, 
tokí
);

208 
boﬁ
 
ªadBlock
(* 
buf„r
, 
lba
);

209 
boﬁ
 
ªadBlocks
(* 
buf„r
, 
lba
, 
cou¡
);

210 
boﬁ
 
wrôeBlock
(c⁄° * 
buf„r
, 
lba
);

211 
boﬁ
 
wrôeBlocks
(c⁄° * 
buf„r
, 
lba
, 
cou¡
);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\Synth\Synth.cpp

37 
	~"Pokôto.h
"

38 
	~"Sy¡h.h
"

39 
	~"°döt.h
"

40 
	~"My_£âögs.h
"

44 
boﬁ
 
	g∂ayög
=
Ál£
;

45 
boﬁ
 
	gåack1⁄
 = 
åue
, 
	gåack2⁄
 =Årue, 
	gåack3⁄
 =Årue, 
	gèbÀRe‰esh
 = 
Ál£
;

47 
uöt8_t
 
	g£quí˚pos
=0, 
	gãmpo
 = 120;

48 
	gwrôeödex
=0, 
	gªadödex
=0;

49 
uöt16_t
 
	g∂ayîpos
=0;

50 
uöt16_t
 
	gßm∂e•îtick
 = ()((60.0f/()
ãmpo
)*
POK_AUD_FREQ
)/16;

51 
uöt16_t
 
	gnŸëick
=0;

52 
	gßm∂e•î∑âîn
=0;

54 
uöt8_t
 
	gtick
=3;

57 
SONG
 
	gs⁄g
;

58 
OSC
 
	gosc1
,
	gosc2
,
	gosc3
;

59 
OSC
 
	g∑tch
[15];

60 
BLOCK
 
	gblock
[30];

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\Synth\Synth.h

21 #i‚de‡
SYNTH_H


22 
	#SYNTH_H


	)

24 
	~"Sy¡h_osc.h
"

25 
	~"Sy¡h_s⁄g.h
"

39 
	#OPT_ADSR
 1

	)

40 
	#OPT_LOOP
 2

	)

41 
	#OPT_ECHO
 4

	)

42 
	#OPT_OVERDRIVE
 8

	)

43 
	#OPT_NORMALIZE
 0x10

	)

45 
	#OVERDRIVE
 4

	)

49 (*
	twaveFun˘i⁄
)(
	tOSC
*);

50 (*
	tívFun˘i⁄
)(
	tOSC
*);

51 (*
	tmixFun˘i⁄
)();

52 (*
	t°ªamsFun˘i⁄
)();

54 
waveFun˘i⁄
 
F¨r
 [];

55 
ívFun˘i⁄
 
E¨r
 [];

56 
mixFun˘i⁄
 
M¨r
 [];

57 
mixFun˘i⁄
 
HWM¨r
 [];

60 
	#RBTRACKER_VERSION
 0.03f

	)

62 
	#WOFF
 0

	)

63 
	#WSQUARE
 1

	)

64 
	#WSAW
 2

	)

65 
	#WTRI
 3

	)

66 
	#WNOISE
 4

	)

67 
	#WSAMPLE
 5

	)

68 
	#WPNOISE
 5

	)

70 
	#OVERDRIVE
 4

	)

72 
	#ARPSTEPMAX
 4

73 
	#PATTERNLENGTH
 64

	)

74 
	#MAXPATTERNS
 10

	)

75 
	#MAXBLOCKS
 30

76 

	)

77 
	#VOLTICK
 
POK_AUD_FREQ
/8820

78 
	#ARPTICK
 
POK_AUD_FREQ
/441

79 

	)

80 
	#NUMWAVES
 5

	)

81 
	#NUMENVELOPES
 3

	)

82 
	#NUMMIXES
 4

	)

84 
	`gëNŸeSåög
(*, 
uöt8_t
);

86 
	`∂ayNŸe
(
uöt8_t
,uint8_t,uint8_t);

87 
	`makeSam∂eIn°rumíts
();

89 
	`£tPôch
();

90 
	`£tWave
();

91 
	`£tVﬁume
();

92 
	`öôAudio
();

93 
	`ã°Osc
();

94 
	`ãrmö©eSound
();

95 
	`kûlSound
();

96 
	`°¨tSound
();

97 
	`°›Sound
();

98 
	`upd©ePœyback
();

99 
	`upd©ePœybackSD
(
uöt8_t
);

100 
	`öôSåóms
(
uöt8_t
);

101 
	`em±yOscûœt‹s
();

102 
	`em±yP©ches
();

103 
	`em±yBlocks
();

104 
	`em±yS⁄g
();

105 
	`›íS⁄gFromSD
(*);

106 
	`wrôeChunkToSD
(
uöt8_t
 *);

107 
	`ªadChunkFromSD
(
uöt8_t
 *);

108 
	`ªgi°îSåómsCÆlback
(
°ªamsFun˘i⁄
);

109 
°ªamsFun˘i⁄
 
°ªamCÆlbackPå
;

111 
boﬁ
 
∂ayög
, 
åack1⁄
, 
åack2⁄
, 
åack3⁄
, 
èbÀRe‰esh
;

112 
uöt16_t
 
∂ayîpos
;

113 
uöt16_t
 
ßm∂e•îtick
, 
nŸëick
;

114 
ßm∂e•î∑âîn
;

116 
ªadödex
, 
wrôeödex
;

117 
uöt8_t
 
tick
, 
£quí˚pos
;

119 
SONG
 
s⁄g
;

120 
OSC
 
osc1
,
osc2
,
osc3
;

121 
OSC
 
∑tch
[];

122 
BLOCK
 
block
[];

124 
	#MAX_ARPMODE
 16

	)

126 
öt8_t
 
¨±abÀ
[][5];

128 
uöt16_t
 
‰eqs
[];

130 
uöt32_t
 
cöcs
[];

132 
uöt8_t
 
	`x‹shi·8
();

133 
uöt16_t
 
	`x‹shi·16
();

135 
uöt16_t
 
noi£vÆ
;

137 
	`£tOSC
(
OSC
*,
byã
, byte, byte, byte, byte,

138 
uöt8_t
, 
uöt16_t
,

139 
uöt16_t
, uint16_t, uint16_t, uint16_t,

140 
öt16_t
, i¡16_t, 
uöt8_t
, uint8_t, uint8_t);

142 
	`£tOSC
(
OSC
*,
byã
,byã,
uöt16_t
, 
uöt8_t
, 
uöt32_t
);

144 
	`waveoff
(
OSC
*);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\Synth\Synth_envfuncs.cpp

37 
	~"Sy¡h.h
"

41 
	$noADSR
(
OSC
* 
o
){

42 
	}
}

44 
	$©èckFunc
(
OSC
* 
o
){

45 i‡(
o
->
ad§vﬁ
 >o->
vﬁ
) {

46 i‡(
o
->
deˇy
) {

47 
o
->
ad§vﬁ
 = o->
vﬁ
;

48 
o
->
ad§pha£
 = 2;

50 
o
->
ad§vﬁ
 = o->
su°aö
;

51 
o
->
ad§pha£
 = 3;

55 
o
->
ad§vﬁ
 +o->
©èck
;

56 
	}
}

58 
	$deˇyFunc
(
OSC
* 
o
){

59 i‡(
o
->
ad§vﬁ
 >o->
su°aö
 + o->
deˇy
) {

60 
o
->
ad§vﬁ
 -o->
deˇy
;

63 
o
->
ad§vﬁ
 = o->
su°aö
;

64 
o
->
ad§pha£
 = 3;

66 
	}
}

68 
	$ªÀa£Func
(
OSC
* 
o
){

69 i‡(
o
->
ad§vﬁ
 > o->
ªÀa£
) o->adsrvol -= o->release;

70 
o
->
ad§vﬁ
 = 0;

71 i‡(!
o
->
ad§vﬁ
) {

72 i‡(
o
->
lo›
) {

73 i‡(
o
->
©èck
) {

74 
o
->
ad§vﬁ
 = 0;

76 
o
->
ad§vﬁ
 = o->
vﬁ
;

78 i‡(
o
->
echo
Ëo->
echodiv
++;

79 
o
->
ad§pha£
 = 1;

83 
o
->
ad§pha£
 = 0;

84 
o
->
ad§vﬁ
 = 0;

88 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\Synth\Synth_helpers.cpp

21 
	~"Pokôto.h
"

22 
	~"Sy¡h.h
"

23 
	~"Pokôto_£âögs.h
"

25 
	#PROGMEM


	)

26 
	#pgm_ªad_byã
(
addr
Ë(*(c⁄° *)◊ddr))

	)

27 #i‚de‡
WIN32


28 #i‚de‡
pgm_ªad_w‹d


29 
	#pgm_ªad_w‹d
(
addr
Ë(*(c⁄° *)◊ddr))

	)

32 
	#pgm_ªad_w‹d
(
addr
Ë(*(c⁄° *)◊ddr))

	)

36 
uöt8_t
 
	gy8
 = 1;

37 
uöt16_t
 
	gy16
 = 1;

40 
uöt8_t
 
	$x‹shi·8
() {

42 
y8
 ^= (y8 * 128);

43 
y8
 ^= (y8 >> 5);

45  
y8
 ^= (y8 * 8);

46 
	}
}

49 
uöt16_t
 
	$x‹shi·16
() {

51 
y16
 ^= (y16 * 8192);

52 
y16
 ^= (y16 >> 9);

54  
y16
 ^= (y16 * 128);

55 
	}
}

58 
öt8_t
 
	g¨±abÀ
[
MAX_ARPMODE
][5] = {

70 #i‡(
POK_AUD_FREQ
==8000)

72 
uöt32_t
 
	gcöcs
[] ={

164 #ñi‡(
POK_AUD_FREQ
==11025)

166 
uöt32_t
 
	gcöcs
[] ={

258 #ñi‡(
POK_AUD_FREQ
==16000)

260 
uöt32_t
 
	gcöcs
[] ={

352 #ñi‡(
POK_AUD_FREQ
==22050)

354 
uöt32_t
 
	gcöcs
[] ={

447 #ñi‡(
POK_AUD_FREQ
==32000)

449 
uöt32_t
 
	gcöcs
[] ={

542 #ñi‡(
POK_AUD_FREQ
==44100)

544 
uöt32_t
 
	gcöcs
[] ={

642 c⁄° 
	gnŸe_0
[] = "B-0";

643 c⁄° 
	gnŸe_1
[] = "C-1";

644 c⁄° 
	gnŸe_2
[] = "C#1";

645 c⁄° 
	gnŸe_3
[] = "D-1";

646 c⁄° 
	gnŸe_4
[] = "D#1";

647 c⁄° 
	gnŸe_5
[] = "E-1";

648 c⁄° 
	gnŸe_6
[] = "F-1";

649 c⁄° 
	gnŸe_7
[] = "F#1";

650 c⁄° 
	gnŸe_8
[] = "G-1";

651 c⁄° 
	gnŸe_9
[] = "G#1";

652 c⁄° 
	gnŸe_10
[] = "A-1";

653 c⁄° 
	gnŸe_11
[] = "A#1";

654 c⁄° 
	gnŸe_12
[] = "B-1";

655 c⁄° 
	gnŸe_13
[] = "C-2";

656 c⁄° 
	gnŸe_14
[] = "C#2";

657 c⁄° 
	gnŸe_15
[] = "D-2";

658 c⁄° 
	gnŸe_16
[] = "D#2";

659 c⁄° 
	gnŸe_17
[] = "E-2";

660 c⁄° 
	gnŸe_18
[] = "F-2";

661 c⁄° 
	gnŸe_19
[] = "F#2";

662 c⁄° 
	gnŸe_20
[] = "G-2";

663 c⁄° 
	gnŸe_21
[] = "G#2";

664 c⁄° 
	gnŸe_22
[] = "A-2";

665 c⁄° 
	gnŸe_23
[] = "A#2";

666 c⁄° 
	gnŸe_24
[] = "B-2";

667 c⁄° 
	gnŸe_25
[] = "C-3";

668 c⁄° 
	gnŸe_26
[] = "C#3";

669 c⁄° 
	gnŸe_27
[] = "D-3";

670 c⁄° 
	gnŸe_28
[] = "D#3";

671 c⁄° 
	gnŸe_29
[] = "E-3";

672 c⁄° 
	gnŸe_30
[] = "F-3";

673 c⁄° 
	gnŸe_31
[] = "F#3";

674 c⁄° 
	gnŸe_32
[] = "G-3";

675 c⁄° 
	gnŸe_33
[] = "G#3";

676 c⁄° 
	gnŸe_34
[] = "A-3";

677 c⁄° 
	gnŸe_35
[] = "A#3";

678 c⁄° 
	gnŸe_36
[] = "B-3";

679 c⁄° 
	gnŸe_37
[] = "C-4";

680 c⁄° 
	gnŸe_38
[] = "C#4";

681 c⁄° 
	gnŸe_39
[] = "D-4";

682 c⁄° 
	gnŸe_40
[] = "D#4";

683 c⁄° 
	gnŸe_41
[] = "E-4";

684 c⁄° 
	gnŸe_42
[] = "F-4";

685 c⁄° 
	gnŸe_43
[] = "F#4";

686 c⁄° 
	gnŸe_44
[] = "G-4";

687 c⁄° 
	gnŸe_45
[] = "G#4";

688 c⁄° 
	gnŸe_46
[] = "A-4";

689 c⁄° 
	gnŸe_47
[] = "A#4";

690 c⁄° 
	gnŸe_48
[] = "B-4";

691 c⁄° 
	gnŸe_49
[] = "C-5";

692 c⁄° 
	gnŸe_50
[] = "C#5";

693 c⁄° 
	gnŸe_51
[] = "D-5";

694 c⁄° 
	gnŸe_52
[] = "D#5";

695 c⁄° 
	gnŸe_53
[] = "E-5";

696 c⁄° 
	gnŸe_54
[] = "F-5";

697 c⁄° 
	gnŸe_55
[] = "F#5";

698 c⁄° 
	gnŸe_56
[] = "G-5";

699 c⁄° 
	gnŸe_57
[] = "G#5";

700 c⁄° 
	gnŸe_58
[] = "A-5";

701 c⁄° 
	gnŸe_59
[] = "A#5";

702 c⁄° 
	gnŸe_60
[] = "B-5";

703 c⁄° 
	gnŸe_61
[] = "C-6";

704 c⁄° 
	gnŸe_62
[] = "C#6";

705 c⁄° 
	gnŸe_63
[] = "D-6";

706 c⁄° 
	gnŸe_64
[] = "D#6";

707 c⁄° 
	gnŸe_65
[] = "E-6";

708 c⁄° 
	gnŸe_66
[] = "F-6";

709 c⁄° 
	gnŸe_67
[] = "F#6";

710 c⁄° 
	gnŸe_68
[] = "G-6";

711 c⁄° 
	gnŸe_69
[] = "G#6";

712 c⁄° 
	gnŸe_70
[] = "A-6";

713 c⁄° 
	gnŸe_71
[] = "A#6";

714 c⁄° 
	gnŸe_72
[] = "B-6";

715 c⁄° 
	gnŸe_73
[] = "C-7";

716 c⁄° 
	gnŸe_74
[] = "C#7";

717 c⁄° 
	gnŸe_75
[] = "D-7";

718 c⁄° 
	gnŸe_76
[] = "D#7";

719 c⁄° 
	gnŸe_77
[] = "E-7";

720 c⁄° 
	gnŸe_78
[] = "F-7";

721 c⁄° 
	gnŸe_79
[] = "F#7";

722 c⁄° 
	gnŸe_80
[] = "G-7";

723 c⁄° 
	gnŸe_81
[] = "G#7";

724 c⁄° 
	gnŸe_82
[] = "A-7";

725 c⁄° 
	gnŸe_83
[] = "A#7";

726 c⁄° 
	gnŸe_84
[] = "B-7";

727 c⁄° 
	gnŸe_85
[] = "C-8";

728 c⁄° 
	gnŸe_86
[] = "C#8";

729 c⁄° 
	gnŸe_87
[] = "D-8";

730 c⁄° 
	gnŸe_88
[] = "D#8";

732 c⁄° * 
	gnŸe_èbÀ
[] = {

733 
nŸe_0
,

734 
nŸe_1
,

735 
nŸe_2
,

736 
nŸe_3
,

737 
nŸe_4
,

738 
nŸe_5
,

739 
nŸe_6
,

740 
nŸe_7
,

741 
nŸe_8
,

742 
nŸe_9
,

743 
nŸe_10
,

744 
nŸe_11
,

745 
nŸe_12
,

746 
nŸe_13
,

747 
nŸe_14
,

748 
nŸe_15
,

749 
nŸe_16
,

750 
nŸe_17
,

751 
nŸe_18
,

752 
nŸe_19
,

753 
nŸe_20
,

754 
nŸe_21
,

755 
nŸe_22
,

756 
nŸe_23
,

757 
nŸe_24
,

758 
nŸe_25
,

759 
nŸe_26
,

760 
nŸe_27
,

761 
nŸe_28
,

762 
nŸe_29
,

763 
nŸe_30
,

764 
nŸe_31
,

765 
nŸe_32
,

766 
nŸe_33
,

767 
nŸe_34
,

768 
nŸe_35
,

769 
nŸe_36
,

770 
nŸe_37
,

771 
nŸe_38
,

772 
nŸe_39
,

773 
nŸe_40
,

774 
nŸe_41
,

775 
nŸe_42
,

776 
nŸe_43
,

777 
nŸe_44
,

778 
nŸe_45
,

779 
nŸe_46
,

780 
nŸe_47
,

781 
nŸe_48
,

782 
nŸe_49
,

783 
nŸe_50
,

784 
nŸe_51
,

785 
nŸe_52
,

786 
nŸe_53
,

787 
nŸe_54
,

788 
nŸe_55
,

789 
nŸe_56
,

790 
nŸe_57
,

791 
nŸe_58
,

792 
nŸe_59
,

793 
nŸe_60
,

794 
nŸe_61
,

795 
nŸe_62
,

796 
nŸe_63
,

797 
nŸe_64
,

798 
nŸe_65
,

799 
nŸe_66
,

800 
nŸe_67
,

801 
nŸe_68
,

802 
nŸe_69
,

803 
nŸe_70
,

804 
nŸe_71
,

805 
nŸe_72
,

806 
nŸe_73
,

807 
nŸe_74
,

808 
nŸe_75
,

809 
nŸe_76
,

810 
nŸe_77
,

811 
nŸe_78
,

812 
nŸe_79
,

813 
nŸe_80
,

814 
nŸe_81
,

815 
nŸe_82
,

816 
nŸe_83
,

817 
nŸe_84
,

818 
nŸe_85
,

819 
nŸe_86
,

820 
nŸe_87
,

821 
nŸe_88
,

824 
	$gëNŸeSåög
(* 
buf„r
, 
uöt8_t
 
i
) {

825 i‡(
i
>88Ë
	`°r˝y
(
buf„r
,"@@@");

826 
	`°r˝y
(
buf„r
, 
nŸe_èbÀ
[
i
]);

827 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\Synth\Synth_mixfuncs.cpp

37 
	~"PokôtoGlobs.h
"

38 
	~"Sy¡h.h
"

42 
	gvﬁtick
=0;

43 
uöt16_t
 
	g¨±ick
=0;

44 
öt8_t
 
	gbídtick
 = 0;

47 
	$mix1
(){

49 i‡(
osc1
.
⁄
) {

50 
F¨r
[
osc1
.
wave
](&osc1);

51 #i‡
PROJ_ARDUBOY
 > 0

52 i‡(
osc1
.
duøti⁄
) {

54 
osc1
.
duøti⁄
--;

55 } 
osc1
.
⁄
 = 0;

58 #ifde‡
POK_SIM


59 
soundbyã
 = (((
osc1
.
ouçut
>>8Ë* (osc1.
ad§vﬁ
 >>8 )Ë>> 8Ë>> osc1.
echodiv
;

60 i‡(
osc1
.
ovîdrive
Ë
soundbyã
 *
OVERDRIVE
;

61 i‡(
osc1
.
kick
 ) 
soundbyã
 >>= 2;

62 
osc1
.
ouçut
 = 
soundbyã
;

65 #i‡
POK_ENABLE_SOUND
 > 0

66 
soundbyã
 = (((
osc1
.
ouçut
>>8Ë* (osc1.
ad§vﬁ
 >>8 )Ë>> 8Ë>> osc1.
echodiv
;

67 i‡(
osc1
.
ovîdrive
Ë
soundbyã
 *
OVERDRIVE
;

68 i‡(
osc1
.
kick
 ) 
soundbyã
 >>= 2;

69 
osc1
.
ouçut
 = 
soundbyã
;

73 
	}
}

75 
	$mix2
(){

77 i‡(
osc2
.
⁄
) {

78 
F¨r
[
osc2
.
wave
](&osc2);

79 #ifde‡
POK_SIM


80 
soundbyã
 = (((
osc2
.
ouçut
>>8Ë* (osc2.
ad§vﬁ
 >>8 )Ë>> 8Ë>> osc2.
echodiv
;

81 i‡(
osc2
.
ovîdrive
Ë
soundbyã
 *
OVERDRIVE
;

82 i‡(
osc2
.
kick
 ) 
soundbyã
 >>= 2;

83 
osc2
.
ouçut
 = 
soundbyã
;

86 #i‡
POK_ENABLE_SOUND
 > 0

87 
soundbyã
 = (((
osc2
.
ouçut
>>8Ë* (osc2.
ad§vﬁ
 >>8 )Ë>> 8Ë>> osc2.
echodiv
;

88 i‡(
osc2
.
ovîdrive
Ë
soundbyã
 *
OVERDRIVE
;

89 i‡(
osc2
.
kick
 ) 
soundbyã
 >>= 2;

90 
osc2
.
ouçut
 = 
soundbyã
;

94 
	}
}

96 
	$mix3
(){

98 i‡(
osc3
.
⁄
) {

99 
F¨r
[
osc3
.
wave
](&osc3);

100 #ifde‡
POK_SIM


101 
soundbyã
 = (((
osc3
.
ouçut
>>8Ë* (osc3.
ad§vﬁ
 >>8 )Ë>> 8Ë>> osc3.
echodiv
;

102 i‡(
osc3
.
ovîdrive
Ë
soundbyã
 *
OVERDRIVE
;

103 i‡(
osc3
.
kick
 ) 
soundbyã
 >>= 2;

104 
osc3
.
ouçut
 = 
soundbyã
;

107 #i‡
POK_ENABLE_SOUND
 > 0

108 
soundbyã
 = (((
osc3
.
ouçut
>>8Ë* (osc3.
ad§vﬁ
 >>8 )Ë>> 8Ë>> osc3.
echodiv
;

109 i‡(
osc3
.
ovîdrive
Ë
soundbyã
 *
OVERDRIVE
;

110 i‡(
osc3
.
kick
 ) 
soundbyã
 >>= 2;

111 
osc3
.
ouçut
 = 
soundbyã
;

115 
	}
}

117 
	$upd©eEnvñ›es
(){

119 i‡(
¨±ick
) --arptick;

121 i‡(
osc1
.
¨pmode
 && osc1.
⁄
) {

122 
osc1
.
cöc
 = 
cöcs
[osc1.
t⁄ic
+
¨±abÀ
[osc1.
¨pmode
][osc1.
¨p°ï
]];

123 
osc1
.
¨p°ï
++;

124 i‡(
osc1
.
¨p°ï
==
ARPSTEPMAX
) osc1.arpstep = 0;

125 
¨±ick
 = 
ARPTICK
 << (3-
osc1
.
¨p•ìd
);

127 i‡(
osc2
.
¨pmode
 && osc2.
⁄
) {

128 
osc2
.
cöc
 = 
cöcs
[osc2.
t⁄ic
+
¨±abÀ
[osc2.
¨pmode
][osc2.
¨p°ï
]];

129 
osc2
.
¨p°ï
++;

130 i‡(
osc2
.
¨p°ï
==
ARPSTEPMAX
) osc2.arpstep = 0;

131 
¨±ick
 = 
ARPTICK
 << (3-
osc2
.
¨p•ìd
);

133 i‡(
osc3
.
¨pmode
 && osc3.
⁄
) {

134 
osc3
.
cöc
 = 
cöcs
[osc3.
t⁄ic
+
¨±abÀ
[osc3.
¨pmode
][osc3.
¨p°ï
]];

135 
osc3
.
¨p°ï
++;

136 i‡(
osc3
.
¨p°ï
==
ARPSTEPMAX
) osc3.arpstep = 0;

137 
¨±ick
 = 
ARPTICK
 << (3-
osc3
.
¨p•ìd
);

142 i‡(
vﬁtick
) --voltick;

144 
bídtick
 = !bendtick;

145 i‡(
osc1
.
⁄
Ë
E¨r
[osc1.
ad§pha£
](&osc1);

146 i‡(
bídtick
Ë
osc1
.
pôchbíd
 +osc1.
bídøã
;

147 i‡(
osc1
.
bídøã
 > 0 && osc1.
pôchbíd
 > osc1.
maxbíd
) {

148 
osc1
.
pôchbíd
 = osc1.
maxbíd
;

149 
osc1
.
bídøã
 = 0;

151 i‡(
osc1
.
bídøã
 < 0 && osc1.
pôchbíd
 < osc1.
maxbíd
) {

152 
osc1
.
pôchbíd
 = osc1.
maxbíd
;

153 
osc1
.
bídøã
 = 0;

156 i‡(
osc2
.
⁄
Ë
E¨r
[osc2.
ad§pha£
](&osc2);

157 i‡(
bídtick
Ë
osc2
.
pôchbíd
 +osc2.
bídøã
;

158 i‡(
osc2
.
bídøã
 > 0 && osc2.
pôchbíd
 > osc2.
maxbíd
) osc2.pitchbend = osc2.maxbend;

159 i‡(
osc2
.
bídøã
 < 0 && osc2.
pôchbíd
 < osc2.
maxbíd
) osc2.pitchbend = osc2.maxbend;

161 i‡(
osc3
.
⁄
Ë
E¨r
[osc3.
ad§pha£
](&osc3);

162 i‡(
bídtick
Ë
osc3
.
pôchbíd
 +osc3.
bídøã
;

163 i‡(
osc3
.
bídøã
 > 0 && osc3.
pôchbíd
 > osc3.
maxbíd
) osc3.pitchbend = osc3.maxbend;

164 i‡(
osc3
.
bídøã
 < 0 && osc3.
pôchbíd
 < osc3.
maxbíd
) osc3.pitchbend = osc3.maxbend;

166 
vﬁtick
 = 
VOLTICK
;

168 
tick
 = 4;

169 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\Synth\Synth_osc.h

21 #i‚de‡
SYNTH_OSC_H


22 
	#SYNTH_OSC_H


	)

24 
	~"Pokôto.h
"

26 
uöt8_t
 
	tbyã
;

28 
	sOSC
 {

29 
byã
 
	m⁄
;

30 
byã
 
	mwave
;

31 
byã
 
	mlo›
;

32 
byã
 
	mecho
;

33 
byã
 
	mechodiv
;

34 
byã
 
	mad§
;

35 
byã
 
	mt⁄ic
;

38 
uöt32_t
 
	mcou¡
;

40 
uöt16_t
 
	mvﬁ
;

42 
uöt32_t
 
	mcöc
;

43 
uöt16_t
 
	mouçut
;

45 
uöt8_t
 
	mad§pha£
;

46 
uöt16_t
 
	mad§vﬁ
;

47 
uöt16_t
 
	m©èck
;

48 
uöt16_t
 
	mdeˇy
;

49 
uöt16_t
 
	msu°aö
;

50 
uöt16_t
 
	mªÀa£
;

52 
öt32_t
 
	mpôchbíd
;

53 
öt32_t
 
	mmaxbíd
;

54 
öt32_t
 
	mbídøã
;

56 
uöt8_t
 
	mvibøã
;

57 
uöt8_t
 
	m¨pmode
;

58 
uöt8_t
 
	m¨p•ìd
;

59 
uöt8_t
 
	m¨p°ï
;

60 
uöt8_t
 
	movîdrive
;

61 
uöt8_t
 
	mkick
;

63 
uöt32_t
 
	mduøti⁄
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\Synth\Synth_oscfuncs.cpp

37 
	~"Sy¡h.h
"

41 
	$£tOSC
(
OSC
* 
o
,
byã
 
⁄
=1, byã 
wave
=1, byã 
lo›
=0, byã 
echo
=0, byã 
ad§
=0,

42 
uöt8_t
 
nŸíumbî
=25, 
uöt16_t
 
vﬁume
=127,

43 
uöt16_t
 
©èck
=0, uöt16_à
deˇy
=0, uöt16_à
su°aö
=0, uöt16_à
ªÀa£
=0,

44 
öt16_t
 
maxbíd
=0, i¡16_à
bídøã
=0, 
uöt8_t
 
¨pmode
 = 0, uöt8_à
ovîdrive
=0, uöt8_à
kick
=0){

46 
o
->
⁄
 = on;

47 
o
->
ovîdrive
 = overdrive;

48 
o
->
kick
 = kick;

49 
o
->
wave
 = wave;

50 
o
->
lo›
 =Üoop;

51 
o
->
echo
 =Écho;

52 
o
->
echodiv
 = 0;

53 
o
->
ad§
 =ádsr;

54 i‡(
¨pmode
) {

55 i‡(
¨pmode
 < 4Ë{
o
->¨pmodê1; o->
¨p•ìd
 =árpmode;}

56 i‡(
¨pmode
 < 7Ë{
o
->¨pmodê2; o->
¨p•ìd
 =árpmode-3;}

57 i‡(
¨pmode
 < 10Ë{
o
->¨pmodê3; o->
¨p•ìd
 =árpmode-6; }

58 i‡(
¨pmode
 < 13Ë{
o
->¨pmodê4; o->
¨p•ìd
 =árpmode-9; }

59 i‡(
¨pmode
 < 16Ë{
o
->¨pmodê5; o->
¨p•ìd
 =árpmode-12; }

60 } 
o
->
¨pmode
 = 0;

61 
o
->
¨p°ï
 = 0;

62 
o
->
cou¡
 = 0;

63 
noi£vÆ
 = 
	`x‹shi·16
();

65 
o
->
cöc
 = 
cöcs
[
nŸíumbî
];

66 
o
->
t⁄ic
 = 
nŸíumbî
;

67 i‡(
wave
 =2Ë
o
->
cöc
 >>= 1;

68 i‡(
wave
 =4Ë
o
->
cöc
 <<= 1;

69 
o
->
vﬁ
 = 
vﬁume
 << 8;

71 i‡(
ad§
) {

72 
o
->
©èck
 =áttack;

73 
o
->
deˇy
 = decay;

74 
o
->
su°aö
 = sustain;

75 
o
->
ªÀa£
 =Ñelease;

76 
o
->
ad§pha£
 = 1;

77 i‡(!
o
->
©èck
Ëo->
ad§vﬁ
 = o->
vﬁ
;

78 
o
->
ad§vﬁ
 = 0;

80 
o
->
©èck
 = 0;

81 
o
->
deˇy
 = 0;

82 
o
->
su°aö
 = 0;

83 
o
->
ªÀa£
 = 0;

84 
o
->
ad§pha£
 = 0;

85 
o
->
ad§vﬁ
 = o->
vﬁ
;

88 
o
->
pôchbíd
 = 0;

89 i‡(
bídøã
 != 0) {

90 
o
->
bídøã
 = (
öt32_t
)bídøã*(o->
cöc
/10000);

91 
o
->
maxbíd
 = (
öt32_t
)maxbíd*(o->
cöc
/100);

93 
o
->
bídøã
 = 0;

94 
o
->
maxbíd
 = 0;

96 
	}
}

98 
	$£tOSC
(
OSC
* 
o
,
byã
 
⁄
, byã 
wave
, 
uöt16_t
 
‰q
, 
uöt8_t
 
vﬁume
, 
uöt32_t
 
duøti⁄
){

99 
o
->
⁄
 = on;

100 
o
->
ovîdrive
 = 0;

101 
o
->
kick
 = 0;

102 
o
->
wave
 = wave;

103 
o
->
lo›
 = 0;

104 
o
->
echo
 = 0;

105 
o
->
echodiv
 = 0;

106 
o
->
ad§
 = 0;

107 
o
->
©èck
 = 0;

108 
o
->
deˇy
 = 0;

109 
o
->
su°aö
 = 0;

110 
o
->
ªÀa£
 = 0;

111 
o
->
ad§pha£
 = 0;

112 
o
->
¨pmode
 = 0;

113 
o
->
cou¡
 = 0;

114 
noi£vÆ
 = 
	`x‹shi·16
();

115 
o
->
cöc
 = (()0xFFFFFFFF/()
POK_AUD_FREQ
)*
‰q
;

116 i‡(
wave
 =2Ë
o
->
cöc
 >>= 1;

117 i‡(
wave
 =4Ë
o
->
cöc
 <<= 1;

118 
o
->
vﬁ
 = 
vﬁume
 << 8;

119 
o
->
ad§vﬁ
 = o->
vﬁ
;

120 
o
->
duøti⁄
 = 0;

121 
o
->
maxbíd
 = 0;

122 
o
->
bídøã
 = 0;

123 
	}
}

127 
	$em±yOscûœt‹s
(){

128 
osc1
.
⁄
 = 
Ál£
; osc1.
wave
 = 0; osc1.
echo
 = 0; osc1.
cou¡
 = 0; osc1.
cöc
 =0;

129 
osc1
.
©èck
 = 0; osc1.
lo›
 = 0; osc1.
ad§pha£
 = 1; osc1.
ad§
 = 1; osc1.
deˇy
 = 100;

130 
osc1
.
pôchbíd
 = 0; osc1.
bídøã
 = 0; osc1.
maxbíd
 = 0; osc1.
su°aö
 = 0; osc1.
ªÀa£
 = 0;

132 
osc2
.
⁄
 = 
Ál£
; osc2.
wave
 = 0; osc2.
echo
 = 0; osc2.
cou¡
 = 0; osc2.
cöc
 =0;

133 
osc2
.
©èck
 = 0; osc2.
lo›
 = 0; osc2.
ad§pha£
 = 1; osc2.
ad§
 = 1; osc2.
deˇy
 = 100;

134 
osc2
.
pôchbíd
 = 0; osc2.
bídøã
 = 0; osc2.
maxbíd
 = 0; osc2.
su°aö
 = 0; osc2.
ªÀa£
 = 0;

136 
osc3
.
⁄
 = 
Ál£
; osc3.
wave
 = 0; osc3.
echo
 = 0; osc3.
cou¡
 = 0; osc3.
cöc
 =0;

137 
osc3
.
©èck
 = 0; osc3.
lo›
 = 0; osc3.
ad§pha£
 = 1; osc3.
ad§
 = 1; osc3.
deˇy
 = 100;

138 
osc3
.
pôchbíd
 = 0; osc3.
bídøã
 = 0; osc3.
maxbíd
 = 0; osc3.
su°aö
 = 0; osc3.
ªÀa£
 = 0;

139 
	}
}

142 
	$ã°Osc
(){

143 
	`£tOSC
(&
osc1
,1,
WTRI
,1,0,1,25,127,10,10,20,2,0,0,0,0,0);

144 
	`£tOSC
(&
osc2
,1,
WTRI
,1,0,1,29-12,63,2,1,20,2,0,0,14,0,0);

145 
	`£tOSC
(&
osc3
,1,
WSAW
,1,0,1,25,15,30,30,20,2,-1,-1000,12,0,0);

146 
	}
}

148 
	$∂ayNŸe
(
uöt8_t
 
os˙um
, uöt8_à
nŸíum
, uöt8_à
i
) {

149 
OSC
* 
o
;

150 i‡(
os˙um
 =1Ë
o
 = &
osc1
; i‡(os˙um =2Ëÿ&
osc2
; ÿ&
osc3
;

151 
	`£tOSC
(
o
,1,
∑tch
[
i
].
wave
,∑tch[i].
lo›
,∑tch[i].
echo
,∑tch[i].
ad§
,
nŸíum
,∑tch[i].
vﬁ
,

152 
∑tch
[
i
].
©èck
,∑tch[i].
deˇy
,∑tch[i].
su°aö
,∑tch[i].
ªÀa£
,

153 
∑tch
[
i
].
maxbíd
,∑tch[i].
bídøã
,∑tch[i].
¨pmode
,∑tch[i].
ovîdrive
,∑tch[i].
kick
);

154 
	}
}

156 
	$makeSam∂eIn°rumíts
() {

158 
∑tch
[0].
wave
 = 
WSQUARE
;

159 
∑tch
[0].
⁄
 = 1;

160 
∑tch
[0].
vﬁ
 = 127;

161 
∑tch
[0].
lo›
 = 0;

162 
∑tch
[0].
echo
 = 0;

164 
∑tch
[0].
ad§
 = 0;

165 
∑tch
[0].
©èck
 = 0;

166 
∑tch
[0].
deˇy
 = 0;

167 
∑tch
[0].
su°aö
 = 0;

168 
∑tch
[0].
ªÀa£
 = 0;

170 
∑tch
[0].
maxbíd
 = -1000;

171 
∑tch
[0].
bídøã
 = 100;

172 
∑tch
[0].
¨pmode
 = 3;

173 
∑tch
[0].
ovîdrive
 = 0;

174 
∑tch
[0].
kick
 = 0;

176 
∑tch
[1].
wave
 = 
WSAW
;

177 
∑tch
[1].
⁄
 = 1;

178 
∑tch
[1].
vﬁ
 = 200;

179 
∑tch
[1].
lo›
 = 0;

180 
∑tch
[1].
echo
 = 0;

182 
∑tch
[1].
ad§
 = 0;

183 
∑tch
[1].
©èck
 = 0;

184 
∑tch
[1].
deˇy
 = 0;

185 
∑tch
[1].
su°aö
 = 0;

186 
∑tch
[1].
ªÀa£
 = 0;

188 
∑tch
[1].
maxbíd
 = 0;

189 
∑tch
[1].
bídøã
 = 0;

190 
∑tch
[1].
¨pmode
 = 1;

191 
∑tch
[1].
ovîdrive
 = 0;

192 
∑tch
[1].
kick
 = 0;

194 
∑tch
[2].
wave
 = 
WTRI
;

195 
∑tch
[2].
⁄
 = 1;

196 
∑tch
[2].
vﬁ
 = 127;

197 
∑tch
[2].
lo›
 = 0;

198 
∑tch
[2].
echo
 = 0;

200 
∑tch
[2].
ad§
 = 1;

201 
∑tch
[2].
©èck
 = 10;

202 
∑tch
[2].
deˇy
 = 0;

203 
∑tch
[2].
su°aö
 = 0;

204 
∑tch
[2].
ªÀa£
 = 0;

206 
∑tch
[2].
maxbíd
 = 0;

207 
∑tch
[2].
bídøã
 = 0;

208 
∑tch
[2].
¨pmode
 = 1;

209 
∑tch
[2].
ovîdrive
 = 0;

210 
∑tch
[2].
kick
 = 0;

212 
∑tch
[3].
wave
 = 
WNOISE
;

213 
∑tch
[3].
⁄
 = 1;

214 
∑tch
[3].
vﬁ
 = 127;

215 
∑tch
[3].
lo›
 = 1;

216 
∑tch
[3].
echo
 = 1;

218 
∑tch
[3].
ad§
 = 1;

219 
∑tch
[3].
©èck
 = 0;

220 
∑tch
[3].
deˇy
 = 30;

221 
∑tch
[3].
su°aö
 = 30;

222 
∑tch
[3].
ªÀa£
 = 5;

224 
∑tch
[3].
maxbíd
 = 0;

225 
∑tch
[3].
bídøã
 = 0;

226 
∑tch
[3].
¨pmode
 = 0;

227 
∑tch
[3].
ovîdrive
 = 0;

228 
∑tch
[3].
kick
 = 0;

230 
∑tch
[4].
wave
 = 
WPNOISE
;

231 
∑tch
[4].
⁄
 = 1;

232 
∑tch
[4].
vﬁ
 = 127;

233 
∑tch
[4].
lo›
 = 0;

234 
∑tch
[4].
echo
 = 0;

236 
∑tch
[4].
ad§
 = 1;

237 
∑tch
[4].
©èck
 = 0;

238 
∑tch
[4].
deˇy
 = 30;

239 
∑tch
[4].
su°aö
 = 30;

240 
∑tch
[4].
ªÀa£
 = 5;

242 
∑tch
[4].
maxbíd
 = 0;

243 
∑tch
[4].
bídøã
 = 0;

244 
∑tch
[4].
¨pmode
 = 1;

245 
∑tch
[4].
ovîdrive
 = 0;

246 
∑tch
[4].
kick
 = 0;

247 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\Synth\Synth_song.h

21 #i‚de‡
SYNTH_SONG_H


22 
	#SYNTH_SONG_H


	)

24 
	#CHUNKSIZE
 8*3*2

26 
uöt8_t
 
chunk
[2][
CHUNKSIZE
];

	)

27 
uöt8_t
 
cc
;

29 
	sSONG
 {

30 
byã
 
	mrb_vîsi⁄
;

31 
uöt16_t
 
	ms⁄g_bpm
;

32 
byã
 
	mnum_∑tches
;

33 
byã
 
	mnum_ch™√ls
;

34 
byã
 
	mnum_∑âîns
;

35 
byã
 
	ms⁄g_íd
;

36 
öt8_t
 
	ms⁄g_lo›
;

37 
byã
 
	mblock_£quí˚
[3][10];

38 c⁄° 
uöt8_t
 * 
	mö°rumít_°ªam
[3];

39 c⁄° 
uöt8_t
 * 
	mnŸe_°ªam
[3];

42 
	sBLOCK
 {

43 
uöt8_t
 
	mnŸíumbî
[64];

44 
uöt8_t
 
	mö°rumít
[64];

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\Synth\Synth_songfuncs.cpp

37 
	~"PokôtoDisk.h
"

38 
	~"Sy¡h.h
"

39 #ifde‡
TRACKER_EXAMPLE


40 
	~"Tøckî.h
"

42 #ifde‡
POK_SIM


43 
	~"FûeIO.h
"

49 
uöt8_t
 
	gchunk
[2][
CHUNKSIZE
];

50 
uöt8_t
 
	gcc
 = 0;

52 
°ªamsFun˘i⁄
 
	g°ªamCÆlbackPå
;

55 #i‡
POK_ENABLE_SOUND
 > 0

56 #i‡
POK_ENABLE_SD
 > 0

57 
	$upd©ePœybackSD
(
uöt8_t
 
row
) {

59 
uöt8_t
 
i
=0;

61 i‡(
nŸëick
 > 
ßm∂e•îtick
 ) {

64 
i
 = 0xF;

65 i‡(
åack1⁄
Ë
i
 = 
chunk
[
cc
][
row
+1]>>4;

66 i‡(
i
!=0xF) {

67 
	`£tOSC
(&
osc1
,1,
∑tch
[
i
].
wave
,∑tch[i].
lo›
,Ö©ch[i].
echo
,Ö©ch[i].
ad§
,

68 
chunk
[
cc
][
row
],
∑tch
[
i
].
vﬁ
,

69 
∑tch
[
i
].
©èck
,Ö©ch[i].
deˇy
,Ö©ch[i].
su°aö
,∑tch[i].
ªÀa£
,

70 
∑tch
[
i
].
maxbíd
,Ö©ch[i].
bídøã
,Ö©ch[i].
¨pmode
,Ö©ch[i].
ovîdrive
,Ö©ch[i].
kick
 );

74 
i
 = 0xF;

75 i‡(
åack2⁄
Ë
i
 = 
chunk
[
cc
][
row
+3]>>4;

76 i‡(
i
!=0xF) {

77 
	`£tOSC
(&
osc2
,1,
∑tch
[
i
].
wave
,∑tch[i].
lo›
,Ö©ch[i].
echo
,Ö©ch[i].
ad§
,

78 
chunk
[
cc
][
row
+2],
∑tch
[
i
].
vﬁ
,

79 
∑tch
[
i
].
©èck
,Ö©ch[i].
deˇy
,Ö©ch[i].
su°aö
,∑tch[i].
ªÀa£
,

80 
∑tch
[
i
].
maxbíd
,Ö©ch[i].
bídøã
,Ö©ch[i].
¨pmode
,Ö©ch[i].
ovîdrive
,Ö©ch[i].
kick
 );

83 
i
 = 0xF;

84 i‡(
åack3⁄
Ë
i
 = 
chunk
[
cc
][
row
+5]>>4;

85 i‡(
i
!=0xF) {

86 
	`£tOSC
(&
osc3
,1,
∑tch
[
i
].
wave
,∑tch[i].
lo›
,Ö©ch[i].
echo
,Ö©ch[i].
ad§
,

87 
chunk
[
cc
][
row
]+4,
∑tch
[
i
].
vﬁ
,

88 
∑tch
[
i
].
©èck
,Ö©ch[i].
deˇy
,Ö©ch[i].
su°aö
,∑tch[i].
ªÀa£
,

89 
∑tch
[
i
].
maxbíd
,Ö©ch[i].
bídøã
,Ö©ch[i].
¨pmode
,Ö©ch[i].
ovîdrive
,Ö©ch[i].
kick
 );

91 
∂ayîpos
++;

92 i‡(
∂ayîpos
 =
PATTERNLENGTH
) {

94 
∂ayîpos
 = 0;

109 
nŸëick
 =0;

111 
	}
}

113 
	$upd©ePœyback
() {

115 
uöt8_t
 
i
=0;

117 i‡(
nŸëick
 > 
ßm∂e•îtick
 ) {

119 i‡(
åack1⁄
Ë
i
 = *
s⁄g
.
ö°rumít_°ªam
[0];

120 
i
 = 0;

121 i‡(
i
) {

122 
	`£tOSC
(&
osc1
,1,
∑tch
[
i
].
wave
,∑tch[i].
lo›
,Ö©ch[i].
echo
,Ö©ch[i].
ad§
,

123 *
s⁄g
.
nŸe_°ªam
[0],
∑tch
[
i
].
vﬁ
,

124 
∑tch
[
i
].
©èck
,Ö©ch[i].
deˇy
,Ö©ch[i].
su°aö
,∑tch[i].
ªÀa£
,

125 
∑tch
[
i
].
maxbíd
,Ö©ch[i].
bídøã
,Ö©ch[i].
¨pmode
,Ö©ch[i].
ovîdrive
,Ö©ch[i].
kick
 );

128 i‡(
åack2⁄
Ë
i
 = *
s⁄g
.
ö°rumít_°ªam
[1];

129 
i
 = 0;

130 i‡(
i
) {

131 
	`£tOSC
(&
osc2
,1,
∑tch
[
i
].
wave
,∑tch[i].
lo›
,Ö©ch[i].
echo
,Ö©ch[i].
ad§
,

132 *
s⁄g
.
nŸe_°ªam
[1],
∑tch
[
i
].
vﬁ
,

133 
∑tch
[
i
].
©èck
,Ö©ch[i].
deˇy
,Ö©ch[i].
su°aö
,∑tch[i].
ªÀa£
,

134 
∑tch
[
i
].
maxbíd
,Ö©ch[i].
bídøã
,Ö©ch[i].
¨pmode
,Ö©ch[i].
ovîdrive
,Ö©ch[i].
kick
 );

137 i‡(
åack3⁄
Ë
i
 = *
s⁄g
.
ö°rumít_°ªam
[2];

138 
i
 = 0;

139 i‡(
i
) {

140 
	`£tOSC
(&
osc3
,1,
∑tch
[
i
].
wave
,∑tch[i].
lo›
,Ö©ch[i].
echo
,Ö©ch[i].
ad§
,

141 *
s⁄g
.
nŸe_°ªam
[2],
∑tch
[
i
].
vﬁ
,

142 
∑tch
[
i
].
©èck
,Ö©ch[i].
deˇy
,Ö©ch[i].
su°aö
,∑tch[i].
ªÀa£
,

143 
∑tch
[
i
].
maxbíd
,Ö©ch[i].
bídøã
,Ö©ch[i].
¨pmode
,Ö©ch[i].
ovîdrive
,Ö©ch[i].
kick
 );

145 
∂ayîpos
++;

146 
s⁄g
.
ö°rumít_°ªam
[0]++;

147 
s⁄g
.
nŸe_°ªam
[0]++;

148 
s⁄g
.
ö°rumít_°ªam
[1]++;

149 
s⁄g
.
nŸe_°ªam
[1]++;

150 
s⁄g
.
ö°rumít_°ªam
[2]++;

151 
s⁄g
.
nŸe_°ªam
[2]++;

152 i‡(
∂ayîpos
 =
PATTERNLENGTH
) {

154 
£quí˚pos
++;

155 i‡(
£quí˚pos
 > 
s⁄g
.
s⁄g_íd
) {

156 i‡(
s⁄g
.
s⁄g_lo›
 == -1) {

157 
	`em±yOscûœt‹s
();

158 
∂ayög
 = 
Ál£
;

159 
£quí˚pos
--;

161 
£quí˚pos
 = 
s⁄g
.
s⁄g_lo›
;

164 
∂ayîpos
 = 0;

165 #ifde‡
TRACKER_EXAMPLE


166 
åackî
.
	`öôSåóms
();

168 
	`öôSåóms
(
£quí˚pos
);

171 
èbÀRe‰esh
=
åue
;

173 
nŸëick
 =0;

175 
	}
}

177 
	$em±yP©ches
(){

178 
i
=0; i<16; i++) {

179 
∑tch
[
i
].
vﬁ
 = 127;

180 
∑tch
[
i
].
⁄
 = 
åue
;Ö©ch[i].
wave
 = 1;Ö©ch[i].
echo
 = 0;Ö©ch[i].
cou¡
 = 0;Ö©ch[i].
cöc
 =0;

181 
∑tch
[
i
].
©èck
 = 0;Ö©ch[i].
lo›
 = 0;Ö©ch[i].
ad§pha£
 = 0;Ö©ch[i].
ad§
 = 0;Ö©ch[i].
deˇy
 = 20;

182 
∑tch
[
i
].
pôchbíd
 = 0;Ö©ch[i].
bídøã
 = 0;Ö©ch[i].
maxbíd
 = 0;Ö©ch[i].
su°aö
 = 0;Ö©ch[i].
ªÀa£
 = 0,Ö©ch[i].
ovîdrive
 = 0,Ö©ch[i].
kick
 = 0;

184 
	}
}

186 
	$em±yBlocks
(){

187 
i
=0; i<
MAXBLOCKS
; i++) {

188 
j
 = 0; j < 
PATTERNLENGTH
; j++) {

189 
block
[
i
].
ö°rumít
[
j
] = 0;

190 
block
[
i
].
nŸíumbî
[
j
] = 255;

193 
	}
}

195 
	$öôSåóms
(
uöt8_t
 
£qpos
){

196 
uöt8_t
 
blocknum
;

199 
blocknum
=
s⁄g
.
block_£quí˚
[0][
£qpos
];

201 
s⁄g
.
ö°rumít_°ªam
[0]=&
block
[
blocknum
].
ö°rumít
[0];

202 
s⁄g
.
nŸe_°ªam
[0]=&
block
[
blocknum
].
nŸíumbî
[0];

204 
blocknum
=
s⁄g
.
block_£quí˚
[1][
£qpos
];

205 
s⁄g
.
ö°rumít_°ªam
[1]=&
block
[
blocknum
].
ö°rumít
[0];

206 
s⁄g
.
nŸe_°ªam
[1]=&
block
[
blocknum
].
nŸíumbî
[0];

208 
blocknum
=
s⁄g
.
block_£quí˚
[2][
£qpos
];

209 
s⁄g
.
ö°rumít_°ªam
[2]=&
block
[
blocknum
].
ö°rumít
[0];

210 
s⁄g
.
nŸe_°ªam
[2]=&
block
[
blocknum
].
nŸíumbî
[0];

211 
	}
}

213 
	$em±yS⁄g
(){

214 
s⁄g
.
num_ch™√ls
 = 3;

215 
s⁄g
.
num_∑tches
 = 1;

216 
s⁄g
.
s⁄g_bpm
 = 120;

217 
s⁄g
.
num_∑âîns
 = 1;

218 
s⁄g
.
s⁄g_íd
 = 0;

219 
s⁄g
.
s⁄g_lo›
 = 0;

220 
s⁄g
.
rb_vîsi⁄
 = 
RBTRACKER_VERSION
;

221 
uöt8_t
 
i
 = 0; i<10; i++) {

222 
s⁄g
.
block_£quí˚
[0][
i
]=i*3;

223 
s⁄g
.
block_£quí˚
[1][
i
]=i*3+1;

224 
s⁄g
.
block_£quí˚
[2][
i
]=i*3+2;

226 
s⁄g
.
ö°rumít_°ªam
[0] = &
block
[0].
ö°rumít
[0];

227 
s⁄g
.
nŸe_°ªam
[0] = &
block
[0].
nŸíumbî
[0];

228 
s⁄g
.
ö°rumít_°ªam
[1] = &
block
[1].
ö°rumít
[0];

229 
s⁄g
.
nŸe_°ªam
[1] = &
block
[1].
nŸíumbî
[0];

230 
s⁄g
.
ö°rumít_°ªam
[2] = &
block
[2].
ö°rumít
[0];

231 
s⁄g
.
nŸe_°ªam
[2] = &
block
[2].
nŸíumbî
[0];

232 
£quí˚pos
 = 0;

233 
	}
}

235 
	$›íS⁄gFromSD
(* 
buf„r
) {

236 i‡(!
	`isThisFûeO≥n
(
buf„r
)) {

237 
	`fûeClo£
();

238 
	`fûeO≥n
(
buf„r
,
FILE_MODE_OVERWRITE
 | 
FILE_MODE_BINARY
);

240  
	`isThisFûeO≥n
(
buf„r
);

241 
	}
}

243 
	$wrôeChunkToSD
(
uöt8_t
* 
buf„r
) {

244 i‡(
	`fûeOK
()) {

245 
	`fûeWrôeByãs
(
buf„r
, 
CHUNKSIZE
);

247 
	}
}

249 
	$ªadChunkFromSD
(
uöt8_t
* 
buf„r
) {

250 i‡(
	`fûeOK
()) {

251 
	`fûeRódByãs
(
buf„r
, 
CHUNKSIZE
);

253 
	}
}

255 
	$ªgi°îSåómsCÆlback
(
°ªamsFun˘i⁄
 
±r
) {

256 
°ªamCÆlbackPå
 = 
±r
;

257 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\Synth\Synth_wavefuncs.cpp

37 
	~"Sy¡h.h
"

39 
uöt16_t
 
	gnoi£vÆ
, 
	gnoi£vÆ2
;

41 
waveoff
(
OSC
* 
o
); 
sqwave
(OSC* o); 
ßwwave
(OSC* o); 
åiwave
(OSC* o); 
noi£
(OSC* o); 
t⁄íoi£
(OSC* o); 
ßm∂e
(OSC* o);

42 
noADSR
(
OSC
* 
o
); 
©èckFunc
(OSC* o); 
deˇyFunc
(OSC* o); 
ªÀa£Func
(OSC* o);

43 
mix1
(); 
mix2
(); 
mix3
(); 
upd©eEnvñ›es
();

45 
waveFun˘i⁄
 
	gF¨r
 [] = {
waveoff
, 
sqwave
, 
ßwwave
, 
åiwave
, 
noi£
, 
t⁄íoi£
};

46 
ívFun˘i⁄
 
	gE¨r
 [] = {
noADSR
, 
©èckFunc
, 
deˇyFunc
, 
ªÀa£Func
};

47 
mixFun˘i⁄
 
	gM¨r
 [] = {
upd©eEnvñ›es
,
mix3
,
mix2
,
mix1
};

48 
mixFun˘i⁄
 
	gHWM¨r
 [] = {
upd©eEnvñ›es
,
mix3
,
mix2
,
mix1
};

52 
	$waveoff
(
OSC
* 
o
){

53 
o
->
ouçut
 = 0;

54 
	}
}

56 
	$sqwave
(
OSC
* 
o
){

58 i‡(
o
->
cou¡
 & 0x80000000Ëo->
ouçut
 = 0;

60 
o
->
ouçut
 = 0xFFFF;

61 
	}
}

63 
	$ßwwave
(
OSC
* 
o
){

65 
o
->
ouçut
 = (o->
cou¡
 >>15);

66 
	}
}

68 
	$åiwave
(
OSC
* 
o
){

70 i‡(
o
->
cou¡
 & 0x80000000Ëo->
ouçut
 = (~o->count) >>15;

71 
o
->
ouçut
 = o->
cou¡
 >>15;

72 
	}
}

74 
	$noi£
(
OSC
* 
o
){

79 i‡(
o
->
cou¡
 > 0x80000000) {

80 
o
->
ouçut
 = 
noi£vÆ2
;

82 
noi£vÆ
 = 
	`x‹shi·16
();

86 
o
->
ouçut
 = 
noi£vÆ
;

88 
noi£vÆ2
 = 
	`x‹shi·16
();

91 
	}
}

93 
	$t⁄íoi£
(
OSC
* 
o
){

95 i‡(
o
->
cou¡
 & 0x80000000Ëo->
ouçut
 = (
	`x‹shi·16
()>>6);

96 
o
->
ouçut
 = (
	`x‹shi·16
()>>1) + 0x4000;

97 
	}
}

99 
	$ßm∂e
(
OSC
* 
o
) {

108 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBDescriptor.h

20 
	#DEVICE_DESCRIPTOR
 (1)

	)

21 
	#CONFIGURATION_DESCRIPTOR
 (2)

	)

22 
	#STRING_DESCRIPTOR
 (3)

	)

23 
	#INTERFACE_DESCRIPTOR
 (4)

	)

24 
	#ENDPOINT_DESCRIPTOR
 (5)

	)

25 
	#QUALIFIER_DESCRIPTOR
 (6)

	)

28 
	#DEVICE_DESCRIPTOR_LENGTH
 (0x12)

	)

29 
	#CONFIGURATION_DESCRIPTOR_LENGTH
 (0x09)

	)

30 
	#INTERFACE_DESCRIPTOR_LENGTH
 (0x09)

	)

31 
	#ENDPOINT_DESCRIPTOR_LENGTH
 (0x07)

	)

35 
	#STRING_OFFSET_LANGID
 (0)

	)

36 
	#STRING_OFFSET_IMANUFACTURER
 (1)

	)

37 
	#STRING_OFFSET_IPRODUCT
 (2)

	)

38 
	#STRING_OFFSET_ISERIAL
 (3)

	)

39 
	#STRING_OFFSET_ICONFIGURATION
 (4)

	)

40 
	#STRING_OFFSET_IINTERFACE
 (5)

	)

43 
	#USB_VERSION_2_0
 (0x0200)

	)

46 
	#LSB
(
n
Ë(“)&0xff)

	)

47 
	#MSB
(
n
Ë((“)&0xff00)>>8)

	)

50 
	#PHY_TO_DESC
(
ídpoöt
Ë((”ndpoöt)>>1Ë| ((”ndpoötË& 1Ë? 0x80:0))

	)

54 
	#C_RESERVED
 (1U<<7)

	)

55 
	#C_SELF_POWERED
 (1U<<6)

	)

56 
	#C_REMOTE_WAKEUP
 (1U<<5)

	)

59 
	#C_POWER
(
mA
Ë((mA)/2)

	)

62 
	#E_CONTROL
 (0x00)

	)

63 
	#E_ISOCHRONOUS
 (0x01)

	)

64 
	#E_BULK
 (0x02)

	)

65 
	#E_INTERRUPT
 (0x03)

	)

68 
	#E_NO_SYNCHRONIZATION
 (0x00)

	)

69 
	#E_ASYNCHRONOUS
 (0x04)

	)

70 
	#E_ADAPTIVE
 (0x08)

	)

71 
	#E_SYNCHRONOUS
 (0x0C)

	)

72 
	#E_DATA
 (0x00)

	)

73 
	#E_FEEDBACK
 (0x10)

	)

74 
	#E_IMPLICIT_FEEDBACK
 (0x20)

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBDevice.cpp

19 
	~"°döt.h
"

21 
	~"USBEndpoöts.h
"

22 
	~"USBDevi˚.h
"

23 
	~"USBDes¸ùt‹.h
"

28 
	#DEVICE_STATUS_SELF_POWERED
 (1U<<0)

	)

29 
	#DEVICE_STATUS_REMOTE_WAKEUP
 (1U<<1)

	)

32 
	#ENDPOINT_STATUS_HALT
 (1U<<0)

	)

35 
	#DEVICE_REMOTE_WAKEUP
 (1)

	)

36 
	#ENDPOINT_HALT
 (0)

	)

39 
	#WINDEX_TO_PHYSICAL
(
ídpoöt
) (((endpoint & 0x0f) << 1) + \

40 ((
ídpoöt
 & 0x80Ë? 1 : 0))

	)

43 
boﬁ
 
	gUSBDevi˚
::
	$ªque°GëDes¸ùt‹
()

45 
boﬁ
 
suc˚ss
 = 
Ál£
;

46 #ifde‡
DEBUG


47 
	`¥ötf
("gë des¸:Åy≥: %d\r\n", 
	`DESCRIPTOR_TYPE
(
å™s„r
.
£tup
.
wVÆue
));

49 
	`DESCRIPTOR_TYPE
(
å™s„r
.
£tup
.
wVÆue
))

51 
DEVICE_DESCRIPTOR
:

52 i‡(
	`devi˚Desc
(Ë!
NULL
)

54 i‡((
	`devi˚Desc
()[0] =
DEVICE_DESCRIPTOR_LENGTH
) \

55 && (
	`devi˚Desc
()[1] =
DEVICE_DESCRIPTOR
))

57 #ifde‡
DEBUG


58 
	`¥ötf
("device descr\r\n");

60 
å™s„r
.
ªmaöög
 = 
DEVICE_DESCRIPTOR_LENGTH
;

61 
å™s„r
.
±r
 = 
	`devi˚Desc
();

62 
å™s„r
.
dúe˘i⁄
 = 
DEVICE_TO_HOST
;

63 
suc˚ss
 = 
åue
;

67 
CONFIGURATION_DESCRIPTOR
:

68 i‡(
	`c⁄figuøti⁄Desc
(Ë!
NULL
)

70 i‡((
	`c⁄figuøti⁄Desc
()[0] =
CONFIGURATION_DESCRIPTOR_LENGTH
) \

71 && (
	`c⁄figuøti⁄Desc
()[1] =
CONFIGURATION_DESCRIPTOR
))

73 #ifde‡
DEBUG


74 
	`¥ötf
("conf descrÑequest\r\n");

77 
å™s„r
.
ªmaöög
 = 
	`c⁄figuøti⁄Desc
()[2] \

78 | (
	`c⁄figuøti⁄Desc
()[3] << 8);

80 
å™s„r
.
±r
 = 
	`c⁄figuøti⁄Desc
();

81 
å™s„r
.
dúe˘i⁄
 = 
DEVICE_TO_HOST
;

82 
suc˚ss
 = 
åue
;

86 
STRING_DESCRIPTOR
:

87 #ifde‡
DEBUG


88 
	`¥ötf
("str descriptor\r\n");

90 
	`DESCRIPTOR_INDEX
(
å™s„r
.
£tup
.
wVÆue
))

92 
STRING_OFFSET_LANGID
:

93 #ifde‡
DEBUG


94 
	`¥ötf
("1\r\n");

96 
å™s„r
.
ªmaöög
 = 
	`°rögL™gidDesc
()[0];

97 
å™s„r
.
±r
 = 
	`°rögL™gidDesc
();

98 
å™s„r
.
dúe˘i⁄
 = 
DEVICE_TO_HOST
;

99 
suc˚ss
 = 
åue
;

101 
STRING_OFFSET_IMANUFACTURER
:

102 #ifde‡
DEBUG


103 
	`¥ötf
("2\r\n");

105 
å™s„r
.
ªmaöög
 = 
	`°rögIm™uÁ˘uªrDesc
()[0];

106 
å™s„r
.
±r
 = 
	`°rögIm™uÁ˘uªrDesc
();

107 
å™s„r
.
dúe˘i⁄
 = 
DEVICE_TO_HOST
;

108 
suc˚ss
 = 
åue
;

110 
STRING_OFFSET_IPRODUCT
:

111 #ifde‡
DEBUG


112 
	`¥ötf
("3\r\n");

114 
å™s„r
.
ªmaöög
 = 
	`°rögI¥odu˘Desc
()[0];

115 
å™s„r
.
±r
 = 
	`°rögI¥odu˘Desc
();

116 
å™s„r
.
dúe˘i⁄
 = 
DEVICE_TO_HOST
;

117 
suc˚ss
 = 
åue
;

119 
STRING_OFFSET_ISERIAL
:

120 #ifde‡
DEBUG


121 
	`¥ötf
("4\r\n");

123 
å™s„r
.
ªmaöög
 = 
	`°rögI£rülDesc
()[0];

124 
å™s„r
.
±r
 = 
	`°rögI£rülDesc
();

125 
å™s„r
.
dúe˘i⁄
 = 
DEVICE_TO_HOST
;

126 
suc˚ss
 = 
åue
;

128 
STRING_OFFSET_ICONFIGURATION
:

129 #ifde‡
DEBUG


130 
	`¥ötf
("5\r\n");

132 
å™s„r
.
ªmaöög
 = 
	`°rögIC⁄figuøti⁄Desc
()[0];

133 
å™s„r
.
±r
 = 
	`°rögIC⁄figuøti⁄Desc
();

134 
å™s„r
.
dúe˘i⁄
 = 
DEVICE_TO_HOST
;

135 
suc˚ss
 = 
åue
;

137 
STRING_OFFSET_IINTERFACE
:

138 #ifde‡
DEBUG


139 
	`¥ötf
("6\r\n");

141 
å™s„r
.
ªmaöög
 = 
	`°rögIöãrÁ˚Desc
()[0];

142 
å™s„r
.
±r
 = 
	`°rögIöãrÁ˚Desc
();

143 
å™s„r
.
dúe˘i⁄
 = 
DEVICE_TO_HOST
;

144 
suc˚ss
 = 
åue
;

148 
INTERFACE_DESCRIPTOR
:

149 #ifde‡
DEBUG


150 
	`¥ötf
("interface descr\r\n");

152 
ENDPOINT_DESCRIPTOR
:

153 #ifde‡
DEBUG


154 
	`¥ötf
("endpoint descr\r\n");

159 #ifde‡
DEBUG


160 
	`¥ötf
("ERROR\r\n");

165  
suc˚ss
;

166 
	}
}

168 
	gUSBDevi˚
::
	$decodeSëupPackë
(
uöt8_t
 *
d©a
, 
SETUP_PACKET
 *
∑ckë
)

171 
∑ckë
->
bmReque°Ty≥
.
d©aTøns„rDúe˘i⁄
 = (
d©a
[0] & 0x80) >> 7;

172 
∑ckë
->
bmReque°Ty≥
.
Ty≥
 = (
d©a
[0] & 0x60) >> 5;

173 
∑ckë
->
bmReque°Ty≥
.
Recùõ¡
 = 
d©a
[0] & 0x1f;

174 
∑ckë
->
bReque°
 = 
d©a
[1];

175 
∑ckë
->
wVÆue
 = (
d©a
[2] | (
uöt16_t
)data[3] << 8);

176 
∑ckë
->
wIndex
 = (
d©a
[4] | (
uöt16_t
)data[5] << 8);

177 
∑ckë
->
wLígth
 = (
d©a
[6] | (
uöt16_t
)data[7] << 8);

178 
	}
}

181 
boﬁ
 
	gUSBDevi˚
::
	$c⁄åﬁOut
()

184 
uöt8_t
 
buf„r
[
MAX_PACKET_SIZE_EP0
];

185 
uöt32_t
 
∑ckëSize
;

188 i‡(
å™s„r
.
dúe˘i⁄
 !
HOST_TO_DEVICE
)

190 #i‡
	`deföed
(
TARGET_KL25Z
Ë| deföed(
TARGET_KL43Z
Ë| deföed(
TARGET_KL46Z
Ë| deföed(
TARGET_K20D5M
Ë| deföed(
TARGET_K64F
Ë| deföed(
TARGET_K22F
Ë| deföed(
TARGET_TEENSY3_1
)

199 
uöt8_t
 
buf
[1] = { 0 };

200 
	`EP0wrôe
(
buf
, 0);

203 
	`c⁄åﬁIn
();

206  
åue
;

209  
Ál£
;

214 
∑ckëSize
 = 
	`EP0gëRódResu…
(
buf„r
);

217 i‡(
∑ckëSize
 > 
å™s„r
.
ªmaöög
)

220  
Ál£
;

224 
å™s„r
.
±r
 +
∑ckëSize
;

225 
å™s„r
.
ªmaöög
 -
∑ckëSize
;

228 i‡(
å™s„r
.
ªmaöög
 == 0)

231 i‡(
å™s„r
.
nŸify
)

234 
	`USBCÆlback_ªque°Com∂ëed
(
buf„r
, 
∑ckëSize
);

235 
å™s„r
.
nŸify
 = 
Ál£
;

238 
	`EP0wrôe
(
NULL
, 0);

242 
	`EP0ªad
();

245  
åue
;

246 
	}
}

248 
boﬁ
 
	gUSBDevi˚
::
	$c⁄åﬁIn
()

251 
uöt32_t
 
∑ckëSize
;

255 i‡(
å™s„r
.
ªmaöög
 == 0)

257 i‡(
å™s„r
.
zÕ
)

260 
	`EP0wrôe
(
NULL
, 0);

261 
å™s„r
.
zÕ
 = 
Ál£
;

265 i‡(
å™s„r
.
nŸify
)

268 
	`USBCÆlback_ªque°Com∂ëed
(
NULL
, 0);

269 
å™s„r
.
nŸify
 = 
Ál£
;

272 
	`EP0ªad
();

273 
	`EP0ªadSège
();

276  
åue
;

280 i‡(
å™s„r
.
dúe˘i⁄
 !
DEVICE_TO_HOST
)

282  
Ál£
;

285 
∑ckëSize
 = 
å™s„r
.
ªmaöög
;

287 i‡(
∑ckëSize
 > 
MAX_PACKET_SIZE_EP0
)

289 
∑ckëSize
 = 
MAX_PACKET_SIZE_EP0
;

293 
	`EP0wrôe
(
å™s„r
.
±r
, 
∑ckëSize
);

296 
å™s„r
.
±r
 +
∑ckëSize
;

297 
å™s„r
.
ªmaöög
 -
∑ckëSize
;

299  
åue
;

300 
	}
}

302 
boﬁ
 
	gUSBDevi˚
::
	$ªque°SëAddªss
()

305 
	`£tAddªss
(
å™s„r
.
£tup
.
wVÆue
);

307 i‡(
å™s„r
.
£tup
.
wVÆue
 == 0)

309 
devi˚
.
°©e
 = 
DEFAULT
;

313 
devi˚
.
°©e
 = 
ADDRESS
;

316  
åue
;

317 
	}
}

319 
boﬁ
 
	gUSBDevi˚
::
	$ªque°SëC⁄figuøti⁄
()

322 
devi˚
.
c⁄figuøti⁄
 = 
å™s„r
.
£tup
.
wVÆue
;

324 i‡(
devi˚
.
c⁄figuøti⁄
 == 0)

327 
	`unc⁄figuªDevi˚
();

328 
devi˚
.
°©e
 = 
ADDRESS
;

332 i‡(
	`USBCÆlback_£tC⁄figuøti⁄
(
devi˚
.
c⁄figuøti⁄
))

335 
	`c⁄figuªDevi˚
();

336 
devi˚
.
°©e
 = 
CONFIGURED
;

340  
Ál£
;

344  
åue
;

345 
	}
}

347 
boﬁ
 
	gUSBDevi˚
::
	$ªque°GëC⁄figuøti⁄
()

350 
å™s„r
.
±r
 = &
devi˚
.
c⁄figuøti⁄
;

351 
å™s„r
.
ªmaöög
 = (
devi˚
.
c⁄figuøti⁄
);

352 
å™s„r
.
dúe˘i⁄
 = 
DEVICE_TO_HOST
;

353  
åue
;

354 
	}
}

356 
boﬁ
 
	gUSBDevi˚
::
	$ªque°GëI¡îÁ˚
()

360 i‡(
devi˚
.
°©e
 !
CONFIGURED
)

362  
Ál£
;

366 
å™s„r
.
£tup
.
wIndex
 = 
cuºítI¡îÁ˚
;

367 
å™s„r
.
±r
 = &
cuºítA…î«ã
;

368 
å™s„r
.
ªmaöög
 = (
cuºítA…î«ã
);

369 
å™s„r
.
dúe˘i⁄
 = 
DEVICE_TO_HOST
;

370  
åue
;

371 
	}
}

373 
boﬁ
 
	gUSBDevi˚
::
	$ªque°SëI¡îÁ˚
()

375 
boﬁ
 
suc˚ss
 = 
Ál£
;

376 if(
	`USBCÆlback_£tI¡îÁ˚
(
å™s„r
.
£tup
.
wIndex
,Åøns„r.£tup.
wVÆue
))

378 
suc˚ss
 = 
åue
;

379 
cuºítI¡îÁ˚
 = 
å™s„r
.
£tup
.
wIndex
;

380 
cuºítA…î«ã
 = 
å™s„r
.
£tup
.
wVÆue
;

382  
suc˚ss
;

383 
	}
}

385 
boﬁ
 
	gUSBDevi˚
::
	$ªque°SëFótuª
()

387 
boﬁ
 
suc˚ss
 = 
Ál£
;

389 i‡(
devi˚
.
°©e
 !
CONFIGURED
)

392 i‡(
å™s„r
.
£tup
.
wIndex
 != 0)

394  
Ál£
;

398 
å™s„r
.
£tup
.
bmReque°Ty≥
.
Recùõ¡
)

400 
DEVICE_RECIPIENT
:

403 
ENDPOINT_RECIPIENT
:

404 i‡(
å™s„r
.
£tup
.
wVÆue
 =
ENDPOINT_HALT
)

407 
	`°ÆlEndpoöt
(

408 
	`WINDEX_TO_PHYSICAL
(
å™s„r
.
£tup
.
wIndex
));

409 
suc˚ss
 = 
åue
;

416  
suc˚ss
;

417 
	}
}

419 
boﬁ
 
	gUSBDevi˚
::
	$ªque°CÀ¨Fótuª
()

421 
boﬁ
 
suc˚ss
 = 
Ál£
;

423 i‡(
devi˚
.
°©e
 !
CONFIGURED
)

426 i‡(
å™s„r
.
£tup
.
wIndex
 != 0)

428  
Ál£
;

432 
å™s„r
.
£tup
.
bmReque°Ty≥
.
Recùõ¡
)

434 
DEVICE_RECIPIENT
:

437 
ENDPOINT_RECIPIENT
:

439 i‡(
å™s„r
.
£tup
.
wVÆue
 =
ENDPOINT_HALT
)

441 
	`un°ÆlEndpoöt
–
	`WINDEX_TO_PHYSICAL
(
å™s„r
.
£tup
.
wIndex
));

442 
suc˚ss
 = 
åue
;

449  
suc˚ss
;

450 
	}
}

452 
boﬁ
 
	gUSBDevi˚
::
	$ªque°GëSètus
()

454 
uöt16_t
 
°©us
;

455 
boﬁ
 
suc˚ss
 = 
Ál£
;

457 i‡(
devi˚
.
°©e
 !
CONFIGURED
)

460 i‡(
å™s„r
.
£tup
.
wIndex
 != 0)

462  
Ál£
;

466 
å™s„r
.
£tup
.
bmReque°Ty≥
.
Recùõ¡
)

468 
DEVICE_RECIPIENT
:

470 
°©us
 = 
DEVICE_STATUS_SELF_POWERED
;

471 
suc˚ss
 = 
åue
;

473 
INTERFACE_RECIPIENT
:

474 
°©us
 = 0;

475 
suc˚ss
 = 
åue
;

477 
ENDPOINT_RECIPIENT
:

479 i‡(
	`gëEndpoötSèŒSèã
(

480 
	`WINDEX_TO_PHYSICAL
(
å™s„r
.
£tup
.
wIndex
)))

482 
°©us
 = 
ENDPOINT_STATUS_HALT
;

486 
°©us
 = 0;

488 
suc˚ss
 = 
åue
;

494 i‡(
suc˚ss
)

497 
å™s„r
.
±r
 = (
uöt8_t
 *)&
°©us
;

498 
å™s„r
.
ªmaöög
 = (
°©us
);

499 
å™s„r
.
dúe˘i⁄
 = 
DEVICE_TO_HOST
;

502  
suc˚ss
;

503 
	}
}

505 
boﬁ
 
	gUSBDevi˚
::
	$ªque°Sëup
()

507 
boﬁ
 
suc˚ss
 = 
Ál£
;

510 i‡((
å™s„r
.
£tup
.
bmReque°Ty≥
.
Ty≥
 =
STANDARD_TYPE
))

512 
å™s„r
.
£tup
.
bReque°
)

514 
GET_STATUS
:

515 
suc˚ss
 = 
	`ªque°GëSètus
();

517 
CLEAR_FEATURE
:

518 
suc˚ss
 = 
	`ªque°CÀ¨Fótuª
();

520 
SET_FEATURE
:

521 
suc˚ss
 = 
	`ªque°SëFótuª
();

523 
SET_ADDRESS
:

524 
suc˚ss
 = 
	`ªque°SëAddªss
();

526 
GET_DESCRIPTOR
:

527 
suc˚ss
 = 
	`ªque°GëDes¸ùt‹
();

529 
SET_DESCRIPTOR
:

531 
suc˚ss
 = 
Ál£
;

533 
GET_CONFIGURATION
:

534 
suc˚ss
 = 
	`ªque°GëC⁄figuøti⁄
();

536 
SET_CONFIGURATION
:

537 
suc˚ss
 = 
	`ªque°SëC⁄figuøti⁄
();

539 
GET_INTERFACE
:

540 
suc˚ss
 = 
	`ªque°GëI¡îÁ˚
();

542 
SET_INTERFACE
:

543 
suc˚ss
 = 
	`ªque°SëI¡îÁ˚
();

550  
suc˚ss
;

551 
	}
}

553 
boﬁ
 
	gUSBDevi˚
::
	$c⁄åﬁSëup
()

555 
boﬁ
 
suc˚ss
 = 
Ál£
;

558 
uöt8_t
 
buf„r
[
MAX_PACKET_SIZE_EP0
];

560 
	`EP0£tup
(
buf„r
);

563 
	`decodeSëupPackë
(
buf„r
, &
å™s„r
.
£tup
);

564 
å™s„r
.
±r
 = 
NULL
;

565 
å™s„r
.
ªmaöög
 = 0;

566 
å™s„r
.
dúe˘i⁄
 = 0;

567 
å™s„r
.
zÕ
 = 
Ál£
;

568 
å™s„r
.
nŸify
 = 
Ál£
;

570 #ifde‡
DEBUG


571 
	`¥ötf
("d©aTøns„rDúe˘i⁄: %d\r\nTy≥: %d\r\nRecùõ¡: %d\r\nbReque°: %d\r\nwVÆue: %d\r\nwIndex: %d\r\nwLígth: %d\r\n",
å™s„r
.
£tup
.
bmReque°Ty≥
.
d©aTøns„rDúe˘i⁄
,

572 
å™s„r
.
£tup
.
bmReque°Ty≥
.
Ty≥
,

573 
å™s„r
.
£tup
.
bmReque°Ty≥
.
Recùõ¡
,

574 
å™s„r
.
£tup
.
bReque°
,

575 
å™s„r
.
£tup
.
wVÆue
,

576 
å™s„r
.
£tup
.
wIndex
,

577 
å™s„r
.
£tup
.
wLígth
);

581 
suc˚ss
 = 
	`USBCÆlback_ªque°
();

583 i‡(!
suc˚ss
)

586 i‡(!
	`ªque°Sëup
())

588 #ifde‡
DEBUG


589 
	`¥ötf
("fail!!!!\r\n");

591  
Ál£
;

596 i‡(
å™s„r
.
£tup
.
wLígth
>0)

598 i‡(
å™s„r
.
£tup
.
bmReque°Ty≥
.
d©aTøns„rDúe˘i⁄
 \

599 =
DEVICE_TO_HOST
)

602 i‡(
å™s„r
.
dúe˘i⁄
 !
DEVICE_TO_HOST
)

604  
Ál£
;

609 i‡(
å™s„r
.
ªmaöög
 >Åøns„r.
£tup
.
wLígth
)

611 
å™s„r
.
ªmaöög
 =Åøns„r.
£tup
.
wLígth
;

618 i‡(
å™s„r
.
dúe˘i⁄
 !
HOST_TO_DEVICE
)

620  
Ál£
;

624 i‡(
å™s„r
.
ªmaöög
 !å™s„r.
£tup
.
wLígth
)

626  
Ál£
;

633 i‡(
å™s„r
.
ªmaöög
 != 0)

635  
Ál£
;

640 i‡(
å™s„r
.
£tup
.
wLígth
>0)

642 i‡(
å™s„r
.
£tup
.
bmReque°Ty≥
.
d©aTøns„rDúe˘i⁄
 \

643 =
DEVICE_TO_HOST
)

647 i‡(
å™s„r
.
£tup
.
wLígth
 >Åøns„r.
ªmaöög
)

650 i‡((
å™s„r
.
ªmaöög
 % 
MAX_PACKET_SIZE_EP0
) == 0)

653 
å™s„r
.
zÕ
 = 
åue
;

658 
	`c⁄åﬁIn
();

663 
	`EP0ªad
();

669 
	`EP0wrôe
(
NULL
, 0);

672  
åue
;

673 
	}
}

675 
	gUSBDevi˚
::
	$busRe£t
()

677 
devi˚
.
°©e
 = 
DEFAULT
;

678 
devi˚
.
c⁄figuøti⁄
 = 0;

679 
devi˚
.
su•íded
 = 
Ál£
;

682 
	`USBCÆlback_busRe£t
();

683 
	}
}

685 
	gUSBDevi˚
::
	$EP0£tupCÆlback
()

688 i‡(!
	`c⁄åﬁSëup
())

691 
	`EP0°Æl
();

695 
	}
}

697 
	gUSBDevi˚
::
	$EP0out
()

700 i‡(!
	`c⁄åﬁOut
())

703 
	`EP0°Æl
();

705 
	}
}

707 
	gUSBDevi˚
::
	$EP0ö
()

709 #ifde‡
DEBUG


710 
	`¥ötf
("EP0IN\r\n");

713 i‡(!
	`c⁄åﬁIn
())

716 
	`EP0°Æl
();

718 
	}
}

720 
boﬁ
 
	gUSBDevi˚
::
	$c⁄figuªd
()

723  (
devi˚
.
°©e
 =
CONFIGURED
);

724 
	}
}

726 
	gUSBDevi˚
::
	$c⁄√˘
(
boﬁ
 
blockög
)

729 
USBHAL
::
	`c⁄√˘
();

731 i‡(
blockög
) {

733 !
	`c⁄figuªd
());

735 
	}
}

737 
	gUSBDevi˚
::
	$disc⁄√˘
()

740 
USBHAL
::
	`disc⁄√˘
();

743 
devi˚
.
°©e
 = 
POWERED
;

744 
devi˚
.
c⁄figuøti⁄
 = 0;

745 
devi˚
.
su•íded
 = 
Ál£
;

746 
	}
}

748 
CONTROL_TRANSFER
 * 
	gUSBDevi˚
::
	$gëTøns„rPå
()

750  &
å™s„r
;

751 
	}
}

753 
boﬁ
 
	gUSBDevi˚
::
	$addEndpoöt
(
uöt8_t
 
ídpoöt
, 
uöt32_t
 
maxPackë
)

755  
	`ªÆi£Endpoöt
(
ídpoöt
, 
maxPackë
, 0);

756 
	}
}

758 
boﬁ
 
	gUSBDevi˚
::
	$addR©eFìdbackEndpoöt
(
uöt8_t
 
ídpoöt
, 
uöt32_t
 
maxPackë
)

761  
	`ªÆi£Endpoöt
(
ídpoöt
, 
maxPackë
, 
RATE_FEEDBACK_MODE
);

762 
	}
}

764 
uöt8_t
 * 
	gUSBDevi˚
::
	$födDes¸ùt‹
(
uöt8_t
 
des¸ùt‹Ty≥
)

768 
uöt16_t
 
wTŸÆLígth
;

769 
uöt8_t
 *
±r
;

771 i‡(
	`c⁄figuøti⁄Desc
(Ë=
NULL
)

773  
NULL
;

777 i‡((
	`c⁄figuøti⁄Desc
()[0] !
CONFIGURATION_DESCRIPTOR_LENGTH
) \

778 || (
	`c⁄figuøti⁄Desc
()[1] !
CONFIGURATION_DESCRIPTOR
))

780  
NULL
;

783 
wTŸÆLígth
 = 
	`c⁄figuøti⁄Desc
()[2] | (configurationDesc()[3] << 8);

786 i‡(
wTŸÆLígth
 <(
CONFIGURATION_DESCRIPTOR_LENGTH
+2))

789  
NULL
;

793 
±r
 = &(
	`c⁄figuøti⁄Desc
()[
CONFIGURATION_DESCRIPTOR_LENGTH
]);

796 i‡(
±r
[1] =
des¸ùt‹Ty≥
)

799  
±r
;

803 
±r
 +=Ötr[0];

804 } 
±r
 < (
	`c⁄figuøti⁄Desc
(Ë+ 
wTŸÆLígth
));

807  
NULL
;

808 
	}
}

811 
	gUSBDevi˚
::
	$c⁄√˘SèãCh™ged
(
c⁄√˘ed
)

813 
	}
}

815 
USBDevi˚
::
	$su•ídSèãCh™ged
(
su•íded
)

817 
	}
}

820 
USBDevi˚
::
	$USBDevi˚
(
uöt16_t
 
víd‹_id
, uöt16_à
¥odu˘_id
, uöt16_à
¥odu˘_ªÀa£
){

821 
VENDOR_ID
 = 
víd‹_id
;

822 
PRODUCT_ID
 = 
¥odu˘_id
;

823 
PRODUCT_RELEASE
 = 
¥odu˘_ªÀa£
;

826 
devi˚
.
°©e
 = 
POWERED
;

827 
devi˚
.
c⁄figuøti⁄
 = 0;

828 
devi˚
.
su•íded
 = 
Ál£
;

829 
	}
};

832 
boﬁ
 
	gUSBDevi˚
::
	$ªadSèπ
(
uöt8_t
 
ídpoöt
, 
uöt32_t
 
maxSize
)

834  
	`ídpoötRód
(
ídpoöt
, 
maxSize
Ë=
EP_PENDING
;

835 
	}
}

838 
boﬁ
 
	gUSBDevi˚
::
	$wrôe
(
uöt8_t
 
ídpoöt
, uöt8_à* 
buf„r
, 
uöt32_t
 
size
, uöt32_à
maxSize
)

840 
EP_STATUS
 
ªsu…
;

842 i‡(
size
 > 
maxSize
)

844  
Ál£
;

848 if(!
	`c⁄figuªd
()) {

849  
Ál£
;

853 
ªsu…
 = 
	`ídpoötWrôe
(
ídpoöt
, 
buf„r
, 
size
);

855 i‡(
ªsu…
 !
EP_PENDING
)

857  
Ál£
;

862 
ªsu…
 = 
	`ídpoötWrôeResu…
(
ídpoöt
);

863 } (
ªsu…
 =
EP_PENDING
Ë&& 
	`c⁄figuªd
());

865  (
ªsu…
 =
EP_COMPLETED
);

866 
	}
}

869 
boﬁ
 
	gUSBDevi˚
::
	$wrôeNB
(
uöt8_t
 
ídpoöt
, uöt8_à* 
buf„r
, 
uöt32_t
 
size
, uöt32_à
maxSize
)

871 
EP_STATUS
 
ªsu…
;

873 i‡(
size
 > 
maxSize
)

875  
Ál£
;

878 if(!
	`c⁄figuªd
()) {

879  
Ál£
;

883 
ªsu…
 = 
	`ídpoötWrôe
(
ídpoöt
, 
buf„r
, 
size
);

885 i‡(
ªsu…
 !
EP_PENDING
)

887  
Ál£
;

890 
ªsu…
 = 
	`ídpoötWrôeResu…
(
ídpoöt
);

892  (
ªsu…
 =
EP_COMPLETED
);

893 
	}
}

897 
boﬁ
 
	gUSBDevi˚
::
	$ªadEP
(
uöt8_t
 
ídpoöt
, uöt8_à* 
buf„r
, 
uöt32_t
 * 
size
, uöt32_à
maxSize
)

899 
EP_STATUS
 
ªsu…
;

901 if(!
	`c⁄figuªd
()) {

902  
Ál£
;

907 
ªsu…
 = 
	`ídpoötRódResu…
(
ídpoöt
, 
buf„r
, 
size
);

908 } (
ªsu…
 =
EP_PENDING
Ë&& 
	`c⁄figuªd
());

910  (
ªsu…
 =
EP_COMPLETED
);

911 
	}
}

914 
boﬁ
 
	gUSBDevi˚
::
	$ªadEP_NB
(
uöt8_t
 
ídpoöt
, uöt8_à* 
buf„r
, 
uöt32_t
 * 
size
, uöt32_à
maxSize
)

916 
EP_STATUS
 
ªsu…
;

918 if(!
	`c⁄figuªd
()) {

919  
Ál£
;

922 
ªsu…
 = 
	`ídpoötRódResu…
(
ídpoöt
, 
buf„r
, 
size
);

924  (
ªsu…
 =
EP_COMPLETED
);

925 
	}
}

929 
uöt8_t
 * 
	gUSBDevi˚
::
	$devi˚Desc
() {

930 
uöt8_t
 
devi˚Des¸ùt‹
[] = {

931 
DEVICE_DESCRIPTOR_LENGTH
,

932 
DEVICE_DESCRIPTOR
,

933 
	`LSB
(
USB_VERSION_2_0
),

934 
	`MSB
(
USB_VERSION_2_0
),

938 
MAX_PACKET_SIZE_EP0
,

939 (
uöt8_t
)(
	`LSB
(
VENDOR_ID
)),

940 (
uöt8_t
)(
	`MSB
(
VENDOR_ID
)),

941 (
uöt8_t
)(
	`LSB
(
PRODUCT_ID
)),

942 (
uöt8_t
)(
	`MSB
(
PRODUCT_ID
)),

943 (
uöt8_t
)(
	`LSB
(
PRODUCT_RELEASE
)),

944 (
uöt8_t
)(
	`MSB
(
PRODUCT_RELEASE
)),

945 
STRING_OFFSET_IMANUFACTURER
,

946 
STRING_OFFSET_IPRODUCT
,

947 
STRING_OFFSET_ISERIAL
,

950  
devi˚Des¸ùt‹
;

951 
	}
}

953 
uöt8_t
 * 
	gUSBDevi˚
::
	$°rögL™gidDesc
() {

954 
uöt8_t
 
°rögL™gidDes¸ùt‹
[] = {

956 
STRING_DESCRIPTOR
,

959  
°rögL™gidDes¸ùt‹
;

960 
	}
}

962 
uöt8_t
 * 
	gUSBDevi˚
::
	$°rögIm™uÁ˘uªrDesc
() {

963 
uöt8_t
 
°rögIm™uÁ˘uªrDes¸ùt‹
[] = {

965 
STRING_DESCRIPTOR
,

968  
°rögIm™uÁ˘uªrDes¸ùt‹
;

969 
	}
}

971 
uöt8_t
 * 
	gUSBDevi˚
::
	$°rögI£rülDesc
() {

972 
uöt8_t
 
°rögI£rülDes¸ùt‹
[] = {

974 
STRING_DESCRIPTOR
,

977  
°rögI£rülDes¸ùt‹
;

978 
	}
}

980 
uöt8_t
 * 
	gUSBDevi˚
::
	$°rögIC⁄figuøti⁄Desc
() {

981 
uöt8_t
 
°rögIc⁄figuøti⁄Des¸ùt‹
[] = {

983 
STRING_DESCRIPTOR
,

986  
°rögIc⁄figuøti⁄Des¸ùt‹
;

987 
	}
}

989 
uöt8_t
 * 
	gUSBDevi˚
::
	$°rögIöãrÁ˚Desc
() {

990 
uöt8_t
 
°rögIöãrÁ˚Des¸ùt‹
[] = {

992 
STRING_DESCRIPTOR
,

995  
°rögIöãrÁ˚Des¸ùt‹
;

996 
	}
}

998 
uöt8_t
 * 
	gUSBDevi˚
::
	$°rögI¥odu˘Desc
() {

999 
uöt8_t
 
°rögI¥odu˘Des¸ùt‹
[] = {

1001 
STRING_DESCRIPTOR
,

1004  
°rögI¥odu˘Des¸ùt‹
;

1005 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBDevice.h

19 #i‚de‡
USBDEVICE_H


20 
	#USBDEVICE_H


	)

22 
	~"mbed.h
"

23 
	~"USBDevi˚_Ty≥s.h
"

24 
	~"USBHAL.h
"

26 ˛as†
	cUSBDevi˚
: 
public
 
USBHAL


28 
public
:

29 
USBDevi˚
(
uöt16_t
 
víd‹_id
, uöt16_à
¥odu˘_id
, uöt16_à
¥odu˘_ªÀa£
);

36 
boﬁ
 
c⁄figuªd
();

43 
c⁄√˘
(
boﬁ
 
blockög
 = 
åue
);

48 
disc⁄√˘
();

57 
boﬁ
 
addEndpoöt
(
uöt8_t
 
ídpoöt
, 
uöt32_t
 
maxPackë
);

67 
boﬁ
 
ªadSèπ
(
uöt8_t
 
ídpoöt
, 
uöt32_t
 
maxSize
);

81 
boﬁ
 
ªadEP
(
uöt8_t
 
ídpoöt
, uöt8_à* 
buf„r
, 
uöt32_t
 * 
size
, uöt32_à
maxSize
);

94 
boﬁ
 
ªadEP_NB
(
uöt8_t
 
ídpoöt
, uöt8_à* 
buf„r
, 
uöt32_t
 * 
size
, uöt32_à
maxSize
);

106 
boﬁ
 
wrôe
(
uöt8_t
 
ídpoöt
, uöt8_à* 
buf„r
, 
uöt32_t
 
size
, uöt32_à
maxSize
);

119 
boﬁ
 
wrôeNB
(
uöt8_t
 
ídpoöt
, uöt8_à* 
buf„r
, 
uöt32_t
 
size
, uöt32_à
maxSize
);

127 
vútuÆ
 
	$USBCÆlback_busRe£t
() {};

136 
vútuÆ
 
boﬁ
 
	$USBCÆlback_ªque°
(Ë{  
Ál£
; 
	}
};

148 
vútuÆ
 
	$USBCÆlback_ªque°Com∂ëed
(
uöt8_t
 * 
buf
, 
uöt32_t
 
Àngth
Ë{
	}
};

156 
vútuÆ
 
boﬁ
 
	$USBCÆlback_£tC⁄figuøti⁄
(
uöt8_t
 
c⁄figuøti⁄
Ë{  
Ál£
; 
	}
};

165 
vútuÆ
 
boﬁ
 
	$USBCÆlback_£tI¡îÁ˚
(
uöt16_t
 
öãrÁ˚
, 
uöt8_t
 
Æã∫©e
Ë{  
Ál£
; 
	}
};

172 
vútuÆ
 
uöt8_t
 * 
devi˚Desc
();

179 
vútuÆ
 
uöt8_t
 * 
	$c⁄figuøti⁄Desc
(){ 
NULL
;
	}
};

186 
vútuÆ
 
uöt8_t
 * 
°rögL™gidDesc
();

193 
vútuÆ
 
uöt8_t
 * 
°rögIm™uÁ˘uªrDesc
();

200 
vútuÆ
 
uöt8_t
 * 
°rögI¥odu˘Desc
();

207 
vútuÆ
 
uöt8_t
 * 
°rögI£rülDesc
();

214 
vútuÆ
 
uöt8_t
 * 
°rögIC⁄figuøti⁄Desc
();

221 
vútuÆ
 
uöt8_t
 * 
°rögIöãrÁ˚Desc
();

228 
vútuÆ
 
uöt16_t
 
	$ªp‹tDescLígth
(Ë{  0; 
	}
};

232 
	g¥Ÿe˘ed
:

233 
vútuÆ
 
busRe£t
();

234 
vútuÆ
 
EP0£tupCÆlback
();

235 
vútuÆ
 
EP0out
();

236 
vútuÆ
 
EP0ö
();

237 
vútuÆ
 
c⁄√˘SèãCh™ged
(
c⁄√˘ed
);

238 
vútuÆ
 
su•ídSèãCh™ged
(
su•íded
);

239 
uöt8_t
 * 
födDes¸ùt‹
(uöt8_à
des¸ùt‹Ty≥
);

240 
CONTROL_TRANSFER
 * 
gëTøns„rPå
();

242 
uöt16_t
 
	gVENDOR_ID
;

243 
uöt16_t
 
	gPRODUCT_ID
;

244 
uöt16_t
 
	gPRODUCT_RELEASE
;

246 
	g¥iv©e
:

247 
boﬁ
 
addR©eFìdbackEndpoöt
(
uöt8_t
 
ídpoöt
, 
uöt32_t
 
maxPackë
);

248 
boﬁ
 
ªque°GëDes¸ùt‹
();

249 
boﬁ
 
c⁄åﬁOut
();

250 
boﬁ
 
c⁄åﬁIn
();

251 
boﬁ
 
ªque°SëAddªss
();

252 
boﬁ
 
ªque°SëC⁄figuøti⁄
();

253 
boﬁ
 
ªque°SëFótuª
();

254 
boﬁ
 
ªque°CÀ¨Fótuª
();

255 
boﬁ
 
ªque°GëSètus
();

256 
boﬁ
 
ªque°Sëup
();

257 
boﬁ
 
c⁄åﬁSëup
();

258 
decodeSëupPackë
(
uöt8_t
 *
d©a
, 
SETUP_PACKET
 *
∑ckë
);

259 
boﬁ
 
ªque°GëC⁄figuøti⁄
();

260 
boﬁ
 
ªque°GëI¡îÁ˚
();

261 
boﬁ
 
ªque°SëI¡îÁ˚
();

263 
CONTROL_TRANSFER
 
	gå™s„r
;

264 
USB_DEVICE
 
	gdevi˚
;

266 
uöt16_t
 
	gcuºítI¡îÁ˚
;

267 
uöt8_t
 
	gcuºítA…î«ã
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBDevice_Types.h

19 #i‚de‡
USBDEVICE_TYPES_H


20 
	#USBDEVICE_TYPES_H


	)

23 
	#GET_STATUS
 (0)

	)

24 
	#CLEAR_FEATURE
 (1)

	)

25 
	#SET_FEATURE
 (3)

	)

26 
	#SET_ADDRESS
 (5)

	)

27 
	#GET_DESCRIPTOR
 (6)

	)

28 
	#SET_DESCRIPTOR
 (7)

	)

29 
	#GET_CONFIGURATION
 (8)

	)

30 
	#SET_CONFIGURATION
 (9)

	)

31 
	#GET_INTERFACE
 (10)

	)

32 
	#SET_INTERFACE
 (11)

	)

35 
	#HOST_TO_DEVICE
 (0)

	)

36 
	#DEVICE_TO_HOST
 (1)

	)

39 
	#STANDARD_TYPE
 (0)

	)

40 
	#CLASS_TYPE
 (1)

	)

41 
	#VENDOR_TYPE
 (2)

	)

42 
	#RESERVED_TYPE
 (3)

	)

45 
	#DEVICE_RECIPIENT
 (0)

	)

46 
	#INTERFACE_RECIPIENT
 (1)

	)

47 
	#ENDPOINT_RECIPIENT
 (2)

	)

48 
	#OTHER_RECIPIENT
 (3)

	)

51 
	#DESCRIPTOR_TYPE
(
wVÆue
Ë(wVÆuê>> 8)

	)

52 
	#DESCRIPTOR_INDEX
(
wVÆue
Ë(wVÆuê& 0xff)

	)

56 
uöt8_t
 
	md©aTøns„rDúe˘i⁄
;

57 
uöt8_t
 
	mTy≥
;

58 
uöt8_t
 
	mRecùõ¡
;

59 } 
	mbmReque°Ty≥
;

60 
uöt8_t
 
	mbReque°
;

61 
uöt16_t
 
	mwVÆue
;

62 
uöt16_t
 
	mwIndex
;

63 
uöt16_t
 
	mwLígth
;

64 } 
	tSETUP_PACKET
;

67 
SETUP_PACKET
 
	m£tup
;

68 
uöt8_t
 *
	m±r
;

69 
uöt32_t
 
	mªmaöög
;

70 
uöt8_t
 
	mdúe˘i⁄
;

71 
boﬁ
 
	mzÕ
;

72 
boﬁ
 
	mnŸify
;

73 } 
	tCONTROL_TRANSFER
;

75 íum {
	mATTACHED
, 
	mPOWERED
, 
	mDEFAULT
, 
	mADDRESS
, 
	mCONFIGURED
} 
	tDEVICE_STATE
;

78 vﬁ©ûê
DEVICE_STATE
 
	m°©e
;

79 
uöt8_t
 
	mc⁄figuøti⁄
;

80 
boﬁ
 
	msu•íded
;

81 } 
	tUSB_DEVICE
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBEndpoints.h

19 #i‚de‡
USBENDPOINTS_H


20 
	#USBENDPOINTS_H


	)

23 
	#SETUP_PACKET_SIZE
 (8)

	)

26 
	#DEFAULT_OPTIONS
 (0)

	)

27 
	#SINGLE_BUFFERED
 (1U << 0)

	)

28 
	#ISOCHRONOUS
 (1U << 1)

	)

29 
	#RATE_FEEDBACK_MODE
 (1U << 2Ë

	)

33 
	mEP_COMPLETED
,

34 
	mEP_PENDING
,

35 
	mEP_INVALID
,

36 
	mEP_STALLED
,

37 } 
	tEP_STATUS
;

40 #i‡
deföed
(
TARGET_LPC1768
Ë|| deföed(
TARGET_LPC2368
Ë|| deföed(
TARGET_LPC4088
Ë|| deföed(
TARGET_LPC2460
Ë|| deföed(
TARGET_LPC4088_DM
)

41 
	~"USBEndpoöts_LPC17_LPC23.h
"

42 #ñi‡
deföed
(
TARGET_LPC11UXX
Ë|| deföed(
TARGET_LPC1347
Ë|| deföed (
TARGET_LPC11U6X
Ë|| deföed (
TARGET_LPC1549
)

43 
	~"USBEndpoöts_LPC11U.h
"

44 #ñi‡
deföed
(
TARGET_KL25Z
Ë| deföed(
TARGET_KL26Z
Ë| deföed(
TARGET_KL27Z
Ë| deföed(
TARGET_KL43Z
Ë| deföed(
TARGET_KL46Z
Ë| deföed(
TARGET_K20D50M
Ë| deföed(
TARGET_K64F
Ë| deföed(
TARGET_K22F
Ë| deföed(
TARGET_TEENSY3_1
)

45 
	~"USBEndpoöts_KL25Z.h
"

46 #ñi‡
deföed
 (
TARGET_STM32F4
)

47 
	~"USBEndpoöts_STM32F4.h
"

48 #ñi‡
deföed
 (
TARGET_RZ_A1H
Ë|| deföed (
TARGET_VK_RZ_A1H
)

49 
	~"USBEndpoöts_RZ_A1H.h
"

50 #ñi‡
deföed
(
TARGET_Maxim
)

51 
	~"USBEndpoöts_Maxim.h
"

52 #ñi‡
deföed
(
TARGET_EFM32GG_STK3700
Ë|| deföed(
TARGET_EFM32LG_STK3600
Ë|| deföed(
TARGET_EFM32WG_STK3800
Ë|| deföed(
TARGET_EFM32HG_STK3400
)

53 
	~"USBEndpoöts_EFM32.h
"

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBEndpoints_EFM32.h

2 #i‚de‡
TARGET_EFM32HG_STK3400


3 
	#NUMBER_OF_LOGICAL_ENDPOINTS
 (6)

	)

5 
	#NUMBER_OF_LOGICAL_ENDPOINTS
 (3)

	)

8 
	#NUMBER_OF_PHYSICAL_ENDPOINTS
 (
NUMBER_OF_LOGICAL_ENDPOINTS
 * 2)

	)

9 
	#NUMBER_OF_ENDPOINTS
 (
NUMBER_OF_PHYSICAL_ENDPOINTS
 + 2Ë

	)

11 
	#EP0OUT
 (0)

	)

12 
	#EP0IN
 (1)

	)

13 
	#EP1OUT
 (2)

	)

14 
	#EP1IN
 (3)

	)

15 
	#EP2OUT
 (4)

	)

16 
	#EP2IN
 (5)

	)

17 
	#EP3OUT
 (6)

	)

18 
	#EP3IN
 (7)

	)

19 #i‚de‡
TARGET_EFM32HG_STK3400


20 
	#EP4OUT
 (8)

	)

21 
	#EP4IN
 (9)

	)

22 
	#EP5OUT
 (10)

	)

23 
	#EP5IN
 (11)

	)

24 
	#EP6OUT
 (12)

	)

25 
	#EP6IN
 (13)

	)

28 
	#USB_EP_TO_INDEX
(
ï
Ë”p)

	)

29 
	#USB_EP_TO_ADDR
(
ï
Ë((”p)>>1Ë| ((”pË& 1 ) ? 0x80 : 0x00))

	)

30 
	#USB_ADDR_TO_EP
(
ï
Ë((”p)<<1Ë| ((”pË& 0x80Ë? 0x01 : 0x00))

	)

34 
	#MAX_PACKET_SIZE_EP0
 64

	)

35 
	#MAX_PACKET_SIZE_EP1
 64

	)

36 
	#MAX_PACKET_SIZE_EP2
 64

	)

37 
	#MAX_PACKET_SIZE_EP3
 64

	)

38 #i‚de‡
TARGET_EFM32HG_STK3400


39 
	#MAX_PACKET_SIZE_EP4
 64

	)

40 
	#MAX_PACKET_SIZE_EP5
 64

	)

41 
	#MAX_PACKET_SIZE_EP6
 64

	)

48 
	#EPBULK_OUT
 
EP2OUT


	)

49 
	#EPBULK_IN
 
EP2IN


	)

50 
	#EPBULK_OUT_ˇŒback
 
EP2_OUT_ˇŒback


	)

51 
	#EPBULK_IN_ˇŒback
 
EP2_IN_ˇŒback


	)

53 
	#EPINT_OUT
 
EP1OUT


	)

54 
	#EPINT_IN
 
EP1IN


	)

55 
	#EPINT_OUT_ˇŒback
 
EP1_OUT_ˇŒback


	)

56 
	#EPINT_IN_ˇŒback
 
EP1_IN_ˇŒback


	)

58 
	#EPISO_OUT
 
EP3OUT


	)

59 
	#EPISO_IN
 
EP3IN


	)

60 
	#EPISO_OUT_ˇŒback
 
EP3_OUT_ˇŒback


	)

61 
	#EPISO_IN_ˇŒback
 
EP3_IN_ˇŒback


	)

63 
	#MAX_PACKET_SIZE_EPBULK
 64

	)

64 
	#MAX_PACKET_SIZE_EPINT
 64

	)

65 
	#MAX_PACKET_SIZE_EPISO
 1023

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBEndpoints_KL25Z.h

19 
	#NUMBER_OF_LOGICAL_ENDPOINTS
 (16)

	)

20 
	#NUMBER_OF_PHYSICAL_ENDPOINTS
 (
NUMBER_OF_LOGICAL_ENDPOINTS
 * 2)

	)

26 
	#EP0OUT
 (0)

	)

27 
	#EP0IN
 (1)

	)

28 
	#EP1OUT
 (2)

	)

29 
	#EP1IN
 (3)

	)

30 
	#EP2OUT
 (4)

	)

31 
	#EP2IN
 (5)

	)

32 
	#EP3OUT
 (6)

	)

33 
	#EP3IN
 (7)

	)

34 
	#EP4OUT
 (8)

	)

35 
	#EP4IN
 (9)

	)

36 
	#EP5OUT
 (10)

	)

37 
	#EP5IN
 (11)

	)

38 
	#EP6OUT
 (12)

	)

39 
	#EP6IN
 (13)

	)

40 
	#EP7OUT
 (14)

	)

41 
	#EP7IN
 (15)

	)

42 
	#EP8OUT
 (16)

	)

43 
	#EP8IN
 (17)

	)

44 
	#EP9OUT
 (18)

	)

45 
	#EP9IN
 (19)

	)

46 
	#EP10OUT
 (20)

	)

47 
	#EP10IN
 (21)

	)

48 
	#EP11OUT
 (22)

	)

49 
	#EP11IN
 (23)

	)

50 
	#EP12OUT
 (24)

	)

51 
	#EP12IN
 (25)

	)

52 
	#EP13OUT
 (26)

	)

53 
	#EP13IN
 (27)

	)

54 
	#EP14OUT
 (28)

	)

55 
	#EP14IN
 (29)

	)

56 
	#EP15OUT
 (30)

	)

57 
	#EP15IN
 (31)

	)

61 
	#MAX_PACKET_SIZE_EP0
 (64)

	)

62 
	#MAX_PACKET_SIZE_EP1
 (64)

	)

63 
	#MAX_PACKET_SIZE_EP2
 (64)

	)

64 
	#MAX_PACKET_SIZE_EP3
 (1023)

	)

65 
	#MAX_PACKET_SIZE_EP4
 (64)

	)

66 
	#MAX_PACKET_SIZE_EP5
 (64)

	)

67 
	#MAX_PACKET_SIZE_EP6
 (64)

	)

68 
	#MAX_PACKET_SIZE_EP7
 (64)

	)

69 
	#MAX_PACKET_SIZE_EP8
 (64)

	)

70 
	#MAX_PACKET_SIZE_EP9
 (64)

	)

71 
	#MAX_PACKET_SIZE_EP10
 (64)

	)

72 
	#MAX_PACKET_SIZE_EP11
 (64)

	)

73 
	#MAX_PACKET_SIZE_EP12
 (64)

	)

74 
	#MAX_PACKET_SIZE_EP13
 (64)

	)

75 
	#MAX_PACKET_SIZE_EP14
 (64)

	)

76 
	#MAX_PACKET_SIZE_EP15
 (64)

	)

82 
	#EPBULK_OUT
 (
EP2OUT
)

	)

83 
	#EPBULK_IN
 (
EP2IN
)

	)

84 
	#EPBULK_OUT_ˇŒback
 
EP2_OUT_ˇŒback


	)

85 
	#EPBULK_IN_ˇŒback
 
EP2_IN_ˇŒback


	)

87 
	#EPINT_OUT
 (
EP1OUT
)

	)

88 
	#EPINT_IN
 (
EP1IN
)

	)

89 
	#EPINT_OUT_ˇŒback
 
EP1_OUT_ˇŒback


	)

90 
	#EPINT_IN_ˇŒback
 
EP1_IN_ˇŒback


	)

92 
	#EPISO_OUT
 (
EP3OUT
)

	)

93 
	#EPISO_IN
 (
EP3IN
)

	)

94 
	#EPISO_OUT_ˇŒback
 
EP3_OUT_ˇŒback


	)

95 
	#EPISO_IN_ˇŒback
 
EP3_IN_ˇŒback


	)

97 
	#MAX_PACKET_SIZE_EPBULK
 (
MAX_PACKET_SIZE_EP2
)

	)

98 
	#MAX_PACKET_SIZE_EPINT
 (
MAX_PACKET_SIZE_EP1
)

	)

99 
	#MAX_PACKET_SIZE_EPISO
 (
MAX_PACKET_SIZE_EP3
)

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBEndpoints_LPC11U.h

19 
	#NUMBER_OF_LOGICAL_ENDPOINTS
 (5)

	)

20 
	#NUMBER_OF_PHYSICAL_ENDPOINTS
 (
NUMBER_OF_LOGICAL_ENDPOINTS
 * 2)

	)

26 
	#EP0OUT
 (0Ë

	)

27 
	#EP0IN
 (1Ë

	)

28 
	#EP1OUT
 (2Ë

	)

29 
	#EP1IN
 (3Ë

	)

30 
	#EP2OUT
 (4Ë

	)

31 
	#EP2IN
 (5Ë

	)

32 
	#EP3OUT
 (6Ë

	)

33 
	#EP3IN
 (7Ë

	)

34 
	#EP4OUT
 (8Ë

	)

35 
	#EP4IN
 (9Ë

	)

39 
	#MAX_PACKET_SIZE_EP0
 (64)

	)

40 
	#MAX_PACKET_SIZE_EP1
 (64Ë

	)

41 
	#MAX_PACKET_SIZE_EP2
 (64Ë

	)

42 
	#MAX_PACKET_SIZE_EP3
 (64Ë

	)

43 
	#MAX_PACKET_SIZE_EP4
 (64Ë

	)

45 
	#MAX_PACKET_SIZE_EP1_ISO
 (1023Ë

	)

46 
	#MAX_PACKET_SIZE_EP2_ISO
 (1023Ë

	)

47 
	#MAX_PACKET_SIZE_EP3_ISO
 (1023Ë

	)

48 
	#MAX_PACKET_SIZE_EP4_ISO
 (1023Ë

	)

54 
	#EPBULK_OUT
 (
EP2OUT
)

	)

55 
	#EPBULK_IN
 (
EP2IN
)

	)

56 
	#EPBULK_OUT_ˇŒback
 
EP2_OUT_ˇŒback


	)

57 
	#EPBULK_IN_ˇŒback
 
EP2_IN_ˇŒback


	)

59 
	#EPINT_OUT
 (
EP1OUT
)

	)

60 
	#EPINT_IN
 (
EP1IN
)

	)

61 
	#EPINT_OUT_ˇŒback
 
EP1_OUT_ˇŒback


	)

62 
	#EPINT_IN_ˇŒback
 
EP1_IN_ˇŒback


	)

64 
	#EPISO_OUT
 (
EP3OUT
)

	)

65 
	#EPISO_IN
 (
EP3IN
)

	)

66 
	#EPISO_OUT_ˇŒback
 
EP3_OUT_ˇŒback


	)

67 
	#EPISO_IN_ˇŒback
 
EP3_IN_ˇŒback


	)

69 
	#MAX_PACKET_SIZE_EPBULK
 (
MAX_PACKET_SIZE_EP2
)

	)

70 
	#MAX_PACKET_SIZE_EPINT
 (
MAX_PACKET_SIZE_EP1
)

	)

71 
	#MAX_PACKET_SIZE_EPISO
 (
MAX_PACKET_SIZE_EP3_ISO
)

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBEndpoints_LPC17_LPC23.h

19 
	#NUMBER_OF_LOGICAL_ENDPOINTS
 (16)

	)

20 
	#NUMBER_OF_PHYSICAL_ENDPOINTS
 (
NUMBER_OF_LOGICAL_ENDPOINTS
 * 2)

	)

26 
	#EP0OUT
 (0Ë

	)

27 
	#EP0IN
 (1Ë

	)

28 
	#EP1OUT
 (2Ë

	)

29 
	#EP1IN
 (3Ë

	)

30 
	#EP2OUT
 (4Ë

	)

31 
	#EP2IN
 (5Ë

	)

32 
	#EP3OUT
 (6Ë

	)

33 
	#EP3IN
 (7Ë

	)

34 
	#EP4OUT
 (8Ë

	)

35 
	#EP4IN
 (9Ë

	)

36 
	#EP5OUT
 (10Ë

	)

37 
	#EP5IN
 (11Ë

	)

38 
	#EP6OUT
 (12Ë

	)

39 
	#EP6IN
 (13Ë

	)

40 
	#EP7OUT
 (14Ë

	)

41 
	#EP7IN
 (15Ë

	)

42 
	#EP8OUT
 (16Ë

	)

43 
	#EP8IN
 (17Ë

	)

44 
	#EP9OUT
 (18Ë

	)

45 
	#EP9IN
 (19Ë

	)

46 
	#EP10OUT
 (20Ë

	)

47 
	#EP10IN
 (21Ë

	)

48 
	#EP11OUT
 (22Ë

	)

49 
	#EP11IN
 (23Ë

	)

50 
	#EP12OUT
 (24Ë

	)

51 
	#EP12IN
 (25Ë

	)

52 
	#EP13OUT
 (26Ë

	)

53 
	#EP13IN
 (27Ë

	)

54 
	#EP14OUT
 (28Ë

	)

55 
	#EP14IN
 (29Ë

	)

56 
	#EP15OUT
 (30Ë

	)

57 
	#EP15IN
 (31Ë

	)

61 
	#MAX_PACKET_SIZE_EP0
 (64)

	)

62 
	#MAX_PACKET_SIZE_EP1
 (64)

	)

63 
	#MAX_PACKET_SIZE_EP2
 (64)

	)

64 
	#MAX_PACKET_SIZE_EP3
 (1023)

	)

65 
	#MAX_PACKET_SIZE_EP4
 (64)

	)

66 
	#MAX_PACKET_SIZE_EP5
 (64)

	)

67 
	#MAX_PACKET_SIZE_EP6
 (1023)

	)

68 
	#MAX_PACKET_SIZE_EP7
 (64)

	)

69 
	#MAX_PACKET_SIZE_EP8
 (64)

	)

70 
	#MAX_PACKET_SIZE_EP9
 (1023)

	)

71 
	#MAX_PACKET_SIZE_EP10
 (64)

	)

72 
	#MAX_PACKET_SIZE_EP11
 (64)

	)

73 
	#MAX_PACKET_SIZE_EP12
 (1023)

	)

74 
	#MAX_PACKET_SIZE_EP13
 (64)

	)

75 
	#MAX_PACKET_SIZE_EP14
 (64)

	)

76 
	#MAX_PACKET_SIZE_EP15
 (64)

	)

82 
	#EPBULK_OUT
 (
EP2OUT
)

	)

83 
	#EPBULK_IN
 (
EP2IN
)

	)

84 
	#EPBULK_OUT_ˇŒback
 
EP2_OUT_ˇŒback


	)

85 
	#EPBULK_IN_ˇŒback
 
EP2_IN_ˇŒback


	)

87 
	#EPINT_OUT
 (
EP1OUT
)

	)

88 
	#EPINT_IN
 (
EP1IN
)

	)

89 
	#EPINT_OUT_ˇŒback
 
EP1_OUT_ˇŒback


	)

90 
	#EPINT_IN_ˇŒback
 
EP1_IN_ˇŒback


	)

92 
	#EPISO_OUT
 (
EP3OUT
)

	)

93 
	#EPISO_IN
 (
EP3IN
)

	)

94 
	#EPISO_OUT_ˇŒback
 
EP3_OUT_ˇŒback


	)

95 
	#EPISO_IN_ˇŒback
 
EP3_IN_ˇŒback


	)

97 
	#MAX_PACKET_SIZE_EPBULK
 (
MAX_PACKET_SIZE_EP2
)

	)

98 
	#MAX_PACKET_SIZE_EPINT
 (
MAX_PACKET_SIZE_EP1
)

	)

99 
	#MAX_PACKET_SIZE_EPISO
 (
MAX_PACKET_SIZE_EP3
)

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBEndpoints_Maxim.h

34 
	#NUMBER_OF_LOGICAL_ENDPOINTS
 (8)

	)

35 
	#NUMBER_OF_PHYSICAL_ENDPOINTS
 (
NUMBER_OF_LOGICAL_ENDPOINTS
 * 2)

	)

37 
	#DIR_OUT
 0x00

	)

38 
	#DIR_IN
 0x01

	)

39 
	#EP_NUM
(
ï
Ë”∞>> 1)

	)

40 
	#IN_EP
(
ï
Ë”∞& 
DIR_IN
)

	)

41 
	#OUT_EP
(
ï
Ë(!”∞& 
DIR_IN
))

	)

47 
	#EP0OUT
 ((0 << 1Ë| 
DIR_OUT
)

	)

48 
	#EP0IN
 ((0 << 1Ë| 
DIR_IN
)

	)

49 
	#EP1OUT
 ((1 << 1Ë| 
DIR_OUT
)

	)

50 
	#EP1IN
 ((1 << 1Ë| 
DIR_IN
)

	)

51 
	#EP2OUT
 ((2 << 1Ë| 
DIR_OUT
)

	)

52 
	#EP2IN
 ((2 << 1Ë| 
DIR_IN
)

	)

53 
	#EP3OUT
 ((3 << 1Ë| 
DIR_OUT
)

	)

54 
	#EP3IN
 ((3 << 1Ë| 
DIR_IN
)

	)

55 
	#EP4OUT
 ((4 << 1Ë| 
DIR_OUT
)

	)

56 
	#EP4IN
 ((4 << 1Ë| 
DIR_IN
)

	)

57 
	#EP5OUT
 ((5 << 1Ë| 
DIR_OUT
)

	)

58 
	#EP5IN
 ((5 << 1Ë| 
DIR_IN
)

	)

59 
	#EP6OUT
 ((6 << 1Ë| 
DIR_OUT
)

	)

60 
	#EP6IN
 ((6 << 1Ë| 
DIR_IN
)

	)

61 
	#EP7OUT
 ((7 << 1Ë| 
DIR_OUT
)

	)

62 
	#EP7IN
 ((7 << 1Ë| 
DIR_IN
)

	)

66 
	#MAX_PACKET_SIZE_EP0
 (64)

	)

67 
	#MAX_PACKET_SIZE_EP1
 (64)

	)

68 
	#MAX_PACKET_SIZE_EP2
 (64)

	)

69 
	#MAX_PACKET_SIZE_EP3
 (64)

	)

70 
	#MAX_PACKET_SIZE_EP4
 (64)

	)

71 
	#MAX_PACKET_SIZE_EP5
 (64)

	)

72 
	#MAX_PACKET_SIZE_EP6
 (64)

	)

73 
	#MAX_PACKET_SIZE_EP7
 (64)

	)

79 
	#EPBULK_OUT
 (
EP1OUT
)

	)

80 
	#EPBULK_IN
 (
EP2IN
)

	)

81 
	#EPBULK_OUT_ˇŒback
 
EP1_OUT_ˇŒback


	)

82 
	#EPBULK_IN_ˇŒback
 
EP2_IN_ˇŒback


	)

84 
	#EPINT_OUT
 (
EP3OUT
)

	)

85 
	#EPINT_IN
 (
EP4IN
)

	)

86 
	#EPINT_OUT_ˇŒback
 
EP3_OUT_ˇŒback


	)

87 
	#EPINT_IN_ˇŒback
 
EP4_IN_ˇŒback


	)

90 
	#EPISO_OUT
 (
EP0OUT
)

	)

91 
	#EPISO_IN
 (
EP0IN
)

	)

93 
	#MAX_PACKET_SIZE_EPBULK
 (64)

	)

94 
	#MAX_PACKET_SIZE_EPINT
 (64)

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBEndpoints_RZ_A1H.h

19 
	#NUMBER_OF_LOGICAL_ENDPOINTS
 (16)

	)

20 
	#NUMBER_OF_PHYSICAL_ENDPOINTS
 (
NUMBER_OF_LOGICAL_ENDPOINTS
 * 2)

	)

26 
	#EP0OUT
 (0Ë

	)

27 
	#EP0IN
 (1Ë

	)

28 
	#EP1OUT
 (2Ë

	)

29 
	#EP1IN
 (3Ë

	)

30 
	#EP2OUT
 (4Ë

	)

31 
	#EP2IN
 (5Ë

	)

32 
	#EP3OUT
 (6Ë

	)

33 
	#EP3IN
 (7Ë

	)

35 
	#EP6IN
 (8Ë

	)

36 
	#EP8IN
 (9Ë

	)

37 
	#EP9IN
 (10Ë

	)

38 
	#EP10IN
 (11Ë

	)

39 
	#EP11IN
 (12Ë

	)

40 
	#EP12IN
 (13Ë

	)

41 
	#EP13IN
 (14Ë

	)

42 
	#EP14IN
 (15Ë

	)

43 
	#EP15IN
 (16Ë

	)

46 
	#MAX_PACKET_SIZE_EP0
 (64Ë

	)

47 
	#MAX_PACKET_SIZE_EP1
 (64Ë

	)

48 
	#MAX_PACKET_SIZE_EP2
 (512Ë

	)

49 
	#MAX_PACKET_SIZE_EP3
 (512Ë

	)

50 
	#MAX_PACKET_SIZE_EP6
 (64Ë

	)

51 
	#MAX_PACKET_SIZE_EP8
 (64Ë

	)

52 
	#MAX_PACKET_SIZE_EP9
 (512Ë

	)

53 
	#MAX_PACKET_SIZE_EP10
 (512Ë

	)

54 
	#MAX_PACKET_SIZE_EP11
 (512Ë

	)

55 
	#MAX_PACKET_SIZE_EP12
 (512Ë

	)

56 
	#MAX_PACKET_SIZE_EP13
 (512Ë

	)

57 
	#MAX_PACKET_SIZE_EP14
 (512Ë

	)

58 
	#MAX_PACKET_SIZE_EP15
 (512Ë

	)

66 
	#EPBULK_OUT
 (
EP2OUT
)

	)

67 
	#EPBULK_IN
 (
EP2IN
)

	)

68 
	#EPBULK_OUT_ˇŒback
 
EP2_OUT_ˇŒback


	)

69 
	#EPBULK_IN_ˇŒback
 
EP2_IN_ˇŒback


	)

71 
	#EPINT_OUT
 (
EP1OUT
)

	)

72 
	#EPINT_IN
 (
EP1IN
)

	)

73 
	#EPINT_OUT_ˇŒback
 
EP1_OUT_ˇŒback


	)

74 
	#EPINT_IN_ˇŒback
 
EP1_IN_ˇŒback


	)

76 
	#EPISO_OUT
 (
EP3OUT
)

	)

77 
	#EPISO_IN
 (
EP3IN
)

	)

78 
	#EPISO_OUT_ˇŒback
 
EP3_OUT_ˇŒback


	)

79 
	#EPISO_IN_ˇŒback
 
EP3_IN_ˇŒback


	)

81 
	#MAX_PACKET_SIZE_EPBULK
 (
MAX_PACKET_SIZE_EP2
)

	)

82 
	#MAX_PACKET_SIZE_EPINT
 (
MAX_PACKET_SIZE_EP1
)

	)

83 
	#MAX_PACKET_SIZE_EPISO
 (
MAX_PACKET_SIZE_EP3
)

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBEndpoints_STM32F4.h

19 
	#NUMBER_OF_LOGICAL_ENDPOINTS
 (4)

	)

20 
	#NUMBER_OF_PHYSICAL_ENDPOINTS
 (
NUMBER_OF_LOGICAL_ENDPOINTS
 * 2)

	)

26 
	#EP0OUT
 (0Ë

	)

27 
	#EP0IN
 (1Ë

	)

28 
	#EP1OUT
 (2Ë

	)

29 
	#EP1IN
 (3Ë

	)

30 
	#EP2OUT
 (4Ë

	)

31 
	#EP2IN
 (5Ë

	)

32 
	#EP3OUT
 (6Ë

	)

33 
	#EP3IN
 (7Ë

	)

37 
	#MAX_PACKET_SIZE_EP0
 (64)

	)

38 
	#MAX_PACKET_SIZE_EP1
 (64Ë

	)

39 
	#MAX_PACKET_SIZE_EP2
 (64Ë

	)

40 
	#MAX_PACKET_SIZE_EP3
 (64Ë

	)

42 
	#MAX_PACKET_SIZE_EP1_ISO
 (1023Ë

	)

43 
	#MAX_PACKET_SIZE_EP2_ISO
 (1023Ë

	)

44 
	#MAX_PACKET_SIZE_EP3_ISO
 (1023Ë

	)

50 
	#EPBULK_OUT
 (
EP2OUT
)

	)

51 
	#EPBULK_IN
 (
EP2IN
)

	)

52 
	#EPBULK_OUT_ˇŒback
 
EP2_OUT_ˇŒback


	)

53 
	#EPBULK_IN_ˇŒback
 
EP2_IN_ˇŒback


	)

55 
	#EPINT_OUT
 (
EP1OUT
)

	)

56 
	#EPINT_IN
 (
EP1IN
)

	)

57 
	#EPINT_OUT_ˇŒback
 
EP1_OUT_ˇŒback


	)

58 
	#EPINT_IN_ˇŒback
 
EP1_IN_ˇŒback


	)

60 
	#EPISO_OUT
 (
EP3OUT
)

	)

61 
	#EPISO_IN
 (
EP3IN
)

	)

62 
	#EPISO_OUT_ˇŒback
 
EP3_OUT_ˇŒback


	)

63 
	#EPISO_IN_ˇŒback
 
EP3_IN_ˇŒback


	)

65 
	#MAX_PACKET_SIZE_EPBULK
 (
MAX_PACKET_SIZE_EP2
)

	)

66 
	#MAX_PACKET_SIZE_EPINT
 (
MAX_PACKET_SIZE_EP1
)

	)

67 
	#MAX_PACKET_SIZE_EPISO
 (
MAX_PACKET_SIZE_EP3_ISO
)

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBHAL.h

19 #i‚de‡
USBBUSINTERFACE_H


20 
	#USBBUSINTERFACE_H


	)

22 
	~"mbed.h
"

23 
	~"USBEndpoöts.h
"

24 
	~"toﬁchaö.h
"

30 ˛as†
	cUSBHAL
 {

31 
	mpublic
:

33 
USBHAL
();

34 ~
USBHAL
();

35 
c⁄√˘
();

36 
disc⁄√˘
();

37 
c⁄figuªDevi˚
();

38 
unc⁄figuªDevi˚
();

39 
£tAddªss
(
uöt8_t
 
addªss
);

40 
ªmŸeWakeup
();

43 
EP0£tup
(
uöt8_t
 *
buf„r
);

44 
EP0ªad
();

45 
EP0ªadSège
();

46 
uöt32_t
 
EP0gëRódResu…
(
uöt8_t
 *
buf„r
);

47 
EP0wrôe
(
uöt8_t
 *
buf„r
, 
uöt32_t
 
size
);

48 
EP0gëWrôeResu…
();

49 
EP0°Æl
();

52 
EP_STATUS
 
ídpoötRód
(
uöt8_t
 
ídpoöt
, 
uöt32_t
 
maximumSize
);

53 
EP_STATUS
 
ídpoötRódResu…
(
uöt8_t
 
ídpoöt
, uöt8_à*
d©a
, 
uöt32_t
 *
byãsRód
);

54 
EP_STATUS
 
ídpoötWrôe
(
uöt8_t
 
ídpoöt
, uöt8_à*
d©a
, 
uöt32_t
 
size
);

55 
EP_STATUS
 
ídpoötWrôeResu…
(
uöt8_t
 
ídpoöt
);

56 
°ÆlEndpoöt
(
uöt8_t
 
ídpoöt
);

57 
un°ÆlEndpoöt
(
uöt8_t
 
ídpoöt
);

58 
boﬁ
 
ªÆi£Endpoöt
(
uöt8_t
 
ídpoöt
, 
uöt32_t
 
maxPackë
, uöt32_à
›ti⁄s
);

59 
boﬁ
 
gëEndpoötSèŒSèã
(
ídpoöt
);

60 
uöt32_t
 
ídpoötRódc‹e
(
uöt8_t
 
ídpoöt
, uöt8_à*
buf„r
);

62 
	m¥Ÿe˘ed
:

63 
vútuÆ
 
	$busRe£t
(){};

64 
vútuÆ
 
	$EP0£tupCÆlback
(){
	}
};

65 
vútuÆ
 
	$EP0out
(){
	}
};

66 
vútuÆ
 
	$EP0ö
(){
	}
};

67 
vútuÆ
 
	$c⁄√˘SèãCh™ged
(
c⁄√˘ed
){
	}
};

68 
vútuÆ
 
	$su•ídSèãCh™ged
(
su•íded
){
	}
};

69 
vútuÆ
 
	$SOF
(
‰ameNumbî
){
	}
};

71 
vútuÆ
 
boﬁ
 
	$EP1_OUT_ˇŒback
(){ 
Ál£
;
	}
};

72 
vútuÆ
 
boﬁ
 
	$EP1_IN_ˇŒback
(){ 
Ál£
;
	}
};

73 
vútuÆ
 
boﬁ
 
	$EP2_OUT_ˇŒback
(){ 
Ál£
;
	}
};

74 
vútuÆ
 
boﬁ
 
	$EP2_IN_ˇŒback
(){ 
Ál£
;
	}
};

75 
vútuÆ
 
boﬁ
 
	$EP3_OUT_ˇŒback
(){ 
Ál£
;
	}
};

76 
vútuÆ
 
boﬁ
 
	$EP3_IN_ˇŒback
(){ 
Ál£
;
	}
};

77 #i‡!
	$deföed
(
TARGET_STM32F4
)

78 
vútuÆ
 
boﬁ
 
	$EP4_OUT_ˇŒback
(){ 
Ál£
;
	}
};

79 
vútuÆ
 
boﬁ
 
	$EP4_IN_ˇŒback
(){ 
Ál£
;
	}
};

80 #i‡!(
deföed
(
TARGET_LPC11UXX
Ë|| deföed(
TARGET_LPC11U6X
Ë|| deföed(
TARGET_LPC1347
Ë|| 
	$deföed
(
TARGET_LPC1549
))

81 
vútuÆ
 
boﬁ
 
	$EP5_OUT_ˇŒback
(){ 
Ál£
;
	}
};

82 
vútuÆ
 
boﬁ
 
	$EP5_IN_ˇŒback
(){ 
Ál£
;
	}
};

83 
vútuÆ
 
boﬁ
 
	$EP6_OUT_ˇŒback
(){ 
Ál£
;
	}
};

84 
vútuÆ
 
boﬁ
 
	$EP6_IN_ˇŒback
(){ 
Ál£
;
	}
};

85 
vútuÆ
 
boﬁ
 
	$EP7_OUT_ˇŒback
(){ 
Ál£
;
	}
};

86 
vútuÆ
 
boﬁ
 
	$EP7_IN_ˇŒback
(){ 
Ál£
;
	}
};

87 
vútuÆ
 
boﬁ
 
	$EP8_OUT_ˇŒback
(){ 
Ál£
;
	}
};

88 
vútuÆ
 
boﬁ
 
	$EP8_IN_ˇŒback
(){ 
Ál£
;
	}
};

89 
vútuÆ
 
boﬁ
 
	$EP9_OUT_ˇŒback
(){ 
Ál£
;
	}
};

90 
vútuÆ
 
boﬁ
 
	$EP9_IN_ˇŒback
(){ 
Ál£
;
	}
};

91 
vútuÆ
 
boﬁ
 
	$EP10_OUT_ˇŒback
(){ 
Ál£
;
	}
};

92 
vútuÆ
 
boﬁ
 
	$EP10_IN_ˇŒback
(){ 
Ál£
;
	}
};

93 
vútuÆ
 
boﬁ
 
	$EP11_OUT_ˇŒback
(){ 
Ál£
;
	}
};

94 
vútuÆ
 
boﬁ
 
	$EP11_IN_ˇŒback
(){ 
Ál£
;
	}
};

95 
vútuÆ
 
boﬁ
 
	$EP12_OUT_ˇŒback
(){ 
Ál£
;
	}
};

96 
vútuÆ
 
boﬁ
 
	$EP12_IN_ˇŒback
(){ 
Ál£
;
	}
};

97 
vútuÆ
 
boﬁ
 
	$EP13_OUT_ˇŒback
(){ 
Ál£
;
	}
};

98 
vútuÆ
 
boﬁ
 
	$EP13_IN_ˇŒback
(){ 
Ál£
;
	}
};

99 
vútuÆ
 
boﬁ
 
	$EP14_OUT_ˇŒback
(){ 
Ál£
;
	}
};

100 
vútuÆ
 
boﬁ
 
	$EP14_IN_ˇŒback
(){ 
Ál£
;
	}
};

101 
vútuÆ
 
boﬁ
 
	$EP15_OUT_ˇŒback
(){ 
Ál£
;
	}
};

102 
vútuÆ
 
boﬁ
 
	$EP15_IN_ˇŒback
(){ 
Ál£
;
	}
};

106 
	g¥iv©e
:

107 
usbi§
();

108 
_usbi§
();

109 
USBHAL
 * 
	gö°™˚
;

111 #i‡
deföed
(
TARGET_LPC11UXX
Ë|| deföed(
TARGET_LPC11U6X
Ë|| deföed(
TARGET_LPC1347
Ë|| 
	$deföed
(
TARGET_LPC1549
)

112 
	`boﬁ
 (
USBHAL
::*
ïCÆlback
[10 - 2])();

113 #ñi‡
	$deföed
(
TARGET_STM32F4
)

114 
	`boﬁ
 (
USBHAL
::*
ïCÆlback
[8 - 2])();

116 
	`boﬁ
 (
USBHAL
::*
ïCÆlback
[32 - 2])();

120 
	}
};

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBHAL_EFM32.cpp

16 #i‡
deföed
 
TARGET_EFM32GG_STK3700
 || \

17 
deföed
 
	gTARGET_EFM32LG_STK3600
 || \

18 
deföed
 
	gTARGET_EFM32WG_STK3800
 || \

19 
deföed
 
	gTARGET_EFM32HG_STK3400


21 
	~"USBHAL.h
"

22 
	~"em_usb.h
"

23 
	~"em_usbty≥s.h
"

24 
	~"em_usbhÆ.h
"

25 
	~"em_usbd.h
"

27 
	~"¶ìpmodes.h
"

29 
	eUSBISRComm™d
 {

30 
	mCMD_HANDLED
 = 0,

31 
	mCMD_EP0SETUP
,

32 
	mCMD_EP0IN
,

33 
	mCMD_EP0OUT
,

34 
	mCMD_EP_XFER_COMPLETED
,

35 
	mCMD_SOF
,

36 
	mCMD_BUSRESET
,

37 
	mCMD_SUSPEND_STATE_CHANGED
,

38 
	mCMD_ENUM_END_MARKER


41 
	eIEPSètus
 {

42 
	mNOT_CONFIGURED
 = 0,

43 
	mIDLE
 = 1,

44 
	mREAD_PENDING
 = 2,

45 
	mWRITE_PENDING
 = 3,

46 
	mREAD_COMPLETE
 = 4,

47 
	mWRITE_COMPLETE
 = 5,

48 
	mFAILED_INVALID
 = 6,

49 
	mFAILED_STALLED
 = 7

53 
IEPSètus
 
	m°©us
;

54 
uöt32_t
 
	mbyã_cou¡
;

55 
uöt32_t
 
	mmax_∑ckë
;

56 
USB_X„rCom∂ëeCb_Ty≥Def
 
	möã∫_cb
;

57 
uöt8_t
 *
	md©a_buf
;

58 } 
	tï_°©e_t
;

60 
USBHAL
 * 
	gUSBHAL
::
ö°™˚
;

61 
uöt8_t
 
	gï0£tupd©a
[8];

62 
ï_°©e_t
 
	gï_°©e
[
NUMBER_OF_ENDPOINTS
];

63 #ifde‡
USB_USE_DYNAMIC_MEMORY


64 
uöt8_t
 
	gï0ö_d©a_buf
[
MAX_PACKET_SIZE_EP0
] 
__©åibuã__
 ((
Æig√d
 (4)));

65 
uöt8_t
 
	gï0out_d©a_buf
[
MAX_PACKET_SIZE_EP0
];

67 
uöt8_t
 
	gï_d©a_buf
[
NUMBER_OF_ENDPOINTS
][64] 
__©åibuã__
 ((
Æig√d
 (4)));

70 
run_cmd
(
USBISRComm™d
 
cmd
, 
uöt32_t
 
∑øm
);

71 (*
	gi§±r
)(Ë
NULL
;

72 
USBISRComm™d
 
	gusb_i§cmd
 = 
CMD_HANDLED
;

73 
uöt32_t
 
	gusb_i§cmd_∑øm
 = 0;

75 "C" 
usbhÆ_Ælow_em2
(
boﬁ
 
Ælow_em2
);

77 #ifde‡
DEBUG_USB_API


78 
	#TRACE
(
fmt
,...Ë
	`¥ötf
("USB: %s: " fmà"\n", 
__func__
, 
__VA_ARGS__
);

	)

79 
	#TRACE_FUNC_IN
 
	`¥ötf
("USB: > %s\n",
__func__
);

	)

80 
	#TRACE_FUNC_IN_P
(
fmt
, ...Ë
	`¥ötf
("USB: > %s: " fmà"\n", 
__func__
, 
__VA_ARGS__
);

	)

82 
	#TRACE
(
fmt
,...)

	)

83 
	#TRACE_FUNC_IN


	)

84 
	#TRACE_FUNC_IN_P
(
fmt
, ...)

	)

87 
EP_STATUS
 
öã∫EndpoötRód
(
uöt8_t
 
ï
, 
uöt32_t
 
maxSize
);

89 
usbhÆ_x„r_com∂ëe_cb
(
uöt8_t
 
ïaddr
, 
USB_Sètus_Ty≥Def
 
°©us
,

90 
uöt32_t
 
x„ºed
, uöt32_à
ªmaöög
);

91 
usbhÆ_‰ì_buf„rs
();

94 
	#EPCB
(
n
Ë
usbhÆ_x„r_com∂ëe_cb_
##
	`n
(
USB_Sètus_Ty≥Def
 
°©us
, \

95 
uöt32_t
 
x„ºed
, uöt32_à
ªmaöög
) { \

96  
	`usbhÆ_x„r_com∂ëe_cb
(
n
, 
°©us
, 
x„ºed
, 
ªmaöög
); \

97 }

	)

99 
	$EPCB
(
EP0OUT
)

100 
	$EPCB
(
EP0IN
)

101 
	$EPCB
(
EP1OUT
)

102 
	$EPCB
(
EP1IN
)

103 
	$EPCB
(
EP2OUT
)

104 
	$EPCB
(
EP2IN
)

105 
	$EPCB
(
EP3OUT
)

106 
	$EPCB
(
EP3IN
)

107 #i‚de‡
TARGET_EFM32HG_STK3400


108 
	$EPCB
(
EP4OUT
)

109 
	$EPCB
(
EP4IN
)

110 
	$EPCB
(
EP5OUT
)

111 
	$EPCB
(
EP5IN
)

112 
	$EPCB
(
EP6OUT
)

113 
	$EPCB
(
EP6IN
)

116 
ölöe
 
boﬁ
 
	$is_Æig√d
(c⁄° *
poöãr
, 
size_t
 
byã_cou¡
)

118  ((
uöçå_t
)
poöãr
 % 
byã_cou¡
 == 0);

119 
	}
}

121 
	gUSBHAL
::
	$USBHAL
()

123 
TRACE_FUNC_IN
;

125 
i§±r
 = &
USBHAL
::
_usbi§
;

127 i‡(
ö°™˚
) {

128 
	`TRACE
("As£π sñ‡Áûed! in°™˚=%p", 
ö°™˚
);

129 
	`ab‹t
();

131 
ö°™˚
 = 
this
;

135 
	`usbhÆ_Ælow_em2
(
Ál£
);

140 
	`blockSÀïMode
(
EM2
);

142 
ïCÆlback
[
EP0OUT
] = 
NULL
;

143 
ïCÆlback
[
EP0IN
 ] = 
NULL
;

144 
ïCÆlback
[
EP1OUT
] = &
USBHAL
::
EP1_OUT_ˇŒback
;

145 
ïCÆlback
[
EP1IN
 ] = &
USBHAL
::
EP1_IN_ˇŒback
;

146 
ïCÆlback
[
EP2OUT
] = &
USBHAL
::
EP2_OUT_ˇŒback
;

147 
ïCÆlback
[
EP2IN
 ] = &
USBHAL
::
EP2_IN_ˇŒback
;

148 
ïCÆlback
[
EP3OUT
] = &
USBHAL
::
EP3_OUT_ˇŒback
;

149 
ïCÆlback
[
EP3IN
 ] = &
USBHAL
::
EP3_IN_ˇŒback
;

150 #i‚de‡
TARGET_EFM32HG_STK3400


151 
ïCÆlback
[
EP4OUT
] = &
USBHAL
::
EP4_OUT_ˇŒback
;

152 
ïCÆlback
[
EP4IN
 ] = &
USBHAL
::
EP4_IN_ˇŒback
;

153 
ïCÆlback
[
EP5OUT
] = &
USBHAL
::
EP5_OUT_ˇŒback
;

154 
ïCÆlback
[
EP5IN
 ] = &
USBHAL
::
EP5_IN_ˇŒback
;

155 
ïCÆlback
[
EP6OUT
] = &
USBHAL
::
EP6_OUT_ˇŒback
;

156 
ïCÆlback
[
EP6IN
 ] = &
USBHAL
::
EP6_IN_ˇŒback
;

159 
	`mem£t
(
ï_°©e
, 0, (ep_state));

161 
ï_°©e
[
EP0OUT
].
öã∫_cb
 = 
usbhÆ_x„r_com∂ëe_cb_EP0OUT
;

162 
ï_°©e
[
EP0IN
 ].
öã∫_cb
 = 
usbhÆ_x„r_com∂ëe_cb_EP0IN
;

163 
ï_°©e
[
EP1OUT
].
öã∫_cb
 = 
usbhÆ_x„r_com∂ëe_cb_EP1OUT
;

164 
ï_°©e
[
EP1IN
 ].
öã∫_cb
 = 
usbhÆ_x„r_com∂ëe_cb_EP1IN
;

165 
ï_°©e
[
EP2OUT
].
öã∫_cb
 = 
usbhÆ_x„r_com∂ëe_cb_EP2OUT
;

166 
ï_°©e
[
EP2IN
 ].
öã∫_cb
 = 
usbhÆ_x„r_com∂ëe_cb_EP2IN
;

167 
ï_°©e
[
EP3OUT
].
öã∫_cb
 = 
usbhÆ_x„r_com∂ëe_cb_EP3OUT
;

168 
ï_°©e
[
EP3IN
 ].
öã∫_cb
 = 
usbhÆ_x„r_com∂ëe_cb_EP3IN
;

169 #i‚de‡
TARGET_EFM32HG_STK3400


170 
ï_°©e
[
EP4OUT
].
öã∫_cb
 = 
usbhÆ_x„r_com∂ëe_cb_EP4OUT
;

171 
ï_°©e
[
EP4IN
 ].
öã∫_cb
 = 
usbhÆ_x„r_com∂ëe_cb_EP4IN
;

172 
ï_°©e
[
EP5OUT
].
öã∫_cb
 = 
usbhÆ_x„r_com∂ëe_cb_EP5OUT
;

173 
ï_°©e
[
EP5IN
 ].
öã∫_cb
 = 
usbhÆ_x„r_com∂ëe_cb_EP5IN
;

174 
ï_°©e
[
EP6OUT
].
öã∫_cb
 = 
usbhÆ_x„r_com∂ëe_cb_EP6OUT
;

175 
ï_°©e
[
EP6IN
 ].
öã∫_cb
 = 
usbhÆ_x„r_com∂ëe_cb_EP6IN
;

178 #ifde‡
USB_USE_DYNAMIC_MEMORY


179 
ï_°©e
[
EP0OUT
].
d©a_buf
 = 
ï0out_d©a_buf
;

180 
ï_°©e
[
EP0IN
].
d©a_buf
 = 
ï0ö_d©a_buf
;

182 
i
=0 ; i<
NUMBER_OF_ENDPOINTS
 ; i++) {

183 
ï_°©e
[
i
].
d©a_buf
 = 
ï_d©a_buf
[i];

186 
	}
}

188 
	gUSBHAL
::~
	$USBHAL
()

190 
TRACE_FUNC_IN
;

191 
	`USBD_Ab‹tAŒTøns„rs
();

192 
	`USBD_Disc⁄√˘
();

193 
	`usbhÆ_‰ì_buf„rs
();

195 
	`usbhÆ_Ælow_em2
(
åue
);

196 
	`unblockSÀïMode
(
EM2
);

197 
	}
}

199 "C" 
	$usbhÆ_Ælow_em2
(
boﬁ
 
Ælow_em2
)

201 i‡(
Ælow_em2
) {

204 
	`unblockSÀïMode
(
EM1
);

206 
	`blockSÀïMode
(
EM1
);

208 
	}
}

210 
	$usbhÆ_ª£t_cb
()

212 
TRACE_FUNC_IN
;

213 
	`run_cmd
(
CMD_BUSRESET
, 0);

214 
	}
}

216 #ifde‡
DEBUG_USB_API


217 c⁄° *
usb°©e
[] = { "NONE", "ATTACHED", "POWERED", "DEFAULT",

221 
	$usbhÆ_°©e_ch™ge_cb
(
USBD_Sèã_Ty≥Def
 
ﬁdSèã
,

222 
USBD_Sèã_Ty≥Def
 
√wSèã
)

224 
	`TRACE
("°©êch™ged %†-> %s", 
usb°©e
[
ﬁdSèã
], usb°©e[
√wSèã
]);

226 i‡(
ﬁdSèã
 =
USBD_STATE_SUSPENDED
) {

227 
	`run_cmd
(
CMD_SUSPEND_STATE_CHANGED
, 0);

230 i‡(
√wSèã
 =
USBD_STATE_SUSPENDED
) {

231 
	`run_cmd
(
CMD_SUSPEND_STATE_CHANGED
, 1);

242 i‡(
√wSèã
 =
USBD_STATE_NONE
) {

243 
	`run_cmd
(
CMD_BUSRESET
, 0);

245 
	}
}

247 
	$usbhÆ_£tupcmd_cb
(c⁄° 
USB_Sëup_Ty≥Def
 *
£tup
)

249 
TRACE_FUNC_IN
;

250 i‡(!
£tup
) {

251 
	`EFM_ASSERT
(
Ál£
);

252  
USB_STATUS_REQ_ERR
;

255 
	`mem˝y
(
ï0£tupd©a
, 
£tup
, 8);

256 
	`run_cmd
(
CMD_EP0SETUP
, 0);

258  
USB_STATUS_OK
;

259 
	}
}

261 
	$usbhÆ_sof_cb
(
uöt16_t
 
‰ameNum
)

263 
	`run_cmd
(
CMD_SOF
, 
‰ameNum
);

264 
	}
}

266 
	$usbhÆ_‰ì_buf„rs
()

268 #ifde‡
USB_USE_DYNAMIC_MEMORY


269 
TRACE_FUNC_IN
;

271 
i
=
EP1OUT
 ; i<
NUMBER_OF_ENDPOINTS
 ; i++ ) {

272 i‡(
ï_°©e
[
i
].
d©a_buf
) {

273 
	`‰ì
(
ï_°©e
[
i
].
d©a_buf
);

274 
ï_°©e
[
i
].
d©a_buf
 = 
NULL
;

278 
	}
}

280 
	gUSBHAL
::
	$c⁄√˘
()

282 
TRACE_FUNC_IN
;

286 c⁄° 
uöt8_t
 
buf„r_mu…ùlõr
[] = { 1 };

287 c⁄° 
USBD_CÆlbacks_Ty≥Def
 
usbd_ˇŒbacks
 = {

288 .
usbRe£t
 = 
usbhÆ_ª£t_cb
,

289 .
usbSèãCh™ge
 = 
usbhÆ_°©e_ch™ge_cb
,

290 .
£tupCmd
 = 
usbhÆ_£tupcmd_cb
,

291 .
isSñfPowîed
 = 
NULL
,

292 .
sofI¡
 = 
usbhÆ_sof_cb


295 
USBD_Inô_Ty≥Def
 
öôd©a
 = {

296 .
devi˚Des¸ùt‹
 = 
NULL
,

297 .
c⁄figDes¸ùt‹
 = 
NULL
,

298 .
°rögDes¸ùt‹s
 = 
NULL
,

299 .
numbîOfSåögs
 = 0,

300 .
buf„rögMu…ùlõr
 = 
buf„r_mu…ùlõr
,

301 .
ˇŒbacks
 = &
usbd_ˇŒbacks
,

302 .
ª£rved
 = 0

305 
ªt
 = 
	`USBD_Inô
(&
öôd©a
);

307 
	`TRACE
("öô = %d, devi˚des¯%lx, c⁄figdes¯%lx", 
ªt
,

308 (
uöt32_t
Ë
öôd©a
.
devi˚Des¸ùt‹
,

309 (
uöt32_t
Ë
öôd©a
.
c⁄figDes¸ùt‹
);

311 
	`EFM_ASSERT
(
ªt
 =
USB_STATUS_OK
);

312 
	}
}

314 
	gUSBHAL
::
	$disc⁄√˘
()

316 
TRACE_FUNC_IN
;

317 
	`USBD_Disc⁄√˘
();

318 
	}
}

320 
	gUSBHAL
::
	$c⁄figuªDevi˚
()

322 
TRACE_FUNC_IN
;

323 
	`USBD_SëUsbSèã
(
USBD_STATE_CONFIGURED
);

324 
	}
}

326 
	gUSBHAL
::
	$unc⁄figuªDevi˚
()

328 
TRACE_FUNC_IN
;

329 
	`USBD_SëUsbSèã
(
USBD_STATE_DEFAULT
);

330 
	`usbhÆ_‰ì_buf„rs
();

331 
	}
}

333 
	gUSBHAL
::
	$£tAddªss
(
uöt8_t
 
addªss
)

335 
	`TRACE_FUNC_IN_P
("add∏0x%x", ()
addªss
);

336 
	`USBD_SëAddªss
(
addªss
);

337 
	}
}

339 
	gUSBHAL
::
	$ªmŸeWakeup
()

341 
TRACE_FUNC_IN
;

342 
	`USBD_RemŸeWakeup
();

343 
	}
}

345 
	gUSBHAL
::
	$EP0£tup
(
uöt8_t
 *
buf„r
)

347 
TRACE_FUNC_IN
;

348 
	`EFM_ASSERT
(
buf„r
);

349 i‡(
buf„r
) {

350 
	`mem˝y
(
buf„r
, 
ï0£tupd©a
, 8);

352 
	}
}

354 
	gUSBHAL
::
	$EP0ªad
()

356 
TRACE_FUNC_IN
;

357 ()
	`öã∫EndpoötRód
(0, 
MAX_PACKET_SIZE_EP0
);

358 
	}
}

360 
	gUSBHAL
::
	$EP0ªadSège
()

362 
TRACE_FUNC_IN
;

364 
	}
}

366 
uöt32_t
 
	gUSBHAL
::
	$EP0gëRódResu…
(
uöt8_t
 *
buf„r
)

368 
TRACE_FUNC_IN
;

369 
	`EFM_ASSERT
(
buf„r
);

371 
uöt32_t
 
ªad
 = 0;

372 
	`ídpoötRódResu…
(0, 
buf„r
, &
ªad
);

373  
ªad
;

374 
	}
}

376 
	$usbhÆ_x„r_com∂ëe_cb
(
uöt8_t
 
ï
, 
USB_Sètus_Ty≥Def
 
°©us
,

377 
uöt32_t
 
x„ºed
, uöt32_à
ªmaöög
)

379 
	`TRACE_FUNC_IN_P
("ep 0x%x, status %u, xferred %lu,Ñem %lu",

380 
ï
, 
°©us
, 
x„ºed
, 
ªmaöög
);

382 i‡(
ï
 >
NUMBER_OF_ENDPOINTS
) {

383 
	`EFM_ASSERT
(
Ál£
);

384  
USB_STATUS_REQ_ERR
;

387 
ï
) {

388 
EP0OUT
:

389 i‡(
ï_°©e
[
EP0OUT
].
°©us
 =
READ_PENDING
) {

390 
ï_°©e
[
EP0OUT
].
°©us
 = 
READ_COMPLETE
;

391 
ï_°©e
[
EP0OUT
].
byã_cou¡
 = 
x„ºed
;

393 i‡(
x„ºed
 == 0) {

397 
	`run_cmd
(
CMD_EP0OUT
, 0);

400 
EP0IN
:

401 
	`run_cmd
(
CMD_EP0IN
, 0);

405 
boﬁ
 
wrôe
 = 
ï
 & 1;

407 i‡(
°©us
 =
USB_STATUS_OK
) {

408 i‡(!
wrôe
 && 
ï_°©e
[
ï
].
°©us
 =
READ_PENDING
) {

409 
ï_°©e
[
ï
].
°©us
 = 
READ_COMPLETE
;

410 
ï_°©e
[
ï
].
byã_cou¡
 = 
x„ºed
;

411 } i‡(
wrôe
 && 
ï_°©e
[
ï
].
°©us
 =
WRITE_PENDING
) {

412 
ï_°©e
[
ï
].
°©us
 = 
WRITE_COMPLETE
;

414 
ï_°©e
[
ï
].
°©us
 = 
FAILED_INVALID
;

417 
ï_°©e
[
ï
].
°©us
 = 
FAILED_INVALID
;

420 i‡(
ï_°©e
[
ï
].
°©us
 !
FAILED_INVALID
) {

421 
	`run_cmd
(
CMD_EP_XFER_COMPLETED
, 
ï
);

426  
USB_STATUS_OK
;

427 
	}
}

429 
	gUSBHAL
::
	$EP0wrôe
(
uöt8_t
 *
buf„r
, 
uöt32_t
 
size
)

433 
ªt
;

434 
USB_X„rCom∂ëeCb_Ty≥Def
 
cb
 = 
ï_°©e
[
EP0IN
].
öã∫_cb
;

436 
	`EFM_ASSERT
((
buf„r
 !
NULL
Ë|| (
size
 == 0));

437 
	`EFM_ASSERT
(
size
 <
MAX_PACKET_SIZE_EP0
);

439 i‡(!
buf„r
 || 
size
 == 0) {

441 
cb
 = 
NULL
;

444 i‡(
buf„r
 && !
	`is_Æig√d
(buffer,4)) {

446 
	`mem˝y
(
ï_°©e
[
EP0IN
].
d©a_buf
, 
buf„r
, 
size
);

447 
ªt
 = 
	`USBD_Wrôe
(0, 
ï_°©e
[
EP0IN
].
d©a_buf
, 
size
, 
cb
);

449 
ªt
 = 
	`USBD_Wrôe
(0, 
buf„r
, 
size
, 
cb
);

452 i‡(
ªt
 !
USB_STATUS_OK
) {

453 
	`TRACE
("FAILED -Ñë %d", 
ªt
);

455 
	}
}

457 
	gUSBHAL
::
	$EP0°Æl
()

459 
TRACE_FUNC_IN
;

460 
	`USBD_SèŒEp0
();

461 
	}
}

463 
EP_STATUS
 
	$öã∫EndpoötRód
(
uöt8_t
 
ï
, 
uöt32_t
 
maxSize
)

467 i‡(
ï
 >
NUMBER_OF_ENDPOINTS
) {

468 
	`EFM_ASSERT
(
Ál£
);

469  
EP_INVALID
;

472 
ï_°©e
[
ï
].
°©us
 = 
READ_PENDING
;

474 
ªt
 = 
	`USBD_Ród
(
	`USB_EP_TO_ADDR
(
ï
), 
ï_°©e
[ï].
d©a_buf
, 
maxSize
,

475 
ï_°©e
[
ï
].
öã∫_cb
);

477 i‡(
ªt
 =
USB_STATUS_OK
) {

478  
EP_PENDING
;

480 
	`TRACE
("FAILED -Ñë %d", 
ªt
);

482 i‡(
ªt
 =
USB_STATUS_EP_STALLED
) {

483  
EP_STALLED
;

485  
EP_INVALID
;

488 
	}
}

490 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötRód
(
uöt8_t
 
ídpoöt
, 
uöt32_t
 
maximumSize
)

492  
	`öã∫EndpoötRód
(
ídpoöt
, 
maximumSize
);

493 
	}
}

495 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötRódResu…
(
uöt8_t
 
ídpoöt
, uöt8_à*
d©a
, 
uöt32_t
 *
byãsRód
)

497 
TRACE_FUNC_IN
;

499 i‡(
ídpoöt
 >
NUMBER_OF_ENDPOINTS
) {

500 
	`EFM_ASSERT
(
Ál£
);

501  
EP_INVALID
;

504 
	`EFM_ASSERT
(
d©a
);

505 
	`EFM_ASSERT
(
byãsRód
);

506 i‡(!
d©a
 || !
byãsRód
) {

507  
EP_INVALID
;

510 
ï_°©e
[
ídpoöt
].
°©us
) {

511 
READ_PENDING
:

512  
EP_PENDING
;

514 
READ_COMPLETE
:

515 
	`mem˝y
(
d©a
, 
ï_°©e
[
ídpoöt
].
d©a_buf
,Ép_°©e[ídpoöt].
byã_cou¡
);

516 *
byãsRód
 = 
ï_°©e
[
ídpoöt
].
byã_cou¡
;

517 
ï_°©e
[
ídpoöt
].
°©us
 = 
IDLE
;

518  
EP_COMPLETED
;

520 
FAILED_STALLED
:

521 
ï_°©e
[
ídpoöt
].
°©us
 = 
IDLE
;

522  
EP_STALLED
;

525 
ï_°©e
[
ídpoöt
].
°©us
 = 
IDLE
;

526  
EP_INVALID
;

528 
	}
}

530 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötWrôe
(
uöt8_t
 
ídpoöt
, uöt8_à*
d©a
, 
uöt32_t
 
size
)

532 
	`TRACE_FUNC_IN_P
("ídpoöà0x%x, d©®0x%lx, sizê%lu", ()
ídpoöt
, (
uöt32_t
)
d©a
, 
size
);

534 
	`EFM_ASSERT
(
ídpoöt
 < 
NUMBER_OF_ENDPOINTS
);

535 
	`EFM_ASSERT
(
ídpoöt
 > 
EP0IN
);

536 
	`EFM_ASSERT
(
size
 <
ï_°©e
[
ídpoöt
].
max_∑ckë
);

537 
	`EFM_ASSERT
(
d©a
);

539 
uöt8_t
 
ï
 = 
	`USB_EP_TO_INDEX
(
ídpoöt
);

541 i‡(
ídpoöt
 >
NUMBER_OF_ENDPOINTS
 ||Éndpoöà<
EP0IN
) {

542  
EP_INVALID
;

545 i‡(
size
 > 
ï_°©e
[
ídpoöt
].
max_∑ckë
) {

546  
EP_INVALID
;

549 i‡(!
d©a
) {

550  
EP_INVALID
;

553 
	`mem˝y
(
ï_°©e
[
ï
].
d©a_buf
, 
d©a
, 
size
);

555 
ï_°©e
[
ï
].
°©us
 = 
WRITE_PENDING
;

556 
ªt
 = 
	`USBD_Wrôe
(
	`USB_EP_TO_ADDR
(
ídpoöt
), 
ï_°©e
[
ï
].
d©a_buf
, 
size
,Ép_°©e[ï].
öã∫_cb
);

558 i‡(
ªt
 =
USB_STATUS_EP_STALLED
) {

559 
ï_°©e
[
ï
].
°©us
 = 
IDLE
;

560  
EP_STALLED
;

561 } i‡(
ªt
 !
USB_STATUS_OK
) {

562 
ï_°©e
[
ï
].
°©us
 = 
IDLE
;

563  
EP_INVALID
;

566  
EP_PENDING
;

567 
	}
}

569 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötWrôeResu…
(
uöt8_t
 
ídpoöt
)

571 i‡(
ídpoöt
 >
NUMBER_OF_ENDPOINTS
) {

572 
	`EFM_ASSERT
(
Ál£
);

573  
EP_INVALID
;

576 
ï_°©e
[
ídpoöt
].
°©us
) {

577 
WRITE_PENDING
:

578  
EP_PENDING
;

580 
WRITE_COMPLETE
:

581 
ï_°©e
[
ídpoöt
].
°©us
 = 
IDLE
;

582  
EP_COMPLETED
;

584 
FAILED_STALLED
:

585 
ï_°©e
[
ídpoöt
].
°©us
 = 
IDLE
;

586  
EP_STALLED
;

589 
ï_°©e
[
ídpoöt
].
°©us
 = 
IDLE
;

590  
EP_INVALID
;

592 
	}
}

594 
	gUSBHAL
::
	$°ÆlEndpoöt
(
uöt8_t
 
ídpoöt
)

596 
TRACE_FUNC_IN
;

598 
	`EFM_ASSERT
(
ídpoöt
 < 
NUMBER_OF_ENDPOINTS
);

599 
	`EFM_ASSERT
((
ídpoöt
 !
EP0OUT
Ë&& (ídpoöà!
EP0IN
));

601 
	`USBD_SèŒEp
(
	`USB_EP_TO_ADDR
(
ídpoöt
));

602 
	}
}

604 
	gUSBHAL
::
	$un°ÆlEndpoöt
(
uöt8_t
 
ídpoöt
)

606 
TRACE_FUNC_IN
;

608 
	`EFM_ASSERT
(
ídpoöt
 < 
NUMBER_OF_ENDPOINTS
);

609 
	`EFM_ASSERT
((
ídpoöt
 !
EP0OUT
Ë&& (ídpoöà!
EP0IN
));

611 
	`USBD_UnSèŒEp
(
	`USB_EP_TO_ADDR
(
ídpoöt
));

612 
	}
}

614 
boﬁ
 
	gUSBHAL
::
	$ªÆi£Endpoöt
(
uöt8_t
 
ídpoöt
, 
uöt32_t
 
maxPackë
, uöt32_à
›ti⁄s
)

616 
	`TRACE_FUNC_IN_P
("ídpoöà%d,Öackësizê%ld, o±i⁄†0x%lx", 
ídpoöt
,

617 
maxPackë
, 
›ti⁄s
);

619 
mu…
 = 1;

620 
ty≥
 = 
USB_EPTYPE_INTR
;

622 i‡(
ídpoöt
 >
NUMBER_OF_ENDPOINTS
) {

623 
	`EFM_ASSERT
(
Ál£
);

624  
Ál£
;

627 i‡(
ídpoöt
 =
EP0IN
 ||Éndpoöà=
EP0OUT
) {

628 
	`EFM_ASSERT
(
Ál£
);

629  
Ál£
;

632 
ï_°©e
[
ídpoöt
].
max_∑ckë
 = 0;

634 i‡(
ídpoöt
 =
EPISO_OUT
 ||Éndpoöà=
EPISO_IN
) {

635 i‡(
maxPackë
 > 
MAX_PACKET_SIZE_EPISO
) {

636 
	`EFM_ASSERT
(
Ál£
);

637  
Ál£
;

639 } i‡((
maxPackë
 > 
MAX_PACKET_SIZE_EPBULK
Ë|| (maxPackë > 
MAX_PACKET_SIZE_EPINT
)) {

640 
	`EFM_ASSERT
(
Ál£
);

641  
Ál£
;

651 
	`USBD_SëUsbSèã
(
USBD_STATE_CONFIGURED
);

654 
ídpoöt
) {

655 
EPBULK_OUT
:

656 
EPBULK_IN
:

657 
ty≥
 = 
USB_EPTYPE_BULK
;

658 
mu…
 = 2;

660 
EPINT_OUT
:

661 
EPINT_IN
:

662 
ty≥
 = 
USB_EPTYPE_INTR
;

663 
mu…
 = 1;

665 
EPISO_OUT
:

666 
EPISO_IN
:

667 
ty≥
 = 
USB_EPTYPE_ISOC
;

668 
mu…
 = 2;

673 if–
›ti⁄s
 & 
ISOCHRONOUS
 ) {

674 
ty≥
 = 
USB_EPTYPE_ISOC
;

675 
mu…
 = 2;

676 } i‡–
›ti⁄s
 & 
RATE_FEEDBACK_MODE
 ) {

678 
ty≥
 = 
USB_EPTYPE_INTR
;

679 
mu…
 = 1;

682 #ifde‡
USB_USE_DYNAMIC_MEMORY


683 i‡(
ï_°©e
[
ídpoöt
].
d©a_buf
) {

684 
	`‰ì
(
ï_°©e
[
ídpoöt
].
d©a_buf
);

687 
ï_°©e
[
ídpoöt
].
d©a_buf
 = (
uöt8_t
 *)
	`mÆloc
(
maxPackë
);

689 i‡(!
ï_°©e
[
ídpoöt
].
d©a_buf
) {

690 
	`EFM_ASSERT
(
Ál£
);

691  
Ál£
;

695 
ªt
 = 
	`USBD_AddEndpoöt
(
	`USB_EP_TO_ADDR
(
ídpoöt
), 
ty≥
, 
maxPackë
, 
mu…
);

697 i‡(
ªt
 =
USB_STATUS_OK
) {

698 
ï_°©e
[
ídpoöt
].
°©us
 = 
IDLE
;

699 
ï_°©e
[
ídpoöt
].
max_∑ckë
 = 
maxPackë
;

700  
åue
;

702  
Ál£
;

704 
	}
}

706 
boﬁ
 
	gUSBHAL
::
	$gëEndpoötSèŒSèã
(
ídpoöt
)

708 
TRACE_FUNC_IN
;

709 i‡(
ídpoöt
 >
NUMBER_OF_ENDPOINTS
) {

710 
	`EFM_ASSERT
(
Ál£
);

711  
Ál£
;

713  
	`USBD_EpIsSèŒed
(
	`USB_EP_TO_ADDR
(
ídpoöt
));

714 
	}
}

716 
	$run_cmd
(
USBISRComm™d
 
cmd
, 
uöt32_t
 
∑øm
)

718 i‡(
usb_i§cmd
 !
CMD_HANDLED
 || 
cmd
 >
CMD_ENUM_END_MARKER
) {

719 
	`EFM_ASSERT
(
Ál£
);

720 
	`ab‹t
();

723 
usb_i§cmd
 = 
cmd
;

724 
usb_i§cmd_∑øm
 = 
∑øm
;

725 
	`i§±r
();

726 
	}
}

728 
	gUSBHAL
::
	$_usbi§
()

730 
	`EFM_ASSERT
(
ö°™˚
);

731 
ö°™˚
->
	`usbi§
();

732 
	}
}

734 
	gUSBHAL
::
	$usbi§
()

742 
	`EFM_ASSERT
(
usb_i§cmd
 !
CMD_HANDLED
);

743 
usb_i§cmd
) {

744 
CMD_EP0SETUP
:

745 
this
->
	`EP0£tupCÆlback
();

747 
CMD_EP0IN
:

748 
this
->
	`EP0ö
();

750 
CMD_EP0OUT
:

751 
this
->
	`EP0out
();

753 
CMD_BUSRESET
:

754 
this
->
	`busRe£t
();

756 
CMD_EP_XFER_COMPLETED
:

757 i‡(
ïCÆlback
[
usb_i§cmd_∑øm
] && 
ö°™˚
) {

758 (
ö°™˚
->*(
ïCÆlback
[
usb_i§cmd_∑øm
]))();

761 
CMD_SOF
:

762 
this
->
	`SOF
(
usb_i§cmd_∑øm
);

764 
CMD_SUSPEND_STATE_CHANGED
:

765 
this
->
	`su•ídSèãCh™ged
(
usb_i§cmd_∑øm
);

768 
	`EFM_ASSERT
(
Ál£
);

771 
usb_i§cmd
 = 
CMD_HANDLED
;

772 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBHAL_KL25Z.cpp

19 #i‡
deföed
(
TARGET_KL25Z
Ë| deföed(
TARGET_KL43Z
Ë| deföed(
TARGET_KL46Z
Ë| deföed(
TARGET_K20D50M
Ë| deföed(
TARGET_K64F
Ë| deföed(
TARGET_K22F
Ë| deföed(
TARGET_TEENSY3_1
)

21 
	~"USBHAL.h
"

23 
USBHAL
 * 
	gUSBHAL
::
ö°™˚
;

25 vﬁ©ûê
	gïCom∂ëe
 = 0;

28 
	#EP
(
ídpoöt
Ë(1<<”ndpoöt))

	)

31 
	#PHY_TO_LOG
(
ídpoöt
Ë(”ndpoöt)>>1)

	)

34 
	#IN_EP
(
ídpoöt
Ë(”ndpoötË& 1U ? 
åue
 : 
Ál£
)

	)

35 
	#OUT_EP
(
ídpoöt
Ë(”ndpoötË& 1U ? 
Ál£
 : 
åue
)

	)

37 
	#BD_OWN_MASK
 (1<<7)

	)

38 
	#BD_DATA01_MASK
 (1<<6)

	)

39 
	#BD_KEEP_MASK
 (1<<5)

	)

40 
	#BD_NINC_MASK
 (1<<4)

	)

41 
	#BD_DTS_MASK
 (1<<3)

	)

42 
	#BD_STALL_MASK
 (1<<2)

	)

44 
	#TX
 1

	)

45 
	#RX
 0

	)

46 
	#ODD
 0

	)

47 
	#EVEN
 1

	)

49 
	#EP_BDT_IDX
(
ï
, 
dú
, 
odd
Ë((”∞* 4Ë+ (2 * dúË+ (1 * odd)))

	)

51 
	#SETUP_TOKEN
 0x0D

	)

52 
	#IN_TOKEN
 0x09

	)

53 
	#OUT_TOKEN
 0x01

	)

54 
	#TOK_PID
(
idx
Ë((
bdt
[idx].
öfo
 >> 2Ë& 0x0F)

	)

57 
	sBDT
 {

58 
uöt8_t
 
	möfo
;

59 
uöt8_t
 
	mdummy
;

60 
uöt16_t
 
	mbyã_cou¡
;

61 
uöt32_t
 
	maddªss
;

62 } 
	tBDT
;

68 
__©åibuã__
((
	$__Æig√d__
(512))Ë
BDT
 
bdt
[
NUMBER_OF_PHYSICAL_ENDPOINTS
 * 2];

69 
uöt8_t
 * 
ídpoöt_buf„r
[(
NUMBER_OF_PHYSICAL_ENDPOINTS
 - 2) * 2];

70 
uöt8_t
 * 
ídpoöt_buf„r_iso
[2*2];

72 
uöt8_t
 
£t_addr
 = 0;

73 
uöt8_t
 
addr
 = 0;

75 
uöt32_t
 
D©a1
 = 0x55555555;

77 
uöt32_t
 
	$‰ameNumbî
() {

78 ((
USB0
->
FRMNUML
 | (USB0->
FRMNUMH
 << 8)) & 0x07FF);

79 
	}
}

81 
uöt32_t
 
	gUSBHAL
::
	$ídpoötRódc‹e
(
uöt8_t
 
ídpoöt
, uöt8_à*
buf„r
) {

83 
	}
}

85 
	gUSBHAL
::
	$USBHAL
() {

87 
	`NVIC_DißbÀIRQ
(
USB0_IRQn
);

89 #i‡
	`deföed
(
TARGET_K64F
)

90 
MPU
->
CESR
=0;

93 
ïCÆlback
[0] = &
USBHAL
::
EP1_OUT_ˇŒback
;

94 
ïCÆlback
[1] = &
USBHAL
::
EP1_IN_ˇŒback
;

95 
ïCÆlback
[2] = &
USBHAL
::
EP2_OUT_ˇŒback
;

96 
ïCÆlback
[3] = &
USBHAL
::
EP2_IN_ˇŒback
;

97 
ïCÆlback
[4] = &
USBHAL
::
EP3_OUT_ˇŒback
;

98 
ïCÆlback
[5] = &
USBHAL
::
EP3_IN_ˇŒback
;

99 
ïCÆlback
[6] = &
USBHAL
::
EP4_OUT_ˇŒback
;

100 
ïCÆlback
[7] = &
USBHAL
::
EP4_IN_ˇŒback
;

101 
ïCÆlback
[8] = &
USBHAL
::
EP5_OUT_ˇŒback
;

102 
ïCÆlback
[9] = &
USBHAL
::
EP5_IN_ˇŒback
;

103 
ïCÆlback
[10] = &
USBHAL
::
EP6_OUT_ˇŒback
;

104 
ïCÆlback
[11] = &
USBHAL
::
EP6_IN_ˇŒback
;

105 
ïCÆlback
[12] = &
USBHAL
::
EP7_OUT_ˇŒback
;

106 
ïCÆlback
[13] = &
USBHAL
::
EP7_IN_ˇŒback
;

107 
ïCÆlback
[14] = &
USBHAL
::
EP8_OUT_ˇŒback
;

108 
ïCÆlback
[15] = &
USBHAL
::
EP8_IN_ˇŒback
;

109 
ïCÆlback
[16] = &
USBHAL
::
EP9_OUT_ˇŒback
;

110 
ïCÆlback
[17] = &
USBHAL
::
EP9_IN_ˇŒback
;

111 
ïCÆlback
[18] = &
USBHAL
::
EP10_OUT_ˇŒback
;

112 
ïCÆlback
[19] = &
USBHAL
::
EP10_IN_ˇŒback
;

113 
ïCÆlback
[20] = &
USBHAL
::
EP11_OUT_ˇŒback
;

114 
ïCÆlback
[21] = &
USBHAL
::
EP11_IN_ˇŒback
;

115 
ïCÆlback
[22] = &
USBHAL
::
EP12_OUT_ˇŒback
;

116 
ïCÆlback
[23] = &
USBHAL
::
EP12_IN_ˇŒback
;

117 
ïCÆlback
[24] = &
USBHAL
::
EP13_OUT_ˇŒback
;

118 
ïCÆlback
[25] = &
USBHAL
::
EP13_IN_ˇŒback
;

119 
ïCÆlback
[26] = &
USBHAL
::
EP14_OUT_ˇŒback
;

120 
ïCÆlback
[27] = &
USBHAL
::
EP14_IN_ˇŒback
;

121 
ïCÆlback
[28] = &
USBHAL
::
EP15_OUT_ˇŒback
;

122 
ïCÆlback
[29] = &
USBHAL
::
EP15_IN_ˇŒback
;

124 #i‡
	`deföed
(
TARGET_KL43Z
)

126 
SIM
->
SCGC4
 |
SIM_SCGC4_USBFS_MASK
;

129 
USB0
->
CLK_RECOVER_IRC_EN
 |
USB_CLK_RECOVER_IRC_EN_IRC_EN_MASK
;

132 
USB0
->
CLK_RECOVER_CTRL
 |
USB_CLK_RECOVER_CTRL_CLOCK_RECOVER_EN_MASK
;

135 
SIM
->
SOPT2
 |
SIM_SOPT2_USBSRC_MASK
;

138 
SIM
->
SOPT2
 &~
SIM_SOPT2_PLLFLLSEL_MASK
;

139 
SIM
->
SOPT2
 |(
SIM_SOPT2_USBSRC_MASK
 | (1 << 
SIM_SOPT2_PLLFLLSEL_SHIFT
));

142 
SIM
->
SCGC4
 |
SIM_SCGC4_USBOTG_MASK
;

146 
ö°™˚
 = 
this
;

147 
	`NVIC_SëVe˘‹
(
USB0_IRQn
, (
uöt32_t
)&
_usbi§
);

148 
	`NVIC_E«bÀIRQ
(
USB0_IRQn
);

152 
USB0
->
USBTRC0
 |
USB_USBTRC0_USBRESET_MASK
;

153 
USB0
->
USBTRC0
 & 
USB_USBTRC0_USBRESET_MASK
);

156 
USB0
->
BDTPAGE1
 = (
uöt8_t
)((
uöt32_t
)
bdt
>>8);

157 
USB0
->
BDTPAGE2
 = (
uöt8_t
)((
uöt32_t
)
bdt
>>16);

158 
USB0
->
BDTPAGE3
 = (
uöt8_t
)((
uöt32_t
)
bdt
>>24);

161 
USB0
->
ISTAT
 = 0xff;

164 
USB0
->
INTEN
 |
USB_INTEN_TOKDNEEN_MASK
 |

165 
USB_INTEN_SOFTOKEN_MASK
 |

166 
USB_INTEN_ERROREN_MASK
 |

167 
USB_INTEN_USBRSTEN_MASK
;

170 
USB0
->
USBCTRL
 &~(
USB_USBCTRL_PDE_MASK
 | 
USB_USBCTRL_SUSP_MASK
);

172 
USB0
->
USBTRC0
 |= 0x40;

173 
	}
}

175 
	gUSBHAL
::~
	$USBHAL
(Ë{ 
	}
}

177 
USBHAL
::
	$c⁄√˘
() {

179 
USB0
->
CTL
 |
USB_CTL_USBENSOFEN_MASK
;

181 
USB0
->
CONTROL
 |
USB_CONTROL_DPPULLUPNONOTG_MASK
;

182 
	}
}

184 
	gUSBHAL
::
	$disc⁄√˘
() {

186 
USB0
->
CTL
 &~
USB_CTL_USBENSOFEN_MASK
;

188 
USB0
->
CONTROL
 &~
USB_CONTROL_DPPULLUPNONOTG_MASK
;

191 
i
 = 0; i<(
NUMBER_OF_PHYSICAL_ENDPOINTS
 - 2) * 2; i++) {

192 
	`‰ì
(
ídpoöt_buf„r
[
i
]);

193 
ídpoöt_buf„r
[
i
] = 
NULL
;

195 
	`‰ì
(
ídpoöt_buf„r_iso
[2]);

196 
ídpoöt_buf„r_iso
[2] = 
NULL
;

197 
	`‰ì
(
ídpoöt_buf„r_iso
[0]);

198 
ídpoöt_buf„r_iso
[0] = 
NULL
;

199 
	}
}

201 
	gUSBHAL
::
	$c⁄figuªDevi˚
() {

203 
	}
}

205 
USBHAL
::
	$unc⁄figuªDevi˚
() {

207 
	}
}

209 
USBHAL
::
	$£tAddªss
(
uöt8_t
 
addªss
) {

213 
£t_addr
 = 1;

214 
addr
 = 
addªss
;

215 
	}
}

217 
boﬁ
 
	gUSBHAL
::
	$ªÆi£Endpoöt
(
uöt8_t
 
ídpoöt
, 
uöt32_t
 
maxPackë
, uöt32_à
Êags
) {

218 
uöt32_t
 
h™dshake_Êag
 = 0;

219 
uöt8_t
 * 
buf
;

221 i‡(
ídpoöt
 > 
NUMBER_OF_PHYSICAL_ENDPOINTS
 - 1) {

222  
Ál£
;

225 
uöt32_t
 
log_ídpoöt
 = 
	`PHY_TO_LOG
(
ídpoöt
);

227 i‡((
Êags
 & 
ISOCHRONOUS
) == 0) {

228 
h™dshake_Êag
 = 
USB_ENDPT_EPHSHK_MASK
;

229 i‡(
	`IN_EP
(
ídpoöt
)) {

230 i‡(
ídpoöt_buf„r
[
	`EP_BDT_IDX
(
log_ídpoöt
, 
TX
, 
ODD
)] =
NULL
)

231 
ídpoöt_buf„r
[
	`EP_BDT_IDX
(
log_ídpoöt
, 
TX
, 
ODD
)] = (
uöt8_t
 *Ë
	`mÆloc
 (64);

232 
buf
 = &
ídpoöt_buf„r
[
	`EP_BDT_IDX
(
log_ídpoöt
, 
TX
, 
ODD
)][0];

234 i‡(
ídpoöt_buf„r
[
	`EP_BDT_IDX
(
log_ídpoöt
, 
RX
, 
ODD
)] =
NULL
)

235 
ídpoöt_buf„r
[
	`EP_BDT_IDX
(
log_ídpoöt
, 
RX
, 
ODD
)] = (
uöt8_t
 *Ë
	`mÆloc
 (64);

236 
buf
 = &
ídpoöt_buf„r
[
	`EP_BDT_IDX
(
log_ídpoöt
, 
RX
, 
ODD
)][0];

239 i‡(
	`IN_EP
(
ídpoöt
)) {

240 i‡(
ídpoöt_buf„r_iso
[2] =
NULL
)

241 
ídpoöt_buf„r_iso
[2] = (
uöt8_t
 *Ë
	`mÆloc
 (1023);

242 
buf
 = &
ídpoöt_buf„r_iso
[2][0];

244 i‡(
ídpoöt_buf„r_iso
[0] =
NULL
)

245 
ídpoöt_buf„r_iso
[0] = (
uöt8_t
 *Ë
	`mÆloc
 (1023);

246 
buf
 = &
ídpoöt_buf„r_iso
[0][0];

251 i‡(
	`IN_EP
(
ídpoöt
)) {

252 
USB0
->
ENDPOINT
[
log_ídpoöt
].
ENDPT
 |
h™dshake_Êag
 |

253 
USB_ENDPT_EPTXEN_MASK
;

254 
bdt
[
	`EP_BDT_IDX
(
log_ídpoöt
, 
TX
, 
ODD
 )].
addªss
 = (
uöt32_t
Ë
buf
;

255 
bdt
[
	`EP_BDT_IDX
(
log_ídpoöt
, 
TX
, 
EVEN
)].
addªss
 = 0;

259 
USB0
->
ENDPOINT
[
log_ídpoöt
].
ENDPT
 |
h™dshake_Êag
 |

260 
USB_ENDPT_EPRXEN_MASK
;

261 
bdt
[
	`EP_BDT_IDX
(
log_ídpoöt
, 
RX
, 
ODD
 )].
byã_cou¡
 = 
maxPackë
;

262 
bdt
[
	`EP_BDT_IDX
(
log_ídpoöt
, 
RX
, 
ODD
 )].
addªss
 = (
uöt32_t
Ë
buf
;

263 
bdt
[
	`EP_BDT_IDX
(
log_ídpoöt
, 
RX
, 
ODD
 )].
öfo
 = 
BD_OWN_MASK
 | 
BD_DTS_MASK
;

264 
bdt
[
	`EP_BDT_IDX
(
log_ídpoöt
, 
RX
, 
EVEN
)].
öfo
 = 0;

267 
D©a1
 |(1 << 
ídpoöt
);

269  
åue
;

270 
	}
}

273 
	gUSBHAL
::
	$EP0£tup
(
uöt8_t
 *
buf„r
) {

274 
uöt32_t
 
sz
;

275 
	`ídpoötRódResu…
(
EP0OUT
, 
buf„r
, &
sz
);

276 
	}
}

278 
	gUSBHAL
::
	$EP0ªadSège
() {

279 
D©a1
 &= ~1UL;

280 
bdt
[0].
öfo
 = (
BD_DTS_MASK
 | 
BD_OWN_MASK
);

281 
	}
}

283 
	gUSBHAL
::
	$EP0ªad
() {

284 
uöt32_t
 
idx
 = 
	`EP_BDT_IDX
(
	`PHY_TO_LOG
(
EP0OUT
), 
RX
, 0);

285 
bdt
[
idx
].
byã_cou¡
 = 
MAX_PACKET_SIZE_EP0
;

286 
	}
}

288 
uöt32_t
 
	gUSBHAL
::
	$EP0gëRódResu…
(
uöt8_t
 *
buf„r
) {

289 
uöt32_t
 
sz
;

290 
	`ídpoötRódResu…
(
EP0OUT
, 
buf„r
, &
sz
);

291  
sz
;

292 
	}
}

294 
	gUSBHAL
::
	$EP0wrôe
(
uöt8_t
 *
buf„r
, 
uöt32_t
 
size
) {

295 
	`ídpoötWrôe
(
EP0IN
, 
buf„r
, 
size
);

296 
	}
}

298 
	gUSBHAL
::
	$EP0gëWrôeResu…
() {

299 
	}
}

301 
USBHAL
::
	$EP0°Æl
() {

302 
	`°ÆlEndpoöt
(
EP0OUT
);

303 
	}
}

305 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötRód
(
uöt8_t
 
ídpoöt
, 
uöt32_t
 
maximumSize
) {

306 
ídpoöt
 = 
	`PHY_TO_LOG
(endpoint);

307 
uöt32_t
 
idx
 = 
	`EP_BDT_IDX
(
ídpoöt
, 
RX
, 0);

308 
bdt
[
idx
].
byã_cou¡
 = 
maximumSize
;

309  
EP_PENDING
;

310 
	}
}

312 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötRódResu…
(
uöt8_t
 
ídpoöt
, uöt8_à* 
buf„r
, 
uöt32_t
 *
byãsRód
) {

313 
uöt32_t
 
n
, 
sz
, 
idx
, 
£tup
 = 0;

314 
uöt8_t
 
nŸ_iso
;

315 
uöt8_t
 * 
ï_buf
;

317 
uöt32_t
 
log_ídpoöt
 = 
	`PHY_TO_LOG
(
ídpoöt
);

319 i‡(
ídpoöt
 > 
NUMBER_OF_PHYSICAL_ENDPOINTS
 - 1) {

320  
EP_INVALID
;

324 i‡(
	`IN_EP
(
ídpoöt
)) {

325  
EP_INVALID
;

328 
idx
 = 
	`EP_BDT_IDX
(
log_ídpoöt
, 
RX
, 0);

329 
sz
 = 
bdt
[
idx
].
byã_cou¡
;

330 
nŸ_iso
 = 
USB0
->
ENDPOINT
[
log_ídpoöt
].
ENDPT
 & 
USB_ENDPT_EPHSHK_MASK
;

333 i‡((
log_ídpoöt
 !0Ë&& 
nŸ_iso
 && !(
ïCom∂ëe
 & 
	`EP
(
ídpoöt
))) {

334  
EP_PENDING
;

337 i‡((
log_ídpoöt
 =0Ë&& (
	`TOK_PID
(
idx
Ë=
SETUP_TOKEN
)) {

338 
£tup
 = 1;

342 i‡(
nŸ_iso
) {

343 
ï_buf
 = 
ídpoöt_buf„r
[
idx
];

345 
ï_buf
 = 
ídpoöt_buf„r_iso
[0];

348 
n
 = 0;Ç < 
sz
;Ç++) {

349 
buf„r
[
n
] = 
ï_buf
[n];

352 i‡(((
D©a1
 >> 
ídpoöt
Ë& 1Ë=((
bdt
[
idx
].
öfo
 >> 6) & 1)) {

353 i‡(
£tup
 && (
buf„r
[6] == 0))

354 
D©a1
 &= ~1UL;

356 
D©a1
 ^(1 << 
ídpoöt
);

359 i‡(((
D©a1
 >> 
ídpoöt
) & 1)) {

360 
bdt
[
idx
].
öfo
 = 
BD_DTS_MASK
 | 
BD_DATA01_MASK
 | 
BD_OWN_MASK
;

363 
bdt
[
idx
].
öfo
 = 
BD_DTS_MASK
 | 
BD_OWN_MASK
;

366 
USB0
->
CTL
 &~
USB_CTL_TXSUSPENDTOKENBUSY_MASK
;

367 *
byãsRód
 = 
sz
;

369 
ïCom∂ëe
 &~
	`EP
(
ídpoöt
);

370  
EP_COMPLETED
;

371 
	}
}

373 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötWrôe
(
uöt8_t
 
ídpoöt
, uöt8_à*
d©a
, 
uöt32_t
 
size
) {

374 
uöt32_t
 
idx
, 
n
;

375 
uöt8_t
 * 
ï_buf
;

377 i‡(
ídpoöt
 > 
NUMBER_OF_PHYSICAL_ENDPOINTS
 - 1) {

378  
EP_INVALID
;

382 i‡(
	`OUT_EP
(
ídpoöt
)) {

383  
EP_INVALID
;

386 
idx
 = 
	`EP_BDT_IDX
(
	`PHY_TO_LOG
(
ídpoöt
), 
TX
, 0);

387 
bdt
[
idx
].
byã_cou¡
 = 
size
;

391 i‡(
USB0
->
ENDPOINT
[
	`PHY_TO_LOG
(
ídpoöt
)].
ENDPT
 & 
USB_ENDPT_EPHSHK_MASK
) {

392 
ï_buf
 = 
ídpoöt_buf„r
[
idx
];

394 
ï_buf
 = 
ídpoöt_buf„r_iso
[2];

397 
n
 = 0;Ç < 
size
;Ç++) {

398 
ï_buf
[
n
] = 
d©a
[n];

401 i‡((
D©a1
 >> 
ídpoöt
) & 1) {

402 
bdt
[
idx
].
öfo
 = 
BD_OWN_MASK
 | 
BD_DTS_MASK
;

404 
bdt
[
idx
].
öfo
 = 
BD_OWN_MASK
 | 
BD_DTS_MASK
 | 
BD_DATA01_MASK
;

407 
D©a1
 ^(1 << 
ídpoöt
);

409  
EP_PENDING
;

410 
	}
}

412 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötWrôeResu…
(
uöt8_t
 
ídpoöt
) {

413 i‡(
ïCom∂ëe
 & 
	`EP
(
ídpoöt
)) {

414 
ïCom∂ëe
 &~
	`EP
(
ídpoöt
);

415  
EP_COMPLETED
;

418  
EP_PENDING
;

419 
	}
}

421 
	gUSBHAL
::
	$°ÆlEndpoöt
(
uöt8_t
 
ídpoöt
) {

422 
USB0
->
ENDPOINT
[
	`PHY_TO_LOG
(
ídpoöt
)].
ENDPT
 |
USB_ENDPT_EPSTALL_MASK
;

423 
	}
}

425 
	gUSBHAL
::
	$un°ÆlEndpoöt
(
uöt8_t
 
ídpoöt
) {

426 
USB0
->
ENDPOINT
[
	`PHY_TO_LOG
(
ídpoöt
)].
ENDPT
 &~
USB_ENDPT_EPSTALL_MASK
;

427 
	}
}

429 
boﬁ
 
	gUSBHAL
::
	$gëEndpoötSèŒSèã
(
uöt8_t
 
ídpoöt
) {

430 
uöt8_t
 
°Æl
 = (
USB0
->
ENDPOINT
[
	`PHY_TO_LOG
(
ídpoöt
)].
ENDPT
 & 
USB_ENDPT_EPSTALL_MASK
);

431  (
°Æl
Ë? 
åue
 : 
Ál£
;

432 
	}
}

434 
	gUSBHAL
::
	$ªmŸeWakeup
() {

436 
	}
}

439 
USBHAL
::
	$_usbi§
() {

440 
ö°™˚
->
	`usbi§
();

441 
	}
}

444 
	gUSBHAL
::
	$usbi§
() {

445 
uöt8_t
 
i
;

446 
uöt8_t
 
i°©
 = 
USB0
->
ISTAT
;

449 i‡(
i°©
 & 
USB_ISTAT_USBRST_MASK
) {

451 
i
 = 0; i < 16; i++) {

452 
USB0
->
ENDPOINT
[
i
].
ENDPT
 = 0x00;

456 
	`ªÆi£Endpoöt
(
EP0OUT
, 
MAX_PACKET_SIZE_EP0
, 0);

457 
	`ªÆi£Endpoöt
(
EP0IN
, 
MAX_PACKET_SIZE_EP0
, 0);

459 
D©a1
 = 0x55555555;

460 
USB0
->
CTL
 |
USB_CTL_ODDRST_MASK
;

462 
USB0
->
ISTAT
 = 0xFF;

463 
USB0
->
ERRSTAT
 = 0xFF;

464 
USB0
->
ERREN
 = 0xFF;

465 
USB0
->
ADDR
 = 0x00;

471 i‡(
i°©
 & 
USB_ISTAT_RESUME_MASK
) {

472 
USB0
->
ISTAT
 = 
USB_ISTAT_RESUME_MASK
;

476 i‡(
i°©
 & 
USB_ISTAT_SOFTOK_MASK
) {

477 
USB0
->
ISTAT
 = 
USB_ISTAT_SOFTOK_MASK
;

479 
	`SOF
(
	`‰ameNumbî
());

483 i‡(
i°©
 & 1<<7) {

484 i‡(
USB0
->
ENDPOINT
[0].
ENDPT
 & 
USB_ENDPT_EPSTALL_MASK
)

485 
USB0
->
ENDPOINT
[0].
ENDPT
 &~
USB_ENDPT_EPSTALL_MASK
;

486 
USB0
->
ISTAT
 |
USB_ISTAT_STALL_MASK
;

490 i‡(
i°©
 & 1<<3) {

491 
uöt32_t
 
num
 = (
USB0
->
STAT
 >> 4) & 0x0F;

492 
uöt32_t
 
dú
 = (
USB0
->
STAT
 >> 3) & 0x01;

493 
uöt32_t
 
ev_odd
 = (
USB0
->
STAT
 >> 2) & 0x01;

494 
ídpoöt
 = (
num
 << 1Ë| 
dú
;

497 i‡((
num
 =0Ë&& (
	`TOK_PID
((
	`EP_BDT_IDX
“um, 
dú
, 
ev_odd
))Ë=
SETUP_TOKEN
)) {

498 
D©a1
 &= ~0x02;

499 
bdt
[
	`EP_BDT_IDX
(0, 
TX
, 
EVEN
)].
öfo
 &~
BD_OWN_MASK
;

500 
bdt
[
	`EP_BDT_IDX
(0, 
TX
, 
ODD
)].
öfo
 &~
BD_OWN_MASK
;

503 
	`EP0£tupCÆlback
();

507 i‡(
	`TOK_PID
((
	`EP_BDT_IDX
(
num
, 
dú
, 
ev_odd
))Ë=
OUT_TOKEN
) {

508 i‡(
num
 == 0)

509 
	`EP0out
();

511 
ïCom∂ëe
 |
	`EP
(
ídpoöt
);

512 i‡((
ö°™˚
->*(
ïCÆlback
[
ídpoöt
 - 2]))()) {

513 
ïCom∂ëe
 &~
	`EP
(
ídpoöt
);

519 i‡(
	`TOK_PID
((
	`EP_BDT_IDX
(
num
, 
dú
, 
ev_odd
))Ë=
IN_TOKEN
) {

520 i‡(
num
 == 0) {

521 
	`EP0ö
();

522 i‡(
£t_addr
 == 1) {

523 
USB0
->
ADDR
 = 
addr
 & 0x7F;

524 
£t_addr
 = 0;

528 
ïCom∂ëe
 |
	`EP
(
ídpoöt
);

529 i‡((
ö°™˚
->*(
ïCÆlback
[
ídpoöt
 - 2]))()) {

530 
ïCom∂ëe
 &~
	`EP
(
ídpoöt
);

536 
USB0
->
ISTAT
 = 
USB_ISTAT_TOKDNE_MASK
;

540 i‡(
i°©
 & 1<<4) {

541 
USB0
->
ISTAT
 |
USB_ISTAT_SLEEP_MASK
;

545 i‡(
i°©
 & 
USB_ISTAT_ERROR_MASK
) {

546 
USB0
->
ERRSTAT
 = 0xFF;

547 
USB0
->
ISTAT
 |
USB_ISTAT_ERROR_MASK
;

549 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBHAL_LPC11U.cpp

19 #i‡
deföed
(
TARGET_LPC11UXX
Ë|| deföed(
TARGET_LPC11U6X
Ë|| deföed(
TARGET_LPC1347
Ë|| deföed(
TARGET_LPC1549
)

21 #i‡
deföed
(
TARGET_LPC1347
Ë|| deföed(
TARGET_LPC1549
)

22 
	#USB_IRQ
 
USB_IRQ_IRQn


	)

24 
	#USB_IRQ
 
USB_IRQn


	)

27 
	~"USBHAL.h
"

29 
USBHAL
 * 
	gUSBHAL
::
ö°™˚
;

30 #i‡
deföed
(
TARGET_LPC1549
)

31 
uöt8_t
 
	gusbmem
[2048] 
__©åibuã__
((
Æig√d
(2048)));

35 
	#LAST_PHYSICAL_ENDPOINT
 (
NUMBER_OF_PHYSICAL_ENDPOINTS
-1)

	)

38 
	#EP
(
ídpoöt
Ë(1UL<<ídpoöt)

	)

41 
	#PHY_TO_LOG
(
ídpoöt
Ë(”ndpoöt)>>1)

	)

44 
	#IN_EP
(
ídpoöt
Ë(”ndpoötË& 1U ? 
åue
 : 
Ál£
)

	)

45 
	#OUT_EP
(
ídpoöt
Ë(”ndpoötË& 1U ? 
Ál£
 : 
åue
)

	)

48 #i‡
deföed
(
TARGET_LPC1549
)

49 
	#USB_RAM_START
 ((
uöt32_t
)
usbmem
)

	)

50 
	#USB_RAM_SIZE
 (
usbmem
)

	)

52 
	#USB_RAM_START
 (0x20004000)

	)

53 
	#USB_RAM_SIZE
 (0x00000800)

	)

57 #i‡
deföed
(
TARGET_LPC1549
)

58 
	#CLK_USB
 (1UL<<23)

	)

60 
	#CLK_USB
 (1UL<<14)

	)

61 
	#CLK_USBRAM
 (1UL<<27)

	)

65 
	#FRAME_NR
(
a
) ((a) & 0x7ff)

66 

	)

68 
	#DEV_ADDR_MASK
 (0x7f)

69 
	#DEV_ADDR
(
a
Ë(◊Ë& 
DEV_ADDR_MASK
)

	)

70 
	#DEV_EN
 (1UL<<7)

71 
	#SETUP
 (1UL<<8)

72 
	#PLL_ON
 (1UL<<9)

73 
	#DCON
 (1UL<<16)

74 
	#DSUS
 (1UL<<17)

75 
	#DCON_C
 (1UL<<24)

76 
	#DSUS_C
 (1UL<<25)

77 
	#DRES_C
 (1UL<<26)

78 
	#VBUSDEBOUNCED
 (1UL<<28)

79 

	)

81 
	#CMDSTS_A
 (1UL<<31)

82 
	#CMDSTS_D
 (1UL<<30)

83 
	#CMDSTS_S
 (1UL<<29)

84 
	#CMDSTS_TR
 (1UL<<28)

85 
	#CMDSTS_RF
 (1UL<<27)

86 
	#CMDSTS_TV
 (1UL<<27)

87 
	#CMDSTS_T
 (1UL<<26)

88 
	#CMDSTS_NBYTES
(
n
) (((n)&0x3ff)<<16)

89 
	#CMDSTS_ADDRESS_OFFSET
(
a
) (((a)>>6)&0xffff)

90 

	)

91 
	#BYTES_REMAINING
(
s
) (((s)>>16)&0x3ff)

92 

	)

94 
	#FRAME_INT
 (1UL<<30)

	)

95 
	#DEV_INT
 (1UL<<31)

	)

97 vﬁ©ûê
	gïCom∂ëe
 = 0;

103 
uöt32_t
 
	mout
[2];

104 
uöt32_t
 
	mö
[2];

105 } 
	tPACKED
 
	tEP_COMMAND_STATUS
;

108 
uöt8_t
 
	mout
[
MAX_PACKET_SIZE_EP0
];

109 
uöt8_t
 
	mö
[
MAX_PACKET_SIZE_EP0
];

110 
uöt8_t
 
	m£tup
[
SETUP_PACKET_SIZE
];

111 } 
	tPACKED
 
	tCONTROL_TRANSFER
;

114 
uöt32_t
 
	mmaxPackë
;

115 
uöt32_t
 
	mbuf„r
[2];

116 
uöt32_t
 
	m›ti⁄s
;

117 } 
	tPACKED
 
	tEP_STATE
;

119 vﬁ©ûê
EP_STATE
 
	gídpoötSèã
[
NUMBER_OF_PHYSICAL_ENDPOINTS
];

122 
EP_COMMAND_STATUS
 *
	gï
 = 
NULL
;

125 
CONTROL_TRANSFER
 *
	g˘
 = 
NULL
;

129 vﬁ©ûê
uöt32_t
 
	gdevCmdSèt
;

132 
uöt32_t
 
	gusbRamPå
 = 
USB_RAM_START
;

133 
uöt32_t
 
	gïRamPå
 = 0;

135 
	#ROUND_UP_TO_MULTIPLE
(
x
, 
m
Ë((((x)+((m)-1))/(m))*(m))

	)

137 
USBMemC›y
(
uöt8_t
 *
d°
, uöt8_à*
§c
, 
uöt32_t
 
size
);

138 
	$USBMemC›y
(
uöt8_t
 *
d°
, uöt8_à*
§c
, 
uöt32_t
 
size
) {

139 i‡(
size
 > 0) {

141 *
d°
++ = *
§c
++;

142 } --
size
 > 0);

144 
	}
}

147 
	gUSBHAL
::
	$USBHAL
() {

148 
	`NVIC_DißbÀIRQ
(
USB_IRQ
);

151 
ïCÆlback
[0] = &
USBHAL
::
EP1_OUT_ˇŒback
;

152 
ïCÆlback
[1] = &
USBHAL
::
EP1_IN_ˇŒback
;

153 
ïCÆlback
[2] = &
USBHAL
::
EP2_OUT_ˇŒback
;

154 
ïCÆlback
[3] = &
USBHAL
::
EP2_IN_ˇŒback
;

155 
ïCÆlback
[4] = &
USBHAL
::
EP3_OUT_ˇŒback
;

156 
ïCÆlback
[5] = &
USBHAL
::
EP3_IN_ˇŒback
;

157 
ïCÆlback
[6] = &
USBHAL
::
EP4_OUT_ˇŒback
;

158 
ïCÆlback
[7] = &
USBHAL
::
EP4_IN_ˇŒback
;

160 #i‡
	`deföed
(
TARGET_LPC1549
)

162 
LPC_SYSCON
->
USBPLLCLKSEL
 = 0x01;

168 
LPC_SYSCON
->
USBPLLCTRL
 = (0x3 | (1UL << 6));

171 
LPC_SYSCON
->
PDRUNCFG
 &~(
CLK_USB
);

174 !(
LPC_SYSCON
->
USBPLLSTAT
 & 0x01));

177 
LPC_SYSCON
->
USBCLKSEL
 = 0x02;

178 
LPC_SYSCON
->
USBCLKDIV
 = 1;

181 
LPC_SYSCON
->
SYSAHBCLKCTRL1
 |
CLK_USB
;

184 
LPC_SYSCON
->
PDRUNCFG
 &= ~(1UL << 9);

187 
LPC_SYSCON
->
PRESETCTRL1
 |(
CLK_USB
);

188 
LPC_SYSCON
->
PRESETCTRL1
 &~(
CLK_USB
);

191 #i‡
	`deföed
(
TARGET_LPC11U35_401
Ë|| deföed(
TARGET_LPC11U35_501
Ë|| deföed(
TARGET_LPC11U68
)

193 
LPC_IOCON
->
PIO0_3
 = 0x00000009;

197 
LPC_IOCON
->
PIO0_6
 = 0x00000001;

200 
LPC_SYSCON
->
SYSAHBCLKCTRL
 |
CLK_USB
 | 
CLK_USBRAM
;

203 
LPC_USB
->
DEVCMDSTAT
 = 0;

207 
	`waô
(0.3);

211 
usbRamPå
 = 
	`ROUND_UP_TO_MULTIPLE
(usbRamPtr, 256);

212 
ï
 = (
EP_COMMAND_STATUS
 *)
usbRamPå
;

213 
usbRamPå
 +((
EP_COMMAND_STATUS
Ë* 
NUMBER_OF_LOGICAL_ENDPOINTS
);

214 
LPC_USB
->
EPLISTSTART
 = (
uöt32_t
)(
ï
) & 0xffffff00;

218 
usbRamPå
 = 
	`ROUND_UP_TO_MULTIPLE
(usbRamPtr, 64);

219 
˘
 = (
CONTROL_TRANSFER
 *)
usbRamPå
;

220 
usbRamPå
 +(
CONTROL_TRANSFER
);

221 
LPC_USB
->
DATABUFSTART
 =(
uöt32_t
)(
˘
) & 0xffc00000;

224 
ï
[0].
out
[0] = 0;

225 
ï
[0].
ö
[0] = 0;

226 
ï
[0].
out
[1] = 
	`CMDSTS_ADDRESS_OFFSET
((
uöt32_t
)
˘
->
£tup
);

230 
LPC_USB
->
INTROUTING
 = 0;

233 
devCmdSèt
 = 
	`DEV_ADDR
(0Ë| 
DEV_EN
 | 
DSUS
;

234 
LPC_USB
->
DEVCMDSTAT
 = 
devCmdSèt
;

237 
LPC_USB
->
INTEN
 = 
DEV_INT
 | 
	`EP
(
EP0IN
Ë| EP(
EP0OUT
Ë| 
FRAME_INT
;

238 
ö°™˚
 = 
this
;

241 
	`NVIC_SëVe˘‹
(
USB_IRQ
, (
uöt32_t
)&
_usbi§
);

242 
	}
}

244 
	gUSBHAL
::~
	$USBHAL
() {

246 
LPC_USB
->
DEVCMDSTAT
 = 0;

248 
	`NVIC_DißbÀIRQ
(
USB_IRQ
);

249 
	}
}

251 
	gUSBHAL
::
	$c⁄√˘
() {

252 
	`NVIC_E«bÀIRQ
(
USB_IRQ
);

253 
devCmdSèt
 |
DCON
;

254 
LPC_USB
->
DEVCMDSTAT
 = 
devCmdSèt
;

255 
	}
}

257 
	gUSBHAL
::
	$disc⁄√˘
() {

258 
	`NVIC_DißbÀIRQ
(
USB_IRQ
);

259 
devCmdSèt
 &~
DCON
;

260 
LPC_USB
->
DEVCMDSTAT
 = 
devCmdSèt
;

261 
	}
}

263 
	gUSBHAL
::
	$c⁄figuªDevi˚
() {

265 
	}
}

267 
USBHAL
::
	$unc⁄figuªDevi˚
() {

269 
	}
}

271 
USBHAL
::
	$EP0£tup
(
uöt8_t
 *
buf„r
) {

273 
	`USBMemC›y
(
buf„r
, 
˘
->
£tup
, 
SETUP_PACKET_SIZE
);

274 
	}
}

276 
	gUSBHAL
::
	$EP0ªad
() {

283 
ï
[0].
out
[0] = 
CMDSTS_A
 |
	`CMDSTS_NBYTES
(
MAX_PACKET_SIZE_EP0
) \

284 | 
	`CMDSTS_ADDRESS_OFFSET
((
uöt32_t
)
˘
->
out
);

285 
	}
}

287 
uöt32_t
 
	gUSBHAL
::
	$EP0gëRódResu…
(
uöt8_t
 *
buf„r
) {

289 
uöt32_t
 
byãsRód
;

292 
byãsRód
 = 
MAX_PACKET_SIZE_EP0
 - 
	`BYTES_REMAINING
(
ï
[0].
out
[0]);

295 
	`USBMemC›y
(
buf„r
, 
˘
->
out
, 
byãsRód
);

296  
byãsRód
;

297 
	}
}

300 
	gUSBHAL
::
	$EP0ªadSège
() {

302 
	}
}

304 
USBHAL
::
	$EP0wrôe
(
uöt8_t
 *
buf„r
, 
uöt32_t
 
size
) {

312 
	`USBMemC›y
(
˘
->
ö
, 
buf„r
, 
size
);

315 
ï
[0].
ö
[0] = 
CMDSTS_A
 | 
	`CMDSTS_NBYTES
(
size
) \

316 | 
	`CMDSTS_ADDRESS_OFFSET
((
uöt32_t
)
˘
->
ö
);

317 
	}
}

320 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötRód
(
uöt8_t
 
ídpoöt
, 
uöt32_t
 
maximumSize
) {

321 
uöt8_t
 
bf
 = 0;

322 
uöt32_t
 
Êags
 = 0;

325 i‡(
LPC_USB
->
EPBUFCFG
 & 
	`EP
(
ídpoöt
)) {

327 i‡(
LPC_USB
->
EPINUSE
 & 
	`EP
(
ídpoöt
)) {

328 
bf
 = 1;

330 
bf
 = 0;

335 if(
ídpoötSèã
[
ídpoöt
].
›ti⁄s
 & 
ISOCHRONOUS
)

337 
Êags
 |
CMDSTS_T
;

341 
ï
[
	`PHY_TO_LOG
(
ídpoöt
)].
out
[
bf
] = 
CMDSTS_A
 | 
	`CMDSTS_NBYTES
(
maximumSize
) \

342 | 
	`CMDSTS_ADDRESS_OFFSET
((
uöt32_t
)
˘
->
out
Ë| 
Êags
;

343  
EP_PENDING
;

344 
	}
}

346 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötRódResu…
(
uöt8_t
 
ídpoöt
, uöt8_à*
d©a
, 
uöt32_t
 *
byãsRód
) {

348 
uöt8_t
 
bf
 = 0;

350 i‡(!(
ïCom∂ëe
 & 
	`EP
(
ídpoöt
)))

351  
EP_PENDING
;

353 
ïCom∂ëe
 &~
	`EP
(
ídpoöt
);

356 i‡(
LPC_USB
->
EPBUFCFG
 & 
	`EP
(
ídpoöt
)) {

358 i‡(
LPC_USB
->
EPINUSE
 & 
	`EP
(
ídpoöt
)) {

359 
bf
 = 0;

361 
bf
 = 1;

366 *
byãsRód
 = (
uöt32_t
Ë(
ídpoötSèã
[
ídpoöt
].
maxPackë
 - 
	`BYTES_REMAINING
(
ï
[
	`PHY_TO_LOG
”ndpoöt)].
out
[
bf
]));

369 
	`USBMemC›y
(
d©a
, 
˘
->
out
, *
byãsRód
);

370  
EP_COMPLETED
;

372 
	}
}

374 
	gUSBHAL
::
	$EP0gëWrôeResu…
() {

376 
	}
}

378 
USBHAL
::
	$EP0°Æl
() {

379 
ï
[0].
ö
[0] = 
CMDSTS_S
;

380 
ï
[0].
out
[0] = 
CMDSTS_S
;

381 
	}
}

383 
	gUSBHAL
::
	$£tAddªss
(
uöt8_t
 
addªss
) {

384 
devCmdSèt
 &~
DEV_ADDR_MASK
;

385 
devCmdSèt
 |
	`DEV_ADDR
(
addªss
);

386 
LPC_USB
->
DEVCMDSTAT
 = 
devCmdSèt
;

387 
	}
}

389 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötWrôe
(
uöt8_t
 
ídpoöt
, uöt8_à*
d©a
, 
uöt32_t
 
size
) {

390 
uöt32_t
 
Êags
 = 0;

391 
uöt32_t
 
bf
;

394 i‡(
d©a
 =
NULL
) {

395  
EP_INVALID
;

398 i‡(
ídpoöt
 > 
LAST_PHYSICAL_ENDPOINT
) {

399  
EP_INVALID
;

402 i‡((
ídpoöt
==
EP0IN
Ë|| (ídpoöt==
EP0OUT
)) {

403  
EP_INVALID
;

406 i‡(
size
 > 
ídpoötSèã
[
ídpoöt
].
maxPackë
) {

407  
EP_INVALID
;

410 i‡(
LPC_USB
->
EPBUFCFG
 & 
	`EP
(
ídpoöt
)) {

412 i‡(
LPC_USB
->
EPINUSE
 & 
	`EP
(
ídpoöt
)) {

413 
bf
 = 1;

415 
bf
 = 0;

419 
bf
 = 0;

423 i‡(
ï
[
	`PHY_TO_LOG
(
ídpoöt
)].
ö
[
bf
] & 
CMDSTS_A
) {

424  
EP_INVALID
;

428 i‡(
ï
[
	`PHY_TO_LOG
(
ídpoöt
)].
ö
[
bf
] & 
CMDSTS_S
) {

429  
EP_STALLED
;

433 
	`USBMemC›y
((
uöt8_t
 *)
ídpoötSèã
[
ídpoöt
].
buf„r
[
bf
], 
d©a
, 
size
);

436 i‡(
ídpoötSèã
[
ídpoöt
].
›ti⁄s
 & 
RATE_FEEDBACK_MODE
) {

437 
Êags
 |
CMDSTS_RF
;

440 i‡(
ídpoötSèã
[
ídpoöt
].
›ti⁄s
 & 
ISOCHRONOUS
) {

441 
Êags
 |
CMDSTS_T
;

445 
ï
[
	`PHY_TO_LOG
(
ídpoöt
)].
ö
[
bf
] = 
	`CMDSTS_ADDRESS_OFFSET
( \

446 
ídpoötSèã
[
ídpoöt
].
buf„r
[
bf
]) \

447 | 
	`CMDSTS_NBYTES
(
size
Ë| 
CMDSTS_A
 | 
Êags
;

449  
EP_PENDING
;

450 
	}
}

452 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötWrôeResu…
(
uöt8_t
 
ídpoöt
) {

453 
uöt32_t
 
bf
;

456 i‡(
ídpoöt
 > 
LAST_PHYSICAL_ENDPOINT
) {

457  
EP_INVALID
;

460 i‡(
	`OUT_EP
(
ídpoöt
)) {

461  
EP_INVALID
;

464 i‡(
LPC_USB
->
EPBUFCFG
 & 
	`EP
(
ídpoöt
)) {

466 i‡(
LPC_USB
->
EPINUSE
 & 
	`EP
(
ídpoöt
)) {

467 
bf
 = 1;

469 
bf
 = 0;

473 
bf
 = 0;

477 i‡(
ï
[
	`PHY_TO_LOG
(
ídpoöt
)].
ö
[
bf
] & 
CMDSTS_A
) {

478  
EP_PENDING
;

482 i‡(
ï
[
	`PHY_TO_LOG
(
ídpoöt
)].
ö
[
bf
] & 
CMDSTS_S
) {

483  
EP_STALLED
;

486  
EP_COMPLETED
;

487 
	}
}

489 
	gUSBHAL
::
	$°ÆlEndpoöt
(
uöt8_t
 
ídpoöt
) {

492 i‡(
	`IN_EP
(
ídpoöt
)) {

493 
ï
[
	`PHY_TO_LOG
(
ídpoöt
)].
ö
[0] |
CMDSTS_S
;

494 
ï
[
	`PHY_TO_LOG
(
ídpoöt
)].
ö
[1] |
CMDSTS_S
;

496 
ï
[
	`PHY_TO_LOG
(
ídpoöt
)].
out
[0] |
CMDSTS_S
;

497 
ï
[
	`PHY_TO_LOG
(
ídpoöt
)].
out
[1] |
CMDSTS_S
;

499 
	}
}

501 
	gUSBHAL
::
	$un°ÆlEndpoöt
(
uöt8_t
 
ídpoöt
) {

502 i‡(
LPC_USB
->
EPBUFCFG
 & 
	`EP
(
ídpoöt
)) {

504 i‡(
	`IN_EP
(
ídpoöt
)) {

505 
ï
[
	`PHY_TO_LOG
(
ídpoöt
)].
ö
[0] = 0;

506 
ï
[
	`PHY_TO_LOG
(
ídpoöt
)].
ö
[1] = 0;

508 i‡(
LPC_USB
->
EPINUSE
 & 
	`EP
(
ídpoöt
)) {

509 
ï
[
	`PHY_TO_LOG
(
ídpoöt
)].
ö
[1] = 
CMDSTS_TR
;

511 
ï
[
	`PHY_TO_LOG
(
ídpoöt
)].
ö
[0] = 
CMDSTS_TR
;

514 
ï
[
	`PHY_TO_LOG
(
ídpoöt
)].
out
[0] = 0;

515 
ï
[
	`PHY_TO_LOG
(
ídpoöt
)].
out
[1] = 0;

517 i‡(
LPC_USB
->
EPINUSE
 & 
	`EP
(
ídpoöt
)) {

518 
ï
[
	`PHY_TO_LOG
(
ídpoöt
)].
out
[1] = 
CMDSTS_TR
;

520 
ï
[
	`PHY_TO_LOG
(
ídpoöt
)].
out
[0] = 
CMDSTS_TR
;

525 i‡(
	`IN_EP
(
ídpoöt
)) {

526 
ï
[
	`PHY_TO_LOG
(
ídpoöt
)].
ö
[0] = 
CMDSTS_TR
;

528 
ï
[
	`PHY_TO_LOG
(
ídpoöt
)].
out
[0] = 
CMDSTS_TR
;

531 
	}
}

533 
boﬁ
 
	gUSBHAL
::
	$gëEndpoötSèŒSèã
(
ídpoöt
) {

534 i‡(
	`IN_EP
(
ídpoöt
)) {

535 i‡(
LPC_USB
->
EPINUSE
 & 
	`EP
(
ídpoöt
)) {

536 i‡(
ï
[
	`PHY_TO_LOG
(
ídpoöt
)].
ö
[1] & 
CMDSTS_S
) {

537  
åue
;

540 i‡(
ï
[
	`PHY_TO_LOG
(
ídpoöt
)].
ö
[0] & 
CMDSTS_S
) {

541  
åue
;

545 i‡(
LPC_USB
->
EPINUSE
 & 
	`EP
(
ídpoöt
)) {

546 i‡(
ï
[
	`PHY_TO_LOG
(
ídpoöt
)].
out
[1] & 
CMDSTS_S
) {

547  
åue
;

550 i‡(
ï
[
	`PHY_TO_LOG
(
ídpoöt
)].
out
[0] & 
CMDSTS_S
) {

551  
åue
;

556  
Ál£
;

557 
	}
}

559 
boﬁ
 
	gUSBHAL
::
	$ªÆi£Endpoöt
(
uöt8_t
 
ídpoöt
, 
uöt32_t
 
maxPackë
, uöt32_à
›ti⁄s
) {

560 
uöt32_t
 
tmpEpRamPå
;

562 i‡(
ídpoöt
 > 
LAST_PHYSICAL_ENDPOINT
) {

563  
Ál£
;

567 i‡((
ídpoöt
==
EP0IN
Ë|| (ídpoöt==
EP0OUT
)) {

568  
Ál£
;

572 
tmpEpRamPå
 = 
ïRamPå
;

575 
tmpEpRamPå
 = 
	`ROUND_UP_TO_MULTIPLE
(tmpEpRamPtr, 64);

577 i‡((
tmpEpRamPå
 + 
maxPackë
Ë> (
USB_RAM_START
 + 
USB_RAM_SIZE
)) {

579  
Ál£
;

583 
ídpoötSèã
[
ídpoöt
].
buf„r
[0] = 
tmpEpRamPå
;

584 
tmpEpRamPå
 +
maxPackë
;

586 i‡(!(
›ti⁄s
 & 
SINGLE_BUFFERED
)) {

588 
tmpEpRamPå
 = 
	`ROUND_UP_TO_MULTIPLE
(tmpEpRamPtr, 64);

590 i‡((
tmpEpRamPå
 + 
maxPackë
Ë> (
USB_RAM_START
 + 
USB_RAM_SIZE
)) {

592  
Ál£
;

596 
ídpoötSèã
[
ídpoöt
].
buf„r
[1] = 
tmpEpRamPå
;

597 
tmpEpRamPå
 +
maxPackë
;

601 
ïRamPå
 = 
tmpEpRamPå
;

604 
ídpoötSèã
[
ídpoöt
].
maxPackë
 = maxPacket;

605 
ídpoötSèã
[
ídpoöt
].
›ti⁄s
 = options;

608 i‡(
›ti⁄s
 & 
SINGLE_BUFFERED
) {

609 
LPC_USB
->
EPBUFCFG
 &~
	`EP
(
ídpoöt
);

612 
LPC_USB
->
EPBUFCFG
 |
	`EP
(
ídpoöt
);

616 
LPC_USB
->
INTEN
 |
	`EP
(
ídpoöt
);

619 
	`un°ÆlEndpoöt
(
ídpoöt
);

620  
åue
;

621 
	}
}

623 
	gUSBHAL
::
	$ªmŸeWakeup
() {

627 
LPC_USB
->
DEVCMDSTAT
 = 
devCmdSèt
 & ~
DSUS
;

628 
	}
}

631 
	$dißbÀEndpoöts
() {

632 
uöt32_t
 
logEp
;

637 
logEp
 = 1;ÜogE∞< 
NUMBER_OF_LOGICAL_ENDPOINTS
;ÜogEp++) {

638 
ï
[
logEp
].
out
[0] = 
CMDSTS_D
;

639 
ï
[
logEp
].
out
[1] = 
CMDSTS_D
;

640 
ï
[
logEp
].
ö
[0] = 
CMDSTS_D
;

641 
ï
[
logEp
].
ö
[1] = 
CMDSTS_D
;

645 
ïRamPå
 = 
usbRamPå
;

646 
	}
}

650 
	gUSBHAL
::
	$_usbi§
() {

651 
ö°™˚
->
	`usbi§
();

652 
	}
}

654 
	gUSBHAL
::
	$usbi§
() {

656 i‡(
LPC_USB
->
INTSTAT
 & 
FRAME_INT
) {

658 
LPC_USB
->
INTSTAT
 = 
FRAME_INT
;

661 
	`SOF
(
	`FRAME_NR
(
LPC_USB
->
INFO
));

665 i‡(
LPC_USB
->
INTSTAT
 & 
DEV_INT
) {

666 
LPC_USB
->
INTSTAT
 = 
DEV_INT
;

668 i‡(
LPC_USB
->
DEVCMDSTAT
 & 
DCON_C
) {

670 
LPC_USB
->
DEVCMDSTAT
 = 
devCmdSèt
 | 
DCON_C
;

673 
	`dißbÀEndpoöts
();

676 
	`busRe£t
();

679 i‡(
LPC_USB
->
DEVCMDSTAT
 & 
DSUS_C
) {

681 
LPC_USB
->
DEVCMDSTAT
 = 
devCmdSèt
 | 
DSUS_C
;

682 i‡(
LPC_USB
->
DEVCMDSTAT
 & 
DSUS
) {

683 
	`su•ídSèãCh™ged
(1);

685 
	`su•ídSèãCh™ged
(0);

689 i‡(
LPC_USB
->
DEVCMDSTAT
 & 
DRES_C
) {

691 
LPC_USB
->
DEVCMDSTAT
 = 
devCmdSèt
 | 
DRES_C
;

694 
	`dißbÀEndpoöts
();

697 
	`busRe£t
();

702 i‡(
LPC_USB
->
INTSTAT
 & 
	`EP
(
EP0OUT
)) {

704 
LPC_USB
->
INTSTAT
 = 
	`EP
(
EP0OUT
);

707 i‡(
LPC_USB
->
DEVCMDSTAT
 & 
SETUP
) {

713 
ï
[0].
ö
[0] = 0;

714 
ï
[0].
out
[0] = 0;

717 
LPC_USB
->
INTSTAT
 = 
	`EP
(
EP0IN
);

720 
LPC_USB
->
DEVCMDSTAT
 = 
devCmdSèt
 | 
SETUP
;

723 
	`EP0£tupCÆlback
();

726 
	`EP0out
();

730 i‡(
LPC_USB
->
INTSTAT
 & 
	`EP
(
EP0IN
)) {

732 
LPC_USB
->
INTSTAT
 = 
	`EP
(
EP0IN
);

735 
	`EP0ö
();

738 
uöt8_t
 
num
 = 2;Çum < 5*2;Çum++) {

739 i‡(
LPC_USB
->
INTSTAT
 & 
	`EP
(
num
)) {

740 
LPC_USB
->
INTSTAT
 = 
	`EP
(
num
);

741 
ïCom∂ëe
 |
	`EP
(
num
);

742 i‡((
ö°™˚
->*(
ïCÆlback
[
num
 - 2]))()) {

743 
ïCom∂ëe
 &~
	`EP
(
num
);

747 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBHAL_LPC17.cpp

19 #i‡
deföed
(
TARGET_LPC1768
Ë|| deföed(
TARGET_LPC2368
Ë|| deföed(
TARGET_LPC2460
)

21 
	~"USBHAL.h
"

25 
	#IN_EP
(
ídpoöt
Ë(”ndpoötË& 1U ? 
åue
 : 
Ál£
)

	)

26 
	#OUT_EP
(
ídpoöt
Ë(”ndpoötË& 1U ? 
Ál£
 : 
åue
)

	)

29 
	#EP
(
ídpoöt
Ë(1UL<<ídpoöt)

	)

32 
	#PCUSB
 (1UL<<31)

	)

35 
	#DEV_CLK_EN
 (1UL<<1)

	)

36 
	#AHB_CLK_EN
 (1UL<<4)

	)

39 
	#DEV_CLK_ON
 (1UL<<1)

	)

40 
	#AHB_CLK_ON
 (1UL<<4)

	)

43 
	#FRAME
 (1UL<<0)

	)

44 
	#EP_FAST
 (1UL<<1)

	)

45 
	#EP_SLOW
 (1UL<<2)

	)

46 
	#DEV_STAT
 (1UL<<3)

	)

47 
	#CCEMPTY
 (1UL<<4)

	)

48 
	#CDFULL
 (1UL<<5)

	)

49 
	#RxENDPKT
 (1UL<<6)

	)

50 
	#TxENDPKT
 (1UL<<7)

	)

51 
	#EP_RLZED
 (1UL<<8)

	)

52 
	#ERR_INT
 (1UL<<9)

	)

55 
	#RD_EN
 (1<<0)

	)

56 
	#WR_EN
 (1<<1)

	)

57 
	#LOG_ENDPOINT
(
ídpoöt
Ë(”ndpoöt>>1)<<2)

	)

60 
	#DV
 (1UL<<10)

	)

61 
	#PKT_RDY
 (1UL<<11)

	)

62 
	#PKT_LNGTH_MASK
 (0x3ff)

	)

65 
	#SIE_WRITE
 (0x01)

	)

66 
	#SIE_READ
 (0x02)

	)

67 
	#SIE_COMMAND
 (0x05)

	)

68 
	#SIE_CMD_CODE
(
pha£
, 
d©a
Ë(’ha£<<8)|(d©a<<16))

	)

71 
	#SIE_CMD_SET_ADDRESS
 (0xD0)

	)

72 
	#SIE_CMD_CONFIGURE_DEVICE
 (0xD8)

	)

73 
	#SIE_CMD_SET_MODE
 (0xF3)

	)

74 
	#SIE_CMD_READ_FRAME_NUMBER
 (0xF5)

	)

75 
	#SIE_CMD_READ_TEST_REGISTER
 (0xFD)

	)

76 
	#SIE_CMD_SET_DEVICE_STATUS
 (0xFE)

	)

77 
	#SIE_CMD_GET_DEVICE_STATUS
 (0xFE)

	)

78 
	#SIE_CMD_GET_ERROR_CODE
 (0xFF)

	)

79 
	#SIE_CMD_READ_ERROR_STATUS
 (0xFB)

	)

81 
	#SIE_CMD_SELECT_ENDPOINT
(
ídpoöt
Ë(0x00+ídpoöt)

	)

82 
	#SIE_CMD_SELECT_ENDPOINT_CLEAR_INTERRUPT
(
ídpoöt
Ë(0x40+ídpoöt)

	)

83 
	#SIE_CMD_SET_ENDPOINT_STATUS
(
ídpoöt
Ë(0x40+ídpoöt)

	)

85 
	#SIE_CMD_CLEAR_BUFFER
 (0xF2)

	)

86 
	#SIE_CMD_VALIDATE_BUFFER
 (0xFA)

	)

89 
	#SIE_DS_CON
 (1<<0)

	)

90 
	#SIE_DS_CON_CH
 (1<<1)

	)

91 
	#SIE_DS_SUS
 (1<<2)

	)

92 
	#SIE_DS_SUS_CH
 (1<<3)

	)

93 
	#SIE_DS_RST
 (1<<4)

	)

96 
	#SIE_DSA_DEV_EN
 (1<<7)

	)

99 
	#SIE_CONF_DEVICE
 (1<<0)

	)

102 
	#SIE_SE_FE
 (1<<0)

	)

103 
	#SIE_SE_ST
 (1<<1)

	)

104 
	#SIE_SE_STP
 (1<<2)

	)

105 
	#SIE_SE_PO
 (1<<3)

	)

106 
	#SIE_SE_EPN
 (1<<4)

	)

107 
	#SIE_SE_B_1_FULL
 (1<<5)

	)

108 
	#SIE_SE_B_2_FULL
 (1<<6)

	)

111 
	#SIE_SES_ST
 (1<<0)

	)

112 
	#SIE_SES_DA
 (1<<5)

	)

113 
	#SIE_SES_RF_MO
 (1<<6)

	)

114 
	#SIE_SES_CND_ST
 (1<<7)

	)

117 
USBHAL
 * 
	gUSBHAL
::
ö°™˚
;

119 vﬁ©ûê
	gïCom∂ëe
;

120 
uöt32_t
 
	gídpoötSèŒSèã
;

122 
	$SIEComm™d
(
uöt32_t
 
comm™d
) {

124 
LPC_USB
->
USBDevI¡CÃ
 = 
CCEMPTY
;

125 
LPC_USB
->
USBCmdCode
 = 
	`SIE_CMD_CODE
(
SIE_COMMAND
, 
comm™d
);

126 !(
LPC_USB
->
USBDevI¡St
 & 
CCEMPTY
));

127 
	}
}

129 
	$SIEWrôeD©a
(
uöt8_t
 
d©a
) {

131 
LPC_USB
->
USBDevI¡CÃ
 = 
CCEMPTY
;

132 
LPC_USB
->
USBCmdCode
 = 
	`SIE_CMD_CODE
(
SIE_WRITE
, 
d©a
);

133 !(
LPC_USB
->
USBDevI¡St
 & 
CCEMPTY
));

134 
	}
}

136 
uöt8_t
 
	$SIERódD©a
(
uöt32_t
 
comm™d
) {

138 
LPC_USB
->
USBDevI¡CÃ
 = 
CDFULL
;

139 
LPC_USB
->
USBCmdCode
 = 
	`SIE_CMD_CODE
(
SIE_READ
, 
comm™d
);

140 !(
LPC_USB
->
USBDevI¡St
 & 
CDFULL
));

141  (
uöt8_t
)
LPC_USB
->
USBCmdD©a
;

142 
	}
}

144 
	$SIE£tDevi˚Sètus
(
uöt8_t
 
°©us
) {

146 
	`SIEComm™d
(
SIE_CMD_SET_DEVICE_STATUS
);

147 
	`SIEWrôeD©a
(
°©us
);

148 
	}
}

150 
uöt8_t
 
	$SIEgëDevi˚Sètus
() {

152 
	`SIEComm™d
(
SIE_CMD_GET_DEVICE_STATUS
);

153  
	`SIERódD©a
(
SIE_CMD_GET_DEVICE_STATUS
);

154 
	}
}

156 
	$SIE£tAddªss
(
uöt8_t
 
addªss
) {

158 
	`SIEComm™d
(
SIE_CMD_SET_ADDRESS
);

159 
	`SIEWrôeD©a
((
addªss
 & 0x7fË| 
SIE_DSA_DEV_EN
);

160 
	}
}

162 
uöt8_t
 
	$SIE£À˘Endpoöt
(
uöt8_t
 
ídpoöt
) {

164 
	`SIEComm™d
(
	`SIE_CMD_SELECT_ENDPOINT
(
ídpoöt
));

165  
	`SIERódD©a
(
	`SIE_CMD_SELECT_ENDPOINT
(
ídpoöt
));

166 
	}
}

168 
uöt8_t
 
	$SIE˛órBuf„r
() {

170 
	`SIEComm™d
(
SIE_CMD_CLEAR_BUFFER
);

171  
	`SIERódD©a
(
SIE_CMD_CLEAR_BUFFER
);

172 
	}
}

174 
	$SIEvÆid©eBuf„r
() {

176 
	`SIEComm™d
(
SIE_CMD_VALIDATE_BUFFER
);

177 
	}
}

179 
	$SIE£tEndpoötSètus
(
uöt8_t
 
ídpoöt
, uöt8_à
°©us
) {

181 
	`SIEComm™d
(
	`SIE_CMD_SET_ENDPOINT_STATUS
(
ídpoöt
));

182 
	`SIEWrôeD©a
(
°©us
);

183 
	}
}

185 
uöt16_t
 
	$SIEgëFømeNumbî
(Ë
	`__©åibuã__
 ((
unu£d
));

186 
uöt16_t
 
	$SIEgëFømeNumbî
() {

188 
uöt16_t
 
lowByã
;

189 
uöt16_t
 
highByã
;

191 
	`SIEComm™d
(
SIE_CMD_READ_FRAME_NUMBER
);

192 
lowByã
 = 
	`SIERódD©a
(
SIE_CMD_READ_FRAME_NUMBER
);

193 
highByã
 = 
	`SIERódD©a
(
SIE_CMD_READ_FRAME_NUMBER
);

195  (
highByã
 << 8Ë| 
lowByã
;

196 
	}
}

198 
	$SIEc⁄figuªDevi˚
() {

200 
	`SIEComm™d
(
SIE_CMD_CONFIGURE_DEVICE
);

201 
	`SIEWrôeD©a
(
SIE_CONF_DEVICE
);

202 
	}
}

204 
	$SIEunc⁄figuªDevi˚
() {

206 
	`SIEComm™d
(
SIE_CMD_CONFIGURE_DEVICE
);

207 
	`SIEWrôeD©a
(0);

208 
	}
}

210 
	$SIEc⁄√˘
() {

212 
uöt8_t
 
°©us
 = 
	`SIEgëDevi˚Sètus
();

213 
	`SIE£tDevi˚Sètus
(
°©us
 | 
SIE_DS_CON
);

214 
	}
}

217 
	$SIEdisc⁄√˘
() {

219 
uöt8_t
 
°©us
 = 
	`SIEgëDevi˚Sètus
();

220 
	`SIE£tDevi˚Sètus
(
°©us
 & ~
SIE_DS_CON
);

221 
	}
}

224 
uöt8_t
 
	$£À˘EndpoötCÀ¨I¡îru±
(
uöt8_t
 
ídpoöt
) {

226 
LPC_USB
->
USBEpI¡CÃ
 = 
	`EP
(
ídpoöt
);

227 !(
LPC_USB
->
USBDevI¡St
 & 
CDFULL
));

228  (
uöt8_t
)
LPC_USB
->
USBCmdD©a
;

229 
	}
}

232 
	$íabÀEndpoötEvít
(
uöt8_t
 
ídpoöt
) {

234 
LPC_USB
->
USBEpI¡En
 |
	`EP
(
ídpoöt
);

235 
	}
}

237 
	$dißbÀEndpoötEvít
(
uöt8_t
 
ídpoöt
Ë
	`__©åibuã__
 ((
unu£d
));

238 
	$dißbÀEndpoötEvít
(
uöt8_t
 
ídpoöt
) {

240 
LPC_USB
->
USBEpI¡En
 &~
	`EP
(
ídpoöt
);

241 
	}
}

243 vﬁ©ûê
uöt32_t
 
__©åibuã__
((
u£d
)Ë
	gdummyRód
;

244 
uöt32_t
 
	gUSBHAL
::
	$ídpoötRódc‹e
(
uöt8_t
 
ídpoöt
, uöt8_à*
buf„r
) {

246 
uöt32_t
 
size
;

247 
uöt32_t
 
i
;

248 
uöt32_t
 
d©a
 = 0;

249 
uöt8_t
 
off£t
;

251 
LPC_USB
->
USBCål
 = 
	`LOG_ENDPOINT
(
ídpoöt
Ë| 
RD_EN
;

252 !(
LPC_USB
->
USBRxPLí
 & 
PKT_RDY
));

254 
size
 = 
LPC_USB
->
USBRxPLí
 & 
PKT_LNGTH_MASK
;

256 
off£t
 = 0;

258 i‡(
size
 > 0) {

259 
i
=0; i<
size
; i++) {

260 i‡(
off£t
==0) {

262 
d©a
 = 
LPC_USB
->
USBRxD©a
;

266 *
buf„r
 = (
d©a
>>
off£t
) & 0xff;

267 
buf„r
++;

270 
off£t
 = (offset + 8) % 32;

273 
dummyRód
 = 
LPC_USB
->
USBRxD©a
;

276 
LPC_USB
->
USBCål
 = 0;

278 i‡((
ídpoöt
 >> 1) % 3 || (endpoint >> 1) == 0) {

279 
	`SIE£À˘Endpoöt
(
ídpoöt
);

280 
	`SIE˛órBuf„r
();

283  
size
;

284 
	}
}

286 
	$ídpoötWrôec‹e
(
uöt8_t
 
ídpoöt
, uöt8_à*
buf„r
, 
uöt32_t
 
size
) {

288 
uöt32_t
 
ãmp
, 
d©a
;

289 
uöt8_t
 
off£t
;

291 
LPC_USB
->
USBCål
 = 
	`LOG_ENDPOINT
(
ídpoöt
Ë| 
WR_EN
;

293 
LPC_USB
->
USBTxPLí
 = 
size
;

294 
off£t
 = 0;

295 
d©a
 = 0;

297 i‡(
size
>0) {

300 
ãmp
 = *
buf„r
++;

303 
ãmp
 =Åem∞<< 
off£t
;

304 
d©a
 = d©®| 
ãmp
;

307 
off£t
 = (offset + 8) % 32;

308 
size
--;

310 i‡((
off£t
==0Ë|| (
size
==0)) {

312 
LPC_USB
->
USBTxD©a
 = 
d©a
;

313 
d©a
 = 0;

315 } 
size
>0);

317 
LPC_USB
->
USBTxD©a
 = 0;

321 
LPC_USB
->
USBCål
=0;

323 
	`SIE£À˘Endpoöt
(
ídpoöt
);

324 
	`SIEvÆid©eBuf„r
();

325 
	}
}

327 
	gUSBHAL
::
	$USBHAL
() {

329 
	`NVIC_DißbÀIRQ
(
USB_IRQn
);

332 
ïCÆlback
[0] = &
USBHAL
::
EP1_OUT_ˇŒback
;

333 
ïCÆlback
[1] = &
USBHAL
::
EP1_IN_ˇŒback
;

334 
ïCÆlback
[2] = &
USBHAL
::
EP2_OUT_ˇŒback
;

335 
ïCÆlback
[3] = &
USBHAL
::
EP2_IN_ˇŒback
;

336 
ïCÆlback
[4] = &
USBHAL
::
EP3_OUT_ˇŒback
;

337 
ïCÆlback
[5] = &
USBHAL
::
EP3_IN_ˇŒback
;

338 
ïCÆlback
[6] = &
USBHAL
::
EP4_OUT_ˇŒback
;

339 
ïCÆlback
[7] = &
USBHAL
::
EP4_IN_ˇŒback
;

340 
ïCÆlback
[8] = &
USBHAL
::
EP5_OUT_ˇŒback
;

341 
ïCÆlback
[9] = &
USBHAL
::
EP5_IN_ˇŒback
;

342 
ïCÆlback
[10] = &
USBHAL
::
EP6_OUT_ˇŒback
;

343 
ïCÆlback
[11] = &
USBHAL
::
EP6_IN_ˇŒback
;

344 
ïCÆlback
[12] = &
USBHAL
::
EP7_OUT_ˇŒback
;

345 
ïCÆlback
[13] = &
USBHAL
::
EP7_IN_ˇŒback
;

346 
ïCÆlback
[14] = &
USBHAL
::
EP8_OUT_ˇŒback
;

347 
ïCÆlback
[15] = &
USBHAL
::
EP8_IN_ˇŒback
;

348 
ïCÆlback
[16] = &
USBHAL
::
EP9_OUT_ˇŒback
;

349 
ïCÆlback
[17] = &
USBHAL
::
EP9_IN_ˇŒback
;

350 
ïCÆlback
[18] = &
USBHAL
::
EP10_OUT_ˇŒback
;

351 
ïCÆlback
[19] = &
USBHAL
::
EP10_IN_ˇŒback
;

352 
ïCÆlback
[20] = &
USBHAL
::
EP11_OUT_ˇŒback
;

353 
ïCÆlback
[21] = &
USBHAL
::
EP11_IN_ˇŒback
;

354 
ïCÆlback
[22] = &
USBHAL
::
EP12_OUT_ˇŒback
;

355 
ïCÆlback
[23] = &
USBHAL
::
EP12_IN_ˇŒback
;

356 
ïCÆlback
[24] = &
USBHAL
::
EP13_OUT_ˇŒback
;

357 
ïCÆlback
[25] = &
USBHAL
::
EP13_IN_ˇŒback
;

358 
ïCÆlback
[26] = &
USBHAL
::
EP14_OUT_ˇŒback
;

359 
ïCÆlback
[27] = &
USBHAL
::
EP14_IN_ˇŒback
;

360 
ïCÆlback
[28] = &
USBHAL
::
EP15_OUT_ˇŒback
;

361 
ïCÆlback
[29] = &
USBHAL
::
EP15_IN_ˇŒback
;

364 
LPC_SC
->
PCONP
 |
PCUSB
;

367 
LPC_USB
->
USBClkCål
 |
DEV_CLK_EN
 | 
AHB_CLK_EN
;

368 
LPC_USB
->
USBClkSt
 !(
DEV_CLK_ON
 | 
AHB_CLK_ON
));

371 
LPC_PINCON
->
PINSEL1
 &= 0xc3ffffff;

372 
LPC_PINCON
->
PINSEL1
 |= 0x14000000;

375 
	`SIEdisc⁄√˘
();

378 
LPC_PINCON
->
PINSEL4
 &= 0xfffcffff;

379 
LPC_PINCON
->
PINSEL4
 |= 0x00040000;

382 
	`waô
(0.3);

385 
	`ªÆi£Endpoöt
(
EP0IN
, 
MAX_PACKET_SIZE_EP0
, 0);

386 
	`ªÆi£Endpoöt
(
EP0OUT
, 
MAX_PACKET_SIZE_EP0
, 0);

389 
ö°™˚
 = 
this
;

390 
	`NVIC_SëVe˘‹
(
USB_IRQn
, (
uöt32_t
)&
_usbi§
);

393 
LPC_USB
->
USBDevI¡En
 = 
EP_SLOW
 | 
DEV_STAT
 | 
FRAME
;

394 
	`íabÀEndpoötEvít
(
EP0IN
);

395 
	`íabÀEndpoötEvít
(
EP0OUT
);

396 
	}
}

398 
	gUSBHAL
::~
	$USBHAL
() {

400 
	`SIEdisc⁄√˘
();

402 
	`NVIC_DißbÀIRQ
(
USB_IRQn
);

403 
	}
}

405 
	gUSBHAL
::
	$c⁄√˘
() {

406 
	`NVIC_E«bÀIRQ
(
USB_IRQn
);

408 
	`SIEc⁄√˘
();

409 
	}
}

411 
	gUSBHAL
::
	$disc⁄√˘
() {

412 
	`NVIC_DißbÀIRQ
(
USB_IRQn
);

414 
	`SIEdisc⁄√˘
();

415 
	}
}

417 
	gUSBHAL
::
	$c⁄figuªDevi˚
() {

418 
	`SIEc⁄figuªDevi˚
();

419 
	}
}

421 
	gUSBHAL
::
	$unc⁄figuªDevi˚
() {

422 
	`SIEunc⁄figuªDevi˚
();

423 
	}
}

425 
	gUSBHAL
::
	$£tAddªss
(
uöt8_t
 
addªss
) {

426 
	`SIE£tAddªss
(
addªss
);

427 
	}
}

429 
	gUSBHAL
::
	$EP0£tup
(
uöt8_t
 *
buf„r
) {

430 
	`ídpoötRódc‹e
(
EP0OUT
, 
buf„r
);

431 
	}
}

433 
	gUSBHAL
::
	$EP0ªad
() {

435 
	}
}

437 
USBHAL
::
	$EP0ªadSège
() {

439 
	}
}

441 
uöt32_t
 
USBHAL
::
	$EP0gëRódResu…
(
uöt8_t
 *
buf„r
) {

442  
	`ídpoötRódc‹e
(
EP0OUT
, 
buf„r
);

443 
	}
}

445 
	gUSBHAL
::
	$EP0wrôe
(
uöt8_t
 *
buf„r
, 
uöt32_t
 
size
) {

446 
	`ídpoötWrôec‹e
(
EP0IN
, 
buf„r
, 
size
);

447 
	}
}

449 
	gUSBHAL
::
	$EP0gëWrôeResu…
() {

451 
	}
}

453 
USBHAL
::
	$EP0°Æl
() {

455 
	`°ÆlEndpoöt
(
EP0OUT
);

456 
	}
}

458 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötRód
(
uöt8_t
 
ídpoöt
, 
uöt32_t
 
maximumSize
) {

459  
EP_PENDING
;

460 
	}
}

462 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötRódResu…
(
uöt8_t
 
ídpoöt
, uöt8_à* 
buf„r
, 
uöt32_t
 *
byãsRód
) {

465 i‡((
ídpoöt
 >> 1) % 3 || (endpoint >> 1) == 0) {

466 i‡(!(
ïCom∂ëe
 & 
	`EP
(
ídpoöt
)))

467  
EP_PENDING
;

470 *
byãsRód
 = 
	`ídpoötRódc‹e
(
ídpoöt
, 
buf„r
);

471 
ïCom∂ëe
 &~
	`EP
(
ídpoöt
);

472  
EP_COMPLETED
;

473 
	}
}

475 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötWrôe
(
uöt8_t
 
ídpoöt
, uöt8_à*
d©a
, 
uöt32_t
 
size
) {

476 i‡(
	`gëEndpoötSèŒSèã
(
ídpoöt
)) {

477  
EP_STALLED
;

480 
ïCom∂ëe
 &~
	`EP
(
ídpoöt
);

482 
	`ídpoötWrôec‹e
(
ídpoöt
, 
d©a
, 
size
);

483  
EP_PENDING
;

484 
	}
}

486 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötWrôeResu…
(
uöt8_t
 
ídpoöt
) {

487 i‡(
ïCom∂ëe
 & 
	`EP
(
ídpoöt
)) {

488 
ïCom∂ëe
 &~
	`EP
(
ídpoöt
);

489  
EP_COMPLETED
;

492  
EP_PENDING
;

493 
	}
}

495 
boﬁ
 
	gUSBHAL
::
	$ªÆi£Endpoöt
(
uöt8_t
 
ídpoöt
, 
uöt32_t
 
maxPackë
, uöt32_à
Êags
) {

497 
LPC_USB
->
USBDevI¡CÃ
 = 
EP_RLZED
;

498 
LPC_USB
->
USBReEp
 |
	`EP
(
ídpoöt
);

499 
LPC_USB
->
USBEpInd
 = 
ídpoöt
;

500 
LPC_USB
->
USBMaxPSize
 = 
maxPackë
;

502 !(
LPC_USB
->
USBDevI¡St
 & 
EP_RLZED
));

503 
LPC_USB
->
USBDevI¡CÃ
 = 
EP_RLZED
;

506 
ídpoötSèŒSèã
 &~
	`EP
(
ídpoöt
);

508 
	`íabÀEndpoötEvít
(
ídpoöt
);

509  
åue
;

510 
	}
}

512 
	gUSBHAL
::
	$°ÆlEndpoöt
(
uöt8_t
 
ídpoöt
) {

514 i‡–(
ídpoöt
==
EP0IN
Ë|| (ídpoöt==
EP0OUT
) ) {

516 
	`SIE£tEndpoötSètus
(
EP0OUT
, 
SIE_SES_CND_ST
);

518 
	`SIE£tEndpoötSètus
(
ídpoöt
, 
SIE_SES_ST
);

521 
ídpoötSèŒSèã
 |
	`EP
(
ídpoöt
);

523 
	}
}

525 
	gUSBHAL
::
	$un°ÆlEndpoöt
(
uöt8_t
 
ídpoöt
) {

527 
	`SIE£tEndpoötSètus
(
ídpoöt
, 0);

530 
ídpoötSèŒSèã
 &~
	`EP
(
ídpoöt
);

531 
	}
}

533 
boﬁ
 
	gUSBHAL
::
	$gëEndpoötSèŒSèã
(
uöt8_t
 
ídpoöt
) {

535  
ídpoötSèŒSèã
 & 
	`EP
(
ídpoöt
);

536 
	}
}

538 
	gUSBHAL
::
	$ªmŸeWakeup
() {

540 
uöt8_t
 
°©us
;

543 
LPC_USB
->
USBClkCål
 |
DEV_CLK_EN
 | 
AHB_CLK_EN
;

544 
LPC_USB
->
USBClkSt
 !(
DEV_CLK_ON
 | 
AHB_CLK_ON
));

546 
°©us
 = 
	`SIEgëDevi˚Sètus
();

547 
	`SIE£tDevi˚Sètus
(
°©us
 & ~
SIE_DS_SUS
);

548 
	}
}

550 
	gUSBHAL
::
	$_usbi§
() {

551 
ö°™˚
->
	`usbi§
();

552 
	}
}

555 
	gUSBHAL
::
	$usbi§
() {

556 
uöt8_t
 
devSèt
;

558 i‡(
LPC_USB
->
USBDevI¡St
 & 
FRAME
) {

560 
	`SOF
(
	`SIEgëFømeNumbî
());

562 
LPC_USB
->
USBDevI¡CÃ
 = 
FRAME
;

565 i‡(
LPC_USB
->
USBDevI¡St
 & 
DEV_STAT
) {

568 
LPC_USB
->
USBDevI¡CÃ
 = 
DEV_STAT
;

571 
devSèt
 = 
	`SIEgëDevi˚Sètus
();

574 i‡(
devSèt
 & 
SIE_DS_SUS_CH
) {

576 if((
devSèt
 & 
SIE_DS_SUS
) != 0) {

577 
	`su•ídSèãCh™ged
(0);

581 i‡(
devSèt
 & 
SIE_DS_RST
) {

583 if((
devSèt
 & 
SIE_DS_SUS
) == 0) {

584 
	`su•ídSèãCh™ged
(1);

586 
	`busRe£t
();

590 i‡(
LPC_USB
->
USBDevI¡St
 & 
EP_SLOW
) {

594 i‡(
LPC_USB
->
USBEpI¡St
 & 
	`EP
(
EP0OUT
)) {

595 i‡(
	`£À˘EndpoötCÀ¨I¡îru±
(
EP0OUT
Ë& 
SIE_SE_STP
) {

597 
	`EP0£tupCÆlback
();

599 
	`EP0out
();

601 
LPC_USB
->
USBDevI¡CÃ
 = 
EP_SLOW
;

604 i‡(
LPC_USB
->
USBEpI¡St
 & 
	`EP
(
EP0IN
)) {

605 
	`£À˘EndpoötCÀ¨I¡îru±
(
EP0IN
);

606 
LPC_USB
->
USBDevI¡CÃ
 = 
EP_SLOW
;

607 
	`EP0ö
();

610 
uöt8_t
 
num
 = 2;Çum < 16*2;Çum++) {

611 i‡(
LPC_USB
->
USBEpI¡St
 & 
	`EP
(
num
)) {

612 
	`£À˘EndpoötCÀ¨I¡îru±
(
num
);

613 
ïCom∂ëe
 |
	`EP
(
num
);

614 
LPC_USB
->
USBDevI¡CÃ
 = 
EP_SLOW
;

615 i‡((
ö°™˚
->*(
ïCÆlback
[
num
 - 2]))()) {

616 
ïCom∂ëe
 &~
	`EP
(
num
);

621 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBHAL_LPC40.cpp

19 #i‡
deföed
(
TARGET_LPC4088
Ë|| deföed(
TARGET_LPC4088_DM
)

21 
	~"USBHAL.h
"

25 
	#IN_EP
(
ídpoöt
Ë(”ndpoötË& 1U ? 
åue
 : 
Ál£
)

	)

26 
	#OUT_EP
(
ídpoöt
Ë(”ndpoötË& 1U ? 
Ál£
 : 
åue
)

	)

29 
	#EP
(
ídpoöt
Ë(1UL<<ídpoöt)

	)

32 
	#PCUSB
 (1UL<<31)

	)

35 
	#DEV_CLK_EN
 (1UL<<1)

	)

36 
	#PORT_CLK_EN
 (1UL<<3)

	)

37 
	#AHB_CLK_EN
 (1UL<<4)

	)

40 
	#DEV_CLK_ON
 (1UL<<1)

	)

41 
	#AHB_CLK_ON
 (1UL<<4)

	)

44 
	#FRAME
 (1UL<<0)

	)

45 
	#EP_FAST
 (1UL<<1)

	)

46 
	#EP_SLOW
 (1UL<<2)

	)

47 
	#DEV_STAT
 (1UL<<3)

	)

48 
	#CCEMPTY
 (1UL<<4)

	)

49 
	#CDFULL
 (1UL<<5)

	)

50 
	#RxENDPKT
 (1UL<<6)

	)

51 
	#TxENDPKT
 (1UL<<7)

	)

52 
	#EP_RLZED
 (1UL<<8)

	)

53 
	#ERR_INT
 (1UL<<9)

	)

56 
	#RD_EN
 (1<<0)

	)

57 
	#WR_EN
 (1<<1)

	)

58 
	#LOG_ENDPOINT
(
ídpoöt
Ë(”ndpoöt>>1)<<2)

	)

61 
	#DV
 (1UL<<10)

	)

62 
	#PKT_RDY
 (1UL<<11)

	)

63 
	#PKT_LNGTH_MASK
 (0x3ff)

	)

66 
	#SIE_WRITE
 (0x01)

	)

67 
	#SIE_READ
 (0x02)

	)

68 
	#SIE_COMMAND
 (0x05)

	)

69 
	#SIE_CMD_CODE
(
pha£
, 
d©a
Ë(’ha£<<8)|(d©a<<16))

	)

72 
	#SIE_CMD_SET_ADDRESS
 (0xD0)

	)

73 
	#SIE_CMD_CONFIGURE_DEVICE
 (0xD8)

	)

74 
	#SIE_CMD_SET_MODE
 (0xF3)

	)

75 
	#SIE_CMD_READ_FRAME_NUMBER
 (0xF5)

	)

76 
	#SIE_CMD_READ_TEST_REGISTER
 (0xFD)

	)

77 
	#SIE_CMD_SET_DEVICE_STATUS
 (0xFE)

	)

78 
	#SIE_CMD_GET_DEVICE_STATUS
 (0xFE)

	)

79 
	#SIE_CMD_GET_ERROR_CODE
 (0xFF)

	)

80 
	#SIE_CMD_READ_ERROR_STATUS
 (0xFB)

	)

82 
	#SIE_CMD_SELECT_ENDPOINT
(
ídpoöt
Ë(0x00+ídpoöt)

	)

83 
	#SIE_CMD_SELECT_ENDPOINT_CLEAR_INTERRUPT
(
ídpoöt
Ë(0x40+ídpoöt)

	)

84 
	#SIE_CMD_SET_ENDPOINT_STATUS
(
ídpoöt
Ë(0x40+ídpoöt)

	)

86 
	#SIE_CMD_CLEAR_BUFFER
 (0xF2)

	)

87 
	#SIE_CMD_VALIDATE_BUFFER
 (0xFA)

	)

90 
	#SIE_DS_CON
 (1<<0)

	)

91 
	#SIE_DS_CON_CH
 (1<<1)

	)

92 
	#SIE_DS_SUS
 (1<<2)

	)

93 
	#SIE_DS_SUS_CH
 (1<<3)

	)

94 
	#SIE_DS_RST
 (1<<4)

	)

97 
	#SIE_DSA_DEV_EN
 (1<<7)

	)

100 
	#SIE_CONF_DEVICE
 (1<<0)

	)

103 
	#SIE_SE_FE
 (1<<0)

	)

104 
	#SIE_SE_ST
 (1<<1)

	)

105 
	#SIE_SE_STP
 (1<<2)

	)

106 
	#SIE_SE_PO
 (1<<3)

	)

107 
	#SIE_SE_EPN
 (1<<4)

	)

108 
	#SIE_SE_B_1_FULL
 (1<<5)

	)

109 
	#SIE_SE_B_2_FULL
 (1<<6)

	)

112 
	#SIE_SES_ST
 (1<<0)

	)

113 
	#SIE_SES_DA
 (1<<5)

	)

114 
	#SIE_SES_RF_MO
 (1<<6)

	)

115 
	#SIE_SES_CND_ST
 (1<<7)

	)

118 
USBHAL
 * 
	gUSBHAL
::
ö°™˚
;

120 vﬁ©ûê
	gïCom∂ëe
;

121 
uöt32_t
 
	gídpoötSèŒSèã
;

123 
	$SIEComm™d
(
uöt32_t
 
comm™d
) {

125 
LPC_USB
->
DevI¡CÃ
 = 
CCEMPTY
;

126 
LPC_USB
->
CmdCode
 = 
	`SIE_CMD_CODE
(
SIE_COMMAND
, 
comm™d
);

127 !(
LPC_USB
->
DevI¡St
 & 
CCEMPTY
));

128 
	}
}

130 
	$SIEWrôeD©a
(
uöt8_t
 
d©a
) {

132 
LPC_USB
->
DevI¡CÃ
 = 
CCEMPTY
;

133 
LPC_USB
->
CmdCode
 = 
	`SIE_CMD_CODE
(
SIE_WRITE
, 
d©a
);

134 !(
LPC_USB
->
DevI¡St
 & 
CCEMPTY
));

135 
	}
}

137 
uöt8_t
 
	$SIERódD©a
(
uöt32_t
 
comm™d
) {

139 
LPC_USB
->
DevI¡CÃ
 = 
CDFULL
;

140 
LPC_USB
->
CmdCode
 = 
	`SIE_CMD_CODE
(
SIE_READ
, 
comm™d
);

141 !(
LPC_USB
->
DevI¡St
 & 
CDFULL
));

142  (
uöt8_t
)
LPC_USB
->
CmdD©a
;

143 
	}
}

145 
	$SIE£tDevi˚Sètus
(
uöt8_t
 
°©us
) {

147 
	`SIEComm™d
(
SIE_CMD_SET_DEVICE_STATUS
);

148 
	`SIEWrôeD©a
(
°©us
);

149 
	}
}

151 
uöt8_t
 
	$SIEgëDevi˚Sètus
() {

153 
	`SIEComm™d
(
SIE_CMD_GET_DEVICE_STATUS
);

154  
	`SIERódD©a
(
SIE_CMD_GET_DEVICE_STATUS
);

155 
	}
}

157 
	$SIE£tAddªss
(
uöt8_t
 
addªss
) {

159 
	`SIEComm™d
(
SIE_CMD_SET_ADDRESS
);

160 
	`SIEWrôeD©a
((
addªss
 & 0x7fË| 
SIE_DSA_DEV_EN
);

161 
	}
}

163 
uöt8_t
 
	$SIE£À˘Endpoöt
(
uöt8_t
 
ídpoöt
) {

165 
	`SIEComm™d
(
	`SIE_CMD_SELECT_ENDPOINT
(
ídpoöt
));

166  
	`SIERódD©a
(
	`SIE_CMD_SELECT_ENDPOINT
(
ídpoöt
));

167 
	}
}

169 
uöt8_t
 
	$SIE˛órBuf„r
() {

171 
	`SIEComm™d
(
SIE_CMD_CLEAR_BUFFER
);

172  
	`SIERódD©a
(
SIE_CMD_CLEAR_BUFFER
);

173 
	}
}

175 
	$SIEvÆid©eBuf„r
() {

177 
	`SIEComm™d
(
SIE_CMD_VALIDATE_BUFFER
);

178 
	}
}

180 
	$SIE£tEndpoötSètus
(
uöt8_t
 
ídpoöt
, uöt8_à
°©us
) {

182 
	`SIEComm™d
(
	`SIE_CMD_SET_ENDPOINT_STATUS
(
ídpoöt
));

183 
	`SIEWrôeD©a
(
°©us
);

184 
	}
}

186 
uöt16_t
 
	$SIEgëFømeNumbî
(Ë
	`__©åibuã__
 ((
unu£d
));

187 
uöt16_t
 
	$SIEgëFømeNumbî
() {

189 
uöt16_t
 
lowByã
;

190 
uöt16_t
 
highByã
;

192 
	`SIEComm™d
(
SIE_CMD_READ_FRAME_NUMBER
);

193 
lowByã
 = 
	`SIERódD©a
(
SIE_CMD_READ_FRAME_NUMBER
);

194 
highByã
 = 
	`SIERódD©a
(
SIE_CMD_READ_FRAME_NUMBER
);

196  (
highByã
 << 8Ë| 
lowByã
;

197 
	}
}

199 
	$SIEc⁄figuªDevi˚
() {

201 
	`SIEComm™d
(
SIE_CMD_CONFIGURE_DEVICE
);

202 
	`SIEWrôeD©a
(
SIE_CONF_DEVICE
);

203 
	}
}

205 
	$SIEunc⁄figuªDevi˚
() {

207 
	`SIEComm™d
(
SIE_CMD_CONFIGURE_DEVICE
);

208 
	`SIEWrôeD©a
(0);

209 
	}
}

211 
	$SIEc⁄√˘
() {

213 
uöt8_t
 
°©us
 = 
	`SIEgëDevi˚Sètus
();

214 
	`SIE£tDevi˚Sètus
(
°©us
 | 
SIE_DS_CON
);

215 
	}
}

218 
	$SIEdisc⁄√˘
() {

220 
uöt8_t
 
°©us
 = 
	`SIEgëDevi˚Sètus
();

221 
	`SIE£tDevi˚Sètus
(
°©us
 & ~
SIE_DS_CON
);

222 
	}
}

225 
uöt8_t
 
	$£À˘EndpoötCÀ¨I¡îru±
(
uöt8_t
 
ídpoöt
) {

227 
LPC_USB
->
EpI¡CÃ
 = 
	`EP
(
ídpoöt
);

228 !(
LPC_USB
->
DevI¡St
 & 
CDFULL
));

229  (
uöt8_t
)
LPC_USB
->
CmdD©a
;

230 
	}
}

233 
	$íabÀEndpoötEvít
(
uöt8_t
 
ídpoöt
) {

235 
LPC_USB
->
EpI¡En
 |
	`EP
(
ídpoöt
);

236 
	}
}

238 
	$dißbÀEndpoötEvít
(
uöt8_t
 
ídpoöt
Ë
	`__©åibuã__
 ((
unu£d
));

239 
	$dißbÀEndpoötEvít
(
uöt8_t
 
ídpoöt
) {

241 
LPC_USB
->
EpI¡En
 &~
	`EP
(
ídpoöt
);

242 
	}
}

244 vﬁ©ûê
uöt32_t
 
__©åibuã__
((
u£d
)Ë
	gdummyRód
;

245 
uöt32_t
 
	gUSBHAL
::
	$ídpoötRódc‹e
(
uöt8_t
 
ídpoöt
, uöt8_à*
buf„r
) {

247 
uöt32_t
 
size
;

248 
uöt32_t
 
i
;

249 
uöt32_t
 
d©a
 = 0;

250 
uöt8_t
 
off£t
;

252 
LPC_USB
->
Cål
 = 
	`LOG_ENDPOINT
(
ídpoöt
Ë| 
RD_EN
;

253 !(
LPC_USB
->
RxPLí
 & 
PKT_RDY
));

255 
size
 = 
LPC_USB
->
RxPLí
 & 
PKT_LNGTH_MASK
;

257 
off£t
 = 0;

259 i‡(
size
 > 0) {

260 
i
=0; i<
size
; i++) {

261 i‡(
off£t
==0) {

263 
d©a
 = 
LPC_USB
->
RxD©a
;

267 *
buf„r
 = (
d©a
>>
off£t
) & 0xff;

268 
buf„r
++;

271 
off£t
 = (offset + 8) % 32;

274 
dummyRód
 = 
LPC_USB
->
RxD©a
;

277 
LPC_USB
->
Cål
 = 0;

279 i‡((
ídpoöt
 >> 1) % 3 || (endpoint >> 1) == 0) {

280 
	`SIE£À˘Endpoöt
(
ídpoöt
);

281 
	`SIE˛órBuf„r
();

284  
size
;

285 
	}
}

287 
	$ídpoötWrôec‹e
(
uöt8_t
 
ídpoöt
, uöt8_à*
buf„r
, 
uöt32_t
 
size
) {

289 
uöt32_t
 
ãmp
, 
d©a
;

290 
uöt8_t
 
off£t
;

292 
LPC_USB
->
Cål
 = 
	`LOG_ENDPOINT
(
ídpoöt
Ë| 
WR_EN
;

294 
LPC_USB
->
TxPLí
 = 
size
;

295 
off£t
 = 0;

296 
d©a
 = 0;

298 i‡(
size
>0) {

301 
ãmp
 = *
buf„r
++;

304 
ãmp
 =Åem∞<< 
off£t
;

305 
d©a
 = d©®| 
ãmp
;

308 
off£t
 = (offset + 8) % 32;

309 
size
--;

311 i‡((
off£t
==0Ë|| (
size
==0)) {

313 
LPC_USB
->
TxD©a
 = 
d©a
;

314 
d©a
 = 0;

316 } 
size
>0);

318 
LPC_USB
->
TxD©a
 = 0;

322 
LPC_USB
->
Cål
=0;

324 
	`SIE£À˘Endpoöt
(
ídpoöt
);

325 
	`SIEvÆid©eBuf„r
();

326 
	}
}

328 
	gUSBHAL
::
	$USBHAL
() {

330 
	`NVIC_DißbÀIRQ
(
USB_IRQn
);

333 
ïCÆlback
[0] = &
USBHAL
::
EP1_OUT_ˇŒback
;

334 
ïCÆlback
[1] = &
USBHAL
::
EP1_IN_ˇŒback
;

335 
ïCÆlback
[2] = &
USBHAL
::
EP2_OUT_ˇŒback
;

336 
ïCÆlback
[3] = &
USBHAL
::
EP2_IN_ˇŒback
;

337 
ïCÆlback
[4] = &
USBHAL
::
EP3_OUT_ˇŒback
;

338 
ïCÆlback
[5] = &
USBHAL
::
EP3_IN_ˇŒback
;

339 
ïCÆlback
[6] = &
USBHAL
::
EP4_OUT_ˇŒback
;

340 
ïCÆlback
[7] = &
USBHAL
::
EP4_IN_ˇŒback
;

341 
ïCÆlback
[8] = &
USBHAL
::
EP5_OUT_ˇŒback
;

342 
ïCÆlback
[9] = &
USBHAL
::
EP5_IN_ˇŒback
;

343 
ïCÆlback
[10] = &
USBHAL
::
EP6_OUT_ˇŒback
;

344 
ïCÆlback
[11] = &
USBHAL
::
EP6_IN_ˇŒback
;

345 
ïCÆlback
[12] = &
USBHAL
::
EP7_OUT_ˇŒback
;

346 
ïCÆlback
[13] = &
USBHAL
::
EP7_IN_ˇŒback
;

347 
ïCÆlback
[14] = &
USBHAL
::
EP8_OUT_ˇŒback
;

348 
ïCÆlback
[15] = &
USBHAL
::
EP8_IN_ˇŒback
;

349 
ïCÆlback
[16] = &
USBHAL
::
EP9_OUT_ˇŒback
;

350 
ïCÆlback
[17] = &
USBHAL
::
EP9_IN_ˇŒback
;

351 
ïCÆlback
[18] = &
USBHAL
::
EP10_OUT_ˇŒback
;

352 
ïCÆlback
[19] = &
USBHAL
::
EP10_IN_ˇŒback
;

353 
ïCÆlback
[20] = &
USBHAL
::
EP11_OUT_ˇŒback
;

354 
ïCÆlback
[21] = &
USBHAL
::
EP11_IN_ˇŒback
;

355 
ïCÆlback
[22] = &
USBHAL
::
EP12_OUT_ˇŒback
;

356 
ïCÆlback
[23] = &
USBHAL
::
EP12_IN_ˇŒback
;

357 
ïCÆlback
[24] = &
USBHAL
::
EP13_OUT_ˇŒback
;

358 
ïCÆlback
[25] = &
USBHAL
::
EP13_IN_ˇŒback
;

359 
ïCÆlback
[26] = &
USBHAL
::
EP14_OUT_ˇŒback
;

360 
ïCÆlback
[27] = &
USBHAL
::
EP14_IN_ˇŒback
;

361 
ïCÆlback
[28] = &
USBHAL
::
EP15_OUT_ˇŒback
;

362 
ïCÆlback
[29] = &
USBHAL
::
EP15_IN_ˇŒback
;

365 
LPC_SC
->
PCONP
 |
PCUSB
;

368 
LPC_USB
->
USBClkCål
 |
DEV_CLK_EN
 | 
AHB_CLK_EN
 | 
PORT_CLK_EN
;

369 (
LPC_USB
->
USBClkSt
 & (
DEV_CLK_EN
 | 
AHB_CLK_EN
 | 
PORT_CLK_EN
)Ë!(
DEV_CLK_ON
 | 
AHB_CLK_ON
 | PORT_CLK_EN));

372 
LPC_USB
->
StCål
 |= 3;

376 
LPC_IOCON
->
P0_31
 &= ~0x07;

377 
LPC_IOCON
->
P0_31
 |= 0x01;

380 
	`SIEdisc⁄√˘
();

383 
LPC_IOCON
->
P0_14
 &= ~0x07;

384 
LPC_IOCON
->
P0_14
 |= 0x03;

387 
	`waô
(0.3);

390 
	`ªÆi£Endpoöt
(
EP0IN
, 
MAX_PACKET_SIZE_EP0
, 0);

391 
	`ªÆi£Endpoöt
(
EP0OUT
, 
MAX_PACKET_SIZE_EP0
, 0);

394 
ö°™˚
 = 
this
;

395 
	`NVIC_SëVe˘‹
(
USB_IRQn
, (
uöt32_t
)&
_usbi§
);

398 
LPC_USB
->
DevI¡En
 = 
EP_SLOW
 | 
DEV_STAT
 | 
FRAME
;

399 
	`íabÀEndpoötEvít
(
EP0IN
);

400 
	`íabÀEndpoötEvít
(
EP0OUT
);

401 
	}
}

403 
	gUSBHAL
::~
	$USBHAL
() {

405 
	`SIEdisc⁄√˘
();

407 
	`NVIC_DißbÀIRQ
(
USB_IRQn
);

408 
	}
}

410 
	gUSBHAL
::
	$c⁄√˘
() {

411 
	`NVIC_E«bÀIRQ
(
USB_IRQn
);

413 
	`SIEc⁄√˘
();

414 
	}
}

416 
	gUSBHAL
::
	$disc⁄√˘
() {

417 
	`NVIC_DißbÀIRQ
(
USB_IRQn
);

419 
	`SIEdisc⁄√˘
();

420 
	}
}

422 
	gUSBHAL
::
	$c⁄figuªDevi˚
() {

423 
	`SIEc⁄figuªDevi˚
();

424 
	}
}

426 
	gUSBHAL
::
	$unc⁄figuªDevi˚
() {

427 
	`SIEunc⁄figuªDevi˚
();

428 
	}
}

430 
	gUSBHAL
::
	$£tAddªss
(
uöt8_t
 
addªss
) {

431 
	`SIE£tAddªss
(
addªss
);

432 
	}
}

434 
	gUSBHAL
::
	$EP0£tup
(
uöt8_t
 *
buf„r
) {

435 
	`ídpoötRódc‹e
(
EP0OUT
, 
buf„r
);

436 
	}
}

438 
	gUSBHAL
::
	$EP0ªad
() {

440 
	}
}

442 
USBHAL
::
	$EP0ªadSège
() {

444 
	}
}

446 
uöt32_t
 
USBHAL
::
	$EP0gëRódResu…
(
uöt8_t
 *
buf„r
) {

447  
	`ídpoötRódc‹e
(
EP0OUT
, 
buf„r
);

448 
	}
}

450 
	gUSBHAL
::
	$EP0wrôe
(
uöt8_t
 *
buf„r
, 
uöt32_t
 
size
) {

451 
	`ídpoötWrôec‹e
(
EP0IN
, 
buf„r
, 
size
);

452 
	}
}

454 
	gUSBHAL
::
	$EP0gëWrôeResu…
() {

456 
	}
}

458 
USBHAL
::
	$EP0°Æl
() {

460 
	`°ÆlEndpoöt
(
EP0OUT
);

461 
	}
}

463 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötRód
(
uöt8_t
 
ídpoöt
, 
uöt32_t
 
maximumSize
) {

464  
EP_PENDING
;

465 
	}
}

467 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötRódResu…
(
uöt8_t
 
ídpoöt
, uöt8_à* 
buf„r
, 
uöt32_t
 *
byãsRód
) {

470 i‡((
ídpoöt
 >> 1) % 3 || (endpoint >> 1) == 0) {

471 i‡(!(
ïCom∂ëe
 & 
	`EP
(
ídpoöt
)))

472  
EP_PENDING
;

475 *
byãsRód
 = 
	`ídpoötRódc‹e
(
ídpoöt
, 
buf„r
);

476 
ïCom∂ëe
 &~
	`EP
(
ídpoöt
);

477  
EP_COMPLETED
;

478 
	}
}

480 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötWrôe
(
uöt8_t
 
ídpoöt
, uöt8_à*
d©a
, 
uöt32_t
 
size
) {

481 i‡(
	`gëEndpoötSèŒSèã
(
ídpoöt
)) {

482  
EP_STALLED
;

485 
ïCom∂ëe
 &~
	`EP
(
ídpoöt
);

487 
	`ídpoötWrôec‹e
(
ídpoöt
, 
d©a
, 
size
);

488  
EP_PENDING
;

489 
	}
}

491 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötWrôeResu…
(
uöt8_t
 
ídpoöt
) {

492 i‡(
ïCom∂ëe
 & 
	`EP
(
ídpoöt
)) {

493 
ïCom∂ëe
 &~
	`EP
(
ídpoöt
);

494  
EP_COMPLETED
;

497  
EP_PENDING
;

498 
	}
}

500 
boﬁ
 
	gUSBHAL
::
	$ªÆi£Endpoöt
(
uöt8_t
 
ídpoöt
, 
uöt32_t
 
maxPackë
, uöt32_à
Êags
) {

502 
LPC_USB
->
DevI¡CÃ
 = 
EP_RLZED
;

503 
LPC_USB
->
ReEp
 |
	`EP
(
ídpoöt
);

504 
LPC_USB
->
EpInd
 = 
ídpoöt
;

505 
LPC_USB
->
MaxPSize
 = 
maxPackë
;

507 !(
LPC_USB
->
DevI¡St
 & 
EP_RLZED
));

508 
LPC_USB
->
DevI¡CÃ
 = 
EP_RLZED
;

511 
ídpoötSèŒSèã
 &~
	`EP
(
ídpoöt
);

513 
	`íabÀEndpoötEvít
(
ídpoöt
);

514  
åue
;

515 
	}
}

517 
	gUSBHAL
::
	$°ÆlEndpoöt
(
uöt8_t
 
ídpoöt
) {

519 i‡–(
ídpoöt
==
EP0IN
Ë|| (ídpoöt==
EP0OUT
) ) {

521 
	`SIE£tEndpoötSètus
(
EP0OUT
, 
SIE_SES_CND_ST
);

523 
	`SIE£tEndpoötSètus
(
ídpoöt
, 
SIE_SES_ST
);

526 
ídpoötSèŒSèã
 |
	`EP
(
ídpoöt
);

528 
	}
}

530 
	gUSBHAL
::
	$un°ÆlEndpoöt
(
uöt8_t
 
ídpoöt
) {

532 
	`SIE£tEndpoötSètus
(
ídpoöt
, 0);

535 
ídpoötSèŒSèã
 &~
	`EP
(
ídpoöt
);

536 
	}
}

538 
boﬁ
 
	gUSBHAL
::
	$gëEndpoötSèŒSèã
(
uöt8_t
 
ídpoöt
) {

540  
ídpoötSèŒSèã
 & 
	`EP
(
ídpoöt
);

541 
	}
}

543 
	gUSBHAL
::
	$ªmŸeWakeup
() {

545 
uöt8_t
 
°©us
;

548 
LPC_USB
->
USBClkCål
 |
DEV_CLK_EN
 | 
AHB_CLK_EN
;

549 
LPC_USB
->
USBClkSt
 !(
DEV_CLK_ON
 | 
AHB_CLK_ON
));

551 
°©us
 = 
	`SIEgëDevi˚Sètus
();

552 
	`SIE£tDevi˚Sètus
(
°©us
 & ~
SIE_DS_SUS
);

553 
	}
}

555 
	gUSBHAL
::
	$_usbi§
() {

556 
ö°™˚
->
	`usbi§
();

557 
	}
}

560 
	gUSBHAL
::
	$usbi§
() {

561 
uöt8_t
 
devSèt
;

563 i‡(
LPC_USB
->
DevI¡St
 & 
FRAME
) {

565 
	`SOF
(
	`SIEgëFømeNumbî
());

567 
LPC_USB
->
DevI¡CÃ
 = 
FRAME
;

570 i‡(
LPC_USB
->
DevI¡St
 & 
DEV_STAT
) {

573 
LPC_USB
->
DevI¡CÃ
 = 
DEV_STAT
;

576 
devSèt
 = 
	`SIEgëDevi˚Sètus
();

579 i‡(
devSèt
 & 
SIE_DS_SUS_CH
) {

581 if((
devSèt
 & 
SIE_DS_SUS
) != 0) {

582 
	`su•ídSèãCh™ged
(0);

586 i‡(
devSèt
 & 
SIE_DS_RST
) {

588 if((
devSèt
 & 
SIE_DS_SUS
) == 0) {

589 
	`su•ídSèãCh™ged
(1);

591 
	`busRe£t
();

595 i‡(
LPC_USB
->
DevI¡St
 & 
EP_SLOW
) {

599 i‡(
LPC_USB
->
EpI¡St
 & 
	`EP
(
EP0OUT
)) {

600 i‡(
	`£À˘EndpoötCÀ¨I¡îru±
(
EP0OUT
Ë& 
SIE_SE_STP
) {

602 
	`EP0£tupCÆlback
();

604 
	`EP0out
();

606 
LPC_USB
->
DevI¡CÃ
 = 
EP_SLOW
;

609 i‡(
LPC_USB
->
EpI¡St
 & 
	`EP
(
EP0IN
)) {

610 
	`£À˘EndpoötCÀ¨I¡îru±
(
EP0IN
);

611 
LPC_USB
->
DevI¡CÃ
 = 
EP_SLOW
;

612 
	`EP0ö
();

615 
uöt8_t
 
num
 = 2;Çum < 16*2;Çum++) {

616 i‡(
LPC_USB
->
EpI¡St
 & 
	`EP
(
num
)) {

617 
	`£À˘EndpoötCÀ¨I¡îru±
(
num
);

618 
ïCom∂ëe
 |
	`EP
(
num
);

619 
LPC_USB
->
DevI¡CÃ
 = 
EP_SLOW
;

620 i‡((
ö°™˚
->*(
ïCÆlback
[
num
 - 2]))()) {

621 
ïCom∂ëe
 &~
	`EP
(
num
);

626 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBHAL_Maxim.cpp

34 #i‡
deföed
(
TARGET_Maxim
)

36 
	~"USBHAL.h
"

37 
	~"usb_ªgs.h
"

38 
	~"˛km™_ªgs.h
"

40 
	#CONNECT_INTS
 (
MXC_F_USB_DEV_INTEN_BRST
 | 
MXC_F_USB_DEV_INTEN_SETUP
 | 
MXC_F_USB_DEV_INTEN_EP_IN
 | 
MXC_F_USB_DEV_INTEN_EP_OUT
 | 
MXC_F_USB_DEV_INTEN_DMA_ERR
)

	)

42 
USBHAL
 *
	gUSBHAL
::
ö°™˚
;

45 vﬁ©ûê
uöt32_t
 
	mbuf0_desc
;

46 vﬁ©ûê
uöt32_t
 
	mbuf0_addªss
;

47 vﬁ©ûê
uöt32_t
 
	mbuf1_desc
;

48 vﬁ©ûê
uöt32_t
 
	mbuf1_addªss
;

49 } 
	tï_buf„r_t
;

52 
ï_buf„r_t
 
	mout_buf„r
;

53 
ï_buf„r_t
 
	mö_buf„r
;

54 } 
	tï0_buf„r_t
;

57 
ï0_buf„r_t
 
	mï0
;

58 
ï_buf„r_t
 
	mï
[
MXC_USB_NUM_EP
 - 1];

59 } 
	tï_buf„r_des¸ùt‹_t
;

62 #ifde‡
__IAR_SYSTEMS_ICC__


63 #¥agm®
d©a_Æignmít
 = 512

65 
__©åibuã__
 ((
	$Æig√d
 (512)))

67 
ï_buf„r_des¸ùt‹_t
 
ï_buf„r_des¸ùt‹
;

70 #ifde‡
__IAR_SYSTEMS_ICC__


71 #¥agm®
d©a_Æignmít
 = 4

73 
	`__©åibuã__
 ((
	$Æig√d
 (4)))

75 
uöt8_t
 
Æig√d_buf„r
[
NUMBER_OF_LOGICAL_ENDPOINTS
][
MXC_USB_MAX_PACKET
];

79 
CTRL_NONE
 = 0,

80 
CTRL_SETUP
,

81 
CTRL_OUT
,

82 
CTRL_IN
,

83 } 
c⁄åﬁ_°©e
;

85 
USBHAL
::
	$USBHAL
()

87 
	`NVIC_DißbÀIRQ
(
USB_IRQn
);

90 
	`MBED_ASSERT
(
MXC_CLKMAN
->
˛k_c⁄fig
 & 
MXC_F_CLKMAN_CLK_CONFIG_PLL_ENABLE
);

93 
MXC_CLKMAN
->
˛k_˘æ
 |
MXC_F_CLKMAN_CLK_CTRL_USB_GATE_N
;

96 
MXC_USB
->
˙
 = 0;

97 
MXC_USB
->
˙
 = 1;

98 
MXC_USB
->
dev_öãn
 = 0;

99 
MXC_USB
->
dev_˙
 = 0;

100 
MXC_USB
->
dev_˙
 = 
MXC_F_USB_DEV_CN_URST
;

101 
MXC_USB
->
dev_˙
 = 0;

104 
ïCÆlback
[
EP0OUT
] = 
NULL
;

105 
ïCÆlback
[
EP0IN
] = 
NULL
;

106 
ïCÆlback
[
EP1OUT
] = &
USBHAL
::
EP1_OUT_ˇŒback
;

107 
ïCÆlback
[
EP1IN
 ] = &
USBHAL
::
EP1_IN_ˇŒback
;

108 
ïCÆlback
[
EP2OUT
] = &
USBHAL
::
EP2_OUT_ˇŒback
;

109 
ïCÆlback
[
EP2IN
 ] = &
USBHAL
::
EP2_IN_ˇŒback
;

110 
ïCÆlback
[
EP3OUT
] = &
USBHAL
::
EP3_OUT_ˇŒback
;

111 
ïCÆlback
[
EP3IN
 ] = &
USBHAL
::
EP3_IN_ˇŒback
;

112 
ïCÆlback
[
EP4OUT
] = &
USBHAL
::
EP4_OUT_ˇŒback
;

113 
ïCÆlback
[
EP4IN
 ] = &
USBHAL
::
EP4_IN_ˇŒback
;

114 
ïCÆlback
[
EP5OUT
] = &
USBHAL
::
EP5_OUT_ˇŒback
;

115 
ïCÆlback
[
EP5IN
 ] = &
USBHAL
::
EP5_IN_ˇŒback
;

116 
ïCÆlback
[
EP6OUT
] = &
USBHAL
::
EP6_OUT_ˇŒback
;

117 
ïCÆlback
[
EP6IN
 ] = &
USBHAL
::
EP6_IN_ˇŒback
;

118 
ïCÆlback
[
EP7OUT
] = &
USBHAL
::
EP7_OUT_ˇŒback
;

119 
ïCÆlback
[
EP7IN
 ] = &
USBHAL
::
EP7_IN_ˇŒback
;

122 
c⁄åﬁ_°©e
 = 
CTRL_NONE
;

125 
MXC_USB
->
ï_ba£
 = (
uöt32_t
)&
ï_buf„r_des¸ùt‹
;

128 
ö°™˚
 = 
this
;

129 
	`NVIC_SëVe˘‹
(
USB_IRQn
, (
uöt32_t
)&
_usbi§
);

130 
	`NVIC_E«bÀIRQ
(
USB_IRQn
);

131 
	}
}

133 
	gUSBHAL
::~
	$USBHAL
()

135 
MXC_USB
->
dev_˙
 = 
MXC_F_USB_DEV_CN_URST
;

136 
MXC_USB
->
dev_˙
 = 0;

137 
MXC_USB
->
˙
 = 0;

138 
	}
}

140 
	gUSBHAL
::
	$c⁄√˘
()

143 
MXC_USB
->
dev_öãn
 |
CONNECT_INTS
;

146 
MXC_USB
->
ï
[0] |
MXC_F_USB_EP_INT_EN
;

149 
MXC_USB
->
dev_˙
 |(
MXC_F_USB_DEV_CN_CONNECT
 | 
MXC_F_USB_DEV_CN_FIFO_MODE
);

150 
	}
}

152 
	gUSBHAL
::
	$disc⁄√˘
()

155 
MXC_USB
->
dev_öãn
 &~
CONNECT_INTS
;

158 
MXC_USB
->
dev_˙
 &~
MXC_F_USB_DEV_CN_CONNECT
;

159 
	}
}

161 
	gUSBHAL
::
	$c⁄figuªDevi˚
()

164 
	}
}

166 
USBHAL
::
	$unc⁄figuªDevi˚
()

169 
i
 = 0; i < 
MXC_USB_NUM_EP
; i++) {

171 
MXC_USB
->
ï
[
i
] &~
MXC_F_USB_EP_DIR
;

172 
MXC_USB
->
ï
[
i
] |
MXC_F_USB_EP_DT
;

174 
	}
}

176 
	gUSBHAL
::
	$£tAddªss
(
uöt8_t
 
addªss
)

179 
	}
}

181 
USBHAL
::
	$ªmŸeWakeup
()

184 
	}
}

186 
ï_buf„r_t
 *
	$gë_desc
(
uöt8_t
 
ídpoöt
)

188 
uöt8_t
 
ïnum
 = 
	`EP_NUM
(
ídpoöt
);

189 
ï_buf„r_t
 *
desc
;

191 i‡(
ïnum
 == 0) {

192 i‡(
	`IN_EP
(
ídpoöt
)) {

193 
desc
 = &
ï_buf„r_des¸ùt‹
.
ï0
.
ö_buf„r
;

195 
desc
 = &
ï_buf„r_des¸ùt‹
.
ï0
.
out_buf„r
;

198 
desc
 = &
ï_buf„r_des¸ùt‹
.
ï
[
ïnum
 - 1];

201  
desc
;

202 
	}
}

204 
	gUSBHAL
::
	$EP0£tup
(
uöt8_t
 *
buf„r
)

206 
	`mem˝y
(
buf„r
, (*)&
MXC_USB
->
£tup0
, 8);

207 
	}
}

209 
	gUSBHAL
::
	$EP0ªad
()

211 i‡(
c⁄åﬁ_°©e
 =
CTRL_IN
) {

213 
MXC_USB
->
ï
[0] |
MXC_F_USB_EP_ST_ACK
;

214 
c⁄åﬁ_°©e
 = 
CTRL_NONE
;

218 
c⁄åﬁ_°©e
 = 
CTRL_OUT
;

220 
	`ídpoötRód
(
EP0OUT
, 
MAX_PACKET_SIZE_EP0
);

221 
	}
}

223 
	gUSBHAL
::
	$EP0ªadSège
()

226 
	}
}

228 
uöt32_t
 
USBHAL
::
	$EP0gëRódResu…
(
uöt8_t
 *
buf„r
)

230 
uöt32_t
 
size
;

232 i‡(
MXC_USB
->
out_ow√r
 & 1) {

237 
ï_buf„r_t
 *
desc
 = 
	`gë_desc
(
EP0OUT
);

238 
size
 = 
desc
->
buf0_desc
;

239 
	`mem˝y
(
buf„r
, 
Æig√d_buf„r
[0], 
size
);

241  
size
;

242 
	}
}

244 
	gUSBHAL
::
	$EP0wrôe
(
uöt8_t
 *
buf„r
, 
uöt32_t
 
size
)

246 i‡((
size
 =0Ë&& (
c⁄åﬁ_°©e
 !
CTRL_IN
)) {

248 
MXC_USB
->
ï
[0] |
MXC_F_USB_EP_ST_ACK
;

249 
c⁄åﬁ_°©e
 = 
CTRL_NONE
;

253 
c⁄åﬁ_°©e
 = 
CTRL_IN
;

255 
	`ídpoötWrôe
(
EP0IN
, 
buf„r
, 
size
);

256 
	}
}

258 
	gUSBHAL
::
	$EP0°Æl
()

260 
	`°ÆlEndpoöt
(0);

261 
	}
}

263 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötRód
(
uöt8_t
 
ídpoöt
, 
uöt32_t
 
maximumSize
)

265 
uöt8_t
 
ïnum
 = 
	`EP_NUM
(
ídpoöt
);

267 i‡((
ídpoöt
 >
NUMBER_OF_PHYSICAL_ENDPOINTS
Ë|| 
	`IN_EP
(endpoint)) {

268  
EP_INVALID
;

271 i‡(
maximumSize
 > 
MXC_USB_MAX_PACKET
) {

272  
EP_INVALID
;

275 
uöt32_t
 
mask
 = (1 << 
ïnum
);

276 i‡(
MXC_USB
->
out_ow√r
 & 
mask
) {

277  
EP_INVALID
;

280 
ï_buf„r_t
 *
desc
 = 
	`gë_desc
(
ídpoöt
);

281 
desc
->
buf0_desc
 = 
maximumSize
;

282 
desc
->
buf0_addªss
 = (
uöt32_t
)
Æig√d_buf„r
[
ïnum
];

284 
MXC_USB
->
out_ow√r
 = 
mask
;

286  
EP_PENDING
;

287 
	}
}

289 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötRódResu…
(
uöt8_t
 
ídpoöt
, uöt8_à*
d©a
, 
uöt32_t
 *
byãsRód
)

291 i‡((
ídpoöt
 >
NUMBER_OF_PHYSICAL_ENDPOINTS
Ë|| 
	`IN_EP
(endpoint)) {

292  
EP_INVALID
;

295 
uöt32_t
 
mask
 = (1 << 
	`EP_NUM
(
ídpoöt
));

296 i‡(
MXC_USB
->
out_ow√r
 & 
mask
) {

297  
EP_PENDING
;

301 
ï_buf„r_t
 *
desc
 = 
	`gë_desc
(
ídpoöt
);

302 *
byãsRód
 = 
desc
->
buf0_desc
;

303 
	`mem˝y
(
d©a
, 
Æig√d_buf„r
[
	`EP_NUM
(
ídpoöt
)], *
byãsRód
);

305  
EP_COMPLETED
;

306 
	}
}

308 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötWrôe
(
uöt8_t
 
ídpoöt
, uöt8_à*
d©a
, 
uöt32_t
 
size
)

310 
uöt8_t
 
ïnum
 = 
	`EP_NUM
(
ídpoöt
);

312 i‡((
ídpoöt
 >
NUMBER_OF_PHYSICAL_ENDPOINTS
Ë|| 
	`OUT_EP
(endpoint)) {

313  
EP_INVALID
;

316 i‡(
size
 > 
MXC_USB_MAX_PACKET
) {

317  
EP_INVALID
;

320 
uöt32_t
 
mask
 = (1 << 
ïnum
);

321 i‡(
MXC_USB
->
ö_ow√r
 & 
mask
) {

322  
EP_INVALID
;

325 
	`mem˝y
(
Æig√d_buf„r
[
ïnum
], 
d©a
, 
size
);

327 
ï_buf„r_t
 *
desc
 = 
	`gë_desc
(
ídpoöt
);

328 
desc
->
buf0_desc
 = 
size
;

329 
desc
->
buf0_addªss
 = (
uöt32_t
)
Æig√d_buf„r
[
ïnum
];

332 
MXC_USB
->
ö_ow√r
 = 
mask
;

334  
EP_PENDING
;

335 
	}
}

337 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötWrôeResu…
(
uöt8_t
 
ídpoöt
)

339 
uöt32_t
 
mask
 = (1 << 
	`EP_NUM
(
ídpoöt
));

340 i‡(
MXC_USB
->
ö_ow√r
 & 
mask
) {

341  
EP_PENDING
;

344  
EP_COMPLETED
;

345 
	}
}

347 
	gUSBHAL
::
	$°ÆlEndpoöt
(
uöt8_t
 
ídpoöt
)

349 
uöt8_t
 
ïnum
 = 
	`EP_NUM
(
ídpoöt
);

351 i‡(
ïnum
 == 0) {

352 
MXC_USB
->
ï
[
ïnum
] |
MXC_F_USB_EP_ST_STALL
;

355 
MXC_USB
->
ï
[
ïnum
] |
MXC_F_USB_EP_STALL
;

356 
	}
}

358 
	gUSBHAL
::
	$un°ÆlEndpoöt
(
uöt8_t
 
ídpoöt
)

360 
MXC_USB
->
ï
[
	`EP_NUM
(
ídpoöt
)] &~
MXC_F_USB_EP_STALL
;

361 
	}
}

363 
boﬁ
 
	gUSBHAL
::
	$ªÆi£Endpoöt
(
uöt8_t
 
ídpoöt
, 
uöt32_t
 
maxPackë
, uöt32_à
›ti⁄s
)

365 
uöt8_t
 
ïnum
 = 
	`EP_NUM
(
ídpoöt
);

366 
uöt32_t
 
ï_˘æ
;

368 i‡(
ïnum
 >
NUMBER_OF_PHYSICAL_ENDPOINTS
) {

369  
Ál£
;

372 i‡(
	`IN_EP
(
ídpoöt
)) {

373 
ï_˘æ
 = (
MXC_V_USB_EP_DIR_IN
 << 
MXC_F_USB_EP_DIR_POS
);

375 
ï_˘æ
 = (
MXC_S_USB_EP_DIR_OUT
 << 
MXC_F_USB_EP_DIR_POS
);

378 
ï_˘æ
 |(
MXC_F_USB_EP_DT
 | 
MXC_F_USB_EP_INT_EN
);

380 
MXC_USB
->
ï
[
ïnum
] = 
ï_˘æ
;

382  
åue
;

383 
	}
}

385 
boﬁ
 
	gUSBHAL
::
	$gëEndpoötSèŒSèã
(
ídpoöt
)

387  !!(
MXC_USB
->
ï
[
ídpoöt
] & 
MXC_F_USB_EP_STALL
);

388 
	}
}

390 
	gUSBHAL
::
	$_usbi§
()

392 
ö°™˚
->
	`usbi§
();

393 
	}
}

395 
	gUSBHAL
::
	$usbi§
()

398 
uöt32_t
 
úq_Êags
 = 
MXC_USB
->
dev_ötÊ
;

399 
MXC_USB
->
dev_ötÊ
 = 
úq_Êags
;

402 
úq_Êags
 &
MXC_USB
->
dev_öãn
;

405 i‡(
úq_Êags
 & 
MXC_F_USB_DEV_INTFL_SUSP
) {

406 
	`su•ídSèãCh™ged
(1);

410 i‡(
úq_Êags
 & 
MXC_F_USB_DEV_INTFL_BRST
) {

413 
i
 = 0; i < 
MXC_USB_NUM_EP
; i++) {

415 
MXC_USB
->
ï
[
i
] &~
MXC_F_USB_EP_DIR
;

416 
MXC_USB
->
ï
[
i
] |
MXC_F_USB_EP_DT
;

420 
c⁄åﬁ_°©e
 = 
CTRL_NONE
;

422 
	`busRe£t
();

429 i‡(
úq_Êags
 & 
MXC_F_USB_DEV_INTFL_SETUP
) {

430 
c⁄åﬁ_°©e
 = 
CTRL_SETUP
;

431 
	`EP0£tupCÆlback
();

435 i‡(
úq_Êags
 & 
MXC_F_USB_DEV_INTFL_EP_IN
) {

437 
uöt32_t
 
ö_úqs
 = 
MXC_USB
->
ö_öt
;

438 
MXC_USB
->
ö_öt
 = 
ö_úqs
;

440 i‡(
ö_úqs
 & 1) {

441 
	`EP0ö
();

444 
uöt8_t
 
ïnum
 = 1;É≤um < 
NUMBER_OF_LOGICAL_ENDPOINTS
;Épnum++) {

445 
uöt32_t
 
úq_mask
 = (1 << 
ïnum
);

446 i‡(
ö_úqs
 & 
úq_mask
) {

447 
uöt8_t
 
ídpoöt
 = (
ïnum
 << 1Ë| 
DIR_IN
;

448 (
ö°™˚
->*(
ïCÆlback
[
ídpoöt
]))();

454 i‡(
úq_Êags
 & 
MXC_F_USB_DEV_INTFL_EP_OUT
) {

456 
uöt32_t
 
out_úqs
 = 
MXC_USB
->
out_öt
;

457 
MXC_USB
->
out_öt
 = 
out_úqs
;

459 i‡(
out_úqs
 & 1) {

460 
	`EP0out
();

463 
uöt8_t
 
ïnum
 = 1;É≤um < 
NUMBER_OF_LOGICAL_ENDPOINTS
;Épnum++) {

464 
uöt32_t
 
úq_mask
 = (1 << 
ïnum
);

465 i‡(
out_úqs
 & 
úq_mask
) {

466 
uöt8_t
 
ídpoöt
 = (
ïnum
 << 1Ë| 
DIR_OUT
;

467 (
ö°™˚
->*(
ïCÆlback
[
ídpoöt
]))();

471 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBHAL_RZ_A1H.cpp

26 #i‡
deföed
(
TARGET_RZ_A1H
Ë|| deföed(
TARGET_VK_RZ_A1H
)

36 
	~"r_ty≥defs.h
"

37 
	~"iodeföe.h
"

39 
	~"USBHAL.h
"

40 
	~"devdrv_usb_fun˘i⁄_≠i.h
"

41 
	~"usb_iobômask.h
"

42 
	~"rza_io_ªgrw.h
"

43 
	~"USBDevi˚_Ty≥s.h
"

44 
	~"usb_fun˘i⁄_£âög.h
"

49 c⁄° 
	sPIPECFGREC
 {

50 
uöt16_t
 
ídpoöt
;

51 
uöt16_t
 
pùe£l
;

52 
uöt16_t
 
pùecfg
;

53 
uöt16_t
 
pùebuf
;

54 
uöt16_t
 
pùemaxp
;

55 
uöt16_t
 
pùïîi
;

56 } 
def_pùecfg
[] = {

59 
EP1OUT
,

60 6 | 
USB_FUNCTION_D0FIFO_USE
,

61 
USB_FUNCTION_INTERRUPT
 |

62 
USB_FUNCTION_BFREOFF
 |

63 
USB_FUNCTION_DBLBOFF
 |

64 
USB_FUNCTION_CNTMDON
 |

65 
USB_FUNCTION_SHTNAKOFF
 |

66 
USB_FUNCTION_DIR_P_OUT
 |

67 
USB_FUNCTION_EP1
,

69 
MAX_PACKET_SIZE_EP1
,

70 
DEVDRV_USBF_OFF
 |

71 –3 << 
USB_PIPEPERI_IITV_SHIFT
 ),

74 
EP1IN
,

75 7 | 
USB_FUNCTION_D1FIFO_USE
,

76 
USB_FUNCTION_INTERRUPT
 |

77 
USB_FUNCTION_BFREOFF
 |

78 
USB_FUNCTION_DBLBOFF
 |

79 
USB_FUNCTION_CNTMDOFF
 |

80 
USB_FUNCTION_SHTNAKOFF
 |

81 
USB_FUNCTION_DIR_P_IN
 |

82 
USB_FUNCTION_EP1
,

84 
MAX_PACKET_SIZE_EP1
,

85 
DEVDRV_USBF_OFF
 |

86 –3 << 
USB_PIPEPERI_IITV_SHIFT
 ),

89 
EP2OUT
,

90 3 | 
USB_FUNCTION_D0FIFO_USE
,

91 
USB_FUNCTION_BULK
 |

92 
USB_FUNCTION_BFREOFF
 |

93 
USB_FUNCTION_DBLBON
 |

94 
USB_FUNCTION_CNTMDON
 |

95 
USB_FUNCTION_SHTNAKON
 |

96 
USB_FUNCTION_DIR_P_OUT
 |

97 
USB_FUNCTION_EP2
,

99 
MAX_PACKET_SIZE_EP2
,

100 
DEVDRV_USBF_OFF
 |

101 –0 << 
USB_PIPEPERI_IITV_SHIFT
 ),

104 
EP2IN
,

105 4 | 
USB_FUNCTION_D1FIFO_USE
,

106 
USB_FUNCTION_BULK
 |

107 
USB_FUNCTION_BFREOFF
 |

108 
USB_FUNCTION_DBLBOFF
 |

109 
USB_FUNCTION_CNTMDON
 |

110 
USB_FUNCTION_SHTNAKOFF
 |

111 
USB_FUNCTION_DIR_P_IN
 |

112 
USB_FUNCTION_EP2
,

114 
MAX_PACKET_SIZE_EP2
,

115 
DEVDRV_USBF_OFF
 |

116 –0 << 
USB_PIPEPERI_IITV_SHIFT
 ),

119 
EP3OUT
,

120 1 | 
USB_FUNCTION_D0FIFO_USE
,

121 
USB_FUNCTION_ISO
 |

122 
USB_FUNCTION_BFREOFF
 |

123 
USB_FUNCTION_DBLBON
 |

124 
USB_FUNCTION_CNTMDOFF
 |

125 
USB_FUNCTION_SHTNAKON
 |

126 
USB_FUNCTION_DIR_P_OUT
 |

127 
USB_FUNCTION_EP3
,

129 
MAX_PACKET_SIZE_EP3
,

130 
DEVDRV_USBF_OFF
 |

131 –0 << 
USB_PIPEPERI_IITV_SHIFT
 ),

134 
EP3IN
,

135 2 | 
USB_FUNCTION_D1FIFO_USE
,

136 
USB_FUNCTION_ISO
 |

137 
USB_FUNCTION_BFREOFF
 |

138 
USB_FUNCTION_DBLBON
 |

139 
USB_FUNCTION_CNTMDOFF
 |

140 
USB_FUNCTION_SHTNAKOFF
 |

141 
USB_FUNCTION_DIR_P_IN
 |

142 
USB_FUNCTION_EP3
,

144 
MAX_PACKET_SIZE_EP3
,

145 
DEVDRV_USBF_OFF
 |

146 –0 << 
USB_PIPEPERI_IITV_SHIFT
 ),

156 
USBHAL
 * 
	gUSBHAL
::
ö°™˚
;

158 
IRQn_Ty≥
 
	göt_id
;

159 
uöt16_t
 
	göt_Àvñ
;

160 
uöt16_t
 
	g˛ock_mode
;

161 
uöt16_t
 
	gmode
;

165 
uöt16_t
 
	gEP0_ªad_°©us
;

166 
uöt16_t
 
	gEPx_ªad_°©us
;

168 
uöt16_t
 
	g£tup_buf„r
[
MAX_PACKET_SIZE_EP0
 / 2];

171 
uöt8_t
 
	gªcv_buf„r
[
MAX_PACKET_SIZE_EPBULK
];

172 vﬁ©ûê
uöt16_t
 
	gªcv_îr‹
;

178 
usbx_fun˘i⁄_BRDYI¡îru±PIPE0
 (
uöt16_t
 
°©us
, uöt16_à
öãnb
,

179 
USBHAL
 *
obje˘
, (USBHAL::*
EP0func
)());

181 
usbx_fun˘i⁄_BRDYI¡îru±
 (
uöt16_t
 
°©us
, uöt16_à
öãnb
,

182 
USBHAL
 *
obje˘
, 
boﬁ
 (USBHAL::*
ïCÆlback
[])());

184 
usbx_fun˘i⁄_NRDYI¡îru±PIPE0
(
uöt16_t
 
°©us
, uöt16_à
öãnb
,

185 
USBHAL
 *
obje˘
, (USBHAL::*
EP0func
)());

187 
usbx_fun˘i⁄_NRDYI¡îru±
 (
uöt16_t
 
°©us
, uöt16_à
öãnb
,

188 
USBHAL
 *
obje˘
, 
boﬁ
 (USBHAL::*
ïCÆlback
[])());

190 
usbx_fun˘i⁄_BEMPI¡îru±PIPE0
(
uöt16_t
 
°©us
, uöt16_à
öãnb
,

191 
USBHAL
 *
obje˘
, (USBHAL::*
EP0func
)());

193 
usbx_fun˘i⁄_BEMPI¡îru±
 (
uöt16_t
 
°©us
, uöt16_à
öãnb
,

194 
USBHAL
 *
obje˘
, 
boﬁ
 (USBHAL::*
ïCÆlback
[])());

209 
usbx_fun˘i⁄_BRDYI¡îru±PIPE0
 (

210 
uöt16_t
 
°©us
,

211 
uöt16_t
 
öãnb
,

212 
USBHAL
 *
obje˘
,

213 (
USBHAL
::*
EP0func
)()

216 vﬁ©ûê
uöt16_t
 
dumy_°s
;

217 
uöt16_t
 
ªad_°©us
;

219 
USB20X
.
BRDYSTS
 =

220 (
uöt16_t
)~
g_usbx_fun˘i⁄_bô_£t
[
USB_FUNCTION_PIPE0
];

221 
RZA_IO_RegWrôe_16
(

222 &
USB20X
.
CFIFOSEL
, 
USB_FUNCTION_PIPE0
,

223 
USB_CFIFOSEL_CURPIPE_SHIFT
, 
USB_CFIFOSEL_CURPIPE
);

225 
g_usbx_fun˘i⁄_PùeD©aSize
[
USB_FUNCTION_PIPE0
] =

226 
g_usbx_fun˘i⁄_d©a_cou¡
[
USB_FUNCTION_PIPE0
];

228 
ªad_°©us
 = 
usbx_fun˘i⁄_ªad_buf„r_c
(
USB_FUNCTION_PIPE0
);

230 
g_usbx_fun˘i⁄_PùeD©aSize
[
USB_FUNCTION_PIPE0
] -=

231 
g_usbx_fun˘i⁄_d©a_cou¡
[
USB_FUNCTION_PIPE0
];

233 
ªad_°©us
) {

234 
USB_FUNCTION_READING
:

235 
USB_FUNCTION_READEND
:

237 
usbx_fun˘i⁄_£t_pid_buf
(
USB_FUNCTION_PIPE0
);

240 (
obje˘
->*
EP0func
)();

243 
USB_FUNCTION_READSHRT
:

244 
usbx_fun˘i⁄_dißbÀ_brdy_öt
(
USB_FUNCTION_PIPE0
);

246 
usbx_fun˘i⁄_£t_pid_buf
(
USB_FUNCTION_PIPE0
);

249 (
obje˘
->*
EP0func
)();

252 
USB_FUNCTION_READOVER
:

254 
USB20X
.
CFIFOCTR
 = 
USB_FUNCTION_BITBCLR
;

255 
usbx_fun˘i⁄_dißbÀ_brdy_öt
(
USB_FUNCTION_PIPE0
);

257 
usbx_fun˘i⁄_£t_pid_°Æl
(
USB_FUNCTION_PIPE0
);

260 (
obje˘
->*
EP0func
)();

263 
DEVDRV_USBF_FIFOERROR
:

265 
usbx_fun˘i⁄_dißbÀ_brdy_öt
(
USB_FUNCTION_PIPE0
);

267 
usbx_fun˘i⁄_£t_pid_°Æl
(
USB_FUNCTION_PIPE0
);

271 
dumy_°s
 = 
USB20X
.
BRDYSTS
;

284 
usbx_fun˘i⁄_BRDYI¡îru±
(

285 
uöt16_t
 
°©us
,

286 
uöt16_t
 
öãnb
,

287 
USBHAL
 *
obje˘
,

288 
boﬁ
 (
USBHAL
::*
ïCÆlback
[])()

291 vﬁ©ûê
uöt16_t
 
dumy_°s
;

307 
uöt32_t
 
öt_£n£
 = 0;

308 
uöt16_t
 
pùe
;

309 
uöt16_t
 
pùebô
;

310 
uöt16_t
 
ï
;

312 
pùe
 = 
USB_FUNCTION_PIPE1
;Öùê<
USB_FUNCTION_MAX_PIPE_NO
;Öipe++) {

313 
pùebô
 = 
g_usbx_fun˘i⁄_bô_£t
[
pùe
];

315 i‡((
°©us
 & 
pùebô
Ë&& (
öãnb
 &Öipebit)) {

316 
USB20X
.
BRDYSTS
 = (
uöt16_t
)~
pùebô
;

317 
USB20X
.
BEMPSTS
 = (
uöt16_t
)~
pùebô
;

319 
g_usbx_fun˘i⁄_PùeTbl
[
pùe
] & 
USB_FUNCTION_FIFO_USE
) {

320 
USB_FUNCTION_D0FIFO_DMA
:

321 i‡(
g_usbx_fun˘i⁄_DmaSètus
[
USB_FUNCTION_D0FIFO
] !
USB_FUNCTION_DMA_READY
) {

323 
usbx_fun˘i⁄_dma_öãºu±_d0fifo
(
öt_£n£
);

326 i‡(
RZA_IO_RegRód_16
(

327 &
g_usbx_fun˘i⁄_pùecfg
[
pùe
], 
USB_PIPECFG_BFRE_SHIFT
, 
USB_PIPECFG_BFRE
) == 0) {

329 
usbx_fun˘i⁄_ªad_dma
(
pùe
);

330 
usbx_fun˘i⁄_dißbÀ_brdy_öt
(
pùe
);

332 
USB20X
.
D0FIFOCTR
 = 
USB_FUNCTION_BITBCLR
;

333 
g_usbx_fun˘i⁄_pùe_°©us
[
pùe
] = 
DEVDRV_USBF_PIPE_DONE
;

337 
USB_FUNCTION_D1FIFO_DMA
:

338 i‡(
g_usbx_fun˘i⁄_DmaSètus
[
USB_FUNCTION_D1FIFO
] !
USB_FUNCTION_DMA_READY
) {

340 
usbx_fun˘i⁄_dma_öãºu±_d1fifo
(
öt_£n£
);

343 i‡(
RZA_IO_RegRód_16
(

344 &
g_usbx_fun˘i⁄_pùecfg
[
pùe
], 
USB_PIPECFG_BFRE_SHIFT
, 
USB_PIPECFG_BFRE
) == 0) {

346 
usbx_fun˘i⁄_ªad_dma
(
pùe
);

347 
usbx_fun˘i⁄_dißbÀ_brdy_öt
(
pùe
);

349 
USB20X
.
D1FIFOCTR
 = 
USB_FUNCTION_BITBCLR
;

350 
g_usbx_fun˘i⁄_pùe_°©us
[
pùe
] = 
DEVDRV_USBF_PIPE_DONE
;

355 
ï
 = (
g_usbx_fun˘i⁄_pùecfg
[
pùe
] & 
USB_PIPECFG_EPNUM
Ë>> 
USB_PIPECFG_EPNUM_SHIFT
;

356 
ï
 <<= 1;

357 i‡(
RZA_IO_RegRód_16
(

358 &
g_usbx_fun˘i⁄_pùecfg
[
pùe
], 
USB_PIPECFG_DIR_SHIFT
, 
USB_PIPECFG_DIR
) == 0) {

360 
EPx_ªad_°©us
 = 
DEVDRV_USBF_PIPE_WAIT
;

361 (
obje˘
->*(
ïCÆlback
[
ï
 - 2])) ();

362 
EPx_ªad_°©us
 = 
DEVDRV_USBF_PIPE_DONE
;

365 
EPx_ªad_°©us
 = 
DEVDRV_USBF_PIPE_WAIT
;

366 (
obje˘
->*(
ïCÆlback
[
ï
 - 2 + 1])) ();

367 
EPx_ªad_°©us
 = 
DEVDRV_USBF_PIPE_DONE
;

368 
usbx_fun˘i⁄_wrôe_buf„r
(
pùe
);

374 
dumy_°s
 = 
USB20X
.
BRDYSTS
;

387 
usbx_fun˘i⁄_NRDYI¡îru±PIPE0
(

388 
uöt16_t
 
°©us
,

389 
uöt16_t
 
öãnb
,

390 
USBHAL
 *
obje˘
,

391 (
USBHAL
::*
EP0func
)()

394 vﬁ©ûê
uöt16_t
 
dumy_°s
;

396 
USB20X
.
NRDYSTS
 =

397 (
uöt16_t
)~
g_usbx_fun˘i⁄_bô_£t
[
USB_FUNCTION_PIPE0
];

400 
dumy_°s
 = 
USB20X
.
NRDYSTS
;

413 
usbx_fun˘i⁄_NRDYI¡îru±
(

414 
uöt16_t
 
°©us
,

415 
uöt16_t
 
öãnb
,

416 
USBHAL
 *
obje˘
,

417 
boﬁ
 (
USBHAL
::*
ïCÆlback
[])()

420 vﬁ©ûê
uöt16_t
 
dumy_°s
;

438 
uöt16_t
 
u£fifo
;

440 
uöt16_t
 
pid
;

441 
uöt16_t
 
pùe
;

442 
uöt16_t
 
bôcheck
;

444 
uöt16_t
 
mbw
;

445 
uöt32_t
 
size
;

447 
uöt16_t
 
ï
;

449 
bôcheck
 = (
uöt16_t
)(
°©us
 & 
öãnb
);

451 
USB20X
.
NRDYSTS
 = (
uöt16_t
)~
°©us
;

454 i‡(
RZA_IO_RegRód_16
(&
USB20X
.
SYSCFG0
, 
USB_SYSCFG_DCFM_SHIFT
, 
USB_SYSCFG_DCFM
) == 1) {

460 
pùe
 = 
USB_FUNCTION_PIPE1
;Öùê<
USB_FUNCTION_MAX_PIPE_NO
;Öipe++) {

461 i‡((
bôcheck
&
g_usbx_fun˘i⁄_bô_£t
[
pùe
]) != g_usbx_function_bit_set[pipe]) {

465 i‡(
g_usbx_fun˘i⁄_pùe_°©us
[
pùe
] !
DEVDRV_USBF_PIPE_WAIT
) {

470 
usbx_fun˘i⁄_£t_pid_«k
(
pùe
);

472 
size
 = (
uöt32_t
)
g_usbx_fun˘i⁄_d©a_cou¡
[
pùe
];

473 
mbw
 = 
usbx_fun˘i⁄_gë_mbw
(

474 
size
, (
uöt32_t
)
g_usbx_fun˘i⁄_d©a_poöãr
[
pùe
]);

476 
u£fifo
 = (
uöt16_t
)(
g_usbx_fun˘i⁄_PùeTbl
[
pùe
] & 
USB_FUNCTION_FIFO_USE
);

477 
u£fifo
) {

479 
USB_FUNCTION_D0FIFO_USE
:

480 
usbx_fun˘i⁄_£t_cuΩùe
(

481 
pùe
, 
USB_FUNCTION_D0USE
, 
DEVDRV_USBF_NO
, 
mbw
);

482 
USB20X
.
D0FIFOCTR
 = 
USB_FUNCTION_BITBCLR
;

485 
USB_FUNCTION_D1FIFO_USE
:

486 
usbx_fun˘i⁄_£t_cuΩùe
(

487 
pùe
, 
USB_FUNCTION_D1USE
, 
DEVDRV_USBF_NO
, 
mbw
);

488 
USB20X
.
D1FIFOCTR
 = 
USB_FUNCTION_BITBCLR
;

492 
usbx_fun˘i⁄_£t_cuΩùe
(

493 
pùe
, 
USB_FUNCTION_CUSE
, 
USB_FUNCTION_CFIFO_READ
, 
mbw
);

494 
USB20X
.
CFIFOCTR
 = 
USB_FUNCTION_BITBCLR
;

498 
usbx_fun˘i⁄_a˛rm
(
pùe
);

500 
usbx_fun˘i⁄_íabÀ_ƒdy_öt
(
pùe
);

501 
usbx_fun˘i⁄_íabÀ_brdy_öt
(
pùe
);

503 
usbx_fun˘i⁄_£t_pid_buf
(
pùe
);

506 
pid
 = 
usbx_fun˘i⁄_gë_pid
(
pùe
);

507 i‡((
pid
 =
DEVDRV_USBF_PID_STALL
Ë|| (pid =
DEVDRV_USBF_PID_STALL2
)) {

508 
g_usbx_fun˘i⁄_pùe_°©us
[
pùe
] = 
DEVDRV_USBF_PIPE_STALL
;

510 
usbx_fun˘i⁄_£t_pid_buf
(
pùe
);

513 
ï
 = (
g_usbx_fun˘i⁄_pùecfg
[
pùe
] & 
USB_PIPECFG_EPNUM
Ë>> 
USB_PIPECFG_EPNUM_SHIFT
;

514 
ï
 <<= 1;

515 i‡(
RZA_IO_RegRód_16
(

516 &
g_usbx_fun˘i⁄_pùecfg
[
pùe
], 
USB_PIPECFG_DIR_SHIFT
, 
USB_PIPECFG_DIR
) == 0) {

518 
__NOP
();

521 
__NOP
();

527 
dumy_°s
 = 
USB20X
.
NRDYSTS
;

539 
usbx_fun˘i⁄_BEMPI¡îru±PIPE0
(

540 
uöt16_t
 
°©us
,

541 
uöt16_t
 
öãnb
,

542 
USBHAL
 *
obje˘
,

543 (
USBHAL
::*
EP0func
)()

546 vﬁ©ûê
uöt16_t
 
dumy_°s
;

548 
USB20X
.
BEMPSTS
 =

549 (
uöt16_t
)~
g_usbx_fun˘i⁄_bô_£t
[
USB_FUNCTION_PIPE0
];

550 
RZA_IO_RegWrôe_16
(

551 &
USB20X
.
CFIFOSEL
, 
USB_FUNCTION_PIPE0
,

552 
USB_CFIFOSEL_CURPIPE_SHIFT
, 
USB_CFIFOSEL_CURPIPE
);

555 (
obje˘
->*
EP0func
)();

558 
dumy_°s
 = 
USB20X
.
BEMPSTS
;

571 
usbx_fun˘i⁄_BEMPI¡îru±
(

572 
uöt16_t
 
°©us
,

573 
uöt16_t
 
öãnb
,

574 
USBHAL
 *
obje˘
,

575 
boﬁ
 (
USBHAL
::*
ïCÆlback
[])()

578 vﬁ©ûê
uöt16_t
 
dumy_°s
;

588 
uöt16_t
 
pid
;

589 
uöt16_t
 
pùe
;

590 
uöt16_t
 
bôcheck
;

591 
uöt16_t
 
öbuf
;

592 
uöt16_t
 
ï
;

594 
bôcheck
 = (
uöt16_t
)(
°©us
 & 
öãnb
);

596 
USB20X
.
BEMPSTS
 = (
uöt16_t
)~
°©us
;

598 
pùe
 = 
USB_FUNCTION_PIPE1
;Öùê<
USB_FUNCTION_MAX_PIPE_NO
;Öipe++) {

599 i‡((
bôcheck
&
g_usbx_fun˘i⁄_bô_£t
[
pùe
]) != g_usbx_function_bit_set[pipe]) {

603 
pid
 = 
usbx_fun˘i⁄_gë_pid
(
pùe
);

605 i‡((
pid
 =
DEVDRV_USBF_PID_STALL
) ||

606 (
pid
 =
DEVDRV_USBF_PID_STALL2
)) {

607 
g_usbx_fun˘i⁄_pùe_°©us
[
pùe
] = 
DEVDRV_USBF_PIPE_STALL
;

610 
öbuf
 = 
usbx_fun˘i⁄_gë_öbuf
(
pùe
);

612 i‡(
öbuf
 == 0) {

613 
usbx_fun˘i⁄_dißbÀ_bemp_öt
(
pùe
);

614 
usbx_fun˘i⁄_£t_pid_«k
(
pùe
);

615 
g_usbx_fun˘i⁄_pùe_°©us
[
pùe
] = 
DEVDRV_USBF_PIPE_DONE
;

617 
g_usbx_fun˘i⁄_PùeTbl
[
pùe
] & 
USB_FUNCTION_FIFO_USE
) {

618 
USB_FUNCTION_D0FIFO_DMA
:

622 
USB_FUNCTION_D1FIFO_DMA
:

627 
ï
 = (
g_usbx_fun˘i⁄_pùecfg
[
pùe
] & 
USB_PIPECFG_EPNUM
Ë>> 
USB_PIPECFG_EPNUM_SHIFT
;

628 
ï
 <<= 1;

629 i‡(
RZA_IO_RegRód_16
(

630 &
g_usbx_fun˘i⁄_pùecfg
[
pùe
], 
USB_PIPECFG_DIR_SHIFT
, 
USB_PIPECFG_DIR
) == 0) {

632 
__NOP
();

635 
EPx_ªad_°©us
 = 
DEVDRV_USBF_PIPE_WAIT
;

636 (
obje˘
->*(
ïCÆlback
[
ï
 - 2 + 1])) ();

637 
EPx_ªad_°©us
 = 
DEVDRV_USBF_PIPE_DONE
;

645 
dumy_°s
 = 
USB20X
.
BEMPSTS
;

656 
	#EP2PIPE
(
ídpoöt
Ë((
uöt32_t
)
	`usbx_fun˘i⁄_EpToPùe
”ndpoöt))

	)

665 
	#usbx_fun˘i⁄_ßve_ªque°
() \

667 
uöt16_t
 *
bufO
 = &
£tup_buf„r
[0]; \

669 
USB20X
.
INTSTS0
 = (
uöt16_t
)~
USB_FUNCTION_BITVALID
; \

671 *
bufO
++ = 
USB20X
.
USBREQ
; \

673 *
bufO
++ = 
USB20X
.
USBVAL
; \

675 *
bufO
++ = 
USB20X
.
USBINDX
; \

677 *
bufO
++ = 
USB20X
.
USBLENG
; \

678 }

	)

687 
USBHAL
::
	$USBHAL
()

693 
öt_id
 = 
USBIX_IRQn
;

694 
öt_Àvñ
 = ( 2 << 3 );

695 
˛ock_mode
 = 
USBFCLOCK_X1_48MHZ
;

696 #i‡(
USB_FUNCTION_HISPEED
 == 0)

697 
mode
 = 
USB_FUNCTION_FULL_SPEED
;

699 
mode
 = 
USB_FUNCTION_HIGH_SPEED
;

701 
EP0_ªad_°©us
 = 
DEVDRV_USBF_WRITEEND
;

702 
EPx_ªad_°©us
 = 
DEVDRV_USBF_PIPE_DONE
;

705 
	`GIC_DißbÀIRQ
(
öt_id
);

708 
ïCÆlback
[ 0] = &
USBHAL
::
EP1_OUT_ˇŒback
;

709 
ïCÆlback
[ 1] = &
USBHAL
::
EP1_IN_ˇŒback
;

710 
ïCÆlback
[ 2] = &
USBHAL
::
EP2_OUT_ˇŒback
;

711 
ïCÆlback
[ 3] = &
USBHAL
::
EP2_IN_ˇŒback
;

712 
ïCÆlback
[ 4] = &
USBHAL
::
EP3_OUT_ˇŒback
;

713 
ïCÆlback
[ 5] = &
USBHAL
::
EP3_IN_ˇŒback
;

714 
ïCÆlback
[ 6] = &
USBHAL
::
EP4_OUT_ˇŒback
;

715 
ïCÆlback
[ 7] = &
USBHAL
::
EP4_IN_ˇŒback
;

716 
ïCÆlback
[ 8] = &
USBHAL
::
EP5_OUT_ˇŒback
;

717 
ïCÆlback
[ 9] = &
USBHAL
::
EP5_IN_ˇŒback
;

718 
ïCÆlback
[10] = &
USBHAL
::
EP6_OUT_ˇŒback
;

719 
ïCÆlback
[11] = &
USBHAL
::
EP6_IN_ˇŒback
;

720 
ïCÆlback
[12] = &
USBHAL
::
EP7_OUT_ˇŒback
;

721 
ïCÆlback
[13] = &
USBHAL
::
EP7_IN_ˇŒback
;

722 
ïCÆlback
[14] = &
USBHAL
::
EP8_OUT_ˇŒback
;

723 
ïCÆlback
[15] = &
USBHAL
::
EP8_IN_ˇŒback
;

724 
ïCÆlback
[16] = &
USBHAL
::
EP9_OUT_ˇŒback
;

725 
ïCÆlback
[17] = &
USBHAL
::
EP9_IN_ˇŒback
;

726 
ïCÆlback
[18] = &
USBHAL
::
EP10_OUT_ˇŒback
;

727 
ïCÆlback
[19] = &
USBHAL
::
EP10_IN_ˇŒback
;

728 
ïCÆlback
[20] = &
USBHAL
::
EP11_OUT_ˇŒback
;

729 
ïCÆlback
[21] = &
USBHAL
::
EP11_IN_ˇŒback
;

730 
ïCÆlback
[22] = &
USBHAL
::
EP12_OUT_ˇŒback
;

731 
ïCÆlback
[23] = &
USBHAL
::
EP12_IN_ˇŒback
;

732 
ïCÆlback
[24] = &
USBHAL
::
EP13_OUT_ˇŒback
;

733 
ïCÆlback
[25] = &
USBHAL
::
EP13_IN_ˇŒback
;

734 
ïCÆlback
[26] = &
USBHAL
::
EP14_OUT_ˇŒback
;

735 
ïCÆlback
[27] = &
USBHAL
::
EP14_IN_ˇŒback
;

736 
ïCÆlback
[28] = &
USBHAL
::
EP15_OUT_ˇŒback
;

737 
ïCÆlback
[29] = &
USBHAL
::
EP15_IN_ˇŒback
;

740 
ö°™˚
 = 
this
;

743 
	`usbx_fun˘i⁄_˛ór_pùe_tbl
();

750 #i‡(
USB_FUNCTION_CH
 == 0)

751 
CPG
.
STBCR7
 &~(
CPG_STBCR7_MSTP71
);

753 
CPG
.
STBCR7
 &~(
CPG_STBCR7_MSTP71
 | 
CPG_STBCR7_MSTP70
);

755 vﬁ©ûê
uöt8_t
 
dummy8
;

756 
dummy8
 = 
CPG
.
STBCR7
;

764 
IRQn_Ty≥
 
d0fifo_dmaötid
;

765 
IRQn_Ty≥
 
d1fifo_dmaötid
;

768 
	`I¡îru±H™dÀrRegi°î
(
öt_id
, &
_usbi§
);

769 
	`GIC_SëPri‹ôy
(
öt_id
, 
öt_Àvñ
);

770 
	`GIC_E«bÀIRQ
(
öt_id
);

773 
d0fifo_dmaötid
 = 
	`U£rdef_USB_usbx_fun˘i⁄_d0fifo_dmaötid
();

774 i‡(
d0fifo_dmaötid
 != 0xFFFF) {

775 
	`I¡îru±H™dÀrRegi°î
(
d0fifo_dmaötid
, 
usbx_fun˘i⁄_dma_öãºu±_d0fifo
);

776 
	`GIC_SëPri‹ôy
(
d0fifo_dmaötid
, 
öt_Àvñ
);

777 
	`GIC_E«bÀIRQ
(
d0fifo_dmaötid
);

782 
d1fifo_dmaötid
 = 
	`U£rdef_USB_usbx_fun˘i⁄_d1fifo_dmaötid
();

783 i‡(
d1fifo_dmaötid
 != 0xFFFF) {

784 
	`I¡îru±H™dÀrRegi°î
(
d1fifo_dmaötid
, 
usbx_fun˘i⁄_dma_öãºu±_d1fifo
);

785 
	`GIC_SëPri‹ôy
(
d1fifo_dmaötid
, 
öt_Àvñ
);

786 
	`GIC_E«bÀIRQ
(
d1fifo_dmaötid
);

793 
	`usbx_fun˘i⁄_ª£t_moduÀ
(
˛ock_mode
);

796 
	`usbx_fun˘i⁄_öô_°©us
();

800 
	`usbx_fun˘i⁄_InôModuÀ
(
mode
);

803 
uöt16_t
 
buf
;

804 
buf
 = 
USB20X
.
INTENB0
;

805 
buf
 |
USB_INTENB0_SOFE
;

806 
USB20X
.
INTENB0
 = 
buf
;

808 
	}
}

811 
USBHAL
::~
	$USBHAL
()

814 
	`GIC_DißbÀIRQ
–
öt_id
 );

816 
	`I¡îru±H™dÀrRegi°î
–
öt_id
, (
uöt32_t
)
NULL
 );

819 
ö°™˚
 = 
NULL
;

820 
	}
}

823 
USBHAL
::
	$c⁄√˘
()

827 
	}
}

831 
USBHAL
::
	$disc⁄√˘
()

835 
	}
}

839 
USBHAL
::
	$c⁄figuªDevi˚
()

844 
	}
}

848 
USBHAL
::
	$unc⁄figuªDevi˚
()

853 
	}
}

857 
USBHAL
::
	$£tAddªss
(
uöt8_t
 
addªss
)

859 i‡(
addªss
 <= 127) {

860 
	`usbx_fun˘i⁄_£t_pid_buf
(
USB_FUNCTION_PIPE0
);

862 
	`usbx_fun˘i⁄_£t_pid_°Æl
(
USB_FUNCTION_PIPE0
);

864 
	}
}

868 
boﬁ
 
USBHAL
::
	$ªÆi£Endpoöt
(
uöt8_t
 
ídpoöt
, 
uöt32_t
 
maxPackë
, uöt32_à
Êags
)

870 c⁄° 
PIPECFGREC
 *
cfg
;

871 
uöt16_t
 
pùe
;

872 
uöt16_t
 
buf
;

874 i‡–(
EP0OUT
 =
ídpoöt
Ë|| (
EP0IN
 ==Éndpoint) ) {

875  
åue
;

878 
cfg
 = &
def_pùecfg
[0]; cfg->
pùe£l
 != 0; cfg++) {

879 i‡(
cfg
->
ídpoöt
 ==Éndpoint) {

883 i‡(
cfg
->
pùe£l
 == 0) {

884  
Ál£
;

887 
pùe
 = ((
cfg
->
pùe£l
 & 
USB_PIPESEL_PIPESEL
Ë>> 
USB_PIPESEL_PIPESEL_SHIFT
);

889 
g_usbx_fun˘i⁄_PùeTbl
[ 
pùe
 ] = (
uöt16_t
)(
ídpoöt
 | ((
cfg
->
pùe£l
 & 
USB_FUNCTION_FIFO_USE
) << 0));

897 
buf
 = 
USB20X
.
BRDYENB
;

898 
buf
 &(
uöt16_t
)~
g_usbx_fun˘i⁄_bô_£t
[
pùe
];

899 
USB20X
.
BRDYENB
 = 
buf
;

900 
buf
 = 
USB20X
.
NRDYENB
;

901 
buf
 &(
uöt16_t
)~
g_usbx_fun˘i⁄_bô_£t
[
pùe
];

902 
USB20X
.
NRDYENB
 = 
buf
;

903 
buf
 = 
USB20X
.
BEMPENB
;

904 
buf
 &(
uöt16_t
)~
g_usbx_fun˘i⁄_bô_£t
[
pùe
];

905 
USB20X
.
BEMPENB
 = 
buf
;

907 
	`usbx_fun˘i⁄_£t_pid_«k
(
pùe
);

910 i‡(
	`RZA_IO_RegRód_16
(&
USB20X
.
CFIFOSEL
, 
USB_CFIFOSEL_CURPIPE_SHIFT
, 
USB_CFIFOSEL_CURPIPE
Ë=
pùe
) {

911 
	`RZA_IO_RegWrôe_16
(&
USB20X
.
CFIFOSEL
, 0, 
USB_CFIFOSEL_CURPIPE_SHIFT
, 
USB_CFIFOSEL_CURPIPE
);

914 i‡(
	`RZA_IO_RegRód_16
(&
USB20X
.
D0FIFOSEL
, 
USB_DnFIFOSEL_CURPIPE_SHIFT
, 
USB_DnFIFOSEL_CURPIPE
Ë=
pùe
) {

915 
	`RZA_IO_RegWrôe_16
(&
USB20X
.
D0FIFOSEL
, 0, 
USB_DnFIFOSEL_CURPIPE_SHIFT
, 
USB_DnFIFOSEL_CURPIPE
);

918 i‡(
	`RZA_IO_RegRód_16
(&
USB20X
.
D1FIFOSEL
, 
USB_DnFIFOSEL_CURPIPE_SHIFT
, 
USB_DnFIFOSEL_CURPIPE
Ë=
pùe
) {

919 
	`RZA_IO_RegWrôe_16
(&
USB20X
.
D1FIFOSEL
, 0, 
USB_DnFIFOSEL_CURPIPE_SHIFT
, 
USB_DnFIFOSEL_CURPIPE
);

923 
USB20X
.
PIPESEL
 = 
pùe
;

924 
USB20X
.
PIPECFG
 = 
cfg
->
pùecfg
;

925 
USB20X
.
PIPEBUF
 = 
cfg
->
pùebuf
;

926 
USB20X
.
PIPEMAXP
 = 
cfg
->
pùemaxp
;

927 
USB20X
.
PIPEPERI
 = 
cfg
->
pùïîi
;

929 
g_usbx_fun˘i⁄_pùecfg
[
pùe
] = 
cfg
->
pùecfg
;

930 
g_usbx_fun˘i⁄_pùebuf
[
pùe
] = 
cfg
->
pùebuf
;

931 
g_usbx_fun˘i⁄_pùemaxp
[
pùe
] = 
cfg
->
pùemaxp
;

932 
g_usbx_fun˘i⁄_pùïîi
[
pùe
] = 
cfg
->
pùïîi
;

935 
	`usbx_fun˘i⁄_£t_sq˛r
(
pùe
);

936 
	`usbx_fun˘i⁄_a˛rm
(
pùe
);

939 
g_usbx_fun˘i⁄_pùe_°©us
[
pùe
] = 
DEVDRV_USBF_PIPE_IDLE
;

940 
g_usbx_fun˘i⁄_PùeD©aSize
[
pùe
] = 0;

942  
åue
;

943 
	}
}

948 
USBHAL
::
	$EP0£tup
(
uöt8_t
 *
buf„r
)

950 
	`mem˝y
(
buf„r
, 
£tup_buf„r
, 
MAX_PACKET_SIZE_EP0
);

951 
	}
}

955 
USBHAL
::
	$EP0ªadSège
()

958 
	}
}

962 
USBHAL
::
	$EP0ªad
()

964 
uöt8_t
 *
buf„r
;

965 
uöt32_t
 
size
;

968 
EP0_ªad_°©us
 !
DEVDRV_USBF_WRITEEND
) {

969 
uöt8_t
 
bbb
[2] = { 255, 255 };

970 
	`EP0wrôe
(&
bbb
[0], 0);

973 
buf„r
 = (
uöt8_t
*)(&
£tup_buf„r
[4]);

974 
size
 = (
MAX_PACKET_SIZE_EP0
 / 2) - 8;

975 
	`usbx_≠i_fun˘i⁄_CålWrôeSèπ
(
size
, 
buf„r
);

976 
	}
}

980 
uöt32_t
 
USBHAL
::
	$EP0gëRódResu…
(
uöt8_t
 *
buf„r
)

982 
	`mem˝y
(
buf„r
, (
uöt8_t
*)(&
£tup_buf„r
[4]), 
g_usbx_fun˘i⁄_PùeD©aSize
[
USB_FUNCTION_PIPE0
]);

984  
g_usbx_fun˘i⁄_PùeD©aSize
[
USB_FUNCTION_PIPE0
];

985 
	}
}

989 
USBHAL
::
	$EP0wrôe
(
uöt8_t
 *
buf„r
, 
uöt32_t
 
size
)

992 i‡–(
size
 =0Ë&& (
EP0_ªad_°©us
 =
DEVDRV_USBF_WRITEEND
) ) {

996 i‡(
EP0_ªad_°©us
 =
DEVDRV_USBF_WRITEEND
) {

998 
EP0_ªad_°©us
 = 
	`usbx_≠i_fun˘i⁄_CålRódSèπ
(
size
, 
buf„r
);

1002 
g_usbx_fun˘i⁄_d©a_cou¡
[ 
USB_FUNCTION_PIPE0
 ] = 
size
;

1003 
g_usbx_fun˘i⁄_d©a_poöãr
 [ 
USB_FUNCTION_PIPE0
 ] = 
buf„r
;

1004 
EP0_ªad_°©us
 = 
	`usbx_fun˘i⁄_wrôe_buf„r_c
(
USB_FUNCTION_PIPE0
);

1007 i‡(
size
 =
MAX_PACKET_SIZE_EP0
) {

1008 
EP0_ªad_°©us
 = 
DEVDRV_USBF_WRITING
;

1010 
	}
}

1015 
USBHAL
::
	$EP0gëWrôeResu…
()

1017 
	}
}

1021 
USBHAL
::
	$EP0°Æl
()

1023 
	`°ÆlEndpoöt
( 0 );

1024 
	}
}

1028 
EP_STATUS
 
USBHAL
::
	$ídpoötRód
(
uöt8_t
 
ídpoöt
, 
uöt32_t
 
max_size
)

1030 
uöt32_t
 
pùe
 = 
	`EP2PIPE
(
ídpoöt
);

1031 
uöt32_t
 
pùe_size
;

1032 
uöt16_t
 
pùe_°©us
;

1033 
EP_STATUS
 
°©us
 = 
EP_COMPLETED
;

1035 
pùe_°©us
 = 
	`usbx_≠i_fun˘i⁄_check_pùe_°©us
(
pùe
, &
pùe_size
);

1037 
pùe_°©us
) {

1038 
DEVDRV_USBF_PIPE_IDLE
:

1039 
DEVDRV_USBF_PIPE_WAIT
:

1040 
	`usbx_≠i_fun˘i⁄_£t_pid_«k
(
pùe
);

1041 
	`usbx_≠i_fun˘i⁄_˛ór_pùe_°©us
(
pùe
);

1043 
	`usbx_≠i_fun˘i⁄_°¨t_ª˚ive_å™s„r
(
pùe
, 
max_size
, 
ªcv_buf„r
);

1047 
°©us
 = 
EP_PENDING
;

1051  
°©us
;

1052 
	}
}

1056 
EP_STATUS
 
USBHAL
::
	$ídpoötRódResu…
(
uöt8_t
 
ídpoöt
, uöt8_à*
buf„r
, 
uöt32_t
 *
byãs_ªad
 )

1058 
uöt32_t
 
pùe
 = 
	`EP2PIPE
(
ídpoöt
);

1059 
uöt16_t
 
pùe_°©us
;

1060 
uöt16_t
 
îr
;

1061 
EP_STATUS
 
°©us
 = 
EP_PENDING
;

1064 i‡(
EPx_ªad_°©us
 !
DEVDRV_USBF_PIPE_WAIT
) {

1065  
°©us
;

1068 
pùe_°©us
 = 
	`usbx_≠i_fun˘i⁄_check_pùe_°©us
(
pùe
, 
byãs_ªad
);

1069 
pùe_°©us
) {

1070 
DEVDRV_USBF_PIPE_IDLE
:

1071  
EP_COMPLETED
;

1073 
DEVDRV_USBF_PIPE_DONE
:

1074  
EP_COMPLETED
;

1076 
DEVDRV_USBF_PIPE_WAIT
:

1080  
°©us
;

1084 
g_usbx_fun˘i⁄_d©a_poöãr
[
pùe
] = 
buf„r
;

1087 
îr
 = 
	`usbx_fun˘i⁄_ªad_buf„r
(
pùe
);

1088 
ªcv_îr‹
 = 
îr
;

1089 
îr
) {

1090 
USB_FUNCTION_READEND
:

1091 
USB_FUNCTION_READSHRT
:

1092 
USB_FUNCTION_READOVER
:

1093 *
byãs_ªad
 = 
g_usbx_fun˘i⁄_PùeD©aSize
[
pùe
];

1096 
USB_FUNCTION_READING
:

1097 
DEVDRV_USBF_FIFOERROR
:

1101 
pùe_°©us
 = 
	`usbx_≠i_fun˘i⁄_check_pùe_°©us
(
pùe
, 
byãs_ªad
);

1102 
pùe_°©us
) {

1103 
DEVDRV_USBF_PIPE_DONE
:

1104 
°©us
 = 
EP_COMPLETED
;

1107 
DEVDRV_USBF_PIPE_IDLE
:

1108 
DEVDRV_USBF_PIPE_NORES
:

1109 
DEVDRV_USBF_PIPE_STALL
:

1110 
DEVDRV_USBF_FIFOERROR
:

1115  
°©us
;

1116 
	}
}

1120 
EP_STATUS
 
USBHAL
::
	$ídpoötWrôe
(
uöt8_t
 
ídpoöt
, uöt8_à*
d©a
, 
uöt32_t
 
size
)

1122 
uöt32_t
 
pùe
 = 
	`EP2PIPE
(
ídpoöt
);

1123 
uöt32_t
 
pùe_size
;

1124 
uöt16_t
 
pùe_°©us
;

1125 
uöt16_t
 
îr
;

1126 
uöt16_t
 
cou¡
;

1127 
EP_STATUS
 
°©us
 = 
EP_PENDING
;

1129 
pùe_°©us
 = 
	`usbx_≠i_fun˘i⁄_check_pùe_°©us
(
pùe
, &
pùe_size
);

1132 
cou¡
 = 30000;

1133 (
pùe_°©us
 =
DEVDRV_USBF_PIPE_WAIT
Ë|| (pùe_°©u†=
DEVDRV_USBF_PIPE_DONE
)) {

1134 
pùe_°©us
 = 
	`usbx_≠i_fun˘i⁄_check_pùe_°©us
(
pùe
, &
pùe_size
);

1135 if–--
cou¡
 == 0 ) {

1136 
pùe_°©us
 = 
DEVDRV_USBF_PIPE_STALL
;

1141 
pùe_°©us
) {

1142 
DEVDRV_USBF_PIPE_IDLE
:

1143 
îr
 = 
	`usbx_≠i_fun˘i⁄_°¨t_£nd_å™s„r
(
pùe
, 
size
, 
d©a
);

1145 
îr
) {

1147 
DEVDRV_USBF_WRITEEND
:

1149 
DEVDRV_USBF_WRITESHRT
:

1151 
DEVDRV_USBF_WRITING
:

1153 
DEVDRV_USBF_WRITEDMA
:

1155 
DEVDRV_USBF_FIFOERROR
:

1156 
°©us
 = 
EP_PENDING
;

1161 
DEVDRV_USBF_PIPE_WAIT
:

1162 
DEVDRV_USBF_PIPE_DONE
:

1163 
°©us
 = 
EP_PENDING
;

1166 
DEVDRV_USBF_PIPE_NORES
:

1167 
DEVDRV_USBF_PIPE_STALL
:

1169 
°©us
 = 
EP_STALLED
;

1173  
°©us
;

1174 
	}
}

1178 
EP_STATUS
 
USBHAL
::
	$ídpoötWrôeResu…
(
uöt8_t
 
ídpoöt
)

1180 
uöt32_t
 
pùe
 = 
	`EP2PIPE
(
ídpoöt
);

1181 
uöt32_t
 
pùe_size
;

1182 
uöt16_t
 
pùe_°©us
;

1183 
EP_STATUS
 
°©us
 = 
EP_PENDING
;

1185 
pùe_°©us
 = 
	`usbx_≠i_fun˘i⁄_check_pùe_°©us
(
pùe
, &
pùe_size
);

1187 
pùe_°©us
) {

1188 
DEVDRV_USBF_PIPE_IDLE
:

1189 
°©us
 = 
EP_COMPLETED
;

1192 
DEVDRV_USBF_PIPE_WAIT
:

1193 
°©us
 = 
EP_PENDING
;

1196 
DEVDRV_USBF_PIPE_DONE
:

1197 
	`usbx_fun˘i⁄_°›_å™s„r
(
pùe
);

1198 
°©us
 = 
EP_COMPLETED
;

1201 
DEVDRV_USBF_PIPE_NORES
:

1202 
°©us
 = 
EP_STALLED
;

1205 
DEVDRV_USBF_PIPE_STALL
:

1206 
°©us
 = 
EP_STALLED
;

1210 
°©us
 = 
EP_PENDING
;

1213  
°©us
;

1214 
	}
}

1218 
USBHAL
::
	$°ÆlEndpoöt
(
uöt8_t
 
ídpoöt
)

1220 
uöt32_t
 
pùe
 = 
	`EP2PIPE
(
ídpoöt
);

1222 
	`usbx_fun˘i⁄_˛ór_pid_°Æl
(
pùe
);

1223 
	}
}

1227 
USBHAL
::
	$un°ÆlEndpoöt
(
uöt8_t
 
ídpoöt
)

1229 
uöt32_t
 
pùe
 = 
	`EP2PIPE
(
ídpoöt
);

1231 
	`usbx_fun˘i⁄_£t_pid_°Æl
–
pùe
 );

1232 
	}
}

1236 
boﬁ
 
USBHAL
::
	$gëEndpoötSèŒSèã
(
uöt8_t
 
ídpoöt
)

1239  
Ál£
;

1240 
	}
}

1245 
USBHAL
::
	$ªmŸeWakeup
()

1247 
	}
}

1251 
USBHAL
::
	$_usbi§
()

1253 
ö°™˚
->
	`usbi§
();

1254 
	}
}

1258 
USBHAL
::
	$usbi§
()

1260 
uöt16_t
 
öt_°s0
;

1261 
uöt16_t
 
öt_°s1
;

1262 
uöt16_t
 
öt_°s2
;

1263 
uöt16_t
 
öt_°s3
;

1264 
uöt16_t
 
öt_íb0
;

1265 
uöt16_t
 
öt_íb2
;

1266 
uöt16_t
 
öt_íb3
;

1267 
uöt16_t
 
öt_íb4
;

1268 vﬁ©ûê
uöt16_t
 
dumy_°s
;

1271 
öt_°s0
 = 
USB20X
.
INTSTS0
;

1273 i‡(!(
öt_°s0
 & (

1274 
USB_FUNCTION_BITVBINT
 |

1275 
USB_FUNCTION_BITRESM
 |

1276 
USB_FUNCTION_BITSOFR
 |

1277 
USB_FUNCTION_BITDVST
 |

1278 
USB_FUNCTION_BITCTRT
 |

1279 
USB_FUNCTION_BITBEMP
 |

1280 
USB_FUNCTION_BITNRDY
 |

1281 
USB_FUNCTION_BITBRDY
 ))) {

1285 
öt_°s1
 = 
USB20X
.
BRDYSTS
;

1286 
öt_°s2
 = 
USB20X
.
NRDYSTS
;

1287 
öt_°s3
 = 
USB20X
.
BEMPSTS
;

1288 
öt_íb0
 = 
USB20X
.
INTENB0
;

1289 
öt_íb2
 = 
USB20X
.
BRDYENB
;

1290 
öt_íb3
 = 
USB20X
.
NRDYENB
;

1291 
öt_íb4
 = 
USB20X
.
BEMPENB
;

1293 i‡((
öt_°s0
 & 
USB_FUNCTION_BITRESM
) &&

1294 (
öt_íb0
 & 
USB_FUNCTION_BITRSME
)) {

1295 
USB20X
.
INTSTS0
 = (
uöt16_t
)~
USB_FUNCTION_BITRESM
;

1296 
	`RZA_IO_RegWrôe_16
(&
USB20X
.
INTENB0
, 0, 
USB_INTENB0_RSME_SHIFT
, 
USB_INTENB0_RSME
);

1298 
	`su•ídSèãCh™ged
(1);

1300 (
öt_°s0
 & 
USB_FUNCTION_BITVBINT
) &&

1301 (
öt_íb0
 & 
USB_FUNCTION_BITVBSE
)) {

1302 
USB20X
.
INTSTS0
 = (
uöt16_t
)~
USB_FUNCTION_BITVBINT
;

1304 i‡(
	`usbx_fun˘i⁄_CheckVBUSèus
(Ë=
DEVDRV_USBF_ON
) {

1305 
	`usbx_fun˘i⁄_USB_FUNCTION_Aâach
();

1307 
	`usbx_fun˘i⁄_USB_FUNCTION_Dëach
();

1310 (
öt_°s0
 & 
USB_FUNCTION_BITSOFR
) &&

1311 (
öt_íb0
 & 
USB_FUNCTION_BITSOFE
)) {

1312 
USB20X
.
INTSTS0
 = (
uöt16_t
)~
USB_FUNCTION_BITSOFR
;

1313 
	`SOF
((
USB20X
.
FRMNUM
 & 
USB_FRMNUM_FRNM
Ë>> 
USB_FRMNUM_FRNM_SHIFT
);

1315 (
öt_°s0
 & 
USB_FUNCTION_BITDVST
) &&

1316 (
öt_íb0
 & 
USB_FUNCTION_BITDVSE
)) {

1317 
USB20X
.
INTSTS0
 = (
uöt16_t
)~
USB_FUNCTION_BITDVST
;

1318 
öt_°s0
 & 
USB_FUNCTION_BITDVSQ
) {

1319 
USB_FUNCTION_DS_POWR
:

1322 
USB_FUNCTION_DS_DFLT
:

1331 
	`usbx_fun˘i⁄_öô_°©us
();

1338 i‡(
	`usbx_fun˘i⁄_is_hi•ìd
(Ë=
USB_FUNCTION_HIGH_SPEED
) {

1340 
	`usbx_fun˘i⁄_Re£tDes¸ùt‹
(
USB_FUNCTION_HIGH_SPEED
);

1343 
	`usbx_fun˘i⁄_Re£tDes¸ùt‹
(
USB_FUNCTION_FULL_SPEED
);

1354 
USB20X
.
DCPCFG
 = 0;

1355 
USB20X
.
DCPMAXP
 = 64;

1357 
USB20X
.
CFIFOSEL
 = (
uöt16_t
)(
USB_FUNCTION_BITMBW_8
 | 
USB_FUNCTION_BITBYTE_LITTLE
);

1358 
USB20X
.
D0FIFOSEL
 = (
uöt16_t
)(
USB_FUNCTION_BITMBW_8
 | 
USB_FUNCTION_BITBYTE_LITTLE
);

1359 
USB20X
.
D1FIFOSEL
 = (
uöt16_t
)(
USB_FUNCTION_BITMBW_8
 | 
USB_FUNCTION_BITBYTE_LITTLE
);

1361 
	`busRe£t
();

1364 
USB_FUNCTION_DS_ADDS
:

1367 
USB_FUNCTION_DS_CNFG
:

1370 
USB_FUNCTION_DS_SPD_POWR
:

1371 
USB_FUNCTION_DS_SPD_DFLT
:

1372 
USB_FUNCTION_DS_SPD_ADDR
:

1373 
USB_FUNCTION_DS_SPD_CNFG
:

1374 
	`su•ídSèãCh™ged
(0);

1382 (
öt_°s0
 & 
USB_FUNCTION_BITBEMP
) &&

1383 (
öt_íb0
 & 
USB_FUNCTION_BITBEMP
) &&

1384 ((
öt_°s3
 & 
öt_íb4
Ë& 
g_usbx_fun˘i⁄_bô_£t
[
USB_FUNCTION_PIPE0
])) {

1386 
	`usbx_fun˘i⁄_BEMPI¡îru±PIPE0
(
öt_°s3
, 
öt_íb4
, 
this
, &
USBHAL
::
EP0ö
);

1388 (
öt_°s0
 & 
USB_FUNCTION_BITBRDY
) &&

1389 (
öt_íb0
 & 
USB_FUNCTION_BITBRDY
) &&

1390 ((
öt_°s1
 & 
öt_íb2
Ë& 
g_usbx_fun˘i⁄_bô_£t
[
USB_FUNCTION_PIPE0
])) {

1392 
	`usbx_fun˘i⁄_BRDYI¡îru±PIPE0
(
öt_°s1
, 
öt_íb2
, 
this
, &
USBHAL
::
EP0out
);

1394 (
öt_°s0
 & 
USB_FUNCTION_BITNRDY
) &&

1395 (
öt_íb0
 & 
USB_FUNCTION_BITNRDY
) &&

1396 ((
öt_°s2
 & 
öt_íb3
Ë& 
g_usbx_fun˘i⁄_bô_£t
[
USB_FUNCTION_PIPE0
])) {

1398 
	`usbx_fun˘i⁄_NRDYI¡îru±PIPE0
(
öt_°s2
, 
öt_íb3
, 
this
, 
NULL
);

1400 (
öt_°s0
 & 
USB_FUNCTION_BITCTRT
Ë&& (
öt_íb0
 & 
USB_FUNCTION_BITCTRE
)) {

1401 
öt_°s0
 = 
USB20X
.
INTSTS0
;

1402 
USB20X
.
INTSTS0
 = (
uöt16_t
)~
USB_FUNCTION_BITCTRT
;

1404 i‡(((
öt_°s0
 & 
USB_FUNCTION_BITCTSQ
Ë=
USB_FUNCTION_CS_RDDS
) ||

1405 ((
öt_°s0
 & 
USB_FUNCTION_BITCTSQ
Ë=
USB_FUNCTION_CS_WRDS
) ||

1406 ((
öt_°s0
 & 
USB_FUNCTION_BITCTSQ
Ë=
USB_FUNCTION_CS_WRND
)) {

1409 
	`usbx_fun˘i⁄_ßve_ªque°
();

1410 i‡((
USB20X
.
INTSTS0
 & 
USB_FUNCTION_BITVALID
) && (

1411 ((
öt_°s0
 & 
USB_FUNCTION_BITCTSQ
Ë=
USB_FUNCTION_CS_RDDS
) ||

1412 ((
öt_°s0
 & 
USB_FUNCTION_BITCTSQ
Ë=
USB_FUNCTION_CS_WRDS
) ||

1413 ((
öt_°s0
 & 
USB_FUNCTION_BITCTSQ
Ë=
USB_FUNCTION_CS_WRND
))) {

1416 
dumy_°s
 = 
USB20X
.
INTSTS0
;

1417 
dumy_°s
 = 
USB20X
.
INTSTS0
;

1418 
dumy_°s
 = 
USB20X
.
INTSTS0
;

1423 
öt_°s0
 & 
USB_FUNCTION_BITCTSQ
) {

1424 
USB_FUNCTION_CS_IDST
:

1425 i‡(
g_usbx_fun˘i⁄_Te°ModeFœg
 =
DEVDRV_USBF_YES
) {

1427 
	`usbx_fun˘i⁄_USB_FUNCTION_Te°Mode
();

1432 
USB_FUNCTION_CS_RDDS
:

1434 
	`EP0£tupCÆlback
();

1437 
USB_FUNCTION_CS_WRDS
:

1439 
	`EP0£tupCÆlback
();

1442 
USB_FUNCTION_CS_WRND
:

1443 
	`EP0£tupCÆlback
();

1446 
	`usbx_fun˘i⁄_£t_pid_buf
(
USB_FUNCTION_PIPE0
);

1448 
	`RZA_IO_RegWrôe_16
(&
USB20X
.
DCPCTR
, 1, 
USB_DCPCTR_CCPL_SHIFT
, 
USB_DCPCTR_CCPL
);

1451 
USB_FUNCTION_CS_RDSS
:

1452 
	`RZA_IO_RegWrôe_16
(&
USB20X
.
DCPCTR
, 1, 
USB_DCPCTR_CCPL_SHIFT
, 
USB_DCPCTR_CCPL
);

1455 
USB_FUNCTION_CS_WRSS
:

1456 
	`RZA_IO_RegWrôe_16
(&
USB20X
.
DCPCTR
, 1, 
USB_DCPCTR_CCPL_SHIFT
, 
USB_DCPCTR_CCPL
);

1459 
USB_FUNCTION_CS_SQER
:

1460 
	`usbx_fun˘i⁄_£t_pid_°Æl
(
USB_FUNCTION_PIPE0
);

1464 
	`usbx_fun˘i⁄_£t_pid_°Æl
(
USB_FUNCTION_PIPE0
);

1468 (
öt_°s0
 & 
USB_FUNCTION_BITBEMP
) &&

1469 (
öt_íb0
 & 
USB_FUNCTION_BITBEMP
) &&

1470 (
öt_°s3
 & 
öt_íb4
) ) {

1472 
	`usbx_fun˘i⁄_BEMPI¡îru±
(
öt_°s3
, 
öt_íb4
, 
this
, 
ïCÆlback
);

1474 (
öt_°s0
 & 
USB_FUNCTION_BITBRDY
) &&

1475 (
öt_íb0
 & 
USB_FUNCTION_BITBRDY
) &&

1476 (
öt_°s1
 & 
öt_íb2
) ) {

1478 
	`usbx_fun˘i⁄_BRDYI¡îru±
(
öt_°s1
, 
öt_íb2
, 
this
, 
ïCÆlback
);

1480 (
öt_°s0
 & 
USB_FUNCTION_BITNRDY
) &&

1481 (
öt_íb0
 & 
USB_FUNCTION_BITNRDY
) &&

1482 (
öt_°s2
 & 
öt_íb3
)) {

1484 
	`usbx_fun˘i⁄_NRDYI¡îru±
(
öt_°s2
, 
öt_íb3
, 
this
, 
ïCÆlback
);

1490 
dumy_°s
 = 
USB20X
.
INTSTS0
;

1491 
dumy_°s
 = 
USB20X
.
INTSTS1
;

1492 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBHAL_STM32F4.cpp

19 #i‡
deföed
(
TARGET_STM32F4
)

21 
	~"USBHAL.h
"

22 
	~"USBRegs_STM32.h
"

23 
	~"pöm≠.h
"

25 
USBHAL
 * 
	gUSBHAL
::
ö°™˚
;

27 vﬁ©ûê
	gïCom∂ëe
 = 0;

29 
uöt32_t
 
	gbuf„rEnd
 = 0;

30 c⁄° 
uöt32_t
 
	grxFifoSize
 = 512;

31 
uöt32_t
 
	grxFifoCou¡
 = 0;

33 
uöt32_t
 
	g£tupBuf„r
[
MAX_PACKET_SIZE_EP0
 >> 2];

35 
uöt32_t
 
	gUSBHAL
::
	$ídpoötRódc‹e
(
uöt8_t
 
ídpoöt
, uöt8_à*
buf„r
) {

37 
	}
}

39 
	gUSBHAL
::
	$USBHAL
() {

40 
	`NVIC_DißbÀIRQ
(
OTG_FS_IRQn
);

41 
ïCÆlback
[0] = &
USBHAL
::
EP1_OUT_ˇŒback
;

42 
ïCÆlback
[1] = &
USBHAL
::
EP1_IN_ˇŒback
;

43 
ïCÆlback
[2] = &
USBHAL
::
EP2_OUT_ˇŒback
;

44 
ïCÆlback
[3] = &
USBHAL
::
EP2_IN_ˇŒback
;

45 
ïCÆlback
[4] = &
USBHAL
::
EP3_OUT_ˇŒback
;

46 
ïCÆlback
[5] = &
USBHAL
::
EP3_IN_ˇŒback
;

49 
RCC
->
AHB1ENR
 |
RCC_AHB1ENR_GPIOAEN
;

51 #i‡
	`deföed
(
TARGET_STM32F407VG
Ë|| deföed(
TARGET_STM32F401RE
Ë|| deföed(
TARGET_STM32F411RE
Ë|| deföed(
TARGET_STM32F429ZI
)

52 
	`pö_fun˘i⁄
(
PA_8
, 
	`STM_PIN_DATA
(
STM_MODE_AF_PP
, 
GPIO_NOPULL
, 
GPIO_AF10_OTG_FS
));

53 
	`pö_fun˘i⁄
(
PA_9
, 
	`STM_PIN_DATA
(
STM_MODE_INPUT
, 
GPIO_PULLDOWN
, 
GPIO_AF10_OTG_FS
));

54 
	`pö_fun˘i⁄
(
PA_10
, 
	`STM_PIN_DATA
(
STM_MODE_AF_OD
, 
GPIO_PULLUP
, 
GPIO_AF10_OTG_FS
));

55 
	`pö_fun˘i⁄
(
PA_11
, 
	`STM_PIN_DATA
(
STM_MODE_AF_PP
, 
GPIO_NOPULL
, 
GPIO_AF10_OTG_FS
));

56 
	`pö_fun˘i⁄
(
PA_12
, 
	`STM_PIN_DATA
(
STM_MODE_AF_PP
, 
GPIO_NOPULL
, 
GPIO_AF10_OTG_FS
));

58 
	`pö_fun˘i⁄
(
PA_8
, 
	`STM_PIN_DATA
(2, 10));

59 
	`pö_fun˘i⁄
(
PA_9
, 
	`STM_PIN_DATA
(0, 0));

60 
	`pö_fun˘i⁄
(
PA_10
, 
	`STM_PIN_DATA
(2, 10));

61 
	`pö_fun˘i⁄
(
PA_11
, 
	`STM_PIN_DATA
(2, 10));

62 
	`pö_fun˘i⁄
(
PA_12
, 
	`STM_PIN_DATA
(2, 10));

65 
	`pö_mode
(
PA_10
, 
O≥nDøö
);

66 
GPIOA
->
PUPDR
 &= ~(0x3 << 20);

67 
GPIOA
->
PUPDR
 |= 1 << 20;

70 
	`pö_mode
(
PA_9
, 
O≥nDøö
);

73 
RCC
->
AHB2ENR
 |
RCC_AHB2ENR_OTGFSEN
;

76 
OTG_FS
->
GREGS
.
GAHBCFG
 |= (1 << 0);

79 
OTG_FS
->
GREGS
.
GUSBCFG
 |= (0xF << 10);

82 
OTG_FS
->
GREGS
.
GINTMSK
 |= (1 << 3) |

86 
OTG_FS
->
DREGS
.
DCFG
 |= (0x3 << 0) |

89 
OTG_FS
->
GREGS
.
GCCFG
 |= (1 << 19) |

92 
ö°™˚
 = 
this
;

93 
	`NVIC_SëVe˘‹
(
OTG_FS_IRQn
, (
uöt32_t
)&
_usbi§
);

94 
	`NVIC_SëPri‹ôy
(
OTG_FS_IRQn
, 1);

95 
	}
}

97 
	gUSBHAL
::~
	$USBHAL
() {

98 
	}
}

100 
USBHAL
::
	$c⁄√˘
() {

101 
	`NVIC_E«bÀIRQ
(
OTG_FS_IRQn
);

102 
	}
}

104 
	gUSBHAL
::
	$disc⁄√˘
() {

105 
	`NVIC_DißbÀIRQ
(
OTG_FS_IRQn
);

106 
	}
}

108 
	gUSBHAL
::
	$c⁄figuªDevi˚
() {

110 
	}
}

112 
USBHAL
::
	$unc⁄figuªDevi˚
() {

114 
	}
}

116 
USBHAL
::
	$£tAddªss
(
uöt8_t
 
addªss
) {

117 
OTG_FS
->
DREGS
.
DCFG
 |(
addªss
 << 4);

118 
	`EP0wrôe
(0, 0);

119 
	}
}

121 
boﬁ
 
	gUSBHAL
::
	$ªÆi£Endpoöt
(
uöt8_t
 
ídpoöt
, 
uöt32_t
 
maxPackë
,

122 
uöt32_t
 
Êags
) {

123 
uöt32_t
 
ïIndex
 = 
ídpoöt
 >> 1;

125 
uöt32_t
 
ty≥
;

126 
ídpoöt
) {

127 
EP0IN
:

128 
EP0OUT
:

129 
ty≥
 = 0;

131 
EPISO_IN
:

132 
EPISO_OUT
:

133 
ty≥
 = 1;

134 
EPBULK_IN
:

135 
EPBULK_OUT
:

136 
ty≥
 = 2;

138 
EPINT_IN
:

139 
EPINT_OUT
:

140 
ty≥
 = 3;

145 
uöt32_t
 
c⁄åﬁ
 = (
maxPackë
 << 0) |

147 (
ty≥
 << 18);

149 i‡(
ídpoöt
 & 0x1) {

151 i‡(
ídpoöt
 =
EP0IN
) {

152 
OTG_FS
->
GREGS
.
DIEPTXF0_HNPTXFSIZ
 = ((
maxPackë
 >> 2) << 16) |

153 (
buf„rEnd
 << 0);

156 
OTG_FS
->
GREGS
.
DIEPTXF
[
ïIndex
 - 1] = ((
maxPackë
 >> 2) << 16) |

157 (
buf„rEnd
 << 0);

159 
buf„rEnd
 +
maxPackë
 >> 2;

162 i‡(
ídpoöt
 !
EP0IN
) {

163 
c⁄åﬁ
 |= (1 << 28);

166 
c⁄åﬁ
 |(
ïIndex
 << 22) |

168 
OTG_FS
->
INEP_REGS
[
ïIndex
].
DIEPCTL
 = 
c⁄åﬁ
;

171 
OTG_FS
->
DREGS
.
DAINTMSK
 |(1 << 
ïIndex
);

175 
c⁄åﬁ
 |= (1 << 26);

176 
OTG_FS
->
OUTEP_REGS
[
ïIndex
].
DOEPCTL
 = 
c⁄åﬁ
;

179 
OTG_FS
->
DREGS
.
DAINTMSK
 |(1 << (
ïIndex
 + 16));

181  
åue
;

182 
	}
}

185 
	gUSBHAL
::
	$EP0£tup
(
uöt8_t
 *
buf„r
) {

186 
	`mem˝y
(
buf„r
, 
£tupBuf„r
, 
MAX_PACKET_SIZE_EP0
);

187 
	}
}

189 
	gUSBHAL
::
	$EP0ªadSège
() {

190 
	}
}

192 
USBHAL
::
	$EP0ªad
() {

193 
	}
}

195 
uöt32_t
 
USBHAL
::
	$EP0gëRódResu…
(
uöt8_t
 *
buf„r
) {

196 
uöt32_t
* 
buf„r32
 = (uöt32_à*Ë
buf„r
;

197 
uöt32_t
 
Àngth
 = 
rxFifoCou¡
;

198 
uöt32_t
 
i
 = 0; i < 
Àngth
; i += 4) {

199 
buf„r32
[
i
 >> 2] = 
OTG_FS
->
FIFO
[0][0];

202 
rxFifoCou¡
 = 0;

203  
Àngth
;

204 
	}
}

206 
	gUSBHAL
::
	$EP0wrôe
(
uöt8_t
 *
buf„r
, 
uöt32_t
 
size
) {

207 
	`ídpoötWrôe
(0, 
buf„r
, 
size
);

208 
	}
}

210 
	gUSBHAL
::
	$EP0gëWrôeResu…
() {

211 
	}
}

213 
USBHAL
::
	$EP0°Æl
() {

218 
	`°ÆlEndpoöt
(
EP0IN
);

220 
	}
}

222 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötRód
(
uöt8_t
 
ídpoöt
, 
uöt32_t
 
maximumSize
) {

223 
uöt32_t
 
ïIndex
 = 
ídpoöt
 >> 1;

224 
uöt32_t
 
size
 = (1 << 19) |

225 (
maximumSize
 << 0);

227 
size
 |= (1 << 29);

229 
OTG_FS
->
OUTEP_REGS
[
ïIndex
].
DOEPTSIZ
 = 
size
;

230 
OTG_FS
->
OUTEP_REGS
[
ïIndex
].
DOEPCTL
 |= (1 << 31) |

233 
ïCom∂ëe
 &~(1 << 
ídpoöt
);

234  
EP_PENDING
;

235 
	}
}

237 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötRódResu…
(
uöt8_t
 
ídpoöt
, uöt8_à* 
buf„r
, 
uöt32_t
 *
byãsRód
) {

238 i‡(!(
ïCom∂ëe
 & (1 << 
ídpoöt
))) {

239  
EP_PENDING
;

242 
uöt32_t
* 
buf„r32
 = (uöt32_à*Ë
buf„r
;

243 
uöt32_t
 
Àngth
 = 
rxFifoCou¡
;

244 
uöt32_t
 
i
 = 0; i < 
Àngth
; i += 4) {

245 
buf„r32
[
i
 >> 2] = 
OTG_FS
->
FIFO
[
ídpoöt
 >> 1][0];

247 
rxFifoCou¡
 = 0;

248 *
byãsRód
 = 
Àngth
;

249  
EP_COMPLETED
;

250 
	}
}

252 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötWrôe
(
uöt8_t
 
ídpoöt
, uöt8_à*
d©a
, 
uöt32_t
 
size
) {

253 
uöt32_t
 
ïIndex
 = 
ídpoöt
 >> 1;

254 
OTG_FS
->
INEP_REGS
[
ïIndex
].
DIEPTSIZ
 = (1 << 19) |

255 (
size
 << 0);

256 
OTG_FS
->
INEP_REGS
[
ïIndex
].
DIEPCTL
 |= (1 << 31) |

258 
OTG_FS
->
DREGS
.
DIEPEMPMSK
 = (1 << 
ïIndex
);

260 (
OTG_FS
->
INEP_REGS
[
ïIndex
].
DTXFSTS
 & 0XFFFFË< ((
size
 + 3) >> 2));

262 
uöt32_t
 
i
=0; i<(
size
 + 3Ë>> 2; i++, 
d©a
+=4) {

263 
OTG_FS
->
FIFO
[
ïIndex
][0] = *(
uöt32_t
 *)
d©a
;

266 
ïCom∂ëe
 &~(1 << 
ídpoöt
);

268  
EP_PENDING
;

269 
	}
}

271 
EP_STATUS
 
	gUSBHAL
::
	$ídpoötWrôeResu…
(
uöt8_t
 
ídpoöt
) {

272 i‡(
ïCom∂ëe
 & (1 << 
ídpoöt
)) {

273 
ïCom∂ëe
 &~(1 << 
ídpoöt
);

274  
EP_COMPLETED
;

277  
EP_PENDING
;

278 
	}
}

280 
	gUSBHAL
::
	$°ÆlEndpoöt
(
uöt8_t
 
ídpoöt
) {

281 i‡(
ídpoöt
 & 0x1) {

282 
OTG_FS
->
INEP_REGS
[
ídpoöt
 >> 1].
DIEPCTL
 |= (1 << 30) |

286 
OTG_FS
->
DREGS
.
DCTL
 |= (1 << 9);

287 
OTG_FS
->
OUTEP_REGS
[
ídpoöt
 >> 1].
DOEPCTL
 |= (1 << 30) |

290 
	}
}

292 
	gUSBHAL
::
	$un°ÆlEndpoöt
(
uöt8_t
 
ídpoöt
) {

294 
	}
}

296 
boﬁ
 
USBHAL
::
	$gëEndpoötSèŒSèã
(
uöt8_t
 
ídpoöt
) {

297  
Ál£
;

298 
	}
}

300 
	gUSBHAL
::
	$ªmŸeWakeup
() {

301 
	}
}

304 
USBHAL
::
	$_usbi§
() {

305 
ö°™˚
->
	`usbi§
();

306 
	}
}

309 
	gUSBHAL
::
	$usbi§
() {

310 i‡(
OTG_FS
->
GREGS
.
GINTSTS
 & (1 << 11)) {

311 
	`su•ídSèãCh™ged
(1);

314 i‡(
OTG_FS
->
GREGS
.
GINTSTS
 & (1 << 12)) {

315 
	`su•ídSèãCh™ged
(0);

318 
OTG_FS
->
OUTEP_REGS
[0].
DOEPCTL
 |= (1 << 27);

319 
OTG_FS
->
OUTEP_REGS
[1].
DOEPCTL
 |= (1 << 27);

320 
OTG_FS
->
OUTEP_REGS
[2].
DOEPCTL
 |= (1 << 27);

321 
OTG_FS
->
OUTEP_REGS
[3].
DOEPCTL
 |= (1 << 27);

323 
OTG_FS
->
DREGS
.
DIEPMSK
 = (1 << 0);

325 
buf„rEnd
 = 0;

328 
OTG_FS
->
GREGS
.
GRXFSIZ
 = 
rxFifoSize
 >> 2;

329 
buf„rEnd
 +
rxFifoSize
 >> 2;

332 
	`ªÆi£Endpoöt
(
EP0IN
, 
MAX_PACKET_SIZE_EP0
, 0);

333 
	`ªÆi£Endpoöt
(
EP0OUT
, 
MAX_PACKET_SIZE_EP0
, 0);

334 
	`ídpoötRód
(
EP0OUT
, 
MAX_PACKET_SIZE_EP0
);

336 
OTG_FS
->
GREGS
.
GINTSTS
 = (1 << 12);

339 i‡(
OTG_FS
->
GREGS
.
GINTSTS
 & (1 << 4)) {

340 
uöt32_t
 
°©us
 = 
OTG_FS
->
GREGS
.
GRXSTSP
;

342 
uöt32_t
 
ídpoöt
 = (
°©us
 & 0xF) << 1;

343 
uöt32_t
 
Àngth
 = (
°©us
 >> 4) & 0x7FF;

344 
uöt32_t
 
ty≥
 = (
°©us
 >> 17) & 0xF;

346 
rxFifoCou¡
 = 
Àngth
;

348 i‡(
ty≥
 == 0x6) {

350 
uöt32_t
 
i
=0; i<
Àngth
; i+=4) {

351 
£tupBuf„r
[
i
 >> 2] = 
OTG_FS
->
FIFO
[0][i >> 2];

353 
rxFifoCou¡
 = 0;

356 i‡(
ty≥
 == 0x4) {

358 
	`EP0£tupCÆlback
();

359 
	`ídpoötRód
(
EP0OUT
, 
MAX_PACKET_SIZE_EP0
);

362 i‡(
ty≥
 == 0x2) {

364 i‡(
ídpoöt
 =
EP0OUT
) {

365 
	`EP0out
();

368 
ïCom∂ëe
 |(1 << 
ídpoöt
);

369 i‡((
ö°™˚
->*(
ïCÆlback
[
ídpoöt
 - 2]))()) {

370 
ïCom∂ëe
 &(1 << 
ídpoöt
);

375 
uöt32_t
 
i
=0; i<
rxFifoCou¡
; i+=4) {

376 (Ë
OTG_FS
->
FIFO
[0][0];

378 
OTG_FS
->
GREGS
.
GINTSTS
 = (1 << 4);

381 i‡(
OTG_FS
->
GREGS
.
GINTSTS
 & (1 << 18)) {

383 
uöt32_t
 
i
=0; i<4; i++) {

384 i‡(
OTG_FS
->
DREGS
.
DAINT
 & (1 << 
i
)) {

386 i‡(
OTG_FS
->
INEP_REGS
[
i
].
DIEPINT
 & (1 << 7)) {

389 i‡(
i
 == 0) {

390 
	`EP0ö
();

393 
OTG_FS
->
INEP_REGS
[
i
].
DIEPINT
 = (1 << 7);

396 
OTG_FS
->
DREGS
.
DIEPEMPMSK
 &~(1 << 
i
);

400 i‡(
OTG_FS
->
INEP_REGS
[
i
].
DIEPINT
 & (1 << 0)) {

401 
ïCom∂ëe
 |(1 << (1 + (
i
 << 1)));

402 
OTG_FS
->
INEP_REGS
[
i
].
DIEPINT
 = (1 << 0);

406 
OTG_FS
->
GREGS
.
GINTSTS
 = (1 << 18);

409 i‡(
OTG_FS
->
GREGS
.
GINTSTS
 & (1 << 3)) {

410 
	`SOF
((
OTG_FS
->
GREGS
.
GRXSTSR
 >> 17) & 0xF);

411 
OTG_FS
->
GREGS
.
GINTSTS
 = (1 << 3);

413 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBRegs_STM32.h

28 #i‚de‡
__USB_OTG_REGS_H__


29 
	#__USB_OTG_REGS_H__


	)

33 
__IO
 
uöt32_t
 
	mGOTGCTL
;

34 
__IO
 
uöt32_t
 
	mGOTGINT
;

35 
__IO
 
uöt32_t
 
	mGAHBCFG
;

36 
__IO
 
uöt32_t
 
	mGUSBCFG
;

37 
__IO
 
uöt32_t
 
	mGRSTCTL
;

38 
__IO
 
uöt32_t
 
	mGINTSTS
;

39 
__IO
 
uöt32_t
 
	mGINTMSK
;

40 
__IO
 
uöt32_t
 
	mGRXSTSR
;

41 
__IO
 
uöt32_t
 
	mGRXSTSP
;

42 
__IO
 
uöt32_t
 
	mGRXFSIZ
;

43 
__IO
 
uöt32_t
 
	mDIEPTXF0_HNPTXFSIZ
;

44 
__IO
 
uöt32_t
 
	mHNPTXSTS
;

45 
uöt32_t
 
	mRe£rved30
[2];

46 
__IO
 
uöt32_t
 
	mGCCFG
;

47 
__IO
 
uöt32_t
 
	mCID
;

48 
uöt32_t
 
	mRe£rved40
[48];

49 
__IO
 
uöt32_t
 
	mHPTXFSIZ
;

50 
__IO
 
uöt32_t
 
	mDIEPTXF
[3];

52 
	tUSB_OTG_GREGS
;

56 
__IO
 
uöt32_t
 
	mDCFG
;

57 
__IO
 
uöt32_t
 
	mDCTL
;

58 
__IO
 
uöt32_t
 
	mDSTS
;

59 
uöt32_t
 
	mRe£rved0C
;

60 
__IO
 
uöt32_t
 
	mDIEPMSK
;

61 
__IO
 
uöt32_t
 
	mDOEPMSK
;

62 
__IO
 
uöt32_t
 
	mDAINT
;

63 
__IO
 
uöt32_t
 
	mDAINTMSK
;

64 
uöt32_t
 
	mRe£rved20
;

65 
uöt32_t
 
	mRe£rved9
;

66 
__IO
 
uöt32_t
 
	mDVBUSDIS
;

67 
__IO
 
uöt32_t
 
	mDVBUSPULSE
;

68 
__IO
 
uöt32_t
 
	mDTHRCTL
;

69 
__IO
 
uöt32_t
 
	mDIEPEMPMSK
;

71 
	tUSB_OTG_DREGS
;

75 
__IO
 
uöt32_t
 
	mDIEPCTL
;

76 
uöt32_t
 
	mRe£rved04
;

77 
__IO
 
uöt32_t
 
	mDIEPINT
;

78 
uöt32_t
 
	mRe£rved0C
;

79 
__IO
 
uöt32_t
 
	mDIEPTSIZ
;

80 
uöt32_t
 
	mRe£rved14
;

81 
__IO
 
uöt32_t
 
	mDTXFSTS
;

82 
uöt32_t
 
	mRe£rved1C
;

84 
	tUSB_OTG_INEPREGS
;

88 
__IO
 
uöt32_t
 
	mDOEPCTL
;

89 
uöt32_t
 
	mRe£rved04
;

90 
__IO
 
uöt32_t
 
	mDOEPINT
;

91 
uöt32_t
 
	mRe£rved0C
;

92 
__IO
 
uöt32_t
 
	mDOEPTSIZ
;

93 
uöt32_t
 
	mRe£rved14
[3];

95 
	tUSB_OTG_OUTEPREGS
;

99 
__IO
 
uöt32_t
 
	mHCFG
;

100 
__IO
 
uöt32_t
 
	mHFIR
;

101 
__IO
 
uöt32_t
 
	mHFNUM
;

102 
uöt32_t
 
	mRe£rved40C
;

103 
__IO
 
uöt32_t
 
	mHPTXSTS
;

104 
__IO
 
uöt32_t
 
	mHAINT
;

105 
__IO
 
uöt32_t
 
	mHAINTMSK
;

107 
	tUSB_OTG_HREGS
;

111 
__IO
 
uöt32_t
 
	mHCCHAR
;

112 
__IO
 
uöt32_t
 
	mHCSPLT
;

113 
__IO
 
uöt32_t
 
	mHCINT
;

114 
__IO
 
uöt32_t
 
	mHCINTMSK
;

115 
__IO
 
uöt32_t
 
	mHCTSIZ
;

116 
uöt32_t
 
	mRe£rved
[3];

118 
	tUSB_OTG_HC_REGS
;

122 
USB_OTG_GREGS
 
	mGREGS
;

123 
uöt32_t
 
	mRESERVED0
[188];

124 
USB_OTG_HREGS
 
	mHREGS
;

125 
uöt32_t
 
	mRESERVED1
[9];

126 
__IO
 
uöt32_t
 
	mHPRT
;

127 
uöt32_t
 
	mRESERVED2
[47];

128 
USB_OTG_HC_REGS
 
	mHC_REGS
[8];

129 
uöt32_t
 
	mRESERVED3
[128];

130 
USB_OTG_DREGS
 
	mDREGS
;

131 
uöt32_t
 
	mRESERVED4
[50];

132 
USB_OTG_INEPREGS
 
	mINEP_REGS
[4];

133 
uöt32_t
 
	mRESERVED5
[96];

134 
USB_OTG_OUTEPREGS
 
	mOUTEP_REGS
[4];

135 
uöt32_t
 
	mRESERVED6
[160];

136 
__IO
 
uöt32_t
 
	mPCGCCTL
;

137 
uöt32_t
 
	mRESERVED7
[127];

138 
__IO
 
uöt32_t
 
	mFIFO
[4][1024];

140 
	tUSB_OTG_CORE_REGS
;

143 
	#OTG_FS_BASE
 (
AHB2PERIPH_BASE
 + 0x0000)

	)

144 
	#OTG_FS
 ((
USB_OTG_CORE_REGS
 *Ë
OTG_FS_BASE
)

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBSerial\CircBuffer.h

19 #i‚de‡
CIRCBUFFER_H


20 
	#CIRCBUFFER_H


	)

22 
	gãm∂©e
 <
˛ass
 
	gT
, 
	gSize
>

23 ˛as†
	cCúcBuf„r
 {

24 
	mpublic
:

25 
	$CúcBuf„r
():
	`wrôe
(0), 
	$ªad
(0){}

26 
boﬁ
 
	$isFuŒ
() {

27  ((
wrôe
 + 1Ë% 
size
 =
ªad
);

28 
	}
};

30 
boﬁ
 
	$isEm±y
() {

31  (
ªad
 =
wrôe
);

32 
	}
};

34 
	$queue
(
T
 
k
) {

35 i‡(
	`isFuŒ
()) {

36 
ªad
++;

37 
ªad
 %
size
;

39 
buf
[
wrôe
++] = 
k
;

40 
wrôe
 %
size
;

41 
	}
}

43 
uöt16_t
 
	$avaûabÀ
() {

44  (
wrôe
 >
ªad
Ë? wrôê-Ñód : 
size
 -Ñead + write;

45 
	}
};

47 
boﬁ
 
	$dequeue
(
T
 * 
c
) {

48 
boﬁ
 
em±y
 = 
	`isEm±y
();

49 i‡(!
em±y
) {

50 *
c
 = 
buf
[
ªad
++];

51 
ªad
 %
size
;

53 (!
em±y
);

54 
	}
};

56 
	g¥iv©e
:

57 vﬁ©ûê
uöt16_t
 
wrôe
;

58 vﬁ©ûê
uöt16_t
 
	gªad
;

59 c⁄° 
	gsize
 = 
Size
+1;

60 
T
 
	gbuf
[
Size
+1];

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBSerial\USBCDC.cpp

19 
	~"°döt.h
"

20 
	~"USBCDC.h
"

22 
uöt8_t
 
	gcdc_löe_codög
[7]= {0x80, 0x25, 0x00, 0x00, 0x00, 0x00, 0x08};

24 
	#DEFAULT_CONFIGURATION
 (1)

	)

26 
	#CDC_SET_LINE_CODING
 0x20

	)

27 
	#CDC_GET_LINE_CODING
 0x21

	)

28 
	#CDC_SET_CONTROL_LINE_STATE
 0x22

	)

31 
	#CLS_DTR
 (1 << 0)

	)

32 
	#CLS_RTS
 (1 << 1)

	)

34 
	#MAX_CDC_REPORT_SIZE
 
MAX_PACKET_SIZE_EPBULK


	)

36 
	gUSBCDC
::
	$USBCDC
(
uöt16_t
 
víd‹_id
, uöt16_à
¥odu˘_id
, uöt16_à
¥odu˘_ªÀa£
, 
boﬁ
 
c⁄√˘_blockög
): 
	$USBDevi˚
(
víd‹_id
, 
¥odu˘_id
, 
¥odu˘_ªÀa£
) {

37 
ãrmöÆ_c⁄√˘ed
 = 
Ál£
;

38 
USBDevi˚
::
	`c⁄√˘
(
c⁄√˘_blockög
);

39 
	}
}

41 
boﬁ
 
	gUSBCDC
::
	$USBCÆlback_ªque°
() {

44 
boﬁ
 
suc˚ss
 = 
Ál£
;

45 
CONTROL_TRANSFER
 * 
å™s„r
 = 
	`gëTøns„rPå
();

49 i‡(
å™s„r
->
£tup
.
bmReque°Ty≥
.
Ty≥
 =
CLASS_TYPE
) {

50 
å™s„r
->
£tup
.
bReque°
) {

51 
CDC_GET_LINE_CODING
:

52 
å™s„r
->
ªmaöög
 = 7;

53 
å™s„r
->
±r
 = 
cdc_löe_codög
;

54 
å™s„r
->
dúe˘i⁄
 = 
DEVICE_TO_HOST
;

55 
suc˚ss
 = 
åue
;

57 
CDC_SET_LINE_CODING
:

58 
å™s„r
->
ªmaöög
 = 7;

59 
å™s„r
->
nŸify
 = 
åue
;

60 
suc˚ss
 = 
åue
;

62 
CDC_SET_CONTROL_LINE_STATE
:

63 i‡(
å™s„r
->
£tup
.
wVÆue
 & 
CLS_DTR
) {

64 
ãrmöÆ_c⁄√˘ed
 = 
åue
;

66 
ãrmöÆ_c⁄√˘ed
 = 
Ál£
;

68 
suc˚ss
 = 
åue
;

75  
suc˚ss
;

76 
	}
}

78 
	gUSBCDC
::
	$USBCÆlback_ªque°Com∂ëed
(
uöt8_t
 *
buf
, 
uöt32_t
 
Àngth
) {

80 i‡(
Àngth
 != 7) {

84 
CONTROL_TRANSFER
 * 
å™s„r
 = 
	`gëTøns„rPå
();

87 i‡(
å™s„r
->
£tup
.
bmReque°Ty≥
.
Ty≥
 =
CLASS_TYPE
) {

88 i‡(
å™s„r
->
£tup
.
bReque°
 =
CDC_SET_LINE_CODING
) {

89 i‡(
	`memcmp
(
cdc_löe_codög
, 
buf
, 7)) {

90 
	`mem˝y
(
cdc_löe_codög
, 
buf
, 7);

92 
baud
 = 
buf
[0] + (buf[1] << 8)

93 + (
buf
[2] << 16) + (buf[3] << 24);

94 
°›
 = 
buf
[4];

95 
bôs
 = 
buf
[6];

96 
∑rôy
 = 
buf
[5];

98 
	`löeCodögCh™ged
(
baud
, 
bôs
, 
∑rôy
, 
°›
);

102 
	}
}

107 
boﬁ
 
	gUSBCDC
::
	$USBCÆlback_£tC⁄figuøti⁄
(
uöt8_t
 
c⁄figuøti⁄
) {

108 i‡(
c⁄figuøti⁄
 !
DEFAULT_CONFIGURATION
) {

109  
Ál£
;

113 
	`addEndpoöt
(
EPINT_IN
, 
MAX_PACKET_SIZE_EPINT
);

114 
	`addEndpoöt
(
EPBULK_IN
, 
MAX_PACKET_SIZE_EPBULK
);

115 
	`addEndpoöt
(
EPBULK_OUT
, 
MAX_PACKET_SIZE_EPBULK
);

118 
	`ªadSèπ
(
EPBULK_OUT
, 
MAX_PACKET_SIZE_EPBULK
);

119  
åue
;

120 
	}
}

122 
boﬁ
 
	gUSBCDC
::
	$£nd
(
uöt8_t
 * 
buf„r
, 
uöt32_t
 
size
) {

123  
USBDevi˚
::
	`wrôe
(
EPBULK_IN
, 
buf„r
, 
size
, 
MAX_CDC_REPORT_SIZE
);

124 
	}
}

126 
boﬁ
 
	gUSBCDC
::
	$ªadEP
(
uöt8_t
 * 
buf„r
, 
uöt32_t
 * 
size
) {

127 i‡(!
USBDevi˚
::
	`ªadEP
(
EPBULK_OUT
, 
buf„r
, 
size
, 
MAX_CDC_REPORT_SIZE
))

128  
Ál£
;

129 i‡(!
	`ªadSèπ
(
EPBULK_OUT
, 
MAX_CDC_REPORT_SIZE
))

130  
Ál£
;

131  
åue
;

132 
	}
}

134 
boﬁ
 
	gUSBCDC
::
	$ªadEP_NB
(
uöt8_t
 * 
buf„r
, 
uöt32_t
 * 
size
) {

135 i‡(!
USBDevi˚
::
	`ªadEP_NB
(
EPBULK_OUT
, 
buf„r
, 
size
, 
MAX_CDC_REPORT_SIZE
))

136  
Ál£
;

137 i‡(!
	`ªadSèπ
(
EPBULK_OUT
, 
MAX_CDC_REPORT_SIZE
))

138  
Ál£
;

139  
åue
;

140 
	}
}

143 
uöt8_t
 * 
	gUSBCDC
::
	$devi˚Desc
() {

144 
uöt8_t
 
devi˚Des¸ùt‹
[] = {

151 
MAX_PACKET_SIZE_EP0
,

152 (
uöt8_t
)(
	`LSB
(
VENDOR_ID
)), (uöt8_t)(
	`MSB
(VENDOR_ID)),

153 (
uöt8_t
)(
	`LSB
(
PRODUCT_ID
)), (uöt8_t)(
	`MSB
(PRODUCT_ID)),

160  
devi˚Des¸ùt‹
;

161 
	}
}

163 
uöt8_t
 * 
	gUSBCDC
::
	$°rögIöãrÁ˚Desc
() {

164 
uöt8_t
 
°rögIöãrÁ˚Des¸ùt‹
[] = {

166 
STRING_DESCRIPTOR
,

169  
°rögIöãrÁ˚Des¸ùt‹
;

170 
	}
}

172 
uöt8_t
 * 
	gUSBCDC
::
	$°rögI¥odu˘Desc
() {

173 
uöt8_t
 
°rögI¥odu˘Des¸ùt‹
[] = {

175 
STRING_DESCRIPTOR
,

178  
°rögI¥odu˘Des¸ùt‹
;

179 
	}
}

182 
	#CONFIG1_DESC_SIZE
 (9+8+9+5+5+4+5+7+9+7+7)

	)

184 
uöt8_t
 * 
	gUSBCDC
::
	$c⁄figuøti⁄Desc
() {

185 
uöt8_t
 
c⁄figDes¸ùt‹
[] = {

189 
	`LSB
(
CONFIG1_DESC_SIZE
),

190 
	`MSB
(
CONFIG1_DESC_SIZE
),

245 
ENDPOINT_DESCRIPTOR_LENGTH
,

246 
ENDPOINT_DESCRIPTOR
,

247 
	`PHY_TO_DESC
(
EPINT_IN
),

248 
E_INTERRUPT
,

249 
	`LSB
(
MAX_PACKET_SIZE_EPINT
),

250 
	`MSB
(
MAX_PACKET_SIZE_EPINT
),

268 
ENDPOINT_DESCRIPTOR_LENGTH
,

269 
ENDPOINT_DESCRIPTOR
,

270 
	`PHY_TO_DESC
(
EPBULK_IN
),

271 
E_BULK
,

272 
	`LSB
(
MAX_PACKET_SIZE_EPBULK
),

273 
	`MSB
(
MAX_PACKET_SIZE_EPBULK
),

277 
ENDPOINT_DESCRIPTOR_LENGTH
,

278 
ENDPOINT_DESCRIPTOR
,

279 
	`PHY_TO_DESC
(
EPBULK_OUT
),

280 
E_BULK
,

281 
	`LSB
(
MAX_PACKET_SIZE_EPBULK
),

282 
	`MSB
(
MAX_PACKET_SIZE_EPBULK
),

285  
c⁄figDes¸ùt‹
;

286 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBSerial\USBCDC.h

19 #i‚de‡
USBCDC_H


20 
	#USBCDC_H


	)

23 
	~"USBEndpoöts.h
"

24 
	~"USBDes¸ùt‹.h
"

25 
	~"USBDevi˚_Ty≥s.h
"

27 
	~"USBDevi˚.h
"

29 ˛as†
	cUSBCDC
: 
public
 
USBDevi˚
 {

30 
public
:

40 
USBCDC
(
uöt16_t
 
víd‹_id
, uöt16_à
¥odu˘_id
, uöt16_à
¥odu˘_ªÀa£
, 
boﬁ
 
c⁄√˘_blockög
);

42 
	m¥Ÿe˘ed
:

49 
vútuÆ
 
uöt8_t
 * 
devi˚Desc
();

56 
vútuÆ
 
uöt8_t
 * 
°rögI¥odu˘Desc
();

63 
vútuÆ
 
uöt8_t
 * 
°rögIöãrÁ˚Desc
();

70 
vútuÆ
 
uöt8_t
 * 
c⁄figuøti⁄Desc
();

80 
boﬁ
 
£nd
(
uöt8_t
 * 
buf„r
, 
uöt32_t
 
size
);

91 
boﬁ
 
ªadEP
(
uöt8_t
 * 
buf„r
, 
uöt32_t
 * 
size
);

102 
boﬁ
 
ªadEP_NB
(
uöt8_t
 * 
buf„r
, 
uöt32_t
 * 
size
);

113 
vútuÆ
 
	$löeCodögCh™ged
(
baud
, 
bôs
, 
∑rôy
, 
°›
) {};

115 
¥Ÿe˘ed
:

116 
vútuÆ
 
boﬁ
 
	`USBCÆlback_ªque°
();

117 
vútuÆ
 
	`USBCÆlback_ªque°Com∂ëed
(
uöt8_t
 *
buf
, 
uöt32_t
 
Àngth
);

118 
vútuÆ
 
boﬁ
 
	`USBCÆlback_£tC⁄figuøti⁄
(
uöt8_t
 
c⁄figuøti⁄
);

119 vﬁ©ûê
boﬁ
 
ãrmöÆ_c⁄√˘ed
;

121 
	}
};

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBSerial\USBSerial.cpp

19 
	~"°döt.h
"

20 
	~"USBSîül.h
"

22 
	gUSBSîül
::
	$_putc
(
c
) {

23 i‡(!
ãrmöÆ_c⁄√˘ed
)

25 
	`£nd
((
uöt8_t
 *)&
c
, 1);

27 
	}
}

29 
	gUSBSîül
::
	$_gëc
() {

30 
uöt8_t
 
c
 = 0;

31 
buf
.
	`isEm±y
());

32 
buf
.
	`dequeue
(&
c
);

33  
c
;

34 
	}
}

37 
boﬁ
 
	gUSBSîül
::
	$wrôeBlock
(
uöt8_t
 * 
buf
, 
uöt16_t
 
size
) {

38 if(
size
 > 
MAX_PACKET_SIZE_EPBULK
) {

39  
Ál£
;

41 if(!
	`£nd
(
buf
, 
size
)) {

42  
Ál£
;

44  
åue
;

45 
	}
}

49 
boﬁ
 
	gUSBSîül
::
	$EPBULK_OUT_ˇŒback
() {

50 
uöt8_t
 
c
[65];

51 
uöt32_t
 
size
 = 0;

54 
	`ªadEP
(
c
, &
size
);

55 
uöt32_t
 
i
 = 0; i < 
size
; i++) {

56 
buf
.
	`queue
(
c
[
i
]);

60 
rx
.
	`ˇŒ
();

62  
åue
;

63 
	}
}

65 
uöt8_t
 
	gUSBSîül
::
	$avaûabÀ
() {

66  
buf
.
	`avaûabÀ
();

67 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBSerial\USBSerial.h

19 #i‚de‡
USBSERIAL_H


20 
	#USBSERIAL_H


	)

22 
	~"USBCDC.h
"

23 
	~"Såóm.h
"

24 
	~"CúcBuf„r.h
"

47 
˛ass
 
	gUSBSîül
: 
public
 
USBCDC
,Öubli¯
	gSåóm
 {

48 
	gpublic
:

59 
USBSîül
(
uöt16_t
 
víd‹_id
 = 0x1f00, uöt16_à
¥odu˘_id
 = 0x2012, uöt16_à
¥odu˘_ªÀa£
 = 0x0001, 
boﬁ
 
c⁄√˘_blockög
 = 
åue
): 
USBCDC
(vendor_id,Öroduct_id,Öroduct_release, connect_blocking){

60 
	g£âögsCh™gedCÆlback
 = 0;

70 
vútuÆ
 
_putc
(
c
);

77 
vútuÆ
 
_gëc
();

84 
uöt8_t
 
avaûabÀ
();

92 
ªadabÀ
(Ë{  
avaûabÀ
() ? 1 : 0; }

100 
wrôóbÀ
() {  1; }

112 
boﬁ
 
wrôeBlock
(
uöt8_t
 * 
buf
, 
uöt16_t
 
size
);

120 
	gãm∂©e
<
ty≥«me
 
	gT
>

121 
©èch
(
T
* 
çå
, (T::*
m±r
)()) {

122 if((
m±r
 !
NULL
Ë&& (
çå
 != NULL)) {

123 
rx
.
©èch
(
çå
, 
m±r
);

132 
©èch
((*
Âå
)()) {

133 if(
	gÂå
 !
NULL
) {

134 
rx
.
©èch
(
Âå
);

143 
©èch
((*
Âå
)(
baud
, 
bôs
, 
∑rôy
, 
°›
)) {

144 
	g£âögsCh™gedCÆlback
 = 
Âå
;

147 
	g¥Ÿe˘ed
:

148 
vútuÆ
 
boﬁ
 
EPBULK_OUT_ˇŒback
();

149 
vútuÆ
 
löeCodögCh™ged
(
baud
, 
bôs
, 
∑rôy
, 
°›
){

150 i‡(
	g£âögsCh™gedCÆlback
) {

151 
£âögsCh™gedCÆlback
(
baud
, 
bôs
, 
∑rôy
, 
°›
);

155 
	g¥iv©e
:

156 
Fun˘i⁄Poöãr
 
rx
;

157 
	gCúcBuf„r
<
	guöt8_t
,128> 
	gbuf
;

158 (*
	g£âögsCh™gedCÆlback
)(
	gbaud
, 
	gbôs
, 
	g∑rôy
, 
	g°›
);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\Pokitto.h

37 #i‚de‡
__POKITTO_H__


38 
	#__POKITTO_H__


	)

40 
	~"Pokôto_£âögs.h
"

41 
	~"PokôtoC‹e.h
"

45 #i‚de‡
POK_SIM


46 
	~"mbed.h
"

47 
	~"HWLCD.h
"

48 
	~"PokôtoTimî.h
"

49 
	~"Pokôto_exç‹t.h
"

50 
	~"PokôtoEEPROM.h
"

52 
	~"PokôtoSimuœt‹.h
"

56 #i‡
POK_ENABLE_SD
 > 0

57 #i‚de‡
POK_SIM


58 
	~"PokôtoDisk.h
"

60 
	~"FûeIO.h
"

65 #i‡
POK_ENABLE_SOUND
 > 0

66 #i‡
POK_ENABLE_SYNTH
 > 0

67 
	~"Sy¡h.h
"

69 
uöt8_t
 
soundbuf
[];

70 
uöt16_t
 
soundbufödex
;

71 
uöt8_t
* 
soundbuÂå
;

72 #i‚de‡
POK_SIM


73 
	~"HWSound.h
"

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\Pokitto_settings.h

38 #i‚de‡
POKITTO_SETTINGS_H


39 
	#POKITTO_SETTINGS_H


	)

41 
	~"My_£âögs.h
"

43 #ifde‡
PROJ_BOARDREV


44 
	#POK_BOARDREV
 
PROJ_BOARDREV


45 #ñ£

	)

46 
	#POK_BOARDREV
 2

48 

	)

50 #ifde‡
PROJ_STARTUPLOGO


51 
	#POK_DISPLAYLOGO
 
PROJ_STARTUPLOGO


52 #ñ£

	)

53 
	#POK_DISPLAYLOGO
 1

	)

56 
	#POK_ENABLE_REFRESHWITHWAIT
 0

57 
	#POK_ENABLE_FPSCOUNTER
 0

58 
	#POK_ENABLE_SD
 1

59 
	#POK_LOADER_COUNTDOWN
 3

60 

	)

61 #i‚de‡
PROJ_ENABLE_SOUND


62 
	#POK_ENABLE_SOUND
 1

	)

64 
	#POK_ENABLE_SOUND
 
PROJ_ENABLE_SOUND


	)

67 #i‚de‡
PROJ_SOUND_BUFFERED


68 
	#POK_SOUND_BUFFERED
 0

	)

70 
	#POK_SOUND_BUFFERED
 
PROJ_SOUND_BUFFERED


	)

73 #i‚de‡
PROJ_GBSOUND


74 #i‡
POK_ENABLE_SOUND
 > 0

75 
	#POK_GBSOUND
 0

	)

78 
	#POK_GBSOUND
 
PROJ_GBSOUND


	)

82 #i‚de‡
PROJ_STREAMING_MUSIC


83 
	#POK_STREAMING_MUSIC
 0

84 #ñ£

	)

85 
	#POK_STREAMING_MUSIC
 
PROJ_STREAMING_MUSIC


	)

88 #i‚de‡
PROJ_ENABLE_SYNTH


89 
	#POK_ENABLE_SYNTH
 0

	)

91 
	#POK_ENABLE_SYNTH
 
PROJ_ENABLE_SYNTH


	)

96 
	#POK_USE_CONSOLE
 0

97 
	#POK_CONSOLE_VISIBLE_AT_STARTUP
 1

98 
	#POK_CONSOLE_INTERVAL
 1000

99 #i‡
POK_USE_CONSOLE
 > 0

100 
	#POK_CONSOLE_LOG_BUTTONS
 0

101 
	#POK_CONSOLE_LOG_COLLISIONS
 1

103 
	#CONSOLEBUFSIZE
 20

	)

104 
	#POK_SHOW_VOLUME
 0

105 
	#VOLUMEBAR_TIMEOUT
 10

106 

	)

109 #i‡
PROJ_TILEDMODE
 > 0

110 
	#POK_TILEDMODE
 1

	)

111 #ifde‡
PROJ_TILEWIDTH


112 
	#POK_TILE_W
 
PROJ_TILEWIDTH


	)

114 
	#POK_TILE_W
 11

	)

116 #i‡
POK_TILE_W
 == 11

117 
	#POK_TILES_X
 20

	)

118 
	#LCDWIDTH
 220

	)

119 #ñi‡
POK_TILE_W
 == 12

120 
	#POK_TILES_X
 18

	)

121 
	#LCDWIDTH
 216

	)

122 #ñi‡
POK_TILE_W
 == 8

123 
	#POK_TILES_X
 27

	)

124 
	#LCDWIDTH
 216

	)

125 #ñi‡
POK_TILE_W
 == 32

126 
	#POK_TILES_X
 6

	)

127 
	#LCDWIDTH
 220

	)

128 #ñi‡
POK_TILE_W
 == 10

129 
	#POK_TILES_X
 22

	)

130 
	#LCDWIDTH
 220

	)

131 #ñi‡
POK_TILE_W
 == 14

132 
	#POK_TILES_X
 15

	)

133 
	#LCDWIDTH
 210

	)

135 #ifde‡
PROJ_TILEHEIGHT


136 
	#POK_TILE_H
 
PROJ_TILEHEIGHT


	)

138 
	#POK_TILE_H
 11

	)

140 #i‡
POK_TILE_H
 == 11

141 
	#POK_TILES_Y
 16

	)

142 
	#LCDHEIGHT
 176

	)

143 #ñi‡
POK_TILE_H
 == 12

144 
	#POK_TILES_Y
 14

	)

145 
	#LCDHEIGHT
 168

	)

146 #ñi‡
POK_TILE_H
 == 8

147 
	#POK_TILES_Y
 22

	)

148 
	#LCDHEIGHT
 176

	)

149 #ñi‡
POK_TILE_H
 == 32

150 
	#POK_TILES_Y
 5

	)

151 
	#LCDHEIGHT
 176

	)

152 #ñi‡
POK_TILE_H
 == 10

153 
	#POK_TILES_Y
 17

	)

154 
	#LCDHEIGHT
 170

	)

155 #ñi‡
POK_TILE_H
 == 14

156 
	#POK_TILES_Y
 12

	)

157 
	#LCDHEIGHT
 168

	)

160 #i‡
PROJ_GAMEBUINO
 > 0

161 
	#POK_GAMEBUINO_SUPPORT
 
PROJ_GAMEBUINO


162 
	#PROJ_SCREENMODE
 
MODE_GAMEBUINO_16COLOR


	)

163 
	#POK_STRETCH
 1

	)

164 
	#PICOPALETTE
 0

	)

165 
	#POK_COLORDEPTH
 4

	)

167 #i‡
PROJ_ARDUBOY
 > 0

168 
	#POK_ARDUBOY_SUPPORT
 
PROJ_ARDUBOY


169 
	#PROJ_SCREENMODE
 
MODE_ARDUBOY_16COLOR


	)

170 
	#POK_COLORDEPTH
 1

	)

171 
	#POK_STRETCH
 1

	)

172 
	#POK_FPS
 20

	)

173 
	#PICOPALETTE
 0

	)

175 #i‡
PROJ_RBOY
 > 0

176 
	#PROJ_SCREENMODE
 
MODE_GAMEBUINO_16COLOR


	)

177 
	#POK_COLORDEPTH
 1

	)

178 
	#POK_STRETCH
 0

	)

179 
	#POK_FPS
 40

	)

180 
	#PICOPALETTE
 0

	)

182 #i‡
PROJ_GAMEBOY
 > 0

183 
	#PROJ_SCREENMODE
 
MODE_GAMEBOY


	)

184 
	#POK_COLORDEPTH
 2

	)

185 
	#POK_STRETCH
 0

	)

186 
	#POK_FPS
 6

	)

187 
	#PICOPALETTE
 0

	)

189 
	#POK_GAMEBUINO_SUPPORT
 0

	)

190 
	#POK_GAMEBOY_SUPPORT
 0

	)

191 
	#POK_ARDUBOY_SUPPORT
 0

	)

192 
	#PICOPALETTE
 0

	)

193 
	#POK_COLORDEPTH
 4

	)

203 
	#POK_LCD_W
 220

204 
	#POK_LCD_H
 176

205 

	)

206 
	#MODE_NOBUFFER
 0

207 
	#BUFSIZE_NOBUFFER
 0

	)

208 
	#MODE_HI_4COLOR
 1

209 
	#BUFSIZE_HI_4
 9680

	)

210 
	#MODE_FAST_16COLOR
 2

211 
	#BUFSIZE_FAST_16
 4840

	)

212 
	#MODE_HI_16COLOR
 3

	)

213 
	#BUFSIZE_HI_16
 19360

	)

214 
	#MODE_GAMEBUINO_16COLOR
 4

215 
	#BUFSIZE_GAMEBUINO_16
 2016

	)

216 
	#MODE_ARDUBOY_16COLOR
 5

217 
	#BUFSIZE_ARDUBOY_16
 4096

	)

218 
	#MODE_HI_MONOCHROME
 6

219 
	#BUFSIZE_HI_MONO
 4840

	)

220 
	#MODE_HI_GRAYSCALE
 7

221 
	#BUFSIZE_HI_GS
 9680

	)

222 
	#MODE_GAMEBOY
 8

	)

223 
	#BUFSIZE_GAMEBOY
 5760

	)

224 
	#MODE_UZEBOX
 9

	)

225 
	#MODE_TVOUT
 10

	)

226 
	#MODE_LAMENES
 11

	)

227 
	#BUFSIZE_LAMENES
 7680

	)

228 
	#MODE_256_COLOR
 12

	)

229 
	#BUFSIZE_MODE_12
 4176

230 
	#MODE13
 13

	)

231 
	#BUFSIZE_MODE13
 9680

232 
	#MODE14
 14

	)

233 
	#BUFSIZE_MODE14
 14520

	)

235 
	#MODE_TILED_1BIT
 1001

	)

236 
	#MODE_TILED_8BIT
 1002

	)

239 
	#R_MASK
 0xF800

	)

240 
	#G_MASK
 0x7E0

	)

241 
	#B_MASK
 0x1F

	)

245 #i‡
POK_TILEDMODE
 > 0

246 #i‚de‡
PROJ_TILEBITDEPTH


247 
	#PROJ_TILEBITDEPTH
 8

249 #i‡
PROJ_TILEBITDEPTH
 =1

	)

250 
	#POK_SCREENMODE
 
MODE_TILED_1BIT


	)

251 
	#POK_COLORDEPTH
 1

	)

253 
	#POK_SCREENMODE
 
MODE_TILED_8BIT


	)

254 
	#POK_COLORDEPTH
 8

	)

257 #i‚de‡
PROJ_SCREENMODE


258 #unde‡
POK_COLORDEPTH


259 #ifde‡
PROJ_HIRES


260 #i‡
PROJ_HIRES
 > 0

261 
	#POK_SCREENMODE
 
MODE_HI_4COLOR


	)

262 #unde‡
POK_COLORDEPTH


263 
	#POK_COLORDEPTH
 2

	)

264 #ñi‡
PROJ_HICOLOR
 > 0

265 
	#POK_SCREENMODE
 
MODE_256_COLOR


	)

266 #unde‡
POK_COLORDEPTH


267 
	#POK_COLORDEPTH
 8

	)

269 
	#POK_SCREENMODE
 
MODE_FAST_16COLOR


	)

270 #unde‡
POK_COLORDEPTH


271 
	#POK_COLORDEPTH
 4

	)

274 
	#POK_SCREENMODE
 
MODE_FAST_16COLOR


	)

275 
	#POK_COLORDEPTH
 4

	)

278 
	#POK_SCREENMODE
 
PROJ_SCREENMODE


	)

282 #i‡
PROJ_MODE13
 > 0

283 #unde‡
POK_SCREENMODE


284 #unde‡
POK_COLORDEPTH


285 #unde‡
POK_FPS


286 
	#POK_SCREENMODE
 
MODE13


	)

287 
	#POK_COLORDEPTH
 8

	)

288 
	#POK_STRETCH
 0

	)

289 
	#POK_FPS
 30

	)

292 #i‡
PROJ_MODE14
 > 0

293 #unde‡
POK_SCREENMODE


294 #unde‡
POK_COLORDEPTH


295 #unde‡
POK_FPS


296 
	#POK_SCREENMODE
 
MODE14


	)

297 
	#POK_COLORDEPTH
 3

	)

298 
	#POK_STRETCH
 0

	)

299 
	#POK_FPS
 30

	)

301 #i‡
PROJ_MODE15
 > 0

302 #unde‡
POK_SCREENMODE


303 #unde‡
POK_COLORDEPTH


304 #unde‡
POK_FPS


305 
	#POK_SCREENMODE
 
MODE15


	)

306 
	#POK_COLORDEPTH
 4

	)

307 
	#POK_STRETCH
 0

	)

308 
	#POK_FPS
 30

	)

313 #i‚de‡
POK_COLORDEPTH


314 
	#POK_COLORDEPTH
 4

316 

	)

318 #i‡
POK_SCREENMODE
 == 0

319 
	#POK_SCREENBUFFERSIZE
 0

	)

320 
	#LCDWIDTH
 
POK_LCD_W


	)

321 
	#LCDHEIGHT
 
POK_LCD_H


	)

322 
	#POK_BITFRAME
 0

	)

323 #ñi‡
POK_SCREENMODE
 =
MODE_HI_MONOCHROME


324 
	#POK_SCREENBUFFERSIZE
 
POK_LCD_W
*
POK_LCD_H
*
POK_COLORDEPTH
/8

	)

325 
	#LCDWIDTH
 
POK_LCD_W


	)

326 
	#LCDHEIGHT
 
POK_LCD_H


	)

327 
	#POK_BITFRAME
 4840

	)

328 #ñi‡
POK_SCREENMODE
 =
MODE_HI_16COLOR


329 
	#POK_SCREENBUFFERSIZE
 
POK_LCD_W
*
POK_LCD_H
/2

	)

330 
	#LCDWIDTH
 220

	)

331 
	#LCDHEIGHT
 176

	)

332 
	#POK_BITFRAME
 4840

	)

333 #ñi‡
POK_SCREENMODE
 =
MODE_HI_4COLOR
 || POK_SCREENMODE =
MODE_HI_GRAYSCALE


334 
	#POK_SCREENBUFFERSIZE
 
POK_LCD_W
*
POK_LCD_H
*
POK_COLORDEPTH
/4

	)

335 
	#LCDWIDTH
 
POK_LCD_W


	)

336 
	#LCDHEIGHT
 
POK_LCD_H


	)

337 
	#POK_BITFRAME
 4840

	)

338 #ñi‡
POK_SCREENMODE
 =
MODE_FAST_16COLOR


339 
	#POK_SCREENBUFFERSIZE
 (
POK_LCD_W
/2)*(
POK_LCD_H
/2)*
POK_COLORDEPTH
/8

	)

340 
	#XCENTER
 
POK_LCD_W
/4

	)

341 
	#YCENTER
 
POK_LCD_H
/4

	)

342 
	#LCDWIDTH
 110

	)

343 
	#LCDHEIGHT
 88

	)

344 
	#POK_BITFRAME
 1210

	)

345 #ñi‡
POK_SCREENMODE
 =
MODE_256_COLOR


346 
	#POK_SCREENBUFFERSIZE
 72*58

	)

347 
	#XCENTER
 36

	)

348 
	#YCENTER
 29

	)

349 
	#LCDWIDTH
 72

	)

350 
	#LCDHEIGHT
 58

	)

351 
	#POK_BITFRAME
 72*58

	)

352 #ñi‡
POK_SCREENMODE
 =
MODE_GAMEBUINO_16COLOR


353 
	#POK_SCREENBUFFERSIZE
 (84/2)*(48/2)*
POK_COLORDEPTH
/8

	)

354 
	#LCDWIDTH
 84

	)

355 
	#LCDHEIGHT
 48

	)

356 
	#POK_BITFRAME
 504

	)

357 #ñi‡
POK_SCREENMODE
 =
MODE_ARDUBOY_16COLOR


358 
	#POK_SCREENBUFFERSIZE
 (128/2)*(64/2)*
POK_COLORDEPTH
/8

	)

359 
	#LCDWIDTH
 128

	)

360 
	#LCDHEIGHT
 64

	)

361 
	#POK_BITFRAME
 1024

	)

362 #ñi‡
POK_SCREENMODE
 =
MODE_LAMENES


363 
	#POK_SCREENBUFFERSIZE
 (128)*(120)*
POK_COLORDEPTH
/8

	)

364 
	#LCDWIDTH
 128

	)

365 
	#LCDHEIGHT
 120

	)

366 
	#POK_BITFRAME
 1210

	)

367 #ñi‡
POK_SCREENMODE
 =
MODE_GAMEBOY


368 
	#POK_SCREENBUFFERSIZE
 (160)*(144)/4

	)

369 
	#LCDWIDTH
 160

	)

370 
	#LCDHEIGHT
 144

	)

371 
	#POK_BITFRAME
 2880

	)

372 #ñi‡
POK_SCREENMODE
 =
MODE13


373 
	#POK_SCREENBUFFERSIZE
 110*88

	)

374 
	#LCDWIDTH
 110

	)

375 
	#LCDHEIGHT
 88

	)

376 
	#POK_BITFRAME
 110*88

	)

377 #ñi‡
POK_SCREENMODE
 =
MODE14


378 
	#POK_SCREENBUFFERSIZE
 14520

	)

379 
	#LCDWIDTH
 220

	)

380 
	#LCDHEIGHT
 176

	)

381 
	#POK_BITFRAME
 4840

	)

382 #ñi‡
POK_SCREENMODE
 =
MODE15


383 
	#POK_SCREENBUFFERSIZE
 0x4BA0

	)

384 
	#LCDWIDTH
 220

	)

385 
	#LCDHEIGHT
 176

	)

388 
	#POK_SCREENBUFFERSIZE
 0

	)

391 #i‚de‡
POK_STRETCH


392 
	#POK_STRETCH
 1

394 

	)

395 #ifde‡
PROJ_FPS


396 
	#POK_FPS
 
PROJ_FPS


	)

398 #i‚de‡
POK_FPS


399 
	#POK_FPS
 20

	)

401 
	#POK_FRAMEDURATION
 1000/
POK_FPS


	)

404 #i‡
PROJ_NO_AUTO_SCROLL


405 
	#SCROLL_TEXT
 0

	)

407 
	#SCROLL_TEXT
 1

	)

411 
	#POK_AUD_PIN
 
P2_19


	)

412 
	#POK_AUD_PWM_US
 15

413 #i‚de‡
PROJ_AUD_FREQ


	)

414 
	#POK_AUD_FREQ
 22050

415 #ñ£

	)

416 
	#POK_AUD_FREQ
 
PROJ_AUD_FREQ


	)

420 
	#POK_USE_EXT
 0

421 

	)

422 
	#POK_STREAMFREQ_HALVE
 0

423 
	#POK_STREAM_LOOP
 1

424 

	)

425 #i‚de‡
PROJ_USE_DAC


426 
	#POK_USE_DAC
 1

427 #ñ£

	)

428 
	#POK_USE_DAC
 
PROJ_USE_DAC


	)

430 #i‚de‡
PROJ_USE_PWM


431 
	#POK_USE_PWM
 1

432 #ñ£

	)

433 
	#POK_USE_PWM
 
PROJ_USE_PWM


	)

436 #i‚de‡
PROJ_STREAM_TO_DAC


437 
	#POK_STREAM_TO_DAC
 1

438 #ñ£

	)

439 
	#POK_STREAM_TO_DAC
 
PROJ_STREAM_TO_DAC


	)

443 
	#POK_BACKLIGHT_PIN
 
P2_2


	)

444 
	#POK_BACKLIGHT_INITIALVALUE
 0.3f

	)

446 
	#POK_BATTERY_PIN1
 
P0_22


447 
	#POK_BATTERY_PIN2
 
P0_23


	)

449 
	#POK_BTN_A_PIN
 
P1_9


	)

450 
	#POK_BTN_B_PIN
 
P1_4


	)

451 
	#POK_BTN_C_PIN
 
P1_10


	)

452 
	#POK_BTN_UP_PIN
 
P1_13


	)

453 
	#POK_BTN_DOWN_PIN
 
P1_3


	)

454 
	#POK_BTN_LEFT_PIN
 
P1_25


	)

455 
	#POK_BTN_RIGHT_PIN
 
P1_7


	)

457 
	#UPBIT
 0

	)

458 
	#DOWNBIT
 1

	)

459 
	#LEFTBIT
 2

	)

460 
	#RIGHTBIT
 3

	)

461 
	#ABIT
 4

	)

462 
	#BBIT
 5

	)

463 
	#CBIT
 6

	)

466 
	#POK_ENABLE_LOADER_UPDATES
 1

467 

	)

468 #i‚de‡
SPRITE_COUNT


469 
	#SPRITE_COUNT
 4

471 

	)

473 
	#EESETTINGS_FILENAME
 3980

474 
	#EESETTINGS_VOL
 4000

475 
	#EESETTINGS_DEFAULTVOL
 4001

476 
	#EESETTINGS_LOADERWAIT
 4002

477 
	#EESETTINGS_VOLWAIT
 4003

478 
	#EESETTINGS_TIMEFORMAT
 4004

479 
	#EESETTINGS_LASTHOURSSET
 4005

480 
	#EESETTINGS_LASTMINUTESSET
 4006

481 
	#EESETTINGS_DATEFORMAT
 4007

482 
	#EESETTINGS_LASTDAYSET
 4008

483 
	#EESETTINGS_LASTMONTHSET
 4009

484 
	#EESETTINGS_LASTYEARSET
 4010

485 
	#EESETTINGS_RTCALARMMODE
 4011

486 
	#EESETTINGS_RESERVED
 4012

487 
	#EESETTINGS_WAKEUPTIME
 4016

488 

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\libpff\connect.h

1 #i‚de‡
_CONNECT_H_


3 
«me•a˚
 
	gPFFS
 {

6 
	#CONNECT_MOSI
 
P0_9


7 
	#CONNECT_MISO
 
P0_8


8 
	#CONNECT_SCK
 
P0_6


9 
	#CONNECT_CS
 
P0_7


10 
	#SPI_FREQ
 20000000

11 

	)

14 
	#_CONNECT_H_


	)

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\libpff\diskio.h

5 #i‚de‡
_DISKIO


7 
	~"öãgî.h
"

9 
«me•a˚
 
	gPFFS
 {

12 
BYTE
 
	tDSTATUS
;

16 
	gRES_OK
 = 0,

17 
	gRES_ERROR
,

18 
	gRES_NOTRDY
,

19 
	gRES_PARERR


20 } 
	tDRESULT
;

25 
DSTATUS
 
disk_öôülize
 ();

26 
DRESULT
 
disk_ªadp
 (
BYTE
*, 
DWORD
, 
WORD
, WORD);

27 
DRESULT
 
disk_wrôï
 (c⁄° 
BYTE
*, 
DWORD
);

29 
	#STA_NOINIT
 0x01

	)

30 
	#STA_NODISK
 0x02

	)

33 
	#CT_MMC
 0x01

	)

34 
	#CT_SD1
 0x02

	)

35 
	#CT_SD2
 0x04

	)

36 
	#CT_SDC
 (
CT_SD1
|
CT_SD2
Ë

	)

37 
	#CT_BLOCK
 0x08

	)

41 
	#_DISKIO


	)

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\libpff\integer.h

5 #i‚de‡
_INTEGER


7 
«me•a˚
 
	gPFFS
 {

10 
	tINT
;

11 
	tUINT
;

14 sig√d 
	tCHAR
;

15 
	tUCHAR
;

16 
	tBYTE
;

19 
	tSHORT
;

20 
	tUSHORT
;

21 
	tWORD
;

22 
	tWCHAR
;

25 
	tLONG
;

26 
	tULONG
;

27 
	tDWORD
;

34 
	#_INTEGER


	)

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\libpff\mmc.cpp

7 
	~"diskio.h
"

8 
	~"mbed.h
"

9 
	~"c⁄√˘.h
"

10 
	~"PokôtoDisk.h
"

12 
«me•a˚
 
	gPFFS
 {

14 
	#_WRITE_FUNC
 1

	)

17 
	#CMD0
 (0x40+0Ë

	)

18 
	#CMD1
 (0x40+1Ë

	)

19 
	#ACMD41
 (0xC0+41Ë

	)

20 
	#CMD8
 (0x40+8Ë

	)

21 
	#CMD16
 (0x40+16Ë

	)

22 
	#CMD17
 (0x40+17Ë

	)

23 
	#CMD24
 (0x40+24Ë

	)

24 
	#CMD55
 (0x40+55Ë

	)

25 
	#CMD58
 (0x40+58Ë

	)

30 
	#SELECT
(Ë
CLR_SD_CS


31 
	#DESELECT
(Ë
SET_SD_CS


32 
	#MMC_SEL
 !
GET_SD_CS


33 

	)

34 
xmô_•i
 (
BYTE
 
c
) {

35 
	gdevi˚
.
wrôe
(
c
);

38 
BYTE
 
rcv_•i
 () {

39  
	gdevi˚
.
wrôe
(0xff);

49 
BYTE
 
	gC¨dTy≥
;

57 
ªÀa£_•i
 () {

58 
DESELECT
();

59 
rcv_•i
();

68 
BYTE
 
£nd_cmd
 (

69 
BYTE
 
cmd
,

70 
DWORD
 
¨g


72 
BYTE
 
	gn
, 
	gªs
;

75 i‡(
	gcmd
 & 0x80) {

76 
	gcmd
 &= 0x7F;

77 
	gªs
 = 
£nd_cmd
(
CMD55
, 0);

78 i‡(
	gªs
 > 1) Ñes;

82 
DESELECT
();

83 
rcv_•i
();

84 
SELECT
();

85 
rcv_•i
();

88 
xmô_•i
(
cmd
);

89 
xmô_•i
((
BYTE
)(
¨g
 >> 24));

90 
xmô_•i
((
BYTE
)(
¨g
 >> 16));

91 
xmô_•i
((
BYTE
)(
¨g
 >> 8));

92 
xmô_•i
((
BYTE
)
¨g
);

93 
	gn
 = 0x01;

94 i‡(
	gcmd
 =
CMD0
Ë
n
 = 0x95;

95 i‡(
	gcmd
 =
CMD8
Ë
n
 = 0x87;

96 
xmô_•i
(
n
);

99 
	gn
 = 10;

101 
	gªs
 = 
rcv_•i
();

102 } (
	gªs
 & 0x80Ë&& --
	gn
);

104  
	gªs
;

121 
DSTATUS
 
disk_öôülize
 () {

122 
BYTE
 
	gn
, 
	gcmd
, 
	gty
, 
	go¸
[4];

123 
WORD
 
	gtmr
;

125 
DESELECT
();

126 
	gdevi˚
.
‰equícy
(
SPI_FREQ
);

127 
	gdevi˚
.
f‹m©
(8);

130 #i‡
_WRITE_FUNC


131 i‡(
	gMMC_SEL
Ë
disk_wrôï
(0, 0);

133 
	gn
 = 100;Ç;Ç--Ë
rcv_•i
();

135 
	gty
 = 0;

136 i‡(
£nd_cmd
(
CMD0
, 0) == 1) {

137 i‡(
£nd_cmd
(
CMD8
, 0x1AA) == 1) {

138 
n
 = 0; 
	gn
 < 4;Ç++Ë
	go¸
[n] = 
rcv_•i
();

139 i‡(
	go¸
[2] =0x01 && 
o¸
[3] == 0xAA) {

140 
tmr
 = 12000; 
	gtmr
 && 
£nd_cmd
(
ACMD41
, 1UL << 30);Åmr--) ;

141 i‡(
	gtmr
 && 
£nd_cmd
(
CMD58
, 0) == 0) {

142 
n
 = 0; 
	gn
 < 4;Ç++Ë
	go¸
[n] = 
rcv_•i
();

143 
	gty
 = (
o¸
[0] & 0x40Ë? 
CT_SD2
 | 
CT_BLOCK
 : CT_SD2;

147 i‡(
£nd_cmd
(
ACMD41
, 0) <= 1) {

148 
ty
 = 
CT_SD1
;

149 
	gcmd
 = 
ACMD41
;

151 
	gty
 = 
CT_MMC
;

152 
	gcmd
 = 
CMD1
;

154 
	gtmr
 = 25000;Åm∏&& 
£nd_cmd
(
cmd
, 0);Åmr--) ;

155 i‡(!
	gtmr
 || 
£nd_cmd
(
CMD16
, 512) != 0)

156 
ty
 = 0;

159 
	gC¨dTy≥
 = 
ty
;

160 
ªÀa£_•i
();

162  
	gty
 ? 0 : 
STA_NOINIT
;

171 
DRESULT
 
disk_ªadp
 (

172 
BYTE
 *
buff
,

173 
DWORD
 
lba
,

174 
WORD
 
ofs
,

175 
WORD
 
˙t


177 
DRESULT
 
	gªs
;

178 
BYTE
 
	grc
;

179 
WORD
 
	gbc
;

182 i‡(!(
	gC¨dTy≥
 & 
	gCT_BLOCK
)Ë
	glba
 *= 512;

184 
	gªs
 = 
RES_ERROR
;

185 i‡(
£nd_cmd
(
CMD17
, 
lba
) == 0) {

187 
bc
 = 30000;

189 
	grc
 = 
rcv_•i
();

190 } 
	grc
 =0xFF && --
bc
);

192 i‡(
	grc
 == 0xFE) {

193 
bc
 = 514 - 
ofs
 - 
˙t
;

196 i‡(
	gofs
) {

198 
rcv_•i
();

199 } --
	gofs
);

203 i‡(
	gbuff
) {

205 *
	gbuff
++ = 
rcv_•i
();

206 } --
	g˙t
);

209 
rcv_•i
();

210 } --
	g˙t
);

214 dÿ
rcv_•i
();

215 --
	gbc
);

217 
	gªs
 = 
RES_OK
;

221 
ªÀa£_•i
();

223  
	gªs
;

231 #i‡
_WRITE_FUNC


233 
DRESULT
 
disk_wrôï
 (

234 c⁄° 
BYTE
 *
buff
,

235 
DWORD
 
ß


237 
DRESULT
 
	gªs
;

238 
WORD
 
	gbc
;

239 
WORD
 
	gwc
;

242 
	gªs
 = 
RES_ERROR
;

244 i‡(
	gbuff
) {

245 
	gbc
 = (
WORD
)
ß
;

246 
	gbc
 && 
	gwc
) {

247 
xmô_•i
(*
buff
++);

248 
	gwc
--;

249 
	gbc
--;

251 
	gªs
 = 
RES_OK
;

253 i‡(
	gß
) {

254 i‡(!(
	gC¨dTy≥
 & 
	gCT_BLOCK
)Ë
	gß
 *= 512;

255 i‡(
£nd_cmd
(
CMD24
, 
ß
) == 0) {

256 
xmô_•i
(0xFF);

257 
xmô_•i
(0xFE);

258 
	gwc
 = 512;

259 
	gªs
 = 
RES_OK
;

262 
	gbc
 = 
wc
 + 2;

263 
	gbc
--Ë
xmô_•i
(0);

264 i‡((
rcv_•i
() & 0x1F) == 0x05) {

265 
bc
 = 65000; 
rcv_•i
(Ë!0xFF && bc; 
	gbc
--) ;

266 i‡(
	gbc
Ë
	gªs
 = 
RES_OK
;

268 
ªÀa£_•i
();

272  
	gªs
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\libpff\pff.cpp

24 
	~"pff.h
"

25 
	~"diskio.h
"

27 
«me•a˚
 
	gPFFS
 {

36 
FATFS
 *
	gF©Fs
;

46 
mem_£t
 (* 
d°
, 
vÆ
, 
˙t
) {

47 *
	gd
 = (*)
d°
;

48 
	g˙t
--Ë*
	gd
++ = ()
vÆ
;

53 
mem_cmp
 (c⁄° * 
d°
, c⁄° * 
§c
, 
˙t
) {

54 c⁄° *
	gd
 = (c⁄° *)
d°
, *
	gs
 = (c⁄° *)
§c
;

55 
	gr
 = 0;

56 
	g˙t
-- && (
	gr
 = *
d
++ - *
s
++) == 0) ;

57  
	gr
;

67 
CLUST
 
gë_Át
 (

68 
CLUST
 
˛°


70 
WORD
 
	gwc
, 
	gbc
, 
	gofs
;

71 
BYTE
 
	gbuf
[4];

72 
FATFS
 *
	gfs
 = 
F©Fs
;

75 i‡(
	g˛°
 < 2 || cl° >
fs
->
max_˛u°
)

78 
	gfs
->
	gfs_ty≥
) {

79 
	gFS_FAT12
 :

80 
bc
 = (
WORD
)
˛°
;

81 
	gbc
 +
bc
 / 2;

82 
	gofs
 = 
bc
 % 512;

83 
	gbc
 /= 512;

84 i‡(
	gofs
 != 511) {

85 i‡(
disk_ªadp
(
buf
, 
fs
->
Átba£
 + 
bc
, 
ofs
, 2)) ;

87 i‡(
disk_ªadp
(
buf
, 
fs
->
Átba£
 + 
bc
, 511, 1)) ;

88 i‡(
disk_ªadp
(
buf
+1, 
fs
->
Átba£
 + 
bc
 + 1, 0, 1)) ;

90 
	gwc
 = 
LD_WORD
(
buf
);

91  (
	g˛°
 & 1Ë? (
	gwc
 >> 4Ë: (
wc
 & 0xFFF);

93 
	gFS_FAT16
 :

94 i‡(
disk_ªadp
(
buf
, 
fs
->
Átba£
 + 
˛°
 / 256, (
WORD
)(((WORD)clst % 256) * 2), 2)) ;

95  
LD_WORD
(
buf
);

96 #i‡
_FS_FAT32


97 
	gFS_FAT32
 :

98 i‡(
disk_ªadp
(
buf
, 
fs
->
Átba£
 + 
˛°
 / 128, (
WORD
)(((WORD)clst % 128) * 4), 4)) ;

99  ((
	gWORD
)(((WORD)*(
	gBYTE
*)((
	gbuf
)+1)<<8)|(WORD)*(BYTE*)(buf))) & 0x0FFFFFFF;

114 
DWORD
 
˛u°2£˘
 (

115 
CLUST
 
˛°


117 
FATFS
 *
	gfs
 = 
F©Fs
;

120 
	g˛°
 -= 2;

121 i‡(
	g˛°
 >(
fs
->
max_˛u°
 - 2))  0;

122  (
	gDWORD
)
˛°
 * 
	gfs
->
	gcsize
 + fs->
	gd©aba£
;

133 
FRESULT
 
dú_ªwöd
 (

134 
FATDIR
 *
dj


136 
CLUST
 
	g˛°
;

137 
FATFS
 *
	gfs
 = 
F©Fs
;

140 
	gdj
->
	gödex
 = 0;

141 
	g˛°
 = 
dj
->
s˛u°
;

142 i‡(
	g˛°
 =1 || 
˛°
 >
fs
->
max_˛u°
)

143  
FR_DISK_ERR
;

144 #i‡
_FS_FAT32


145 i‡(!
	g˛°
 && 
	gfs
->
	gfs_ty≥
 =
FS_FAT32
)

146 
˛°
 = 
fs
->
dúba£
;

148 
	gdj
->
	g˛u°
 = 
˛°
;

149 
	gdj
->
	g£˘
 = 
˛°
 ? 
˛u°2£˘
(˛°Ë: 
fs
->
dúba£
;

151  
	gFR_OK
;

162 
FRESULT
 
dú_√xt
 (

163 
FATDIR
 *
dj


165 
CLUST
 
	g˛°
;

166 
WORD
 
	gi
;

167 
FATFS
 *
	gfs
 = 
F©Fs
;

170 
	gi
 = 
dj
->
ödex
 + 1;

171 i‡(!
	gi
 || !
	gdj
->
	g£˘
)

172  
	gFR_NO_FILE
;

174 i‡(!(
	gi
 & (16-1))) {

175 
	gdj
->
	g£˘
++;

177 i‡(
	gdj
->
	g˛u°
 == 0) {

178 i‡(
i
 >
fs
->
n_roŸdú
)

179  
FR_NO_FILE
;

181 i‡(((
	gi
 / 16Ë& (
	gfs
->
	gcsize
-1)) == 0) {

182 
˛°
 = 
gë_Át
(
dj
->
˛u°
);

183 i‡(
	g˛°
 <1Ë 
FR_DISK_ERR
;

184 i‡(
	g˛°
 >
fs
->
max_˛u°
)

185  
FR_NO_FILE
;

186 
	gdj
->
	g˛u°
 = 
˛°
;

187 
	gdj
->
	g£˘
 = 
˛u°2£˘
(
˛°
);

192 
	gdj
->
	gödex
 = 
i
;

194  
	gFR_OK
;

205 
FRESULT
 
dú_föd
 (

206 
FATDIR
 *
dj


208 
FRESULT
 
	gªs
;

209 
BYTE
 
	gc
, *
	gdú
;

212 
	gªs
 = 
dú_ªwöd
(
dj
);

213 i‡(
	gªs
 !
FR_OK
Ë 
ªs
;

215 
	gdú
 = 
F©Fs
->
buf
;

217 
	gªs
 = 
disk_ªadp
(
dú
, 
dj
->
£˘
, (
WORD
)((dj->
ödex
 % 16) * 32), 32)

218 ? 
	gFR_DISK_ERR
 : 
FR_OK
;

219 i‡(
	gªs
 !
FR_OK
) ;

220 
	gc
 = 
dú
[
DIR_Name
];

221 i‡(
	gc
 == 0) {

222 
ªs
 = 
FR_NO_FILE
;

225 i‡(!(
	gdú
[
DIR_Aâr
] & 
	gAM_VOL
Ë&& !
mem_cmp
(
dú
, 
dj
->
‚
, 11))

227 
	gªs
 = 
dú_√xt
(
dj
);

228 } 
	gªs
 =
FR_OK
);

230  
	gªs
;

239 #i‡
_USE_DIR


241 
FRESULT
 
dú_ªad
 (

242 
FATDIR
 *
dj


244 
FRESULT
 
	gªs
;

245 
BYTE
 
	ga
, 
	gc
, *
	gdú
;

248 
	gªs
 = 
FR_NO_FILE
;

249 
	gdú
 = 
F©Fs
->
buf
;

250 
	gdj
->
	g£˘
) {

251 
	gªs
 = 
disk_ªadp
(
dú
, 
dj
->
£˘
, (
WORD
)((dj->
ödex
 % 16) * 32), 32)

252 ? 
	gFR_DISK_ERR
 : 
FR_OK
;

253 i‡(
	gªs
 !
FR_OK
) ;

254 
	gc
 = 
dú
[
DIR_Name
];

255 i‡(
	gc
 == 0) {

256 
ªs
 = 
FR_NO_FILE
;

259 
	ga
 = 
dú
[
DIR_Aâr
] & 
AM_MASK
;

260 i‡(
	gc
 !0xE5 && 
c
 !'.' && !(
a
 & 
AM_VOL
))

262 
	gªs
 = 
dú_√xt
(
dj
);

263 i‡(
	gªs
 !
FR_OK
) ;

266 i‡(
	gªs
 !
FR_OK
Ë
dj
->
£˘
 = 0;

268  
	gªs
;

278 #ifde‡
_EXCVT


279 c⁄° 
BYTE
 
	gcvt
[] = 
_EXCVT
;

283 
FRESULT
 
¸óã_«me
 (

284 
FATDIR
 *
dj
,

285 c⁄° **
∑th


287 
BYTE
 
	gc
, 
	gd
, 
	gni
, 
	gsi
, 
	gi
, *
	gs‚
;

288 c⁄° *
	gp
;

291 
	gs‚
 = 
dj
->
‚
;

292 
mem_£t
(
s‚
, ' ', 11);

293 
	gsi
 = 
i
 = 0;

294 
	gni
 = 8;

295 
	gp
 = *
∑th
;

297 
	gc
 = 
p
[
si
++];

298 i‡(
	gc
 <' ' || 
c
 == '/') ;

299 i‡(
	gc
 ='.' || 
i
 >
ni
) {

300 i‡(
ni
 !8 || 
c
 != '.') ;

301 
	gi
 = 8;

302 
	gni
 = 11;

305 #ifde‡
_EXCVT


306 i‡(
	gc
 >= 0x80)

307 
c
 = 
cvt
[c - 0x80];

309 i‡(
IsDBCS1
(
c
Ë&& 
	gi
 >
ni
 - 1) {

310 
d
 = 
p
[
si
++];

311 
	gs‚
[
i
++] = 
c
;

312 
	gs‚
[
i
++] = 
d
;

314 i‡(
IsLowî
(
c
)Ë
	gc
 -= 0x20;

315 
	gs‚
[
i
++] = 
c
;

318 *
	g∑th
 = &
p
[
si
];

320 
	gs‚
[11] = (
c
 <= ' ') ? 1 : 0;

322  
	gFR_OK
;

331 #i‡
_USE_DIR


333 
gë_fûeöfo
 (

334 
FATDIR
 *
dj
,

335 
FILINFO
 *
‚o


337 
BYTE
 
	gi
, 
	gc
, *
	gdú
;

338 *
	gp
;

341 
	gp
 = 
‚o
->
‚ame
;

342 i‡(
	gdj
->
	g£˘
) {

343 
	gdú
 = 
F©Fs
->
buf
;

344 
	gi
 = 0; i < 8; i++) {

345 
	gc
 = 
dú
[
i
];

346 i‡(
	gc
 == ' ') ;

347 i‡(
	gc
 =0x05Ë
c
 = 0xE5;

348 *
	gp
++ = 
c
;

350 i‡(
	gdú
[8] != ' ') {

351 *
p
++ = '.';

352 
	gi
 = 8; i < 11; i++) {

353 
	gc
 = 
dú
[
i
];

354 i‡(
	gc
 == ' ') ;

355 *
	gp
++ = 
c
;

358 
	g‚o
->
	gÁârib
 = 
dú
[
DIR_Aâr
];

359 
	g‚o
->
	gfsize
 = 
LD_DWORD
(
dú
+
DIR_FûeSize
);

360 
	g‚o
->
	gfd©e
 = 
LD_WORD
(
dú
+
DIR_WπD©e
);

361 
	g‚o
->
	g·ime
 = 
LD_WORD
(
dú
+
DIR_WπTime
);

363 *
	gp
 = 0;

374 
FRESULT
 
fﬁlow_∑th
 (

375 
FATDIR
 *
dj
,

376 c⁄° *
∑th


378 
FRESULT
 
	gªs
;

379 
BYTE
 *
	gdú
;

382 *
	g∑th
 =' 'Ë
∑th
++;

383 i‡(*
	g∑th
 ='/'Ë
∑th
++;

384 
	gdj
->
	gs˛u°
 = 0;

386 i‡((
	gBYTE
)*
	g∑th
 <= ' ') {

387 
ªs
 = 
dú_ªwöd
(
dj
);

388 
	gF©Fs
->
	gbuf
[0] = 0;

392 
	gªs
 = 
¸óã_«me
(
dj
, &
∑th
);

393 i‡(
	gªs
 !
FR_OK
) ;

394 
	gªs
 = 
dú_föd
(
dj
);

395 i‡(
	gªs
 !
FR_OK
) {

396 i‡(
ªs
 =
FR_NO_FILE
 && !*(
dj
->
‚
+11))

397 
ªs
 = 
FR_NO_PATH
;

400 i‡(*(
	gdj
->
	g‚
+11)) ;

401 
	gdú
 = 
F©Fs
->
buf
;

402 i‡(!(
	gdú
[
DIR_Aâr
] & 
	gAM_DIR
)) {

403 
	gªs
 = 
FR_NO_PATH
;

406 
	gdj
->
	gs˛u°
 =

407 #i‡
_FS_FAT32


408 ((
DWORD
)
LD_WORD
(
dú
+
DIR_F°ClusHI
) << 16) |

410 
LD_WORD
(
dú
+
DIR_F°ClusLO
);

414  
	gªs
;

425 
__©åibuã__
((
£˘i⁄
(".SD_Code"))Ë
BYTE
 
check_fs
 (

426 
BYTE
 *
buf
,

427 
DWORD
 
£˘


429 i‡(
disk_ªadp
(
buf
, 
£˘
, 510, 2))

431 i‡(
LD_WORD
(
buf
) != 0xAA55)

434 i‡(!
disk_ªadp
(
buf
, 
£˘
, 
BS_FûSysTy≥
, 2Ë&& 
LD_WORD
(buf) == 0x4146)

436 #i‡
_FS_FAT32


437 i‡(!
disk_ªadp
(
buf
, 
£˘
, 
BS_FûSysTy≥32
, 2Ë&& 
LD_WORD
(buf) == 0x4146)

458 
__©åibuã__
((
£˘i⁄
(".SD_Code"))Ë
FRESULT
 
pf_mou¡
 (

459 
FATFS
 *
fs


461 
BYTE
 
	gfmt
, 
	gbuf
[36];

462 
DWORD
 
	gb£˘
, 
	gfsize
, 
	gt£˘
, 
	gm˛°
;

465 
	gF©Fs
 = 0;

466 i‡(!
	gfs
Ë 
	gFR_OK
;

468 i‡(
disk_öôülize
(Ë& 
	gSTA_NOINIT
)

469  
	gFR_NOT_READY
;

472 
	gb£˘
 = 0;

473 
	gfmt
 = 
check_fs
(
buf
, 
b£˘
);

474 i‡(
	gfmt
 == 1) {

476 i‡(
disk_ªadp
(
buf
, 
b£˘
, 
MBR_TabÀ
, 16)) {

477 
fmt
 = 3;

479 i‡(
	gbuf
[4]) {

480 
	gb£˘
 = 
LD_DWORD
(&
buf
[8]);

481 
	gfmt
 = 
check_fs
(
buf
, 
b£˘
);

485 i‡(
	gfmt
 =3Ë 
FR_DISK_ERR
;

486 i‡(
	gfmt
Ë 
	gFR_NO_FILESYSTEM
;

489 i‡(
disk_ªadp
(
buf
, 
b£˘
, 13, (buf))Ë 
	gFR_DISK_ERR
;

491 
	gfsize
 = 
LD_WORD
(
buf
+
BPB_FATSz16
-13);

492 i‡(!
	gfsize
Ëfsizê
LD_DWORD
(
buf
+
BPB_FATSz32
-13);

494 
	gfsize
 *
buf
[
BPB_NumFATs
-13];

495 
	gfs
->
	gÁtba£
 = 
b£˘
 + 
LD_WORD
(
buf
+
BPB_RsvdSecC¡
-13);

496 
	gfs
->
	gcsize
 = 
buf
[
BPB_SecPîClus
-13];

497 
	gfs
->
	gn_roŸdú
 = 
LD_WORD
(
buf
+
BPB_RoŸE¡C¡
-13);

498 
	gt£˘
 = 
LD_WORD
(
buf
+
BPB_TŸSec16
-13);

499 i‡(!
	gt£˘
Ët£˘ = 
LD_DWORD
(
buf
+
BPB_TŸSec32
-13);

500 
	gm˛°
 = (
t£˘


501 - 
LD_WORD
(
buf
+
BPB_RsvdSecC¡
-13Ë- 
fsize
 - 
fs
->
n_roŸdú
 / 16

502 Ë/ 
fs
->
csize
 + 2;

503 
	gfs
->
	gmax_˛u°
 = (
CLUST
)
m˛°
;

505 
	gfmt
 = 
FS_FAT12
;

506 i‡(
	gm˛°
 >0xFF7Ë
fmt
 = 
FS_FAT16
;

507 i‡(
	gm˛°
 >= 0xFFF7)

508 #i‡
_FS_FAT32


509 
fmt
 = 
FS_FAT32
;

511  
	gFR_NO_FILESYSTEM
;

514 
	gfs
->
	gfs_ty≥
 = 
fmt
;

515 #i‡
_FS_FAT32


516 i‡(
	gfmt
 =
FS_FAT32
)

517 
fs
->
dúba£
 = 
LD_DWORD
(
buf
+(
BPB_RoŸClus
-13));

520 
	gfs
->
	gdúba£
 = 
fs
->
Átba£
 + 
fsize
;

521 
	gfs
->
	gd©aba£
 = 
fs
->
Átba£
 + 
fsize
 + fs->
n_roŸdú
 / 16;

523 
	gfs
->
	gÊag
 = 0;

524 
	gF©Fs
 = 
fs
;

526  
	gFR_OK
;

536 
FRESULT
 
pf_›í
 (

537 c⁄° *
∑th


539 
FRESULT
 
	gªs
;

540 
FATDIR
 
	gdj
;

541 
BYTE
 
	g•
[12], 
	gdú
[32];

542 
FATFS
 *
	gfs
 = 
F©Fs
;

545 i‡(!
	gfs
)

546  
	gFR_NOT_ENABLED
;

548 
	gfs
->
	gÊag
 = 0;

549 
	gfs
->
	gbuf
 = 
dú
;

550 
	gdj
.
	g‚
 = 
•
;

551 
	gªs
 = 
fﬁlow_∑th
(&
dj
, 
∑th
);

552 i‡(
	gªs
 !
FR_OK
Ë 
ªs
;

553 i‡(!
	gdú
[0] || (dú[
DIR_Aâr
] & 
	gAM_DIR
))

554  
	gFR_NO_FILE
;

556 
	gfs
->
	g‹g_˛u°
 =

557 #i‡
_FS_FAT32


558 ((
DWORD
)
LD_WORD
(
dú
+
DIR_F°ClusHI
) << 16) |

560 
LD_WORD
(
dú
+
DIR_F°ClusLO
);

561 
	gfs
->
	gfsize
 = 
LD_DWORD
(
dú
+
DIR_FûeSize
);

562 
	gfs
->
	gÂå
 = 0;

563 
	gfs
->
	gÊag
 = 
FA_OPENED
;

565  
	gFR_OK
;

574 #i‡
_USE_READ


576 
FRESULT
 
pf_ªad
 (

577 * 
buff
,

578 
WORD
 
bå
,

579 
WORD
* 
br


581 
DRESULT
 
	gdr
;

582 
CLUST
 
	g˛°
;

583 
DWORD
 
	g£˘
, 
	gªmaö
;

584 
BYTE
 *
	grbuff
 = (BYTE *)
buff
;

585 
WORD
 
	gr˙t
;

586 
FATFS
 *
	gfs
 = 
F©Fs
;

589 *
	gbr
 = 0;

590 i‡(!
	gfs
Ë 
	gFR_NOT_ENABLED
;

591 i‡(!(
	gfs
->
	gÊag
 & 
	gFA_OPENED
))

592  
	gFR_NOT_OPENED
;

594 
	gªmaö
 = 
fs
->
fsize
 - fs->
Âå
;

595 i‡(
	gbå
 > 
	gªmaö
Ëbå = (
WORD
)
ªmaö
;

597 
	gbå
) {

598 i‡((
	gfs
->
	gÂå
 % 512) == 0) {

599 i‡((
fs
->
Âå
 / 512 % fs->
csize
) == 0) {

600 
˛°
 = (
fs
->
Âå
 == 0) ?

601 
fs
->
‹g_˛u°
 : 
gë_Át
(fs->
cuº_˛u°
);

602 i‡(
	g˛°
 <1Ë
‰_ab‹t
;

603 
	gfs
->
	gcuº_˛u°
 = 
˛°
;

604 
	gfs
->
	gc£˘
 = 0;

606 
	g£˘
 = 
˛u°2£˘
(
fs
->
cuº_˛u°
);

607 i‡(!
	g£˘
Ë
	g‰_ab‹t
;

608 
	gfs
->
	gd£˘
 = 
£˘
 + 
fs
->
c£˘
++;

610 
	gr˙t
 = 512 - ((
WORD
)
fs
->
Âå
 % 512);

611 i‡(
	gr˙t
 > 
	gbå
Ër˙à
bå
;

612 
	gdr
 = 
disk_ªadp
(!
buff
 ? 0 : 
rbuff
, 
fs
->
d£˘
, (
WORD
)(fs->
Âå
 % 512), 
r˙t
);

613 i‡(
	gdr
Ë
	g‰_ab‹t
;

614 
	gfs
->
	gÂå
 +
r˙t
;

615 
	grbuff
 +
r˙t
;

616 
	gbå
 -
r˙t
;

617 *
	gbr
 +
r˙t
;

620  
	gFR_OK
;

622 
	g‰_ab‹t
:

623 
fs
->
Êag
 = 0;

624  
	gFR_DISK_ERR
;

633 #i‡
_USE_WRITE


635 
FRESULT
 
pf_wrôe
 (

636 c⁄° * 
buff
,

637 
WORD
 
btw
,

638 
WORD
* 
bw


640 
CLUST
 
	g˛°
;

641 
DWORD
 
	g£˘
, 
	gªmaö
;

642 c⁄° 
BYTE
 *
	gp
 = (c⁄° BYTE *)
buff
;

643 
WORD
 
	gw˙t
;

644 
FATFS
 *
	gfs
 = 
F©Fs
;

647 *
	gbw
 = 0;

648 i‡(!
	gfs
Ë 
	gFR_NOT_ENABLED
;

649 i‡(!(
	gfs
->
	gÊag
 & 
	gFA_OPENED
))

650  
	gFR_NOT_OPENED
;

652 i‡(!
	gbtw
) {

653 i‡((
	gfs
->
	gÊag
 & 
	gFA__WIP
Ë&& 
disk_wrôï
(0, 0)Ë
	gfw_ab‹t
;

654 
	gfs
->
	gÊag
 &~
FA__WIP
;

655  
	gFR_OK
;

657 i‡(!(
	gfs
->
	gÊag
 & 
	gFA__WIP
))

658 
	gfs
->
	gÂå
 &= 0xFFFFFE00;

660 
	gªmaö
 = 
fs
->
fsize
 - fs->
Âå
;

661 i‡(
	gbtw
 > 
	gªmaö
Ëbtw = (
WORD
)
ªmaö
;

663 
	gbtw
) {

664 i‡(((
	gWORD
)
	gfs
->
	gÂå
 % 512) == 0) {

665 i‡((
fs
->
Âå
 / 512 % fs->
csize
) == 0) {

666 
˛°
 = (
fs
->
Âå
 == 0) ?

667 
fs
->
‹g_˛u°
 : 
gë_Át
(fs->
cuº_˛u°
);

668 i‡(
	g˛°
 <1Ë
fw_ab‹t
;

669 
	gfs
->
	gcuº_˛u°
 = 
˛°
;

670 
	gfs
->
	gc£˘
 = 0;

672 
	g£˘
 = 
˛u°2£˘
(
fs
->
cuº_˛u°
);

673 i‡(!
	g£˘
Ë
	gfw_ab‹t
;

674 
	gfs
->
	gd£˘
 = 
£˘
 + 
fs
->
c£˘
++;

675 i‡(
disk_wrôï
(0, 
fs
->
d£˘
)Ë
	gfw_ab‹t
;

676 
	gfs
->
	gÊag
 |
FA__WIP
;

678 
	gw˙t
 = 512 - ((
WORD
)
fs
->
Âå
 % 512);

679 i‡(
	gw˙t
 > 
	gbtw
Ëw˙à
btw
;

680 i‡(
disk_wrôï
(
p
, 
w˙t
)Ë
	gfw_ab‹t
;

681 
	gfs
->
	gÂå
 +
w˙t
;

682 
	gp
 +
w˙t
;

683 
	gbtw
 -
w˙t
;

684 *
	gbw
 +
w˙t
;

685 i‡(((
	gWORD
)
	gfs
->
	gÂå
 % 512) == 0) {

686 i‡(
disk_wrôï
(0, 0)Ë
fw_ab‹t
;

687 
	gfs
->
	gÊag
 &~
FA__WIP
;

691  
	gFR_OK
;

693 
	gfw_ab‹t
:

694 
fs
->
Êag
 = 0;

695  
	gFR_DISK_ERR
;

704 #i‡
_USE_LSEEK


706 
FRESULT
 
pf_l£ek
 (

707 
DWORD
 
ofs


709 
CLUST
 
	g˛°
;

710 
DWORD
 
	gbcs
, 
	g£˘
, 
	giÂå
;

711 
FATFS
 *
	gfs
 = 
F©Fs
;

714 i‡(!
	gfs
Ë 
	gFR_NOT_ENABLED
;

715 i‡(!(
	gfs
->
	gÊag
 & 
	gFA_OPENED
))

716  
	gFR_NOT_OPENED
;

718 i‡(
	gofs
 > 
	gfs
->
	gfsize
Ëof†
fs
->
fsize
;

719 
	giÂå
 = 
fs
->
Âå
;

720 
	gfs
->
	gÂå
 = 0;

721 i‡(
	gofs
 > 0) {

722 
	gbcs
 = (
DWORD
)
fs
->
csize
 * 512;

723 i‡(
	giÂå
 > 0 &&

724 (
	gofs
 - 1Ë/ 
	gbcs
 >(
iÂå
 - 1Ë/ 
bcs
) {

725 
fs
->
Âå
 = (
iÂå
 - 1Ë& ~(
bcs
 - 1);

726 
	gofs
 -
fs
->
Âå
;

727 
	g˛°
 = 
fs
->
cuº_˛u°
;

729 
	g˛°
 = 
fs
->
‹g_˛u°
;

730 
	gfs
->
	gcuº_˛u°
 = 
˛°
;

732 
	gofs
 > 
	gbcs
) {

733 
	g˛°
 = 
gë_Át
(
˛°
);

734 i‡(
	g˛°
 <1 || 
˛°
 >
fs
->
max_˛u°
Ë
„_ab‹t
;

735 
	gfs
->
	gcuº_˛u°
 = 
˛°
;

736 
	gfs
->
	gÂå
 +
bcs
;

737 
	gofs
 -
bcs
;

739 
	gfs
->
	gÂå
 +
ofs
;

740 
	g£˘
 = 
˛u°2£˘
(
˛°
);

741 i‡(!
	g£˘
Ë
	g„_ab‹t
;

742 
	gfs
->
	gc£˘
 = (
BYTE
)(
ofs
 / 512);

743 i‡(
	gofs
 % 512)

744 
	gfs
->
	gd£˘
 = 
£˘
 + 
fs
->
c£˘
++;

747  
	gFR_OK
;

749 
	g„_ab‹t
:

750 
fs
->
Êag
 = 0;

751  
	gFR_DISK_ERR
;

760 #i‡
_USE_DIR


762 
FRESULT
 
pf_›ídú
 (

763 
FATDIR
 *
dj
,

764 c⁄° *
∑th


766 
FRESULT
 
	gªs
;

767 
BYTE
 
	g•
[12], 
	gdú
[32];

768 
FATFS
 *
	gfs
 = 
F©Fs
;

771 i‡(!
	gfs
) {

772 
	gªs
 = 
FR_NOT_ENABLED
;

774 
	gfs
->
	gbuf
 = 
dú
;

775 
	gdj
->
	g‚
 = 
•
;

776 
	gªs
 = 
fﬁlow_∑th
(
dj
, 
∑th
);

777 i‡(
	gªs
 =
FR_OK
) {

778 i‡(
dú
[0]) {

779 i‡(
dú
[
DIR_Aâr
] & 
AM_DIR
) {

780 
dj
->
s˛u°
 =

781 #i‡
_FS_FAT32


782 ((
DWORD
)
LD_WORD
(
dú
+
DIR_F°ClusHI
) << 16) |

784 
LD_WORD
(
dú
+
DIR_F°ClusLO
);

786 
	gªs
 = 
FR_NO_PATH
;

789 i‡(
	gªs
 =
FR_OK
)

790 
ªs
 = 
dú_ªwöd
(
dj
);

792 i‡(
	gªs
 =
FR_NO_FILE
Ë
ªs
 = 
FR_NO_PATH
;

795  
	gªs
;

805 
FRESULT
 
pf_ªaddú
 (

806 
FATDIR
 *
dj
,

807 
FILINFO
 *
‚o


809 
FRESULT
 
	gªs
;

810 
BYTE
 
	g•
[12], 
	gdú
[32];

811 
FATFS
 *
	gfs
 = 
F©Fs
;

814 i‡(!
	gfs
) {

815 
	gªs
 = 
FR_NOT_ENABLED
;

817 
	gfs
->
	gbuf
 = 
dú
;

818 
	gdj
->
	g‚
 = 
•
;

819 i‡(!
	g‚o
) {

820 
	gªs
 = 
dú_ªwöd
(
dj
);

822 
	gªs
 = 
dú_ªad
(
dj
);

823 i‡(
	gªs
 =
FR_NO_FILE
) {

824 
dj
->
£˘
 = 0;

825 
	gªs
 = 
FR_OK
;

827 i‡(
	gªs
 =
FR_OK
) {

828 
gë_fûeöfo
(
dj
, 
‚o
);

829 
	gªs
 = 
dú_√xt
(
dj
);

830 i‡(
	gªs
 =
FR_NO_FILE
) {

831 
dj
->
£˘
 = 0;

832 
	gªs
 = 
FR_OK
;

838  
	gªs
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\libpff\pff.h

17 
	~"öãgî.h
"

26 #i‚de‡
_FATFS


27 
	#_FATFS


	)

29 
«me•a˚
 
	gPFFS
 {

32 
	#_USE_READ
 1

	)

34 
	#_USE_DIR
 1

	)

36 
	#_USE_LSEEK
 1

	)

38 
	#_USE_WRITE
 1

	)

40 
	#_FS_FAT32
 1

	)

43 
	#_CODE_PAGE
 1

	)

51 
	#_WORD_ACCESS
 0

52 

	)

67 #i‡
_FS_FAT32


68 
	#CLUST
 
DWORD


	)

70 
	#CLUST
 
WORD


	)

76 
	s_FATFS_
 {

77 
BYTE
 
	gfs_ty≥
;

78 
BYTE
 
	gcsize
;

79 
BYTE
 
	gÊag
;

80 
BYTE
 
	gc£˘
;

81 
WORD
 
	gn_roŸdú
;

82 
BYTE
* 
	gbuf
;

83 
CLUST
 
	gmax_˛u°
;

84 
DWORD
 
	gÁtba£
;

85 
DWORD
 
	gdúba£
;

86 
DWORD
 
	gd©aba£
;

87 
DWORD
 
	gÂå
;

88 
DWORD
 
	gfsize
;

89 
CLUST
 
	g‹g_˛u°
;

90 
CLUST
 
	gcuº_˛u°
;

91 
DWORD
 
	gd£˘
;

92 } 
	tFATFS
;

98 
	s_DIR_
 {

99 
WORD
 
	gödex
;

100 
BYTE
* 
	g‚
;

101 
CLUST
 
	gs˛u°
;

102 
CLUST
 
	g˛u°
;

103 
DWORD
 
	g£˘
;

104 } 
	tFATDIR
;

110 
	s_FILINFO_
 {

111 
DWORD
 
	gfsize
;

112 
WORD
 
	gfd©e
;

113 
WORD
 
	g·ime
;

114 
BYTE
 
	gÁârib
;

115 
	g‚ame
[13];

116 } 
	tFILINFO
;

123 
	gFR_OK
 = 0,

124 
	gFR_DISK_ERR
,

125 
	gFR_NOT_READY
,

126 
	gFR_NO_FILE
,

127 
	gFR_NO_PATH
,

128 
	gFR_NOT_OPENED
,

129 
	gFR_NOT_ENABLED
,

130 
	gFR_NO_FILESYSTEM


131 } 
	tFRESULT
;

138 
FRESULT
 
pf_mou¡
 (
FATFS
*);

139 
FRESULT
 
pf_›í
 (const *);

140 
FRESULT
 
pf_ªad
 (*, 
WORD
, WORD*);

141 
FRESULT
 
pf_wrôe
 (c⁄° *, 
WORD
, WORD*);

142 
FRESULT
 
pf_l£ek
 (
DWORD
);

143 
FRESULT
 
pf_›ídú
 (
FATDIR
*, const *);

144 
FRESULT
 
pf_ªaddú
 (
FATDIR
*, 
FILINFO
*);

153 
	#FA_OPENED
 0x01

	)

154 
	#FA_WPRT
 0x02

	)

155 
	#FA__WIP
 0x40

	)

160 
	#FS_FAT12
 1

	)

161 
	#FS_FAT16
 2

	)

162 
	#FS_FAT32
 3

	)

167 
	#AM_RDO
 0x01

	)

168 
	#AM_HID
 0x02

	)

169 
	#AM_SYS
 0x04

	)

170 
	#AM_VOL
 0x08

	)

171 
	#AM_LFN
 0x0F

	)

172 
	#AM_DIR
 0x10

	)

173 
	#AM_ARC
 0x20

	)

174 
	#AM_MASK
 0x3F

	)

181 
	#BS_jmpBoŸ
 0

	)

182 
	#BS_OEMName
 3

	)

183 
	#BPB_BytsPîSec
 11

	)

184 
	#BPB_SecPîClus
 13

	)

185 
	#BPB_RsvdSecC¡
 14

	)

186 
	#BPB_NumFATs
 16

	)

187 
	#BPB_RoŸE¡C¡
 17

	)

188 
	#BPB_TŸSec16
 19

	)

189 
	#BPB_Medü
 21

	)

190 
	#BPB_FATSz16
 22

	)

191 
	#BPB_SecPîTrk
 24

	)

192 
	#BPB_NumHóds
 26

	)

193 
	#BPB_HiddSec
 28

	)

194 
	#BPB_TŸSec32
 32

	)

195 
	#BS_55AA
 510

	)

197 
	#BS_DrvNum
 36

	)

198 
	#BS_BoŸSig
 38

	)

199 
	#BS_VﬁID
 39

	)

200 
	#BS_VﬁLab
 43

	)

201 
	#BS_FûSysTy≥
 54

	)

203 
	#BPB_FATSz32
 36

	)

204 
	#BPB_ExtFœgs
 40

	)

205 
	#BPB_FSVî
 42

	)

206 
	#BPB_RoŸClus
 44

	)

207 
	#BPB_FSInfo
 48

	)

208 
	#BPB_BkBoŸSec
 50

	)

209 
	#BS_DrvNum32
 64

	)

210 
	#BS_BoŸSig32
 66

	)

211 
	#BS_VﬁID32
 67

	)

212 
	#BS_VﬁLab32
 71

	)

213 
	#BS_FûSysTy≥32
 82

	)

215 
	#MBR_TabÀ
 446

	)

217 
	#DIR_Name
 0

	)

218 
	#DIR_Aâr
 11

	)

219 
	#DIR_NTªs
 12

	)

220 
	#DIR_CπTime
 14

	)

221 
	#DIR_CπD©e
 16

	)

222 
	#DIR_F°ClusHI
 20

	)

223 
	#DIR_WπTime
 22

	)

224 
	#DIR_WπD©e
 24

	)

225 
	#DIR_F°ClusLO
 26

	)

226 
	#DIR_FûeSize
 28

	)

233 #i‡
_WORD_ACCESS
 == 1

234 
	#LD_WORD
(
±r
Ë(
WORD
)(*(WORD*)(
BYTE
*)’å))

	)

235 
	#LD_DWORD
(
±r
Ë(
DWORD
)(*(DWORD*)(
BYTE
*)’å))

	)

236 
	#ST_WORD
(
±r
,
vÆ
Ë*(
WORD
*)(
BYTE
*)’å)=(WORD)(vÆ)

	)

237 
	#ST_DWORD
(
±r
,
vÆ
Ë*(
DWORD
*)(
BYTE
*)’å)=(DWORD)(vÆ)

	)

239 
	#LD_WORD
(
±r
Ë(
WORD
)(((WORD)*(
BYTE
*)(’å)+1)<<8)|(WORD)*(BYTE*)’å))

	)

240 
	#LD_DWORD
(
±r
Ë(
DWORD
)(((DWORD)*(
BYTE
*)(’å)+3)<<24)|((DWORD)*(BYTE*)(’å)+2)<<16)|((
WORD
)*(BYTE*)(’å)+1)<<8)|*(BYTE*)’å))

	)

241 
	#ST_WORD
(
±r
,
vÆ
Ë*(
BYTE
*)’å)=(BYTE)(vÆ); *(BYTE*)(’å)+1)=(BYTE)((
WORD
)(vÆ)>>8)

	)

242 
	#ST_DWORD
(
±r
,
vÆ
Ë*(
BYTE
*)’å)=(BYTE)(vÆ); *(BYTE*)(’å)+1)=(BYTE)((
WORD
)(vÆ)>>8); *(BYTE*)(’å)+2)=(BYTE)((
DWORD
)(vÆ)>>16); *(BYTE*)(’å)+3)=(BYTE)((DWORD)(vÆ)>>24)

	)

249 #i‡
_CODE_PAGE
 == 932

250 
	#_DF1S
 0x81

	)

251 
	#_DF1E
 0x9F

	)

252 
	#_DF2S
 0xE0

	)

253 
	#_DF2E
 0xFC

	)

254 
	#_DS1S
 0x40

	)

255 
	#_DS1E
 0x7E

	)

256 
	#_DS2S
 0x80

	)

257 
	#_DS2E
 0xFC

	)

259 #ñi‡
_CODE_PAGE
 == 936

260 
	#_DF1S
 0x81

	)

261 
	#_DF1E
 0xFE

	)

262 
	#_DS1S
 0x40

	)

263 
	#_DS1E
 0x7E

	)

264 
	#_DS2S
 0x80

	)

265 
	#_DS2E
 0xFE

	)

267 #ñi‡
_CODE_PAGE
 == 949

268 
	#_DF1S
 0x81

	)

269 
	#_DF1E
 0xFE

	)

270 
	#_DS1S
 0x41

	)

271 
	#_DS1E
 0x5A

	)

272 
	#_DS2S
 0x61

	)

273 
	#_DS2E
 0x7A

	)

274 
	#_DS3S
 0x81

	)

275 
	#_DS3E
 0xFE

	)

277 #ñi‡
_CODE_PAGE
 == 950

278 
	#_DF1S
 0x81

	)

279 
	#_DF1E
 0xFE

	)

280 
	#_DS1S
 0x40

	)

281 
	#_DS1E
 0x7E

	)

282 
	#_DS2S
 0xA1

	)

283 
	#_DS2E
 0xFE

	)

285 #ñi‡
_CODE_PAGE
 == 437

286 
	#_DF1S
 0

	)

287 
	#_EXCVT
 {0x80,0x9A,0x90,0x41,0x8E,0x41,0x8F,0x80,0x45,0x45,0x45,0x49,0x49,0x49,0x8E,0x8F,0x90,0x92,0x92,0x4F,0x99,0x4F,0x55,0x55,0x59,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \

290 0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}

	)

292 #ñi‡
_CODE_PAGE
 == 720

293 
	#_DF1S
 0

	)

294 
	#_EXCVT
 {0x80,0x81,0x45,0x41,0x84,0x41,0x86,0x43,0x45,0x45,0x45,0x49,0x49,0x8D,0x8E,0x8F,0x90,0x92,0x92,0x93,0x94,0x95,0x49,0x49,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \

297 0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}

	)

299 #ñi‡
_CODE_PAGE
 == 737

300 
	#_DF1S
 0

	)

301 
	#_EXCVT
 {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x92,0x92,0x93,0x94,0x95,0x96,0x97,0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87, \

304 0x97,0xEA,0xEB,0xEC,0xE4,0xED,0xEE,0xE7,0xE8,0xF1,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}

	)

306 #ñi‡
_CODE_PAGE
 == 775

307 
	#_DF1S
 0

	)

308 
	#_EXCVT
 {0x80,0x9A,0x91,0xA0,0x8E,0x95,0x8F,0x80,0xAD,0xED,0x8A,0x8A,0xA1,0x8D,0x8E,0x8F,0x90,0x92,0x92,0xE2,0x99,0x95,0x96,0x97,0x97,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \

311 0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE3,0xE8,0xE8,0xEA,0xEA,0xEE,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}

	)

313 #ñi‡
_CODE_PAGE
 == 850

314 
	#_DF1S
 0

	)

315 
	#_EXCVT
 {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0xDE,0x8E,0x8F,0x90,0x92,0x92,0xE2,0x99,0xE3,0xEA,0xEB,0x59,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \

318 0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE7,0xE9,0xEA,0xEB,0xED,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}

	)

320 #ñi‡
_CODE_PAGE
 == 852

321 
	#_DF1S
 0

	)

322 
	#_EXCVT
 {0x80,0x9A,0x90,0xB6,0x8E,0xDE,0x8F,0x80,0x9D,0xD3,0x8A,0x8A,0xD7,0x8D,0x8E,0x8F,0x90,0x91,0x91,0xE2,0x99,0x95,0x95,0x97,0x97,0x99,0x9A,0x9B,0x9B,0x9D,0x9E,0x9F, \

325 0xE0,0xE1,0xE2,0xE3,0xE3,0xD5,0xE6,0xE6,0xE8,0xE9,0xE8,0xEB,0xED,0xED,0xDD,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xEB,0xFC,0xFC,0xFE,0xFF}

	)

327 #ñi‡
_CODE_PAGE
 == 855

328 
	#_DF1S
 0

	)

329 
	#_EXCVT
 {0x81,0x81,0x83,0x83,0x85,0x85,0x87,0x87,0x89,0x89,0x8B,0x8B,0x8D,0x8D,0x8F,0x8F,0x91,0x91,0x93,0x93,0x95,0x95,0x97,0x97,0x99,0x99,0x9B,0x9B,0x9D,0x9D,0x9F,0x9F, \

332 0xE0,0xE2,0xE2,0xE4,0xE4,0xE6,0xE6,0xE8,0xE8,0xEA,0xEA,0xEC,0xEC,0xEE,0xEE,0xEF,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF8,0xFA,0xFA,0xFC,0xFC,0xFD,0xFE,0xFF}

	)

334 #ñi‡
_CODE_PAGE
 == 857

335 
	#_DF1S
 0

	)

336 
	#_EXCVT
 {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0x98,0x8E,0x8F,0x90,0x92,0x92,0xE2,0x99,0xE3,0xEA,0xEB,0x98,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9E, \

339 0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xDE,0x59,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}

	)

341 #ñi‡
_CODE_PAGE
 == 858

342 
	#_DF1S
 0

	)

343 
	#_EXCVT
 {0x80,0x9A,0x90,0xB6,0x8E,0xB7,0x8F,0x80,0xD2,0xD3,0xD4,0xD8,0xD7,0xDE,0x8E,0x8F,0x90,0x92,0x92,0xE2,0x99,0xE3,0xEA,0xEB,0x59,0x99,0x9A,0x9D,0x9C,0x9D,0x9E,0x9F, \

346 0xE0,0xE1,0xE2,0xE3,0xE5,0xE5,0xE6,0xE7,0xE7,0xE9,0xEA,0xEB,0xED,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}

	)

348 #ñi‡
_CODE_PAGE
 == 862

349 
	#_DF1S
 0

	)

350 
	#_EXCVT
 {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \

353 0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}

	)

355 #ñi‡
_CODE_PAGE
 == 866

356 
	#_DF1S
 0

	)

357 
	#_EXCVT
 {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \

360 0x90,0x91,0x92,0x93,0x9d,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F,0xF0,0xF0,0xF2,0xF2,0xF4,0xF4,0xF6,0xF6,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}

	)

362 #ñi‡
_CODE_PAGE
 == 874

363 
	#_DF1S
 0

	)

364 
	#_EXCVT
 {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \

367 0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}

	)

369 #ñi‡
_CODE_PAGE
 == 1250

370 
	#_DF1S
 0

	)

371 
	#_EXCVT
 {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x8A,0x9B,0x8C,0x8D,0x8E,0x8F, \

374 0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xF7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xFF}

	)

376 #ñi‡
_CODE_PAGE
 == 1251

377 
	#_DF1S
 0

	)

378 
	#_EXCVT
 {0x80,0x81,0x82,0x82,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x80,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x8A,0x9B,0x8C,0x8D,0x8E,0x8F, \

381 0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xDF}

	)

383 #ñi‡
_CODE_PAGE
 == 1252

384 
	#_DF1S
 0

	)

385 
	#_EXCVT
 {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0xAd,0x9B,0x8C,0x9D,0xAE,0x9F, \

388 0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xF7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0x9F}

	)

390 #ñi‡
_CODE_PAGE
 == 1253

391 
	#_DF1S
 0

	)

392 
	#_EXCVT
 {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \

395 0xE0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xF2,0xD3,0xD4,0xD5,0xD6,0xD7,0xD8,0xD9,0xDA,0xFB,0xBC,0xFD,0xBF,0xFF}

	)

397 #ñi‡
_CODE_PAGE
 == 1254

398 
	#_DF1S
 0

	)

399 
	#_EXCVT
 {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x8A,0x9B,0x8C,0x9D,0x9E,0x9F, \

402 0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xF7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0x9F}

	)

404 #ñi‡
_CODE_PAGE
 == 1255

405 
	#_DF1S
 0

	)

406 
	#_EXCVT
 {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \

409 0xE0,0xE1,0xE2,0xE3,0xE4,0xE5,0xE6,0xE7,0xE8,0xE9,0xEA,0xEB,0xEC,0xED,0xEE,0xEF,0xF0,0xF1,0xF2,0xF3,0xF4,0xF5,0xF6,0xF7,0xF8,0xF9,0xFA,0xFB,0xFC,0xFD,0xFE,0xFF}

	)

411 #ñi‡
_CODE_PAGE
 == 1256

412 
	#_DF1S
 0

	)

413 
	#_EXCVT
 {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x8C,0x9D,0x9E,0x9F, \

416 0x41,0xE1,0x41,0xE3,0xE4,0xE5,0xE6,0x43,0x45,0x45,0x45,0x45,0xEC,0xED,0x49,0x49,0xF0,0xF1,0xF2,0xF3,0x4F,0xF5,0xF6,0xF7,0xF8,0x55,0xFA,0x55,0x55,0xFD,0xFE,0xFF}

	)

418 #ñi‡
_CODE_PAGE
 == 1257

419 
	#_DF1S
 0

	)

420 
	#_EXCVT
 {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0x9C,0x9D,0x9E,0x9F, \

423 0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xCC,0xCD,0xCE,0xCF,0xD0,0xD1,0xD2,0xD3,0xD4,0xD5,0xD6,0xF7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xDE,0xFF}

	)

425 #ñi‡
_CODE_PAGE
 == 1258

426 
	#_DF1S
 0

	)

427 
	#_EXCVT
 {0x80,0x81,0x82,0x83,0x84,0x85,0x86,0x87,0x88,0x89,0x8A,0x8B,0x8C,0x8D,0x8E,0x8F,0x90,0x91,0x92,0x93,0x94,0x95,0x96,0x97,0x98,0x99,0x9A,0x9B,0xAC,0x9D,0x9E,0x9F, \

430 0xC0,0xC1,0xC2,0xC3,0xC4,0xC5,0xC6,0xC7,0xC8,0xC9,0xCA,0xCB,0xEC,0xCD,0xCE,0xCF,0xD0,0xD1,0xF2,0xD3,0xD4,0xD5,0xD6,0xF7,0xD8,0xD9,0xDA,0xDB,0xDC,0xDD,0xFE,0x9F}

	)

432 #ñi‡
_CODE_PAGE
 == 1

433 
	#_DF1S
 0

	)

436 #îr‹ 
Unknown
 
code
 
∑ge


444 
	#IsUµî
(
c
Ë(((c)>='A')&&((c)<='Z'))

	)

445 
	#IsLowî
(
c
Ë(((c)>='a')&&((c)<='z'))

	)

447 #i‡
_DF1S


449 #ifde‡
_DF2S


450 
	#IsDBCS1
(
c
Ë(((
BYTE
)(cË>
_DF1S
 && (BYTE)(cË<
_DF1E
Ë|| ((BYTE)(cË>
_DF2S
 && (BYTE)(cË<
_DF2E
))

	)

452 
	#IsDBCS1
(
c
Ë((
BYTE
)(cË>
_DF1S
 && (BYTE)(cË<
_DF1E
)

	)

455 #ifde‡
_DS3S


456 
	#IsDBCS2
(
c
Ë(((
BYTE
)(cË>
_DS1S
 && (BYTE)(cË<
_DS1E
Ë|| ((BYTE)(cË>
_DS2S
 && (BYTE)(cË<
_DS2E
Ë|| ((BYTE)(cË>
_DS3S
 && (BYTE)(cË<
_DS3E
))

	)

458 
	#IsDBCS2
(
c
Ë(((
BYTE
)(cË>
_DS1S
 && (BYTE)(cË<
_DS1E
Ë|| ((BYTE)(cË>
_DS2S
 && (BYTE)(cË<
_DS2E
))

	)

463 
	#IsDBCS1
(
c
Ë0

	)

464 
	#IsDBCS2
(
c
Ë0

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\AnalogIn.h

16 #i‚de‡
MBED_ANALOGIN_H


17 
	#MBED_ANALOGIN_H


	)

19 
	~"∂©f‹m.h
"

21 #i‡
DEVICE_ANALOGIN


23 
	~"™Æogö_≠i.h
"

25 
«me•a˚
 
	gmbed
 {

46 ˛as†
	cA«logIn
 {

48 
	gpublic
:

55 
A«logIn
(
PöName
 
pö
) {

56 
™Æogö_öô
(&
_adc
, 
pö
);

63 
ªad
() {

64  
™Æogö_ªad
(&
_adc
);

72 
ªad_u16
() {

73  
™Æogö_ªad_u16
(&
_adc
);

76 #ifde‡
MBED_OPERATORS


90 
›î©‹
 () {

91  
ªad
();

95 
	g¥Ÿe˘ed
:

96 
™Æogö_t
 
_adc
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\AnalogOut.h

16 #i‚de‡
MBED_ANALOGOUT_H


17 
	#MBED_ANALOGOUT_H


	)

19 
	~"∂©f‹m.h
"

21 #i‡
DEVICE_ANALOGOUT


23 
	~"™Æogout_≠i.h
"

25 
«me•a˚
 
	gmbed
 {

47 ˛as†
	cA«logOut
 {

49 
	gpublic
:

55 
A«logOut
(
PöName
 
pö
) {

56 
™Æogout_öô
(&
_dac
, 
pö
);

66 
wrôe
(
vÆue
) {

67 
™Æogout_wrôe
(&
_dac
, 
vÆue
);

75 
wrôe_u16
(
vÆue
) {

76 
™Æogout_wrôe_u16
(&
_dac
, 
vÆue
);

89 
ªad
() {

90  
™Æogout_ªad
(&
_dac
);

93 #ifde‡
MBED_OPERATORS


96 
	gA«logOut
& 
	g›î©‹
(
≥r˚¡
) {

97 
wrôe
(
≥r˚¡
);

98  *
	gthis
;

101 
	gA«logOut
& 
	g›î©‹
(
A«logOut
& 
rhs
) {

102 
wrôe
(
rhs
.
ªad
());

103  *
	gthis
;

108 
›î©‹
 () {

109  
ªad
();

113 
	g¥Ÿe˘ed
:

114 
dac_t
 
_dac
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\BusIn.h

16 #i‚de‡
MBED_BUSIN_H


17 
	#MBED_BUSIN_H


	)

19 
	~"∂©f‹m.h
"

20 
	~"DigôÆIn.h
"

22 
«me•a˚
 
	gmbed
 {

26 ˛as†
	cBusIn
 {

28 
	gpublic
:

39 
BusIn
(
PöName
 
p0
, PöNamê
p1
 = 
NC
, PöNamê
p2
 = NC, PöNamê
p3
 = NC,

40 
PöName
 
p4
 = 
NC
, PöNamê
p5
 = NC, PöNamê
p6
 = NC, PöNamê
p7
 = NC,

41 
PöName
 
p8
 = 
NC
, PöNamê
p9
 = NC, PöNamê
p10
 = NC, PöNamê
p11
 = NC,

42 
PöName
 
p12
 = 
NC
, PöNamê
p13
 = NC, PöNamê
p14
 = NC, PöNamê
p15
 = NC);

44 
BusIn
(
PöName
 
pös
[16]);

46 
	gvútuÆ
 ~
BusIn
();

53 
ªad
();

59 
mode
(
PöMode
 
puŒ
);

67 
mask
() {

68  
	g_nc_mask
;

71 #ifde‡
MBED_OPERATORS


74 
›î©‹
 ();

78 
	gDigôÆIn
 & 
	g›î©‹
[] (
	gödex
);

81 
	g¥Ÿe˘ed
:

82 
DigôÆIn
* 
_pö
[16];

88 
	g_nc_mask
;

91 
	g¥iv©e
:

92 
BusIn
(const BusIn&);

93 
	gBusIn
 & 
	g›î©‹
 = (c⁄° 
BusIn
&);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\BusInOut.h

16 #i‚de‡
MBED_BUSINOUT_H


17 
	#MBED_BUSINOUT_H


	)

19 
	~"DigôÆInOut.h
"

21 
«me•a˚
 
	gmbed
 {

25 ˛as†
	cBusInOut
 {

27 
	gpublic
:

37 
BusInOut
(
PöName
 
p0
, PöNamê
p1
 = 
NC
, PöNamê
p2
 = NC, PöNamê
p3
 = NC,

38 
PöName
 
p4
 = 
NC
, PöNamê
p5
 = NC, PöNamê
p6
 = NC, PöNamê
p7
 = NC,

39 
PöName
 
p8
 = 
NC
, PöNamê
p9
 = NC, PöNamê
p10
 = NC, PöNamê
p11
 = NC,

40 
PöName
 
p12
 = 
NC
, PöNamê
p13
 = NC, PöNamê
p14
 = NC, PöNamê
p15
 = NC);

42 
BusInOut
(
PöName
 
pös
[16]);

44 
	gvútuÆ
 ~
BusInOut
();

52 
wrôe
(
vÆue
);

59 
ªad
();

63 
ouçut
();

67 
öput
();

73 
mode
(
PöMode
 
puŒ
);

81 
mask
() {

82  
	g_nc_mask
;

85 #ifde‡
MBED_OPERATORS


88 
	gBusInOut
& 
	g›î©‹
(
v
);

89 
	gBusInOut
& 
	g›î©‹
(
BusInOut
& 
rhs
);

93 
	gDigôÆInOut
& 
	g›î©‹
[] (
	gödex
);

97 
›î©‹
 ();

100 
	g¥Ÿe˘ed
:

101 
DigôÆInOut
* 
_pö
[16];

107 
	g_nc_mask
;

110 
	g¥iv©e
:

111 
BusInOut
(const BusInOut&);

112 
	gBusInOut
 & 
	g›î©‹
 = (c⁄° 
BusInOut
&);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\BusOut.h

16 #i‚de‡
MBED_BUSOUT_H


17 
	#MBED_BUSOUT_H


	)

19 
	~"DigôÆOut.h
"

21 
«me•a˚
 
	gmbed
 {

25 ˛as†
	cBusOut
 {

27 
	gpublic
:

37 
BusOut
(
PöName
 
p0
, PöNamê
p1
 = 
NC
, PöNamê
p2
 = NC, PöNamê
p3
 = NC,

38 
PöName
 
p4
 = 
NC
, PöNamê
p5
 = NC, PöNamê
p6
 = NC, PöNamê
p7
 = NC,

39 
PöName
 
p8
 = 
NC
, PöNamê
p9
 = NC, PöNamê
p10
 = NC, PöNamê
p11
 = NC,

40 
PöName
 
p12
 = 
NC
, PöNamê
p13
 = NC, PöNamê
p14
 = NC, PöNamê
p15
 = NC);

42 
BusOut
(
PöName
 
pös
[16]);

44 
	gvútuÆ
 ~
BusOut
();

50 
wrôe
(
vÆue
);

57 
ªad
();

65 
mask
() {

66  
	g_nc_mask
;

69 #ifde‡
MBED_OPERATORS


72 
	gBusOut
& 
	g›î©‹
(
v
);

73 
	gBusOut
& 
	g›î©‹
(
BusOut
& 
rhs
);

77 
	gDigôÆOut
& 
	g›î©‹
[] (
	gödex
);

81 
›î©‹
 ();

84 
	g¥Ÿe˘ed
:

85 
DigôÆOut
* 
_pö
[16];

91 
	g_nc_mask
;

94 
	g¥iv©e
:

95 
BusOut
(const BusOut&);

96 
	gBusOut
 & 
	g›î©‹
 = (c⁄° 
BusOut
&);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\CAN.h

16 #i‚de‡
MBED_CAN_H


17 
	#MBED_CAN_H


	)

19 
	~"∂©f‹m.h
"

21 #i‡
DEVICE_CAN


23 
	~"ˇn_≠i.h
"

24 
	~"ˇn_hñ≥r.h
"

25 
	~"Fun˘i⁄Poöãr.h
"

27 
«me•a˚
 
	gmbed
 {

31 ˛as†
	cCANMesßge
 : 
public
 
CAN_Mesßge
 {

33 
public
:

36 
CANMesßge
(Ë: 
CAN_Mesßge
() {

37 
Àn
 = 8;

38 
	gty≥
 = 
CAND©a
;

39 
	gf‹m©
 = 
CANSènd¨d
;

40 
	gid
 = 0;

41 
mem£t
(
d©a
, 0, 8);

46 
CANMesßge
(
_id
, c⁄° *
_d©a
, 
_Àn
 = 8, 
CANTy≥
 
_ty≥
 = 
CAND©a
, 
CANF‹m©
 
_f‹m©
 = 
CANSènd¨d
) {

47 
Àn
 = 
_Àn
 & 0xF;

48 
	gty≥
 = 
_ty≥
;

49 
	gf‹m©
 = 
_f‹m©
;

50 
	gid
 = 
_id
;

51 
mem˝y
(
d©a
, 
_d©a
, 
_Àn
);

56 
CANMesßge
(
_id
, 
CANF‹m©
 
_f‹m©
 = 
CANSènd¨d
) {

57 
Àn
 = 0;

58 
	gty≥
 = 
CANRemŸe
;

59 
	gf‹m©
 = 
_f‹m©
;

60 
	gid
 = 
_id
;

61 
mem£t
(
d©a
, 0, 8);

67 ˛as†
	cCAN
 {

69 
	gpublic
:

108 
CAN
(
PöName
 
rd
, PöNamê
td
);

109 
	gvútuÆ
 ~
CAN
();

119 
‰equícy
(
hz
);

129 
wrôe
(
CANMesßge
 
msg
);

140 
ªad
(
CANMesßge
 &
msg
, 
h™dÀ
 = 0);

146 
ª£t
();

152 
m⁄ô‹
(
boﬁ
 
sûít
);

154 
	eMode
 {

155 
	gRe£t
 = 0,

156 
	gN‹mÆ
,

157 
	gSûít
,

158 
	gLoˇlTe°
,

159 
	gGlobÆTe°
,

160 
	gSûítTe°


171 
mode
(
Mode
 mode);

184 
fûãr
(
id
, 
mask
, 
CANF‹m©
 
f‹m©
 = 
CANAny
, 
h™dÀ
 = 0);

188 
rdîr‹
();

192 
tdîr‹
();

194 
	eIrqTy≥
 {

195 
	gRxIrq
 = 0,

196 
	gTxIrq
,

197 
	gEwIrq
,

198 
	gDoIrq
,

199 
	gWuIrq
,

200 
	gEpIrq
,

201 
	gAlIrq
,

202 
	gBeIrq
,

203 
	gIdIrq


212 
©èch
((*
Âå
)(), 
IrqTy≥
 
ty≥
=
RxIrq
);

221 
	gãm∂©e
<
ty≥«me
 
	gT
>

222 
©èch
(
T
* 
çå
, (T::*
m±r
)(), 
IrqTy≥
 
ty≥
=
RxIrq
) {

223 if((
m±r
 !
NULL
Ë&& (
çå
 != NULL)) {

224 
_úq
[
ty≥
].
©èch
(
çå
, 
m±r
);

225 
ˇn_úq_£t
(&
_ˇn
, (
C™IrqTy≥
)
ty≥
, 1);

228 
ˇn_úq_£t
(&
_ˇn
, (
C™IrqTy≥
)
ty≥
, 0);

232 
_úq_h™dÀr
(
uöt32_t
 
id
, 
C™IrqTy≥
 
ty≥
);

234 
	g¥Ÿe˘ed
:

235 
ˇn_t
 
_ˇn
;

236 
Fun˘i⁄Poöãr
 
	g_úq
[9];

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\CThunk.h

22 #i‚de‡
__CTHUNK_H__


23 
	#__CTHUNK_H__


	)

25 
	#CTHUNK_ADDRESS
 1

	)

27 #i‡
deföed
(
__CORTEX_M3
Ë|| deföed(
__CORTEX_M4
Ë|| deföed(
__thumb2__
)

28 
	#CTHUNK_VARIABLES
 vﬁ©ûê
uöt32_t
 
code
[1]

	)

39 
	#CTHUNK_ASSIGMENT
 
m_thunk
.
code
[0] = 0x8007E89F

	)

41 #ñi‡
deföed
(
__CORTEX_M0PLUS
Ë|| deföed(
__CORTEX_M0
)

51 
	#CTHUNK_VARIABLES
 vﬁ©ûê
uöt32_t
 
code
[3]

	)

52 
	#CTHUNK_ASSIGMENT
 do { \

53 
m_thunk
.
code
[0] = 0x2404B51F; \

54 
m_thunk
.
code
[1] = 0xCC0F447C; \

55 
m_thunk
.
code
[2] = 0xBD1F4798; \

56 } 0)

	)

63 (*
	tCThunkE¡ry
)();

65 
ãm∂©e
<
˛ass
 
T
>

66 ˛as†
	cCThunk


68 
public
:

69 (
	tT
::*
	tCCÆlbackSim∂e
)();

70 (
	tT
::*
	tCCÆlback
)(* 
	tc⁄ãxt
);

72 
ölöe
 
	$CThunk
(
T
 *
ö°™˚
)

74 
	`öô
(
ö°™˚
, 
NULL
, NULL);

77 
ölöe
 
	$CThunk
(
T
 *
ö°™˚
, 
CCÆlback
 
ˇŒback
)

79 
	`öô
(
ö°™˚
, 
ˇŒback
, 
NULL
);

80 
	}
}

82 ~
	$CThunk
() {

84 
	}
}

86 
ölöe
 
	$CThunk
(
T
 *
ö°™˚
, 
CCÆlbackSim∂e
 
ˇŒback
)

88 
	`öô
(
ö°™˚
, (
CCÆlback
)
ˇŒback
, 
NULL
);

89 
	}
}

91 
ölöe
 
	$CThunk
(
T
 &
ö°™˚
, 
CCÆlback
 
ˇŒback
)

93 
	`öô
(
ö°™˚
, 
ˇŒback
, 
NULL
);

94 
	}
}

96 
ölöe
 
	$CThunk
(
T
 &
ö°™˚
, 
CCÆlbackSim∂e
 
ˇŒback
)

98 
	`öô
(
ö°™˚
, (
CCÆlback
)
ˇŒback
, 
NULL
);

99 
	}
}

101 
ölöe
 
	$CThunk
(
T
 &
ö°™˚
, 
CCÆlback
 
ˇŒback
, * 
c⁄ãxt
)

103 
	`öô
(
ö°™˚
, 
ˇŒback
, 
c⁄ãxt
);

104 
	}
}

106 
ölöe
 
	$ˇŒback
(
CCÆlback
 
ˇŒback
)

108 
m_ˇŒback
 = 
ˇŒback
;

109 
	}
}

111 
ölöe
 
	$ˇŒback
(
CCÆlbackSim∂e
 
ˇŒback
)

113 
m_ˇŒback
 = (
CCÆlback
)
ˇŒback
;

114 
	}
}

116 
ölöe
 
	$c⁄ãxt
(* 
c⁄ãxt
)

118 
m_thunk
.
c⁄ãxt
 = (
uöt32_t
)context;

119 
	}
}

121 
ölöe
 
	$c⁄ãxt
(
uöt32_t
 
c⁄ãxt
)

123 
m_thunk
.
c⁄ãxt
 = context;

124 
	}
}

126 
ölöe
 
uöt32_t
 
	$íåy
()

128  (((
uöt32_t
)&
m_thunk
)|
CTHUNK_ADDRESS
);

129 
	}
}

132 
ölöe
 
›î©‹
 
	$CThunkE¡ry
()

134  (
CThunkE¡ry
)
	`íåy
();

135 
	}
}

138 
ölöe
 
›î©‹
 
	$uöt32_t
()

140  
	`íåy
();

141 
	}
}

144 
ölöe
 
	$ˇŒ
()

146 (((
CThunkE¡ry
)(
	`íåy
()))());

147 
	}
}

149 
	g¥iv©e
:

150 
T
* 
m_ö°™˚
;

151 vﬁ©ûê
CCÆlback
 
	gm_ˇŒback
;

155 #i‡
	$deföed
 (
__ICCARM__
)

156 
__∑cked
 struct

158 
CTHUNK_VARIABLES
;

159 vﬁ©ûê
uöt32_t
 
ö°™˚
;

160 vﬁ©ûê
uöt32_t
 
c⁄ãxt
;

161 vﬁ©ûê
uöt32_t
 
ˇŒback
;

162 vﬁ©ûê
uöt32_t
 
åampﬁöe
;

163 
	}
} 
	tCThunkTømpﬁöe
;

167 
	gCTHUNK_VARIABLES
;

168 vﬁ©ûê
uöt32_t
 
	gö°™˚
;

169 vﬁ©ûê
uöt32_t
 
	gc⁄ãxt
;

170 vﬁ©ûê
uöt32_t
 
	gˇŒback
;

171 vﬁ©ûê
uöt32_t
 
	gåampﬁöe
;

172 } 
	t__©åibuã__
((
	t__∑cked__
)Ë
	tCThunkTømpﬁöe
;

175 
	$åampﬁöe
(
T
* 
ö°™˚
, * 
c⁄ãxt
, 
CCÆlback
* 
ˇŒback
)

177 if(
ö°™˚
 && *
ˇŒback
) {

178 (
°©ic_ˇ°
<
T
*>(
ö°™˚
)->**
ˇŒback
)(
c⁄ãxt
);

180 
	}
}

182 vﬁ©ûê
CThunkTømpﬁöe
 
	gm_thunk
;

184 
ölöe
 
	$öô
(
T
 *
ö°™˚
, 
CCÆlback
 
ˇŒback
, * 
c⁄ãxt
)

188 
m_ˇŒback
 = 
ˇŒback
;

191 
CTHUNK_ASSIGMENT
;

192 
m_thunk
.
c⁄ãxt
 = (
uöt32_t
)context;

193 
m_thunk
.
ö°™˚
 = (
uöt32_t
)instance;

194 
m_thunk
.
ˇŒback
 = (
uöt32_t
)&
m_ˇŒback
;

195 
m_thunk
.
åampﬁöe
 = (
uöt32_t
)&trampoline;

197 
	`__ISB
();

198 
	`__DSB
();

199 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\CallChain.h

16 #i‚de‡
MBED_CALLCHAIN_H


17 
	#MBED_CALLCHAIN_H


	)

19 
	~"Fun˘i⁄Poöãr.h
"

20 
	~<°rög.h
>

22 
«me•a˚
 
	gmbed
 {

60 
Fun˘i⁄Poöãr
* 
	tpFun˘i⁄Poöãr_t
;

62 ˛as†
	cCÆlChaö
 {

63 
	gpublic
:

68 
CÆlChaö
(
size
 = 4);

69 
	gvútuÆ
 ~
CÆlChaö
();

78 
pFun˘i⁄Poöãr_t
 
add
((*
fun˘i⁄
)());

88 
	gãm∂©e
<
ty≥«me
 
	gT
>

89 
pFun˘i⁄Poöãr_t
 
add
(
T
 *
çå
, (T::*
m±r
)()) {

90  
comm⁄_add
(
√w
 
Fun˘i⁄Poöãr
(
çå
, 
m±r
));

100 
pFun˘i⁄Poöãr_t
 
add_‰⁄t
((*
fun˘i⁄
)());

110 
	gãm∂©e
<
ty≥«me
 
	gT
>

111 
pFun˘i⁄Poöãr_t
 
add_‰⁄t
(
T
 *
çå
, (T::*
m±r
)()) {

112  
comm⁄_add_‰⁄t
(
√w
 
Fun˘i⁄Poöãr
(
çå
, 
m±r
));

117 
size
() const;

126 
pFun˘i⁄Poöãr_t
 
gë
(
i
) const;

135 
föd
(
pFun˘i⁄Poöãr_t
 
f
) const;

139 
˛ór
();

148 
boﬁ
 
ªmove
(
pFun˘i⁄Poöãr_t
 
f
);

152 
ˇŒ
();

154 #ifde‡
MBED_OPERATORS


155 
›î©‹
 ()() {

156 
ˇŒ
();

158 
pFun˘i⁄Poöãr_t
 
	g›î©‹
 [](
	gi
) const {

159  
gë
(
i
);

163 
	g¥iv©e
:

164 
_check_size
();

165 
pFun˘i⁄Poöãr_t
 
comm⁄_add
’Fun˘i⁄Poöãr_à
pf
);

166 
pFun˘i⁄Poöãr_t
 
comm⁄_add_‰⁄t
’Fun˘i⁄Poöãr_à
pf
);

168 
pFun˘i⁄Poöãr_t
* 
	g_chaö
;

169 
	g_size
;

170 
	g_ñemíts
;

173 
	g¥iv©e
:

174 
CÆlChaö
(const CallChain&);

175 
	gCÆlChaö
 & 
	g›î©‹
 = (c⁄° 
CÆlChaö
&);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\CircularBuffer.h

16 #i‚de‡
MBED_CIRCULARBUFFER_H


17 
	#MBED_CIRCULARBUFFER_H


	)

19 
«me•a˚
 
	gmbed
 {

23 
	gãm∂©e
<
ty≥«me
 
	gT
, 
uöt32_t
 
	gBuf„rSize
,Åy≥«mê
	gCou¡îTy≥
 = uint32_t>

24 ˛as†
	cCúcuœrBuf„r
 {

25 
public
:

26 
CúcuœrBuf„r
(Ë: 
_hód
(0), 
_èû
(0), 
_fuŒ
(
Ál£
) {

29 ~
CúcuœrBuf„r
() {

37 
push
(c⁄° 
T
& 
d©a
) {

38 i‡(
fuŒ
()) {

39 
_èû
++;

40 
	g_èû
 %
Buf„rSize
;

42 
	g_poﬁ
[
_hód
++] = 
d©a
;

43 
	g_hód
 %
Buf„rSize
;

44 i‡(
	g_hód
 =
_èû
) {

45 
_fuŒ
 = 
åue
;

54 
boﬁ
 
p›
(
T
& 
d©a
) {

55 i‡(!
em±y
()) {

56 
	gd©a
 = 
_poﬁ
[
_èû
++];

57 
	g_èû
 %
Buf„rSize
;

58 
	g_fuŒ
 = 
Ál£
;

59  
	gåue
;

61  
	gÁl£
;

68 
boﬁ
 
em±y
() {

69  (
	g_hód
 =
_èû
Ë&& !
_fuŒ
;

76 
boﬁ
 
fuŒ
() {

77  
	g_fuŒ
;

83 
ª£t
() {

84 
	g_hód
 = 0;

85 
	g_èû
 = 0;

86 
	g_fuŒ
 = 
Ál£
;

89 
	g¥iv©e
:

90 
T
 
_poﬁ
[
Buf„rSize
];

91 vﬁ©ûê
Cou¡îTy≥
 
	g_hód
;

92 vﬁ©ûê
Cou¡îTy≥
 
	g_èû
;

93 vﬁ©ûê
boﬁ
 
	g_fuŒ
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\DigitalIn.h

16 #i‚de‡
MBED_DIGITALIN_H


17 
	#MBED_DIGITALIN_H


	)

19 
	~"∂©f‹m.h
"

21 
	~"gpio_≠i.h
"

23 
«me•a˚
 
	gmbed
 {

46 ˛as†
	cDigôÆIn
 {

48 
	gpublic
:

53 
DigôÆIn
(
PöName
 
pö
Ë: 
gpio
() {

54 
gpio_öô_ö
(&
gpio
, 
pö
);

62 
DigôÆIn
(
PöName
 
pö
, 
PöMode
 
mode
Ë: 
gpio
() {

63 
gpio_öô_ö_ex
(&
gpio
, 
pö
, 
mode
);

71 
ªad
() {

72  
gpio_ªad
(&
gpio
);

79 
mode
(
PöMode
 
puŒ
) {

80 
gpio_mode
(&
gpio
, 
puŒ
);

89 
is_c⁄√˘ed
() {

90  
gpio_is_c⁄√˘ed
(&
gpio
);

93 #ifde‡
MBED_OPERATORS


96 
›î©‹
 () {

97  
ªad
();

101 
	g¥Ÿe˘ed
:

102 
gpio_t
 
gpio
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\DigitalInOut.h

16 #i‚de‡
MBED_DIGITALINOUT_H


17 
	#MBED_DIGITALINOUT_H


	)

19 
	~"∂©f‹m.h
"

21 
	~"gpio_≠i.h
"

23 
«me•a˚
 
	gmbed
 {

27 ˛as†
	cDigôÆInOut
 {

29 
	gpublic
:

34 
DigôÆInOut
(
PöName
 
pö
Ë: 
gpio
() {

35 
gpio_öô_ö
(&
gpio
, 
pö
);

45 
DigôÆInOut
(
PöName
 
pö
, 
PöDúe˘i⁄
 
dúe˘i⁄
, 
PöMode
 
mode
, 
vÆue
Ë: 
gpio
() {

46 
gpio_öô_öout
(&
gpio
, 
pö
, 
dúe˘i⁄
, 
mode
, 
vÆue
);

54 
wrôe
(
vÆue
) {

55 
gpio_wrôe
(&
gpio
, 
vÆue
);

64 
ªad
() {

65  
gpio_ªad
(&
gpio
);

70 
ouçut
() {

71 
gpio_dú
(&
gpio
, 
PIN_OUTPUT
);

76 
öput
() {

77 
gpio_dú
(&
gpio
, 
PIN_INPUT
);

84 
mode
(
PöMode
 
puŒ
) {

85 
gpio_mode
(&
gpio
, 
puŒ
);

94 
is_c⁄√˘ed
() {

95  
gpio_is_c⁄√˘ed
(&
gpio
);

98 #ifde‡
MBED_OPERATORS


101 
	gDigôÆInOut
& 
	g›î©‹
(
vÆue
) {

102 
wrôe
(
vÆue
);

103  *
	gthis
;

106 
	gDigôÆInOut
& 
	g›î©‹
(
DigôÆInOut
& 
rhs
) {

107 
wrôe
(
rhs
.
ªad
());

108  *
	gthis
;

113 
›î©‹
 () {

114  
ªad
();

118 
	g¥Ÿe˘ed
:

119 
gpio_t
 
gpio
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\DigitalOut.h

16 #i‚de‡
MBED_DIGITALOUT_H


17 
	#MBED_DIGITALOUT_H


	)

19 
	~"∂©f‹m.h
"

20 
	~"gpio_≠i.h
"

22 
«me•a˚
 
	gmbed
 {

41 ˛as†
	cDigôÆOut
 {

43 
	gpublic
:

48 
DigôÆOut
(
PöName
 
pö
Ë: 
gpio
() {

49 
gpio_öô_out
(&
gpio
, 
pö
);

57 
DigôÆOut
(
PöName
 
pö
, 
vÆue
Ë: 
gpio
() {

58 
gpio_öô_out_ex
(&
gpio
, 
pö
, 
vÆue
);

66 
wrôe
(
vÆue
) {

67 
gpio_wrôe
(&
gpio
, 
vÆue
);

76 
ªad
() {

77  
gpio_ªad
(&
gpio
);

86 
is_c⁄√˘ed
() {

87  
gpio_is_c⁄√˘ed
(&
gpio
);

90 #ifde‡
MBED_OPERATORS


93 
	gDigôÆOut
& 
	g›î©‹
(
vÆue
) {

94 
wrôe
(
vÆue
);

95  *
	gthis
;

98 
	gDigôÆOut
& 
	g›î©‹
(
DigôÆOut
& 
rhs
) {

99 
wrôe
(
rhs
.
ªad
());

100  *
	gthis
;

105 
›î©‹
 () {

106  
ªad
();

110 
	g¥Ÿe˘ed
:

111 
gpio_t
 
gpio
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\DirHandle.h

16 #i‚de‡
MBED_DIRHANDLE_H


17 
	#MBED_DIRHANDLE_H


	)

19 #i‡
deföed
(
__ARMCC_VERSION
Ë|| deföed(
__ICCARM__
)

20 
	#NAME_MAX
 255

	)

21 
	tmode_t
;

24 
	~<sys/sy¶imôs.h
>

27 
	~"FûeH™dÀ.h
"

29 
	sdúít
 {

30 
	md_«me
[
NAME_MAX
+1];

33 
«me•a˚
 
	gmbed
 {

48 ˛as†
	cDúH™dÀ
 {

50 
	gpublic
:

57 
vútuÆ
 
˛o£dú
()=0;

67 
vútuÆ
 
dúít
 *
ªaddú
()=0;

71 
vútuÆ
 
ªwöddú
()=0;

79 
vútuÆ
 
off_t
 
ãŒdú
() {  -1; }

85 
vútuÆ
 
£ekdú
(
off_t
 
loˇti⁄
) { }

87 
	gvútuÆ
 ~
DúH™dÀ
() {}

92 
	gmbed
::
	tDúH™dÀ
 
	tDIR
;

95 
DIR
 *
›ídú
(const *);

96 
dúít
 *
ªaddú
(
DIR
 *);

97 
˛o£dú
(
DIR
*);

98 
ªwöddú
(
DIR
*);

99 
ãŒdú
(
DIR
*);

100 
£ekdú
(
DIR
*, );

101 
mkdú
(c⁄° *
«me
, 
mode_t
 
n
);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\Ethernet.h

16 #i‚de‡
MBED_ETHERNET_H


17 
	#MBED_ETHERNET_H


	)

19 
	~"∂©f‹m.h
"

21 #i‡
DEVICE_ETHERNET


23 
«me•a˚
 
	gmbed
 {

53 ˛as†
	cEthî√t
 {

55 
	gpublic
:

59 
Ethî√t
();

63 
	gvútuÆ
 ~
Ethî√t
();

65 
	eMode
 {

66 
	gAutoNegŸüã
,

67 
	gHÆfDu∂ex10
,

68 
	gFuŒDu∂ex10
,

69 
	gHÆfDu∂ex100
,

70 
	gFuŒDu∂ex100


83 
wrôe
(c⁄° *
d©a
, 
size
);

94 
£nd
();

106 
ª˚ive
();

120 
ªad
(*
d©a
, 
size
);

126 
addªss
(*
mac
);

151 
lök
();

163 
£t_lök
(
Mode
 
mode
);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\FileBase.h

16 #i‚de‡
MBED_FILEBASE_H


17 
	#MBED_FILEBASE_H


	)

19 
	tFILEHANDLE
;

21 
	~<°dio.h
>

23 #i‡
deföed
(
__ARMCC_VERSION
Ë|| deföed(
__ICCARM__
)

24 
	#O_RDONLY
 0

	)

25 
	#O_WRONLY
 1

	)

26 
	#O_RDWR
 2

	)

27 
	#O_CREAT
 0x0200

	)

28 
	#O_TRUNC
 0x0400

	)

29 
	#O_APPEND
 0x0008

	)

31 
	#NAME_MAX
 255

	)

33 
	tmode_t
;

34 
	tssize_t
;

35 
	toff_t
;

38 
	~<sys/f˙é.h
>

39 
	~<sys/ty≥s.h
>

40 
	~<sys/sy¶imôs.h
>

43 
	~"∂©f‹m.h
"

45 
«me•a˚
 
	gmbed
 {

48 
	gFûeP©hTy≥
,

49 
	gFûeSy°emP©hTy≥


50 } 
	tP©hTy≥
;

52 ˛as†
	cFûeBa£
 {

53 
	gpublic
:

54 
FûeBa£
(c⁄° *
«me
, 
P©hTy≥
 
t
);

56 
	gvútuÆ
 ~
FûeBa£
();

58 c⁄° * 
gëName
();

59 
P©hTy≥
 
gëP©hTy≥
();

61 
FûeBa£
 *
lookup
(c⁄° *
«me
, 
Àn
);

63 
FûeBa£
 *
gë
(
n
);

65 
	g¥Ÿe˘ed
:

66 
FûeBa£
 *
_hód
;

68 
FûeBa£
 *
	g_√xt
;

69 c⁄° *
	g_«me
;

70 
P©hTy≥
 
	g_∑th_ty≥
;

73 
	g¥iv©e
:

74 
FûeBa£
(const FileBase&);

75 
	gFûeBa£
 & 
	g›î©‹
 = (c⁄° 
FûeBa£
&);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\FileHandle.h

16 #i‚de‡
MBED_FILEHANDLE_H


17 
	#MBED_FILEHANDLE_H


	)

19 
	tFILEHANDLE
;

21 
	~<°dio.h
>

23 #i‡
deföed
(
__ARMCC_VERSION
Ë|| deföed(
__ICCARM__
)

24 
	tssize_t
;

25 
	toff_t
;

28 
	~<sys/ty≥s.h
>

31 
«me•a˚
 
	gmbed
 {

42 ˛as†
	cFûeH™dÀ
 {

44 
	gpublic
:

53 
vútuÆ
 
ssize_t
 
wrôe
(c⁄° * 
buf„r
, 
size_t
 
Àngth
) = 0;

60 
vútuÆ
 
˛o£
() = 0;

71 
vútuÆ
 
ssize_t
 
ªad
(* 
buf„r
, 
size_t
 
Àngth
) = 0;

80 
vútuÆ
 
ißây
() = 0;

92 
vútuÆ
 
off_t
 
l£ek
(off_à
off£t
, 
whí˚
) = 0;

101 
vútuÆ
 
fsync
() = 0;

103 
vútuÆ
 
off_t
 
Êí
() {

105 
off_t
 
	gpos
 = 
l£ek
(0, 
SEEK_CUR
);

106 if(
	gpos
 == -1)  -1;

108 
off_t
 
	gªs
 = 
l£ek
(0, 
SEEK_END
);

110 
l£ek
(
pos
, 
SEEK_SET
);

111  
	gªs
;

114 
	gvútuÆ
 ~
FûeH™dÀ
();

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\FileLike.h

16 #i‚de‡
MBED_FILELIKE_H


17 
	#MBED_FILELIKE_H


	)

19 
	~"FûeBa£.h
"

20 
	~"FûeH™dÀ.h
"

22 
«me•a˚
 
	gmbed
 {

29 
˛ass
 
	gFûeLike
 : 
public
 
FûeH™dÀ
,Öubli¯
	gFûeBa£
 {

31 
	gpublic
:

37 
FûeLike
(c⁄° *
«me
);

39 
	gvútuÆ
 ~
FûeLike
();

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\FilePath.h

16 #i‚de‡
MBED_FILEPATH_H


17 
	#MBED_FILEPATH_H


	)

19 
	~"∂©f‹m.h
"

21 
	~"FûeSy°emLike.h
"

22 
	~"FûeLike.h
"

24 
«me•a˚
 
	gmbed
 {

26 ˛as†
	cFûeP©h
 {

27 
	gpublic
:

28 
FûeP©h
(c⁄° * 
fûe_∑th
);

30 c⁄° * 
fûeName
();

32 
boﬁ
 
isFûeSy°em
();

33 
FûeSy°emLike
* 
fûeSy°em
();

35 
boﬁ
 
isFûe
();

36 
FûeLike
* 
fûe
();

37 
boﬁ
 
exi°s
();

39 
	g¥iv©e
:

40 c⁄° * 
fûe_«me
;

41 
FûeBa£
* 
	gfb
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\FileSystemLike.h

16 #i‚de‡
MBED_FILESYSTEMLIKE_H


17 
	#MBED_FILESYSTEMLIKE_H


	)

19 
	~"∂©f‹m.h
"

21 
	~"FûeBa£.h
"

22 
	~"FûeH™dÀ.h
"

23 
	~"DúH™dÀ.h
"

25 
«me•a˚
 
	gmbed
 {

33 ˛as†
	cFûeSy°emLike
 : 
public
 
FûeBa£
 {

35 
public
:

40 
FûeSy°emLike
(c⁄° *
«me
);

42 
	gvútuÆ
 ~
FûeSy°emLike
();

44 
DúH™dÀ
 *
›ídú
();

45 
‰õnd
 
˛ass
 
	gBa£DúH™dÀ
;

57 
vútuÆ
 
FûeH™dÀ
 *
›í
(c⁄° *
fûíame
, 
Êags
) = 0;

64 
vútuÆ
 
ªmove
(c⁄° *
fûíame
) {  -1; };

75 
vútuÆ
 
ª«me
(c⁄° *
ﬁd«me
, c⁄° *
√w«me
) {  -1; };

86 
vútuÆ
 
DúH™dÀ
 *
›ídú
(c⁄° *
«me
Ë{  
	gNULL
; };

97 
vútuÆ
 
mkdú
(c⁄° *
«me
, 
mode_t
 
mode
) {  -1; }

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\FunctionPointer.h

16 #i‚de‡
MBED_FUNCTIONPOINTER_H


17 
	#MBED_FUNCTIONPOINTER_H


	)

19 
	~<°rög.h
>

20 
	~<°döt.h
>

22 
«me•a˚
 
	gmbed
 {

28 
	gãm∂©e
 <
ty≥«me
 
	gR
,Åy≥«mê
	gA1
>

29 ˛as†
	cFun˘i⁄PoöãrArg1
{

30 
	gpublic
:

35 
Fun˘i⁄PoöãrArg1
(
R
 (*
fun˘i⁄
)(
A1
) = 0) {

36 
©èch
(
fun˘i⁄
);

44 
	gãm∂©e
<
ty≥«me
 
	gT
>

45 
Fun˘i⁄PoöãrArg1
(
T
 *
obje˘
, 
R
 (T::*
membî
)(
A1
)) {

46 
©èch
(
obje˘
, 
membî
);

53 
©èch
(
R
 (*
fun˘i⁄
)(
A1
)) {

54 
	g_p
.
	gfun˘i⁄
 = 
fun˘i⁄
;

55 
	g_membîˇŒî
 = 0;

63 
	gãm∂©e
<
ty≥«me
 
	gT
>

64 
©èch
(
T
 *
obje˘
, 
R
 (T::*
membî
)(
A1
)) {

65 
_p
.
obje˘
 = 
°©ic_ˇ°
<*>(object);

66 *
	gªöãΩªt_ˇ°
<
R
 (
T
::**)(
A1
)>(
_membî
Ë
membî
;

67 
	g_membîˇŒî
 = &
Fun˘i⁄PoöãrArg1
::
membîˇŒî
<
T
>;

72 
R
 
ˇŒ
(
A1
 
a
) {

73 i‡(
	g_membîˇŒî
 =0 && 
_p
.
fun˘i⁄
) {

74  
_p
.
fun˘i⁄
(
a
);

75 } i‡(
	g_membîˇŒî
 && 
	g_p
.
	gobje˘
) {

76  
_membîˇŒî
(
_p
.
obje˘
, 
_membî
, 
a
);

78  (
	gR
)0;

83 
R
(*
gë_fun˘i⁄
(
A1
))() {

84  
	g_membîˇŒî
 ? (
R
(*)(
	gA1
))0 : (R(*)(
A1
))
_p
.
fun˘i⁄
;

87 #ifde‡
MBED_OPERATORS


88 
R
 
›î©‹
 ()(
A1
 
	ga
) {

89  
ˇŒ
(
a
);

91 
›î©‹
 
boﬁ
() const {

92  (
	g_membîˇŒî
 !
NULL
 ? 
_p
.
obje˘
 : (*)_p.
fun˘i⁄
) != NULL;

95 
	g¥iv©e
:

96 
ãm∂©e
<
ty≥«me
 
T
>

97 
R
 
membîˇŒî
(*
obje˘
, 
uöçå_t
 *
membî
, 
A1
 
a
) {

98 
T
* 
	go
 = 
°©ic_ˇ°
<T*>(
obje˘
);

99 
R
 (
T
::**
m
)(
A1
Ë
ªöãΩªt_ˇ°
<R (T::**)(A1)>(
membî
);

100  (
	go
->**
	gm
)(
	ga
);

104 
R
 (*
fun˘i⁄
)(
	gA1
);

105 *
	gobje˘
;

106 } 
	g_p
;

107 
uöçå_t
 
	g_membî
[4];

108 
R
 (*
_membîˇŒî
)(*, 
	guöçå_t
*, 
	gA1
);

113 
	gãm∂©e
 <
ty≥«me
 
	gR
>

114 
˛ass
 
	gFun˘i⁄PoöãrArg1
<
	gR
, >{

115 
	gpublic
:

120 
Fun˘i⁄PoöãrArg1
(
R
 (*
fun˘i⁄
)() = 0) {

121 
©èch
(
fun˘i⁄
);

129 
	gãm∂©e
<
ty≥«me
 
	gT
>

130 
Fun˘i⁄PoöãrArg1
(
T
 *
obje˘
, 
R
 (T::*
membî
)()) {

131 
©èch
(
obje˘
, 
membî
);

138 
©èch
(
R
 (*
fun˘i⁄
)()) {

139 
	g_p
.
	gfun˘i⁄
 = 
fun˘i⁄
;

140 
	g_membîˇŒî
 = 0;

148 
	gãm∂©e
<
ty≥«me
 
	gT
>

149 
©èch
(
T
 *
obje˘
, 
R
 (T::*
membî
)()) {

150 
_p
.
obje˘
 = 
°©ic_ˇ°
<*>(object);

151 *
	gªöãΩªt_ˇ°
<
R
 (
T
::**)()>(
_membî
Ë
membî
;

152 
	g_membîˇŒî
 = &
Fun˘i⁄PoöãrArg1
::
membîˇŒî
<
T
>;

157 
R
 
ˇŒ
(){

158 i‡(
	g_membîˇŒî
 =0 && 
_p
.
fun˘i⁄
) {

159  
_p
.
fun˘i⁄
();

160 } i‡(
	g_membîˇŒî
 && 
	g_p
.
	gobje˘
) {

161  
_membîˇŒî
(
_p
.
obje˘
, 
_membî
);

163  (
	gR
)0;

168 
R
(*
gë_fun˘i⁄
())() {

169  
	g_membîˇŒî
 ? (
R
(*)())0 : (R(*)())
_p
.
fun˘i⁄
;

172 #ifde‡
MBED_OPERATORS


173 
R
 
›î©‹
 ()() {

174  
ˇŒ
();

176 
›î©‹
 
boﬁ
() const {

177  (
	g_membîˇŒî
 !
NULL
 ? 
_p
.
obje˘
 : (*)_p.
fun˘i⁄
) != NULL;

181 
	g¥iv©e
:

182 
ãm∂©e
<
ty≥«me
 
T
>

183 
R
 
membîˇŒî
(*
obje˘
, 
uöçå_t
 *
membî
) {

184 
T
* 
	go
 = 
°©ic_ˇ°
<T*>(
obje˘
);

185 
R
 (
T
::**
m
)(Ë
ªöãΩªt_ˇ°
<R (T::**)()>(
membî
);

186  (
	go
->**
	gm
)();

190 
R
 (*
fun˘i⁄
)();

191 *
	gobje˘
;

192 } 
	g_p
;

193 
uöçå_t
 
	g_membî
[4];

194 
R
 (*
_membîˇŒî
)(*, 
	guöçå_t
*);

197 
	gFun˘i⁄PoöãrArg1
<, > 
	tFun˘i⁄Poöãr
;

198 
	gFun˘i⁄PoöãrArg1
<, > 
	tevít_ˇŒback_t
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\I2C.h

16 #i‚de‡
MBED_I2C_H


17 
	#MBED_I2C_H


	)

19 
	~"∂©f‹m.h
"

21 #i‡
DEVICE_I2C


23 
	~"i2c_≠i.h
"

25 #i‡
DEVICE_I2C_ASYNCH


26 
	~"CThunk.h
"

27 
	~"dma_≠i.h
"

28 
	~"Fun˘i⁄Poöãr.h
"

31 
«me•a˚
 
	gmbed
 {

50 ˛as†
	cI2C
 {

52 
	gpublic
:

53 
	eRxSètus
 {

54 
NoD©a
,

55 
	gMa°îGíîÆCÆl
,

56 
	gMa°îWrôe
,

57 
	gMa°îRód


60 
	eAcknowÀdge
 {

61 
	gNoACK
 = 0,

62 
	gACK
 = 1

70 
I2C
(
PöName
 
sda
, PöNamê
s˛
);

76 
‰equícy
(
hz
);

92 
ªad
(
addªss
, *
d©a
, 
Àngth
, 
boﬁ
 
ª≥©ed
 = 
Ál£
);

101 
ªad
(
ack
);

117 
wrôe
(
addªss
, c⁄° *
d©a
, 
Àngth
, 
boﬁ
 
ª≥©ed
 = 
Ál£
);

127 
wrôe
(
d©a
);

132 
°¨t
();

136 
°›
();

138 #i‡
DEVICE_I2C_ASYNCH


152 
å™s„r
(
addªss
, c⁄° *
tx_buf„r
, 
tx_Àngth
, *
rx_buf„r
, 
rx_Àngth
, c⁄° 
evít_ˇŒback_t
& 
ˇŒback
, 
evít
 = 
I2C_EVENT_TRANSFER_COMPLETE
, 
boﬁ
 
ª≥©ed
 = 
Ál£
);

156 
ab‹t_å™s„r
();

157 
	g¥Ÿe˘ed
:

158 
úq_h™dÀr_asynch
();

159 
evít_ˇŒback_t
 
	g_ˇŒback
;

160 
	gCThunk
<
	gI2C
> 
	g_úq
;

161 
DMAUßge
 
	g_ußge
;

164 
	g¥Ÿe˘ed
:

165 
aquúe
();

167 
i2c_t
 
	g_i2c
;

168 
I2C
 *
	g_ow√r
;

169 
	g_hz
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\I2CSlave.h

16 #i‚de‡
MBED_I2C_SLAVE_H


17 
	#MBED_I2C_SLAVE_H


	)

19 
	~"∂©f‹m.h
"

21 #i‡
DEVICE_I2CSLAVE


23 
	~"i2c_≠i.h
"

25 
«me•a˚
 
	gmbed
 {

61 ˛as†
	cI2CSœve
 {

63 
	gpublic
:

64 
	eRxSètus
 {

65 
NoD©a
 = 0,

66 
	gRódAddªs£d
 = 1,

67 
	gWrôeGíîÆ
 = 2,

68 
	gWrôeAddªs£d
 = 3

76 
I2CSœve
(
PöName
 
sda
, PöNamê
s˛
);

82 
‰equícy
(
hz
);

93 
ª˚ive
();

104 
ªad
(*
d©a
, 
Àngth
);

111 
ªad
();

122 
wrôe
(c⁄° *
d©a
, 
Àngth
);

132 
wrôe
(
d©a
);

140 
addªss
(address);

144 
°›
();

146 
	g¥Ÿe˘ed
:

147 
i2c_t
 
_i2c
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\InterruptIn.h

16 #i‚de‡
MBED_INTERRUPTIN_H


17 
	#MBED_INTERRUPTIN_H


	)

19 
	~"∂©f‹m.h
"

21 #i‡
DEVICE_INTERRUPTIN


23 
	~"gpio_≠i.h
"

24 
	~"gpio_úq_≠i.h
"

25 
	~"Fun˘i⁄Poöãr.h
"

27 
«me•a˚
 
	gmbed
 {

53 ˛as†
	cI¡îru±In
 {

55 
	gpublic
:

62 
I¡îru±In
(
PöName
 
pö
);

63 
	gvútuÆ
 ~
I¡îru±In
();

65 
ªad
();

66 #ifde‡
MBED_OPERATORS


67 
›î©‹
 ();

75 
ri£
((*
Âå
)());

82 
	gãm∂©e
<
ty≥«me
 
	gT
>

83 
ri£
(
T
* 
çå
, (T::*
m±r
)()) {

84 
_ri£
.
©èch
(
çå
, 
m±r
);

85 
gpio_úq_£t
(&
gpio_úq
, 
IRQ_RISE
, 1);

92 
ÁŒ
((*
Âå
)());

99 
	gãm∂©e
<
ty≥«me
 
	gT
>

100 
ÁŒ
(
T
* 
çå
, (T::*
m±r
)()) {

101 
_ÁŒ
.
©èch
(
çå
, 
m±r
);

102 
gpio_úq_£t
(&
gpio_úq
, 
IRQ_FALL
, 1);

109 
mode
(
PöMode
 
puŒ
);

114 
íabÀ_úq
();

119 
dißbÀ_úq
();

121 
_úq_h™dÀr
(
uöt32_t
 
id
, 
gpio_úq_evít
 
evít
);

123 
	g¥Ÿe˘ed
:

124 
gpio_t
 
gpio
;

125 
gpio_úq_t
 
	ggpio_úq
;

127 
Fun˘i⁄Poöãr
 
	g_ri£
;

128 
Fun˘i⁄Poöãr
 
	g_ÁŒ
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\InterruptManager.h

1 #i‚de‡
MBED_INTERRUPTMANAGER_H


2 
	#MBED_INTERRUPTMANAGER_H


	)

4 
	~"cmsis.h
"

5 
	~"CÆlChaö.h
"

6 
	~<°rög.h
>

8 
«me•a˚
 
	gmbed
 {

36 ˛as†
	cI¡îru±M™agî
 {

37 
	gpublic
:

40 
I¡îru±M™agî
* 
gë
();

44 
de°roy
();

54 
pFun˘i⁄Poöãr_t
 
add_h™dÀr
((*
fun˘i⁄
)(), 
IRQn_Ty≥
 
úq
) {

55  
add_comm⁄
(
fun˘i⁄
, 
úq
);

66 
pFun˘i⁄Poöãr_t
 
add_h™dÀr_‰⁄t
((*
fun˘i⁄
)(), 
IRQn_Ty≥
 
úq
) {

67  
add_comm⁄
(
fun˘i⁄
, 
úq
, 
åue
);

79 
	gãm∂©e
<
ty≥«me
 
	gT
>

80 
pFun˘i⁄Poöãr_t
 
add_h™dÀr
(
T
* 
çå
, (T::*
m±r
)(), 
IRQn_Ty≥
 
úq
) {

81  
add_comm⁄
(
çå
, 
m±r
, 
úq
);

93 
	gãm∂©e
<
ty≥«me
 
	gT
>

94 
pFun˘i⁄Poöãr_t
 
add_h™dÀr_‰⁄t
(
T
* 
çå
, (T::*
m±r
)(), 
IRQn_Ty≥
 
úq
) {

95  
add_comm⁄
(
çå
, 
m±r
, 
úq
, 
åue
);

106 
boﬁ
 
ªmove_h™dÀr
(
pFun˘i⁄Poöãr_t
 
h™dÀr
, 
IRQn_Ty≥
 
úq
);

108 
	g¥iv©e
:

109 
I¡îru±M™agî
();

110 ~
I¡îru±M™agî
();

115 
I¡îru±M™agî
(const InterruptManager&);

116 
	gI¡îru±M™agî
& 
	g›î©‹
 =(c⁄° 
I¡îru±M™agî
&);

118 
	gãm∂©e
<
ty≥«me
 
	gT
>

119 
pFun˘i⁄Poöãr_t
 
add_comm⁄
(
T
 *
çå
, (T::*
m±r
)(), 
IRQn_Ty≥
 
úq
, 
boﬁ
 
‰⁄t
=
Ál£
) {

120 
úq_pos
 = 
gë_úq_ödex
(
úq
);

121 
boﬁ
 
	gch™ge
 = 
mu°_ª∂a˚_ve˘‹
(
úq
);

123 
pFun˘i⁄Poöãr_t
 
	gpf
 = 
‰⁄t
 ? 
_chaös
[
úq_pos
]->
add_‰⁄t
(
çå
, 
m±r
Ë: _chaös[úq_pos]->
add
(tptr, mptr);

124 i‡(
	gch™ge
)

125 
NVIC_SëVe˘‹
(
úq
, (
uöt32_t
)&
I¡îru±M™agî
::
°©ic_úq_hñ≥r
);

126  
	gpf
;

129 
pFun˘i⁄Poöãr_t
 
add_comm⁄
((*
fun˘i⁄
)(), 
IRQn_Ty≥
 
úq
, 
boﬁ
 
‰⁄t
=
Ál£
);

130 
boﬁ
 
mu°_ª∂a˚_ve˘‹
(
IRQn_Ty≥
 
úq
);

131 
gë_úq_ödex
(
IRQn_Ty≥
 
úq
);

132 
úq_hñ≥r
();

133 
add_hñ≥r
((*
fun˘i⁄
)(), 
IRQn_Ty≥
 
úq
, 
boﬁ
 
‰⁄t
=
Ál£
);

134 
°©ic_úq_hñ≥r
();

136 
CÆlChaö
* 
	g_chaös
[
NVIC_NUM_VECTORS
];

137 
I¡îru±M™agî
* 
	g_ö°™˚
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\LocalFileSystem.h

16 #i‚de‡
MBED_LOCALFILESYSTEM_H


17 
	#MBED_LOCALFILESYSTEM_H


	)

19 
	~"∂©f‹m.h
"

21 #i‡
DEVICE_LOCALFILESYSTEM


23 
	~"FûeSy°emLike.h
"

25 
«me•a˚
 
	gmbed
 {

27 
FILEHANDLE
 
loˇl_fûe_›í
(c⁄° * 
«me
, 
Êags
);

29 ˛as†
	cLoˇlFûeH™dÀ
 : 
public
 
FûeH™dÀ
 {

31 
public
:

32 
LoˇlFûeH™dÀ
(
FILEHANDLE
 
fh
);

34 
vútuÆ
 
˛o£
();

36 
vútuÆ
 
ssize_t
 
wrôe
(c⁄° *
buf„r
, 
size_t
 
Àngth
);

38 
vútuÆ
 
ssize_t
 
ªad
(*
buf„r
, 
size_t
 
Àngth
);

40 
vútuÆ
 
ißây
();

42 
vútuÆ
 
off_t
 
l£ek
(off_à
posôi⁄
, 
whí˚
);

44 
vútuÆ
 
fsync
();

46 
vútuÆ
 
off_t
 
Êí
();

48 
	g¥Ÿe˘ed
:

49 
FILEHANDLE
 
_fh
;

50 
	gpos
;

87 ˛as†
	cLoˇlFûeSy°em
 : 
public
 
FûeSy°emLike
 {

89 
public
:

90 
LoˇlFûeSy°em
(c⁄° * 
n
Ë: 
FûeSy°emLike
(n) {

94 
vútuÆ
 
FûeH™dÀ
 *
›í
(c⁄° * 
«me
, 
Êags
);

95 
vútuÆ
 
ªmove
(c⁄° *
fûíame
);

96 
vútuÆ
 
DúH™dÀ
 *
›ídú
(c⁄° *
«me
);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\LowPowerTicker.h

16 #i‚de‡
MBED_LOWPOWERTICKER_H


17 
	#MBED_LOWPOWERTICKER_H


	)

19 
	~"∂©f‹m.h
"

20 
	~"Tickî.h
"

22 #i‡
DEVICE_LOWPOWERTIMER


24 
	~"Õ_tickî_≠i.h
"

26 
«me•a˚
 
	gmbed
 {

30 ˛as†
	cLowPowîTickî
 : 
public
 
Tickî
 {

32 
public
:

33 
LowPowîTickî
(Ë: 
Tickî
(
gë_Õ_tickî_d©a
()) {

36 
vútuÆ
 ~
LowPowîTickî
() {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\LowPowerTimeout.h

16 #i‚de‡
MBED_LOWPOWERTIMEOUT_H


17 
	#MBED_LOWPOWERTIMEOUT_H


	)

19 
	~"∂©f‹m.h
"

21 #i‡
DEVICE_LOWPOWERTIMER


23 
	~"Õ_tickî_≠i.h
"

24 
	~"LowPowîTickî.h
"

26 
«me•a˚
 
	gmbed
 {

30 ˛as†
	cLowPowîTimeout
 : 
public
 
LowPowîTickî
 {

32 
¥iv©e
:

33 
vútuÆ
 
h™dÀr
() {

34 
_fun˘i⁄
.
ˇŒ
();

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\LowPowerTimer.h

16 #i‚de‡
MBED_LOWPOWERTIMER_H


17 
	#MBED_LOWPOWERTIMER_H


	)

19 
	~"∂©f‹m.h
"

20 
	~"Timî.h
"

22 #i‡
DEVICE_LOWPOWERTIMER


24 
	~"Õ_tickî_≠i.h
"

26 
«me•a˚
 
	gmbed
 {

30 ˛as†
	cLowPowîTimî
 : 
public
 
Timî
 {

32 
public
:

33 
LowPowîTimî
(Ë: 
Timî
(
gë_Õ_tickî_d©a
()) {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\PortIn.h

16 #i‚de‡
MBED_PORTIN_H


17 
	#MBED_PORTIN_H


	)

19 
	~"∂©f‹m.h
"

21 #i‡
DEVICE_PORTIN


23 
	~"p‹t_≠i.h
"

25 
«me•a˚
 
	gmbed
 {

50 ˛as†
	cP‹tIn
 {

51 
	gpublic
:

58 
P‹tIn
(
P‹tName
 
p‹t
, 
mask
 = 0xFFFFFFFF) {

59 
p‹t_öô
(&
_p‹t
, 
p‹t
, 
mask
, 
PIN_INPUT
);

67 
ªad
() {

68  
p‹t_ªad
(&
_p‹t
);

75 
mode
(
PöMode
 mode) {

76 
p‹t_mode
(&
_p‹t
, 
mode
);

81 
›î©‹
 () {

82  
ªad
();

85 
	g¥iv©e
:

86 
p‹t_t
 
_p‹t
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\PortInOut.h

16 #i‚de‡
MBED_PORTINOUT_H


17 
	#MBED_PORTINOUT_H


	)

19 
	~"∂©f‹m.h
"

21 #i‡
DEVICE_PORTINOUT


23 
	~"p‹t_≠i.h
"

25 
«me•a˚
 
	gmbed
 {

29 ˛as†
	cP‹tInOut
 {

30 
	gpublic
:

37 
P‹tInOut
(
P‹tName
 
p‹t
, 
mask
 = 0xFFFFFFFF) {

38 
p‹t_öô
(&
_p‹t
, 
p‹t
, 
mask
, 
PIN_INPUT
);

45 
wrôe
(
vÆue
) {

46 
p‹t_wrôe
(&
_p‹t
, 
vÆue
);

54 
ªad
() {

55  
p‹t_ªad
(&
_p‹t
);

60 
ouçut
() {

61 
p‹t_dú
(&
_p‹t
, 
PIN_OUTPUT
);

66 
öput
() {

67 
p‹t_dú
(&
_p‹t
, 
PIN_INPUT
);

74 
mode
(
PöMode
 mode) {

75 
p‹t_mode
(&
_p‹t
, 
mode
);

80 
	gP‹tInOut
& 
	g›î©‹
(
vÆue
) {

81 
wrôe
(
vÆue
);

82  *
	gthis
;

85 
	gP‹tInOut
& 
	g›î©‹
(
P‹tInOut
& 
rhs
) {

86 
wrôe
(
rhs
.
ªad
());

87  *
	gthis
;

92 
›î©‹
 () {

93  
ªad
();

96 
	g¥iv©e
:

97 
p‹t_t
 
_p‹t
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\PortOut.h

16 #i‚de‡
MBED_PORTOUT_H


17 
	#MBED_PORTOUT_H


	)

19 
	~"∂©f‹m.h
"

21 #i‡
DEVICE_PORTOUT


23 
	~"p‹t_≠i.h
"

25 
«me•a˚
 
	gmbed
 {

49 ˛as†
	cP‹tOut
 {

50 
	gpublic
:

57 
P‹tOut
(
P‹tName
 
p‹t
, 
mask
 = 0xFFFFFFFF) {

58 
p‹t_öô
(&
_p‹t
, 
p‹t
, 
mask
, 
PIN_OUTPUT
);

65 
wrôe
(
vÆue
) {

66 
p‹t_wrôe
(&
_p‹t
, 
vÆue
);

74 
ªad
() {

75  
p‹t_ªad
(&
_p‹t
);

80 
	gP‹tOut
& 
	g›î©‹
(
vÆue
) {

81 
wrôe
(
vÆue
);

82  *
	gthis
;

85 
	gP‹tOut
& 
	g›î©‹
(
P‹tOut
& 
rhs
) {

86 
wrôe
(
rhs
.
ªad
());

87  *
	gthis
;

92 
›î©‹
 () {

93  
ªad
();

96 
	g¥iv©e
:

97 
p‹t_t
 
_p‹t
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\PwmOut.h

16 #i‚de‡
MBED_PWMOUT_H


17 
	#MBED_PWMOUT_H


	)

19 
	~"∂©f‹m.h
"

21 #i‡
DEVICE_PWMOUT


22 
	~"pwmout_≠i.h
"

24 
«me•a˚
 
	gmbed
 {

53 ˛as†
	cPwmOut
 {

55 
	gpublic
:

61 
PwmOut
(
PöName
 
pö
) {

62 
pwmout_öô
(&
_pwm
, 
pö
);

72 
wrôe
(
vÆue
) {

73 
pwmout_wrôe
(&
_pwm
, 
vÆue
);

86 
ªad
() {

87  
pwmout_ªad
(&
_pwm
);

96 
≥riod
(
£c⁄ds
) {

97 
pwmout_≥riod
(&
_pwm
, 
£c⁄ds
);

102 
≥riod_ms
(
ms
) {

103 
pwmout_≥riod_ms
(&
_pwm
, 
ms
);

108 
≥riod_us
(
us
) {

109 
pwmout_≥riod_us
(&
_pwm
, 
us
);

114 
pul£width
(
£c⁄ds
) {

115 
pwmout_pul£width
(&
_pwm
, 
£c⁄ds
);

120 
pul£width_ms
(
ms
) {

121 
pwmout_pul£width_ms
(&
_pwm
, 
ms
);

126 
pul£width_us
(
us
) {

127 
pwmout_pul£width_us
(&
_pwm
, 
us
);

130 #ifde‡
MBED_OPERATORS


133 
	gPwmOut
& 
	g›î©‹
(
vÆue
) {

134 
wrôe
(
vÆue
);

135  *
	gthis
;

138 
	gPwmOut
& 
	g›î©‹
(
PwmOut
& 
rhs
) {

139 
wrôe
(
rhs
.
ªad
());

140  *
	gthis
;

145 
›î©‹
 () {

146  
ªad
();

150 
	g¥Ÿe˘ed
:

151 
pwmout_t
 
_pwm
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\RawSerial.h

16 #i‚de‡
MBED_RAW_SERIAL_H


17 
	#MBED_RAW_SERIAL_H


	)

19 
	~"∂©f‹m.h
"

21 #i‡
DEVICE_SERIAL


23 
	~"SîülBa£.h
"

24 
	~"£rül_≠i.h
"

26 
«me•a˚
 
	gmbed
 {

48 ˛as†
	cRawSîül
: 
public
 
SîülBa£
 {

50 
public
:

59 
RawSîül
(
PöName
 
tx
, PöNamê
rx
);

67 
putc
(
c
);

73 
gëc
();

81 
puts
(c⁄° *
°r
);

83 
¥ötf
(c⁄° *
f‹m©
, ...);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\SPI.h

16 #i‚de‡
MBED_SPI_H


17 
	#MBED_SPI_H


	)

19 
	~"∂©f‹m.h
"

21 #i‡
DEVICE_SPI


23 
	~"•i_≠i.h
"

25 #i‡
DEVICE_SPI_ASYNCH


26 
	~"CThunk.h
"

27 
	~"dma_≠i.h
"

28 
	~"CúcuœrBuf„r.h
"

29 
	~"Fun˘i⁄Poöãr.h
"

30 
	~"Tønß˘i⁄.h
"

33 
«me•a˚
 
	gmbed
 {

66 ˛as†
	cSPI
 {

68 
	gpublic
:

79 
SPI
(
PöName
 
mosi
, PöNamê
miso
, PöNamê
s˛k
, PöNamê
s£l
=
NC
);

95 
f‹m©
(
bôs
, 
mode
 = 0);

101 
‰equícy
(
hz
 = 1000000);

110 
vútuÆ
 
wrôe
(
vÆue
);

112 #i‡
DEVICE_SPI_ASYNCH


126 
	gãm∂©e
<
ty≥«me
 
	gTy≥
>

127 
å™s„r
(c⁄° 
Ty≥
 *
tx_buf„r
, 
tx_Àngth
, Ty≥ *
rx_buf„r
, 
rx_Àngth
, c⁄° 
evít_ˇŒback_t
& 
ˇŒback
, 
evít
 = 
SPI_EVENT_COMPLETE
) {

128 i‡(
•i_a˘ive
(&
_•i
)) {

129  
queue_å™s„r
(
tx_buf„r
, 
tx_Àngth
, 
rx_buf„r
, 
rx_Àngth
, (
Ty≥
)*8, 
ˇŒback
, 
evít
);

131 
°¨t_å™s„r
(
tx_buf„r
, 
tx_Àngth
, 
rx_buf„r
, 
rx_Àngth
, (
Ty≥
)*8, 
ˇŒback
, 
evít
);

137 
ab‹t_å™s„r
();

141 
˛ór_å™s„r_buf„r
();

145 
ab‹t_Æl_å™s„rs
();

152 
£t_dma_ußge
(
DMAUßge
 
ußge
);

154 
	g¥Ÿe˘ed
:

158 
úq_h™dÀr_asynch
();

173 
å™s„r
(c⁄° *
tx_buf„r
, 
tx_Àngth
, *
rx_buf„r
, 
rx_Àngth
, 
bô_width
, c⁄° 
evít_ˇŒback_t
& 
ˇŒback
, 
evít
);

188 
queue_å™s„r
(c⁄° *
tx_buf„r
, 
tx_Àngth
, *
rx_buf„r
, 
rx_Àngth
, 
bô_width
, c⁄° 
evít_ˇŒback_t
& 
ˇŒback
, 
evít
);

202 
°¨t_å™s„r
(c⁄° *
tx_buf„r
, 
tx_Àngth
, *
rx_buf„r
, 
rx_Àngth
, 
bô_width
, c⁄° 
evít_ˇŒback_t
& 
ˇŒback
, 
evít
);

204 #i‡
TRANSACTION_QUEUE_SIZE_SPI


210 
°¨t_å™ß˘i⁄
(
å™ß˘i⁄_t
 *
d©a
);

215 
dequeue_å™ß˘i⁄
();

216 
	gCúcuœrBuf„r
<
	gTønß˘i⁄
<
	gSPI
>, 
	gTRANSACTION_QUEUE_SIZE_SPI
> 
	g_å™ß˘i⁄_buf„r
;

221 
	gpublic
:

222 
vútuÆ
 ~
SPI
() {

225 
¥Ÿe˘ed
:

226 
•i_t
 
_•i
;

228 #i‡
DEVICE_SPI_ASYNCH


229 
	gCThunk
<
	gSPI
> 
	g_úq
;

230 
evít_ˇŒback_t
 
	g_ˇŒback
;

231 
DMAUßge
 
	g_ußge
;

234 
aquúe
();

235 
SPI
 *
	g_ow√r
;

236 
	g_bôs
;

237 
	g_mode
;

238 
	g_hz
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\SPISlave.h

16 #i‚de‡
MBED_SPISLAVE_H


17 
	#MBED_SPISLAVE_H


	)

19 
	~"∂©f‹m.h
"

21 #i‡
DEVICE_SPISLAVE


23 
	~"•i_≠i.h
"

25 
«me•a˚
 
	gmbed
 {

51 ˛as†
	cSPISœve
 {

53 
	gpublic
:

64 
SPISœve
(
PöName
 
mosi
, PöNamê
miso
, PöNamê
s˛k
, PöNamê
s£l
);

80 
f‹m©
(
bôs
, 
mode
 = 0);

86 
‰equícy
(
hz
 = 1000000);

94 
ª˚ive
();

101 
ªad
();

108 
ª∂y
(
vÆue
);

110 
	g¥Ÿe˘ed
:

111 
•i_t
 
_•i
;

113 
	g_bôs
;

114 
	g_mode
;

115 
	g_hz
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\Serial.h

16 #i‚de‡
MBED_SERIAL_H


17 
	#MBED_SERIAL_H


	)

19 
	~"∂©f‹m.h
"

21 #i‡
DEVICE_SERIAL


23 
	~"Såóm.h
"

24 
	~"SîülBa£.h
"

25 
	~"£rül_≠i.h
"

27 
«me•a˚
 
	gmbed
 {

47 
˛ass
 
	gSîül
 : 
public
 
SîülBa£
,Öubli¯
	gSåóm
 {

49 
	gpublic
:

50 #i‡
DEVICE_SERIAL_ASYNCH


51 
usög
 
SîülBa£
::
ªad
;

52 
usög
 
	gSîülBa£
::
wrôe
;

63 
Sîül
(
PöName
 
tx
, PöNamê
rx
, c⁄° *
«me
=
NULL
);

65 
	g¥Ÿe˘ed
:

66 
vútuÆ
 
_gëc
();

67 
vútuÆ
 
_putc
(
c
);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\SerialBase.h

16 #i‚de‡
MBED_SERIALBASE_H


17 
	#MBED_SERIALBASE_H


	)

19 
	~"∂©f‹m.h
"

21 #i‡
DEVICE_SERIAL


23 
	~"Såóm.h
"

24 
	~"Fun˘i⁄Poöãr.h
"

25 
	~"£rül_≠i.h
"

27 #i‡
DEVICE_SERIAL_ASYNCH


28 
	~"CThunk.h
"

29 
	~"dma_≠i.h
"

32 
«me•a˚
 
	gmbed
 {

37 ˛as†
	cSîülBa£
 {

39 
	gpublic
:

44 
baud
(
baudøã
);

46 
	eP¨ôy
 {

47 
	gN⁄e
 = 0,

48 
	gOdd
,

49 
	gEví
,

50 
	gF‹˚d1
,

51 
	gF‹˚d0


54 
	eIrqTy≥
 {

55 
	gRxIrq
 = 0,

56 
	gTxIrq


59 
	eFlow
 {

60 
	gDißbÀd
 = 0,

61 
	gRTS
,

62 
	gCTS
,

63 
	gRTSCTS


72 
f‹m©
(
bôs
=8, 
P¨ôy
 
∑rôy
=
SîülBa£
::
N⁄e
, 
°›_bôs
=1);

80 
ªadabÀ
();

88 
wrôóbÀ
();

95 
©èch
((*
Âå
)(), 
IrqTy≥
 
ty≥
=
RxIrq
);

103 
	gãm∂©e
<
ty≥«me
 
	gT
>

104 
©èch
(
T
* 
çå
, (T::*
m±r
)(), 
IrqTy≥
 
ty≥
=
RxIrq
) {

105 if((
m±r
 !
NULL
Ë&& (
çå
 != NULL)) {

106 
_úq
[
ty≥
].
©èch
(
çå
, 
m±r
);

107 
£rül_úq_£t
(&
_£rül
, (
SîülIrq
)
ty≥
, 1);

109 
£rül_úq_£t
(&
_£rül
, (
SîülIrq
)
ty≥
, 0);

115 
£nd_bªak
();

117 #i‡
DEVICE_SERIAL_FC


124 
£t_Êow_c⁄åﬁ
(
Flow
 
ty≥
, 
PöName
 
Êow1
=
NC
, PöNamê
Êow2
=NC);

127 
_úq_h™dÀr
(
uöt32_t
 
id
, 
SîülIrq
 
úq_ty≥
);

129 #i‡
DEVICE_SERIAL_ASYNCH


138 
wrôe
(c⁄° 
uöt8_t
 *
buf„r
, 
Àngth
, c⁄° 
evít_ˇŒback_t
& 
ˇŒback
, 
evít
 = 
SERIAL_EVENT_TX_COMPLETE
);

147 
wrôe
(c⁄° 
uöt16_t
 *
buf„r
, 
Àngth
, c⁄° 
evít_ˇŒback_t
& 
ˇŒback
, 
evít
 = 
SERIAL_EVENT_TX_COMPLETE
);

151 
ab‹t_wrôe
();

161 
ªad
(
uöt8_t
 *
buf„r
, 
Àngth
, c⁄° 
evít_ˇŒback_t
& 
ˇŒback
, 
evít
 = 
SERIAL_EVENT_RX_COMPLETE
, 
ch¨_m©ch
 = 
SERIAL_RESERVED_CHAR_MATCH
);

171 
ªad
(
uöt16_t
 *
buf„r
, 
Àngth
, c⁄° 
evít_ˇŒback_t
& 
ˇŒback
, 
evít
 = 
SERIAL_EVENT_RX_COMPLETE
, 
ch¨_m©ch
 = 
SERIAL_RESERVED_CHAR_MATCH
);

175 
ab‹t_ªad
();

182 
£t_dma_ußge_tx
(
DMAUßge
 
ußge
);

189 
£t_dma_ußge_rx
(
DMAUßge
 
ußge
);

191 
	g¥Ÿe˘ed
:

192 
°¨t_ªad
(*
buf„r
, 
buf„r_size
, 
buf„r_width
, c⁄° 
evít_ˇŒback_t
& 
ˇŒback
, 
evít
, 
ch¨_m©ch
);

193 
°¨t_wrôe
(c⁄° *
buf„r
, 
buf„r_size
, 
buf„r_width
, c⁄° 
evít_ˇŒback_t
& 
ˇŒback
, 
evít
);

194 
öãºu±_h™dÀr_asynch
();

197 
	g¥Ÿe˘ed
:

198 
SîülBa£
(
PöName
 
tx
, PöNamê
rx
);

199 
	gvútuÆ
 ~
SîülBa£
() {

202 
_ba£_gëc
();

203 
_ba£_putc
(
c
);

205 #i‡
DEVICE_SERIAL_ASYNCH


206 
	gCThunk
<
	gSîülBa£
> 
	g_thunk_úq
;

207 
evít_ˇŒback_t
 
	g_tx_ˇŒback
;

208 
evít_ˇŒback_t
 
	g_rx_ˇŒback
;

209 
DMAUßge
 
	g_tx_ußge
;

210 
DMAUßge
 
	g_rx_ußge
;

213 
£rül_t
 
	g_£rül
;

214 
Fun˘i⁄Poöãr
 
	g_úq
[2];

215 
	g_baud
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\Stream.h

16 #i‚de‡
MBED_STREAM_H


17 
	#MBED_STREAM_H


	)

19 
	~"∂©f‹m.h
"

20 
	~"FûeLike.h
"

22 
«me•a˚
 
	gmbed
 {

24 
mbed_£t_unbuf„ªd_°ªam
(
FILE
 *
_fûe
);

25 
mbed_gëc
(
FILE
 *
_fûe
);

26 * 
mbed_gës
(*
s
, 
size
, 
FILE
 *
_fûe
);

28 ˛as†
	cSåóm
 : 
public
 
FûeLike
 {

30 
public
:

31 
Såóm
(c⁄° *
«me
=
NULL
);

32 
	gvútuÆ
 ~
Såóm
();

34 
putc
(
c
);

35 
puts
(c⁄° *
s
);

36 
gëc
();

37 *
gës
(*
s
, 
size
);

38 
¥ötf
(c⁄° * 
f‹m©
, ...);

39 
sˇnf
(c⁄° * 
f‹m©
, ...);

41 
›î©‹
 
	g°d
::
FILE
*(Ë{ 
_fûe
;}

43 
	g¥Ÿe˘ed
:

44 
vútuÆ
 
˛o£
();

45 
vútuÆ
 
ssize_t
 
wrôe
(c⁄° * 
buf„r
, 
size_t
 
Àngth
);

46 
vútuÆ
 
ssize_t
 
ªad
(* 
buf„r
, 
size_t
 
Àngth
);

47 
vútuÆ
 
off_t
 
l£ek
(off_à
off£t
, 
whí˚
);

48 
vútuÆ
 
ißây
();

49 
vútuÆ
 
fsync
();

50 
vútuÆ
 
off_t
 
Êí
();

52 
vútuÆ
 
_putc
(
c
) = 0;

53 
vútuÆ
 
_gëc
() = 0;

55 
	g°d
::
FILE
 *
_fûe
;

58 
	g¥iv©e
:

59 
Såóm
(const Stream&);

60 
	gSåóm
 & 
	g›î©‹
 = (c⁄° 
Såóm
&);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\Ticker.h

16 #i‚de‡
MBED_TICKER_H


17 
	#MBED_TICKER_H


	)

19 
	~"TimîEvít.h
"

20 
	~"Fun˘i⁄Poöãr.h
"

22 
«me•a˚
 
	gmbed
 {

57 ˛as†
	cTickî
 : 
public
 
TimîEvít
 {

59 
public
:

60 
Tickî
(Ë: 
TimîEvít
() {

63 
Tickî
(c⁄° 
tickî_d©a_t
 *
d©a
Ë: 
TimîEvít
(data) {

71 
©èch
((*
Âå
)(), 
t
) {

72 
©èch_us
(
Âå
, 
t
 * 1000000.0f);

81 
	gãm∂©e
<
ty≥«me
 
	gT
>

82 
©èch
(
T
* 
çå
, (T::*
m±r
)(), 
t
) {

83 
©èch_us
(
çå
, 
m±r
, 
t
 * 1000000.0f);

91 
©èch_us
((*
Âå
)(), 
time°amp_t
 
t
) {

92 
	g_fun˘i⁄
.
©èch
(
Âå
);

93 
£tup
(
t
);

102 
	gãm∂©e
<
ty≥«me
 
	gT
>

103 
©èch_us
(
T
* 
çå
, (T::*
m±r
)(), 
time°amp_t
 
t
) {

104 
	g_fun˘i⁄
.
©èch
(
çå
, 
m±r
);

105 
£tup
(
t
);

108 
	gvútuÆ
 ~
Tickî
() {

109 
dëach
();

114 
dëach
();

116 
	g¥Ÿe˘ed
:

117 
£tup
(
time°amp_t
 
t
);

118 
vútuÆ
 
h™dÀr
();

120 
	g¥Ÿe˘ed
:

121 
time°amp_t
 
_dñay
;

122 
Fun˘i⁄Poöãr
 
	g_fun˘i⁄
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\Timeout.h

16 #i‚de‡
MBED_TIMEOUT_H


17 
	#MBED_TIMEOUT_H


	)

19 
	~"Tickî.h
"

21 
«me•a˚
 
	gmbed
 {

51 ˛as†
	cTimeout
 : 
public
 
Tickî
 {

53 
¥Ÿe˘ed
:

54 
vútuÆ
 
h™dÀr
();

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\Timer.h

16 #i‚de‡
MBED_TIMER_H


17 
	#MBED_TIMER_H


	)

19 
	~"∂©f‹m.h
"

20 
	~"tickî_≠i.h
"

22 
«me•a˚
 
	gmbed
 {

45 ˛as†
	cTimî
 {

47 
	gpublic
:

48 
Timî
();

49 
Timî
(c⁄° 
tickî_d©a_t
 *
d©a
);

53 
°¨t
();

57 
°›
();

63 
ª£t
();

67 
ªad
();

71 
ªad_ms
();

75 
ªad_us
();

77 #ifde‡
MBED_OPERATORS


78 
›î©‹
 ();

81 
	g¥Ÿe˘ed
:

82 
¶i˚time
();

83 
	g_ru¬ög
;

84 
	g_°¨t
;

85 
	g_time
;

86 c⁄° 
tickî_d©a_t
 *
	g_tickî_d©a
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\TimerEvent.h

16 #i‚de‡
MBED_TIMEREVENT_H


17 
	#MBED_TIMEREVENT_H


	)

19 
	~"tickî_≠i.h
"

20 
	~"us_tickî_≠i.h
"

22 
«me•a˚
 
	gmbed
 {

26 ˛as†
	cTimîEvít
 {

27 
	gpublic
:

28 
TimîEvít
();

29 
TimîEvít
(c⁄° 
tickî_d©a_t
 *
d©a
);

33 
úq
(
uöt32_t
 
id
);

37 
	gvútuÆ
 ~
TimîEvít
();

39 
	g¥Ÿe˘ed
:

41 
vútuÆ
 
h™dÀr
() = 0;

44 
ö£π
(
time°amp_t
 
time°amp
);

47 
ªmove
();

49 
tickî_evít_t
 
	gevít
;

51 c⁄° 
tickî_d©a_t
 *
	g_tickî_d©a
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\Transaction.h

16 #i‚de‡
MBED_TRANSACTION_H


17 
	#MBED_TRANSACTION_H


	)

19 
	~"∂©f‹m.h
"

20 
	~"Fun˘i⁄Poöãr.h
"

22 
«me•a˚
 
	gmbed
 {

27 *
	gtx_buf„r
;

28 
size_t
 
	gtx_Àngth
;

29 *
	grx_buf„r
;

30 
size_t
 
	grx_Àngth
;

31 
uöt32_t
 
	gevít
;

32 
evít_ˇŒback_t
 
	gˇŒback
;

33 
uöt8_t
 
	gwidth
;

34 } 
	tå™ß˘i⁄_t
;

38 
	gãm∂©e
<
ty≥«me
 
	gCœss
>

39 ˛as†
	cTønß˘i⁄
 {

40 
	gpublic
:

41 
Tønß˘i⁄
(
Cœss
 *
çoöãr
, c⁄° 
å™ß˘i⁄_t
& 
å™ß˘i⁄
Ë: 
_obj
—poöãr), 
_d©a
(transaction) {

44 
Tønß˘i⁄
(Ë: 
_obj
(), 
_d©a
() {

47 ~
Tønß˘i⁄
() {

54 
Cœss
* 
gë_obje˘
() {

55  
	g_obj
;

62 
å™ß˘i⁄_t
* 
gë_å™ß˘i⁄
() {

63  &
	g_d©a
;

66 
	g¥iv©e
:

67 
Cœss
* 
_obj
;

68 
å™ß˘i⁄_t
 
	g_d©a
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\can_helper.h

16 #i‚de‡
MBED_CAN_HELPER_H


17 
	#MBED_CAN_HELPER_H


	)

19 #i‡
DEVICE_CAN


21 #ifde‡
__˝lu•lus


25 
	eCANF‹m©
 {

26 
CANSènd¨d
 = 0,

27 
CANExãnded
 = 1,

28 
CANAny
 = 2

30 
CANF‹m©
 
	tCANF‹m©
;

32 
	eCANTy≥
 {

33 
CAND©a
 = 0,

34 
CANRemŸe
 = 1

36 
CANTy≥
 
	tCANTy≥
;

38 
	sCAN_Mesßge
 {

39 
id
;

40 
d©a
[8];

41 
Àn
;

42 
CANF‹m©
 
f‹m©
;

43 
CANTy≥
 
ty≥
;

45 
CAN_Mesßge
 
	tCAN_Mesßge
;

47 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\mbed.h

16 #i‚de‡
MBED_H


17 
	#MBED_H


	)

19 
	#MBED_LIBRARY_VERSION
 107

	)

21 
	~"∂©f‹m.h
"

24 
	~<m©h.h
>

25 
	~<time.h
>

28 
	~"mbed_îr‹.h
"

29 
	~"mbed_öãrÁ˚.h
"

32 
	~"DigôÆIn.h
"

33 
	~"DigôÆOut.h
"

34 
	~"DigôÆInOut.h
"

35 
	~"BusIn.h
"

36 
	~"BusOut.h
"

37 
	~"BusInOut.h
"

38 
	~"P‹tIn.h
"

39 
	~"P‹tInOut.h
"

40 
	~"P‹tOut.h
"

41 
	~"A«logIn.h
"

42 
	~"A«logOut.h
"

43 
	~"PwmOut.h
"

44 
	~"Sîül.h
"

45 
	~"SPI.h
"

46 
	~"SPISœve.h
"

47 
	~"I2C.h
"

48 
	~"I2CSœve.h
"

49 
	~"Ethî√t.h
"

50 
	~"CAN.h
"

51 
	~"RawSîül.h
"

54 
	~"Timî.h
"

55 
	~"Tickî.h
"

56 
	~"Timeout.h
"

57 
	~"LowPowîTimeout.h
"

58 
	~"LowPowîTickî.h
"

59 
	~"LowPowîTimî.h
"

60 
	~"LoˇlFûeSy°em.h
"

61 
	~"I¡îru±In.h
"

62 
	~"waô_≠i.h
"

63 
	~"¶ìp_≠i.h
"

64 
	~"πc_time.h
"

66 
usög
 
«me•a˚
 
	gmbed
;

67 
usög
 
«me•a˚
 
	g°d
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\mbed_assert.h

16 #i‚de‡
MBED_ASSERT_H


17 
	#MBED_ASSERT_H


	)

19 #ifde‡
__˝lu•lus


31 
mbed_as£π_öã∫Æ
(c⁄° *
ex¥
, c⁄° *
fûe
, 
löe
);

33 #ifde‡
__˝lu•lus


37 #ifde‡
NDEBUG


38 
	#MBED_ASSERT
(
ex¥
Ë(()0)

	)

41 
	#MBED_ASSERT
(
ex¥
) \

43 i‡(!(
ex¥
)) { \

44 
	`mbed_as£π_öã∫Æ
(#ex¥, 
__FILE__
, 
__LINE__
); \

46 } 0)

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\mbed_debug.h

16 #i‚de‡
MBED_DEBUG_H


17 
	#MBED_DEBUG_H


	)

18 
	~"devi˚.h
"

20 #ifde‡
__˝lu•lus


24 #i‡
DEVICE_STDIO_MESSAGES


25 
	~<°dio.h
>

26 
	~<°d¨g.h
>

32 
ölöe
 
	$debug
(c⁄° *
f‹m©
, ...) {

33 
va_li°
 
¨gs
;

34 
	`va_°¨t
(
¨gs
, 
f‹m©
);

35 
	`vÂrötf
(
°dîr
, 
f‹m©
, 
¨gs
);

36 
	`va_íd
(
¨gs
);

37 
	}
}

47 
ölöe
 
	$debug_if
(
c⁄dôi⁄
, c⁄° *
f‹m©
, ...) {

48 i‡(
c⁄dôi⁄
 == 1) {

49 
va_li°
 
¨gs
;

50 
	`va_°¨t
(
¨gs
, 
f‹m©
);

51 
	`vÂrötf
(
°dîr
, 
f‹m©
, 
¨gs
);

52 
	`va_íd
(
¨gs
);

54 
	}
}

57 
ölöe
 
	$debug
(c⁄° *
f‹m©
, ...Ë{
	}
}

58 
ölöe
 
	$debug_if
(
c⁄dôi⁄
, c⁄° *
f‹m©
, ...Ë{
	}
}

62 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\mbed_error.h

16 #i‚de‡
MBED_ERROR_H


17 
	#MBED_ERROR_H


	)

56 #ifde‡
__˝lu•lus


60 
îr‹
(c⁄° * 
f‹m©
, ...);

62 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\mbed_interface.h

16 #i‚de‡
MBED_INTERFACE_H


17 
	#MBED_INTERFACE_H


	)

19 
	~"devi˚.h
"

25 
	#MBED_MAC_ADDR_INTERFACE
 0x00

	)

26 
	#MBED_MAC_ADDR_0
 
MBED_MAC_ADDR_INTERFACE


	)

27 
	#MBED_MAC_ADDR_1
 
MBED_MAC_ADDR_INTERFACE


	)

28 
	#MBED_MAC_ADDR_2
 
MBED_MAC_ADDR_INTERFACE


	)

29 
	#MBED_MAC_ADDR_3
 
MBED_MAC_ADDR_INTERFACE


	)

30 
	#MBED_MAC_ADDR_4
 
MBED_MAC_ADDR_INTERFACE


	)

31 
	#MBED_MAC_ADDR_5
 
MBED_MAC_ADDR_INTERFACE


	)

32 
	#MBED_MAC_ADDRESS_SUM
 (
MBED_MAC_ADDR_0
 | 
MBED_MAC_ADDR_1
 | 
MBED_MAC_ADDR_2
 | 
MBED_MAC_ADDR_3
 | 
MBED_MAC_ADDR_4
 | 
MBED_MAC_ADDR_5
)

	)

34 #ifde‡
__˝lu•lus


38 #i‡
DEVICE_SEMIHOST


54 
mbed_öãrÁ˚_c⁄√˘ed
();

62 
mbed_öãrÁ˚_ª£t
();

71 
mbed_öãrÁ˚_disc⁄√˘
();

81 
mbed_öãrÁ˚_powîdown
();

92 
mbed_öãrÁ˚_uid
(*
uid
);

104 
mbed_mac_addªss
(*
mac
);

108 
mbed_dõ
();

110 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\platform.h

16 #i‚de‡
MBED_PLATFORM_H


17 
	#MBED_PLATFORM_H


	)

19 
	#MBED_OPERATORS
 1

	)

21 
	~"devi˚.h
"

22 
	~"PöNames.h
"

23 
	~"PîùhîÆNames.h
"

25 
	~<c°ddef
>

26 
	~<c°dlib
>

27 
	~<c°dio
>

28 
	~<c°rög
>

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\rtc_time.h

17 
	~<time.h
>

19 #ifde‡
__˝lu•lus


70 
£t_time
(
time_t
 
t
);

81 
©èch_πc
(
time_t
 (*
ªad_πc
)(), (*
wrôe_πc
)—ime_t), (*
öô_πc
)(), (*
i£«bÀd_πc
)());

83 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\semihost_api.h

16 #i‚de‡
MBED_SEMIHOST_H


17 
	#MBED_SEMIHOST_H


	)

19 
	~"devi˚.h
"

20 
	~"toﬁchaö.h
"

22 #ifde‡
__˝lu•lus


26 #i‡
DEVICE_SEMIHOST


28 #i‚de‡
__CC_ARM


30 #i‡
deföed
(
__ICCARM__
)

31 
ölöe
 
	$__£miho°
(
ªas⁄
, c⁄° *
¨g
) {

32  
	`__£miho°ög
(
ªas⁄
, (*)
¨g
);

33 
	}
}

36 #ifde‡
__thumb__


37 
	#AngñSWI
 0xAB

	)

38 
	#AngñSWIIn¢
 "bk±"

	)

39 
	#AngñSWIAsm
 
bk±


	)

41 
	#AngñSWI
 0x123456

	)

42 
	#AngñSWIIn¢
 "swi"

	)

43 
	#AngñSWIAsm
 
swi


	)

46 
ölöe
 
	$__£miho°
(
ªas⁄
, c⁄° *
¨g
) {

47 
vÆue
;

49 
asm
 volatile (

52 
AngñSWIIn¢
 " %a3" "\n\t"

54 : "Ù" (
vÆue
)

55 : "r" (
ªas⁄
), "r" (
¨g
), "i" (
AngñSWI
)

59  
vÆue
;

60 
	}
}

64 #i‡
DEVICE_LOCALFILESYSTEM


65 
FILEHANDLE
 
£miho°_›í
(c⁄° * 
«me
, 
›ímode
);

66 
£miho°_˛o£
 (
FILEHANDLE
 
fh
);

67 
£miho°_ªad
 (
FILEHANDLE
 
fh
, * 
buf„r
, 
Àngth
, 
mode
);

68 
£miho°_wrôe
 (
FILEHANDLE
 
fh
, c⁄° * 
buf„r
, 
Àngth
, 
mode
);

69 
£miho°_ísuª
(
FILEHANDLE
 
fh
);

70 
£miho°_Êí
 (
FILEHANDLE
 
fh
);

71 
£miho°_£ek
 (
FILEHANDLE
 
fh
, 
posôi⁄
);

72 
£miho°_i°ty
 (
FILEHANDLE
 
fh
);

74 
£miho°_ªmove
(c⁄° *
«me
);

75 
£miho°_ª«me
(c⁄° *
ﬁd_«me
, c⁄° *
√w_«me
);

78 
£miho°_uid
(*
uid
);

79 
£miho°_ª£t
();

80 
£miho°_vbus
();

81 
£miho°_powîdown
();

82 
£miho°_exô
();

84 
£miho°_c⁄√˘ed
();

85 
£miho°_dißbÀdebug
();

89 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\toolchain.h

16 #i‚de‡
MBED_TOOLCHAIN_H


17 
	#MBED_TOOLCHAIN_H


	)

19 #i‡
deföed
(
TOOLCHAIN_ARM
)

20 
	~<π_sys.h
>

23 #i‚de‡
FILEHANDLE


24 
	tFILEHANDLE
;

27 #i‡
deföed
 (
__ICCARM__
)

28 
	#WEAK
 
__wók


	)

29 
	#PACKED
 
__∑cked


	)

31 
	#WEAK
 
	`__©åibuã__
((
wók
))

	)

32 
	#PACKED
 
	`__©åibuã__
((
∑cked
))

	)

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\wait_api.h

16 #i‚de‡
MBED_WAIT_API_H


17 
	#MBED_WAIT_API_H


	)

19 #ifde‡
__˝lu•lus


48 
waô
(
s
);

54 
waô_ms
(
ms
);

60 
waô_us
(
us
);

62 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\BusIn.cpp

16 
	~"BusIn.h
"

17 
	~"mbed_as£π.h
"

19 
«me•a˚
 
	gmbed
 {

21 
	gBusIn
::
BusIn
(
PöName
 
p0
, PöNamê
p1
, PöNamê
p2
, PöNamê
p3
, PöNamê
p4
, PöNamê
p5
, PöNamê
p6
, PöNamê
p7
, PöNamê
p8
, PöNamê
p9
, PöNamê
p10
, PöNamê
p11
, PöNamê
p12
, PöNamê
p13
, PöNamê
p14
, PöNamê
p15
) {

22 
PöName
 
	gpös
[16] = {
p0
, 
p1
, 
p2
, 
p3
, 
p4
, 
p5
, 
p6
, 
p7
, 
p8
, 
p9
, 
p10
, 
p11
, 
p12
, 
p13
, 
p14
, 
p15
};

24 
	g_nc_mask
 = 0;

25 
	gi
=0; i<16; i++) {

26 
	g_pö
[
i
] = (
pös
[i] !
NC
Ë? 
√w
 
DigôÆIn
(pins[i]) : 0;

27 i‡(
	gpös
[
i
] !
NC
) {

28 
_nc_mask
 |(1 << 
i
);

33 
	gBusIn
::
BusIn
(
PöName
 
pös
[16]) {

34 
_nc_mask
 = 0;

35 
	gi
=0; i<16; i++) {

36 
	g_pö
[
i
] = (
pös
[i] !
NC
Ë? 
√w
 
DigôÆIn
(pins[i]) : 0;

37 i‡(
	gpös
[
i
] !
NC
) {

38 
_nc_mask
 |(1 << 
i
);

43 
	gBusIn
::~
BusIn
() {

44 
i
=0; 
	gi
<16; i++) {

45 i‡(
	g_pö
[
i
] != 0) {

46 
dñëe
 
_pö
[
i
];

51 
	gBusIn
::
ªad
() {

52 
v
 = 0;

53 
	gi
=0; i<16; i++) {

54 i‡(
	g_pö
[
i
] != 0) {

55 
v
 |
_pö
[
i
]->
ªad
() << i;

58  
	gv
;

61 
	gBusIn
::
mode
(
PöMode
 
puŒ
) {

62 
i
=0; 
	gi
<16; i++) {

63 i‡(
	g_pö
[
i
] != 0) {

64 
_pö
[
i
]->
mode
(
puŒ
);

69 #ifde‡
MBED_OPERATORS


70 
	gBusIn
::
›î©‹
 () {

71  
ªad
();

74 
	gDigôÆIn
& 
	gBusIn
::
›î©‹
[] (
ödex
) {

75 
MBED_ASSERT
(
ödex
 >= 0 && index <= 16);

76 
MBED_ASSERT
(
_pö
[
ödex
]);

77  *
	g_pö
[
ödex
];

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\BusInOut.cpp

16 
	~"BusInOut.h
"

17 
	~"mbed_as£π.h
"

19 
«me•a˚
 
	gmbed
 {

21 
	gBusInOut
::
BusInOut
(
PöName
 
p0
, PöNamê
p1
, PöNamê
p2
, PöNamê
p3
, PöNamê
p4
, PöNamê
p5
, PöNamê
p6
, PöNamê
p7
, PöNamê
p8
, PöNamê
p9
, PöNamê
p10
, PöNamê
p11
, PöNamê
p12
, PöNamê
p13
, PöNamê
p14
, PöNamê
p15
) {

22 
PöName
 
	gpös
[16] = {
p0
, 
p1
, 
p2
, 
p3
, 
p4
, 
p5
, 
p6
, 
p7
, 
p8
, 
p9
, 
p10
, 
p11
, 
p12
, 
p13
, 
p14
, 
p15
};

24 
	g_nc_mask
 = 0;

25 
	gi
=0; i<16; i++) {

26 
	g_pö
[
i
] = (
pös
[i] !
NC
Ë? 
√w
 
DigôÆInOut
(pins[i]) : 0;

27 i‡(
	gpös
[
i
] !
NC
) {

28 
_nc_mask
 |(1 << 
i
);

33 
	gBusInOut
::
BusInOut
(
PöName
 
pös
[16]) {

34 
_nc_mask
 = 0;

35 
	gi
=0; i<16; i++) {

36 
	g_pö
[
i
] = (
pös
[i] !
NC
Ë? 
√w
 
DigôÆInOut
(pins[i]) : 0;

37 i‡(
	gpös
[
i
] !
NC
) {

38 
_nc_mask
 |(1 << 
i
);

43 
	gBusInOut
::~
BusInOut
() {

44 
i
=0; 
	gi
<16; i++) {

45 i‡(
	g_pö
[
i
] != 0) {

46 
dñëe
 
_pö
[
i
];

51 
	gBusInOut
::
wrôe
(
vÆue
) {

52 
i
=0; 
	gi
<16; i++) {

53 i‡(
	g_pö
[
i
] != 0) {

54 
_pö
[
i
]->
wrôe
((
vÆue
 >> i) & 1);

59 
	gBusInOut
::
ªad
() {

60 
v
 = 0;

61 
	gi
=0; i<16; i++) {

62 i‡(
	g_pö
[
i
] != 0) {

63 
v
 |
_pö
[
i
]->
ªad
() << i;

66  
	gv
;

69 
	gBusInOut
::
ouçut
() {

70 
i
=0; 
	gi
<16; i++) {

71 i‡(
	g_pö
[
i
] != 0) {

72 
_pö
[
i
]->
ouçut
();

77 
	gBusInOut
::
öput
() {

78 
i
=0; 
	gi
<16; i++) {

79 i‡(
	g_pö
[
i
] != 0) {

80 
_pö
[
i
]->
öput
();

85 
	gBusInOut
::
mode
(
PöMode
 
puŒ
) {

86 
i
=0; 
	gi
<16; i++) {

87 i‡(
	g_pö
[
i
] != 0) {

88 
_pö
[
i
]->
mode
(
puŒ
);

93 #ifde‡
MBED_OPERATORS


94 
	gBusInOut
& BusInOut::
›î©‹
(
v
) {

95 
wrôe
(
v
);

96  *
	gthis
;

99 
	gBusInOut
& BusInOut::
›î©‹
(
BusInOut
& 
rhs
) {

100 
wrôe
(
rhs
.
ªad
());

101  *
	gthis
;

104 
	gDigôÆInOut
& 
	gBusInOut
::
›î©‹
[] (
ödex
) {

105 
MBED_ASSERT
(
ödex
 >= 0 && index <= 16);

106 
MBED_ASSERT
(
_pö
[
ödex
]);

107  *
	g_pö
[
ödex
];

110 
	gBusInOut
::
›î©‹
 () {

111  
ªad
();

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\BusOut.cpp

16 
	~"BusOut.h
"

17 
	~"mbed_as£π.h
"

19 
«me•a˚
 
	gmbed
 {

21 
	gBusOut
::
BusOut
(
PöName
 
p0
, PöNamê
p1
, PöNamê
p2
, PöNamê
p3
, PöNamê
p4
, PöNamê
p5
, PöNamê
p6
, PöNamê
p7
, PöNamê
p8
, PöNamê
p9
, PöNamê
p10
, PöNamê
p11
, PöNamê
p12
, PöNamê
p13
, PöNamê
p14
, PöNamê
p15
) {

22 
PöName
 
	gpös
[16] = {
p0
, 
p1
, 
p2
, 
p3
, 
p4
, 
p5
, 
p6
, 
p7
, 
p8
, 
p9
, 
p10
, 
p11
, 
p12
, 
p13
, 
p14
, 
p15
};

24 
	g_nc_mask
 = 0;

25 
	gi
=0; i<16; i++) {

26 
	g_pö
[
i
] = (
pös
[i] !
NC
Ë? 
√w
 
DigôÆOut
(pins[i]) : 0;

27 i‡(
	gpös
[
i
] !
NC
) {

28 
_nc_mask
 |(1 << 
i
);

33 
	gBusOut
::
BusOut
(
PöName
 
pös
[16]) {

34 
_nc_mask
 = 0;

35 
	gi
=0; i<16; i++) {

36 
	g_pö
[
i
] = (
pös
[i] !
NC
Ë? 
√w
 
DigôÆOut
(pins[i]) : 0;

37 i‡(
	gpös
[
i
] !
NC
) {

38 
_nc_mask
 |(1 << 
i
);

43 
	gBusOut
::~
BusOut
() {

44 
i
=0; 
	gi
<16; i++) {

45 i‡(
	g_pö
[
i
] != 0) {

46 
dñëe
 
_pö
[
i
];

51 
	gBusOut
::
wrôe
(
vÆue
) {

52 
i
=0; 
	gi
<16; i++) {

53 i‡(
	g_pö
[
i
] != 0) {

54 
_pö
[
i
]->
wrôe
((
vÆue
 >> i) & 1);

59 
	gBusOut
::
ªad
() {

60 
v
 = 0;

61 
	gi
=0; i<16; i++) {

62 i‡(
	g_pö
[
i
] != 0) {

63 
v
 |
_pö
[
i
]->
ªad
() << i;

66  
	gv
;

69 #ifde‡
MBED_OPERATORS


70 
	gBusOut
& BusOut::
›î©‹
(
v
) {

71 
wrôe
(
v
);

72  *
	gthis
;

75 
	gBusOut
& BusOut::
›î©‹
(
BusOut
& 
rhs
) {

76 
wrôe
(
rhs
.
ªad
());

77  *
	gthis
;

80 
	gDigôÆOut
& 
	gBusOut
::
›î©‹
[] (
ödex
) {

81 
MBED_ASSERT
(
ödex
 >= 0 && index <= 16);

82 
MBED_ASSERT
(
_pö
[
ödex
]);

83  *
	g_pö
[
ödex
];

86 
	gBusOut
::
›î©‹
 () {

87  
ªad
();

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\CAN.cpp

16 
	~"CAN.h
"

18 #i‡
DEVICE_CAN


20 
	~"cmsis.h
"

22 
«me•a˚
 
	gmbed
 {

24 
	gCAN
::
CAN
(
PöName
 
rd
, PöNamê
td
Ë: 
_ˇn
(), 
_úq
() {

25 
ˇn_öô
(&
_ˇn
, 
rd
, 
td
);

26 
ˇn_úq_öô
(&
_ˇn
, (&
CAN
::
_úq_h™dÀr
), (
uöt32_t
)
this
);

29 
	gCAN
::~
CAN
() {

30 
ˇn_úq_‰ì
(&
_ˇn
);

31 
ˇn_‰ì
(&
_ˇn
);

34 
	gCAN
::
‰equícy
(
f
) {

35  
ˇn_‰equícy
(&
_ˇn
, 
f
);

38 
	gCAN
::
wrôe
(
CANMesßge
 
msg
) {

39  
ˇn_wrôe
(&
_ˇn
, 
msg
, 0);

42 
	gCAN
::
ªad
(
CANMesßge
 &
msg
, 
h™dÀ
) {

43  
ˇn_ªad
(&
_ˇn
, &
msg
, 
h™dÀ
);

46 
	gCAN
::
ª£t
() {

47 
ˇn_ª£t
(&
_ˇn
);

50 
	gCAN
::
rdîr‹
() {

51  
ˇn_rdîr‹
(&
_ˇn
);

54 
	gCAN
::
tdîr‹
() {

55  
ˇn_tdîr‹
(&
_ˇn
);

58 
	gCAN
::
m⁄ô‹
(
boﬁ
 
sûít
) {

59 
ˇn_m⁄ô‹
(&
_ˇn
, (
sûít
) ? 1 : 0);

62 
	gCAN
::
mode
(
Mode
 mode) {

63  
ˇn_mode
(&
_ˇn
, (
C™Mode
)
mode
);

66 
	gCAN
::
fûãr
(
id
, 
mask
, 
CANF‹m©
 
f‹m©
, 
h™dÀ
) {

67  
ˇn_fûãr
(&
_ˇn
, 
id
, 
mask
, 
f‹m©
, 
h™dÀ
);

70 
	gCAN
::
©èch
((*
Âå
)(), 
IrqTy≥
 
ty≥
) {

71 i‡(
	gÂå
) {

72 
	g_úq
[(
C™IrqTy≥
)
ty≥
].
©èch
(
Âå
);

73 
ˇn_úq_£t
(&
_ˇn
, (
C™IrqTy≥
)
ty≥
, 1);

75 
ˇn_úq_£t
(&
_ˇn
, (
C™IrqTy≥
)
ty≥
, 0);

79 
	gCAN
::
_úq_h™dÀr
(
uöt32_t
 
id
, 
C™IrqTy≥
 
ty≥
) {

80 
CAN
 *
	gh™dÀr
 = (CAN*)
id
;

81 
	gh™dÀr
->
	g_úq
[
ty≥
].
ˇŒ
();

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\CallChain.cpp

1 
	~"CÆlChaö.h
"

2 
	~"cmsis.h
"

4 
«me•a˚
 
	gmbed
 {

6 
	gCÆlChaö
::
CÆlChaö
(
size
Ë: 
_chaö
(), 
_size
(size), 
_ñemíts
(0) {

7 
	g_chaö
 = 
√w
 
pFun˘i⁄Poöãr_t
[
size
]();

10 
	gCÆlChaö
::~
CÆlChaö
() {

11 
˛ór
();

12 
dñëe
 
	g_chaö
;

15 
pFun˘i⁄Poöãr_t
 
	gCÆlChaö
::
add
((*
fun˘i⁄
)()) {

16  
comm⁄_add
(
√w
 
Fun˘i⁄Poöãr
(
fun˘i⁄
));

19 
pFun˘i⁄Poöãr_t
 
	gCÆlChaö
::
add_‰⁄t
((*
fun˘i⁄
)()) {

20  
comm⁄_add_‰⁄t
(
√w
 
Fun˘i⁄Poöãr
(
fun˘i⁄
));

23 
	gCÆlChaö
::
size
() const {

24  
_ñemíts
;

27 
pFun˘i⁄Poöãr_t
 
	gCÆlChaö
::
gë
(
i
) const {

28 i‡(
i
 < 0 || i >
_ñemíts
)

29  
NULL
;

30  
	g_chaö
[
i
];

33 
	gCÆlChaö
::
föd
(
pFun˘i⁄Poöãr_t
 
f
) const {

34 
i
 = 0; 
	gi
 < 
	g_ñemíts
; i++)

35 i‡(
	gf
 =
_chaö
[
i
])

36  
i
;

40 
	gCÆlChaö
::
˛ór
() {

41 
i
 = 0; 
	gi
 < 
	g_ñemíts
; i ++) {

42 
dñëe
 
	g_chaö
[
i
];

43 
	g_chaö
[
i
] = 
NULL
;

45 
	g_ñemíts
 = 0;

48 
boﬁ
 
	gCÆlChaö
::
ªmove
(
pFun˘i⁄Poöãr_t
 
f
) {

49 
i
;

51 i‡((
	gi
 = 
föd
(
f
)) == -1)

52  
Ál£
;

53 i‡(
	gi
 !
_ñemíts
 - 1)

54 
memmove
(
_chaö
 + 
i
, _chaö + i + 1, (
_ñemíts
 - i - 1Ë* (
pFun˘i⁄Poöãr_t
));

55 
dñëe
 
	gf
;

56 
	g_ñemíts
 --;

57  
	gåue
;

60 
	gCÆlChaö
::
ˇŒ
() {

61 
i
 = 0; 
	gi
 < 
	g_ñemíts
; i++)

62 
	g_chaö
[
i
]->
ˇŒ
();

65 
	gCÆlChaö
::
_check_size
() {

66 i‡(
_ñemíts
 < 
_size
)

68 
	g_size
 = (
_size
 < 4) ? 4 : _size + 4;

69 
pFun˘i⁄Poöãr_t
* 
	g√w_chaö
 = 
√w
ÖFun˘i⁄Poöãr_t[
_size
]();

70 
mem˝y
(
√w_chaö
, 
_chaö
, 
_ñemíts
 * (
pFun˘i⁄Poöãr_t
));

71 
dñëe
 
	g_chaö
;

72 
	g_chaö
 = 
√w_chaö
;

75 
pFun˘i⁄Poöãr_t
 
	gCÆlChaö
::
comm⁄_add
’Fun˘i⁄Poöãr_à
pf
) {

76 
_check_size
();

77 
	g_chaö
[
_ñemíts
] = 
pf
;

78 
	g_ñemíts
 ++;

79  
	gpf
;

82 
pFun˘i⁄Poöãr_t
 
	gCÆlChaö
::
comm⁄_add_‰⁄t
’Fun˘i⁄Poöãr_à
pf
) {

83 
_check_size
();

84 
memmove
(
_chaö
 + 1, _chaö, 
_ñemíts
 * (
pFun˘i⁄Poöãr_t
));

85 
	g_chaö
[0] = 
pf
;

86 
	g_ñemíts
 ++;

87  
	gpf
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\Ethernet.cpp

16 
	~"Ethî√t.h
"

18 #i‡
DEVICE_ETHERNET


20 
	~"ëhî√t_≠i.h
"

22 
«me•a˚
 
	gmbed
 {

24 
	gEthî√t
::
Ethî√t
() {

25 
ëhî√t_öô
();

28 
	gEthî√t
::~
Ethî√t
() {

29 
ëhî√t_‰ì
();

32 
	gEthî√t
::
wrôe
(c⁄° *
d©a
, 
size
) {

33  
ëhî√t_wrôe
(
d©a
, 
size
);

36 
	gEthî√t
::
£nd
() {

37  
ëhî√t_£nd
();

40 
	gEthî√t
::
ª˚ive
() {

41  
ëhî√t_ª˚ive
();

44 
	gEthî√t
::
ªad
(*
d©a
, 
size
) {

45  
ëhî√t_ªad
(
d©a
, 
size
);

48 
	gEthî√t
::
addªss
(*
mac
) {

49  
ëhî√t_addªss
(
mac
);

52 
	gEthî√t
::
lök
() {

53  
ëhî√t_lök
();

56 
	gEthî√t
::
£t_lök
(
Mode
 
mode
) {

57 
•ìd
 = -1;

58 
	gdu∂ex
 = 0;

60 
	gmode
) {

61 
	gAutoNegŸüã
 : 
•ìd
 = -1; 
	gdu∂ex
 = 0; ;

62 
	gHÆfDu∂ex10
 : 
•ìd
 = 0; 
	gdu∂ex
 = 0; ;

63 
	gFuŒDu∂ex10
 : 
•ìd
 = 0; 
	gdu∂ex
 = 1; ;

64 
	gHÆfDu∂ex100
 : 
•ìd
 = 1; 
	gdu∂ex
 = 0; ;

65 
	gFuŒDu∂ex100
 : 
•ìd
 = 1; 
	gdu∂ex
 = 1; ;

68 
ëhî√t_£t_lök
(
•ìd
, 
du∂ex
);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\FileBase.cpp

16 
	~"FûeBa£.h
"

18 
«me•a˚
 
	gmbed
 {

20 
FûeBa£
 *
	gFûeBa£
::
_hód
 = 
NULL
;

22 
	gFûeBa£
::
FûeBa£
(c⁄° *
«me
, 
P©hTy≥
 
t
Ë: 
_√xt
(
NULL
),

23 
_«me
(
«me
),

24 
_∑th_ty≥
(
t
) {

25 i‡(
	g«me
 !
NULL
) {

27 
_√xt
 = 
_hód
;

28 
	g_hód
 = 
this
;

30 
	g_√xt
 = 
NULL
;

34 
	gFûeBa£
::~
FûeBa£
() {

35 i‡(
_«me
 !
NULL
) {

37 i‡(
_hód
 =
this
) {

38 
_hód
 = 
_√xt
;

40 
FûeBa£
 *
	gp
 = 
_hód
;

41 
	gp
->
	g_√xt
 !
this
) {

42 
p
 =Ö->
_√xt
;

44 
	gp
->
	g_√xt
 = 
_√xt
;

49 
FûeBa£
 *
	gFûeBa£
::
lookup
(c⁄° *
«me
, 
Àn
) {

50 
FûeBa£
 *
	gp
 = 
_hód
;

51 
	gp
 !
NULL
) {

53 i‡(
p
->
_«me
 !
NULL
 && 
°d
::
°∫cmp
’->_«me, 
«me
, 
Àn
Ë=0 && std::
°æí
(p->_name) ==Üen) {

54  
p
;

56 
	gp
 = 
p
->
_√xt
;

58  
	gNULL
;

61 
FûeBa£
 *
	gFûeBa£
::
gë
(
n
) {

62 
FûeBa£
 *
p
 = 
_hód
;

63 
	gm
 = 0;

64 
	gp
 !
NULL
) {

65 i‡(
m
 =
n
Ë 
p
;

67 
	gm
++;

68 
	gp
 = 
p
->
_√xt
;

70  
	gNULL
;

73 c⁄° * 
	gFûeBa£
::
gëName
() {

74  
_«me
;

77 
P©hTy≥
 
	gFûeBa£
::
gëP©hTy≥
() {

78  
_∑th_ty≥
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\FileLike.cpp

16 
	~"FûeLike.h
"

18 
«me•a˚
 
	gmbed
 {

20 
	gFûeLike
::
FûeLike
(c⁄° *
«me
Ë: 
FûeH™dÀ
(), 
FûeBa£
“ame, 
FûeP©hTy≥
) {

24 
	gFûeLike
::~
FûeLike
() {

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\FilePath.cpp

16 
	~"FûeP©h.h
"

18 
«me•a˚
 
	gmbed
 {

20 
	gFûeP©h
::
FûeP©h
(c⁄° * 
fûe_∑th
Ë: 
fûe_«me
(
NULL
), 
fb
(NULL) {

21 i‡((
	gfûe_∑th
[0] !'/'Ë|| (
fûe_∑th
[1] == 0)) ;

23 c⁄° * 
	gfûe_sy°em
 = &
fûe_∑th
[1];

24 
	gfûe_«me
 = 
fûe_sy°em
;

25 
	gÀn
 = 0;

26 
	gåue
) {

27 
	gc
 = *
fûe_«me
;

28 i‡(
	gc
 == '/') {

29 
fûe_«me
++;

32 i‡(
	gc
 == 0) {

35 
	gÀn
++;

36 
	gfûe_«me
++;

39 
	gfb
 = 
FûeBa£
::
lookup
(
fûe_sy°em
, 
Àn
);

42 c⁄° * 
	gFûeP©h
::
fûeName
() {

43  
fûe_«me
;

46 
boﬁ
 
	gFûeP©h
::
isFûeSy°em
() {

47 i‡(
NULL
 =
fb
)

48  
Ál£
;

49  (
	gfb
->
gëP©hTy≥
(Ë=
FûeSy°emP©hTy≥
);

52 
FûeSy°emLike
* 
	gFûeP©h
::
fûeSy°em
() {

53 i‡(
isFûeSy°em
()) {

54  (
FûeSy°emLike
*)
fb
;

56  
	gNULL
;

59 
boﬁ
 
	gFûeP©h
::
isFûe
() {

60 i‡(
NULL
 =
fb
)

61  
Ál£
;

62  (
	gfb
->
gëP©hTy≥
(Ë=
FûeP©hTy≥
);

65 
FûeLike
* 
	gFûeP©h
::
fûe
() {

66 i‡(
isFûe
()) {

67  (
FûeLike
*)
fb
;

69  
	gNULL
;

72 
boﬁ
 
	gFûeP©h
::
exi°s
() {

73  
fb
 !
NULL
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\FileSystemLike.cpp

16 
	~"FûeSy°emLike.h
"

18 
«me•a˚
 
	gmbed
 {

20 ˛as†
	cBa£DúH™dÀ
 : 
public
 
DúH™dÀ
 {

21 
public
:

29 
off_t
 
n
;

30 
dúít
 
	gcur_íåy
;

32 
Ba£DúH™dÀ
(Ë: 
n
(0), 
cur_íåy
() {

35 
vútuÆ
 
˛o£dú
() {

36 
dñëe
 
	gthis
;

40 
vútuÆ
 
dúít
 *
ªaddú
() {

41 
FûeBa£
 *
	g±r
 = FûeBa£::
gë
(
n
);

42 i‡(
	g±r
 =
NULL
)  NULL;

45 
	gn
++;

48 
	g°d
::
°∫˝y
(
cur_íåy
.
d_«me
, 
±r
->
gëName
(), 
NAME_MAX
);

49  &
	gcur_íåy
;

52 
vútuÆ
 
off_t
 
ãŒdú
() {

53  
	gn
;

56 
vútuÆ
 
£ekdú
(
off_t
 
off£t
) {

57 
	gn
 = 
off£t
;

60 
vútuÆ
 
ªwöddú
() {

61 
	gn
 = 0;

65 
	gFûeSy°emLike
::
	$FûeSy°emLike
(c⁄° *
«me
Ë: 
	$FûeBa£
(
«me
, 
FûeSy°emP©hTy≥
) {

67 
	}
}

69 
	gFûeSy°emLike
::~
	$FûeSy°emLike
() {

71 
	}
}

73 
DúH™dÀ
 *
FûeSy°emLike
::
	$›ídú
() {

74  
√w
 
	`Ba£DúH™dÀ
();

75 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\I2C.cpp

16 
	~"I2C.h
"

18 #i‡
DEVICE_I2C


20 
«me•a˚
 
	gmbed
 {

22 
I2C
 *
	gI2C
::
_ow√r
 = 
NULL
;

24 
	gI2C
::
I2C
(
PöName
 
sda
, PöNamê
s˛
) :

25 #i‡
DEVICE_I2C_ASYNCH


26 
_úq
(
this
), 
_ußge
(
DMA_USAGE_NEVER
),

28 
_i2c
(), 
_hz
(100000) {

30 
i2c_öô
(&
_i2c
, 
sda
, 
s˛
);

33 
	g_ow√r
 = 
this
;

36 
	gI2C
::
‰equícy
(
hz
) {

37 
_hz
 = 
hz
;

40 
i2c_‰equícy
(&
_i2c
, 
_hz
);

43 
	g_ow√r
 = 
this
;

46 
	gI2C
::
aquúe
() {

47 i‡(
_ow√r
 !
this
) {

48 
i2c_‰equícy
(&
_i2c
, 
_hz
);

49 
	g_ow√r
 = 
this
;

54 
	gI2C
::
wrôe
(
addªss
, c⁄° * 
d©a
, 
Àngth
, 
boﬁ
 
ª≥©ed
) {

55 
aquúe
();

57 
	g°›
 = (
ª≥©ed
) ? 0 : 1;

58 
	gwrôãn
 = 
i2c_wrôe
(&
_i2c
, 
addªss
, 
d©a
, 
Àngth
, 
°›
);

60  
	gÀngth
 !
wrôãn
;

63 
	gI2C
::
wrôe
(
d©a
) {

64  
i2c_byã_wrôe
(&
_i2c
, 
d©a
);

68 
	gI2C
::
ªad
(
addªss
, * 
d©a
, 
Àngth
, 
boﬁ
 
ª≥©ed
) {

69 
aquúe
();

71 
	g°›
 = (
ª≥©ed
) ? 0 : 1;

72 
	gªad
 = 
i2c_ªad
(&
_i2c
, 
addªss
, 
d©a
, 
Àngth
, 
°›
);

74  
	gÀngth
 !
ªad
;

77 
	gI2C
::
ªad
(
ack
) {

78 i‡(
ack
) {

79  
i2c_byã_ªad
(&
_i2c
, 0);

81  
i2c_byã_ªad
(&
_i2c
, 1);

85 
	gI2C
::
°¨t
() {

86 
i2c_°¨t
(&
_i2c
);

89 
	gI2C
::
°›
() {

90 
i2c_°›
(&
_i2c
);

93 #i‡
DEVICE_I2C_ASYNCH


95 
	gI2C
::
å™s„r
(
addªss
, c⁄° *
tx_buf„r
, 
tx_Àngth
, *
rx_buf„r
, 
rx_Àngth
, c⁄° 
evít_ˇŒback_t
& 
ˇŒback
, 
evít
, 
boﬁ
 
ª≥©ed
)

97 i‡(
i2c_a˘ive
(&
_i2c
)) {

100 
aquúe
();

102 
	g_ˇŒback
 = 
ˇŒback
;

103 
	g°›
 = (
ª≥©ed
) ? 0 : 1;

104 
	g_úq
.
ˇŒback
(&
I2C
::
úq_h™dÀr_asynch
);

105 
i2c_å™s„r_asynch
(&
_i2c
, (*)
tx_buf„r
, 
tx_Àngth
, (*)
rx_buf„r
, 
rx_Àngth
, 
addªss
, 
°›
, 
_úq
.
íåy
(), 
evít
, 
_ußge
);

109 
	gI2C
::
ab‹t_å™s„r
()

111 
i2c_ab‹t_asynch
(&
_i2c
);

114 
	gI2C
::
úq_h™dÀr_asynch
()

116 
evít
 = 
i2c_úq_h™dÀr_asynch
(&
_i2c
);

117 i‡(
	g_ˇŒback
 && 
	gevít
) {

118 
	g_ˇŒback
.
ˇŒ
(
evít
);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\I2CSlave.cpp

16 
	~"I2CSœve.h
"

18 #i‡
DEVICE_I2CSLAVE


20 
«me•a˚
 
	gmbed
 {

22 
	gI2CSœve
::
I2CSœve
(
PöName
 
sda
, PöNamê
s˛
Ë: 
_i2c
() {

23 
i2c_öô
(&
_i2c
, 
sda
, 
s˛
);

24 
i2c_‰equícy
(&
_i2c
, 100000);

25 
i2c_¶ave_mode
(&
_i2c
, 1);

28 
	gI2CSœve
::
‰equícy
(
hz
) {

29 
i2c_‰equícy
(&
_i2c
, 
hz
);

32 
	gI2CSœve
::
addªss
(address) {

33 
addr
 = (
addªss
 & 0xFF) | 1;

34 
i2c_¶ave_addªss
(&
_i2c
, 0, 
addr
, 0);

37 
	gI2CSœve
::
ª˚ive
() {

38  
i2c_¶ave_ª˚ive
(&
_i2c
);

41 
	gI2CSœve
::
ªad
(*
d©a
, 
Àngth
) {

42  
i2c_¶ave_ªad
(&
_i2c
, 
d©a
, 
Àngth
) !=Üength;

45 
	gI2CSœve
::
ªad
() {

46  
i2c_byã_ªad
(&
_i2c
, 0);

49 
	gI2CSœve
::
wrôe
(c⁄° *
d©a
, 
Àngth
) {

50  
i2c_¶ave_wrôe
(&
_i2c
, 
d©a
, 
Àngth
) !=Üength;

53 
	gI2CSœve
::
wrôe
(
d©a
) {

54  
i2c_byã_wrôe
(&
_i2c
, 
d©a
);

57 
	gI2CSœve
::
°›
() {

58 
i2c_°›
(&
_i2c
);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\InterruptIn.cpp

16 
	~"I¡îru±In.h
"

18 #i‡
DEVICE_INTERRUPTIN


20 
«me•a˚
 
	gmbed
 {

22 
	gI¡îru±In
::
I¡îru±In
(
PöName
 
pö
Ë: 
gpio
(),

23 
gpio_úq
(),

24 
_ri£
(),

25 
_ÁŒ
() {

26 
gpio_úq_öô
(&
gpio_úq
, 
pö
, (&
I¡îru±In
::
_úq_h™dÀr
), (
uöt32_t
)
this
);

27 
gpio_öô_ö
(&
gpio
, 
pö
);

30 
	gI¡îru±In
::~
I¡îru±In
() {

31 
gpio_úq_‰ì
(&
gpio_úq
);

34 
	gI¡îru±In
::
ªad
() {

35  
gpio_ªad
(&
gpio
);

38 
	gI¡îru±In
::
mode
(
PöMode
 
puŒ
) {

39 
gpio_mode
(&
gpio
, 
puŒ
);

42 
	gI¡îru±In
::
ri£
((*
Âå
)()) {

43 i‡(
Âå
) {

44 
_ri£
.
©èch
(
Âå
);

45 
gpio_úq_£t
(&
gpio_úq
, 
IRQ_RISE
, 1);

47 
gpio_úq_£t
(&
gpio_úq
, 
IRQ_RISE
, 0);

51 
	gI¡îru±In
::
ÁŒ
((*
Âå
)()) {

52 i‡(
Âå
) {

53 
_ÁŒ
.
©èch
(
Âå
);

54 
gpio_úq_£t
(&
gpio_úq
, 
IRQ_FALL
, 1);

56 
gpio_úq_£t
(&
gpio_úq
, 
IRQ_FALL
, 0);

60 
	gI¡îru±In
::
_úq_h™dÀr
(
uöt32_t
 
id
, 
gpio_úq_evít
 
evít
) {

61 
I¡îru±In
 *
	gh™dÀr
 = (I¡îru±In*)
id
;

62 
	gevít
) {

63 
	gIRQ_RISE
: 
h™dÀr
->
_ri£
.
ˇŒ
(); ;

64 
	gIRQ_FALL
: 
h™dÀr
->
_ÁŒ
.
ˇŒ
(); ;

65 
	gIRQ_NONE
: ;

69 
	gI¡îru±In
::
íabÀ_úq
() {

70 
gpio_úq_íabÀ
(&
gpio_úq
);

73 
	gI¡îru±In
::
dißbÀ_úq
() {

74 
gpio_úq_dißbÀ
(&
gpio_úq
);

77 #ifde‡
MBED_OPERATORS


78 
	gI¡îru±In
::
›î©‹
 () {

79  
ªad
();

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\InterruptManager.cpp

1 
	~"cmsis.h
"

2 #i‡
deföed
(
NVIC_NUM_VECTORS
)

4 
	~"I¡îru±M™agî.h
"

5 
	~<°rög.h
>

7 
	#CHAIN_INITIAL_SIZE
 4

	)

9 
«me•a˚
 
	gmbed
 {

11 (*
	gpvoidf
)();

13 
I¡îru±M™agî
* 
	gI¡îru±M™agî
::
_ö°™˚
 = (I¡îru±M™agî*)
NULL
;

15 
I¡îru±M™agî
* 
	gI¡îru±M™agî
::
gë
() {

16 i‡(
NULL
 =
_ö°™˚
)

17 
_ö°™˚
 = 
√w
 
I¡îru±M™agî
();

18  
	g_ö°™˚
;

21 
	gI¡îru±M™agî
::
I¡îru±M™agî
() {

22 
mem£t
(
_chaös
, 0, 
NVIC_NUM_VECTORS
 * (
CÆlChaö
*));

25 
	gI¡îru±M™agî
::
de°roy
() {

29 i‡(
NULL
 !
_ö°™˚
) {

30 
dñëe
 
_ö°™˚
;

31 
	g_ö°™˚
 = (
I¡îru±M™agî
*)
NULL
;

35 
	gI¡îru±M™agî
::~
I¡îru±M™agî
() {

36 
i
 = 0; 
	gi
 < 
	gNVIC_NUM_VECTORS
; i++)

37 i‡(
	gNULL
 !
_chaös
[
i
])

38 
dñëe
 
_chaös
[
i
];

41 
boﬁ
 
	gI¡îru±M™agî
::
mu°_ª∂a˚_ve˘‹
(
IRQn_Ty≥
 
úq
) {

42 
úq_pos
 = 
gë_úq_ödex
(
úq
);

44 i‡(
	gNULL
 =
_chaös
[
úq_pos
]) {

45 
_chaös
[
úq_pos
] = 
√w
 
CÆlChaö
(
CHAIN_INITIAL_SIZE
);

46 
	g_chaös
[
úq_pos
]->
add
((
pvoidf
)
NVIC_GëVe˘‹
(
úq
));

47  
	gåue
;

49  
	gÁl£
;

52 
pFun˘i⁄Poöãr_t
 
	gI¡îru±M™agî
::
add_comm⁄
((*
fun˘i⁄
)(), 
IRQn_Ty≥
 
úq
, 
boﬁ
 
‰⁄t
) {

53 
	gúq_pos
 = 
gë_úq_ödex
(
úq
);

54 
boﬁ
 
	gch™ge
 = 
mu°_ª∂a˚_ve˘‹
(
úq
);

56 
pFun˘i⁄Poöãr_t
 
	gpf
 = 
‰⁄t
 ? 
_chaös
[
úq_pos
]->
add_‰⁄t
(
fun˘i⁄
Ë: _chaös[úq_pos]->
add
(function);

57 i‡(
	gch™ge
)

58 
NVIC_SëVe˘‹
(
úq
, (
uöt32_t
)&
I¡îru±M™agî
::
°©ic_úq_hñ≥r
);

59  
	gpf
;

62 
boﬁ
 
	gI¡îru±M™agî
::
ªmove_h™dÀr
(
pFun˘i⁄Poöãr_t
 
h™dÀr
, 
IRQn_Ty≥
 
úq
) {

63 
	gúq_pos
 = 
gë_úq_ödex
(
úq
);

65 i‡(
	gNULL
 =
_chaös
[
úq_pos
])

66  
Ál£
;

67 i‡(!
	g_chaös
[
úq_pos
]->
ªmove
(
h™dÀr
))

68  
	gÁl£
;

71 i‡(
	g_chaös
[
úq_pos
]->
size
(Ë=1 && 
NULL
 !
_chaös
[úq_pos]->
gë
(0)->
gë_fun˘i⁄
()) {

72 
NVIC_SëVe˘‹
(
úq
, (
uöt32_t
)
_chaös
[
úq_pos
]->
gë
(0)->
gë_fun˘i⁄
());

73 
dñëe
 
	g_chaös
[
úq_pos
];

74 
	g_chaös
[
úq_pos
] = (
CÆlChaö
*Ë
NULL
;

76  
	gåue
;

79 
	gI¡îru±M™agî
::
úq_hñ≥r
() {

80 
_chaös
[
__gë_IPSR
()]->
ˇŒ
();

83 
	gI¡îru±M™agî
::
gë_úq_ödex
(
IRQn_Ty≥
 
úq
) {

84  ()
úq
 + 
NVIC_USER_IRQ_OFFSET
;

87 
	gI¡îru±M™agî
::
°©ic_úq_hñ≥r
() {

88 
I¡îru±M™agî
::
gë
()->
úq_hñ≥r
();

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\LocalFileSystem.cpp

16 
	~"LoˇlFûeSy°em.h
"

18 #i‡
DEVICE_LOCALFILESYSTEM


20 
	~"£miho°_≠i.h
"

21 
	~<°rög.h
>

22 
	~<°dio.h
>

24 
«me•a˚
 
	gmbed
 {

28 
	ghr
;

29 
	gmö
;

30 
	g£c
;

31 
	gday
;

32 
	gm⁄
;

33 
	gyór
;

34 } 
	tFTIME
;

37 
	g«me
[32];

38 
	gsize
;

39 
	gfûeID
;

40 
FTIME
 
	g¸óã_time
;

41 
FTIME
 
	gwrôe_time
;

42 } 
	tXFINFO
;

44 
	#RESERVED_FOR_USER_APPLICATIONS
 (0x100Ë

	)

45 
	#USR_XFFIND
 (
RESERVED_FOR_USER_APPLICATIONS
 + 0)

	)

47 
xfföd
 (c⁄° *
∑âîn
, 
XFINFO
 *
öfo
) {

48 
	g∑øm
[4];

50 
	g∑øm
[0] = ()
∑âîn
;

51 
	g∑øm
[1] = ()
°æí
(
∑âîn
);

52 
	g∑øm
[2] = ()
öfo
;

53 
	g∑øm
[3] = ()(
XFINFO
);

55  
__£miho°
(
USR_XFFIND
, 
∑øm
);

58 
	#OPEN_R
 0

	)

59 
	#OPEN_B
 1

	)

60 
	#OPEN_PLUS
 2

	)

61 
	#OPEN_W
 4

	)

62 
	#OPEN_A
 8

	)

63 
	#OPEN_INVALID
 -1

	)

65 
posix_to_£miho°_›í_Êags
(
Êags
) {

67 
	g›ímode
;

68 i‡(
	gÊags
 & 
	gO_RDWR
) {

70 
	g›ímode
 = 
OPEN_PLUS
;

71 i‡(
	gÊags
 & 
	gO_APPEND
) {

72 
	g›ímode
 |
OPEN_A
;

73 } i‡(
	gÊags
 & 
	gO_TRUNC
) {

74 
	g›ímode
 |
OPEN_W
;

76 
	g›ímode
 |
OPEN_R
;

78 } i‡(
	gÊags
 & 
	gO_WRONLY
) {

80 i‡(
	gÊags
 & 
	gO_APPEND
) {

81 
	g›ímode
 = 
OPEN_A
;

83 
	g›ímode
 = 
OPEN_W
;

85 } i‡(
	gÊags
 =
O_RDONLY
) {

87 
›ímode
 = 
OPEN_R
;

90 
	g›ímode
 = 
OPEN_INVALID
;

93  
	g›ímode
;

96 
FILEHANDLE
 
loˇl_fûe_›í
(c⁄° * 
«me
, 
Êags
) {

97 
	g›ímode
 = 
posix_to_£miho°_›í_Êags
(
Êags
);

98 i‡(
	g›ímode
 =
OPEN_INVALID
) {

99  (
FILEHANDLE
)
NULL
;

102 
FILEHANDLE
 
	gfh
 = 
£miho°_›í
(
«me
, 
›ímode
);

103 i‡(
	gfh
 == -1) {

104  (
FILEHANDLE
)
NULL
;

107  
	gfh
;

110 
	gLoˇlFûeH™dÀ
::
LoˇlFûeH™dÀ
(
FILEHANDLE
 
fh
Ë: 
_fh
(fh), 
pos
(0) {

113 
	gLoˇlFûeH™dÀ
::
˛o£
() {

114 
ªtvÆ
 = 
£miho°_˛o£
(
_fh
);

115 
dñëe
 
	gthis
;

116  
	gªtvÆ
;

119 
ssize_t
 
	gLoˇlFûeH™dÀ
::
wrôe
(c⁄° *
buf„r
, 
size_t
 
Àngth
) {

120 
ssize_t
 
	gn
 = 
£miho°_wrôe
(
_fh
, (c⁄° *)
buf„r
, 
Àngth
, 0);

121 
	gn
 = 
Àngth
 - 
n
;

122 
	gpos
 +
n
;

123  
	gn
;

126 
ssize_t
 
	gLoˇlFûeH™dÀ
::
ªad
(*
buf„r
, 
size_t
 
Àngth
) {

127 
ssize_t
 
	gn
 = 
£miho°_ªad
(
_fh
, (*)
buf„r
, 
Àngth
, 0);

128 
	gn
 = 
Àngth
 - 
n
;

129 
	gpos
 +
n
;

130  
	gn
;

133 
	gLoˇlFûeH™dÀ
::
ißây
() {

134  
£miho°_i°ty
(
_fh
);

137 
off_t
 
	gLoˇlFûeH™dÀ
::
l£ek
(off_à
posôi⁄
, 
whí˚
) {

138 i‡(
	gwhí˚
 =
SEEK_CUR
) {

139 
posôi⁄
 +
pos
;

140 } i‡(
	gwhí˚
 =
SEEK_END
) {

141 
posôi⁄
 +
£miho°_Êí
(
_fh
);

145 
£miho°_£ek
(
_fh
, 
posôi⁄
);

146 
	gpos
 = 
posôi⁄
;

147  
	gposôi⁄
;

150 
	gLoˇlFûeH™dÀ
::
fsync
() {

151  
£miho°_ísuª
(
_fh
);

154 
off_t
 
	gLoˇlFûeH™dÀ
::
Êí
() {

155  
£miho°_Êí
(
_fh
);

158 ˛as†
	cLoˇlDúH™dÀ
 : 
public
 
DúH™dÀ
 {

160 
public
:

161 
dúít
 
cur_íåy
;

162 
XFINFO
 
	göfo
;

164 
LoˇlDúH™dÀ
(Ë: 
cur_íåy
(), 
öfo
() {

167 
vútuÆ
 
˛o£dú
() {

168 
dñëe
 
	gthis
;

172 
vútuÆ
 
dúít
 *
ªaddú
() {

173 i‡(
xfföd
("*", &
öfo
)!=0) {

174  
NULL
;

176 
mem˝y
(
cur_íåy
.
d_«me
, 
öfo
.
«me
, (info.name));

177  &
	gcur_íåy
;

180 
vútuÆ
 
ªwöddú
() {

181 
	göfo
.
	gfûeID
 = 0;

184 
vútuÆ
 
off_t
 
ãŒdú
() {

185  
	göfo
.
	gfûeID
;

188 
vútuÆ
 
£ekdú
(
off_t
 
off£t
) {

189 
	göfo
.
	gfûeID
 = 
off£t
;

193 
FûeH™dÀ
 *
	gLoˇlFûeSy°em
::
	$›í
(c⁄° * 
«me
, 
Êags
) {

195 c⁄° *
tmp
 = 
«me
; *tmp;Åmp++) {

196 i‡(*
tmp
 == '/') {

197  
NULL
;

201 
›ímode
 = 
	`posix_to_£miho°_›í_Êags
(
Êags
);

202 i‡(
›ímode
 =
OPEN_INVALID
) {

203  
NULL
;

206 
FILEHANDLE
 
fh
 = 
	`£miho°_›í
(
«me
, 
›ímode
);

207 i‡(
fh
 == -1) {

208  
NULL
;

210  
√w
 
	`LoˇlFûeH™dÀ
(
fh
);

211 
	}
}

213 
	gLoˇlFûeSy°em
::
	$ªmove
(c⁄° *
fûíame
) {

214  
	`£miho°_ªmove
(
fûíame
);

215 
	}
}

217 
DúH™dÀ
 *
	gLoˇlFûeSy°em
::
	$›ídú
(c⁄° *
«me
) {

218  
√w
 
	`LoˇlDúH™dÀ
();

219 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\RawSerial.cpp

16 
	~"RawSîül.h
"

17 
	~"waô_≠i.h
"

18 
	~<c°d¨g
>

20 #i‡
DEVICE_SERIAL


22 
	#STRING_STACK_LIMIT
 120

	)

24 
«me•a˚
 
	gmbed
 {

26 
	gRawSîül
::
RawSîül
(
PöName
 
tx
, PöNamê
rx
Ë: 
SîülBa£
(tx,Ñx) {

29 
	gRawSîül
::
gëc
() {

30  
_ba£_gëc
();

33 
	gRawSîül
::
putc
(
c
) {

34  
_ba£_putc
(
c
);

37 
	gRawSîül
::
puts
(c⁄° *
°r
) {

38 *
°r
)

39 
putc
(*
°r
 ++);

47 
	gRawSîül
::
¥ötf
(c⁄° *
f‹m©
, ...) {

48 
	g°d
::
va_li°
 
¨g
;

49 
va_°¨t
(
¨g
, 
f‹m©
);

50 
	gÀn
 = 
v¢¥ötf
(
NULL
, 0, 
f‹m©
, 
¨g
);

51 i‡(
	gÀn
 < 
	gSTRING_STACK_LIMIT
) {

52 
	gãmp
[
STRING_STACK_LIMIT
];

53 
v•rötf
(
ãmp
, 
f‹m©
, 
¨g
);

54 
puts
(
ãmp
);

56 *
	gãmp
 = 
√w
 [
Àn
 + 1];

57 
v•rötf
(
ãmp
, 
f‹m©
, 
¨g
);

58 
puts
(
ãmp
);

59 
	gdñëe
[] 
	gãmp
;

61 
va_íd
(
¨g
);

62  
	gÀn
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\SPI.cpp

16 
	~"SPI.h
"

18 #i‡
DEVICE_SPI


20 
«me•a˚
 
	gmbed
 {

22 #i‡
DEVICE_SPI_ASYNCH
 && 
TRANSACTION_QUEUE_SIZE_SPI


23 
	gCúcuœrBuf„r
<
	gTønß˘i⁄
<
	gSPI
>, 
	gTRANSACTION_QUEUE_SIZE_SPI
> SPI::
_å™ß˘i⁄_buf„r
;

26 
	gSPI
::
SPI
(
PöName
 
mosi
, PöNamê
miso
, PöNamê
s˛k
, PöNamê
s£l
) :

27 
_•i
(),

28 #i‡
DEVICE_SPI_ASYNCH


29 
_úq
(
this
),

30 
_ußge
(
DMA_USAGE_NEVER
),

32 
_bôs
(8),

33 
_mode
(0),

34 
_hz
(1000000) {

35 
•i_öô
(&
_•i
, 
mosi
, 
miso
, 
s˛k
, 
s£l
);

36 
•i_f‹m©
(&
_•i
, 
_bôs
, 
_mode
, 0);

37 
•i_‰equícy
(&
_•i
, 
_hz
);

40 
	gSPI
::
f‹m©
(
bôs
, 
mode
) {

41 
	g_bôs
 = 
bôs
;

42 
	g_mode
 = 
mode
;

43 
	gSPI
::
_ow√r
 = 
NULL
;

44 
aquúe
();

47 
	gSPI
::
‰equícy
(
hz
) {

48 
_hz
 = 
hz
;

49 
	gSPI
::
_ow√r
 = 
NULL
;

50 
aquúe
();

53 
SPI
* 
	gSPI
::
_ow√r
 = 
NULL
;

56 
	gSPI
::
aquúe
() {

57 i‡(
_ow√r
 !
this
) {

58 
•i_f‹m©
(&
_•i
, 
_bôs
, 
_mode
, 0);

59 
•i_‰equícy
(&
_•i
, 
_hz
);

60 
	g_ow√r
 = 
this
;

64 
	gSPI
::
wrôe
(
vÆue
) {

65 
aquúe
();

66  
•i_ma°î_wrôe
(&
_•i
, 
vÆue
);

69 #i‡
DEVICE_SPI_ASYNCH


71 
	gSPI
::
å™s„r
(c⁄° *
tx_buf„r
, 
tx_Àngth
, *
rx_buf„r
, 
rx_Àngth
, 
bô_width
, c⁄° 
evít_ˇŒback_t
& 
ˇŒback
, 
evít
)

73 i‡(
•i_a˘ive
(&
_•i
)) {

74  
queue_å™s„r
(
tx_buf„r
, 
tx_Àngth
, 
rx_buf„r
, 
rx_Àngth
, 
bô_width
, 
ˇŒback
, 
evít
);

76 
°¨t_å™s„r
(
tx_buf„r
, 
tx_Àngth
, 
rx_buf„r
, 
rx_Àngth
, 
bô_width
, 
ˇŒback
, 
evít
);

80 
	gSPI
::
ab‹t_å™s„r
()

82 
•i_ab‹t_asynch
(&
_•i
);

83 #i‡
TRANSACTION_QUEUE_SIZE_SPI


84 
dequeue_å™ß˘i⁄
();

89 
	gSPI
::
˛ór_å™s„r_buf„r
()

91 #i‡
TRANSACTION_QUEUE_SIZE_SPI


92 
_å™ß˘i⁄_buf„r
.
ª£t
();

96 
	gSPI
::
ab‹t_Æl_å™s„rs
()

98 
˛ór_å™s„r_buf„r
();

99 
ab‹t_å™s„r
();

102 
	gSPI
::
£t_dma_ußge
(
DMAUßge
 
ußge
)

104 i‡(
•i_a˘ive
(&
_•i
)) {

107 
	g_ußge
 = 
ußge
;

111 
	gSPI
::
queue_å™s„r
(c⁄° *
tx_buf„r
, 
tx_Àngth
, *
rx_buf„r
, 
rx_Àngth
, 
bô_width
, c⁄° 
evít_ˇŒback_t
& 
ˇŒback
, 
evít
)

113 #i‡
TRANSACTION_QUEUE_SIZE_SPI


114 
å™ß˘i⁄_t
 
	gt
;

116 
	gt
.
	gtx_buf„r
 = 
c⁄°_ˇ°
<*>(
tx_buf„r
);

117 
	gt
.
	gtx_Àngth
 = 
tx_Àngth
;

118 
	gt
.
	grx_buf„r
 = 
rx_buf„r
;

119 
	gt
.
	grx_Àngth
 = 
rx_Àngth
;

120 
	gt
.
	gevít
 = 
evít
;

121 
	gt
.
	gˇŒback
 = 
ˇŒback
;

122 
	gt
.
	gwidth
 = 
bô_width
;

123 
	gTønß˘i⁄
<
	gSPI
> 
å™ß˘i⁄
(
this
, 
t
);

124 i‡(
	g_å™ß˘i⁄_buf„r
.
fuŒ
()) {

127 
	g_å™ß˘i⁄_buf„r
.
push
(
å™ß˘i⁄
);

135 
	gSPI
::
°¨t_å™s„r
(c⁄° *
tx_buf„r
, 
tx_Àngth
, *
rx_buf„r
, 
rx_Àngth
, 
bô_width
, c⁄° 
evít_ˇŒback_t
& 
ˇŒback
, 
evít
)

137 
aquúe
();

138 
	g_ˇŒback
 = 
ˇŒback
;

139 
	g_úq
.
ˇŒback
(&
SPI
::
úq_h™dÀr_asynch
);

140 
•i_ma°î_å™s„r
(&
_•i
, 
tx_buf„r
, 
tx_Àngth
, 
rx_buf„r
, 
rx_Àngth
, 
bô_width
, 
_úq
.
íåy
(), 
evít
 , 
_ußge
);

143 #i‡
TRANSACTION_QUEUE_SIZE_SPI


145 
	gSPI
::
°¨t_å™ß˘i⁄
(
å™ß˘i⁄_t
 *
d©a
)

147 
°¨t_å™s„r
(
d©a
->
tx_buf„r
, d©a->
tx_Àngth
, d©a->
rx_buf„r
, d©a->
rx_Àngth
, d©a->
width
, d©a->
ˇŒback
, d©a->
evít
);

150 
	gSPI
::
dequeue_å™ß˘i⁄
()

152 
Tønß˘i⁄
<
SPI
> 
t
;

153 i‡(
	g_å™ß˘i⁄_buf„r
.
p›
(
t
)) {

154 
SPI
* 
	gobj
 = 
t
.
gë_obje˘
();

155 
å™ß˘i⁄_t
* 
	gd©a
 = 
t
.
gë_å™ß˘i⁄
();

156 
	gobj
->
°¨t_å™ß˘i⁄
(
d©a
);

162 
	gSPI
::
úq_h™dÀr_asynch
()

164 
evít
 = 
•i_úq_h™dÀr_asynch
(&
_•i
);

165 i‡(
	g_ˇŒback
 && (
	gevít
 & 
	gSPI_EVENT_ALL
)) {

166 
	g_ˇŒback
.
ˇŒ
(
evít
 & 
SPI_EVENT_ALL
);

168 #i‡
TRANSACTION_QUEUE_SIZE_SPI


169 i‡(
	gevít
 & (
	gSPI_EVENT_ALL
 | 
	gSPI_EVENT_INTERNAL_TRANSFER_COMPLETE
)) {

171 
dequeue_å™ß˘i⁄
();

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\SPISlave.cpp

16 
	~"SPISœve.h
"

18 #i‡
DEVICE_SPISLAVE


20 
«me•a˚
 
	gmbed
 {

22 
	gSPISœve
::
SPISœve
(
PöName
 
mosi
, PöNamê
miso
, PöNamê
s˛k
, PöNamê
s£l
) :

23 
_•i
(),

24 
_bôs
(8),

25 
_mode
(0),

26 
_hz
(1000000)

28 
•i_öô
(&
_•i
, 
mosi
, 
miso
, 
s˛k
, 
s£l
);

29 
•i_f‹m©
(&
_•i
, 
_bôs
, 
_mode
, 1);

30 
•i_‰equícy
(&
_•i
, 
_hz
);

33 
	gSPISœve
::
f‹m©
(
bôs
, 
mode
) {

34 
	g_bôs
 = 
bôs
;

35 
	g_mode
 = 
mode
;

36 
•i_f‹m©
(&
_•i
, 
_bôs
, 
_mode
, 1);

39 
	gSPISœve
::
‰equícy
(
hz
) {

40 
_hz
 = 
hz
;

41 
•i_‰equícy
(&
_•i
, 
_hz
);

44 
	gSPISœve
::
ª˚ive
() {

45 (
•i_¶ave_ª˚ive
(&
_•i
));

48 
	gSPISœve
::
ªad
() {

49 (
•i_¶ave_ªad
(&
_•i
));

52 
	gSPISœve
::
ª∂y
(
vÆue
) {

53 
•i_¶ave_wrôe
(&
_•i
, 
vÆue
);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\Serial.cpp

16 
	~"Sîül.h
"

17 
	~"waô_≠i.h
"

19 #i‡
DEVICE_SERIAL


21 
«me•a˚
 
	gmbed
 {

23 
	gSîül
::
Sîül
(
PöName
 
tx
, PöNamê
rx
, c⁄° *
«me
Ë: 
SîülBa£
—x,Ñx), 
Såóm
(name) {

26 
	gSîül
::
_gëc
() {

27  
_ba£_gëc
();

30 
	gSîül
::
_putc
(
c
) {

31  
_ba£_putc
(
c
);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\SerialBase.cpp

16 
	~"SîülBa£.h
"

17 
	~"waô_≠i.h
"

19 #i‡
DEVICE_SERIAL


21 
«me•a˚
 
	gmbed
 {

23 
	gSîülBa£
::
SîülBa£
(
PöName
 
tx
, PöNamê
rx
) :

24 #i‡
DEVICE_SERIAL_ASYNCH


25 
_thunk_úq
(
this
), 
_tx_ußge
(
DMA_USAGE_NEVER
),

26 
_rx_ußge
(
DMA_USAGE_NEVER
),

28 
_£rül
(), 
_baud
(9600) {

29 
£rül_öô
(&
_£rül
, 
tx
, 
rx
);

30 
£rül_úq_h™dÀr
(&
_£rül
, 
SîülBa£
::
_úq_h™dÀr
, (
uöt32_t
)
this
);

33 
	gSîülBa£
::
baud
(
baudøã
) {

34 
£rül_baud
(&
_£rül
, 
baudøã
);

35 
	g_baud
 = 
baudøã
;

38 
	gSîülBa£
::
f‹m©
(
bôs
, 
P¨ôy
 
∑rôy
, 
°›_bôs
) {

39 
£rül_f‹m©
(&
_£rül
, 
bôs
, (
SîülP¨ôy
)
∑rôy
, 
°›_bôs
);

42 
	gSîülBa£
::
ªadabÀ
() {

43  
£rül_ªadabÀ
(&
_£rül
);

47 
	gSîülBa£
::
wrôóbÀ
() {

48  
£rül_wrôabÀ
(&
_£rül
);

51 
	gSîülBa£
::
©èch
((*
Âå
)(), 
IrqTy≥
 
ty≥
) {

52 i‡(
	gÂå
) {

53 
	g_úq
[
ty≥
].
©èch
(
Âå
);

54 
£rül_úq_£t
(&
_£rül
, (
SîülIrq
)
ty≥
, 1);

56 
£rül_úq_£t
(&
_£rül
, (
SîülIrq
)
ty≥
, 0);

60 
	gSîülBa£
::
_úq_h™dÀr
(
uöt32_t
 
id
, 
SîülIrq
 
úq_ty≥
) {

61 
SîülBa£
 *
	gh™dÀr
 = (SîülBa£*)
id
;

62 
	gh™dÀr
->
	g_úq
[
úq_ty≥
].
ˇŒ
();

65 
	gSîülBa£
::
_ba£_gëc
() {

66  
£rül_gëc
(&
_£rül
);

69 
	gSîülBa£
::
_ba£_putc
(
c
) {

70 
£rül_putc
(&
_£rül
, 
c
);

71  
	gc
;

74 
	gSîülBa£
::
£nd_bªak
() {

83 
£rül_bªak_£t
(&
_£rül
);

84 
waô_us
(18000000/
_baud
);

85 
£rül_bªak_˛ór
(&
_£rül
);

88 #i‡
DEVICE_SERIAL_FC


89 
	gSîülBa£
::
£t_Êow_c⁄åﬁ
(
Flow
 
ty≥
, 
PöName
 
Êow1
, PöNamê
Êow2
) {

90 
FlowC⁄åﬁ
 
	gÊow_ty≥
 = (FlowC⁄åﬁ)
ty≥
;

91 
	gty≥
) {

92 
	gRTS
:

93 
£rül_£t_Êow_c⁄åﬁ
(&
_£rül
, 
Êow_ty≥
, 
Êow1
, 
NC
);

96 
	gCTS
:

97 
£rül_£t_Êow_c⁄åﬁ
(&
_£rül
, 
Êow_ty≥
, 
NC
, 
Êow1
);

100 
	gRTSCTS
:

101 
DißbÀd
:

102 
£rül_£t_Êow_c⁄åﬁ
(&
_£rül
, 
Êow_ty≥
, 
Êow1
, 
Êow2
);

111 #i‡
DEVICE_SERIAL_ASYNCH


113 
	gSîülBa£
::
wrôe
(c⁄° 
uöt8_t
 *
buf„r
, 
Àngth
, c⁄° 
evít_ˇŒback_t
& 
ˇŒback
, 
evít
)

115 i‡(
£rül_tx_a˘ive
(&
_£rül
)) {

118 
°¨t_wrôe
((*)
buf„r
, 
Àngth
, 8, 
ˇŒback
, 
evít
);

122 
	gSîülBa£
::
wrôe
(c⁄° 
uöt16_t
 *
buf„r
, 
Àngth
, c⁄° 
evít_ˇŒback_t
& 
ˇŒback
, 
evít
)

124 i‡(
£rül_tx_a˘ive
(&
_£rül
)) {

127 
°¨t_wrôe
((*)
buf„r
, 
Àngth
, 16, 
ˇŒback
, 
evít
);

131 
	gSîülBa£
::
°¨t_wrôe
(c⁄° *
buf„r
, 
buf„r_size
, 
buf„r_width
, c⁄° 
evít_ˇŒback_t
& 
ˇŒback
, 
evít
)

133 
	g_tx_ˇŒback
 = 
ˇŒback
;

135 
	g_thunk_úq
.
ˇŒback
(&
SîülBa£
::
öãºu±_h™dÀr_asynch
);

136 
£rül_tx_asynch
(&
_£rül
, 
buf„r
, 
buf„r_size
, 
buf„r_width
, 
_thunk_úq
.
íåy
(), 
evít
, 
_tx_ußge
);

139 
	gSîülBa£
::
ab‹t_wrôe
()

141 
£rül_tx_ab‹t_asynch
(&
_£rül
);

144 
	gSîülBa£
::
ab‹t_ªad
()

146 
£rül_rx_ab‹t_asynch
(&
_£rül
);

149 
	gSîülBa£
::
£t_dma_ußge_tx
(
DMAUßge
 
ußge
)

151 i‡(
£rül_tx_a˘ive
(&
_£rül
)) {

154 
	g_tx_ußge
 = 
ußge
;

158 
	gSîülBa£
::
£t_dma_ußge_rx
(
DMAUßge
 
ußge
)

160 i‡(
£rül_tx_a˘ive
(&
_£rül
)) {

163 
	g_rx_ußge
 = 
ußge
;

167 
	gSîülBa£
::
ªad
(
uöt8_t
 *
buf„r
, 
Àngth
, c⁄° 
evít_ˇŒback_t
& 
ˇŒback
, 
evít
, 
ch¨_m©ch
)

169 i‡(
£rül_rx_a˘ive
(&
_£rül
)) {

172 
°¨t_ªad
((*)
buf„r
, 
Àngth
, 8, 
ˇŒback
, 
evít
, 
ch¨_m©ch
);

177 
	gSîülBa£
::
ªad
(
uöt16_t
 *
buf„r
, 
Àngth
, c⁄° 
evít_ˇŒback_t
& 
ˇŒback
, 
evít
, 
ch¨_m©ch
)

179 i‡(
£rül_rx_a˘ive
(&
_£rül
)) {

182 
°¨t_ªad
((*)
buf„r
, 
Àngth
, 16, 
ˇŒback
, 
evít
, 
ch¨_m©ch
);

187 
	gSîülBa£
::
°¨t_ªad
(*
buf„r
, 
buf„r_size
, 
buf„r_width
, c⁄° 
evít_ˇŒback_t
& 
ˇŒback
, 
evít
, 
ch¨_m©ch
)

189 
	g_rx_ˇŒback
 = 
ˇŒback
;

190 
	g_thunk_úq
.
ˇŒback
(&
SîülBa£
::
öãºu±_h™dÀr_asynch
);

191 
£rül_rx_asynch
(&
_£rül
, 
buf„r
, 
buf„r_size
, 
buf„r_width
, 
_thunk_úq
.
íåy
(), 
evít
, 
ch¨_m©ch
, 
_rx_ußge
);

194 
	gSîülBa£
::
öãºu±_h™dÀr_asynch
()

196 
evít
 = 
£rül_úq_h™dÀr_asynch
(&
_£rül
);

197 
	grx_evít
 = 
evít
 & 
SERIAL_EVENT_RX_MASK
;

198 i‡(
	g_rx_ˇŒback
 && 
	grx_evít
) {

199 
	g_rx_ˇŒback
.
ˇŒ
(
rx_evít
);

202 
	gtx_evít
 = 
evít
 & 
SERIAL_EVENT_TX_MASK
;

203 i‡(
	g_tx_ˇŒback
 && 
	gtx_evít
) {

204 
	g_tx_ˇŒback
.
ˇŒ
(
tx_evít
);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\Stream.cpp

16 
	~"Såóm.h
"

18 
	~<c°d¨g
>

20 
«me•a˚
 
	gmbed
 {

22 
	gSåóm
::
Såóm
(c⁄° *
«me
Ë: 
FûeLike
“ame), 
_fûe
(
NULL
) {

24 
	gbuf
[12];

25 
	g°d
::
•rötf
(
buf
, ":%p", 
this
);

26 
	g_fûe
 = 
°d
::
f›í
(
buf
, "w+");

27 
mbed_£t_unbuf„ªd_°ªam
(
_fûe
);

30 
	gSåóm
::~
Såóm
() {

31 
f˛o£
(
_fûe
);

34 
	gSåóm
::
putc
(
c
) {

35 
fÊush
(
_fûe
);

36  
	g°d
::
Âutc
(
c
, 
_fûe
);

38 
	gSåóm
::
puts
(c⁄° *
s
) {

39 
fÊush
(
_fûe
);

40  
	g°d
::
Âuts
(
s
, 
_fûe
);

42 
	gSåóm
::
gëc
() {

43 
fÊush
(
_fûe
);

44  
mbed_gëc
(
_fûe
);

46 * 
	gSåóm
::
gës
(*
s
, 
size
) {

47 
fÊush
(
_fûe
);

48  
mbed_gës
(
s
,
size
,
_fûe
);

51 
	gSåóm
::
˛o£
() {

55 
ssize_t
 
	gSåóm
::
wrôe
(c⁄° * 
buf„r
, 
size_t
 
Àngth
) {

56 c⁄° * 
	g±r
 = (c⁄° *)
buf„r
;

57 c⁄° * 
	gíd
 = 
±r
 + 
Àngth
;

58 
	g±r
 !
íd
) {

59 i‡(
_putc
(*
±r
++Ë=
EOF
) {

63  
	g±r
 - (c⁄° *)
	gbuf„r
;

66 
ssize_t
 
	gSåóm
::
ªad
(* 
buf„r
, 
size_t
 
Àngth
) {

67 * 
	g±r
 = (*)
buf„r
;

68 * 
	gíd
 = 
±r
 + 
Àngth
;

69 
	g±r
 !
íd
) {

70 
c
 = 
_gëc
();

71 i‡(
	gc
==
EOF
) ;

72 *
	g±r
++ = 
c
;

74  
	g±r
 - (c⁄° *)
	gbuf„r
;

77 
off_t
 
	gSåóm
::
l£ek
(off_à
off£t
, 
whí˚
) {

81 
	gSåóm
::
ißây
() {

85 
	gSåóm
::
fsync
() {

89 
off_t
 
	gSåóm
::
Êí
() {

93 
	gSåóm
::
¥ötf
(c⁄° * 
f‹m©
, ...) {

94 
	g°d
::
va_li°
 
¨g
;

95 
va_°¨t
(
¨g
, 
f‹m©
);

96 
fÊush
(
_fûe
);

97 
	gr
 = 
vÂrötf
(
_fûe
, 
f‹m©
, 
¨g
);

98 
va_íd
(
¨g
);

99  
	gr
;

102 
	gSåóm
::
sˇnf
(c⁄° * 
f‹m©
, ...) {

103 
	g°d
::
va_li°
 
¨g
;

104 
va_°¨t
(
¨g
, 
f‹m©
);

105 
fÊush
(
_fûe
);

106 
	gr
 = 
vfsˇnf
(
_fûe
, 
f‹m©
, 
¨g
);

107 
va_íd
(
¨g
);

108  
	gr
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\Ticker.cpp

16 
	~"Tickî.h
"

18 
	~"TimîEvít.h
"

19 
	~"Fun˘i⁄Poöãr.h
"

20 
	~"tickî_≠i.h
"

22 
«me•a˚
 
	gmbed
 {

24 
	gTickî
::
dëach
() {

25 
ªmove
();

26 
	g_fun˘i⁄
.
©èch
(0);

29 
	gTickî
::
£tup
(
time°amp_t
 
t
) {

30 
ªmove
();

31 
	g_dñay
 = 
t
;

32 
ö£π
(
_dñay
 + 
tickî_ªad
(
_tickî_d©a
));

35 
	gTickî
::
h™dÀr
() {

36 
ö£π
(
evít
.
time°amp
 + 
_dñay
);

37 
	g_fun˘i⁄
.
ˇŒ
();

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\Timeout.cpp

16 
	~"Timeout.h
"

18 
«me•a˚
 
	gmbed
 {

20 
	gTimeout
::
h™dÀr
() {

21 
_fun˘i⁄
.
ˇŒ
();

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\Timer.cpp

16 
	~"Timî.h
"

17 
	~"tickî_≠i.h
"

18 
	~"us_tickî_≠i.h
"

20 
«me•a˚
 
	gmbed
 {

22 
	gTimî
::
Timî
(Ë: 
_ru¬ög
(), 
_°¨t
(), 
_time
(), 
_tickî_d©a
(
gë_us_tickî_d©a
()) {

23 
ª£t
();

26 
	gTimî
::
Timî
(c⁄° 
tickî_d©a_t
 *
d©a
Ë: 
_ru¬ög
(), 
_°¨t
(), 
_time
(), 
_tickî_d©a
(data) {

27 
ª£t
();

30 
	gTimî
::
°¨t
() {

31 i‡(!
_ru¬ög
) {

32 
_°¨t
 = 
tickî_ªad
(
_tickî_d©a
);

33 
	g_ru¬ög
 = 1;

37 
	gTimî
::
°›
() {

38 
_time
 +
¶i˚time
();

39 
	g_ru¬ög
 = 0;

42 
	gTimî
::
ªad_us
() {

43  
_time
 + 
¶i˚time
();

46 
	gTimî
::
ªad
() {

47  ()
ªad_us
() / 1000000.0f;

50 
	gTimî
::
ªad_ms
() {

51  
ªad_us
() / 1000;

54 
	gTimî
::
¶i˚time
() {

55 i‡(
_ru¬ög
) {

56  
tickî_ªad
(
_tickî_d©a
Ë- 
_°¨t
;

62 
	gTimî
::
ª£t
() {

63 
_°¨t
 = 
tickî_ªad
(
_tickî_d©a
);

64 
	g_time
 = 0;

67 #ifde‡
MBED_OPERATORS


68 
	gTimî
::
›î©‹
 () {

69  
ªad
();

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\TimerEvent.cpp

16 
	~"TimîEvít.h
"

17 
	~"cmsis.h
"

19 
	~<°ddef.h
>

20 
	~"tickî_≠i.h
"

21 
	~"us_tickî_≠i.h
"

23 
«me•a˚
 
	gmbed
 {

25 
	gTimîEvít
::
TimîEvít
(Ë: 
evít
(), 
_tickî_d©a
(
gë_us_tickî_d©a
()) {

26 
tickî_£t_h™dÀr
(
_tickî_d©a
, (&
TimîEvít
::
úq
));

29 
	gTimîEvít
::
TimîEvít
(c⁄° 
tickî_d©a_t
 *
d©a
Ë: 
evít
(), 
_tickî_d©a
(data) {

30 
tickî_£t_h™dÀr
(
_tickî_d©a
, (&
TimîEvít
::
úq
));

33 
	gTimîEvít
::
úq
(
uöt32_t
 
id
) {

34 
TimîEvít
 *
timî_evít
 = (TimîEvít*)
id
;

35 
	gtimî_evít
->
h™dÀr
();

38 
	gTimîEvít
::~
TimîEvít
() {

39 
ªmove
();

43 
	gTimîEvít
::
ö£π
(
time°amp_t
 
time°amp
) {

44 
tickî_ö£π_evít
(
_tickî_d©a
, &
evít
, 
time°amp
, (
uöt32_t
)
this
);

47 
	gTimîEvít
::
ªmove
() {

48 
tickî_ªmove_evít
(
_tickî_d©a
, &
evít
);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\assert.c

16 
	~"mbed_as£π.h
"

17 
	~"mbed_îr‹.h
"

19 
	$mbed_as£π_öã∫Æ
(c⁄° *
ex¥
, c⁄° *
fûe
, 
löe
)

21 
	`îr‹
("mbedás£π©i⁄ faûed: %s, fûe: %s,Üöê%d \n", 
ex¥
, 
fûe
, 
löe
);

22 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\board.c

16 
	~"gpio_≠i.h
"

17 
	~"waô_≠i.h
"

18 
	~"toﬁchaö.h
"

19 
	~"mbed_öãrÁ˚.h
"

21 
WEAK
 
	$mbed_dõ
() {

22 #i‡!
	`deföed
 (
NRF51_H
Ë&& !deföed(
TARGET_EFM32
)

23 
	`__dißbÀ_úq
();

25 #i‡ (
DEVICE_ERROR_RED
 == 1)

26 
gpio_t
 
Àd_ªd
; 
	`gpio_öô_out
(&Àd_ªd, 
LED_RED
);

27 #ñi‡(
DEVICE_ERROR_PATTERN
 == 1)

28 
gpio_t
 
Àd_1
; 
	`gpio_öô_out
(&Àd_1, 
LED1
);

29 
gpio_t
 
Àd_2
; 
	`gpio_öô_out
(&Àd_2, 
LED2
);

30 
gpio_t
 
Àd_3
; 
	`gpio_öô_out
(&Àd_3, 
LED3
);

31 
gpio_t
 
Àd_4
; 
	`gpio_öô_out
(&Àd_4, 
LED4
);

35 #i‡ (
DEVICE_ERROR_RED
 == 1)

36 
	`gpio_wrôe
(&
Àd_ªd
, 1);

38 #ñi‡(
DEVICE_ERROR_PATTERN
 == 1)

39 
	`gpio_wrôe
(&
Àd_1
, 1);

40 
	`gpio_wrôe
(&
Àd_2
, 0);

41 
	`gpio_wrôe
(&
Àd_3
, 0);

42 
	`gpio_wrôe
(&
Àd_4
, 1);

45 
	`waô_ms
(150);

47 #i‡ (
DEVICE_ERROR_RED
 == 1)

48 
	`gpio_wrôe
(&
Àd_ªd
, 0);

50 #ñi‡(
DEVICE_ERROR_PATTERN
 == 1)

51 
	`gpio_wrôe
(&
Àd_1
, 0);

52 
	`gpio_wrôe
(&
Àd_2
, 1);

53 
	`gpio_wrôe
(&
Àd_3
, 1);

54 
	`gpio_wrôe
(&
Àd_4
, 0);

57 
	`waô_ms
(150);

59 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\error.c

16 
	~<°dlib.h
>

17 
	~<°d¨g.h
>

18 
	~"devi˚.h
"

19 
	~"toﬁchaö.h
"

20 
	~"mbed_îr‹.h
"

21 #i‡
DEVICE_STDIO_MESSAGES


22 
	~<°dio.h
>

25 
WEAK
 
	$îr‹
(c⁄° * 
f‹m©
, ...) {

26 #i‡
DEVICE_STDIO_MESSAGES


27 
va_li°
 
¨g
;

28 
	`va_°¨t
(
¨g
, 
f‹m©
);

29 
	`vÂrötf
(
°dîr
, 
f‹m©
, 
¨g
);

30 
	`va_íd
(
¨g
);

32 #ifde‡
__CC_ARM


33 
	`exô
(1);

35 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\gpio.c

16 
	~"gpio_≠i.h
"

18 
ölöe
 
	$_gpio_öô_ö
(
gpio_t
* 
gpio
, 
PöName
 
pö
, 
PöMode
 
mode
)

20 
	`gpio_öô
(
gpio
, 
pö
);

21 i‡(
pö
 !
NC
) {

22 
	`gpio_dú
(
gpio
, 
PIN_INPUT
);

23 
	`gpio_mode
(
gpio
, 
mode
);

25 
	}
}

27 
ölöe
 
	$_gpio_öô_out
(
gpio_t
* 
gpio
, 
PöName
 
pö
, 
PöMode
 
mode
, 
vÆue
)

29 
	`gpio_öô
(
gpio
, 
pö
);

30 i‡(
pö
 !
NC
) {

31 
	`gpio_wrôe
(
gpio
, 
vÆue
);

32 
	`gpio_dú
(
gpio
, 
PIN_OUTPUT
);

33 
	`gpio_mode
(
gpio
, 
mode
);

35 
	}
}

37 
	$gpio_öô_ö
(
gpio_t
* 
gpio
, 
PöName
 
pö
) {

38 
	`gpio_öô_ö_ex
(
gpio
, 
pö
, 
PuŒDeÁu…
);

39 
	}
}

41 
	$gpio_öô_ö_ex
(
gpio_t
* 
gpio
, 
PöName
 
pö
, 
PöMode
 
mode
) {

42 
	`_gpio_öô_ö
(
gpio
, 
pö
, 
mode
);

43 
	}
}

45 
	$gpio_öô_out
(
gpio_t
* 
gpio
, 
PöName
 
pö
) {

46 
	`gpio_öô_out_ex
(
gpio
, 
pö
, 0);

47 
	}
}

49 
	$gpio_öô_out_ex
(
gpio_t
* 
gpio
, 
PöName
 
pö
, 
vÆue
) {

50 
	`_gpio_öô_out
(
gpio
, 
pö
, 
PuŒN⁄e
, 
vÆue
);

51 
	}
}

53 
	$gpio_öô_öout
(
gpio_t
* 
gpio
, 
PöName
 
pö
, 
PöDúe˘i⁄
 
dúe˘i⁄
, 
PöMode
 
mode
, 
vÆue
) {

54 i‡(
dúe˘i⁄
 =
PIN_INPUT
) {

55 
	`_gpio_öô_ö
(
gpio
, 
pö
, 
mode
);

56 i‡(
pö
 !
NC
)

57 
	`gpio_wrôe
(
gpio
, 
vÆue
);

59 
	`_gpio_öô_out
(
gpio
, 
pö
, 
mode
, 
vÆue
);

61 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\lp_ticker_api.c

16 
	~"Õ_tickî_≠i.h
"

18 #i‡
DEVICE_LOWPOWERTIMER


20 
tickî_evít_queue_t
 
	gevíts
;

22 c⁄° 
tickî_öãrÁ˚_t
 
	gÕ_öãrÁ˚
 = {

23 .
öô
 = 
Õ_tickî_öô
,

24 .
	gªad
 = 
Õ_tickî_ªad
,

25 .
	gdißbÀ_öãºu±
 = 
Õ_tickî_dißbÀ_öãºu±
,

26 .
	g˛ór_öãºu±
 = 
Õ_tickî_˛ór_öãºu±
,

27 .
	g£t_öãºu±
 = 
Õ_tickî_£t_öãºu±
,

30 c⁄° 
tickî_d©a_t
 
	gÕ_d©a
 = {

31 .
öãrÁ˚
 = &
Õ_öãrÁ˚
,

32 .
	gqueue
 = &
evíts
,

35 c⁄° 
tickî_d©a_t
* 
	$gë_Õ_tickî_d©a
()

37  &
Õ_d©a
;

38 
	}
}

40 
	$Õ_tickî_úq_h™dÀr
()

42 
	`tickî_úq_h™dÀr
(&
Õ_d©a
);

43 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\mbed_interface.c

16 
	~<°dio.h
>

17 
	~"mbed_öãrÁ˚.h
"

19 
	~"gpio_≠i.h
"

20 
	~"waô_≠i.h
"

21 
	~"£miho°_≠i.h
"

22 
	~"mbed_îr‹.h
"

23 
	~"toﬁchaö.h
"

25 #i‡
DEVICE_SEMIHOST


28 
	$mbed_öãrÁ˚_c⁄√˘ed
() {

29  
	`£miho°_c⁄√˘ed
();

30 
	}
}

32 
	$mbed_öãrÁ˚_ª£t
() {

33 i‡(
	`mbed_öãrÁ˚_c⁄√˘ed
()) {

34 
	`£miho°_ª£t
();

39 
	}
}

41 
WEAK
 
	$mbed_öãrÁ˚_uid
(*
uid
) {

42 i‡(
	`mbed_öãrÁ˚_c⁄√˘ed
()) {

43  
	`£miho°_uid
(
uid
);

45 
uid
[0] = 0;

48 
	}
}

50 
	$mbed_öãrÁ˚_disc⁄√˘
() {

51 
ªs
;

52 i‡(
	`mbed_öãrÁ˚_c⁄√˘ed
()) {

53 i‡((
ªs
 = 
	`£miho°_dißbÀdebug
()) != 0)

54  
ªs
;

55 
	`mbed_öãrÁ˚_c⁄√˘ed
());

60 
	}
}

62 
	$mbed_öãrÁ˚_powîdown
() {

63 
ªs
;

64 i‡(
	`mbed_öãrÁ˚_c⁄√˘ed
()) {

65 i‡((
ªs
 = 
	`£miho°_powîdown
()) != 0)

66  
ªs
;

67 
	`mbed_öãrÁ˚_c⁄√˘ed
());

72 
	}
}

75 
	$mbed_ª£t
() {

76 
	`mbed_öãrÁ˚_ª£t
();

77 
	}
}

79 
WEAK
 
	$mbed_uid
(*
uid
) {

80  
	`mbed_öãrÁ˚_uid
(
uid
);

81 
	}
}

84 
WEAK
 
	$mbed_mac_addªss
(*
mac
) {

85 #i‡
DEVICE_SEMIHOST


86 
uid
[
DEVICE_ID_LENGTH
 + 1];

87 
i
;

90 i‡(
	`mbed_öãrÁ˚_uid
(
uid
) == 0) {

91 *
p
 = 
uid
;

92 #i‡
	`deföed
(
DEVICE_MAC_OFFSET
)

93 
p
 +
DEVICE_MAC_OFFSET
;

95 
i
=0; i<6; i++) {

96 
byã
;

97 
	`ssˇnf
(
p
, "%2x", &
byã
);

98 
mac
[
i
] = 
byã
;

99 
p
 += 2;

101 
mac
[0] &= ~0x01;

104 
mac
[0] = 0x00;

105 
mac
[1] = 0x02;

106 
mac
[2] = 0xF7;

107 
mac
[3] = 0xF0;

108 
mac
[4] = 0x00;

109 
mac
[5] = 0x00;

110 #i‡
DEVICE_SEMIHOST


113 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\pinmap_common.c

16 
	~"pöm≠.h
"

17 
	~"mbed_îr‹.h
"

19 
	$pöm≠_pöout
(
PöName
 
pö
, c⁄° 
PöM≠
 *
m≠
) {

20 i‡(
pö
 =
NC
)

23 
m≠
->
pö
 !
NC
) {

24 i‡(
m≠
->
pö
 ==Öin) {

25 
	`pö_fun˘i⁄
(
pö
, 
m≠
->
fun˘i⁄
);

27 
	`pö_mode
(
pö
, 
PuŒN⁄e
);

30 
m≠
++;

32 
	`îr‹
("couldÇotÖinout");

33 
	}
}

35 
uöt32_t
 
	$pöm≠_mîge
(
uöt32_t
 
a
, uöt32_à
b
) {

37 i‡(
a
 =
b
)

38  
a
;

41 i‡(
a
 =(
uöt32_t
)
NC
)

42  
b
;

43 i‡(
b
 =(
uöt32_t
)
NC
)

44  
a
;

47 
	`îr‹
("pinmap mis-match");

48  (
uöt32_t
)
NC
;

49 
	}
}

51 
uöt32_t
 
	$pöm≠_föd_≥rùhîÆ
(
PöName
 
pö
, c⁄° 
PöM≠
* 
m≠
) {

52 
m≠
->
pö
 !
NC
) {

53 i‡(
m≠
->
pö
 ==Öin)

54  
m≠
->
≥rùhîÆ
;

55 
m≠
++;

57  (
uöt32_t
)
NC
;

58 
	}
}

60 
uöt32_t
 
	$pöm≠_≥rùhîÆ
(
PöName
 
pö
, c⁄° 
PöM≠
* 
m≠
) {

61 
uöt32_t
 
≥rùhîÆ
 = (uöt32_t)
NC
;

63 i‡(
pö
 =(
PöName
)
NC
)

64  (
uöt32_t
)
NC
;

65 
≥rùhîÆ
 = 
	`pöm≠_föd_≥rùhîÆ
(
pö
, 
m≠
);

66 i‡((
uöt32_t
)
NC
 =
≥rùhîÆ
)

67 
	`îr‹
("pinmapÇot found forÖeripheral");

68  
≥rùhîÆ
;

69 
	}
}

71 
uöt32_t
 
	$pöm≠_föd_fun˘i⁄
(
PöName
 
pö
, c⁄° 
PöM≠
* 
m≠
) {

72 
m≠
->
pö
 !
NC
) {

73 i‡(
m≠
->
pö
 ==Öin)

74  
m≠
->
fun˘i⁄
;

75 
m≠
++;

77  (
uöt32_t
)
NC
;

78 
	}
}

80 
uöt32_t
 
	$pöm≠_fun˘i⁄
(
PöName
 
pö
, c⁄° 
PöM≠
* 
m≠
) {

81 
uöt32_t
 
fun˘i⁄
 = (uöt32_t)
NC
;

83 i‡(
pö
 =(
PöName
)
NC
)

84  (
uöt32_t
)
NC
;

85 
fun˘i⁄
 = 
	`pöm≠_föd_fun˘i⁄
(
pö
, 
m≠
);

86 i‡((
uöt32_t
)
NC
 =
fun˘i⁄
)

87 
	`îr‹
("pinmapÇot found for function");

88  
fun˘i⁄
;

89 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\retarget.cpp

16 
	~"∂©f‹m.h
"

17 
	~"FûeH™dÀ.h
"

18 
	~"FûeSy°emLike.h
"

19 
	~"FûeP©h.h
"

20 
	~"£rül_≠i.h
"

21 
	~"toﬁchaö.h
"

22 
	~"£miho°_≠i.h
"

23 
	~"mbed_öãrÁ˚.h
"

24 #i‡
DEVICE_STDIO_MESSAGES


25 
	~<°dio.h
>

27 
	~<î∫o.h
>

29 #i‡
deföed
(
__ARMCC_VERSION
)

30 
	~<π_sys.h
>

31 
	#PREFIX
(
x
Ë
_sys
##
	)
x

32 
	#OPEN_MAX
 
_SYS_OPEN


	)

33 #ifde‡
__MICROLIB


34 #¥agm®
imp‹t
(
__u£_fuŒ_°dio
)

37 #ñi‡
deföed
(
__ICCARM__
)

38 
	~<yfuns.h
>

39 
	#PREFIX
(
x
Ë
_
##
	)
x

40 
	#OPEN_MAX
 16

	)

42 
	#STDIN_FILENO
 0

	)

43 
	#STDOUT_FILENO
 1

	)

44 
	#STDERR_FILENO
 2

	)

47 
	~<sys/°©.h
>

48 
	~<sys/uni°d.h
>

49 
	~<sys/sy¶imôs.h
>

50 
	#PREFIX
(
x
Ë
	)
x

53 
usög
 
«me•a˚
 
	gmbed
;

55 #i‡
deföed
(
__MICROLIB
Ë&& (
__ARMCC_VERSION
>5030000)

57 c⁄° 
__°dö_«me
[] = ":tt";

58 c⁄° 
__°dout_«me
[] = ":tt";

59 c⁄° 
__°dîr_«me
[] = ":tt";

62 c⁄° 
__°dö_«me
[] = "/stdin";

63 c⁄° 
__°dout_«me
[] = "/stdout";

64 c⁄° 
__°dîr_«me
[] = "/stderr";

72 
FûeH™dÀ
 *
	gfûeh™dÀs
[
OPEN_MAX
];

74 
	gFûeH™dÀ
::~
	$FûeH™dÀ
() {

76 
fh_i
 = 0; fh_ò< (
fûeh™dÀs
)/(*filehandles); fh_i++) {

77 i‡(
fûeh™dÀs
[
fh_i
] =
this
) {

78 
fûeh™dÀs
[
fh_i
] = 
NULL
;

81 
	}
}

83 #i‡
DEVICE_SERIAL


84 
°dio_u¨t_öôed
;

85 
£rül_t
 
°dio_u¨t
;

88 
	$öô_£rül
() {

89 #i‡
DEVICE_SERIAL


90 i‡(
°dio_u¨t_öôed
) ;

91 
	`£rül_öô
(&
°dio_u¨t
, 
STDIO_UART_TX
, 
STDIO_UART_RX
);

93 
	}
}

95 
ölöe
 
	$›ímode_to_posix
(
›ímode
) {

96 
posix
 = 
›ímode
;

97 #ifde‡
__ARMCC_VERSION


98 i‡(
›ímode
 & 
OPEN_PLUS
) {

99 
posix
 = 
O_RDWR
;

100 } if(
›ímode
 & 
OPEN_W
) {

101 
posix
 = 
O_WRONLY
;

102 } if(
›ímode
 & 
OPEN_A
) {

103 
posix
 = 
O_WRONLY
|
O_APPEND
;

105 
posix
 = 
O_RDONLY
;

108 i‡(
›ímode
 & (
OPEN_A
|
OPEN_W
)) {

109 
posix
 |
O_CREAT
;

112 i‡(
›ímode
 & 
OPEN_W
) {

113 
posix
 |
O_TRUNC
;

115 #ñi‡
	`deföed
(
__ICCARM__
)

116 
›ímode
 & 
_LLIO_RDWRMASK
) {

117 
_LLIO_RDONLY
: 
posix
 = 
O_RDONLY
; ;

118 
_LLIO_WRONLY
: 
posix
 = 
O_WRONLY
; ;

119 
_LLIO_RDWR
 : 
posix
 = 
O_RDWR
 ; ;

121 i‡(
›ímode
 & 
_LLIO_CREAT
 ) 
posix
 |
O_CREAT
;

122 i‡(
›ímode
 & 
_LLIO_APPEND
Ë
posix
 |
O_APPEND
;

123 i‡(
›ímode
 & 
_LLIO_TRUNC
 ) 
posix
 |
O_TRUNC
;

125  
posix
;

126 
	}
}

128 "C" 
FILEHANDLE
 
	$PREFIX
(
_›í
)(c⁄° * 
«me
, 
›ímode
) {

129 #i‡
	`deföed
(
__MICROLIB
Ë&& (
__ARMCC_VERSION
>5030000)

132 
n
 = 0;

133 i‡(!
°d
::
	`°rcmp
(
«me
, ":â")Ë 
n
++;

138 i‡(
°d
::
	`°rcmp
(
«me
, 
__°dö_«me
) == 0) {

139 
	`öô_£rül
();

141 } i‡(
°d
::
	`°rcmp
(
«me
, 
__°dout_«me
) == 0) {

142 
	`öô_£rül
();

144 } i‡(
°d
::
	`°rcmp
(
«me
, 
__°dîr_«me
) == 0) {

145 
	`öô_£rül
();

151 
fh_i
;

152 
fh_i
 = 0; fh_ò< (
fûeh™dÀs
)/(*filehandles); fh_i++) {

153 i‡(
fûeh™dÀs
[
fh_i
] =
NULL
) ;

155 i‡(
fh_i
 >(
fûeh™dÀs
)/(*filehandles)) {

159 
FûeH™dÀ
 *
ªs
;

162 i‡(
«me
[0] == ':') {

163 *
p
;

164 
	`ssˇnf
(
«me
, ":%p", &
p
);

165 
ªs
 = (
FûeH™dÀ
*)
p
;

169 
FûeP©h
 
	`∑th
(
«me
);

171 i‡(!
∑th
.
	`exi°s
())

173 i‡(
∑th
.
	`isFûe
()) {

174 
ªs
 = 
∑th
.
	`fûe
();

176 
FûeSy°emLike
 *
fs
 = 
∑th
.
	`fûeSy°em
();

177 i‡(
fs
 =
NULL
)  -1;

178 
posix_mode
 = 
	`›ímode_to_posix
(
›ímode
);

179 
ªs
 = 
fs
->
	`›í
(
∑th
.
	`fûeName
(), 
posix_mode
);

183 i‡(
ªs
 =
NULL
)  -1;

184 
fûeh™dÀs
[
fh_i
] = 
ªs
;

186  
fh_i
 + 3;

187 
	}
}

189 "C" 
	$PREFIX
(
_˛o£
)(
FILEHANDLE
 
fh
) {

190 i‡(
fh
 < 3)  0;

192 
FûeH™dÀ
* 
fhc
 = 
fûeh™dÀs
[
fh
-3];

193 
fûeh™dÀs
[
fh
-3] = 
NULL
;

194 i‡(
fhc
 =
NULL
)  -1;

196  
fhc
->
	`˛o£
();

197 
	}
}

199 #i‡
deföed
(
__ICCARM__
)

200 "C" 
size_t
 
	$__wrôe
 (
fh
, c⁄° *
buf„r
, 
size_t
 
Àngth
) {

202 "C" 
	$PREFIX
(
_wrôe
)(
FILEHANDLE
 
fh
, c⁄° *
buf„r
, 
Àngth
, 
mode
) {

204 
n
;

205 i‡(
fh
 < 3) {

206 #i‡
DEVICE_SERIAL


207 i‡(!
°dio_u¨t_öôed
Ë
	`öô_£rül
();

208 
i
 = 0; i < 
Àngth
; i++) {

209 
	`£rül_putc
(&
°dio_u¨t
, 
buf„r
[
i
]);

212 
n
 = 
Àngth
;

214 
FûeH™dÀ
* 
fhc
 = 
fûeh™dÀs
[
fh
-3];

215 i‡(
fhc
 =
NULL
)  -1;

217 
n
 = 
fhc
->
	`wrôe
(
buf„r
, 
Àngth
);

219 #ifde‡
__ARMCC_VERSION


220  
Àngth
-
n
;

222  
n
;

224 
	}
}

226 #i‡
deföed
(
__ICCARM__
)

227 "C" 
size_t
 
	$__ªad
 (
fh
, *
buf„r
, 
size_t
 
Àngth
) {

229 "C" 
	$PREFIX
(
_ªad
)(
FILEHANDLE
 
fh
, *
buf„r
, 
Àngth
, 
mode
) {

231 
n
;

232 i‡(
fh
 < 3) {

234 #i‡
DEVICE_SERIAL


235 i‡(!
°dio_u¨t_öôed
Ë
	`öô_£rül
();

236 *
buf„r
 = 
	`£rül_gëc
(&
°dio_u¨t
);

238 
n
 = 1;

240 
FûeH™dÀ
* 
fhc
 = 
fûeh™dÀs
[
fh
-3];

241 i‡(
fhc
 =
NULL
)  -1;

243 
n
 = 
fhc
->
	`ªad
(
buf„r
, 
Àngth
);

245 #ifde‡
__ARMCC_VERSION


246  
Àngth
-
n
;

248  
n
;

250 
	}
}

252 #ifde‡
__ARMCC_VERSION


253 "C" 
	$PREFIX
(
_i°ty
)(
FILEHANDLE
 
fh
)

255 "C" 
	$_ißây
(
FILEHANDLE
 
fh
)

259 i‡(
fh
 < 3)  1;

261 
FûeH™dÀ
* 
fhc
 = 
fûeh™dÀs
[
fh
-3];

262 i‡(
fhc
 =
NULL
)  -1;

264  
fhc
->
	`ißây
();

265 
	}
}

268 #i‡
deföed
(
__ARMCC_VERSION
)

269 
	$_sys_£ek
(
FILEHANDLE
 
fh
, 
posôi⁄
)

270 #ñi‡
	`deföed
(
__ICCARM__
)

271 
	$__l£ek
(
fh
, 
off£t
, 
whí˚
)

273 
	$_l£ek
(
FILEHANDLE
 
fh
, 
off£t
, 
whí˚
)

276 i‡(
fh
 < 3)  0;

278 
FûeH™dÀ
* 
fhc
 = 
fûeh™dÀs
[
fh
-3];

279 i‡(
fhc
 =
NULL
)  -1;

281 #i‡
	`deföed
(
__ARMCC_VERSION
)

282  
fhc
->
	`l£ek
(
posôi⁄
, 
SEEK_SET
);

284  
fhc
->
	`l£ek
(
off£t
, 
whí˚
);

286 
	}
}

288 #ifde‡
__ARMCC_VERSION


289 "C" 
	$PREFIX
(
_ísuª
)(
FILEHANDLE
 
fh
) {

290 i‡(
fh
 < 3)  0;

292 
FûeH™dÀ
* 
fhc
 = 
fûeh™dÀs
[
fh
-3];

293 i‡(
fhc
 =
NULL
)  -1;

295  
fhc
->
	`fsync
();

296 
	}
}

298 "C" 
	$PREFIX
(
_Êí
)(
FILEHANDLE
 
fh
) {

299 i‡(
fh
 < 3)  0;

301 
FûeH™dÀ
* 
fhc
 = 
fûeh™dÀs
[
fh
-3];

302 i‡(
fhc
 =
NULL
)  -1;

304  
fhc
->
	`Êí
();

305 
	}
}

309 #i‡!
deföed
(
__ARMCC_VERSION
Ë&& !deföed(
__ICCARM__
)

310 "C" 
	$_f°©
(
fd
, 
°©
 *
°
) {

311 i‡((
STDOUT_FILENO
 =
fd
Ë|| (
STDERR_FILENO
 =fdË|| (
STDIN_FILENO
 == fd)) {

312 
°
->
°_mode
 = 
S_IFCHR
;

316 
î∫o
 = 
EBADF
;

318 
	}
}

321 
«me•a˚
 
°d
 {

322 "C" 
ªmove
(c⁄° *
∑th
) {

323 
FûeP©h
 
Â
(
∑th
);

324 
FûeSy°emLike
 *
fs
 = 
Â
.
fûeSy°em
();

325 i‡(
fs
 =
NULL
)  -1;

327  
fs
->
ªmove
(
Â
.
fûeName
());

330 "C" 
ª«me
(c⁄° *
ﬁd«me
, c⁄° *
√w«me
) {

331 
FûeP©h
 
ÂOld
(
ﬁd«me
);

332 
FûeP©h
 
ÂNew
(
√w«me
);

333 
FûeSy°emLike
 *
fsOld
 = 
ÂOld
.
fûeSy°em
();

334 
FûeSy°emLike
 *
fsNew
 = 
ÂNew
.
fûeSy°em
();

337 i‡(
fsOld
 !
fsNew
 || fsOld =
NULL
)  -1;

339  
fsOld
->
ª«me
(
ÂOld
.
fûeName
(), 
ÂNew
.fileName());

342 "C" *
tm≤am
(*
s
) {

343  
NULL
;

346 "C" 
FILE
 *
tmpfûe
() {

347  
NULL
;

351 #ifde‡
__ARMCC_VERSION


352 "C" *
	$_sys_comm™d_°rög
(*
cmd
, 
Àn
) {

353  
NULL
;

354 
	}
}

357 "C" 
DIR
 *
	$›ídú
(c⁄° *
∑th
) {

359 i‡(
∑th
[0] == '/' &&Öath[1] == 0) {

360  
FûeSy°emLike
::
	`›ídú
();

363 
FûeP©h
 
	`Â
(
∑th
);

364 
FûeSy°emLike
* 
fs
 = 
Â
.
	`fûeSy°em
();

365 i‡(
fs
 =
NULL
)  NULL;

367  
fs
->
	`›ídú
(
Â
.
	`fûeName
());

368 
	}
}

370 "C" 
dúít
 *
	$ªaddú
(
DIR
 *
dú
) {

371  
dú
->
	`ªaddú
();

372 
	}
}

374 "C" 
	$˛o£dú
(
DIR
 *
dú
) {

375  
dú
->
	`˛o£dú
();

376 
	}
}

378 "C" 
	$ªwöddú
(
DIR
 *
dú
) {

379 
dú
->
	`ªwöddú
();

380 
	}
}

382 "C" 
off_t
 
	$ãŒdú
(
DIR
 *
dú
) {

383  
dú
->
	`ãŒdú
();

384 
	}
}

386 "C" 
	$£ekdú
(
DIR
 *
dú
, 
off_t
 
off
) {

387 
dú
->
	`£ekdú
(
off
);

388 
	}
}

390 "C" 
	$mkdú
(c⁄° *
∑th
, 
mode_t
 
mode
) {

391 
FûeP©h
 
	`Â
(
∑th
);

392 
FûeSy°emLike
 *
fs
 = 
Â
.
	`fûeSy°em
();

393 i‡(
fs
 =
NULL
)  -1;

395  
fs
->
	`mkdú
(
Â
.
	`fûeName
(), 
mode
);

396 
	}
}

398 #i‡
deföed
(
TOOLCHAIN_GCC
)

400 
	~"mbed_îr‹.h
"

401 
«me•a˚
 
__gnu_cxx
 {

402 
__vîbo£_ãrmö©e_h™dÀr
() {

403 
îr‹
("Exception");

406 "C" 
WEAK
 
__cxa_puª_vútuÆ
();

407 "C" 
WEAK
 
	$__cxa_puª_vútuÆ
() {

409 
	}
}

419 "C" 
WEAK
 
mbed_maö
();

420 "C" 
WEAK
 
	$mbed_maö
() {

421 
	}
}

423 "C" 
WEAK
 
mbed_sdk_öô
();

424 "C" 
WEAK
 
	$mbed_sdk_öô
() {

425 
	}
}

427 #i‡
deföed
(
TOOLCHAIN_ARM
)

428 "C" 
$Su≥r$$maö
();

430 "C" 
	$$Sub$$maö
() {

431 
	`mbed_sdk_öô
();

432 
	`mbed_maö
();

433  
	`$Su≥r$$maö
();

434 
	}
}

435 #ñi‡
deföed
(
TOOLCHAIN_GCC
)

436 "C" 
__ªÆ_maö
();

438 "C" 
	$__wøp_maö
() {

439 
	`mbed_sdk_öô
();

440 
	`mbed_maö
();

441  
	`__ªÆ_maö
();

442 
	}
}

443 #ñi‡
deföed
(
TOOLCHAIN_IAR
)

449 "C" 
	$__ür_¨gc_¨gv
() {

450 
	`mbed_sdk_öô
();

451 
	`mbed_maö
();

452 
	}
}

458 #i‡
deföed
(
TOOLCHAIN_GCC_ARM
)

460 "C" 
__íd__
;

462 #i‡
deföed
(
TARGET_CORTEX_A
)

463 "C" 
uöt32_t
 
__HópLimô
;

467 #unde‡
î∫o


468 "C" 
î∫o
;

471 * 
°ack_±r
 
__asm
 ("sp");

474 "C" 
ˇddr_t
 
	$_sbrk
(
ö¸
) {

475 * 
hóp
 = (*)&
__íd__
;

476 * 
¥ev_hóp
 = 
hóp
;

477 * 
√w_hóp
 = 
hóp
 + 
ö¸
;

479 #i‡
	`deföed
(
TARGET_ARM7
)

480 i‡(
√w_hóp
 >
°ack_±r
) {

481 #ñi‡
	`deföed
(
TARGET_CORTEX_A
)

482 i‡(
√w_hóp
 >(*)&
__HópLimô
) {

484 i‡(
√w_hóp
 >(*)
	`__gë_MSP
()) {

486 
î∫o
 = 
ENOMEM
;

487  (
ˇddr_t
)-1;

490 
hóp
 = 
√w_hóp
;

491  (
ˇddr_t
Ë
¥ev_hóp
;

492 
	}
}

496 #ifde‡
TOOLCHAIN_GCC_CW


498 "C" 
	$mbed_exô
(
ªtu∫_code
) {

499 #ñi‡
deföed
 
TOOLCHAIN_GCC_ARM


500 "C" 
	$_exô
(
ªtu∫_code
) {

502 
«me•a˚
 
°d
 {

503 "C" 
	`exô
(
ªtu∫_code
) {

506 #i‡
DEVICE_STDIO_MESSAGES


507 
	`fÊush
(
°dout
);

508 
	`fÊush
(
°dîr
);

511 #i‡
DEVICE_SEMIHOST


512 i‡(
	`mbed_öãrÁ˚_c⁄√˘ed
()) {

513 
	`£miho°_exô
();

516 i‡(
ªtu∫_code
) {

517 
	`mbed_dõ
();

523 #i‡!
	`deföed
(
TOOLCHAIN_GCC_ARM
Ë&& !deföed(
TOOLCHAIN_GCC_CW
)

524 
	}
}

528 
«me•a˚
 
mbed
 {

530 
mbed_£t_unbuf„ªd_°ªam
(
FILE
 *
_fûe
) {

531 #i‡
deföed
 (
__ICCARM__
)

532 
buf
[2];

533 
°d
::
£tvbuf
(
_fûe
,
buf
,
_IONBF
,
NULL
);

535 
£tbuf
(
_fûe
, 
NULL
);

539 
mbed_gëc
(
FILE
 *
_fûe
){

540 #i‡
deföed
 (
__ICCARM__
)

542 
ªs
 = 
°d
::
fgëc
(
_fûe
);

543 i‡(
ªs
>=0){

544 
_fûe
->
_Mode
 = ()(_file->_Mode & ~ 0x1000);

545 
_fûe
->
_Ríd
 = _fûe->
_Wíd
;

546 
_fûe
->
_Next
 = _fûe->
_Wíd
;

548  
ªs
;

550  
°d
::
fgëc
(
_fûe
);

554 * 
mbed_gës
(*
s
, 
size
, 
FILE
 *
_fûe
){

555 #i‡
deföed
 (
__ICCARM__
)

557 *
°r
 = 
fgës
(
s
,
size
,
_fûe
);

558 i‡(
°r
!=
NULL
){

559 
_fûe
->
_Mode
 = ()(_file->_Mode & ~ 0x1000);

560 
_fûe
->
_Ríd
 = _fûe->
_Wíd
;

561 
_fûe
->
_Next
 = _fûe->
_Wíd
;

563  
°r
;

565  
°d
::
fgës
(
s
,
size
,
_fûe
);

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\rtc_time.c

16 
	~"πc_≠i.h
"

18 
	~<time.h
>

19 
	~"πc_time.h
"

20 
	~"us_tickî_≠i.h
"

22 #i‡
DEVICE_RTC


23 (*
_πc_öô
)(Ë
πc_öô
;

24 (*
_πc_i£«bÀd
)(Ë
πc_i£«bÀd
;

25 
	$time_t
 (*
_πc_ªad
)(Ë
πc_ªad
;

26 (*
_πc_wrôe
)(
time_t
 
t
Ë
πc_wrôe
;

28 (*
_πc_öô
)(Ë
NULL
;

29 (*
_πc_i£«bÀd
)(Ë
NULL
;

30 
	$time_t
 (*
_πc_ªad
)(Ë
NULL
;

31 (*
_πc_wrôe
)(
time_t
 
t
Ë
NULL
;

34 #ifde‡
__˝lu•lus


37 #i‡
	`deföed
 (
__ICCARM__
)

38 
time_t
 
	$__time32
(
time_t
 *
timî
)

40 
time_t
 
	$time
(
time_t
 *
timî
)

44 i‡(
_πc_i£«bÀd
 !
NULL
) {

45 i‡(!(
	`_πc_i£«bÀd
())) {

46 
	`£t_time
(0);

50 
time_t
 
t
 = 0;

51 i‡(
_πc_ªad
 !
NULL
) {

52 
t
 = 
	`_πc_ªad
();

55 i‡(
timî
 !
NULL
) {

56 *
timî
 = 
t
;

58  
t
;

61 
	`£t_time
(
time_t
 
t
) {

62 i‡(
_πc_öô
 !
NULL
) {

63 
	`_πc_öô
();

65 i‡(
_πc_wrôe
 !
NULL
) {

66 
	`_πc_wrôe
(
t
);

70 
˛ock_t
 
	`˛ock
() {

71 
˛ock_t
 
t
 = 
	`us_tickî_ªad
();

72 
t
 /1000000 / 
CLOCKS_PER_SEC
;

73  
t
;

76 
	`©èch_πc
(
	`time_t
 (*
ªad_πc
)(), (*
wrôe_πc
)(
time_t
), (*
öô_πc
)(), (*
i£«bÀd_πc
)()) {

77 
	`__dißbÀ_úq
();

78 
_πc_ªad
 = 
ªad_πc
;

79 
_πc_wrôe
 = 
wrôe_πc
;

80 
_πc_öô
 = 
öô_πc
;

81 
_πc_i£«bÀd
 = 
i£«bÀd_πc
;

82 
	`__íabÀ_úq
();

87 #ifde‡
__˝lu•lus


88 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\semihost_api.c

16 
	~"cmsis.h
"

17 
	~"£miho°_≠i.h
"

19 
	~<°döt.h
>

20 
	~<°rög.h
>

22 #i‡
DEVICE_SEMIHOST


25 
	#SYS_OPEN
 (0x1)

	)

26 
	#SYS_CLOSE
 (0x2)

	)

27 
	#SYS_WRITE
 (0x5)

	)

28 
	#SYS_READ
 (0x6)

	)

29 
	#SYS_ISTTY
 (0x9)

	)

30 
	#SYS_SEEK
 (0xa)

	)

31 
	#SYS_ENSURE
 (0xb)

	)

32 
	#SYS_FLEN
 (0xc)

	)

33 
	#SYS_REMOVE
 (0xe)

	)

34 
	#SYS_RENAME
 (0xf)

	)

35 
	#SYS_EXIT
 (0x18)

	)

38 
	#RESERVED_FOR_USER_APPLICATIONS
 (0x100)

39 
	#USR_XFFIND
 (
RESERVED_FOR_USER_APPLICATIONS
 + 0)

	)

40 
	#USR_UID
 (
RESERVED_FOR_USER_APPLICATIONS
 + 1)

	)

41 
	#USR_RESET
 (
RESERVED_FOR_USER_APPLICATIONS
 + 2)

	)

42 
	#USR_VBUS
 (
RESERVED_FOR_USER_APPLICATIONS
 + 3)

	)

43 
	#USR_POWERDOWN
 (
RESERVED_FOR_USER_APPLICATIONS
 + 4)

	)

44 
	#USR_DISABLEDEBUG
 (
RESERVED_FOR_USER_APPLICATIONS
 + 5)

	)

46 #i‡
DEVICE_LOCALFILESYSTEM


47 
FILEHANDLE
 
	$£miho°_›í
(c⁄° * 
«me
, 
›ímode
) {

48 
uöt32_t
 
¨gs
[3];

49 
¨gs
[0] = (
uöt32_t
)
«me
;

50 
¨gs
[1] = (
uöt32_t
)
›ímode
;

51 
¨gs
[2] = (
uöt32_t
)
	`°æí
(
«me
);

52  
	`__£miho°
(
SYS_OPEN
, 
¨gs
);

53 
	}
}

55 
	$£miho°_˛o£
(
FILEHANDLE
 
fh
) {

56  
	`__£miho°
(
SYS_CLOSE
, &
fh
);

57 
	}
}

59 
	$£miho°_wrôe
(
FILEHANDLE
 
fh
, c⁄° * 
buf„r
, 
Àngth
, 
mode
) {

60 i‡(
Àngth
 == 0)  0;

62 
uöt32_t
 
¨gs
[3];

63 
¨gs
[0] = (
uöt32_t
)
fh
;

64 
¨gs
[1] = (
uöt32_t
)
buf„r
;

65 
¨gs
[2] = (
uöt32_t
)
Àngth
;

66  
	`__£miho°
(
SYS_WRITE
, 
¨gs
);

67 
	}
}

69 
	$£miho°_ªad
(
FILEHANDLE
 
fh
, * 
buf„r
, 
Àngth
, 
mode
) {

70 
uöt32_t
 
¨gs
[3];

71 
¨gs
[0] = (
uöt32_t
)
fh
;

72 
¨gs
[1] = (
uöt32_t
)
buf„r
;

73 
¨gs
[2] = (
uöt32_t
)
Àngth
;

74  
	`__£miho°
(
SYS_READ
, 
¨gs
);

75 
	}
}

77 
	$£miho°_i°ty
(
FILEHANDLE
 
fh
) {

78  
	`__£miho°
(
SYS_ISTTY
, &
fh
);

79 
	}
}

81 
	$£miho°_£ek
(
FILEHANDLE
 
fh
, 
posôi⁄
) {

82 
uöt32_t
 
¨gs
[2];

83 
¨gs
[0] = (
uöt32_t
)
fh
;

84 
¨gs
[1] = (
uöt32_t
)
posôi⁄
;

85  
	`__£miho°
(
SYS_SEEK
, 
¨gs
);

86 
	}
}

88 
	$£miho°_ísuª
(
FILEHANDLE
 
fh
) {

89  
	`__£miho°
(
SYS_ENSURE
, &
fh
);

90 
	}
}

92 
	$£miho°_Êí
(
FILEHANDLE
 
fh
) {

93  
	`__£miho°
(
SYS_FLEN
, &
fh
);

94 
	}
}

96 
	$£miho°_ªmove
(c⁄° *
«me
) {

97 
uöt32_t
 
¨gs
[2];

98 
¨gs
[0] = (
uöt32_t
)
«me
;

99 
¨gs
[1] = (
uöt32_t
)
	`°æí
(
«me
);

100  
	`__£miho°
(
SYS_REMOVE
, 
¨gs
);

101 
	}
}

103 
	$£miho°_ª«me
(c⁄° *
ﬁd_«me
, c⁄° *
√w_«me
) {

104 
uöt32_t
 
¨gs
[4];

105 
¨gs
[0] = (
uöt32_t
)
ﬁd_«me
;

106 
¨gs
[1] = (
uöt32_t
)
	`°æí
(
ﬁd_«me
);

107 
¨gs
[0] = (
uöt32_t
)
√w_«me
;

108 
¨gs
[1] = (
uöt32_t
)
	`°æí
(
√w_«me
);

109  
	`__£miho°
(
SYS_RENAME
, 
¨gs
);

110 
	}
}

113 
	$£miho°_exô
() {

114 
uöt32_t
 
¨gs
[4];

115  
	`__£miho°
(
SYS_EXIT
, 
¨gs
);

116 
	}
}

118 
	$£miho°_uid
(*
uid
) {

119 
uöt32_t
 
¨gs
[2];

120 
¨gs
[0] = (
uöt32_t
)
uid
;

121 
¨gs
[1] = 
DEVICE_ID_LENGTH
 + 1;

122  
	`__£miho°
(
USR_UID
, &
¨gs
);

123 
	}
}

125 
	$£miho°_ª£t
() {

128  
	`__£miho°
(
USR_RESET
, 
NULL
);

129 
	}
}

131 
	$£miho°_vbus
() {

132  
	`__£miho°
(
USR_VBUS
, 
NULL
);

133 
	}
}

135 
	$£miho°_powîdown
() {

136  
	`__£miho°
(
USR_POWERDOWN
, 
NULL
);

137 
	}
}

139 #i‡
DEVICE_DEBUG_AWARENESS


141 
	$£miho°_c⁄√˘ed
() {

142  (
C‹eDebug
->
DHCSR
 & 
C‹eDebug_DHCSR_C_DEBUGEN_Msk
) ? 1 : 0;

143 
	}
}

147 
	gis_debuggî_©èched
 = 1;

149 
	$£miho°_c⁄√˘ed
() {

150  
is_debuggî_©èched
;

151 
	}
}

154 
	$£miho°_dißbÀdebug
() {

155 #i‡!(
DEVICE_DEBUG_AWARENESS
)

156 
is_debuggî_©èched
 = 0;

158  
	`__£miho°
(
USR_DISABLEDEBUG
, 
NULL
);

159 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\ticker_api.c

16 
	~<°ddef.h
>

17 
	~"tickî_≠i.h
"

18 
	~"cmsis.h
"

20 
	$tickî_£t_h™dÀr
(c⁄° 
tickî_d©a_t
 *c⁄° 
d©a
, 
tickî_evít_h™dÀr
 
h™dÀr
) {

21 
d©a
->
öãrÁ˚
->
	`öô
();

23 
d©a
->
queue
->
evít_h™dÀr
 = 
h™dÀr
;

24 
	}
}

26 
	$tickî_úq_h™dÀr
(c⁄° 
tickî_d©a_t
 *c⁄° 
d©a
) {

27 
d©a
->
öãrÁ˚
->
	`˛ór_öãºu±
();

31 i‡(
d©a
->
queue
->
hód
 =
NULL
) {

33 
d©a
->
öãrÁ˚
->
	`dißbÀ_öãºu±
();

37 i‡(()(
d©a
->
queue
->
hód
->
time°amp
 - d©a->
öãrÁ˚
->
	`ªad
()) <= 0) {

40 
tickî_evít_t
 *
p
 = 
d©a
->
queue
->
hód
;

41 
d©a
->
queue
->
hód
 = d©a->queue->hód->
√xt
;

42 i‡(
d©a
->
queue
->
evít_h™dÀr
 !
NULL
) {

43 (*
d©a
->
queue
->
evít_h™dÀr
)(
p
->
id
);

50 
d©a
->
öãrÁ˚
->
	`£t_öãºu±
(d©a->
queue
->
hód
->
time°amp
);

54 
	}
}

56 
	$tickî_ö£π_evít
(c⁄° 
tickî_d©a_t
 *c⁄° 
d©a
, 
tickî_evít_t
 *
obj
, 
time°amp_t
 
time°amp
, 
uöt32_t
 
id
) {

58 
	`__dißbÀ_úq
();

61 
obj
->
time°amp
 =Åimestamp;

62 
obj
->
id
 = id;

67 
tickî_evít_t
 *
¥ev
 = 
NULL
, *
p
 = 
d©a
->
queue
->
hód
;

68 
p
 !
NULL
) {

70 i‡(()(
time°amp
 - 
p
->timestamp) < 0) {

74 
¥ev
 = 
p
;

75 
p
 =Ö->
√xt
;

78 i‡(
¥ev
 =
NULL
) {

79 
d©a
->
queue
->
hód
 = 
obj
;

80 
d©a
->
öãrÁ˚
->
	`£t_öãºu±
(
time°amp
);

82 
¥ev
->
√xt
 = 
obj
;

85 
obj
->
√xt
 = 
p
;

87 
	`__íabÀ_úq
();

88 
	}
}

90 
	$tickî_ªmove_evít
(c⁄° 
tickî_d©a_t
 *c⁄° 
d©a
, 
tickî_evít_t
 *
obj
) {

91 
	`__dißbÀ_úq
();

94 i‡(
d©a
->
queue
->
hód
 =
obj
) {

96 
d©a
->
queue
->
hód
 = 
obj
->
√xt
;

97 i‡(
d©a
->
queue
->
hód
 =
NULL
) {

98 
d©a
->
öãrÁ˚
->
	`dißbÀ_öãºu±
();

100 
d©a
->
öãrÁ˚
->
	`£t_öãºu±
(d©a->
queue
->
hód
->
time°amp
);

104 
tickî_evít_t
* 
p
 = 
d©a
->
queue
->
hód
;

105 
p
 !
NULL
) {

106 i‡(
p
->
√xt
 =
obj
) {

107 
p
->
√xt
 = 
obj
->next;

110 
p
 =Ö->
√xt
;

114 
	`__íabÀ_úq
();

115 
	}
}

117 
time°amp_t
 
	$tickî_ªad
(c⁄° 
tickî_d©a_t
 *c⁄° 
d©a
)

119  
d©a
->
öãrÁ˚
->
	`ªad
();

120 
	}
}

122 
	$tickî_gë_√xt_time°amp
(c⁄° 
tickî_d©a_t
 *c⁄° 
d©a
, 
time°amp_t
 *
time°amp
)

124 
ªt
 = 0;

127 
	`__dißbÀ_úq
();

128 i‡(
d©a
->
queue
->
hód
 !
NULL
) {

129 *
time°amp
 = 
d©a
->
queue
->
hód
->timestamp;

130 
ªt
 = 1;

132 
	`__íabÀ_úq
();

134  
ªt
;

135 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\us_ticker_api.c

16 
	~"us_tickî_≠i.h
"

18 
tickî_evít_queue_t
 
	gevíts
;

20 c⁄° 
tickî_öãrÁ˚_t
 
	gus_öãrÁ˚
 = {

21 .
öô
 = 
us_tickî_öô
,

22 .
	gªad
 = 
us_tickî_ªad
,

23 .
	gdißbÀ_öãºu±
 = 
us_tickî_dißbÀ_öãºu±
,

24 .
	g˛ór_öãºu±
 = 
us_tickî_˛ór_öãºu±
,

25 .
	g£t_öãºu±
 = 
us_tickî_£t_öãºu±
,

28 c⁄° 
tickî_d©a_t
 
	gus_d©a
 = {

29 .
öãrÁ˚
 = &
us_öãrÁ˚
,

30 .
	gqueue
 = &
evíts
,

33 c⁄° 
tickî_d©a_t
* 
	$gë_us_tickî_d©a
()

35  &
us_d©a
;

36 
	}
}

38 
	$us_tickî_úq_h™dÀr
()

40 
	`tickî_úq_h™dÀr
(&
us_d©a
);

41 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\wait_api.c

16 
	~"waô_≠i.h
"

17 
	~"us_tickî_≠i.h
"

19 
	$waô
(
s
) {

20 
	`waô_us
(
s
 * 1000000.0f);

21 
	}
}

23 
	$waô_ms
(
ms
) {

24 
	`waô_us
(
ms
 * 1000);

25 
	}
}

27 
	$waô_us
(
us
) {

28 
uöt32_t
 
°¨t
 = 
	`us_tickî_ªad
();

29 (
	`us_tickî_ªad
(Ë- 
°¨t
Ë< (
uöt32_t
)
us
);

30 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\analogin_api.h

16 #i‚de‡
MBED_ANALOGIN_API_H


17 
	#MBED_ANALOGIN_API_H


	)

19 
	~"devi˚.h
"

21 #i‡
DEVICE_ANALOGIN


23 #ifde‡
__˝lu•lus


27 
™Æogö_s
 
	t™Æogö_t
;

29 
™Æogö_öô
 (
™Æogö_t
 *
obj
, 
PöName
 
pö
);

30 
™Æogö_ªad
 (
™Æogö_t
 *
obj
);

31 
uöt16_t
 
™Æogö_ªad_u16
(
™Æogö_t
 *
obj
);

33 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\analogout_api.h

16 #i‚de‡
MBED_ANALOGOUT_API_H


17 
	#MBED_ANALOGOUT_API_H


	)

19 
	~"devi˚.h
"

21 #i‡
DEVICE_ANALOGOUT


23 #ifde‡
__˝lu•lus


27 
dac_s
 
	tdac_t
;

29 
™Æogout_öô
 (
dac_t
 *
obj
, 
PöName
 
pö
);

30 
™Æogout_‰ì
 (
dac_t
 *
obj
);

31 
™Æogout_wrôe
 (
dac_t
 *
obj
, 
vÆue
);

32 
™Æogout_wrôe_u16
(
dac_t
 *
obj
, 
uöt16_t
 
vÆue
);

33 
™Æogout_ªad
 (
dac_t
 *
obj
);

34 
uöt16_t
 
™Æogout_ªad_u16
 (
dac_t
 *
obj
);

36 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\buffer.h

16 #i‚de‡
MBED_BUFFER_H


17 
	#MBED_BUFFER_H


	)

19 
	~<°ddef.h
>

23 
	sbuf„r_s
 {

24 *
	mbuf„r
;

25 
size_t
 
	mÀngth
;

26 
size_t
 
	mpos
;

27 
uöt8_t
 
	mwidth
;

28 } 
	tbuf„r_t
;

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\can_api.h

16 #i‚de‡
MBED_CAN_API_H


17 
	#MBED_CAN_API_H


	)

19 
	~"devi˚.h
"

21 #i‡
DEVICE_CAN


23 
	~"PöNames.h
"

24 
	~"PîùhîÆNames.h
"

25 
	~"ˇn_hñ≥r.h
"

27 #ifde‡
__˝lu•lus


32 
IRQ_RX
,

33 
IRQ_TX
,

34 
IRQ_ERROR
,

35 
IRQ_OVERRUN
,

36 
IRQ_WAKEUP
,

37 
IRQ_PASSIVE
,

38 
IRQ_ARB
,

39 
IRQ_BUS
,

40 
IRQ_READY


41 } 
	tC™IrqTy≥
;

45 
MODE_RESET
,

46 
MODE_NORMAL
,

47 
MODE_SILENT
,

48 
MODE_TEST_LOCAL
,

49 
MODE_TEST_GLOBAL
,

50 
MODE_TEST_SILENT


51 } 
	tC™Mode
;

53 (*
ˇn_úq_h™dÀr
)(
	tuöt32_t
 
	tid
, 
	tC™IrqTy≥
 
	tty≥
);

55 
ˇn_s
 
	tˇn_t
;

57 
ˇn_öô
 (
ˇn_t
 *
obj
, 
PöName
 
rd
, PöNamê
td
);

58 
ˇn_‰ì
 (
ˇn_t
 *
obj
);

59 
ˇn_‰equícy
(
ˇn_t
 *
obj
, 
hz
);

61 
ˇn_úq_öô
 (
ˇn_t
 *
obj
, 
ˇn_úq_h™dÀr
 
h™dÀr
, 
uöt32_t
 
id
);

62 
ˇn_úq_‰ì
 (
ˇn_t
 *
obj
);

63 
ˇn_úq_£t
 (
ˇn_t
 *
obj
, 
C™IrqTy≥
 
úq
, 
uöt32_t
 
íabÀ
);

65 
ˇn_wrôe
 (
ˇn_t
 *
obj
, 
CAN_Mesßge
, 
cc
);

66 
ˇn_ªad
 (
ˇn_t
 *
obj
, 
CAN_Mesßge
 *
msg
, 
h™dÀ
);

67 
ˇn_mode
 (
ˇn_t
 *
obj
, 
C™Mode
 
mode
);

68 
ˇn_fûãr
(
ˇn_t
 *
obj
, 
uöt32_t
 
id
, uöt32_à
mask
, 
CANF‹m©
 
f‹m©
, 
öt32_t
 
h™dÀ
);

69 
ˇn_ª£t
 (
ˇn_t
 *
obj
);

70 
ˇn_rdîr‹
 (
ˇn_t
 *
obj
);

71 
ˇn_tdîr‹
 (
ˇn_t
 *
obj
);

72 
ˇn_m⁄ô‹
 (
ˇn_t
 *
obj
, 
sûít
);

74 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\dma_api.h

16 #i‚de‡
MBED_DMA_API_H


17 
	#MBED_DMA_API_H


	)

19 
	~<°döt.h
>

21 
	#DMA_ERROR_OUT_OF_CHANNELS
 (-1)

	)

24 
	mDMA_USAGE_NEVER
,

25 
	mDMA_USAGE_OPPORTUNISTIC
,

26 
	mDMA_USAGE_ALWAYS
,

27 
	mDMA_USAGE_TEMPORARY_ALLOCATED
,

28 
	mDMA_USAGE_ALLOCATED


29 } 
	tDMAUßge
;

31 #ifde‡
__˝lu•lus


35 
dma_öô
();

37 
dma_ch™√l_Æloˇã
(
uöt32_t
 
ˇ∑bûôõs
);

39 
dma_ch™√l_‰ì
(
ch™√lid
);

41 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\ethernet_api.h

16 #i‚de‡
MBED_ETHERNET_API_H


17 
	#MBED_ETHERNET_API_H


	)

19 
	~"devi˚.h
"

21 #i‡
DEVICE_ETHERNET


23 #ifde‡
__˝lu•lus


29 
ëhî√t_öô
();

30 
ëhî√t_‰ì
();

35 
ëhî√t_wrôe
(c⁄° *
d©a
, 
size
);

38 
ëhî√t_£nd
();

41 
ëhî√t_ª˚ive
();

45 
ëhî√t_ªad
(*
d©a
, 
size
);

48 
ëhî√t_addªss
(*
mac
);

51 
ëhî√t_lök
();

54 
ëhî√t_£t_lök
(
•ìd
, 
du∂ex
);

56 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\gpio_api.h

16 #i‚de‡
MBED_GPIO_API_H


17 
	#MBED_GPIO_API_H


	)

19 
	~"devi˚.h
"

21 #ifde‡
__˝lu•lus


29 
uöt32_t
 
gpio_£t
(
PöName
 
pö
);

35 
gpio_is_c⁄√˘ed
(c⁄° 
gpio_t
 *
obj
);

38 
gpio_öô
(
gpio_t
 *
obj
, 
PöName
 
pö
);

40 
gpio_mode
 (
gpio_t
 *
obj
, 
PöMode
 
mode
);

41 
gpio_dú
 (
gpio_t
 *
obj
, 
PöDúe˘i⁄
 
dúe˘i⁄
);

43 
gpio_wrôe
(
gpio_t
 *
obj
, 
vÆue
);

44 
gpio_ªad
 (
gpio_t
 *
obj
);

47 
gpio_öô_ö
(
gpio_t
* 
gpio
, 
PöName
 
pö
);

48 
gpio_öô_ö_ex
(
gpio_t
* 
gpio
, 
PöName
 
pö
, 
PöMode
 
mode
);

49 
gpio_öô_out
(
gpio_t
* 
gpio
, 
PöName
 
pö
);

50 
gpio_öô_out_ex
(
gpio_t
* 
gpio
, 
PöName
 
pö
, 
vÆue
);

51 
gpio_öô_öout
(
gpio_t
* 
gpio
, 
PöName
 
pö
, 
PöDúe˘i⁄
 
dúe˘i⁄
, 
PöMode
 
mode
, 
vÆue
);

53 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\gpio_irq_api.h

16 #i‚de‡
MBED_GPIO_IRQ_API_H


17 
	#MBED_GPIO_IRQ_API_H


	)

19 
	~"devi˚.h
"

21 #i‡
DEVICE_INTERRUPTIN


23 #ifde‡
__˝lu•lus


28 
IRQ_NONE
,

29 
IRQ_RISE
,

30 
IRQ_FALL


31 } 
	tgpio_úq_evít
;

33 
gpio_úq_s
 
	tgpio_úq_t
;

35 (*
gpio_úq_h™dÀr
)(
	tuöt32_t
 
	tid
, 
	tgpio_úq_evít
 
	tevít
);

37 
gpio_úq_öô
(
gpio_úq_t
 *
obj
, 
PöName
 
pö
, 
gpio_úq_h™dÀr
 
h™dÀr
, 
uöt32_t
 
id
);

38 
gpio_úq_‰ì
(
gpio_úq_t
 *
obj
);

39 
gpio_úq_£t
 (
gpio_úq_t
 *
obj
, 
gpio_úq_evít
 
evít
, 
uöt32_t
 
íabÀ
);

40 
gpio_úq_íabÀ
(
gpio_úq_t
 *
obj
);

41 
gpio_úq_dißbÀ
(
gpio_úq_t
 *
obj
);

43 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\i2c_api.h

16 #i‚de‡
MBED_I2C_API_H


17 
	#MBED_I2C_API_H


	)

19 
	~"devi˚.h
"

20 
	~"buf„r.h
"

22 #i‡
DEVICE_I2C


29 
	#I2C_EVENT_ERROR
 (1 << 1)

	)

30 
	#I2C_EVENT_ERROR_NO_SLAVE
 (1 << 2)

	)

31 
	#I2C_EVENT_TRANSFER_COMPLETE
 (1 << 3)

	)

32 
	#I2C_EVENT_TRANSFER_EARLY_NACK
 (1 << 4)

	)

33 
	#I2C_EVENT_ALL
 (
I2C_EVENT_ERROR
 | 
I2C_EVENT_TRANSFER_COMPLETE
 | 
I2C_EVENT_ERROR_NO_SLAVE
 | 
I2C_EVENT_TRANSFER_EARLY_NACK
)

	)

37 #i‡
DEVICE_I2C_ASYNCH


41 
i2c_s
 
	mi2c
;

42 
buf„r_s
 
	mtx_buff
;

43 
buf„r_s
 
	mrx_buff
;

44 } 
	ti2c_t
;

49 
i2c_s
 
	ti2c_t
;

54 
	mI2C_ERROR_NO_SLAVE
 = -1,

55 
	mI2C_ERROR_BUS_BUSY
 = -2

58 #ifde‡
__˝lu•lus


73 
i2c_öô
(
i2c_t
 *
obj
, 
PöName
 
sda
, PöNamê
s˛
);

79 
i2c_‰equícy
(
i2c_t
 *
obj
, 
hz
);

84 
i2c_°¨t
(
i2c_t
 *
obj
);

89 
i2c_°›
(
i2c_t
 *
obj
);

99 
i2c_ªad
(
i2c_t
 *
obj
, 
addªss
, *
d©a
, 
Àngth
, 
°›
);

109 
i2c_wrôe
(
i2c_t
 *
obj
, 
addªss
, c⁄° *
d©a
, 
Àngth
, 
°›
);

114 
i2c_ª£t
(
i2c_t
 *
obj
);

121 
i2c_byã_ªad
(
i2c_t
 *
obj
, 
œ°
);

128 
i2c_byã_wrôe
(
i2c_t
 *
obj
, 
d©a
);

132 #i‡
DEVICE_I2CSLAVE


143 
i2c_¶ave_mode
(
i2c_t
 *
obj
, 
íabÀ_¶ave
);

150 
i2c_¶ave_ª˚ive
(
i2c_t
 *
obj
);

156 
i2c_¶ave_ªad
(
i2c_t
 *
obj
, *
d©a
, 
Àngth
);

162 
i2c_¶ave_wrôe
(
i2c_t
 *
obj
, c⁄° *
d©a
, 
Àngth
);

170 
i2c_¶ave_addªss
(
i2c_t
 *
obj
, 
idx
, 
uöt32_t
 
addªss
, uöt32_à
mask
);

176 #i‡
DEVICE_I2C_ASYNCH


194 
i2c_å™s„r_asynch
(
i2c_t
 *
obj
, c⁄° *
tx
, 
size_t
 
tx_Àngth
, *
rx
, size_à
rx_Àngth
, 
uöt32_t
 
addªss
, uöt32_à
°›
, uöt32_à
h™dÀr
, uöt32_à
evít
, 
DMAUßge
 
höt
);

200 
uöt32_t
 
i2c_úq_h™dÀr_asynch
(
i2c_t
 *
obj
);

206 
uöt8_t
 
i2c_a˘ive
(
i2c_t
 *
obj
);

211 
i2c_ab‹t_asynch
(
i2c_t
 *
obj
);

217 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\lp_ticker_api.h

16 #i‚de‡
MBED_LPTICKER_API_H


17 
	#MBED_LPTICKER_API_H


	)

19 
	~"devi˚.h
"

21 #i‡
DEVICE_LOWPOWERTIMER


23 
	~"tickî_≠i.h
"

25 #ifde‡
__˝lu•lus


38 c⁄° 
tickî_d©a_t
* 
gë_Õ_tickî_d©a
();

43 
Õ_tickî_úq_h™dÀr
();

50 
Õ_tickî_öô
();

56 
uöt32_t
 
Õ_tickî_ªad
();

62 
Õ_tickî_£t_öãºu±
(
time°amp_t
 
time°amp
);

67 
Õ_tickî_dißbÀ_öãºu±
();

72 
Õ_tickî_˛ór_öãºu±
();

76 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\pinmap.h

16 #i‚de‡
MBED_PINMAP_H


17 
	#MBED_PINMAP_H


	)

19 
	~"PöNames.h
"

21 #ifde‡
__˝lu•lus


26 
PöName
 
pö
;

27 
≥rùhîÆ
;

28 
fun˘i⁄
;

29 } 
	tPöM≠
;

31 
pö_fun˘i⁄
(
PöName
 
pö
, 
fun˘i⁄
);

32 
pö_mode
 (
PöName
 
pö
, 
PöMode
 
mode
);

34 
uöt32_t
 
pöm≠_≥rùhîÆ
(
PöName
 
pö
, c⁄° 
PöM≠
* 
m≠
);

35 
uöt32_t
 
pöm≠_fun˘i⁄
(
PöName
 
pö
, c⁄° 
PöM≠
* 
m≠
);

36 
uöt32_t
 
pöm≠_mîge
 (uöt32_à
a
, uöt32_à
b
);

37 
pöm≠_pöout
 (
PöName
 
pö
, c⁄° 
PöM≠
 *
m≠
);

38 
uöt32_t
 
pöm≠_föd_≥rùhîÆ
(
PöName
 
pö
, c⁄° 
PöM≠
* 
m≠
);

39 
uöt32_t
 
pöm≠_föd_fun˘i⁄
(
PöName
 
pö
, c⁄° 
PöM≠
* 
m≠
);

41 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\port_api.h

16 #i‚de‡
MBED_PORTMAP_H


17 
	#MBED_PORTMAP_H


	)

19 
	~"devi˚.h
"

21 #i‡
DEVICE_PORTIN
 || 
DEVICE_PORTOUT


23 #ifde‡
__˝lu•lus


27 
p‹t_s
 
	tp‹t_t
;

29 
PöName
 
p‹t_pö
(
P‹tName
 
p‹t
, 
pö_n
);

31 
p‹t_öô
 (
p‹t_t
 *
obj
, 
P‹tName
 
p‹t
, 
mask
, 
PöDúe˘i⁄
 
dú
);

32 
p‹t_mode
 (
p‹t_t
 *
obj
, 
PöMode
 
mode
);

33 
p‹t_dú
 (
p‹t_t
 *
obj
, 
PöDúe˘i⁄
 
dú
);

34 
p‹t_wrôe
(
p‹t_t
 *
obj
, 
vÆue
);

35 
p‹t_ªad
 (
p‹t_t
 *
obj
);

37 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\pwmout_api.h

16 #i‚de‡
MBED_PWMOUT_API_H


17 
	#MBED_PWMOUT_API_H


	)

19 
	~"devi˚.h
"

21 #i‡
DEVICE_PWMOUT


23 #ifde‡
__˝lu•lus


27 
pwmout_s
 
	tpwmout_t
;

29 
pwmout_öô
 (
pwmout_t
* 
obj
, 
PöName
 
pö
);

30 
pwmout_‰ì
 (
pwmout_t
* 
obj
);

32 
pwmout_wrôe
 (
pwmout_t
* 
obj
, 
≥r˚¡
);

33 
pwmout_ªad
 (
pwmout_t
* 
obj
);

35 
pwmout_≥riod
 (
pwmout_t
* 
obj
, 
£c⁄ds
);

36 
pwmout_≥riod_ms
 (
pwmout_t
* 
obj
, 
ms
);

37 
pwmout_≥riod_us
 (
pwmout_t
* 
obj
, 
us
);

39 
pwmout_pul£width
 (
pwmout_t
* 
obj
, 
£c⁄ds
);

40 
pwmout_pul£width_ms
(
pwmout_t
* 
obj
, 
ms
);

41 
pwmout_pul£width_us
(
pwmout_t
* 
obj
, 
us
);

43 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\rtc_api.h

16 #i‚de‡
MBED_RTC_API_H


17 
	#MBED_RTC_API_H


	)

19 
	~"devi˚.h
"

21 #i‡
DEVICE_RTC


23 
	~<time.h
>

25 #ifde‡
__˝lu•lus


29 
πc_öô
();

30 
πc_‰ì
();

31 
πc_i£«bÀd
();

33 
time_t
 
πc_ªad
();

34 
πc_wrôe
(
time_t
 
t
);

36 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\serial_api.h

16 #i‚de‡
MBED_SERIAL_API_H


17 
	#MBED_SERIAL_API_H


	)

19 
	~"devi˚.h
"

20 
	~"buf„r.h
"

21 
	~"dma_≠i.h
"

23 #i‡
DEVICE_SERIAL


25 
	#SERIAL_EVENT_TX_SHIFT
 (2)

	)

26 
	#SERIAL_EVENT_RX_SHIFT
 (8)

	)

28 
	#SERIAL_EVENT_TX_MASK
 (0x00FC)

	)

29 
	#SERIAL_EVENT_RX_MASK
 (0x3F00)

	)

31 
	#SERIAL_EVENT_ERROR
 (1 << 1)

	)

38 
	#SERIAL_EVENT_TX_COMPLETE
 (1 << (
SERIAL_EVENT_TX_SHIFT
 + 0))

	)

39 
	#SERIAL_EVENT_TX_ALL
 (
SERIAL_EVENT_TX_COMPLETE
)

	)

47 
	#SERIAL_EVENT_RX_COMPLETE
 (1 << (
SERIAL_EVENT_RX_SHIFT
 + 0))

	)

48 
	#SERIAL_EVENT_RX_OVERRUN_ERROR
 (1 << (
SERIAL_EVENT_RX_SHIFT
 + 1))

	)

49 
	#SERIAL_EVENT_RX_FRAMING_ERROR
 (1 << (
SERIAL_EVENT_RX_SHIFT
 + 2))

	)

50 
	#SERIAL_EVENT_RX_PARITY_ERROR
 (1 << (
SERIAL_EVENT_RX_SHIFT
 + 3))

	)

51 
	#SERIAL_EVENT_RX_OVERFLOW
 (1 << (
SERIAL_EVENT_RX_SHIFT
 + 4))

	)

52 
	#SERIAL_EVENT_RX_CHARACTER_MATCH
 (1 << (
SERIAL_EVENT_RX_SHIFT
 + 5))

	)

53 
	#SERIAL_EVENT_RX_ALL
 (
SERIAL_EVENT_RX_OVERFLOW
 | 
SERIAL_EVENT_RX_PARITY_ERROR
 | \

54 
SERIAL_EVENT_RX_FRAMING_ERROR
 | 
SERIAL_EVENT_RX_OVERRUN_ERROR
 | \

55 
SERIAL_EVENT_RX_COMPLETE
 | 
SERIAL_EVENT_RX_CHARACTER_MATCH
)

	)

58 
	#SERIAL_RESERVED_CHAR_MATCH
 (255)

	)

61 
	mP¨ôyN⁄e
 = 0,

62 
	mP¨ôyOdd
 = 1,

63 
	mP¨ôyEví
 = 2,

64 
	mP¨ôyF‹˚d1
 = 3,

65 
	mP¨ôyF‹˚d0
 = 4

66 } 
	tSîülP¨ôy
;

69 
	mRxIrq
,

70 
	mTxIrq


71 } 
	tSîülIrq
;

74 
	mFlowC⁄åﬁN⁄e
,

75 
	mFlowC⁄åﬁRTS
,

76 
	mFlowC⁄åﬁCTS
,

77 
	mFlowC⁄åﬁRTSCTS


78 } 
	tFlowC⁄åﬁ
;

80 (*
	tu¨t_úq_h™dÀr
)(
	tuöt32_t
 
	tid
, 
	tSîülIrq
 
	tevít
);

82 #i‡
DEVICE_SERIAL_ASYNCH


86 
£rül_s
 
£rül
;

87 
buf„r_s
 
tx_buff
;

88 
buf„r_s
 
rx_buff
;

89 
uöt8_t
 
ch¨_m©ch
;

90 
uöt8_t
 
ch¨_found
;

91 } 
	t£rül_t
;

96 
£rül_s
 
	t£rül_t
;

100 #ifde‡
__˝lu•lus


116 
	`£rül_öô
(
£rül_t
 *
obj
, 
PöName
 
tx
, PöNamê
rx
);

123 
	`£rül_‰ì
(
£rül_t
 *
obj
);

130 
	`£rül_baud
(
£rül_t
 *
obj
, 
baudøã
);

139 
	`£rül_f‹m©
(
£rül_t
 *
obj
, 
d©a_bôs
, 
SîülP¨ôy
 
∑rôy
, 
°›_bôs
);

147 
	`£rül_úq_h™dÀr
(
£rül_t
 *
obj
, 
u¨t_úq_h™dÀr
 
h™dÀr
, 
uöt32_t
 
id
);

155 
	`£rül_úq_£t
(
£rül_t
 *
obj
, 
SîülIrq
 
úq
, 
uöt32_t
 
íabÀ
);

161 
	`£rül_gëc
(
£rül_t
 *
obj
);

169 
	`£rül_putc
(
£rül_t
 *
obj
, 
c
);

176 
	`£rül_ªadabÀ
(
£rül_t
 *
obj
);

183 
	`£rül_wrôabÀ
(
£rül_t
 *
obj
);

189 
	`£rül_˛ór
(
£rül_t
 *
obj
);

195 
	`£rül_bªak_£t
(
£rül_t
 *
obj
);

201 
	`£rül_bªak_˛ór
(
£rül_t
 *
obj
);

207 
	`£rül_pöout_tx
(
PöName
 
tx
);

217 
	`£rül_£t_Êow_c⁄åﬁ
(
£rül_t
 *
obj
, 
FlowC⁄åﬁ
 
ty≥
, 
PöName
 
rxÊow
, PöNamê
txÊow
);

219 #i‡
DEVICE_SERIAL_ASYNCH


240 
	`£rül_tx_asynch
(
£rül_t
 *
obj
, c⁄° *
tx
, 
size_t
 
tx_Àngth
, 
uöt8_t
 
tx_width
, 
uöt32_t
 
h™dÀr
, uöt32_à
evít
, 
DMAUßge
 
höt
);

255 
	`£rül_rx_asynch
(
£rül_t
 *
obj
, *
rx
, 
size_t
 
rx_Àngth
, 
uöt8_t
 
rx_width
, 
uöt32_t
 
h™dÀr
, uöt32_à
evít
, uöt8_à
ch¨_m©ch
, 
DMAUßge
 
höt
);

262 
uöt8_t
 
	`£rül_tx_a˘ive
(
£rül_t
 *
obj
);

269 
uöt8_t
 
	`£rül_rx_a˘ive
(
£rül_t
 *
obj
);

276 
	`£rül_úq_h™dÀr_asynch
(
£rül_t
 *
obj
);

283 
	`£rül_tx_ab‹t_asynch
(
£rül_t
 *
obj
);

290 
	`£rül_rx_ab‹t_asynch
(
£rül_t
 *
obj
);

296 #ifde‡
__˝lu•lus


297 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\sleep_api.h

16 #i‚de‡
MBED_SLEEP_API_H


17 
	#MBED_SLEEP_API_H


	)

19 
	~"devi˚.h
"

21 #i‡
DEVICE_SLEEP


23 #ifde‡
__˝lu•lus


41 
¶ìp
();

56 
dìp¶ìp
();

58 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\spi_api.h

16 #i‚de‡
MBED_SPI_API_H


17 
	#MBED_SPI_API_H


	)

19 
	~"devi˚.h
"

20 
	~"dma_≠i.h
"

21 
	~"buf„r.h
"

23 #i‡
DEVICE_SPI


25 
	#SPI_EVENT_ERROR
 (1 << 1)

	)

26 
	#SPI_EVENT_COMPLETE
 (1 << 2)

	)

27 
	#SPI_EVENT_RX_OVERFLOW
 (1 << 3)

	)

28 
	#SPI_EVENT_ALL
 (
SPI_EVENT_ERROR
 | 
SPI_EVENT_COMPLETE
 | 
SPI_EVENT_RX_OVERFLOW
)

	)

30 
	#SPI_EVENT_INTERNAL_TRANSFER_COMPLETE
 (1 << 30)

31 

	)

32 
	#SPI_FILL_WORD
 (0xFFFF)

	)

34 #i‡
DEVICE_SPI_ASYNCH


38 
•i_s
 
	m•i
;

39 
buf„r_s
 
	mtx_buff
;

40 
buf„r_s
 
	mrx_buff
;

41 } 
	t•i_t
;

46 
•i_s
 
	t•i_t
;

50 #ifde‡
__˝lu•lus


68 
•i_öô
(
•i_t
 *
obj
, 
PöName
 
mosi
, PöNamê
miso
, PöNamê
s˛k
, PöNamê
s£l
);

80 
•i_‰ì
(
•i_t
 *
obj
);

90 
•i_f‹m©
(
•i_t
 *
obj
, 
bôs
, 
mode
, 
¶ave
);

99 
•i_‰equícy
(
•i_t
 *
obj
, 
hz
);

113 
•i_ma°î_wrôe
(
•i_t
 *
obj
, 
vÆue
);

120 
•i_¶ave_ª˚ive
(
•i_t
 *
obj
);

128 
•i_¶ave_ªad
(
•i_t
 *
obj
);

136 
•i_¶ave_wrôe
(
•i_t
 *
obj
, 
vÆue
);

143 
•i_busy
(
•i_t
 *
obj
);

150 
uöt8_t
 
•i_gë_moduÀ
(
•i_t
 *
obj
);

154 #i‡
DEVICE_SPI_ASYNCH


172 
•i_ma°î_å™s„r
(
•i_t
 *
obj
, c⁄° *
tx
, 
size_t
 
tx_Àngth
, *
rx
, size_à
rx_Àngth
, 
uöt8_t
 
bô_width
, 
uöt32_t
 
h™dÀr
, uöt32_à
evít
, 
DMAUßge
 
höt
);

181 
uöt32_t
 
•i_úq_h™dÀr_asynch
(
•i_t
 *
obj
);

194 
uöt8_t
 
•i_a˘ive
(
•i_t
 *
obj
);

200 
•i_ab‹t_asynch
(
•i_t
 *
obj
);

207 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\ticker_api.h

16 #i‚de‡
MBED_TICKER_API_H


17 
	#MBED_TICKER_API_H


	)

19 
	~"devi˚.h
"

21 
uöt32_t
 
	ttime°amp_t
;

25 
	stickî_evít_s
 {

26 
time°amp_t
 
	mtime°amp
;

27 
uöt32_t
 
	mid
;

28 
tickî_evít_s
 *
	m√xt
;

29 } 
	ttickî_evít_t
;

31 (*
	ttickî_evít_h™dÀr
)(
	tuöt32_t
 
	tid
);

36 (*
öô
)();

37 
	`uöt32_t
 (*
ªad
)();

38 (*
dißbÀ_öãºu±
)();

39 (*
˛ór_öãºu±
)();

40 (*
£t_öãºu±
)(
time°amp_t
 
time°amp
);

41 } 
	ttickî_öãrÁ˚_t
;

46 
tickî_evít_h™dÀr
 
evít_h™dÀr
;

47 
tickî_evít_t
 *
hód
;

48 } 
	ttickî_evít_queue_t
;

53 c⁄° 
tickî_öãrÁ˚_t
 *
öãrÁ˚
;

54 
tickî_evít_queue_t
 *
queue
;

55 } 
	ttickî_d©a_t
;

57 #ifde‡
__˝lu•lus


66 
	`tickî_£t_h™dÀr
(c⁄° 
tickî_d©a_t
 *c⁄° 
d©a
, 
tickî_evít_h™dÀr
 
h™dÀr
);

72 
	`tickî_úq_h™dÀr
(c⁄° 
tickî_d©a_t
 *c⁄° 
d©a
);

79 
	`tickî_ªmove_evít
(c⁄° 
tickî_d©a_t
 *c⁄° 
d©a
, 
tickî_evít_t
 *
obj
);

88 
	`tickî_ö£π_evít
(c⁄° 
tickî_d©a_t
 *c⁄° 
d©a
, 
tickî_evít_t
 *
obj
, 
time°amp_t
 
time°amp
, 
uöt32_t
 
id
);

95 
time°amp_t
 
	`tickî_ªad
(c⁄° 
tickî_d©a_t
 *c⁄° 
d©a
);

102 
	`tickî_gë_√xt_time°amp
(c⁄° 
tickî_d©a_t
 *c⁄° 
d©a
, 
time°amp_t
 *
time°amp
);

104 #ifde‡
__˝lu•lus


105 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\us_ticker_api.h

16 #i‚de‡
MBED_US_TICKER_API_H


17 
	#MBED_US_TICKER_API_H


	)

19 
	~<°döt.h
>

20 
	~"tickî_≠i.h
"

22 #ifde‡
__˝lu•lus


35 c⁄° 
tickî_d©a_t
* 
gë_us_tickî_d©a
();

41 
us_tickî_úq_h™dÀr
();

48 
us_tickî_öô
();

54 
uöt32_t
 
us_tickî_ªad
();

60 
us_tickî_£t_öãºu±
(
time°amp_t
 
time°amp
);

65 
us_tickî_dißbÀ_öãºu±
();

70 
us_tickî_˛ór_öãºu±
();

74 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\TARGET_NXP\TARGET_LPC11U6X\LPC11U6x.h

27 #i‚de‡
LPC11U6X_H


28 
	#LPC11U6X_H


	)

30 #ifde‡
__˝lu•lus


39 
Re£t_IRQn
 = -15,

40 
N⁄MaskabÀI¡_IRQn
 = -14,

41 
H¨dFau…_IRQn
 = -13,

45 
SVCÆl_IRQn
 = -5,

48 
PídSV_IRQn
 = -2,

49 
SysTick_IRQn
 = -1,

51 
PIN_INT0_IRQn
 = 0,

52 
PIN_INT1_IRQn
 = 1,

53 
PIN_INT2_IRQn
 = 2,

54 
PIN_INT3_IRQn
 = 3,

55 
PIN_INT4_IRQn
 = 4,

56 
PIN_INT5_IRQn
 = 5,

57 
PIN_INT6_IRQn
 = 6,

58 
PIN_INT7_IRQn
 = 7,

59 
GINT0_IRQn
 = 8,

60 
GINT1_IRQn
 = 9,

61 
I2C1_IRQn
 = 10,

62 
USART1_4_IRQn
 = 11,

63 
USART2_3_IRQn
 = 12,

64 
SCT0_1_IRQn
 = 13,

65 
SSP1_IRQn
 = 14,

66 
I2C0_IRQn
 = 15,

67 
CT16B0_IRQn
 = 16,

68 
CT16B1_IRQn
 = 17,

69 
CT32B0_IRQn
 = 18,

70 
CT32B1_IRQn
 = 19,

71 
SSP0_IRQn
 = 20,

72 
USART0_IRQn
 = 21,

73 
USB_IRQn
 = 22,

74 
USB_FIQ_IRQn
 = 23,

75 
ADC_A_IRQn
 = 24,

76 
RTC_IRQn
 = 25,

77 
BOD_WDT_IRQn
 = 26,

78 
FLASH_IRQn
 = 27,

79 
DMA_IRQn
 = 28,

80 
ADC_B_IRQn
 = 29,

81 
USBWAKEUP_IRQn
 = 30

82 } 
	tIRQn_Ty≥
;

95 
	#__CM0PLUS_REV
 0x0000

	)

96 
	#__MPU_PRESENT
 0

	)

97 
	#__NVIC_PRIO_BITS
 2

	)

98 
	#__Víd‹_SysTickC⁄fig
 0

	)

99 
	#__VTOR_PRESENT
 1

	)

102 
	~"c‹e_cm0∂us.h
"

103 
	~"sy°em_LPC11U6x.h
"

117 #i‡
deföed
(
__CC_ARM
)

118 #¥agm®
push


119 #¥agm®
™⁄_uni⁄s


120 #ñi‡
deföed
(
__ICCARM__
)

121 #¥agm®
œnguage
=
exãnded


122 #ñi‡
deföed
(
__GNUC__
)

124 #ñi‡
deföed
(
__TMS470__
)

126 #ñi‡
deföed
(
__TASKING__
)

127 #¥agm®
w¨nög
 586

129 #w¨nög 
NŸ
 
suµ‹ãd
 
compûî
 
ty≥


144 
__IO
 
uöt32_t
 
CONSET
;

148 
__I
 
uöt32_t
 
STAT
;

151 
__IO
 
uöt32_t
 
DAT
;

155 
__IO
 
uöt32_t
 
ADR0
;

159 
__IO
 
uöt32_t
 
SCLH
;

161 
__IO
 
uöt32_t
 
SCLL
;

165 
__O
 
uöt32_t
 
CONCLR
;

169 
__IO
 
uöt32_t
 
MMCTRL
;

170 
__IO
 
uöt32_t
 
ADR1
;

174 
__IO
 
uöt32_t
 
ADR2
;

178 
__IO
 
uöt32_t
 
ADR3
;

182 
__I
 
uöt32_t
 
DATA_BUFFER
;

186 
__IO
 
uöt32_t
 
MASK0
;

189 
__IO
 
uöt32_t
 
MASK1
;

192 
__IO
 
uöt32_t
 
MASK2
;

195 
__IO
 
uöt32_t
 
MASK3
;

198 } 
	tLPC_I2C0_Ty≥
;

211 
__IO
 
uöt32_t
 
MOD
;

213 
__IO
 
uöt32_t
 
TC
;

215 
__O
 
uöt32_t
 
FEED
;

218 
__I
 
uöt32_t
 
TV
;

220 
__IO
 
uöt32_t
 
CLKSEL
;

221 
__IO
 
uöt32_t
 
WARNINT
;

222 
__IO
 
uöt32_t
 
WINDOW
;

223 } 
	tLPC_WWDT_Ty≥
;

238 
__IO
 
uöt32_t
 
DLL
;

241 
__O
 
uöt32_t
 
THR
;

243 
__I
 
uöt32_t
 
RBR
;

248 
__IO
 
uöt32_t
 
IER
;

250 
__IO
 
uöt32_t
 
DLM
;

256 
__O
 
uöt32_t
 
FCR
;

257 
__I
 
uöt32_t
 
IIR
;

259 
__IO
 
uöt32_t
 
LCR
;

261 
__IO
 
uöt32_t
 
MCR
;

262 
__I
 
uöt32_t
 
LSR
;

264 
__I
 
uöt32_t
 
MSR
;

265 
__IO
 
uöt32_t
 
SCR
;

266 
__IO
 
uöt32_t
 
ACR
;

268 
__IO
 
uöt32_t
 
ICR
;

270 
__IO
 
uöt32_t
 
FDR
;

272 
__IO
 
uöt32_t
 
OSR
;

274 
__IO
 
uöt32_t
 
TER
;

276 
__I
 
uöt32_t
 
RESERVED0
[3];

277 
__IO
 
uöt32_t
 
HDEN
;

278 
__I
 
uöt32_t
 
RESERVED1
;

279 
__IO
 
uöt32_t
 
SCICTRL
;

281 
__IO
 
uöt32_t
 
RS485CTRL
;

283 
__IO
 
uöt32_t
 
RS485ADRMATCH
;

285 
__IO
 
uöt32_t
 
RS485DLY
;

286 
__IO
 
uöt32_t
 
SYNCCTRL
;

287 } 
	tLPC_USART0_Ty≥
;

300 
__IO
 
uöt32_t
 
IR
;

303 
__IO
 
uöt32_t
 
TCR
;

306 
__IO
 
uöt32_t
 
TC
;

308 
__IO
 
uöt32_t
 
PR
;

311 
__IO
 
uöt32_t
 
PC
;

315 
__IO
 
uöt32_t
 
MCR
;

317 
__IO
 
uöt32_t
 
MR0
;

320 
__IO
 
uöt32_t
 
MR1
;

323 
__IO
 
uöt32_t
 
MR2
;

326 
__IO
 
uöt32_t
 
MR3
;

329 
__IO
 
uöt32_t
 
CCR
;

332 
__I
 
uöt32_t
 
CR0
;

334 
__I
 
uöt32_t
 
CR1
;

336 
__I
 
uöt32_t
 
CR2
;

338 
__I
 
uöt32_t
 
RESERVED0
;

339 
__IO
 
uöt32_t
 
EMR
;

341 
__I
 
uöt32_t
 
RESERVED1
[12];

342 
__IO
 
uöt32_t
 
CTCR
;

345 
__IO
 
uöt32_t
 
PWMC
;

347 } 
	tLPC_CT16B0_Ty≥
;

360 
__IO
 
uöt32_t
 
IR
;

363 
__IO
 
uöt32_t
 
TCR
;

366 
__IO
 
uöt32_t
 
TC
;

368 
__IO
 
uöt32_t
 
PR
;

371 
__IO
 
uöt32_t
 
PC
;

375 
__IO
 
uöt32_t
 
MCR
;

377 
__IO
 
uöt32_t
 
MR0
;

380 
__IO
 
uöt32_t
 
MR1
;

383 
__IO
 
uöt32_t
 
MR2
;

386 
__IO
 
uöt32_t
 
MR3
;

389 
__IO
 
uöt32_t
 
CCR
;

392 
__I
 
uöt32_t
 
CR0
;

394 
__I
 
uöt32_t
 
CR1
;

396 
__I
 
uöt32_t
 
CR2
;

398 
__I
 
uöt32_t
 
RESERVED0
;

399 
__IO
 
uöt32_t
 
EMR
;

401 
__I
 
uöt32_t
 
RESERVED1
[12];

402 
__IO
 
uöt32_t
 
CTCR
;

405 
__IO
 
uöt32_t
 
PWMC
;

407 } 
	tLPC_CT32B0_Ty≥
;

420 
__IO
 
uöt32_t
 
CTRL
;

422 
__I
 
uöt32_t
 
RESERVED0
;

423 
__IO
 
uöt32_t
 
SEQA_CTRL
;

426 
__IO
 
uöt32_t
 
SEQB_CTRL
;

429 
__IO
 
uöt32_t
 
SEQA_GDAT
;

432 
__IO
 
uöt32_t
 
SEQB_GDAT
;

435 
__I
 
uöt32_t
 
RESERVED1
[2];

436 
__I
 
uöt32_t
 
DAT
[12];

438 
__IO
 
uöt32_t
 
THR0_LOW
;

441 
__IO
 
uöt32_t
 
THR1_LOW
;

444 
__IO
 
uöt32_t
 
THR0_HIGH
;

447 
__IO
 
uöt32_t
 
THR1_HIGH
;

450 
__I
 
uöt32_t
 
CHAN_THRSEL
;

452 
__IO
 
uöt32_t
 
INTEN
;

455 
__I
 
uöt32_t
 
FLAGS
;

459 
__IO
 
uöt32_t
 
TRM
;

460 } 
	tLPC_ADC_Ty≥
;

473 
__IO
 
uöt32_t
 
CTRL
;

474 
__IO
 
uöt32_t
 
MATCH
;

475 
__IO
 
uöt32_t
 
COUNT
;

476 
__IO
 
uöt32_t
 
WAKE
;

477 } 
	tLPC_RTC_Ty≥
;

490 
__IO
 
uöt32_t
 
DMA_ITRIG_PINMUX
[16];

491 } 
	tLPC_DMATRIGMUX_Ty≥
;

504 
__IO
 
uöt32_t
 
PCON
;

505 
__IO
 
uöt32_t
 
GPREG0
;

506 
__IO
 
uöt32_t
 
GPREG1
;

507 
__IO
 
uöt32_t
 
GPREG2
;

508 
__IO
 
uöt32_t
 
GPREG3
;

509 
__IO
 
uöt32_t
 
DPDCTRL
;

510 } 
	tLPC_PMU_Ty≥
;

523 
__I
 
uöt32_t
 
RESERVED0
[4];

524 
__IO
 
uöt32_t
 
FLASHCFG
;

525 
__I
 
uöt32_t
 
RESERVED1
[3];

526 
__IO
 
uöt32_t
 
FMSSTART
;

527 
__IO
 
uöt32_t
 
FMSSTOP
;

528 
__I
 
uöt32_t
 
RESERVED2
;

529 
__I
 
uöt32_t
 
FMSW0
;

530 } 
	tLPC_FLASHCTRL_Ty≥
;

543 
__IO
 
uöt32_t
 
CR0
;

545 
__IO
 
uöt32_t
 
CR1
;

546 
__IO
 
uöt32_t
 
DR
;

548 
__I
 
uöt32_t
 
SR
;

549 
__IO
 
uöt32_t
 
CPSR
;

550 
__IO
 
uöt32_t
 
IMSC
;

551 
__I
 
uöt32_t
 
RIS
;

552 
__I
 
uöt32_t
 
MIS
;

553 
__O
 
uöt32_t
 
ICR
;

554 } 
	tLPC_SSP0_Ty≥
;

567 
__IO
 
uöt32_t
 
PIO0_0
;

568 
__IO
 
uöt32_t
 
PIO0_1
;

569 
__IO
 
uöt32_t
 
PIO0_2
;

570 
__IO
 
uöt32_t
 
PIO0_3
;

571 
__IO
 
uöt32_t
 
PIO0_4
;

572 
__IO
 
uöt32_t
 
PIO0_5
;

573 
__IO
 
uöt32_t
 
PIO0_6
;

574 
__IO
 
uöt32_t
 
PIO0_7
;

575 
__IO
 
uöt32_t
 
PIO0_8
;

576 
__IO
 
uöt32_t
 
PIO0_9
;

577 
__IO
 
uöt32_t
 
PIO0_10
;

578 
__IO
 
uöt32_t
 
PIO0_11
;

579 
__IO
 
uöt32_t
 
PIO0_12
;

580 
__IO
 
uöt32_t
 
PIO0_13
;

581 
__IO
 
uöt32_t
 
PIO0_14
;

582 
__IO
 
uöt32_t
 
PIO0_15
;

583 
__IO
 
uöt32_t
 
PIO0_16
;

584 
__IO
 
uöt32_t
 
PIO0_17
;

585 
__IO
 
uöt32_t
 
PIO0_18
;

586 
__IO
 
uöt32_t
 
PIO0_19
;

587 
__IO
 
uöt32_t
 
PIO0_20
;

588 
__IO
 
uöt32_t
 
PIO0_21
;

589 
__IO
 
uöt32_t
 
PIO0_22
;

590 
__IO
 
uöt32_t
 
PIO0_23
;

591 
__IO
 
uöt32_t
 
PIO1_0
;

592 
__IO
 
uöt32_t
 
PIO1_1
;

593 
__IO
 
uöt32_t
 
PIO1_2
;

594 
__IO
 
uöt32_t
 
PIO1_3
;

595 
__IO
 
uöt32_t
 
PIO1_4
;

596 
__IO
 
uöt32_t
 
PIO1_5
;

597 
__IO
 
uöt32_t
 
PIO1_6
;

598 
__IO
 
uöt32_t
 
PIO1_7
;

599 
__IO
 
uöt32_t
 
PIO1_8
;

600 
__IO
 
uöt32_t
 
PIO1_9
;

601 
__IO
 
uöt32_t
 
PIO1_10
;

602 
__IO
 
uöt32_t
 
PIO1_11
;

603 
__IO
 
uöt32_t
 
PIO1_12
;

604 
__IO
 
uöt32_t
 
PIO1_13
;

605 
__IO
 
uöt32_t
 
PIO1_14
;

606 
__IO
 
uöt32_t
 
PIO1_15
;

607 
__IO
 
uöt32_t
 
PIO1_16
;

608 
__IO
 
uöt32_t
 
PIO1_17
;

609 
__IO
 
uöt32_t
 
PIO1_18
;

610 
__IO
 
uöt32_t
 
PIO1_19
;

611 
__IO
 
uöt32_t
 
PIO1_20
;

612 
__IO
 
uöt32_t
 
PIO1_21
;

613 
__IO
 
uöt32_t
 
PIO1_22
;

614 
__IO
 
uöt32_t
 
PIO1_23
;

615 
__IO
 
uöt32_t
 
PIO1_24
;

616 
__IO
 
uöt32_t
 
PIO1_25
;

617 
__IO
 
uöt32_t
 
PIO1_26
;

618 
__IO
 
uöt32_t
 
PIO1_27
;

619 
__IO
 
uöt32_t
 
PIO1_28
;

620 
__IO
 
uöt32_t
 
PIO1_29
;

621 
__IO
 
uöt32_t
 
PIO1_30
;

622 
__IO
 
uöt32_t
 
PIO1_31
;

623 
__I
 
uöt32_t
 
RESERVED0
[4];

624 
__IO
 
uöt32_t
 
PIO2_0
;

625 
__IO
 
uöt32_t
 
PIO2_1
;

626 
__I
 
uöt32_t
 
RESERVED1
;

627 
__IO
 
uöt32_t
 
PIO2_2
;

628 
__IO
 
uöt32_t
 
PIO2_3
;

629 
__IO
 
uöt32_t
 
PIO2_4
;

630 
__IO
 
uöt32_t
 
PIO2_5
;

631 
__IO
 
uöt32_t
 
PIO2_6
;

632 
__IO
 
uöt32_t
 
PIO2_7
;

633 
__IO
 
uöt32_t
 
PIO2_8
;

634 
__IO
 
uöt32_t
 
PIO2_9
;

635 
__IO
 
uöt32_t
 
PIO2_10
;

636 
__IO
 
uöt32_t
 
PIO2_11
;

637 
__IO
 
uöt32_t
 
PIO2_12
;

638 
__IO
 
uöt32_t
 
PIO2_13
;

639 
__IO
 
uöt32_t
 
PIO2_14
;

640 
__IO
 
uöt32_t
 
PIO2_15
;

641 
__IO
 
uöt32_t
 
PIO2_16
;

642 
__IO
 
uöt32_t
 
PIO2_17
;

643 
__IO
 
uöt32_t
 
PIO2_18
;

644 
__IO
 
uöt32_t
 
PIO2_19
;

645 
__IO
 
uöt32_t
 
PIO2_20
;

646 
__IO
 
uöt32_t
 
PIO2_21
;

647 
__IO
 
uöt32_t
 
PIO2_22
;

648 
__IO
 
uöt32_t
 
PIO2_23
;

649 } 
	tLPC_IOCON_Ty≥
;

662 
__IO
 
uöt32_t
 
SYSMEMREMAP
;

663 
__IO
 
uöt32_t
 
PRESETCTRL
;

664 
__IO
 
uöt32_t
 
SYSPLLCTRL
;

665 
__I
 
uöt32_t
 
SYSPLLSTAT
;

666 
__IO
 
uöt32_t
 
USBPLLCTRL
;

667 
__I
 
uöt32_t
 
USBPLLSTAT
;

668 
__I
 
uöt32_t
 
RESERVED0
;

669 
__IO
 
uöt32_t
 
RTCOSCCTRL
;

670 
__IO
 
uöt32_t
 
SYSOSCCTRL
;

671 
__IO
 
uöt32_t
 
WDTOSCCTRL
;

672 
__I
 
uöt32_t
 
RESERVED1
[2];

673 
__IO
 
uöt32_t
 
SYSRSTSTAT
;

674 
__I
 
uöt32_t
 
RESERVED2
[3];

675 
__IO
 
uöt32_t
 
SYSPLLCLKSEL
;

676 
__IO
 
uöt32_t
 
SYSPLLCLKUEN
;

677 
__IO
 
uöt32_t
 
USBPLLCLKSEL
;

678 
__IO
 
uöt32_t
 
USBPLLCLKUEN
;

679 
__I
 
uöt32_t
 
RESERVED3
[8];

680 
__IO
 
uöt32_t
 
MAINCLKSEL
;

681 
__IO
 
uöt32_t
 
MAINCLKUEN
;

682 
__IO
 
uöt32_t
 
SYSAHBCLKDIV
;

683 
__I
 
uöt32_t
 
RESERVED4
;

684 
__IO
 
uöt32_t
 
SYSAHBCLKCTRL
;

685 
__I
 
uöt32_t
 
RESERVED5
[4];

686 
__IO
 
uöt32_t
 
SSP0CLKDIV
;

687 
__IO
 
uöt32_t
 
USART0CLKDIV
;

688 
__IO
 
uöt32_t
 
SSP1CLKDIV
;

689 
__IO
 
uöt32_t
 
FRGCLKDIV
;

691 
__I
 
uöt32_t
 
RESERVED6
[7];

692 
__IO
 
uöt32_t
 
USBCLKSEL
;

693 
__IO
 
uöt32_t
 
USBCLKUEN
;

694 
__IO
 
uöt32_t
 
USBCLKDIV
;

695 
__I
 
uöt32_t
 
RESERVED7
[5];

696 
__IO
 
uöt32_t
 
CLKOUTSEL
;

697 
__IO
 
uöt32_t
 
CLKOUTUEN
;

698 
__IO
 
uöt32_t
 
CLKOUTDIV
;

699 
__I
 
uöt32_t
 
RESERVED8
;

700 
__IO
 
uöt32_t
 
UARTFRGDIV
;

701 
__IO
 
uöt32_t
 
UARTFRGMULT
;

702 
__I
 
uöt32_t
 
RESERVED9
;

703 
__IO
 
uöt32_t
 
EXTTRACECMD
;

704 
__I
 
uöt32_t
 
PIOPORCAP0
;

705 
__I
 
uöt32_t
 
PIOPORCAP1
;

706 
__I
 
uöt32_t
 
PIOPORCAP2
;

707 
__I
 
uöt32_t
 
RESERVED10
[10];

708 
__IO
 
uöt32_t
 
IOCONCLKDIV6
;

710 
__IO
 
uöt32_t
 
IOCONCLKDIV5
;

712 
__IO
 
uöt32_t
 
IOCONCLKDIV4
;

714 
__IO
 
uöt32_t
 
IOCONCLKDIV3
;

716 
__IO
 
uöt32_t
 
IOCONCLKDIV2
;

718 
__IO
 
uöt32_t
 
IOCONCLKDIV1
;

720 
__IO
 
uöt32_t
 
IOCONCLKDIV0
;

722 
__IO
 
uöt32_t
 
BODCTRL
;

723 
__IO
 
uöt32_t
 
SYSTCKCAL
;

724 
__IO
 
uöt32_t
 
AHBMATRIXPRIO
;

725 
__I
 
uöt32_t
 
RESERVED11
[5];

726 
__IO
 
uöt32_t
 
IRQLATENCY
;

727 
__IO
 
uöt32_t
 
NMISRC
;

729 
__IO
 
uöt32_t
 
PINTSEL
[8];

731 
__IO
 
uöt32_t
 
PINTSEL0
;

732 
__IO
 
uöt32_t
 
PINTSEL1
;

733 
__IO
 
uöt32_t
 
PINTSEL2
;

734 
__IO
 
uöt32_t
 
PINTSEL3
;

735 
__IO
 
uöt32_t
 
PINTSEL4
;

736 
__IO
 
uöt32_t
 
PINTSEL5
;

737 
__IO
 
uöt32_t
 
PINTSEL6
;

738 
__IO
 
uöt32_t
 
PINTSEL7
;

741 
__IO
 
uöt32_t
 
USBCLKCTRL
;

742 
__I
 
uöt32_t
 
USBCLKST
;

743 
__I
 
uöt32_t
 
RESERVED12
[25];

744 
__IO
 
uöt32_t
 
STARTERP0
;

745 
__I
 
uöt32_t
 
RESERVED13
[3];

746 
__IO
 
uöt32_t
 
STARTERP1
;

747 
__I
 
uöt32_t
 
RESERVED14
[6];

748 
__IO
 
uöt32_t
 
PDSLEEPCFG
;

749 
__IO
 
uöt32_t
 
PDAWAKECFG
;

750 
__IO
 
uöt32_t
 
PDRUNCFG
;

751 
__I
 
uöt32_t
 
RESERVED15
[110];

752 
__I
 
uöt32_t
 
DEVICE_ID
;

753 } 
	tLPC_SYSCON_Ty≥
;

766 
__IO
 
uöt32_t
 
CFG
;

768 
__IO
 
uöt32_t
 
CTL
;

770 
__IO
 
uöt32_t
 
STAT
;

773 
__IO
 
uöt32_t
 
INTENSET
;

777 
__O
 
uöt32_t
 
INTENCLR
;

780 
__I
 
uöt32_t
 
RXDAT
;

781 
__I
 
uöt32_t
 
RXDATSTAT
;

784 
__IO
 
uöt32_t
 
TXDAT
;

785 
__IO
 
uöt32_t
 
BRG
;

787 
__I
 
uöt32_t
 
INTSTAT
;

789 
__IO
 
uöt32_t
 
OSR
;

790 
__IO
 
uöt32_t
 
ADDR
;

791 } 
	tLPC_USART4_Ty≥
;

804 
__IO
 
uöt32_t
 
CTRL
;

805 
__I
 
uöt32_t
 
RESERVED0
[7];

806 
__IO
 
uöt32_t
 
PORT_POL
[3];

807 
__I
 
uöt32_t
 
RESERVED1
[5];

808 
__IO
 
uöt32_t
 
PORT_ENA
[3];

809 } 
	tLPC_GINT0_Ty≥
;

822 
__IO
 
uöt32_t
 
DEVCMDSTAT
;

823 
__IO
 
uöt32_t
 
INFO
;

824 
__IO
 
uöt32_t
 
EPLISTSTART
;

825 
__IO
 
uöt32_t
 
DATABUFSTART
;

826 
__IO
 
uöt32_t
 
LPM
;

827 
__IO
 
uöt32_t
 
EPSKIP
;

828 
__IO
 
uöt32_t
 
EPINUSE
;

829 
__IO
 
uöt32_t
 
EPBUFCFG
;

830 
__IO
 
uöt32_t
 
INTSTAT
;

831 
__IO
 
uöt32_t
 
INTEN
;

832 
__IO
 
uöt32_t
 
INTSETSTAT
;

833 
__IO
 
uöt32_t
 
INTROUTING
;

834 
__I
 
uöt32_t
 
RESERVED0
;

835 
__I
 
uöt32_t
 
EPTOGGLE
;

836 } 
	tLPC_USB_Ty≥
;

849 
__IO
 
uöt32_t
 
MODE
;

850 
__IO
 
uöt32_t
 
SEED
;

853 
__O
 
uöt32_t
 
WR_DATA
;

854 
__I
 
uöt32_t
 
SUM
;

856 } 
	tLPC_CRC_Ty≥
;

869 
__IO
 
uöt32_t
 
CTRL
;

870 
__I
 
uöt32_t
 
INTSTAT
;

871 
__IO
 
uöt32_t
 
SRAMBASE
;

872 
__I
 
uöt32_t
 
RESERVED0
[5];

873 
__IO
 
uöt32_t
 
ENABLESET0
;

874 
__I
 
uöt32_t
 
RESERVED1
;

875 
__O
 
uöt32_t
 
ENABLECLR0
;

876 
__I
 
uöt32_t
 
RESERVED2
;

877 
__I
 
uöt32_t
 
ACTIVE0
;

878 
__I
 
uöt32_t
 
RESERVED3
;

879 
__I
 
uöt32_t
 
BUSY0
;

880 
__I
 
uöt32_t
 
RESERVED4
;

881 
__IO
 
uöt32_t
 
ERRINT0
;

882 
__I
 
uöt32_t
 
RESERVED5
;

883 
__IO
 
uöt32_t
 
INTENSET0
;

884 
__I
 
uöt32_t
 
RESERVED6
;

885 
__O
 
uöt32_t
 
INTENCLR0
;

886 
__I
 
uöt32_t
 
RESERVED7
;

887 
__IO
 
uöt32_t
 
INTA0
;

888 
__I
 
uöt32_t
 
RESERVED8
;

889 
__IO
 
uöt32_t
 
INTB0
;

890 
__I
 
uöt32_t
 
RESERVED9
;

891 
__O
 
uöt32_t
 
SETVALID0
;

892 
__I
 
uöt32_t
 
RESERVED10
;

893 
__O
 
uöt32_t
 
SETTRIG0
;

894 
__I
 
uöt32_t
 
RESERVED11
;

895 
__O
 
uöt32_t
 
ABORT0
;

896 
__I
 
uöt32_t
 
RESERVED12
[225];

897 
__IO
 
uöt32_t
 
CFG0
;

898 
__I
 
uöt32_t
 
CTLSTAT0
;

899 
__IO
 
uöt32_t
 
XFERCFG0
;

900 
__I
 
uöt32_t
 
RESERVED13
;

901 
__IO
 
uöt32_t
 
CFG1
;

902 
__I
 
uöt32_t
 
CTLSTAT1
;

903 
__IO
 
uöt32_t
 
XFERCFG1
;

904 
__I
 
uöt32_t
 
RESERVED14
;

905 
__IO
 
uöt32_t
 
CFG2
;

906 
__I
 
uöt32_t
 
CTLSTAT2
;

907 
__IO
 
uöt32_t
 
XFERCFG2
;

908 
__I
 
uöt32_t
 
RESERVED15
;

909 
__IO
 
uöt32_t
 
CFG3
;

910 
__I
 
uöt32_t
 
CTLSTAT3
;

911 
__IO
 
uöt32_t
 
XFERCFG3
;

912 
__I
 
uöt32_t
 
RESERVED16
;

913 
__IO
 
uöt32_t
 
CFG4
;

914 
__I
 
uöt32_t
 
CTLSTAT4
;

915 
__IO
 
uöt32_t
 
XFERCFG4
;

916 
__I
 
uöt32_t
 
RESERVED17
;

917 
__IO
 
uöt32_t
 
CFG5
;

918 
__I
 
uöt32_t
 
CTLSTAT5
;

919 
__IO
 
uöt32_t
 
XFERCFG5
;

920 
__I
 
uöt32_t
 
RESERVED18
;

921 
__IO
 
uöt32_t
 
CFG6
;

922 
__I
 
uöt32_t
 
CTLSTAT6
;

923 
__IO
 
uöt32_t
 
XFERCFG6
;

924 
__I
 
uöt32_t
 
RESERVED19
;

925 
__IO
 
uöt32_t
 
CFG7
;

926 
__I
 
uöt32_t
 
CTLSTAT7
;

927 
__IO
 
uöt32_t
 
XFERCFG7
;

928 
__I
 
uöt32_t
 
RESERVED20
;

929 
__IO
 
uöt32_t
 
CFG8
;

930 
__I
 
uöt32_t
 
CTLSTAT8
;

931 
__IO
 
uöt32_t
 
XFERCFG8
;

932 
__I
 
uöt32_t
 
RESERVED21
;

933 
__IO
 
uöt32_t
 
CFG9
;

934 
__I
 
uöt32_t
 
CTLSTAT9
;

935 
__IO
 
uöt32_t
 
XFERCFG9
;

936 
__I
 
uöt32_t
 
RESERVED22
;

937 
__IO
 
uöt32_t
 
CFG10
;

938 
__I
 
uöt32_t
 
CTLSTAT10
;

939 
__IO
 
uöt32_t
 
XFERCFG10
;

940 
__I
 
uöt32_t
 
RESERVED23
;

941 
__IO
 
uöt32_t
 
CFG11
;

942 
__I
 
uöt32_t
 
CTLSTAT11
;

943 
__IO
 
uöt32_t
 
XFERCFG11
;

944 
__I
 
uöt32_t
 
RESERVED24
;

945 
__IO
 
uöt32_t
 
CFG12
;

946 
__I
 
uöt32_t
 
CTLSTAT12
;

947 
__IO
 
uöt32_t
 
XFERCFG12
;

948 
__I
 
uöt32_t
 
RESERVED25
;

949 
__IO
 
uöt32_t
 
CFG13
;

950 
__I
 
uöt32_t
 
CTLSTAT13
;

951 
__IO
 
uöt32_t
 
XFERCFG13
;

952 
__I
 
uöt32_t
 
RESERVED26
;

953 
__IO
 
uöt32_t
 
CFG14
;

954 
__I
 
uöt32_t
 
CTLSTAT14
;

955 
__IO
 
uöt32_t
 
XFERCFG14
;

956 
__I
 
uöt32_t
 
RESERVED27
;

957 
__IO
 
uöt32_t
 
CFG15
;

958 
__I
 
uöt32_t
 
CTLSTAT15
;

959 
__IO
 
uöt32_t
 
XFERCFG15
;

960 } 
	tLPC_DMA_Ty≥
;

973 
__IO
 
uöt32_t
 
CONFIG
;

974 
__IO
 
uöt32_t
 
CTRL
;

975 
__IO
 
uöt32_t
 
LIMIT
;

976 
__IO
 
uöt32_t
 
HALT
;

977 
__IO
 
uöt32_t
 
STOP
;

978 
__IO
 
uöt32_t
 
START
;

979 
__I
 
uöt32_t
 
RESERVED0
[10];

980 
__IO
 
uöt32_t
 
COUNT
;

981 
__IO
 
uöt32_t
 
STATE
;

982 
__I
 
uöt32_t
 
INPUT
;

983 
__IO
 
uöt32_t
 
REGMODE
;

984 
__IO
 
uöt32_t
 
OUTPUT
;

985 
__IO
 
uöt32_t
 
OUTPUTDIRCTRL
;

986 
__IO
 
uöt32_t
 
RES
;

987 
__IO
 
uöt32_t
 
DMAREQ0
;

988 
__IO
 
uöt32_t
 
DMAREQ1
;

989 
__I
 
uöt32_t
 
RESERVED1
[35];

990 
__IO
 
uöt32_t
 
EVEN
;

991 
__IO
 
uöt32_t
 
EVFLAG
;

992 
__IO
 
uöt32_t
 
CONEN
;

993 
__IO
 
uöt32_t
 
CONFLAG
;

996 
__IO
 
uöt32_t
 
CAP0
;

998 
__IO
 
uöt32_t
 
MATCH0
;

1003 
__IO
 
uöt32_t
 
CAP1
;

1005 
__IO
 
uöt32_t
 
MATCH1
;

1010 
__IO
 
uöt32_t
 
MATCH2
;

1012 
__IO
 
uöt32_t
 
CAP2
;

1017 
__IO
 
uöt32_t
 
CAP3
;

1019 
__IO
 
uöt32_t
 
MATCH3
;

1024 
__IO
 
uöt32_t
 
CAP4
;

1026 
__IO
 
uöt32_t
 
MATCH4
;

1029 
__I
 
uöt32_t
 
RESERVED2
[59];

1032 
__IO
 
uöt32_t
 
CAPCTRL0
;

1034 
__IO
 
uöt32_t
 
MATCHREL0
;

1039 
__IO
 
uöt32_t
 
MATCHREL1
;

1041 
__IO
 
uöt32_t
 
CAPCTRL1
;

1046 
__IO
 
uöt32_t
 
MATCHREL2
;

1048 
__IO
 
uöt32_t
 
CAPCTRL2
;

1053 
__IO
 
uöt32_t
 
CAPCTRL3
;

1055 
__IO
 
uöt32_t
 
MATCHREL3
;

1060 
__IO
 
uöt32_t
 
CAPCTRL4
;

1062 
__IO
 
uöt32_t
 
MATCHREL4
;

1065 
__I
 
uöt32_t
 
RESERVED3
[59];

1066 
__IO
 
uöt32_t
 
EV0_STATE
;

1067 
__IO
 
uöt32_t
 
EV0_CTRL
;

1068 
__IO
 
uöt32_t
 
EV1_STATE
;

1069 
__IO
 
uöt32_t
 
EV1_CTRL
;

1070 
__IO
 
uöt32_t
 
EV2_STATE
;

1071 
__IO
 
uöt32_t
 
EV2_CTRL
;

1072 
__IO
 
uöt32_t
 
EV3_STATE
;

1073 
__IO
 
uöt32_t
 
EV3_CTRL
;

1074 
__IO
 
uöt32_t
 
EV4_STATE
;

1075 
__IO
 
uöt32_t
 
EV4_CTRL
;

1076 
__IO
 
uöt32_t
 
EV5_STATE
;

1077 
__IO
 
uöt32_t
 
EV5_CTRL
;

1078 
__I
 
uöt32_t
 
RESERVED4
[116];

1079 
__IO
 
uöt32_t
 
OUT0_SET
;

1080 
__IO
 
uöt32_t
 
OUT0_CLR
;

1081 
__IO
 
uöt32_t
 
OUT1_SET
;

1082 
__IO
 
uöt32_t
 
OUT1_CLR
;

1083 
__IO
 
uöt32_t
 
OUT2_SET
;

1084 
__IO
 
uöt32_t
 
OUT2_CLR
;

1085 
__IO
 
uöt32_t
 
OUT3_SET
;

1086 
__IO
 
uöt32_t
 
OUT3_CLR
;

1087 } 
	tLPC_SCT0_Ty≥
;

1100 
__IO
 
uöt8_t
 
B
[88];

1101 
__I
 
uöt32_t
 
RESERVED0
[42];

1102 
__IO
 
uöt32_t
 
W
[88];

1103 
__I
 
uöt32_t
 
RESERVED1
[1896];

1104 
__IO
 
uöt32_t
 
DIR
[3];

1105 
__I
 
uöt32_t
 
RESERVED2
[29];

1106 
__IO
 
uöt32_t
 
MASK
[3];

1107 
__I
 
uöt32_t
 
RESERVED3
[29];

1108 
__IO
 
uöt32_t
 
PIN
[3];

1109 
__I
 
uöt32_t
 
RESERVED4
[29];

1110 
__IO
 
uöt32_t
 
MPIN
[3];

1111 
__I
 
uöt32_t
 
RESERVED5
[29];

1112 
__IO
 
uöt32_t
 
SET
[3];

1113 
__I
 
uöt32_t
 
RESERVED6
[29];

1114 
__O
 
uöt32_t
 
CLR
[3];

1115 
__I
 
uöt32_t
 
RESERVED7
[29];

1116 
__O
 
uöt32_t
 
NOT
[3];

1117 } 
	tLPC_GPIO_PORT_Ty≥
;

1130 
__IO
 
uöt32_t
 
ISEL
;

1131 
__IO
 
uöt32_t
 
IENR
;

1132 
__O
 
uöt32_t
 
SIENR
;

1133 
__O
 
uöt32_t
 
CIENR
;

1134 
__IO
 
uöt32_t
 
IENF
;

1136 
__O
 
uöt32_t
 
SIENF
;

1137 
__O
 
uöt32_t
 
CIENF
;

1138 
__IO
 
uöt32_t
 
RISE
;

1139 
__IO
 
uöt32_t
 
FALL
;

1140 
__IO
 
uöt32_t
 
IST
;

1141 
__IO
 
uöt32_t
 
PMCTRL
;

1142 
__IO
 
uöt32_t
 
PMSRC
;

1143 
__IO
 
uöt32_t
 
PMCFG
;

1144 } 
	tLPC_PINT_Ty≥
;

1148 #i‡
deföed
(
__CC_ARM
)

1149 #¥agm®
p›


1150 #ñi‡
deföed
(
__ICCARM__
)

1152 #ñi‡
deföed
(
__GNUC__
)

1154 #ñi‡
deföed
(
__TMS470__
)

1156 #ñi‡
deföed
(
__TASKING__
)

1157 #¥agm®
w¨nög
 
ª°‹e


1159 #w¨nög 
NŸ
 
suµ‹ãd
 
compûî
 
ty≥


1169 
	#LPC_I2C0_BASE
 0x40000000UL

	)

1170 
	#LPC_WWDT_BASE
 0x40004000UL

	)

1171 
	#LPC_USART0_BASE
 0x40008000UL

	)

1172 
	#LPC_CT16B0_BASE
 0x4000C000UL

	)

1173 
	#LPC_CT16B1_BASE
 0x40010000UL

	)

1174 
	#LPC_CT32B0_BASE
 0x40014000UL

	)

1175 
	#LPC_CT32B1_BASE
 0x40018000UL

	)

1176 
	#LPC_ADC_BASE
 0x4001C000UL

	)

1177 
	#LPC_I2C1_BASE
 0x40020000UL

	)

1178 
	#LPC_RTC_BASE
 0x40024000UL

	)

1179 
	#LPC_DMATRIGMUX_BASE
 0x40028000UL

	)

1180 
	#LPC_PMU_BASE
 0x40038000UL

	)

1181 
	#LPC_FLASHCTRL_BASE
 0x4003C000UL

	)

1182 
	#LPC_SSP0_BASE
 0x40040000UL

	)

1183 
	#LPC_IOCON_BASE
 0x40044000UL

	)

1184 
	#LPC_SYSCON_BASE
 0x40048000UL

	)

1185 
	#LPC_USART4_BASE
 0x4004C000UL

	)

1186 
	#LPC_SSP1_BASE
 0x40058000UL

	)

1187 
	#LPC_GINT0_BASE
 0x4005C000UL

	)

1188 
	#LPC_GINT1_BASE
 0x40060000UL

	)

1189 
	#LPC_USART1_BASE
 0x4006C000UL

	)

1190 
	#LPC_USART2_BASE
 0x40070000UL

	)

1191 
	#LPC_USART3_BASE
 0x40074000UL

	)

1192 
	#LPC_USB_BASE
 0x40080000UL

	)

1193 
	#LPC_CRC_BASE
 0x50000000UL

	)

1194 
	#LPC_DMA_BASE
 0x50004000UL

	)

1195 
	#LPC_SCT0_BASE
 0x5000C000UL

	)

1196 
	#LPC_SCT1_BASE
 0x5000E000UL

	)

1197 
	#LPC_GPIO_PORT_BASE
 0xA0000000UL

	)

1198 
	#LPC_PINT_BASE
 0xA0004000UL

	)

1205 
	#LPC_I2C0
 ((
LPC_I2C0_Ty≥
 *Ë
LPC_I2C0_BASE
)

	)

1206 
	#LPC_WWDT
 ((
LPC_WWDT_Ty≥
 *Ë
LPC_WWDT_BASE
)

	)

1207 
	#LPC_USART0
 ((
LPC_USART0_Ty≥
 *Ë
LPC_USART0_BASE
)

	)

1208 
	#LPC_CT16B0
 ((
LPC_CT16B0_Ty≥
 *Ë
LPC_CT16B0_BASE
)

	)

1209 
	#LPC_CT16B1
 ((
LPC_CT16B0_Ty≥
 *Ë
LPC_CT16B1_BASE
)

	)

1210 
	#LPC_CT32B0
 ((
LPC_CT32B0_Ty≥
 *Ë
LPC_CT32B0_BASE
)

	)

1211 
	#LPC_CT32B1
 ((
LPC_CT32B0_Ty≥
 *Ë
LPC_CT32B1_BASE
)

	)

1212 
	#LPC_ADC
 ((
LPC_ADC_Ty≥
 *Ë
LPC_ADC_BASE
)

	)

1213 
	#LPC_I2C1
 ((
LPC_I2C0_Ty≥
 *Ë
LPC_I2C1_BASE
)

	)

1214 
	#LPC_RTC
 ((
LPC_RTC_Ty≥
 *Ë
LPC_RTC_BASE
)

	)

1215 
	#LPC_DMATRIGMUX
 ((
LPC_DMATRIGMUX_Ty≥
 *Ë
LPC_DMATRIGMUX_BASE
)

	)

1216 
	#LPC_PMU
 ((
LPC_PMU_Ty≥
 *Ë
LPC_PMU_BASE
)

	)

1217 
	#LPC_FLASHCTRL
 ((
LPC_FLASHCTRL_Ty≥
 *Ë
LPC_FLASHCTRL_BASE
)

	)

1218 
	#LPC_SSP0
 ((
LPC_SSP0_Ty≥
 *Ë
LPC_SSP0_BASE
)

	)

1219 
	#LPC_IOCON
 ((
LPC_IOCON_Ty≥
 *Ë
LPC_IOCON_BASE
)

	)

1220 
	#LPC_SYSCON
 ((
LPC_SYSCON_Ty≥
 *Ë
LPC_SYSCON_BASE
)

	)

1221 
	#LPC_USART4
 ((
LPC_USART4_Ty≥
 *Ë
LPC_USART4_BASE
)

	)

1222 
	#LPC_SSP1
 ((
LPC_SSP0_Ty≥
 *Ë
LPC_SSP1_BASE
)

	)

1223 
	#LPC_GINT0
 ((
LPC_GINT0_Ty≥
 *Ë
LPC_GINT0_BASE
)

	)

1224 
	#LPC_GINT1
 ((
LPC_GINT0_Ty≥
 *Ë
LPC_GINT1_BASE
)

	)

1225 
	#LPC_USART1
 ((
LPC_USART4_Ty≥
 *Ë
LPC_USART1_BASE
)

	)

1226 
	#LPC_USART2
 ((
LPC_USART4_Ty≥
 *Ë
LPC_USART2_BASE
)

	)

1227 
	#LPC_USART3
 ((
LPC_USART4_Ty≥
 *Ë
LPC_USART3_BASE
)

	)

1228 
	#LPC_USB
 ((
LPC_USB_Ty≥
 *Ë
LPC_USB_BASE
)

	)

1229 
	#LPC_CRC
 ((
LPC_CRC_Ty≥
 *Ë
LPC_CRC_BASE
)

	)

1230 
	#LPC_DMA
 ((
LPC_DMA_Ty≥
 *Ë
LPC_DMA_BASE
)

	)

1231 
	#LPC_SCT0
 ((
LPC_SCT0_Ty≥
 *Ë
LPC_SCT0_BASE
)

	)

1232 
	#LPC_SCT1
 ((
LPC_SCT0_Ty≥
 *Ë
LPC_SCT1_BASE
)

	)

1233 
	#LPC_GPIO_PORT
 ((
LPC_GPIO_PORT_Ty≥
 *Ë
LPC_GPIO_PORT_BASE
)

	)

1234 
	#LPC_PINT
 ((
LPC_PINT_Ty≥
 *Ë
LPC_PINT_BASE
)

	)

1241 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\TARGET_NXP\TARGET_LPC11U6X\TOOLCHAIN_GCC_ARM\TARGET_LPC11U68\startup_LPC11U68.cpp

3 
	~"LPC11U6x.h
"

5 
	#WEAK
 
	`__©åibuã__
 ((
wók
))

	)

6 
	#ALIAS
(
f
Ë
	`__©åibuã__
 ((
wók
, 
	`Æüs
 (#f)))

	)

7 
	#AFTER_VECTORS
 
	`__©åibuã__
 ((
	`£˘i⁄
(".a·î_ve˘‹s")))
	`Re£tISR
();

	)

9 
__d©a_£˘i⁄_èbÀ
;

10 
__d©a_£˘i⁄_èbÀ_íd
;

11 
__bss_£˘i⁄_èbÀ
;

12 
__bss_£˘i⁄_èbÀ_íd
;

15 
__libc_öô_¨øy
();

16 
maö
();

17 
_vSèckT›
();

18 (* c⁄° 
g_p‚Ve˘‹s
[])();

20 
Re£tISR
();

21 
WEAK
 
NMI_H™dÀr
();

22 
WEAK
 
H¨dFau…_H™dÀr
();

23 
WEAK
 
SVC_H™dÀr
();

24 
WEAK
 
PídSV_H™dÀr
();

25 
WEAK
 
SysTick_H™dÀr
();

26 
WEAK
 
I¡DeÁu…H™dÀr
();

28 
PIN_INT0_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

29 
PIN_INT1_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

30 
PIN_INT2_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

31 
PIN_INT3_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

32 
PIN_INT4_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

33 
PIN_INT5_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

34 
PIN_INT6_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

35 
PIN_INT7_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

36 
GINT0_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

37 
GINT1_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

38 
I2C1_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

39 
USART1_4_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

40 
USART2_3_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

41 
SCT0_1_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

42 
SSP1_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

43 
I2C0_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

44 
TIMER16_0_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

45 
TIMER16_1_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

46 
TIMER32_0_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

47 
TIMER32_1_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

48 
SSP0_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

49 
USART0_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

50 
USB_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

51 
USB_FIQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

52 
ADCA_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

53 
RTC_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

54 
BOD_WDT_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

55 
FMC_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

56 
DMA_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

57 
ADCB_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

58 
USBWakeup_IRQH™dÀr
 (Ë
ALIAS
(
I¡DeÁu…H™dÀr
);

60 
__©åibuã__
 ((
£˘i⁄
(".isr_vector")))

61 (* c⁄° 
	gg_p‚Ve˘‹s
[])() = {

63 &
_vSèckT›
,

64 
Re£tISR
,

65 
NMI_H™dÀr
,

66 
H¨dFau…_H™dÀr
,

74 
SVC_H™dÀr
,

77 
PídSV_H™dÀr
,

78 
SysTick_H™dÀr
,

81 
PIN_INT0_IRQH™dÀr
,

82 
PIN_INT1_IRQH™dÀr
,

83 
PIN_INT2_IRQH™dÀr
,

84 
PIN_INT3_IRQH™dÀr
,

85 
PIN_INT4_IRQH™dÀr
,

86 
PIN_INT5_IRQH™dÀr
,

87 
PIN_INT6_IRQH™dÀr
,

88 
PIN_INT7_IRQH™dÀr
,

89 
GINT0_IRQH™dÀr
,

90 
GINT1_IRQH™dÀr
,

91 
I2C1_IRQH™dÀr
,

92 
USART1_4_IRQH™dÀr
,

93 
USART2_3_IRQH™dÀr
,

94 
SCT0_1_IRQH™dÀr
,

95 
SSP1_IRQH™dÀr
,

96 
I2C0_IRQH™dÀr
,

97 
TIMER16_0_IRQH™dÀr
,

98 
TIMER16_1_IRQH™dÀr
,

99 
TIMER32_0_IRQH™dÀr
,

100 
TIMER32_1_IRQH™dÀr
,

101 
SSP0_IRQH™dÀr
,

102 
USART0_IRQH™dÀr
,

103 
USB_IRQH™dÀr
,

104 
USB_FIQH™dÀr
,

105 
ADCA_IRQH™dÀr
,

106 
RTC_IRQH™dÀr
,

107 
BOD_WDT_IRQH™dÀr
,

108 
FMC_IRQH™dÀr
,

109 
DMA_IRQH™dÀr
,

110 
ADCB_IRQH™dÀr
,

111 
USBWakeup_IRQH™dÀr
,

116 
AFTER_VECTORS
 
d©a_öô
(
rom°¨t
, 
°¨t
, 
Àn
) {

117 *
	gpulDe°
 = (*Ë
°¨t
;

118 *
	gpulSrc
 = (*Ë
rom°¨t
;

119 
	glo›
;

120 
	glo›
 = 0;Üo› < 
	gÀn
;Üo› = 
lo›
 + 4Ë*
pulDe°
++ = *
pulSrc
++;

123 
AFTER_VECTORS
 
bss_öô
(
°¨t
, 
Àn
) {

124 *
	gpulDe°
 = (*Ë
°¨t
;

125 
	glo›
;

126 
	glo›
 = 0;Üo› < 
	gÀn
;Üo› = 
lo›
 + 4Ë*
pulDe°
++ = 0;

131 "C" 
so·w¨e_öô_hook
(Ë
__©åibuã__
((
wók
));

133 
AFTER_VECTORS
 
Re£tISR
() {

134 
	gLﬂdAddr
, 
	gExeAddr
, 
	gSe˘i⁄Lí
;

135 *
	gSe˘i⁄TabÀAddr
;

137 
	gSe˘i⁄TabÀAddr
 = &
__d©a_£˘i⁄_èbÀ
;

139 
	gSe˘i⁄TabÀAddr
 < &
	g__d©a_£˘i⁄_èbÀ_íd
) {

140 
	gLﬂdAddr
 = *
Se˘i⁄TabÀAddr
++;

141 
	gExeAddr
 = *
Se˘i⁄TabÀAddr
++;

142 
	gSe˘i⁄Lí
 = *
Se˘i⁄TabÀAddr
++;

143 
d©a_öô
(
LﬂdAddr
, 
ExeAddr
, 
Se˘i⁄Lí
);

145 
	gSe˘i⁄TabÀAddr
 < &
	g__bss_£˘i⁄_èbÀ_íd
) {

146 
	gExeAddr
 = *
Se˘i⁄TabÀAddr
++;

147 
	gSe˘i⁄Lí
 = *
Se˘i⁄TabÀAddr
++;

148 
bss_öô
(
ExeAddr
, 
Se˘i⁄Lí
);

151 
Sy°emInô
();

152 i‡(
	gso·w¨e_öô_hook
)

153 
so·w¨e_öô_hook
();

155 
__libc_öô_¨øy
();

156 
maö
();

161 
AFTER_VECTORS
 
NMI_H™dÀr
 () {}

162 
AFTER_VECTORS
 
H¨dFau…_H™dÀr
 () {}

163 
AFTER_VECTORS
 
MemM™age_H™dÀr
 () {}

164 
AFTER_VECTORS
 
BusFau…_H™dÀr
 () {}

165 
AFTER_VECTORS
 
UßgeFau…_H™dÀr
() {}

166 
AFTER_VECTORS
 
SVC_H™dÀr
 () {}

167 
AFTER_VECTORS
 
DebugM⁄_H™dÀr
 () {}

168 
AFTER_VECTORS
 
PídSV_H™dÀr
 () {}

169 
AFTER_VECTORS
 
SysTick_H™dÀr
 () {}

170 
AFTER_VECTORS
 
I¡DeÁu…H™dÀr
 () {}

172 
__´abi_©exô
(*
obje˘
, (*
de°ru˘‹
)(*), *
dso_h™dÀ
) { 0;}

175 
	~<°dlib.h
>

177 *
›î©‹
 
	$√w
(
size_t
 
size
Ë{ 
	`mÆloc
(size);
	}
}

178 *
›î©‹
 
	g√w
[](
size_t
 
	gsize
){ 
mÆloc
(
size
);}

180 
›î©‹
 
	$dñëe
(*
p
Ë{
	`‰ì
’);
	}
}

181 
›î©‹
 
	gdñëe
[](*
	gp
Ë{
‰ì
(
p
);}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\TARGET_NXP\TARGET_LPC11U6X\cmsis.h

7 #i‚de‡
MBED_CMSIS_H


8 
	#MBED_CMSIS_H


	)

10 
	~"LPC11U6x.h
"

11 
	~"cmsis_nvic.h
"

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\TARGET_NXP\TARGET_LPC11U6X\cmsis_nvic.c

31 
	~"cmsis_nvic.h
"

33 
	#NVIC_RAM_VECTOR_ADDRESS
 (0x10000000)

34 
	#NVIC_FLASH_VECTOR_ADDRESS
 (0x0)

35 

	)

36 
	$NVIC_SëVe˘‹
(
IRQn_Ty≥
 
IRQn
, 
uöt32_t
 
ve˘‹
) {

37 
uöt32_t
 *
ve˘‹s
 = (uöt32_t*)
SCB
->
VTOR
;

38 
uöt32_t
 
i
;

41 i‡(
SCB
->
VTOR
 =
NVIC_FLASH_VECTOR_ADDRESS
) {

42 
uöt32_t
 *
ﬁd_ve˘‹s
 = 
ve˘‹s
;

43 
ve˘‹s
 = (
uöt32_t
*)
NVIC_RAM_VECTOR_ADDRESS
;

44 
i
=0; i<
NVIC_NUM_VECTORS
; i++) {

45 
ve˘‹s
[
i
] = 
ﬁd_ve˘‹s
[i];

47 
SCB
->
VTOR
 = (
uöt32_t
)
NVIC_RAM_VECTOR_ADDRESS
;

49 
ve˘‹s
[
IRQn
 + 16] = 
ve˘‹
;

50 
	}
}

52 
uöt32_t
 
	$NVIC_GëVe˘‹
(
IRQn_Ty≥
 
IRQn
) {

53 
uöt32_t
 *
ve˘‹s
 = (uöt32_t*)
SCB
->
VTOR
;

54  
ve˘‹s
[
IRQn
 + 16];

55 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\TARGET_NXP\TARGET_LPC11U6X\cmsis_nvic.h

32 #i‚de‡
MBED_CMSIS_NVIC_H


33 
	#MBED_CMSIS_NVIC_H


	)

35 
	#NVIC_NUM_VECTORS
 (16 + 32)

36 
	#NVIC_USER_IRQ_OFFSET
 16

	)

38 
	~"cmsis.h
"

40 #ifde‡
__˝lu•lus


44 
NVIC_SëVe˘‹
(
IRQn_Ty≥
 
IRQn
, 
uöt32_t
 
ve˘‹
);

45 
uöt32_t
 
NVIC_GëVe˘‹
(
IRQn_Ty≥
 
IRQn
);

47 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\TARGET_NXP\TARGET_LPC11U6X\system_LPC11U6x.c

26 
	~<°döt.h
>

27 
	~"LPC11U6x.h
"

35 
	#CLOCK_SETUP
 1

	)

46 
	#SYSOSCCTRL_VÆ
 0x00000000

52 
	#SYSPLLCLKSEL_VÆ
 0x00000001

55 
	#CLOCK_SETUP_REG
 1

	)

78 
	#WDTOSCCTRL_VÆ
 0x000000A0

94 #ifde‡
_OSCT


	)

95 
	#SYSPLLCTRL_VÆ
 (0x00000023+
_OSCT
)

96 #ñ£

	)

97 
	#SYSPLLCTRL_VÆ
 0x00000023

105 
	#MAINCLKSEL_VÆ
 0x00000003

111 
	#SYSAHBCLKDIV_VÆ
 0x00000001

115 
	#CLOCK_SETUP_API
 0

	)

122 
	#PLL_API_MODE_VÆ
 0

	)

125 
	#PLL_API_FREQ_VÆ
 48000000

	)

129 
	#USB_CLOCK_SETUP
 1

	)

144 #ifde‡
_OSCT


145 
	#USBPLLCTRL_VÆ
 (0x00000023+
_OSCT
)

146 #ñ£

	)

147 
	#USBPLLCTRL_VÆ
 0x00000023

	)

154 
	#USBPLLCLKSEL_VÆ
 0x00000001

159 
	#USBCLKSEL_VÆ
 0x00000000

165 
	#USBCLKDIV_VÆ
 0x00000001

173 
	#XTAL_CLK_VÆ
 12000000

	)

182 
	#__XTAL_CLK
 ( 
XTAL_CLK_VÆ
Ë

	)

183 
	#__SYS_OSC_CLK
 ( 
__XTAL_CLK
Ë

	)

184 
	#__IRC_OSC_CLK
 ( 12000000ULË

	)

185 
	#__RTC_OSC_CLK
 ( 32768ULË

	)

190 
	#CHECK_RANGE
(
vÆ
, 
mö
, 
max
Ë((vÆ < möË|| (vÆ > max))

	)

191 
	#CHECK_RSVD
(
vÆ
, 
mask
Ë(vÆ & mask)

	)

193 #i‡(
CHECK_RSVD
((
SYSOSCCTRL_VÆ
), ~0x00000003))

197 #i‡(
CHECK_RSVD
((
WDTOSCCTRL_VÆ
), ~0x000001FF))

201 #i‡(
CHECK_RANGE
((
SYSPLLCLKSEL_VÆ
), 0, 3))

205 #i‡(
SYSPLLCLKSEL_VÆ
 == 3)

206 #i‡(
CLOCK_SETUP_API
 == 1)

209 #i‡(
CLOCK_SETUP_REG
 =1Ë&& (
MAINCLKSEL_VÆ
 == 3)

214 #i‡(
CHECK_RSVD
((
SYSPLLCTRL_VÆ
), ~0x0000007F))

218 #i‡(
CHECK_RSVD
((
MAINCLKSEL_VÆ
), ~0x00000003))

222 #i‡(
CHECK_RANGE
((
SYSAHBCLKDIV_VÆ
), 0, 255))

226 #i‡–
CLOCK_SETUP_REG
 =
CLOCK_SETUP_API
 )

230 #i‡(
CHECK_RANGE
((
USBPLLCLKSEL_VÆ
), 0, 1))

234 #i‡(
CHECK_RSVD
((
USBPLLCTRL_VÆ
), ~0x000007F))

238 #i‡(
CHECK_RANGE
((
USBCLKSEL_VÆ
), 0, 1))

242 #i‡(
CHECK_RANGE
((
USBCLKDIV_VÆ
), 0, 255))

246 #i‡(
CHECK_RANGE
(
XTAL_CLK_VÆ
, 1000000, 25000000))

250 #i‡(
CHECK_RANGE
(
PLL_API_MODE_VÆ
, 0, 3))

254 #i‡(
CHECK_RANGE
(
PLL_API_FREQ_VÆ
, 1000000, 50000000))

263 #i‡(
CLOCK_SETUP
)

266 #i‡ ((
SYSPLLCLKSEL_VÆ
 & 0x03) == 0)

267 
	#__SYS_PLLCLKIN
 (
__IRC_OSC_CLK
)

	)

268 #ñi‡((
SYSPLLCLKSEL_VÆ
 & 0x03) == 1)

269 
	#__SYS_PLLCLKIN
 (
__SYS_OSC_CLK
)

	)

270 #ñi‡((
SYSPLLCLKSEL_VÆ
 & 0x03) == 3)

271 
	#__SYS_PLLCLKIN
 (
__RTC_OSC_CLK
)

	)

276 #i‡(
CLOCK_SETUP_REG
 == 1)

278 
	#__FREQSEL
 ((
WDTOSCCTRL_VÆ
 >> 5Ë& 0x0F)

	)

279 
	#__DIVSEL
 (((
WDTOSCCTRL_VÆ
 & 0x1FË<< 1Ë+ 2)

	)

281 #i‡ (
__FREQSEL
 == 0)

283 #ñi‡(
__FREQSEL
 == 1)

284 
	#__OSC_CLK
 ( 500000 / 
__DIVSEL
)

	)

285 #ñi‡(
__FREQSEL
 == 2)

286 
	#__OSC_CLK
 ( 800000 / 
__DIVSEL
)

	)

287 #ñi‡(
__FREQSEL
 == 3)

288 
	#__OSC_CLK
 (1100000 / 
__DIVSEL
)

	)

289 #ñi‡(
__FREQSEL
 == 4)

290 
	#__OSC_CLK
 (1400000 / 
__DIVSEL
)

	)

291 #ñi‡(
__FREQSEL
 == 5)

292 
	#__OSC_CLK
 (1600000 / 
__DIVSEL
)

	)

293 #ñi‡(
__FREQSEL
 == 6)

294 
	#__OSC_CLK
 (1800000 / 
__DIVSEL
)

	)

295 #ñi‡(
__FREQSEL
 == 7)

296 
	#__OSC_CLK
 (2000000 / 
__DIVSEL
)

	)

297 #ñi‡(
__FREQSEL
 == 8)

298 
	#__OSC_CLK
 (2200000 / 
__DIVSEL
)

	)

299 #ñi‡(
__FREQSEL
 == 9)

300 
	#__OSC_CLK
 (2400000 / 
__DIVSEL
)

	)

301 #ñi‡(
__FREQSEL
 == 10)

302 
	#__OSC_CLK
 (2600000 / 
__DIVSEL
)

	)

303 #ñi‡(
__FREQSEL
 == 11)

304 
	#__OSC_CLK
 (2700000 / 
__DIVSEL
)

	)

305 #ñi‡(
__FREQSEL
 == 12)

306 
	#__OSC_CLK
 (2900000 / 
__DIVSEL
)

	)

307 #ñi‡(
__FREQSEL
 == 13)

308 
	#__OSC_CLK
 (3100000 / 
__DIVSEL
)

	)

309 #ñi‡(
__FREQSEL
 == 14)

310 
	#__OSC_CLK
 (3200000 / 
__DIVSEL
)

	)

312 
	#__OSC_CLK
 (3400000 / 
__DIVSEL
)

	)

315 
	#__SYS_PLLCLKOUT
 (
__SYS_PLLCLKIN
 * ((
SYSPLLCTRL_VÆ
 & 0x01FË+ 1))

	)

318 #i‡ ((
MAINCLKSEL_VÆ
 & 0x03) == 0)

319 
	#__MAIN_CLOCK
 (
__IRC_OSC_CLK
)

	)

320 #ñi‡((
MAINCLKSEL_VÆ
 & 0x03) == 1)

321 
	#__MAIN_CLOCK
 (
__SYS_PLLCLKIN
)

	)

322 #ñi‡((
MAINCLKSEL_VÆ
 & 0x03) == 2)

323 
	#__MAIN_CLOCK
 (
__OSC_CLK
)

	)

324 #ñi‡((
MAINCLKSEL_VÆ
 & 0x03) == 3)

325 
	#__MAIN_CLOCK
 (
__SYS_PLLCLKOUT
)

	)

330 
	#__SYSTEM_CLOCK
 (
__MAIN_CLOCK
 / 
SYSAHBCLKDIV_VÆ
)

	)

333 #i‡(
CLOCK_SETUP_API
 == 1)

334 
	#__SYSTEM_CLOCK
 (
PLL_API_FREQ_VÆ
)

	)

338 
	#__SYSTEM_CLOCK
 (
__IRC_OSC_CLK
)

	)

343 #i‡((
CLOCK_SETUP
 =1Ë&& (
CLOCK_SETUP_API
 == 1))

344 
	~"powî_≠i.h
"

346 
	s_ROM
 {

347 c⁄° 
	mp_dev0
;

348 c⁄° 
	mp_dev1
;

349 c⁄° 
	mp_dev2
;

350 c⁄° 
PWRD
 * 
	mpPWRD
;

351 c⁄° 
	mp_dev4
;

352 c⁄° 
	mp_dev5
;

353 c⁄° 
	mp_dev6
;

354 c⁄° 
	mp_dev7
;

355 } 
	tROM
;

360 
	$£tPLL
(c⁄° 
uöt32_t
 
∂lMode
, c⁄° uöt32_à
∂lInFªq
, c⁄° uöt32_à
ªqCpuFªq
)

362 
uöt32_t
 
cmd
[5], 
ªs
[5];

363 
ROM
 ** 
rom
 = (ROM **) 0x1FFF1FF8;

365 
cmd
[0] = 
∂lInFªq
;

366 
cmd
[1] = 
ªqCpuFªq
;

367 
cmd
[2] = 
∂lMode
;

368 
cmd
[3] = 0;

371 (*
rom
)->
pPWRD
->
	`£t_∂l
(
cmd
, 
ªs
);

372 i‡((
ªs
[0] !
PLL_CMD_SUCCESS
)){

375 
	}
}

384 
uöt32_t
 
	gSy°emC‹eClock
 = 
__SYSTEM_CLOCK
;

390 
	$Sy°emC‹eClockUpd©e
 ()

392 
uöt32_t
 
oscClk
 = 0;

395 (
LPC_SYSCON
->
WDTOSCCTRL
 >> 5) & 0x0F) {

396 0: 
oscClk
 = 0; ;

397 1: 
oscClk
 = 500000; ;

398 2: 
oscClk
 = 800000; ;

399 3: 
oscClk
 = 1100000; ;

400 4: 
oscClk
 = 1400000; ;

401 5: 
oscClk
 = 1600000; ;

402 6: 
oscClk
 = 1800000; ;

403 7: 
oscClk
 = 2000000; ;

404 8: 
oscClk
 = 2200000; ;

405 9: 
oscClk
 = 2400000; ;

406 10: 
oscClk
 = 2600000; ;

407 11: 
oscClk
 = 2700000; ;

408 12: 
oscClk
 = 2900000; ;

409 13: 
oscClk
 = 3100000; ;

410 14: 
oscClk
 = 3200000; ;

411 15: 
oscClk
 = 3400000; ;

413 
oscClk
 /((
LPC_SYSCON
->
WDTOSCCTRL
 & 0x1F) << 1) + 2;

415 
LPC_SYSCON
->
MAINCLKSEL
 & 0x03) {

417 
Sy°emC‹eClock
 = 
__IRC_OSC_CLK
;

420 
LPC_SYSCON
->
SYSPLLCLKSEL
 & 0x03) {

422 
Sy°emC‹eClock
 = 
__IRC_OSC_CLK
;

425 
Sy°emC‹eClock
 = 
__SYS_OSC_CLK
;

429 
Sy°emC‹eClock
 = 0;

434 
Sy°emC‹eClock
 = 
oscClk
;

437 
LPC_SYSCON
->
SYSPLLCLKSEL
 & 0x03) {

439 
Sy°emC‹eClock
 = 
__IRC_OSC_CLK
 * ((
LPC_SYSCON
->
SYSPLLCTRL
 & 0x01F) + 1);

442 
Sy°emC‹eClock
 = 
__SYS_OSC_CLK
 * ((
LPC_SYSCON
->
SYSPLLCTRL
 & 0x01F) + 1);

446 
Sy°emC‹eClock
 = 0;

452 
Sy°emC‹eClock
 /
LPC_SYSCON
->
SYSAHBCLKDIV
;

454 
	}
}

456 
	#PDRUN_VALID_BITS
 0x000025FFL

	)

457 
	#PDRUN_RESERVED_ONE
 0x0000C800L

	)

459 
	$powî_down_c⁄fig
(
uöt32_t
 
vÆ
)

461 vﬁ©ûê
uöt32_t
 
tmp
;

462 
tmp
 = (
LPC_SYSCON
->
PDRUNCFG
 & 
PDRUN_VALID_BITS
);

463 
tmp
 |(
vÆ
 & 
PDRUN_VALID_BITS
);

464 
LPC_SYSCON
->
PDRUNCFG
 = (
tmp
 | 
PDRUN_RESERVED_ONE
);

465 
	}
}

467 
	$powî_up_c⁄fig
(
uöt32_t
 
vÆ
)

469 vﬁ©ûê
uöt32_t
 
tmp
;

470 
tmp
 = (
LPC_SYSCON
->
PDRUNCFG
 & 
PDRUN_VALID_BITS
);

471 
tmp
 &~(
vÆ
 & 
PDRUN_VALID_BITS
);

472 
LPC_SYSCON
->
PDRUNCFG
 = (
tmp
 | 
PDRUN_RESERVED_ONE
);

473 
	}
}

483 
	$Sy°emInô
 () {

484 #i‡(
CLOCK_SETUP
)

485 vﬁ©ûê
uöt32_t
 
i
;

487 
LPC_SYSCON
->
SYSAHBCLKCTRL
 |= (1<<16);

488 
LPC_SYSCON
->
SYSPLLCTRL
 = 
SYSPLLCTRL_VÆ
;

490 #i‡(
CLOCK_SETUP
)

492 #i‡((
SYSPLLCLKSEL_VÆ
 & 0x03) == 1)

494 
LPC_IOCON
->
PIO2_0
 = 0x01;

495 
LPC_IOCON
->
PIO2_1
 = 0x01;

497 
LPC_SYSCON
->
SYSOSCCTRL
 = 
SYSOSCCTRL_VÆ
;

498 
	`powî_up_c⁄fig
(1<<5);

499 
i
 = 0; i < 2500; i++Ë
	`__NOP
();

502 #i‡((
SYSPLLCLKSEL_VÆ
 & 0x03) == 3)

503 
LPC_SYSCON
->
RTCOSCCTRL
 = (1 << 0);

504 
i
 = 0; i < 200; i++Ë
	`__NOP
();

507 
LPC_SYSCON
->
SYSPLLCLKSEL
 = 
SYSPLLCLKSEL_VÆ
;

508 
LPC_SYSCON
->
SYSPLLCLKUEN
 = 0x01;

509 
LPC_SYSCON
->
SYSPLLCLKUEN
 = 0x00;

510 
LPC_SYSCON
->
SYSPLLCLKUEN
 = 0x01;

511 !(
LPC_SYSCON
->
SYSPLLCLKUEN
 & 0x01));

513 #i‡(
CLOCK_SETUP_REG
 == 1)

515 #i‡(((
MAINCLKSEL_VÆ
 & 0x03) == 2) )

516 
LPC_SYSCON
->
WDTOSCCTRL
 = 
WDTOSCCTRL_VÆ
;

517 
LPC_SYSCON
->
PDRUNCFG
 &= ~(1 << 6);

518 
i
 = 0; i < 2000; i++Ë
	`__NOP
();

521 #i‡((
MAINCLKSEL_VÆ
 & 0x03) == 3)

522 
	`powî_down_c⁄fig
(1<<7);

523 
LPC_SYSCON
->
SYSPLLCTRL
 = 
SYSPLLCTRL_VÆ
;

524 
	`powî_up_c⁄fig
(1<<7);

525 !(
LPC_SYSCON
->
SYSPLLSTAT
 & 0x01));

528 
LPC_SYSCON
->
MAINCLKSEL
 = 
MAINCLKSEL_VÆ
;

529 
LPC_SYSCON
->
MAINCLKUEN
 = 0x01;

530 
LPC_SYSCON
->
MAINCLKUEN
 = 0x00;

531 
LPC_SYSCON
->
MAINCLKUEN
 = 0x01;

532 !(
LPC_SYSCON
->
MAINCLKUEN
 & 0x01));

534 
LPC_SYSCON
->
SYSAHBCLKDIV
 = 
SYSAHBCLKDIV_VÆ
;

537 #i‡(
CLOCK_SETUP_API
 == 1)

544 
LPC_SYSCON
->
MAINCLKSEL
 = 
SYSPLLCLKSEL_VÆ
;

545 
LPC_SYSCON
->
MAINCLKUEN
 = 0x01;

546 
LPC_SYSCON
->
MAINCLKUEN
 = 0x00;

547 
LPC_SYSCON
->
MAINCLKUEN
 = 0x01;

548 !(
LPC_SYSCON
->
MAINCLKUEN
 & 0x01));

550 
LPC_SYSCON
->
SYSAHBCLKDIV
 = 1;

552 
	`£tPLL
(
PLL_API_MODE_VÆ
, 
__SYS_PLLCLKIN
 / 1000, 
PLL_API_FREQ_VÆ
 / 1000);

555 #i‡(
USB_CLOCK_SETUP
 == 1)

556 
LPC_SYSCON
->
PDRUNCFG
 &= ~(1 << 10);

558 #i‡((
USBCLKSEL_VÆ
 & 0x003) == 0)

559 
LPC_SYSCON
->
PDRUNCFG
 &= ~(1 << 8);

560 
LPC_SYSCON
->
USBPLLCLKSEL
 = 
USBPLLCLKSEL_VÆ
;

561 
LPC_SYSCON
->
USBPLLCLKUEN
 = 0x01;

562 
LPC_SYSCON
->
USBPLLCLKUEN
 = 0x00;

563 
LPC_SYSCON
->
USBPLLCLKUEN
 = 0x01;

564 !(
LPC_SYSCON
->
USBPLLCLKUEN
 & 0x01));

566 
LPC_SYSCON
->
USBPLLCTRL
 = 
USBPLLCTRL_VÆ
;

567 !(
LPC_SYSCON
->
USBPLLSTAT
 & 0x01));

569 
LPC_SYSCON
->
USBCLKSEL
 = 0x00;

572 
LPC_SYSCON
->
USBCLKSEL
 = 
USBCLKSEL_VÆ
;

573 
LPC_SYSCON
->
USBCLKDIV
 = 
USBCLKDIV_VÆ
;

576 
LPC_SYSCON
->
PDRUNCFG
 |= (1 << 10);

577 
LPC_SYSCON
->
PDRUNCFG
 |= (1 << 8);

582 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\TARGET_NXP\TARGET_LPC11U6X\system_LPC11U6x.h

26 #i‚de‡
__SYSTEM_LPC11U6x_H


27 
	#__SYSTEM_LPC11U6x_H


	)

29 #ifde‡
__˝lu•lus


33 
	~<°döt.h
>

35 
uöt32_t
 
Sy°emC‹eClock
;

47 
Sy°emInô
 ();

58 
Sy°emC‹eClockUpd©e
 ();

60 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\core_ca9.h

38 #i‡
deföed
 ( 
__ICCARM__
 )

39 #¥agm®
sy°em_ö˛ude


42 #ifde‡
__˝lu•lus


46 #i‚de‡
__CORE_CA9_H_GENERIC


47 
	#__CORE_CA9_H_GENERIC


	)

72 
	#__CA9_CMSIS_VERSION_MAIN
 (0x03Ë

	)

73 
	#__CA9_CMSIS_VERSION_SUB
 (0x10Ë

	)

74 
	#__CA9_CMSIS_VERSION
 ((
__CA9_CMSIS_VERSION_MAIN
 << 16) | \

75 
__CA9_CMSIS_VERSION_SUB
 )

	)

77 
	#__CORTEX_A
 (0x09Ë

	)

80 #i‡ 
deföed
 ( 
__CC_ARM
 )

81 
	#__ASM
 
__asm


	)

82 
	#__INLINE
 
__ölöe


	)

83 
	#__STATIC_INLINE
 
__ölöe


	)

84 
	#__STATIC_ASM
 
__asm


	)

86 #ñi‡
deföed
 ( 
__ICCARM__
 )

87 
	#__ASM
 
__asm


	)

88 
	#__INLINE
 
ölöe


	)

89 
	#__STATIC_INLINE
 
ölöe


	)

90 
	#__STATIC_ASM
 
__asm


	)

92 #ñi‡
deföed
 ( 
__TMS470__
 )

93 
	#__ASM
 
__asm


	)

94 
	#__STATIC_INLINE
 
ölöe


	)

95 
	#__STATIC_ASM
 
__asm


	)

97 #ñi‡
deföed
 ( 
__GNUC__
 )

98 
	#__ASM
 
__asm


	)

99 
	#__INLINE
 
ölöe


	)

100 
	#__STATIC_INLINE
 
ölöe


	)

101 
	#__STATIC_ASM
 
__asm


	)

103 #ñi‡
deföed
 ( 
__TASKING__
 )

104 
	#__ASM
 
__asm


	)

105 
	#__INLINE
 
ölöe


	)

106 
	#__STATIC_INLINE
 
ölöe


	)

107 
	#__STATIC_ASM
 
__asm


	)

113 #i‡
deföed
 ( 
__CC_ARM
 )

114 #i‡
deföed
 
__TARGET_FPU_VFP


115 #i‡(
__FPU_PRESENT
 == 1)

116 
	#__FPU_USED
 1

	)

119 
	#__FPU_USED
 0

	)

122 
	#__FPU_USED
 0

	)

125 #ñi‡
deföed
 ( 
__ICCARM__
 )

126 #i‡
deföed
 
__ARMVFP__


127 #i‡(
__FPU_PRESENT
 == 1)

128 
	#__FPU_USED
 1

	)

131 
	#__FPU_USED
 0

	)

134 
	#__FPU_USED
 0

	)

137 #ñi‡
deföed
 ( 
__TMS470__
 )

138 #i‡
deföed
 
__TI_VFP_SUPPORT__


139 #i‡(
__FPU_PRESENT
 == 1)

140 
	#__FPU_USED
 1

	)

143 
	#__FPU_USED
 0

	)

146 
	#__FPU_USED
 0

	)

149 #ñi‡
deföed
 ( 
__GNUC__
 )

150 #i‡
deföed
 (
__VFP_FP__
Ë&& !deföed(
__SOFTFP__
)

151 #i‡(
__FPU_PRESENT
 == 1)

152 
	#__FPU_USED
 1

	)

155 
	#__FPU_USED
 0

	)

158 
	#__FPU_USED
 0

	)

161 #ñi‡
deföed
 ( 
__TASKING__
 )

162 #i‡
deföed
 
__FPU_VFP__


163 #i‡(
__FPU_PRESENT
 == 1)

164 
	#__FPU_USED
 1

	)

167 
	#__FPU_USED
 0

	)

170 
	#__FPU_USED
 0

	)

174 
	~<°döt.h
>

175 
	~"c‹e_ˇIn°r.h
"

176 
	~"c‹e_ˇFunc.h
"

177 
	~"c‹e_cm4_simd.h
"

181 #i‚de‡
__CMSIS_GENERIC


183 #i‚de‡
__CORE_CA9_H_DEPENDANT


184 
	#__CORE_CA9_H_DEPENDANT


	)

187 #i‡
deföed
 
__CHECK_DEVICE_DEFINES


188 #i‚de‡
__CA9_REV


189 
	#__CA9_REV
 0x0000

	)

193 #i‚de‡
__FPU_PRESENT


194 
	#__FPU_PRESENT
 1

	)

198 #i‚de‡
__Víd‹_SysTickC⁄fig


199 
	#__Víd‹_SysTickC⁄fig
 1

	)

202 #i‡
__Víd‹_SysTickC⁄fig
 == 0

215 #ifde‡
__˝lu•lus


216 
	#__I
 vﬁ©ûê

	)

218 
	#__I
 vﬁ©ûêc⁄°

	)

220 
	#__O
 vﬁ©ûê

	)

221 
	#__IO
 vﬁ©ûê

	)

245 
uöt32_t
 
_ª£rved0
:16;

246 
uöt32_t
 
GE
:4;

247 
uöt32_t
 
ª£rved1
:7;

248 
uöt32_t
 
Q
:1;

249 
uöt32_t
 
V
:1;

250 
uöt32_t
 
C
:1;

251 
uöt32_t
 
Z
:1;

252 
uöt32_t
 
N
:1;

253 } 
b
;

254 
uöt32_t
 
w
;

255 } 
	tAPSR_Ty≥
;

267 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\core_caFunc.h

38 #i‚de‡
__CORE_CAFUNC_H__


39 
	#__CORE_CAFUNC_H__


	)

48 #i‡ 
deföed
 ( 
__CC_ARM
 )

51 #i‡(
__ARMCC_VERSION
 < 400677)

55 
	#MODE_USR
 0x10

	)

56 
	#MODE_FIQ
 0x11

	)

57 
	#MODE_IRQ
 0x12

	)

58 
	#MODE_SVC
 0x13

	)

59 
	#MODE_MON
 0x16

	)

60 
	#MODE_ABT
 0x17

	)

61 
	#MODE_HYP
 0x1A

	)

62 
	#MODE_UND
 0x1B

	)

63 
	#MODE_SYS
 0x1F

	)

71 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_APSR
()

73 
uöt32_t
 
__ªgAPSR
 
	`__ASM
("apsr");

74 (
__ªgAPSR
);

75 
	}
}

84 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_CPSR
()

86 
uöt32_t
 
__ªgCPSR
 
	`__ASM
("cpsr");

87 (
__ªgCPSR
);

88 
	}
}

96 
uöt32_t
 
__ªgSP
 
__ASM
("sp");

97 
__STATIC_INLINE
 
	$__£t_SP
(
uöt32_t
 
t›OfSèck
)

99 
__ªgSP
 = 
t›OfSèck
;

100 
	}
}

109 
uöt32_t
 
__ªgÃ
 
__ASM
("lr");

110 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_LR
()

112 (
__ªgÃ
);

113 
	}
}

121 
__STATIC_INLINE
 
	$__£t_LR
(
uöt32_t
 
Ã
)

123 
__ªgÃ
 = 
Ã
;

124 
	}
}

132 
__STATIC_ASM
 
	$__£t_PSP
(
uöt32_t
 
t›OfProcSèck
)

134 
ARM


135 
PRESERVE8


137 
BIC
 
R0
, R0, #7 ;
ísuª
 
°ack
 
is
 8-
byã
 
Æig√d


138 
MRS
 
R1
, 
CPSR


139 
CPS
 #MODE_SYS ;
no
 
ef„˘
 
ö
 
USR
 
mode


140 
MOV
 
SP
, 
R0


141 
MSR
 
CPSR_c
, 
R1
 ;
no
 
ef„˘
 
ö
 
USR
 
mode


142 
ISB


143 
BX
 
LR


145 
	}
}

151 
__STATIC_ASM
 
	$__£t_CPS_USR
()

153 
ARM


155 
CPS
 #MODE_USR

156 
BX
 
LR


157 
	}
}

165 
	#__íabÀ_Áu…_úq
 
__íabÀ_fiq


	)

173 
	#__dißbÀ_Áu…_úq
 
__dißbÀ_fiq


	)

182 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_FPSCR
()

184 #i‡(
__FPU_PRESENT
 =1Ë&& (
__FPU_USED
 == 1)

185 
uöt32_t
 
__ªgÂs¸
 
	`__ASM
("fpscr");

186 (
__ªgÂs¸
);

190 
	}
}

199 
__STATIC_INLINE
 
	$__£t_FPSCR
(
uöt32_t
 
Âs¸
)

201 #i‡(
__FPU_PRESENT
 =1Ë&& (
__FPU_USED
 == 1)

202 
uöt32_t
 
__ªgÂs¸
 
	`__ASM
("fpscr");

203 
__ªgÂs¸
 = (
Âs¸
);

205 
	}
}

213 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_FPEXC
()

215 #i‡(
__FPU_PRESENT
 == 1)

216 
uöt32_t
 
__ªgÂexc
 
	`__ASM
("fpexc");

217 (
__ªgÂexc
);

221 
	}
}

230 
__STATIC_INLINE
 
	$__£t_FPEXC
(
uöt32_t
 
Âexc
)

232 #i‡(
__FPU_PRESENT
 == 1)

233 
uöt32_t
 
__ªgÂexc
 
	`__ASM
("fpexc");

234 
__ªgÂexc
 = (
Âexc
);

236 
	}
}

244 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_CPACR
()

246 
uöt32_t
 
__ªgCPACR
 
	`__ASM
("cp15:0:c1:c0:2");

247  
__ªgCPACR
;

248 
	}
}

256 
__STATIC_INLINE
 
	$__£t_CPACR
(
uöt32_t
 
˝a¸
)

258 
uöt32_t
 
__ªgCPACR
 
	`__ASM
("cp15:0:c1:c0:2");

259 
__ªgCPACR
 = 
˝a¸
;

260 
	`__ISB
();

261 
	}
}

269 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_CBAR
() {

270 
uöt32_t
 
__ªgCBAR
 
	`__ASM
("cp15:4:c15:c0:0");

271 (
__ªgCBAR
);

272 
	}
}

280 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_TTBR0
() {

281 
uöt32_t
 
__ªgTTBR0
 
	`__ASM
("cp15:0:c2:c0:0");

282 (
__ªgTTBR0
);

283 
	}
}

291 
__STATIC_INLINE
 
	$__£t_TTBR0
(
uöt32_t
 
âbr0
) {

292 
uöt32_t
 
__ªgTTBR0
 
	`__ASM
("cp15:0:c2:c0:0");

293 
__ªgTTBR0
 = 
âbr0
;

294 
	`__ISB
();

295 
	}
}

303 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_DACR
() {

304 
uöt32_t
 
__ªgDACR
 
	`__ASM
("cp15:0:c3:c0:0");

305 (
__ªgDACR
);

306 
	}
}

314 
__STATIC_INLINE
 
	$__£t_DACR
(
uöt32_t
 
da¸
) {

315 
uöt32_t
 
__ªgDACR
 
	`__ASM
("cp15:0:c3:c0:0");

316 
__ªgDACR
 = 
da¸
;

317 
	`__ISB
();

318 
	}
}

328 
__STATIC_INLINE
 
	$__£t_SCTLR
(
uöt32_t
 
s˘Ã
)

330 
uöt32_t
 
__ªgSCTLR
 
	`__ASM
("cp15:0:c1:c0:0");

331 
__ªgSCTLR
 = 
s˘Ã
;

332 
	}
}

340 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_SCTLR
() {

341 
uöt32_t
 
__ªgSCTLR
 
	`__ASM
("cp15:0:c1:c0:0");

342 (
__ªgSCTLR
);

343 
	}
}

349 
__STATIC_INLINE
 
	$__íabÀ_ˇches
() {

352 
	`__£t_SCTLR
–
	`__gë_SCTLR
() | (1 << 12) | (1 << 2));

353 
	}
}

359 
__STATIC_INLINE
 
	$__dißbÀ_ˇches
() {

362 
	`__£t_SCTLR
–
	`__gë_SCTLR
() & ~(1 << 12) & ~(1 << 2));

363 
	`__ISB
();

364 
	}
}

370 
__STATIC_INLINE
 
	$__íabÀ_bèc
() {

372 
	`__£t_SCTLR
–
	`__gë_SCTLR
() | (1 << 11));

373 
	`__ISB
();

374 
	}
}

380 
__STATIC_INLINE
 
	$__dißbÀ_bèc
() {

382 
	`__£t_SCTLR
–
	`__gë_SCTLR
() & ~(1 << 11));

383 
	}
}

390 
__STATIC_INLINE
 
	$__íabÀ_mmu
() {

394 
	`__£t_SCTLR
–(
	`__gë_SCTLR
() & ~(1 << 28) & ~(1 << 1)) | 1 | (1 << 29));

395 
	`__ISB
();

396 
	}
}

402 
__STATIC_INLINE
 
	$__dißbÀ_mmu
() {

404 
	`__£t_SCTLR
–
	`__gë_SCTLR
() & ~1);

405 
	`__ISB
();

406 
	}
}

414 
__STATIC_INLINE
 
	$__ˇ9u_öv_éb_Æl
() {

415 
uöt32_t
 
__TLBIALL
 
	`__ASM
("cp15:0:c8:c7:0");

416 
__TLBIALL
 = 0;

417 
	`__DSB
();

418 
	`__ISB
();

419 
	}
}

427 
__STATIC_INLINE
 
	$__v7_öv_bèc
() {

428 
uöt32_t
 
__BPIALL
 
	`__ASM
("cp15:0:c7:c5:6");

429 
__BPIALL
 = 0;

430 
	`__DSB
();

431 
	`__ISB
();

432 
	}
}

441 
__STATIC_INLINE
 
	$__v7_öv_iˇche_Æl
() {

442 
uöt32_t
 
__ICIALLU
 
	`__ASM
("cp15:0:c7:c5:0");

443 
__ICIALLU
 = 0;

444 
	`__DSB
();

445 
	`__ISB
();

446 
	}
}

452 
__STATIC_INLINE
 
	$__v7_˛ón_dˇche_mva
(*
va
) {

453 
uöt32_t
 
__DCCMVAC
 
	`__ASM
("cp15:0:c7:c10:1");

454 
__DCCMVAC
 = (
uöt32_t
)
va
;

455 
	`__DMB
();

456 
	}
}

462 
__STATIC_INLINE
 
	$__v7_öv_dˇche_mva
(*
va
) {

463 
uöt32_t
 
__DCIMVAC
 
	`__ASM
("cp15:0:c7:c6:1");

464 
__DCIMVAC
 = (
uöt32_t
)
va
;

465 
	`__DMB
();

466 
	}
}

472 
__STATIC_INLINE
 
	$__v7_˛ón_öv_dˇche_mva
(*
va
) {

473 
uöt32_t
 
__DCCIMVAC
 
	`__ASM
("cp15:0:c7:c14:1");

474 
__DCCIMVAC
 = (
uöt32_t
)
va
;

475 
	`__DMB
();

476 
	}
}

482 #¥agm®
push


483 #¥agm®
¨m


484 
__STATIC_ASM
 
	$__v7_Æl_ˇche
(
uöt32_t
 
›
) {

485 
ARM


487 
PUSH
 {
R4
-
R11
}

489 
MRC
 
p15
, 1, 
R6
, 
c0
, c0, 1

490 
ANDS
 
R3
, 
R6
, #0
x07000000


491 
MOV
 
R3
, R3, 
LSR
 #23

492 
BEQ
 
Föished


494 
MOV
 
R10
, #0

495 
Lo›1
 
ADD
 
R2
, 
R10
, R10, 
LSR
 #1

496 
MOV
 
R1
, 
R6
, 
LSR
 
R2


497 
AND
 
R1
, R1, #7

498 
CMP
 
R1
, #2

499 
BLT
 
Skù


501 
MCR
 
p15
, 2, 
R10
, 
c0
, c0, 0

502 
ISB


503 
MRC
 
p15
, 1, 
R1
, 
c0
, c0, 0

504 
AND
 
R2
, 
R1
, #7

505 
ADD
 
R2
, R2, #4

506 
LDR
 
R4
, =0x3FF

507 
ANDS
 
R4
, R4, 
R1
, 
LSR
 #3

508 
CLZ
 
R5
, 
R4


509 
LDR
 
R7
, =0x7FFF

510 
ANDS
 
R7
, R7, 
R1
, 
LSR
 #13

512 
Lo›2
 
MOV
 
R9
, 
R4


514 
Lo›3
 
ORR
 
R11
, 
R10
, 
R9
, 
LSL
 
R5


515 
ORR
 
R11
, R11, 
R7
, 
LSL
 
R2


516 
CMP
 
R0
, #0

517 
BNE
 
Dccsw


518 
MCR
 
p15
, 0, 
R11
, 
c7
, 
c6
, 2

519 
B
 
c⁄t


520 
Dccsw
 
CMP
 
R0
, #1

521 
BNE
 
Dccisw


522 
MCR
 
p15
, 0, 
R11
, 
c7
, 
c10
, 2

523 
B
 
c⁄t


524 
Dccisw
 
MCR
 
p15
, 0, 
R11
, 
c7
, 
c14
, 2

525 
c⁄t
 
SUBS
 
R9
, R9, #1

526 
BGE
 
Lo›3


527 
SUBS
 
R7
, R7, #1

528 
BGE
 
Lo›2


529 
Skù
 
ADD
 
R10
, R10, #2

530 
CMP
 
R3
, 
R10


531 
BGT
 
Lo›1


533 
Föished


534 
DSB


535 
POP
 {
R4
-
R11
}

536 
BX
 
Ã


538 
	}
}

539 #¥agm®
p›


547 
__STATIC_INLINE
 
	$__v7_öv_dˇche_Æl
() {

548 
	`__v7_Æl_ˇche
(0);

549 
	}
}

556 
__STATIC_INLINE
 
	$__v7_˛ón_dˇche_Æl
() {

557 
	`__v7_Æl_ˇche
(1);

558 
	}
}

565 
__STATIC_INLINE
 
	$__v7_˛ón_öv_dˇche_Æl
() {

566 
	`__v7_Æl_ˇche
(2);

567 
	}
}

569 
	~"c‹e_ˇ_mmu.h
"

571 #ñi‡(
deföed
 (
__ICCARM__
))

573 #îr‹ 
IAR
 
Compûî
 
suµ‹t
 
nŸ
 
im∂emíãd
 
C‹ãx
-
A


575 #ñi‡(
deföed
 (
__GNUC__
))

578 
	#MODE_USR
 0x10

	)

579 
	#MODE_FIQ
 0x11

	)

580 
	#MODE_IRQ
 0x12

	)

581 
	#MODE_SVC
 0x13

	)

582 
	#MODE_MON
 0x16

	)

583 
	#MODE_ABT
 0x17

	)

584 
	#MODE_HYP
 0x1A

	)

585 
	#MODE_UND
 0x1B

	)

586 
	#MODE_SYS
 0x1F

	)

589 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__íabÀ_úq
()

591 
__ASM
 volatile ("cpsie i");

592 
	}
}

599 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__dißbÀ_úq
()

601 
uöt32_t
 
ªsu…
;

603 
__ASM
 vﬁ©ûê("mr†%0, cp§" : "Ù" (
ªsu…
));

604 
__ASM
 volatile ("cpsid i");

605 (
ªsu…
 & 0x80);

606 
	}
}

615 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_APSR
()

618 
uöt32_t
 
__ªgAPSR
;

619 
__ASM
 vﬁ©ûê("mr†%0,áp§" : "Ù" (
__ªgAPSR
) );

621 
uöt32_t
 
__ªgAPSR
 
	`__ASM
("apsr");

623 (
__ªgAPSR
);

624 
	}
}

633 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_CPSR
()

636 
uöt32_t
 
__ªgCPSR
;

637 
__ASM
 vﬁ©ûê("mr†%0, cp§" : "Ù" (
__ªgCPSR
));

639 
uöt32_t
 
__ªgCPSR
 
	`__ASM
("cpsr");

641 (
__ªgCPSR
);

642 
	}
}

651 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__£t_SP
(
uöt32_t
 
t›OfSèck
)

653 
uöt32_t
 
__ªgSP
 
	`__ASM
("sp");

654 
__ªgSP
 = 
t›OfSèck
;

655 
	}
}

664 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_LR
()

666 
uöt32_t
 
__ªgÃ
 
	`__ASM
("lr");

667 (
__ªgÃ
);

668 
	}
}

677 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__£t_LR
(
uöt32_t
 
Ã
)

679 
uöt32_t
 
__ªgÃ
 
	`__ASM
("lr");

680 
__ªgÃ
 = 
Ã
;

681 
	}
}

690 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__£t_PSP
(
uöt32_t
 
t›OfProcSèck
)

692 
__asm__
 volatile (

704 : "i"(
MODE_SYS
)

707 
	}
}

713 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__£t_CPS_USR
()

715 
__asm__
 volatile (

721 : "i"(
MODE_USR
)

724 
	}
}

732 
	#__íabÀ_Áu…_úq
(Ë
__asm__
 vﬁ©ûê("˝sõ f")

	)

740 
	#__dißbÀ_Áu…_úq
(Ë
__asm__
 vﬁ©ûê("˝sid f")

	)

749 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_FPSCR
()

751 #i‡(
__FPU_PRESENT
 =1Ë&& (
__FPU_USED
 == 1)

753 
uöt32_t
 
ªsu…
;

755 
__ASM
 vﬁ©ûê("vmr†%0, fps¸" : "Ù" (
ªsu…
) );

756  (
ªsu…
);

758 
uöt32_t
 
__ªgÂs¸
 
	`__ASM
("fpscr");

759 (
__ªgÂs¸
);

764 
	}
}

773 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__£t_FPSCR
(
uöt32_t
 
Âs¸
)

775 #i‡(
__FPU_PRESENT
 =1Ë&& (
__FPU_USED
 == 1)

777 
__ASM
 vﬁ©ûê("vm§ fps¸, %0" : : "r" (
Âs¸
) );

779 
uöt32_t
 
__ªgÂs¸
 
	`__ASM
("fpscr");

780 
__ªgÂs¸
 = (
Âs¸
);

783 
	}
}

791 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_FPEXC
()

793 #i‡(
__FPU_PRESENT
 == 1)

795 
uöt32_t
 
ªsu…
;

797 
__ASM
 vﬁ©ûê("vmr†%0, f≥xc" : "Ù" (
ªsu…
));

798  (
ªsu…
);

800 
uöt32_t
 
__ªgÂexc
 
	`__ASM
("fpexc");

801 (
__ªgÂexc
);

806 
	}
}

815 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__£t_FPEXC
(
uöt32_t
 
Âexc
)

817 #i‡(
__FPU_PRESENT
 == 1)

819 
__ASM
 vﬁ©ûê("vm§ f≥xc, %0" : : "r" (
Âexc
));

821 
uöt32_t
 
__ªgÂexc
 
	`__ASM
("fpexc");

822 
__ªgÂexc
 = (
Âexc
);

825 
	}
}

833 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_CPACR
()

836 
uöt32_t
 
__ªgCPACR
;

837 
__ASM
 vﬁ©ûê("mr¯p15, 0, %0, c1, c0, 2" : "Ù" (
__ªgCPACR
));

839 
uöt32_t
 
__ªgCPACR
 
	`__ASM
("cp15:0:c1:c0:2");

841  
__ªgCPACR
;

842 
	}
}

850 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__£t_CPACR
(
uöt32_t
 
˝a¸
)

853 
__ASM
 vﬁ©ûê("m¸Ö15, 0, %0, c1, c0, 2" : : "r" (
˝a¸
));

855 
uöt32_t
 
__ªgCPACR
 
	`__ASM
("cp15:0:c1:c0:2");

856 
__ªgCPACR
 = 
˝a¸
;

858 
	`__ISB
();

859 
	}
}

867 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_CBAR
() {

869 
uöt32_t
 
__ªgCBAR
;

870 
__ASM
 vﬁ©ûê("mr¯p15, 4, %0, c15, c0, 0" : "Ù" (
__ªgCBAR
));

872 
uöt32_t
 
__ªgCBAR
 
	`__ASM
("cp15:4:c15:c0:0");

874 (
__ªgCBAR
);

875 
	}
}

883 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_TTBR0
() {

885 
uöt32_t
 
__ªgTTBR0
;

886 
__ASM
 vﬁ©ûê("mr¯p15, 0, %0, c2, c0, 0" : "Ù" (
__ªgTTBR0
));

888 
uöt32_t
 
__ªgTTBR0
 
	`__ASM
("cp15:0:c2:c0:0");

890 (
__ªgTTBR0
);

891 
	}
}

899 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__£t_TTBR0
(
uöt32_t
 
âbr0
) {

901 
__ASM
 vﬁ©ûê("m¸Ö15, 0, %0, c2, c0, 0" : : "r" (
âbr0
));

903 
uöt32_t
 
__ªgTTBR0
 
	`__ASM
("cp15:0:c2:c0:0");

904 
__ªgTTBR0
 = 
âbr0
;

906 
	`__ISB
();

907 
	}
}

915 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_DACR
() {

917 
uöt32_t
 
__ªgDACR
;

918 
__ASM
 vﬁ©ûê("mr¯p15, 0, %0, c3, c0, 0" : "Ù" (
__ªgDACR
));

920 
uöt32_t
 
__ªgDACR
 
	`__ASM
("cp15:0:c3:c0:0");

922 (
__ªgDACR
);

923 
	}
}

931 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__£t_DACR
(
uöt32_t
 
da¸
) {

933 
__ASM
 vﬁ©ûê("m¸Ö15, 0, %0, c3, c0, 0" : : "r" (
da¸
));

935 
uöt32_t
 
__ªgDACR
 
	`__ASM
("cp15:0:c3:c0:0");

936 
__ªgDACR
 = 
da¸
;

938 
	`__ISB
();

939 
	}
}

949 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__£t_SCTLR
(
uöt32_t
 
s˘Ã
)

952 
__ASM
 vﬁ©ûê("m¸Ö15, 0, %0, c1, c0, 0" : : "r" (
s˘Ã
));

954 
uöt32_t
 
__ªgSCTLR
 
	`__ASM
("cp15:0:c1:c0:0");

955 
__ªgSCTLR
 = 
s˘Ã
;

957 
	}
}

965 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_SCTLR
() {

967 
uöt32_t
 
__ªgSCTLR
;

968 
__ASM
 vﬁ©ûê("mr¯p15, 0, %0, c1, c0, 0" : "Ù" (
__ªgSCTLR
));

970 
uöt32_t
 
__ªgSCTLR
 
	`__ASM
("cp15:0:c1:c0:0");

972 (
__ªgSCTLR
);

973 
	}
}

979 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__íabÀ_ˇches
() {

982 
	`__£t_SCTLR
–
	`__gë_SCTLR
() | (1 << 12) | (1 << 2));

983 
	}
}

989 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__dißbÀ_ˇches
() {

992 
	`__£t_SCTLR
–
	`__gë_SCTLR
() & ~(1 << 12) & ~(1 << 2));

993 
	`__ISB
();

994 
	}
}

1000 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__íabÀ_bèc
() {

1002 
	`__£t_SCTLR
–
	`__gë_SCTLR
() | (1 << 11));

1003 
	`__ISB
();

1004 
	}
}

1010 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__dißbÀ_bèc
() {

1012 
	`__£t_SCTLR
–
	`__gë_SCTLR
() & ~(1 << 11));

1013 
	}
}

1020 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__íabÀ_mmu
() {

1024 
	`__£t_SCTLR
–(
	`__gë_SCTLR
() & ~(1 << 28) & ~(1 << 1)) | 1 | (1 << 29));

1025 
	`__ISB
();

1026 
	}
}

1032 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__dißbÀ_mmu
() {

1034 
	`__£t_SCTLR
–
	`__gë_SCTLR
() & ~1);

1035 
	`__ISB
();

1036 
	}
}

1044 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__ˇ9u_öv_éb_Æl
() {

1046 
__ASM
 volatile ("mcrÖ15, 0, %0, c8, c7, 0" : : "r" (0));

1048 
uöt32_t
 
__TLBIALL
 
	`__ASM
("cp15:0:c8:c7:0");

1049 
__TLBIALL
 = 0;

1051 
	`__DSB
();

1052 
	`__ISB
();

1053 
	}
}

1061 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__v7_öv_bèc
() {

1063 
__ASM
 volatile ("mcrÖ15, 0, %0, c7, c5, 6" : : "r" (0));

1065 
uöt32_t
 
__BPIALL
 
	`__ASM
("cp15:0:c7:c5:6");

1066 
__BPIALL
 = 0;

1068 
	`__DSB
();

1069 
	`__ISB
();

1070 
	}
}

1079 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__v7_öv_iˇche_Æl
() {

1081 
__ASM
 volatile ("mcrÖ15, 0, %0, c7, c5, 0" : : "r" (0));

1083 
uöt32_t
 
__ICIALLU
 
	`__ASM
("cp15:0:c7:c5:0");

1084 
__ICIALLU
 = 0;

1086 
	`__DSB
();

1087 
	`__ISB
();

1088 
	}
}

1094 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__v7_˛ón_dˇche_mva
(*
va
) {

1096 
__ASM
 vﬁ©ûê("m¸Ö15, 0, %0, c7, c10, 1" : : "r" ((
uöt32_t
)
va
));

1098 
uöt32_t
 
__DCCMVAC
 
	`__ASM
("cp15:0:c7:c10:1");

1099 
__DCCMVAC
 = (
uöt32_t
)
va
;

1101 
	`__DMB
();

1102 
	}
}

1108 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__v7_öv_dˇche_mva
(*
va
) {

1110 
__ASM
 vﬁ©ûê("m¸Ö15, 0, %0, c7, c6, 1" : : "r" ((
uöt32_t
)
va
));

1112 
uöt32_t
 
__DCIMVAC
 
	`__ASM
("cp15:0:c7:c6:1");

1113 
__DCIMVAC
 = (
uöt32_t
)
va
;

1115 
	`__DMB
();

1116 
	}
}

1122 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__v7_˛ón_öv_dˇche_mva
(*
va
) {

1124 
__ASM
 vﬁ©ûê("m¸Ö15, 0, %0, c7, c14, 1" : : "r" ((
uöt32_t
)
va
));

1126 
uöt32_t
 
__DCCIMVAC
 
	`__ASM
("cp15:0:c7:c14:1");

1127 
__DCCIMVAC
 = (
uöt32_t
)
va
;

1129 
	`__DMB
();

1130 
	}
}

1136 
__v7_Æl_ˇche
(
uöt32_t
 
›
);

1144 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__v7_öv_dˇche_Æl
() {

1145 
	`__v7_Æl_ˇche
(0);

1146 
	}
}

1153 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__v7_˛ón_dˇche_Æl
() {

1154 
	`__v7_Æl_ˇche
(1);

1155 
	}
}

1162 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__v7_˛ón_öv_dˇche_Æl
() {

1163 
	`__v7_Æl_ˇche
(2);

1164 
	}
}

1166 
	~"c‹e_ˇ_mmu.h
"

1168 #ñi‡(
deföed
 (
__TASKING__
))

1170 #îr‹ 
TASKING
 
Compûî
 
suµ‹t
 
nŸ
 
im∂emíãd
 
C‹ãx
-
A


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\core_caInstr.h

37 #i‚de‡
__CORE_CAINSTR_H__


38 
	#__CORE_CAINSTR_H__


	)

40 
	#__CORTEX_M
 0x3

	)

41 
	~"c‹e_cmIn°r.h
"

42 #unde‡
__CORTEX_M


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\core_ca_mmu.h

37 #ifde‡
__˝lu•lus


41 #i‚de‡
_MMU_FUNC_H


42 
	#_MMU_FUNC_H


	)

44 
	#SECTION_DESCRIPTOR
 (0x2)

	)

45 
	#SECTION_MASK
 (0xFFFFFFFC)

	)

47 
	#SECTION_TEXCB_MASK
 (0xFFFF8FF3)

	)

48 
	#SECTION_B_SHIFT
 (2)

	)

49 
	#SECTION_C_SHIFT
 (3)

	)

50 
	#SECTION_TEX0_SHIFT
 (12)

	)

51 
	#SECTION_TEX1_SHIFT
 (13)

	)

52 
	#SECTION_TEX2_SHIFT
 (14)

	)

54 
	#SECTION_XN_MASK
 (0xFFFFFFEF)

	)

55 
	#SECTION_XN_SHIFT
 (4)

	)

57 
	#SECTION_DOMAIN_MASK
 (0xFFFFFE1F)

	)

58 
	#SECTION_DOMAIN_SHIFT
 (5)

	)

60 
	#SECTION_P_MASK
 (0xFFFFFDFF)

	)

61 
	#SECTION_P_SHIFT
 (9)

	)

63 
	#SECTION_AP_MASK
 (0xFFFF73FF)

	)

64 
	#SECTION_AP_SHIFT
 (10)

	)

65 
	#SECTION_AP2_SHIFT
 (15)

	)

67 
	#SECTION_S_MASK
 (0xFFFEFFFF)

	)

68 
	#SECTION_S_SHIFT
 (16)

	)

70 
	#SECTION_NG_MASK
 (0xFFFDFFFF)

	)

71 
	#SECTION_NG_SHIFT
 (17)

	)

73 
	#SECTION_NS_MASK
 (0xFFF7FFFF)

	)

74 
	#SECTION_NS_SHIFT
 (19)

	)

77 
	#PAGE_L1_DESCRIPTOR
 (0x1)

	)

78 
	#PAGE_L1_MASK
 (0xFFFFFFFC)

	)

80 
	#PAGE_L2_4K_DESC
 (0x2)

	)

81 
	#PAGE_L2_4K_MASK
 (0xFFFFFFFD)

	)

83 
	#PAGE_L2_64K_DESC
 (0x1)

	)

84 
	#PAGE_L2_64K_MASK
 (0xFFFFFFFC)

	)

86 
	#PAGE_4K_TEXCB_MASK
 (0xFFFFFE33)

	)

87 
	#PAGE_4K_B_SHIFT
 (2)

	)

88 
	#PAGE_4K_C_SHIFT
 (3)

	)

89 
	#PAGE_4K_TEX0_SHIFT
 (6)

	)

90 
	#PAGE_4K_TEX1_SHIFT
 (7)

	)

91 
	#PAGE_4K_TEX2_SHIFT
 (8)

	)

93 
	#PAGE_64K_TEXCB_MASK
 (0xFFFF8FF3)

	)

94 
	#PAGE_64K_B_SHIFT
 (2)

	)

95 
	#PAGE_64K_C_SHIFT
 (3)

	)

96 
	#PAGE_64K_TEX0_SHIFT
 (12)

	)

97 
	#PAGE_64K_TEX1_SHIFT
 (13)

	)

98 
	#PAGE_64K_TEX2_SHIFT
 (14)

	)

100 
	#PAGE_TEXCB_MASK
 (0xFFFF8FF3)

	)

101 
	#PAGE_B_SHIFT
 (2)

	)

102 
	#PAGE_C_SHIFT
 (3)

	)

103 
	#PAGE_TEX_SHIFT
 (12)

	)

105 
	#PAGE_XN_4K_MASK
 (0xFFFFFFFE)

	)

106 
	#PAGE_XN_4K_SHIFT
 (0)

	)

107 
	#PAGE_XN_64K_MASK
 (0xFFFF7FFF)

	)

108 
	#PAGE_XN_64K_SHIFT
 (15)

	)

111 
	#PAGE_DOMAIN_MASK
 (0xFFFFFE1F)

	)

112 
	#PAGE_DOMAIN_SHIFT
 (5)

	)

114 
	#PAGE_P_MASK
 (0xFFFFFDFF)

	)

115 
	#PAGE_P_SHIFT
 (9)

	)

117 
	#PAGE_AP_MASK
 (0xFFFFFDCF)

	)

118 
	#PAGE_AP_SHIFT
 (4)

	)

119 
	#PAGE_AP2_SHIFT
 (9)

	)

121 
	#PAGE_S_MASK
 (0xFFFFFBFF)

	)

122 
	#PAGE_S_SHIFT
 (10)

	)

124 
	#PAGE_NG_MASK
 (0xFFFFF7FF)

	)

125 
	#PAGE_NG_SHIFT
 (11)

	)

127 
	#PAGE_NS_MASK
 (0xFFFFFFF7)

	)

128 
	#PAGE_NS_SHIFT
 (3)

	)

130 
	#OFFSET_1M
 (0x00100000)

	)

131 
	#OFFSET_64K
 (0x00010000)

	)

132 
	#OFFSET_4K
 (0x00001000)

	)

134 
	#DESCRIPTOR_FAULT
 (0x00000000)

	)

147 
SECTION
,

148 
PAGE_4k
,

149 
PAGE_64k
,

150 } 
	tmmu_ªgi⁄_size_Ty≥
;

155 
	mNORMAL
,

156 
	mDEVICE
,

157 
	mSHARED_DEVICE
,

158 
	mNON_SHARED_DEVICE
,

159 
	mSTRONGLY_ORDERED


160 } 
	tmmu_mem‹y_Ty≥
;

165 
	mNON_CACHEABLE
,

166 
	mWB_WA
,

167 
	mWT
,

168 
	mWB_NO_WA
,

169 } 
	tmmu_ˇchóbûôy_Ty≥
;

174 
	mECC_DISABLED
,

175 
	mECC_ENABLED
,

176 } 
	tmmu_ecc_check_Ty≥
;

181 
	mEXECUTE
,

182 
	mNON_EXECUTE
,

183 } 
	tmmu_execuã_Ty≥
;

188 
	mGLOBAL
,

189 
	mNON_GLOBAL
,

190 } 
	tmmu_globÆ_Ty≥
;

195 
	mNON_SHARED
,

196 
	mSHARED
,

197 } 
	tmmu_sh¨ed_Ty≥
;

202 
	mSECURE
,

203 
	mNON_SECURE
,

204 } 
	tmmu_£cuª_Ty≥
;

209 
	mNO_ACCESS
,

210 
	mRW
,

211 
	mREAD
,

212 } 
	tmmu_ac˚ss_Ty≥
;

215 
	sRegi⁄Såu˘
 {

216 
mmu_ªgi⁄_size_Ty≥
 
	mrg_t
;

217 
mmu_mem‹y_Ty≥
 
	mmem_t
;

218 
uöt8_t
 
	mdomaö
;

219 
mmu_ˇchóbûôy_Ty≥
 
	mö√r_n‹m_t
;

220 
mmu_ˇchóbûôy_Ty≥
 
	mouãr_n‹m_t
;

221 
mmu_ecc_check_Ty≥
 
	me_t
;

222 
mmu_execuã_Ty≥
 
	mxn_t
;

223 
mmu_globÆ_Ty≥
 
	mg_t
;

224 
mmu_£cuª_Ty≥
 
	m£c_t
;

225 
mmu_ac˚ss_Ty≥
 
	m¥iv_t
;

226 
mmu_ac˚ss_Ty≥
 
	mu£r_t
;

227 
mmu_sh¨ed_Ty≥
 
	msh_t
;

229 } 
	tmmu_ªgi⁄_©åibuãs_Ty≥
;

240 
__STATIC_INLINE
 
	$__xn_£˘i⁄
(
uöt32_t
 *
des¸ùt‹_l1
, 
mmu_execuã_Ty≥
 
xn
)

242 *
des¸ùt‹_l1
 &
SECTION_XN_MASK
;

243 *
des¸ùt‹_l1
 |((
xn
 & 0x1Ë<< 
SECTION_XN_SHIFT
);

245 
	}
}

256 
__STATIC_INLINE
 
	$__domaö_£˘i⁄
(
uöt32_t
 *
des¸ùt‹_l1
, 
uöt8_t
 
domaö
)

258 *
des¸ùt‹_l1
 &
SECTION_DOMAIN_MASK
;

259 *
des¸ùt‹_l1
 |((
domaö
 & 0xFË<< 
SECTION_DOMAIN_SHIFT
);

261 
	}
}

272 
__STATIC_INLINE
 
	$__p_£˘i⁄
(
uöt32_t
 *
des¸ùt‹_l1
, 
mmu_ecc_check_Ty≥
 
p_bô
)

274 *
des¸ùt‹_l1
 &
SECTION_P_MASK
;

275 *
des¸ùt‹_l1
 |((
p_bô
 & 0x1Ë<< 
SECTION_P_SHIFT
);

277 
	}
}

290 
__STATIC_INLINE
 
	$__≠_£˘i⁄
(
uöt32_t
 *
des¸ùt‹_l1
, 
mmu_ac˚ss_Ty≥
 
u£r
, mmu_ac˚ss_Ty≥ 
¥iv
, uöt32_à
a„
)

292 
uöt32_t
 
≠
 = 0;

294 i‡(
a„
 == 0) {

295 i‡((
¥iv
 =
NO_ACCESS
Ë&& (
u£r
 =NO_ACCESS)Ë{ 
≠
 = 0x0; }

296 i‡((
¥iv
 =
RW
Ë&& (
u£r
 =
NO_ACCESS
)Ë{ 
≠
 = 0x1; }

297 i‡((
¥iv
 =
RW
Ë&& (
u£r
 =
READ
)Ë{ 
≠
 = 0x2; }

298 i‡((
¥iv
 =
RW
Ë&& (
u£r
 =RW)Ë{ 
≠
 = 0x3; }

299 i‡((
¥iv
 =
READ
Ë&& (
u£r
 =
NO_ACCESS
)Ë{ 
≠
 = 0x5; }

300 i‡((
¥iv
 =
READ
Ë&& (
u£r
 =READ)Ë{ 
≠
 = 0x7; }

304 i‡((
¥iv
 =
RW
Ë&& (
u£r
 =
NO_ACCESS
)Ë{ 
≠
 = 0x1; }

305 i‡((
¥iv
 =
RW
Ë&& (
u£r
 =RW)Ë{ 
≠
 = 0x3; }

306 i‡((
¥iv
 =
READ
Ë&& (
u£r
 =
NO_ACCESS
)Ë{ 
≠
 = 0x5; }

307 i‡((
¥iv
 =
READ
Ë&& (
u£r
 =READ)Ë{ 
≠
 = 0x7; }

310 *
des¸ùt‹_l1
 &
SECTION_AP_MASK
;

311 *
des¸ùt‹_l1
 |(
≠
 & 0x3Ë<< 
SECTION_AP_SHIFT
;

312 *
des¸ùt‹_l1
 |((
≠
 & 0x4)>>2Ë<< 
SECTION_AP2_SHIFT
;

315 
	}
}

326 
__STATIC_INLINE
 
	$__sh¨ed_£˘i⁄
(
uöt32_t
 *
des¸ùt‹_l1
, 
mmu_sh¨ed_Ty≥
 
s_bô
)

328 *
des¸ùt‹_l1
 &
SECTION_S_MASK
;

329 *
des¸ùt‹_l1
 |((
s_bô
 & 0x1Ë<< 
SECTION_S_SHIFT
);

331 
	}
}

342 
__STATIC_INLINE
 
	$__globÆ_£˘i⁄
(
uöt32_t
 *
des¸ùt‹_l1
, 
mmu_globÆ_Ty≥
 
g_bô
)

344 *
des¸ùt‹_l1
 &
SECTION_NG_MASK
;

345 *
des¸ùt‹_l1
 |((
g_bô
 & 0x1Ë<< 
SECTION_NG_SHIFT
);

347 
	}
}

358 
__STATIC_INLINE
 
	$__£cuª_£˘i⁄
(
uöt32_t
 *
des¸ùt‹_l1
, 
mmu_£cuª_Ty≥
 
s_bô
)

360 *
des¸ùt‹_l1
 &
SECTION_NS_MASK
;

361 *
des¸ùt‹_l1
 |((
s_bô
 & 0x1Ë<< 
SECTION_NS_SHIFT
);

363 
	}
}

376 
__STATIC_INLINE
 
	$__xn_∑ge
(
uöt32_t
 *
des¸ùt‹_l2
, 
mmu_execuã_Ty≥
 
xn
, 
mmu_ªgi⁄_size_Ty≥
 
∑ge
)

378 i‡(
∑ge
 =
PAGE_4k
)

380 *
des¸ùt‹_l2
 &
PAGE_XN_4K_MASK
;

381 *
des¸ùt‹_l2
 |((
xn
 & 0x1Ë<< 
PAGE_XN_4K_SHIFT
);

385 *
des¸ùt‹_l2
 &
PAGE_XN_64K_MASK
;

386 *
des¸ùt‹_l2
 |((
xn
 & 0x1Ë<< 
PAGE_XN_64K_SHIFT
);

389 
	}
}

400 
__STATIC_INLINE
 
	$__domaö_∑ge
(
uöt32_t
 *
des¸ùt‹_l1
, 
uöt8_t
 
domaö
)

402 *
des¸ùt‹_l1
 &
PAGE_DOMAIN_MASK
;

403 *
des¸ùt‹_l1
 |((
domaö
 & 0xfË<< 
PAGE_DOMAIN_SHIFT
);

405 
	}
}

416 
__STATIC_INLINE
 
	$__p_∑ge
(
uöt32_t
 *
des¸ùt‹_l1
, 
mmu_ecc_check_Ty≥
 
p_bô
)

418 *
des¸ùt‹_l1
 &
SECTION_P_MASK
;

419 *
des¸ùt‹_l1
 |((
p_bô
 & 0x1Ë<< 
SECTION_P_SHIFT
);

421 
	}
}

434 
__STATIC_INLINE
 
	$__≠_∑ge
(
uöt32_t
 *
des¸ùt‹_l2
, 
mmu_ac˚ss_Ty≥
 
u£r
, mmu_ac˚ss_Ty≥ 
¥iv
, uöt32_à
a„
)

436 
uöt32_t
 
≠
 = 0;

438 i‡(
a„
 == 0) {

439 i‡((
¥iv
 =
NO_ACCESS
Ë&& (
u£r
 =NO_ACCESS)Ë{ 
≠
 = 0x0; }

440 i‡((
¥iv
 =
RW
Ë&& (
u£r
 =
NO_ACCESS
)Ë{ 
≠
 = 0x1; }

441 i‡((
¥iv
 =
RW
Ë&& (
u£r
 =
READ
)Ë{ 
≠
 = 0x2; }

442 i‡((
¥iv
 =
RW
Ë&& (
u£r
 =RW)Ë{ 
≠
 = 0x3; }

443 i‡((
¥iv
 =
READ
Ë&& (
u£r
 =
NO_ACCESS
)Ë{ 
≠
 = 0x5; }

444 i‡((
¥iv
 =
READ
Ë&& (
u£r
 =READ)Ë{ 
≠
 = 0x6; }

448 i‡((
¥iv
 =
RW
Ë&& (
u£r
 =
NO_ACCESS
)Ë{ 
≠
 = 0x1; }

449 i‡((
¥iv
 =
RW
Ë&& (
u£r
 =RW)Ë{ 
≠
 = 0x3; }

450 i‡((
¥iv
 =
READ
Ë&& (
u£r
 =
NO_ACCESS
)Ë{ 
≠
 = 0x5; }

451 i‡((
¥iv
 =
READ
Ë&& (
u£r
 =READ)Ë{ 
≠
 = 0x7; }

454 *
des¸ùt‹_l2
 &
PAGE_AP_MASK
;

455 *
des¸ùt‹_l2
 |(
≠
 & 0x3Ë<< 
PAGE_AP_SHIFT
;

456 *
des¸ùt‹_l2
 |((
≠
 & 0x4)>>2Ë<< 
PAGE_AP2_SHIFT
;

459 
	}
}

470 
__STATIC_INLINE
 
	$__sh¨ed_∑ge
(
uöt32_t
 *
des¸ùt‹_l2
, 
mmu_sh¨ed_Ty≥
 
s_bô
)

472 *
des¸ùt‹_l2
 &
PAGE_S_MASK
;

473 *
des¸ùt‹_l2
 |((
s_bô
 & 0x1Ë<< 
PAGE_S_SHIFT
);

475 
	}
}

486 
__STATIC_INLINE
 
	$__globÆ_∑ge
(
uöt32_t
 *
des¸ùt‹_l2
, 
mmu_globÆ_Ty≥
 
g_bô
)

488 *
des¸ùt‹_l2
 &
PAGE_NG_MASK
;

489 *
des¸ùt‹_l2
 |((
g_bô
 & 0x1Ë<< 
PAGE_NG_SHIFT
);

491 
	}
}

502 
__STATIC_INLINE
 
	$__£cuª_∑ge
(
uöt32_t
 *
des¸ùt‹_l1
, 
mmu_£cuª_Ty≥
 
s_bô
)

504 *
des¸ùt‹_l1
 &
PAGE_NS_MASK
;

505 *
des¸ùt‹_l1
 |((
s_bô
 & 0x1Ë<< 
PAGE_NS_SHIFT
);

507 
	}
}

521 
__STATIC_INLINE
 
	$__mem‹y_£˘i⁄
(
uöt32_t
 *
des¸ùt‹_l1
, 
mmu_mem‹y_Ty≥
 
mem
, 
mmu_ˇchóbûôy_Ty≥
 
ouãr
, mmu_ˇchóbûôy_Ty≥ 
ö√r
)

523 *
des¸ùt‹_l1
 &
SECTION_TEXCB_MASK
;

525 i‡(
STRONGLY_ORDERED
 =
mem
)

529 i‡(
SHARED_DEVICE
 =
mem
)

531 *
des¸ùt‹_l1
 |(1 << 
SECTION_B_SHIFT
);

533 i‡(
NON_SHARED_DEVICE
 =
mem
)

535 *
des¸ùt‹_l1
 |(1 << 
SECTION_TEX1_SHIFT
);

537 i‡(
NORMAL
 =
mem
)

539 *
des¸ùt‹_l1
 |1 << 
SECTION_TEX2_SHIFT
;

540 
ö√r
)

542 
NON_CACHEABLE
:

544 
WB_WA
:

545 *
des¸ùt‹_l1
 |(1 << 
SECTION_B_SHIFT
);

547 
WT
:

548 *
des¸ùt‹_l1
 |1 << 
SECTION_C_SHIFT
;

550 
WB_NO_WA
:

551 *
des¸ùt‹_l1
 |(1 << 
SECTION_B_SHIFT
Ë| (1 << 
SECTION_C_SHIFT
);

554 
ouãr
)

556 
NON_CACHEABLE
:

558 
WB_WA
:

559 *
des¸ùt‹_l1
 |(1 << 
SECTION_TEX0_SHIFT
);

561 
WT
:

562 *
des¸ùt‹_l1
 |1 << 
SECTION_TEX1_SHIFT
;

564 
WB_NO_WA
:

565 *
des¸ùt‹_l1
 |(1 << 
SECTION_TEX0_SHIFT
) | (1 << SECTION_TEX0_SHIFT);

571 
	}
}

584 
__STATIC_INLINE
 
	$__mem‹y_∑ge
(
uöt32_t
 *
des¸ùt‹_l2
, 
mmu_mem‹y_Ty≥
 
mem
, 
mmu_ˇchóbûôy_Ty≥
 
ouãr
, mmu_ˇchóbûôy_Ty≥ 
ö√r
, 
mmu_ªgi⁄_size_Ty≥
 
∑ge
)

586 *
des¸ùt‹_l2
 &
PAGE_4K_TEXCB_MASK
;

588 i‡(
∑ge
 =
PAGE_64k
)

591 
	`__mem‹y_£˘i⁄
(
des¸ùt‹_l2
, 
mem
, 
ouãr
, 
ö√r
);

595 i‡(
STRONGLY_ORDERED
 =
mem
)

599 i‡(
SHARED_DEVICE
 =
mem
)

601 *
des¸ùt‹_l2
 |(1 << 
PAGE_4K_B_SHIFT
);

603 i‡(
NON_SHARED_DEVICE
 =
mem
)

605 *
des¸ùt‹_l2
 |(1 << 
PAGE_4K_TEX1_SHIFT
);

607 i‡(
NORMAL
 =
mem
)

609 *
des¸ùt‹_l2
 |1 << 
PAGE_4K_TEX2_SHIFT
;

610 
ö√r
)

612 
NON_CACHEABLE
:

614 
WB_WA
:

615 *
des¸ùt‹_l2
 |(1 << 
PAGE_4K_B_SHIFT
);

617 
WT
:

618 *
des¸ùt‹_l2
 |1 << 
PAGE_4K_C_SHIFT
;

620 
WB_NO_WA
:

621 *
des¸ùt‹_l2
 |(1 << 
PAGE_4K_B_SHIFT
Ë| (1 << 
PAGE_4K_C_SHIFT
);

624 
ouãr
)

626 
NON_CACHEABLE
:

628 
WB_WA
:

629 *
des¸ùt‹_l2
 |(1 << 
PAGE_4K_TEX0_SHIFT
);

631 
WT
:

632 *
des¸ùt‹_l2
 |1 << 
PAGE_4K_TEX1_SHIFT
;

634 
WB_NO_WA
:

635 *
des¸ùt‹_l2
 |(1 << 
PAGE_4K_TEX0_SHIFT
) | (1 << PAGE_4K_TEX0_SHIFT);

642 
	}
}

659 
__STATIC_INLINE
 
	$__gë_£˘i⁄_des¸ùt‹
(
uöt32_t
 *
des¸ùt‹
, 
mmu_ªgi⁄_©åibuãs_Ty≥
 
ªg
)

661 *
des¸ùt‹
 = 0;

663 
	`__mem‹y_£˘i⁄
(
des¸ùt‹
, 
ªg
.
mem_t
,Ñeg.
ouãr_n‹m_t
,Ñeg.
ö√r_n‹m_t
);

664 
	`__xn_£˘i⁄
(
des¸ùt‹
,
ªg
.
xn_t
);

665 
	`__domaö_£˘i⁄
(
des¸ùt‹
, 
ªg
.
domaö
);

666 
	`__p_£˘i⁄
(
des¸ùt‹
, 
ªg
.
e_t
);

667 
	`__≠_£˘i⁄
(
des¸ùt‹
, 
ªg
.
¥iv_t
,Ñeg.
u£r_t
, 1);

668 
	`__sh¨ed_£˘i⁄
(
des¸ùt‹
,
ªg
.
sh_t
);

669 
	`__globÆ_£˘i⁄
(
des¸ùt‹
,
ªg
.
g_t
);

670 
	`__£cuª_£˘i⁄
(
des¸ùt‹
,
ªg
.
£c_t
);

671 *
des¸ùt‹
 &
SECTION_MASK
;

672 *
des¸ùt‹
 |
SECTION_DESCRIPTOR
;

676 
	}
}

692 
__STATIC_INLINE
 
	$__gë_∑ge_des¸ùt‹
(
uöt32_t
 *
des¸ùt‹
, uöt32_à*
des¸ùt‹2
, 
mmu_ªgi⁄_©åibuãs_Ty≥
 
ªg
)

694 *
des¸ùt‹
 = 0;

695 *
des¸ùt‹2
 = 0;

697 
ªg
.
rg_t
)

699 
PAGE_4k
:

700 
	`__mem‹y_∑ge
(
des¸ùt‹2
, 
ªg
.
mem_t
,Ñeg.
ouãr_n‹m_t
,Ñeg.
ö√r_n‹m_t
, 
PAGE_4k
);

701 
	`__xn_∑ge
(
des¸ùt‹2
, 
ªg
.
xn_t
, 
PAGE_4k
);

702 
	`__domaö_∑ge
(
des¸ùt‹
, 
ªg
.
domaö
);

703 
	`__p_∑ge
(
des¸ùt‹
, 
ªg
.
e_t
);

704 
	`__≠_∑ge
(
des¸ùt‹2
, 
ªg
.
¥iv_t
,Ñeg.
u£r_t
, 1);

705 
	`__sh¨ed_∑ge
(
des¸ùt‹2
,
ªg
.
sh_t
);

706 
	`__globÆ_∑ge
(
des¸ùt‹2
,
ªg
.
g_t
);

707 
	`__£cuª_∑ge
(
des¸ùt‹
,
ªg
.
£c_t
);

708 *
des¸ùt‹
 &
PAGE_L1_MASK
;

709 *
des¸ùt‹
 |
PAGE_L1_DESCRIPTOR
;

710 *
des¸ùt‹2
 &
PAGE_L2_4K_MASK
;

711 *
des¸ùt‹2
 |
PAGE_L2_4K_DESC
;

714 
PAGE_64k
:

715 
	`__mem‹y_∑ge
(
des¸ùt‹2
, 
ªg
.
mem_t
,Ñeg.
ouãr_n‹m_t
,Ñeg.
ö√r_n‹m_t
, 
PAGE_64k
);

716 
	`__xn_∑ge
(
des¸ùt‹2
, 
ªg
.
xn_t
, 
PAGE_64k
);

717 
	`__domaö_∑ge
(
des¸ùt‹
, 
ªg
.
domaö
);

718 
	`__p_∑ge
(
des¸ùt‹
, 
ªg
.
e_t
);

719 
	`__≠_∑ge
(
des¸ùt‹2
, 
ªg
.
¥iv_t
,Ñeg.
u£r_t
, 1);

720 
	`__sh¨ed_∑ge
(
des¸ùt‹2
,
ªg
.
sh_t
);

721 
	`__globÆ_∑ge
(
des¸ùt‹2
,
ªg
.
g_t
);

722 
	`__£cuª_∑ge
(
des¸ùt‹
,
ªg
.
£c_t
);

723 *
des¸ùt‹
 &
PAGE_L1_MASK
;

724 *
des¸ùt‹
 |
PAGE_L1_DESCRIPTOR
;

725 *
des¸ùt‹2
 &
PAGE_L2_64K_MASK
;

726 *
des¸ùt‹2
 |
PAGE_L2_64K_DESC
;

729 
SECTION
:

737 
	}
}

747 
__STATIC_INLINE
 
	$__TTSe˘i⁄
(
uöt32_t
 *
âb
, uöt32_à
ba£_addªss
, uöt32_à
cou¡
, uöt32_à
des¸ùt‹_l1
)

749 
uöt32_t
 
off£t
;

750 
uöt32_t
 
íåy
;

751 
uöt32_t
 
i
;

753 
off£t
 = 
ba£_addªss
 >> 20;

754 
íåy
 = (
ba£_addªss
 & 0xFFF00000Ë| 
des¸ùt‹_l1
;

757 
âb
 =Åtb + 
off£t
;

759 
i
 = 0; i < 
cou¡
; i++ )

762 *
âb
++ = 
íåy
;

763 
íåy
 +
OFFSET_1M
;

765 
	}
}

777 
__STATIC_INLINE
 
	$__TTPage_4k
(
uöt32_t
 *
âb
, uöt32_à
ba£_addªss
, uöt32_à
cou¡
, uöt32_à
des¸ùt‹_l1
, uöt32_à*
âb_l2
, uöt32_à
des¸ùt‹_l2
 )

780 
uöt32_t
 
off£t
, 
off£t2
;

781 
uöt32_t
 
íåy
, 
íåy2
;

782 
uöt32_t
 
i
;

785 
off£t
 = 
ba£_addªss
 >> 20;

786 
íåy
 = (()
âb_l2
 & 0xFFFFFC00Ë| 
des¸ùt‹_l1
;

789 
âb
 +
off£t
;

791 *
âb
 = 
íåy
;

793 
off£t2
 = (
ba£_addªss
 & 0xff000) >> 12;

794 
âb_l2
 +
off£t2
;

795 
íåy2
 = (
ba£_addªss
 & 0xFFFFF000Ë| 
des¸ùt‹_l2
;

796 
i
 = 0; i < 
cou¡
; i++ )

799 *
âb_l2
++ = 
íåy2
;

800 
íåy2
 +
OFFSET_4K
;

802 
	}
}

814 
__STATIC_INLINE
 
	$__TTPage_64k
(
uöt32_t
 *
âb
, uöt32_à
ba£_addªss
, uöt32_à
cou¡
, uöt32_à
des¸ùt‹_l1
, uöt32_à*
âb_l2
, uöt32_à
des¸ùt‹_l2
 )

816 
uöt32_t
 
off£t
, 
off£t2
;

817 
uöt32_t
 
íåy
, 
íåy2
;

818 
uöt32_t
 
i
,
j
;

821 
off£t
 = 
ba£_addªss
 >> 20;

822 
íåy
 = (()
âb_l2
 & 0xFFFFFC00Ë| 
des¸ùt‹_l1
;

825 
âb
 +
off£t
;

827 *
âb
 = 
íåy
;

829 
off£t2
 = (
ba£_addªss
 & 0xff000) >> 12;

830 
âb_l2
 +
off£t2
;

831 
íåy2
 = (
ba£_addªss
 & 0xFFFF0000Ë| 
des¸ùt‹_l2
;

832 
i
 = 0; i < 
cou¡
; i++ )

835 
j
 = 0; j < 16; j++)

837 *
âb_l2
++ = 
íåy2
;

838 
íåy2
 +
OFFSET_64K
;

840 
	}
}

845 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\core_cm0.h

38 #i‡
deföed
 ( 
__ICCARM__
 )

39 #¥agm®
sy°em_ö˛ude


42 #ifde‡
__˝lu•lus


46 #i‚de‡
__CORE_CM0_H_GENERIC


47 
	#__CORE_CM0_H_GENERIC


	)

71 
	#__CM0_CMSIS_VERSION_MAIN
 (0x03Ë

	)

72 
	#__CM0_CMSIS_VERSION_SUB
 (0x20Ë

	)

73 
	#__CM0_CMSIS_VERSION
 ((
__CM0_CMSIS_VERSION_MAIN
 << 16) | \

74 
__CM0_CMSIS_VERSION_SUB
 )

	)

76 
	#__CORTEX_M
 (0x00Ë

	)

79 #i‡ 
deföed
 ( 
__CC_ARM
 )

80 
	#__ASM
 
__asm


	)

81 
	#__INLINE
 
__ölöe


	)

82 
	#__STATIC_INLINE
 
__ölöe


	)

84 #ñi‡
deföed
 ( 
__ICCARM__
 )

85 
	#__ASM
 
__asm


	)

86 
	#__INLINE
 
ölöe


	)

87 
	#__STATIC_INLINE
 
ölöe


	)

89 #ñi‡
deföed
 ( 
__GNUC__
 )

90 
	#__ASM
 
__asm


	)

91 
	#__INLINE
 
ölöe


	)

92 
	#__STATIC_INLINE
 
ölöe


	)

94 #ñi‡
deföed
 ( 
__TASKING__
 )

95 
	#__ASM
 
__asm


	)

96 
	#__INLINE
 
ölöe


	)

97 
	#__STATIC_INLINE
 
ölöe


	)

103 
	#__FPU_USED
 0

	)

105 #i‡
deföed
 ( 
__CC_ARM
 )

106 #i‡
deföed
 
__TARGET_FPU_VFP


110 #ñi‡
deföed
 ( 
__ICCARM__
 )

111 #i‡
deföed
 
__ARMVFP__


115 #ñi‡
deföed
 ( 
__GNUC__
 )

116 #i‡
deföed
 (
__VFP_FP__
Ë&& !deföed(
__SOFTFP__
)

120 #ñi‡
deföed
 ( 
__TASKING__
 )

121 #i‡
deföed
 
__FPU_VFP__


126 
	~<°döt.h
>

127 
	~<c‹e_cmIn°r.h
>

128 
	~<c‹e_cmFunc.h
>

132 #i‚de‡
__CMSIS_GENERIC


134 #i‚de‡
__CORE_CM0_H_DEPENDANT


135 
	#__CORE_CM0_H_DEPENDANT


	)

138 #i‡
deföed
 
__CHECK_DEVICE_DEFINES


139 #i‚de‡
__CM0_REV


140 
	#__CM0_REV
 0x0000

	)

144 #i‚de‡
__NVIC_PRIO_BITS


145 
	#__NVIC_PRIO_BITS
 2

	)

149 #i‚de‡
__Víd‹_SysTickC⁄fig


150 
	#__Víd‹_SysTickC⁄fig
 0

	)

163 #ifde‡
__˝lu•lus


164 
	#__I
 vﬁ©ûê

	)

166 
	#__I
 vﬁ©ûêc⁄°

	)

168 
	#__O
 vﬁ©ûê

	)

169 
	#__IO
 vﬁ©ûê

	)

199 #i‡(
__CORTEX_M
 != 0x04)

200 
uöt32_t
 
_ª£rved0
:27;

202 
uöt32_t
 
_ª£rved0
:16;

203 
uöt32_t
 
GE
:4;

204 
uöt32_t
 
_ª£rved1
:7;

206 
uöt32_t
 
Q
:1;

207 
uöt32_t
 
V
:1;

208 
uöt32_t
 
C
:1;

209 
uöt32_t
 
Z
:1;

210 
uöt32_t
 
N
:1;

211 } 
b
;

212 
uöt32_t
 
w
;

213 } 
	tAPSR_Ty≥
;

222 
uöt32_t
 
	mISR
:9;

223 
uöt32_t
 
	m_ª£rved0
:23;

224 } 
	mb
;

225 
uöt32_t
 
	mw
;

226 } 
	tIPSR_Ty≥
;

235 
uöt32_t
 
	mISR
:9;

236 #i‡(
__CORTEX_M
 != 0x04)

237 
uöt32_t
 
	m_ª£rved0
:15;

239 
uöt32_t
 
	m_ª£rved0
:7;

240 
uöt32_t
 
	mGE
:4;

241 
uöt32_t
 
	m_ª£rved1
:4;

243 
uöt32_t
 
	mT
:1;

244 
uöt32_t
 
	mIT
:2;

245 
uöt32_t
 
	mQ
:1;

246 
uöt32_t
 
	mV
:1;

247 
uöt32_t
 
	mC
:1;

248 
uöt32_t
 
	mZ
:1;

249 
uöt32_t
 
	mN
:1;

250 } 
	mb
;

251 
uöt32_t
 
	mw
;

252 } 
	txPSR_Ty≥
;

261 
uöt32_t
 
	mnPRIV
:1;

262 
uöt32_t
 
	mSPSEL
:1;

263 
uöt32_t
 
	mFPCA
:1;

264 
uöt32_t
 
	m_ª£rved0
:29;

265 } 
	mb
;

266 
uöt32_t
 
	mw
;

267 } 
	tCONTROL_Ty≥
;

282 
__IO
 
uöt32_t
 
	mISER
[1];

283 
uöt32_t
 
	mRESERVED0
[31];

284 
__IO
 
uöt32_t
 
	mICER
[1];

285 
uöt32_t
 
	mRSERVED1
[31];

286 
__IO
 
uöt32_t
 
	mISPR
[1];

287 
uöt32_t
 
	mRESERVED2
[31];

288 
__IO
 
uöt32_t
 
	mICPR
[1];

289 
uöt32_t
 
	mRESERVED3
[31];

290 
uöt32_t
 
	mRESERVED4
[64];

291 
__IO
 
uöt32_t
 
	mIP
[8];

292 } 
	tNVIC_Ty≥
;

307 
__I
 
uöt32_t
 
	mCPUID
;

308 
__IO
 
uöt32_t
 
	mICSR
;

309 
uöt32_t
 
	mRESERVED0
;

310 
__IO
 
uöt32_t
 
	mAIRCR
;

311 
__IO
 
uöt32_t
 
	mSCR
;

312 
__IO
 
uöt32_t
 
	mCCR
;

313 
uöt32_t
 
	mRESERVED1
;

314 
__IO
 
uöt32_t
 
	mSHP
[2];

315 
__IO
 
uöt32_t
 
	mSHCSR
;

316 } 
	tSCB_Ty≥
;

319 
	#SCB_CPUID_IMPLEMENTER_Pos
 24

	)

320 
	#SCB_CPUID_IMPLEMENTER_Msk
 (0xFFUL << 
SCB_CPUID_IMPLEMENTER_Pos
Ë

	)

322 
	#SCB_CPUID_VARIANT_Pos
 20

	)

323 
	#SCB_CPUID_VARIANT_Msk
 (0xFUL << 
SCB_CPUID_VARIANT_Pos
Ë

	)

325 
	#SCB_CPUID_ARCHITECTURE_Pos
 16

	)

326 
	#SCB_CPUID_ARCHITECTURE_Msk
 (0xFUL << 
SCB_CPUID_ARCHITECTURE_Pos
Ë

	)

328 
	#SCB_CPUID_PARTNO_Pos
 4

	)

329 
	#SCB_CPUID_PARTNO_Msk
 (0xFFFUL << 
SCB_CPUID_PARTNO_Pos
Ë

	)

331 
	#SCB_CPUID_REVISION_Pos
 0

	)

332 
	#SCB_CPUID_REVISION_Msk
 (0xFUL << 
SCB_CPUID_REVISION_Pos
Ë

	)

335 
	#SCB_ICSR_NMIPENDSET_Pos
 31

	)

336 
	#SCB_ICSR_NMIPENDSET_Msk
 (1UL << 
SCB_ICSR_NMIPENDSET_Pos
Ë

	)

338 
	#SCB_ICSR_PENDSVSET_Pos
 28

	)

339 
	#SCB_ICSR_PENDSVSET_Msk
 (1UL << 
SCB_ICSR_PENDSVSET_Pos
Ë

	)

341 
	#SCB_ICSR_PENDSVCLR_Pos
 27

	)

342 
	#SCB_ICSR_PENDSVCLR_Msk
 (1UL << 
SCB_ICSR_PENDSVCLR_Pos
Ë

	)

344 
	#SCB_ICSR_PENDSTSET_Pos
 26

	)

345 
	#SCB_ICSR_PENDSTSET_Msk
 (1UL << 
SCB_ICSR_PENDSTSET_Pos
Ë

	)

347 
	#SCB_ICSR_PENDSTCLR_Pos
 25

	)

348 
	#SCB_ICSR_PENDSTCLR_Msk
 (1UL << 
SCB_ICSR_PENDSTCLR_Pos
Ë

	)

350 
	#SCB_ICSR_ISRPREEMPT_Pos
 23

	)

351 
	#SCB_ICSR_ISRPREEMPT_Msk
 (1UL << 
SCB_ICSR_ISRPREEMPT_Pos
Ë

	)

353 
	#SCB_ICSR_ISRPENDING_Pos
 22

	)

354 
	#SCB_ICSR_ISRPENDING_Msk
 (1UL << 
SCB_ICSR_ISRPENDING_Pos
Ë

	)

356 
	#SCB_ICSR_VECTPENDING_Pos
 12

	)

357 
	#SCB_ICSR_VECTPENDING_Msk
 (0x1FFUL << 
SCB_ICSR_VECTPENDING_Pos
Ë

	)

359 
	#SCB_ICSR_VECTACTIVE_Pos
 0

	)

360 
	#SCB_ICSR_VECTACTIVE_Msk
 (0x1FFUL << 
SCB_ICSR_VECTACTIVE_Pos
Ë

	)

363 
	#SCB_AIRCR_VECTKEY_Pos
 16

	)

364 
	#SCB_AIRCR_VECTKEY_Msk
 (0xFFFFUL << 
SCB_AIRCR_VECTKEY_Pos
Ë

	)

366 
	#SCB_AIRCR_VECTKEYSTAT_Pos
 16

	)

367 
	#SCB_AIRCR_VECTKEYSTAT_Msk
 (0xFFFFUL << 
SCB_AIRCR_VECTKEYSTAT_Pos
Ë

	)

369 
	#SCB_AIRCR_ENDIANESS_Pos
 15

	)

370 
	#SCB_AIRCR_ENDIANESS_Msk
 (1UL << 
SCB_AIRCR_ENDIANESS_Pos
Ë

	)

372 
	#SCB_AIRCR_SYSRESETREQ_Pos
 2

	)

373 
	#SCB_AIRCR_SYSRESETREQ_Msk
 (1UL << 
SCB_AIRCR_SYSRESETREQ_Pos
Ë

	)

375 
	#SCB_AIRCR_VECTCLRACTIVE_Pos
 1

	)

376 
	#SCB_AIRCR_VECTCLRACTIVE_Msk
 (1UL << 
SCB_AIRCR_VECTCLRACTIVE_Pos
Ë

	)

379 
	#SCB_SCR_SEVONPEND_Pos
 4

	)

380 
	#SCB_SCR_SEVONPEND_Msk
 (1UL << 
SCB_SCR_SEVONPEND_Pos
Ë

	)

382 
	#SCB_SCR_SLEEPDEEP_Pos
 2

	)

383 
	#SCB_SCR_SLEEPDEEP_Msk
 (1UL << 
SCB_SCR_SLEEPDEEP_Pos
Ë

	)

385 
	#SCB_SCR_SLEEPONEXIT_Pos
 1

	)

386 
	#SCB_SCR_SLEEPONEXIT_Msk
 (1UL << 
SCB_SCR_SLEEPONEXIT_Pos
Ë

	)

389 
	#SCB_CCR_STKALIGN_Pos
 9

	)

390 
	#SCB_CCR_STKALIGN_Msk
 (1UL << 
SCB_CCR_STKALIGN_Pos
Ë

	)

392 
	#SCB_CCR_UNALIGN_TRP_Pos
 3

	)

393 
	#SCB_CCR_UNALIGN_TRP_Msk
 (1UL << 
SCB_CCR_UNALIGN_TRP_Pos
Ë

	)

396 
	#SCB_SHCSR_SVCALLPENDED_Pos
 15

	)

397 
	#SCB_SHCSR_SVCALLPENDED_Msk
 (1UL << 
SCB_SHCSR_SVCALLPENDED_Pos
Ë

	)

412 
__IO
 
uöt32_t
 
	mCTRL
;

413 
__IO
 
uöt32_t
 
	mLOAD
;

414 
__IO
 
uöt32_t
 
	mVAL
;

415 
__I
 
uöt32_t
 
	mCALIB
;

416 } 
	tSysTick_Ty≥
;

419 
	#SysTick_CTRL_COUNTFLAG_Pos
 16

	)

420 
	#SysTick_CTRL_COUNTFLAG_Msk
 (1UL << 
SysTick_CTRL_COUNTFLAG_Pos
Ë

	)

422 
	#SysTick_CTRL_CLKSOURCE_Pos
 2

	)

423 
	#SysTick_CTRL_CLKSOURCE_Msk
 (1UL << 
SysTick_CTRL_CLKSOURCE_Pos
Ë

	)

425 
	#SysTick_CTRL_TICKINT_Pos
 1

	)

426 
	#SysTick_CTRL_TICKINT_Msk
 (1UL << 
SysTick_CTRL_TICKINT_Pos
Ë

	)

428 
	#SysTick_CTRL_ENABLE_Pos
 0

	)

429 
	#SysTick_CTRL_ENABLE_Msk
 (1UL << 
SysTick_CTRL_ENABLE_Pos
Ë

	)

432 
	#SysTick_LOAD_RELOAD_Pos
 0

	)

433 
	#SysTick_LOAD_RELOAD_Msk
 (0xFFFFFFUL << 
SysTick_LOAD_RELOAD_Pos
Ë

	)

436 
	#SysTick_VAL_CURRENT_Pos
 0

	)

437 
	#SysTick_VAL_CURRENT_Msk
 (0xFFFFFFUL << 
SysTick_VAL_CURRENT_Pos
Ë

	)

440 
	#SysTick_CALIB_NOREF_Pos
 31

	)

441 
	#SysTick_CALIB_NOREF_Msk
 (1UL << 
SysTick_CALIB_NOREF_Pos
Ë

	)

443 
	#SysTick_CALIB_SKEW_Pos
 30

	)

444 
	#SysTick_CALIB_SKEW_Msk
 (1UL << 
SysTick_CALIB_SKEW_Pos
Ë

	)

446 
	#SysTick_CALIB_TENMS_Pos
 0

	)

447 
	#SysTick_CALIB_TENMS_Msk
 (0xFFFFFFUL << 
SysTick_VAL_CURRENT_Pos
Ë

	)

469 
	#SCS_BASE
 (0xE000E000ULË

	)

470 
	#SysTick_BASE
 (
SCS_BASE
 + 0x0010ULË

	)

471 
	#NVIC_BASE
 (
SCS_BASE
 + 0x0100ULË

	)

472 
	#SCB_BASE
 (
SCS_BASE
 + 0x0D00ULË

	)

474 
	#SCB
 ((
SCB_Ty≥
 *Ë
SCB_BASE
 )

	)

475 
	#SysTick
 ((
SysTick_Ty≥
 *Ë
SysTick_BASE
 )

	)

476 
	#NVIC
 ((
NVIC_Ty≥
 *Ë
NVIC_BASE
 )

	)

504 
	#_BIT_SHIFT
(
IRQn
Ë–(((
uöt32_t
)(IRQnËË& 0x03Ë* 8 )

	)

505 
	#_SHP_IDX
(
IRQn
Ë–((((
uöt32_t
)(IRQnË& 0x0F)-8Ë>> 2Ë)

	)

506 
	#_IP_IDX
(
IRQn
Ë–((
uöt32_t
)(IRQnË>> 2Ë)

	)

515 
__STATIC_INLINE
 
	$NVIC_E«bÀIRQ
(
IRQn_Ty≥
 
IRQn
)

517 
NVIC
->
ISER
[0] = (1 << ((
uöt32_t
)(
IRQn
) & 0x1F));

518 
	}
}

527 
__STATIC_INLINE
 
	$NVIC_DißbÀIRQ
(
IRQn_Ty≥
 
IRQn
)

529 
NVIC
->
ICER
[0] = (1 << ((
uöt32_t
)(
IRQn
) & 0x1F));

530 
	}
}

543 
__STATIC_INLINE
 
uöt32_t
 
	$NVIC_GëPídögIRQ
(
IRQn_Ty≥
 
IRQn
)

545 ((
uöt32_t
Ë((
NVIC
->
ISPR
[0] & (1 << ((uöt32_t)(
IRQn
) & 0x1F)))?1:0));

546 
	}
}

555 
__STATIC_INLINE
 
	$NVIC_SëPídögIRQ
(
IRQn_Ty≥
 
IRQn
)

557 
NVIC
->
ISPR
[0] = (1 << ((
uöt32_t
)(
IRQn
) & 0x1F));

558 
	}
}

567 
__STATIC_INLINE
 
	$NVIC_CÀ¨PídögIRQ
(
IRQn_Ty≥
 
IRQn
)

569 
NVIC
->
ICPR
[0] = (1 << ((
uöt32_t
)(
IRQn
) & 0x1F));

570 
	}
}

582 
__STATIC_INLINE
 
	$NVIC_SëPri‹ôy
(
IRQn_Ty≥
 
IRQn
, 
uöt32_t
 
¥i‹ôy
)

584 if(
IRQn
 < 0) {

585 
SCB
->
SHP
[
	`_SHP_IDX
(
IRQn
)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << 
	`_BIT_SHIFT
(IRQn))) |

586 (((
¥i‹ôy
 << (8 - 
__NVIC_PRIO_BITS
)Ë& 0xFFË<< 
	`_BIT_SHIFT
(
IRQn
)); }

588 
NVIC
->
IP
[
	`_IP_IDX
(
IRQn
)] = (NVIC->IP[_IP_IDX(IRQn)] & ~(0xFF << 
	`_BIT_SHIFT
(IRQn))) |

589 (((
¥i‹ôy
 << (8 - 
__NVIC_PRIO_BITS
)Ë& 0xFFË<< 
	`_BIT_SHIFT
(
IRQn
)); }

590 
	}
}

604 
__STATIC_INLINE
 
uöt32_t
 
	$NVIC_GëPri‹ôy
(
IRQn_Ty≥
 
IRQn
)

607 if(
IRQn
 < 0) {

608 ((
uöt32_t
)(((
SCB
->
SHP
[
	`_SHP_IDX
(
IRQn
)] >> 
	`_BIT_SHIFT
(IRQnËË& 0xFFË>> (8 - 
__NVIC_PRIO_BITS
))); }

610 ((
uöt32_t
)(((
NVIC
->
IP
[ 
	`_IP_IDX
(
IRQn
)] >> 
	`_BIT_SHIFT
(IRQnËË& 0xFFË>> (8 - 
__NVIC_PRIO_BITS
))); }

611 
	}
}

618 
__STATIC_INLINE
 
	$NVIC_Sy°emRe£t
()

620 
	`__DSB
();

622 
SCB
->
AIRCR
 = ((0x5FA << 
SCB_AIRCR_VECTKEY_Pos
) |

623 
SCB_AIRCR_SYSRESETREQ_Msk
);

624 
	`__DSB
();

626 
	}
}

639 #i‡(
__Víd‹_SysTickC⁄fig
 == 0)

656 
__STATIC_INLINE
 
uöt32_t
 
	$SysTick_C⁄fig
(
uöt32_t
 
ticks
)

658 i‡((
ticks
 - 1Ë> 
SysTick_LOAD_RELOAD_Msk
)  (1);

660 
SysTick
->
LOAD
 = 
ticks
 - 1;

661 
	`NVIC_SëPri‹ôy
 (
SysTick_IRQn
, (1<<
__NVIC_PRIO_BITS
) - 1);

662 
SysTick
->
VAL
 = 0;

663 
SysTick
->
CTRL
 = 
SysTick_CTRL_CLKSOURCE_Msk
 |

664 
SysTick_CTRL_TICKINT_Msk
 |

665 
SysTick_CTRL_ENABLE_Msk
;

667 
	}
}

680 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\core_cm0plus.h

38 #i‡
deföed
 ( 
__ICCARM__
 )

39 #¥agm®
sy°em_ö˛ude


42 #ifde‡
__˝lu•lus


46 #i‚de‡
__CORE_CM0PLUS_H_GENERIC


47 
	#__CORE_CM0PLUS_H_GENERIC


	)

71 
	#__CM0PLUS_CMSIS_VERSION_MAIN
 (0x03Ë

	)

72 
	#__CM0PLUS_CMSIS_VERSION_SUB
 (0x20Ë

	)

73 
	#__CM0PLUS_CMSIS_VERSION
 ((
__CM0PLUS_CMSIS_VERSION_MAIN
 << 16) | \

74 
__CM0PLUS_CMSIS_VERSION_SUB
Ë

	)

76 
	#__CORTEX_M
 (0x00Ë

	)

79 #i‡ 
deföed
 ( 
__CC_ARM
 )

80 
	#__ASM
 
__asm


	)

81 
	#__INLINE
 
__ölöe


	)

82 
	#__STATIC_INLINE
 
__ölöe


	)

84 #ñi‡
deföed
 ( 
__ICCARM__
 )

85 
	#__ASM
 
__asm


	)

86 
	#__INLINE
 
ölöe


	)

87 
	#__STATIC_INLINE
 
ölöe


	)

89 #ñi‡
deföed
 ( 
__GNUC__
 )

90 
	#__ASM
 
__asm


	)

91 
	#__INLINE
 
ölöe


	)

92 
	#__STATIC_INLINE
 
ölöe


	)

94 #ñi‡
deföed
 ( 
__TASKING__
 )

95 
	#__ASM
 
__asm


	)

96 
	#__INLINE
 
ölöe


	)

97 
	#__STATIC_INLINE
 
ölöe


	)

103 
	#__FPU_USED
 0

	)

105 #i‡
deföed
 ( 
__CC_ARM
 )

106 #i‡
deföed
 
__TARGET_FPU_VFP


110 #ñi‡
deföed
 ( 
__ICCARM__
 )

111 #i‡
deföed
 
__ARMVFP__


115 #ñi‡
deföed
 ( 
__GNUC__
 )

116 #i‡
deföed
 (
__VFP_FP__
Ë&& !deföed(
__SOFTFP__
)

120 #ñi‡
deföed
 ( 
__TASKING__
 )

121 #i‡
deföed
 
__FPU_VFP__


126 
	~<°döt.h
>

127 
	~<c‹e_cmIn°r.h
>

128 
	~<c‹e_cmFunc.h
>

132 #i‚de‡
__CMSIS_GENERIC


134 #i‚de‡
__CORE_CM0PLUS_H_DEPENDANT


135 
	#__CORE_CM0PLUS_H_DEPENDANT


	)

138 #i‡
deföed
 
__CHECK_DEVICE_DEFINES


139 #i‚de‡
__CM0PLUS_REV


140 
	#__CM0PLUS_REV
 0x0000

	)

144 #i‚de‡
__MPU_PRESENT


145 
	#__MPU_PRESENT
 0

	)

149 #i‚de‡
__VTOR_PRESENT


150 
	#__VTOR_PRESENT
 0

	)

154 #i‚de‡
__NVIC_PRIO_BITS


155 
	#__NVIC_PRIO_BITS
 2

	)

159 #i‚de‡
__Víd‹_SysTickC⁄fig


160 
	#__Víd‹_SysTickC⁄fig
 0

	)

173 #ifde‡
__˝lu•lus


174 
	#__I
 vﬁ©ûê

	)

176 
	#__I
 vﬁ©ûêc⁄°

	)

178 
	#__O
 vﬁ©ûê

	)

179 
	#__IO
 vﬁ©ûê

	)

210 #i‡(
__CORTEX_M
 != 0x04)

211 
uöt32_t
 
_ª£rved0
:27;

213 
uöt32_t
 
_ª£rved0
:16;

214 
uöt32_t
 
GE
:4;

215 
uöt32_t
 
_ª£rved1
:7;

217 
uöt32_t
 
Q
:1;

218 
uöt32_t
 
V
:1;

219 
uöt32_t
 
C
:1;

220 
uöt32_t
 
Z
:1;

221 
uöt32_t
 
N
:1;

222 } 
b
;

223 
uöt32_t
 
w
;

224 } 
	tAPSR_Ty≥
;

233 
uöt32_t
 
	mISR
:9;

234 
uöt32_t
 
	m_ª£rved0
:23;

235 } 
	mb
;

236 
uöt32_t
 
	mw
;

237 } 
	tIPSR_Ty≥
;

246 
uöt32_t
 
	mISR
:9;

247 #i‡(
__CORTEX_M
 != 0x04)

248 
uöt32_t
 
	m_ª£rved0
:15;

250 
uöt32_t
 
	m_ª£rved0
:7;

251 
uöt32_t
 
	mGE
:4;

252 
uöt32_t
 
	m_ª£rved1
:4;

254 
uöt32_t
 
	mT
:1;

255 
uöt32_t
 
	mIT
:2;

256 
uöt32_t
 
	mQ
:1;

257 
uöt32_t
 
	mV
:1;

258 
uöt32_t
 
	mC
:1;

259 
uöt32_t
 
	mZ
:1;

260 
uöt32_t
 
	mN
:1;

261 } 
	mb
;

262 
uöt32_t
 
	mw
;

263 } 
	txPSR_Ty≥
;

272 
uöt32_t
 
	mnPRIV
:1;

273 
uöt32_t
 
	mSPSEL
:1;

274 
uöt32_t
 
	mFPCA
:1;

275 
uöt32_t
 
	m_ª£rved0
:29;

276 } 
	mb
;

277 
uöt32_t
 
	mw
;

278 } 
	tCONTROL_Ty≥
;

293 
__IO
 
uöt32_t
 
	mISER
[1];

294 
uöt32_t
 
	mRESERVED0
[31];

295 
__IO
 
uöt32_t
 
	mICER
[1];

296 
uöt32_t
 
	mRSERVED1
[31];

297 
__IO
 
uöt32_t
 
	mISPR
[1];

298 
uöt32_t
 
	mRESERVED2
[31];

299 
__IO
 
uöt32_t
 
	mICPR
[1];

300 
uöt32_t
 
	mRESERVED3
[31];

301 
uöt32_t
 
	mRESERVED4
[64];

302 
__IO
 
uöt32_t
 
	mIP
[8];

303 } 
	tNVIC_Ty≥
;

318 
__I
 
uöt32_t
 
	mCPUID
;

319 
__IO
 
uöt32_t
 
	mICSR
;

320 #i‡(
__VTOR_PRESENT
 == 1)

321 
__IO
 
uöt32_t
 
	mVTOR
;

323 
uöt32_t
 
	mRESERVED0
;

325 
__IO
 
uöt32_t
 
	mAIRCR
;

326 
__IO
 
uöt32_t
 
	mSCR
;

327 
__IO
 
uöt32_t
 
	mCCR
;

328 
uöt32_t
 
	mRESERVED1
;

329 
__IO
 
uöt32_t
 
	mSHP
[2];

330 
__IO
 
uöt32_t
 
	mSHCSR
;

331 } 
	tSCB_Ty≥
;

334 
	#SCB_CPUID_IMPLEMENTER_Pos
 24

	)

335 
	#SCB_CPUID_IMPLEMENTER_Msk
 (0xFFUL << 
SCB_CPUID_IMPLEMENTER_Pos
Ë

	)

337 
	#SCB_CPUID_VARIANT_Pos
 20

	)

338 
	#SCB_CPUID_VARIANT_Msk
 (0xFUL << 
SCB_CPUID_VARIANT_Pos
Ë

	)

340 
	#SCB_CPUID_ARCHITECTURE_Pos
 16

	)

341 
	#SCB_CPUID_ARCHITECTURE_Msk
 (0xFUL << 
SCB_CPUID_ARCHITECTURE_Pos
Ë

	)

343 
	#SCB_CPUID_PARTNO_Pos
 4

	)

344 
	#SCB_CPUID_PARTNO_Msk
 (0xFFFUL << 
SCB_CPUID_PARTNO_Pos
Ë

	)

346 
	#SCB_CPUID_REVISION_Pos
 0

	)

347 
	#SCB_CPUID_REVISION_Msk
 (0xFUL << 
SCB_CPUID_REVISION_Pos
Ë

	)

350 
	#SCB_ICSR_NMIPENDSET_Pos
 31

	)

351 
	#SCB_ICSR_NMIPENDSET_Msk
 (1UL << 
SCB_ICSR_NMIPENDSET_Pos
Ë

	)

353 
	#SCB_ICSR_PENDSVSET_Pos
 28

	)

354 
	#SCB_ICSR_PENDSVSET_Msk
 (1UL << 
SCB_ICSR_PENDSVSET_Pos
Ë

	)

356 
	#SCB_ICSR_PENDSVCLR_Pos
 27

	)

357 
	#SCB_ICSR_PENDSVCLR_Msk
 (1UL << 
SCB_ICSR_PENDSVCLR_Pos
Ë

	)

359 
	#SCB_ICSR_PENDSTSET_Pos
 26

	)

360 
	#SCB_ICSR_PENDSTSET_Msk
 (1UL << 
SCB_ICSR_PENDSTSET_Pos
Ë

	)

362 
	#SCB_ICSR_PENDSTCLR_Pos
 25

	)

363 
	#SCB_ICSR_PENDSTCLR_Msk
 (1UL << 
SCB_ICSR_PENDSTCLR_Pos
Ë

	)

365 
	#SCB_ICSR_ISRPREEMPT_Pos
 23

	)

366 
	#SCB_ICSR_ISRPREEMPT_Msk
 (1UL << 
SCB_ICSR_ISRPREEMPT_Pos
Ë

	)

368 
	#SCB_ICSR_ISRPENDING_Pos
 22

	)

369 
	#SCB_ICSR_ISRPENDING_Msk
 (1UL << 
SCB_ICSR_ISRPENDING_Pos
Ë

	)

371 
	#SCB_ICSR_VECTPENDING_Pos
 12

	)

372 
	#SCB_ICSR_VECTPENDING_Msk
 (0x1FFUL << 
SCB_ICSR_VECTPENDING_Pos
Ë

	)

374 
	#SCB_ICSR_VECTACTIVE_Pos
 0

	)

375 
	#SCB_ICSR_VECTACTIVE_Msk
 (0x1FFUL << 
SCB_ICSR_VECTACTIVE_Pos
Ë

	)

377 #i‡(
__VTOR_PRESENT
 == 1)

379 
	#SCB_VTOR_TBLOFF_Pos
 8

	)

380 
	#SCB_VTOR_TBLOFF_Msk
 (0xFFFFFFUL << 
SCB_VTOR_TBLOFF_Pos
Ë

	)

384 
	#SCB_AIRCR_VECTKEY_Pos
 16

	)

385 
	#SCB_AIRCR_VECTKEY_Msk
 (0xFFFFUL << 
SCB_AIRCR_VECTKEY_Pos
Ë

	)

387 
	#SCB_AIRCR_VECTKEYSTAT_Pos
 16

	)

388 
	#SCB_AIRCR_VECTKEYSTAT_Msk
 (0xFFFFUL << 
SCB_AIRCR_VECTKEYSTAT_Pos
Ë

	)

390 
	#SCB_AIRCR_ENDIANESS_Pos
 15

	)

391 
	#SCB_AIRCR_ENDIANESS_Msk
 (1UL << 
SCB_AIRCR_ENDIANESS_Pos
Ë

	)

393 
	#SCB_AIRCR_SYSRESETREQ_Pos
 2

	)

394 
	#SCB_AIRCR_SYSRESETREQ_Msk
 (1UL << 
SCB_AIRCR_SYSRESETREQ_Pos
Ë

	)

396 
	#SCB_AIRCR_VECTCLRACTIVE_Pos
 1

	)

397 
	#SCB_AIRCR_VECTCLRACTIVE_Msk
 (1UL << 
SCB_AIRCR_VECTCLRACTIVE_Pos
Ë

	)

400 
	#SCB_SCR_SEVONPEND_Pos
 4

	)

401 
	#SCB_SCR_SEVONPEND_Msk
 (1UL << 
SCB_SCR_SEVONPEND_Pos
Ë

	)

403 
	#SCB_SCR_SLEEPDEEP_Pos
 2

	)

404 
	#SCB_SCR_SLEEPDEEP_Msk
 (1UL << 
SCB_SCR_SLEEPDEEP_Pos
Ë

	)

406 
	#SCB_SCR_SLEEPONEXIT_Pos
 1

	)

407 
	#SCB_SCR_SLEEPONEXIT_Msk
 (1UL << 
SCB_SCR_SLEEPONEXIT_Pos
Ë

	)

410 
	#SCB_CCR_STKALIGN_Pos
 9

	)

411 
	#SCB_CCR_STKALIGN_Msk
 (1UL << 
SCB_CCR_STKALIGN_Pos
Ë

	)

413 
	#SCB_CCR_UNALIGN_TRP_Pos
 3

	)

414 
	#SCB_CCR_UNALIGN_TRP_Msk
 (1UL << 
SCB_CCR_UNALIGN_TRP_Pos
Ë

	)

417 
	#SCB_SHCSR_SVCALLPENDED_Pos
 15

	)

418 
	#SCB_SHCSR_SVCALLPENDED_Msk
 (1UL << 
SCB_SHCSR_SVCALLPENDED_Pos
Ë

	)

433 
__IO
 
uöt32_t
 
	mCTRL
;

434 
__IO
 
uöt32_t
 
	mLOAD
;

435 
__IO
 
uöt32_t
 
	mVAL
;

436 
__I
 
uöt32_t
 
	mCALIB
;

437 } 
	tSysTick_Ty≥
;

440 
	#SysTick_CTRL_COUNTFLAG_Pos
 16

	)

441 
	#SysTick_CTRL_COUNTFLAG_Msk
 (1UL << 
SysTick_CTRL_COUNTFLAG_Pos
Ë

	)

443 
	#SysTick_CTRL_CLKSOURCE_Pos
 2

	)

444 
	#SysTick_CTRL_CLKSOURCE_Msk
 (1UL << 
SysTick_CTRL_CLKSOURCE_Pos
Ë

	)

446 
	#SysTick_CTRL_TICKINT_Pos
 1

	)

447 
	#SysTick_CTRL_TICKINT_Msk
 (1UL << 
SysTick_CTRL_TICKINT_Pos
Ë

	)

449 
	#SysTick_CTRL_ENABLE_Pos
 0

	)

450 
	#SysTick_CTRL_ENABLE_Msk
 (1UL << 
SysTick_CTRL_ENABLE_Pos
Ë

	)

453 
	#SysTick_LOAD_RELOAD_Pos
 0

	)

454 
	#SysTick_LOAD_RELOAD_Msk
 (0xFFFFFFUL << 
SysTick_LOAD_RELOAD_Pos
Ë

	)

457 
	#SysTick_VAL_CURRENT_Pos
 0

	)

458 
	#SysTick_VAL_CURRENT_Msk
 (0xFFFFFFUL << 
SysTick_VAL_CURRENT_Pos
Ë

	)

461 
	#SysTick_CALIB_NOREF_Pos
 31

	)

462 
	#SysTick_CALIB_NOREF_Msk
 (1UL << 
SysTick_CALIB_NOREF_Pos
Ë

	)

464 
	#SysTick_CALIB_SKEW_Pos
 30

	)

465 
	#SysTick_CALIB_SKEW_Msk
 (1UL << 
SysTick_CALIB_SKEW_Pos
Ë

	)

467 
	#SysTick_CALIB_TENMS_Pos
 0

	)

468 
	#SysTick_CALIB_TENMS_Msk
 (0xFFFFFFUL << 
SysTick_VAL_CURRENT_Pos
Ë

	)

472 #i‡(
__MPU_PRESENT
 == 1)

483 
__I
 
uöt32_t
 
	mTYPE
;

484 
__IO
 
uöt32_t
 
	mCTRL
;

485 
__IO
 
uöt32_t
 
	mRNR
;

486 
__IO
 
uöt32_t
 
	mRBAR
;

487 
__IO
 
uöt32_t
 
	mRASR
;

488 } 
	tMPU_Ty≥
;

491 
	#MPU_TYPE_IREGION_Pos
 16

	)

492 
	#MPU_TYPE_IREGION_Msk
 (0xFFUL << 
MPU_TYPE_IREGION_Pos
Ë

	)

494 
	#MPU_TYPE_DREGION_Pos
 8

	)

495 
	#MPU_TYPE_DREGION_Msk
 (0xFFUL << 
MPU_TYPE_DREGION_Pos
Ë

	)

497 
	#MPU_TYPE_SEPARATE_Pos
 0

	)

498 
	#MPU_TYPE_SEPARATE_Msk
 (1UL << 
MPU_TYPE_SEPARATE_Pos
Ë

	)

501 
	#MPU_CTRL_PRIVDEFENA_Pos
 2

	)

502 
	#MPU_CTRL_PRIVDEFENA_Msk
 (1UL << 
MPU_CTRL_PRIVDEFENA_Pos
Ë

	)

504 
	#MPU_CTRL_HFNMIENA_Pos
 1

	)

505 
	#MPU_CTRL_HFNMIENA_Msk
 (1UL << 
MPU_CTRL_HFNMIENA_Pos
Ë

	)

507 
	#MPU_CTRL_ENABLE_Pos
 0

	)

508 
	#MPU_CTRL_ENABLE_Msk
 (1UL << 
MPU_CTRL_ENABLE_Pos
Ë

	)

511 
	#MPU_RNR_REGION_Pos
 0

	)

512 
	#MPU_RNR_REGION_Msk
 (0xFFUL << 
MPU_RNR_REGION_Pos
Ë

	)

515 
	#MPU_RBAR_ADDR_Pos
 8

	)

516 
	#MPU_RBAR_ADDR_Msk
 (0xFFFFFFUL << 
MPU_RBAR_ADDR_Pos
Ë

	)

518 
	#MPU_RBAR_VALID_Pos
 4

	)

519 
	#MPU_RBAR_VALID_Msk
 (1UL << 
MPU_RBAR_VALID_Pos
Ë

	)

521 
	#MPU_RBAR_REGION_Pos
 0

	)

522 
	#MPU_RBAR_REGION_Msk
 (0xFUL << 
MPU_RBAR_REGION_Pos
Ë

	)

525 
	#MPU_RASR_ATTRS_Pos
 16

	)

526 
	#MPU_RASR_ATTRS_Msk
 (0xFFFFUL << 
MPU_RASR_ATTRS_Pos
Ë

	)

528 
	#MPU_RASR_XN_Pos
 28

	)

529 
	#MPU_RASR_XN_Msk
 (1UL << 
MPU_RASR_XN_Pos
Ë

	)

531 
	#MPU_RASR_AP_Pos
 24

	)

532 
	#MPU_RASR_AP_Msk
 (0x7UL << 
MPU_RASR_AP_Pos
Ë

	)

534 
	#MPU_RASR_TEX_Pos
 19

	)

535 
	#MPU_RASR_TEX_Msk
 (0x7UL << 
MPU_RASR_TEX_Pos
Ë

	)

537 
	#MPU_RASR_S_Pos
 18

	)

538 
	#MPU_RASR_S_Msk
 (1UL << 
MPU_RASR_S_Pos
Ë

	)

540 
	#MPU_RASR_C_Pos
 17

	)

541 
	#MPU_RASR_C_Msk
 (1UL << 
MPU_RASR_C_Pos
Ë

	)

543 
	#MPU_RASR_B_Pos
 16

	)

544 
	#MPU_RASR_B_Msk
 (1UL << 
MPU_RASR_B_Pos
Ë

	)

546 
	#MPU_RASR_SRD_Pos
 8

	)

547 
	#MPU_RASR_SRD_Msk
 (0xFFUL << 
MPU_RASR_SRD_Pos
Ë

	)

549 
	#MPU_RASR_SIZE_Pos
 1

	)

550 
	#MPU_RASR_SIZE_Msk
 (0x1FUL << 
MPU_RASR_SIZE_Pos
Ë

	)

552 
	#MPU_RASR_ENABLE_Pos
 0

	)

553 
	#MPU_RASR_ENABLE_Msk
 (1UL << 
MPU_RASR_ENABLE_Pos
Ë

	)

576 
	#SCS_BASE
 (0xE000E000ULË

	)

577 
	#SysTick_BASE
 (
SCS_BASE
 + 0x0010ULË

	)

578 
	#NVIC_BASE
 (
SCS_BASE
 + 0x0100ULË

	)

579 
	#SCB_BASE
 (
SCS_BASE
 + 0x0D00ULË

	)

581 
	#SCB
 ((
SCB_Ty≥
 *Ë
SCB_BASE
 )

	)

582 
	#SysTick
 ((
SysTick_Ty≥
 *Ë
SysTick_BASE
 )

	)

583 
	#NVIC
 ((
NVIC_Ty≥
 *Ë
NVIC_BASE
 )

	)

585 #i‡(
__MPU_PRESENT
 == 1)

586 
	#MPU_BASE
 (
SCS_BASE
 + 0x0D90ULË

	)

587 
	#MPU
 ((
MPU_Ty≥
 *Ë
MPU_BASE
 )

	)

615 
	#_BIT_SHIFT
(
IRQn
Ë–(((
uöt32_t
)(IRQnËË& 0x03Ë* 8 )

	)

616 
	#_SHP_IDX
(
IRQn
Ë–((((
uöt32_t
)(IRQnË& 0x0F)-8Ë>> 2Ë)

	)

617 
	#_IP_IDX
(
IRQn
Ë–((
uöt32_t
)(IRQnË>> 2Ë)

	)

626 
__STATIC_INLINE
 
	$NVIC_E«bÀIRQ
(
IRQn_Ty≥
 
IRQn
)

628 
NVIC
->
ISER
[0] = (1 << ((
uöt32_t
)(
IRQn
) & 0x1F));

629 
	}
}

638 
__STATIC_INLINE
 
	$NVIC_DißbÀIRQ
(
IRQn_Ty≥
 
IRQn
)

640 
NVIC
->
ICER
[0] = (1 << ((
uöt32_t
)(
IRQn
) & 0x1F));

641 
	}
}

654 
__STATIC_INLINE
 
uöt32_t
 
	$NVIC_GëPídögIRQ
(
IRQn_Ty≥
 
IRQn
)

656 ((
uöt32_t
Ë((
NVIC
->
ISPR
[0] & (1 << ((uöt32_t)(
IRQn
) & 0x1F)))?1:0));

657 
	}
}

666 
__STATIC_INLINE
 
	$NVIC_SëPídögIRQ
(
IRQn_Ty≥
 
IRQn
)

668 
NVIC
->
ISPR
[0] = (1 << ((
uöt32_t
)(
IRQn
) & 0x1F));

669 
	}
}

678 
__STATIC_INLINE
 
	$NVIC_CÀ¨PídögIRQ
(
IRQn_Ty≥
 
IRQn
)

680 
NVIC
->
ICPR
[0] = (1 << ((
uöt32_t
)(
IRQn
) & 0x1F));

681 
	}
}

693 
__STATIC_INLINE
 
	$NVIC_SëPri‹ôy
(
IRQn_Ty≥
 
IRQn
, 
uöt32_t
 
¥i‹ôy
)

695 if(
IRQn
 < 0) {

696 
SCB
->
SHP
[
	`_SHP_IDX
(
IRQn
)] = (SCB->SHP[_SHP_IDX(IRQn)] & ~(0xFF << 
	`_BIT_SHIFT
(IRQn))) |

697 (((
¥i‹ôy
 << (8 - 
__NVIC_PRIO_BITS
)Ë& 0xFFË<< 
	`_BIT_SHIFT
(
IRQn
)); }

699 
NVIC
->
IP
[
	`_IP_IDX
(
IRQn
)] = (NVIC->IP[_IP_IDX(IRQn)] & ~(0xFF << 
	`_BIT_SHIFT
(IRQn))) |

700 (((
¥i‹ôy
 << (8 - 
__NVIC_PRIO_BITS
)Ë& 0xFFË<< 
	`_BIT_SHIFT
(
IRQn
)); }

701 
	}
}

715 
__STATIC_INLINE
 
uöt32_t
 
	$NVIC_GëPri‹ôy
(
IRQn_Ty≥
 
IRQn
)

718 if(
IRQn
 < 0) {

719 ((
uöt32_t
)(((
SCB
->
SHP
[
	`_SHP_IDX
(
IRQn
)] >> 
	`_BIT_SHIFT
(IRQnËË& 0xFFË>> (8 - 
__NVIC_PRIO_BITS
))); }

721 ((
uöt32_t
)(((
NVIC
->
IP
[ 
	`_IP_IDX
(
IRQn
)] >> 
	`_BIT_SHIFT
(IRQnËË& 0xFFË>> (8 - 
__NVIC_PRIO_BITS
))); }

722 
	}
}

729 
__STATIC_INLINE
 
	$NVIC_Sy°emRe£t
()

731 
	`__DSB
();

733 
SCB
->
AIRCR
 = ((0x5FA << 
SCB_AIRCR_VECTKEY_Pos
) |

734 
SCB_AIRCR_SYSRESETREQ_Msk
);

735 
	`__DSB
();

737 
	}
}

750 #i‡(
__Víd‹_SysTickC⁄fig
 == 0)

767 
__STATIC_INLINE
 
uöt32_t
 
	$SysTick_C⁄fig
(
uöt32_t
 
ticks
)

769 i‡((
ticks
 - 1Ë> 
SysTick_LOAD_RELOAD_Msk
)  (1);

771 
SysTick
->
LOAD
 = 
ticks
 - 1;

772 
	`NVIC_SëPri‹ôy
 (
SysTick_IRQn
, (1<<
__NVIC_PRIO_BITS
) - 1);

773 
SysTick
->
VAL
 = 0;

774 
SysTick
->
CTRL
 = 
SysTick_CTRL_CLKSOURCE_Msk
 |

775 
SysTick_CTRL_TICKINT_Msk
 |

776 
SysTick_CTRL_ENABLE_Msk
;

778 
	}
}

791 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\core_cm3.h

38 #i‡
deföed
 ( 
__ICCARM__
 )

39 #¥agm®
sy°em_ö˛ude


42 #ifde‡
__˝lu•lus


46 #i‚de‡
__CORE_CM3_H_GENERIC


47 
	#__CORE_CM3_H_GENERIC


	)

71 
	#__CM3_CMSIS_VERSION_MAIN
 (0x03Ë

	)

72 
	#__CM3_CMSIS_VERSION_SUB
 (0x20Ë

	)

73 
	#__CM3_CMSIS_VERSION
 ((
__CM3_CMSIS_VERSION_MAIN
 << 16) | \

74 
__CM3_CMSIS_VERSION_SUB
 )

	)

76 
	#__CORTEX_M
 (0x03Ë

	)

79 #i‡ 
deföed
 ( 
__CC_ARM
 )

80 
	#__ASM
 
__asm


	)

81 
	#__INLINE
 
__ölöe


	)

82 
	#__STATIC_INLINE
 
__ölöe


	)

84 #ñi‡
deföed
 ( 
__ICCARM__
 )

85 
	#__ASM
 
__asm


	)

86 
	#__INLINE
 
ölöe


	)

87 
	#__STATIC_INLINE
 
ölöe


	)

89 #ñi‡
deföed
 ( 
__TMS470__
 )

90 
	#__ASM
 
__asm


	)

91 
	#__STATIC_INLINE
 
ölöe


	)

93 #ñi‡
deföed
 ( 
__GNUC__
 )

94 
	#__ASM
 
__asm


	)

95 
	#__INLINE
 
ölöe


	)

96 
	#__STATIC_INLINE
 
ölöe


	)

98 #ñi‡
deföed
 ( 
__TASKING__
 )

99 
	#__ASM
 
__asm


	)

100 
	#__INLINE
 
ölöe


	)

101 
	#__STATIC_INLINE
 
ölöe


	)

107 
	#__FPU_USED
 0

	)

109 #i‡
deföed
 ( 
__CC_ARM
 )

110 #i‡
deföed
 
__TARGET_FPU_VFP


114 #ñi‡
deföed
 ( 
__ICCARM__
 )

115 #i‡
deföed
 
__ARMVFP__


119 #ñi‡
deföed
 ( 
__TMS470__
 )

120 #i‡
deföed
 
__TI__VFP_SUPPORT____


124 #ñi‡
deföed
 ( 
__GNUC__
 )

125 #i‡
deföed
 (
__VFP_FP__
Ë&& !deföed(
__SOFTFP__
)

129 #ñi‡
deföed
 ( 
__TASKING__
 )

130 #i‡
deföed
 
__FPU_VFP__


135 
	~<°döt.h
>

136 
	~<c‹e_cmIn°r.h
>

137 
	~<c‹e_cmFunc.h
>

141 #i‚de‡
__CMSIS_GENERIC


143 #i‚de‡
__CORE_CM3_H_DEPENDANT


144 
	#__CORE_CM3_H_DEPENDANT


	)

147 #i‡
deföed
 
__CHECK_DEVICE_DEFINES


148 #i‚de‡
__CM3_REV


149 
	#__CM3_REV
 0x0200

	)

153 #i‚de‡
__MPU_PRESENT


154 
	#__MPU_PRESENT
 0

	)

158 #i‚de‡
__NVIC_PRIO_BITS


159 
	#__NVIC_PRIO_BITS
 4

	)

163 #i‚de‡
__Víd‹_SysTickC⁄fig


164 
	#__Víd‹_SysTickC⁄fig
 0

	)

177 #ifde‡
__˝lu•lus


178 
	#__I
 vﬁ©ûê

	)

180 
	#__I
 vﬁ©ûêc⁄°

	)

182 
	#__O
 vﬁ©ûê

	)

183 
	#__IO
 vﬁ©ûê

	)

215 #i‡(
__CORTEX_M
 != 0x04)

216 
uöt32_t
 
_ª£rved0
:27;

218 
uöt32_t
 
_ª£rved0
:16;

219 
uöt32_t
 
GE
:4;

220 
uöt32_t
 
_ª£rved1
:7;

222 
uöt32_t
 
Q
:1;

223 
uöt32_t
 
V
:1;

224 
uöt32_t
 
C
:1;

225 
uöt32_t
 
Z
:1;

226 
uöt32_t
 
N
:1;

227 } 
b
;

228 
uöt32_t
 
w
;

229 } 
	tAPSR_Ty≥
;

238 
uöt32_t
 
	mISR
:9;

239 
uöt32_t
 
	m_ª£rved0
:23;

240 } 
	mb
;

241 
uöt32_t
 
	mw
;

242 } 
	tIPSR_Ty≥
;

251 
uöt32_t
 
	mISR
:9;

252 #i‡(
__CORTEX_M
 != 0x04)

253 
uöt32_t
 
	m_ª£rved0
:15;

255 
uöt32_t
 
	m_ª£rved0
:7;

256 
uöt32_t
 
	mGE
:4;

257 
uöt32_t
 
	m_ª£rved1
:4;

259 
uöt32_t
 
	mT
:1;

260 
uöt32_t
 
	mIT
:2;

261 
uöt32_t
 
	mQ
:1;

262 
uöt32_t
 
	mV
:1;

263 
uöt32_t
 
	mC
:1;

264 
uöt32_t
 
	mZ
:1;

265 
uöt32_t
 
	mN
:1;

266 } 
	mb
;

267 
uöt32_t
 
	mw
;

268 } 
	txPSR_Ty≥
;

277 
uöt32_t
 
	mnPRIV
:1;

278 
uöt32_t
 
	mSPSEL
:1;

279 
uöt32_t
 
	mFPCA
:1;

280 
uöt32_t
 
	m_ª£rved0
:29;

281 } 
	mb
;

282 
uöt32_t
 
	mw
;

283 } 
	tCONTROL_Ty≥
;

298 
__IO
 
uöt32_t
 
	mISER
[8];

299 
uöt32_t
 
	mRESERVED0
[24];

300 
__IO
 
uöt32_t
 
	mICER
[8];

301 
uöt32_t
 
	mRSERVED1
[24];

302 
__IO
 
uöt32_t
 
	mISPR
[8];

303 
uöt32_t
 
	mRESERVED2
[24];

304 
__IO
 
uöt32_t
 
	mICPR
[8];

305 
uöt32_t
 
	mRESERVED3
[24];

306 
__IO
 
uöt32_t
 
	mIABR
[8];

307 
uöt32_t
 
	mRESERVED4
[56];

308 
__IO
 
uöt8_t
 
	mIP
[240];

309 
uöt32_t
 
	mRESERVED5
[644];

310 
__O
 
uöt32_t
 
	mSTIR
;

311 } 
	tNVIC_Ty≥
;

314 
	#NVIC_STIR_INTID_Pos
 0

	)

315 
	#NVIC_STIR_INTID_Msk
 (0x1FFUL << 
NVIC_STIR_INTID_Pos
Ë

	)

330 
__I
 
uöt32_t
 
	mCPUID
;

331 
__IO
 
uöt32_t
 
	mICSR
;

332 
__IO
 
uöt32_t
 
	mVTOR
;

333 
__IO
 
uöt32_t
 
	mAIRCR
;

334 
__IO
 
uöt32_t
 
	mSCR
;

335 
__IO
 
uöt32_t
 
	mCCR
;

336 
__IO
 
uöt8_t
 
	mSHP
[12];

337 
__IO
 
uöt32_t
 
	mSHCSR
;

338 
__IO
 
uöt32_t
 
	mCFSR
;

339 
__IO
 
uöt32_t
 
	mHFSR
;

340 
__IO
 
uöt32_t
 
	mDFSR
;

341 
__IO
 
uöt32_t
 
	mMMFAR
;

342 
__IO
 
uöt32_t
 
	mBFAR
;

343 
__IO
 
uöt32_t
 
	mAFSR
;

344 
__I
 
uöt32_t
 
	mPFR
[2];

345 
__I
 
uöt32_t
 
	mDFR
;

346 
__I
 
uöt32_t
 
	mADR
;

347 
__I
 
uöt32_t
 
	mMMFR
[4];

348 
__I
 
uöt32_t
 
	mISAR
[5];

349 
uöt32_t
 
	mRESERVED0
[5];

350 
__IO
 
uöt32_t
 
	mCPACR
;

351 } 
	tSCB_Ty≥
;

354 
	#SCB_CPUID_IMPLEMENTER_Pos
 24

	)

355 
	#SCB_CPUID_IMPLEMENTER_Msk
 (0xFFUL << 
SCB_CPUID_IMPLEMENTER_Pos
Ë

	)

357 
	#SCB_CPUID_VARIANT_Pos
 20

	)

358 
	#SCB_CPUID_VARIANT_Msk
 (0xFUL << 
SCB_CPUID_VARIANT_Pos
Ë

	)

360 
	#SCB_CPUID_ARCHITECTURE_Pos
 16

	)

361 
	#SCB_CPUID_ARCHITECTURE_Msk
 (0xFUL << 
SCB_CPUID_ARCHITECTURE_Pos
Ë

	)

363 
	#SCB_CPUID_PARTNO_Pos
 4

	)

364 
	#SCB_CPUID_PARTNO_Msk
 (0xFFFUL << 
SCB_CPUID_PARTNO_Pos
Ë

	)

366 
	#SCB_CPUID_REVISION_Pos
 0

	)

367 
	#SCB_CPUID_REVISION_Msk
 (0xFUL << 
SCB_CPUID_REVISION_Pos
Ë

	)

370 
	#SCB_ICSR_NMIPENDSET_Pos
 31

	)

371 
	#SCB_ICSR_NMIPENDSET_Msk
 (1UL << 
SCB_ICSR_NMIPENDSET_Pos
Ë

	)

373 
	#SCB_ICSR_PENDSVSET_Pos
 28

	)

374 
	#SCB_ICSR_PENDSVSET_Msk
 (1UL << 
SCB_ICSR_PENDSVSET_Pos
Ë

	)

376 
	#SCB_ICSR_PENDSVCLR_Pos
 27

	)

377 
	#SCB_ICSR_PENDSVCLR_Msk
 (1UL << 
SCB_ICSR_PENDSVCLR_Pos
Ë

	)

379 
	#SCB_ICSR_PENDSTSET_Pos
 26

	)

380 
	#SCB_ICSR_PENDSTSET_Msk
 (1UL << 
SCB_ICSR_PENDSTSET_Pos
Ë

	)

382 
	#SCB_ICSR_PENDSTCLR_Pos
 25

	)

383 
	#SCB_ICSR_PENDSTCLR_Msk
 (1UL << 
SCB_ICSR_PENDSTCLR_Pos
Ë

	)

385 
	#SCB_ICSR_ISRPREEMPT_Pos
 23

	)

386 
	#SCB_ICSR_ISRPREEMPT_Msk
 (1UL << 
SCB_ICSR_ISRPREEMPT_Pos
Ë

	)

388 
	#SCB_ICSR_ISRPENDING_Pos
 22

	)

389 
	#SCB_ICSR_ISRPENDING_Msk
 (1UL << 
SCB_ICSR_ISRPENDING_Pos
Ë

	)

391 
	#SCB_ICSR_VECTPENDING_Pos
 12

	)

392 
	#SCB_ICSR_VECTPENDING_Msk
 (0x1FFUL << 
SCB_ICSR_VECTPENDING_Pos
Ë

	)

394 
	#SCB_ICSR_RETTOBASE_Pos
 11

	)

395 
	#SCB_ICSR_RETTOBASE_Msk
 (1UL << 
SCB_ICSR_RETTOBASE_Pos
Ë

	)

397 
	#SCB_ICSR_VECTACTIVE_Pos
 0

	)

398 
	#SCB_ICSR_VECTACTIVE_Msk
 (0x1FFUL << 
SCB_ICSR_VECTACTIVE_Pos
Ë

	)

401 #i‡(
__CM3_REV
 < 0x0201)

402 
	#SCB_VTOR_TBLBASE_Pos
 29

	)

403 
	#SCB_VTOR_TBLBASE_Msk
 (1UL << 
SCB_VTOR_TBLBASE_Pos
Ë

	)

405 
	#SCB_VTOR_TBLOFF_Pos
 7

	)

406 
	#SCB_VTOR_TBLOFF_Msk
 (0x3FFFFFUL << 
SCB_VTOR_TBLOFF_Pos
Ë

	)

408 
	#SCB_VTOR_TBLOFF_Pos
 7

	)

409 
	#SCB_VTOR_TBLOFF_Msk
 (0x1FFFFFFUL << 
SCB_VTOR_TBLOFF_Pos
Ë

	)

413 
	#SCB_AIRCR_VECTKEY_Pos
 16

	)

414 
	#SCB_AIRCR_VECTKEY_Msk
 (0xFFFFUL << 
SCB_AIRCR_VECTKEY_Pos
Ë

	)

416 
	#SCB_AIRCR_VECTKEYSTAT_Pos
 16

	)

417 
	#SCB_AIRCR_VECTKEYSTAT_Msk
 (0xFFFFUL << 
SCB_AIRCR_VECTKEYSTAT_Pos
Ë

	)

419 
	#SCB_AIRCR_ENDIANESS_Pos
 15

	)

420 
	#SCB_AIRCR_ENDIANESS_Msk
 (1UL << 
SCB_AIRCR_ENDIANESS_Pos
Ë

	)

422 
	#SCB_AIRCR_PRIGROUP_Pos
 8

	)

423 
	#SCB_AIRCR_PRIGROUP_Msk
 (7UL << 
SCB_AIRCR_PRIGROUP_Pos
Ë

	)

425 
	#SCB_AIRCR_SYSRESETREQ_Pos
 2

	)

426 
	#SCB_AIRCR_SYSRESETREQ_Msk
 (1UL << 
SCB_AIRCR_SYSRESETREQ_Pos
Ë

	)

428 
	#SCB_AIRCR_VECTCLRACTIVE_Pos
 1

	)

429 
	#SCB_AIRCR_VECTCLRACTIVE_Msk
 (1UL << 
SCB_AIRCR_VECTCLRACTIVE_Pos
Ë

	)

431 
	#SCB_AIRCR_VECTRESET_Pos
 0

	)

432 
	#SCB_AIRCR_VECTRESET_Msk
 (1UL << 
SCB_AIRCR_VECTRESET_Pos
Ë

	)

435 
	#SCB_SCR_SEVONPEND_Pos
 4

	)

436 
	#SCB_SCR_SEVONPEND_Msk
 (1UL << 
SCB_SCR_SEVONPEND_Pos
Ë

	)

438 
	#SCB_SCR_SLEEPDEEP_Pos
 2

	)

439 
	#SCB_SCR_SLEEPDEEP_Msk
 (1UL << 
SCB_SCR_SLEEPDEEP_Pos
Ë

	)

441 
	#SCB_SCR_SLEEPONEXIT_Pos
 1

	)

442 
	#SCB_SCR_SLEEPONEXIT_Msk
 (1UL << 
SCB_SCR_SLEEPONEXIT_Pos
Ë

	)

445 
	#SCB_CCR_STKALIGN_Pos
 9

	)

446 
	#SCB_CCR_STKALIGN_Msk
 (1UL << 
SCB_CCR_STKALIGN_Pos
Ë

	)

448 
	#SCB_CCR_BFHFNMIGN_Pos
 8

	)

449 
	#SCB_CCR_BFHFNMIGN_Msk
 (1UL << 
SCB_CCR_BFHFNMIGN_Pos
Ë

	)

451 
	#SCB_CCR_DIV_0_TRP_Pos
 4

	)

452 
	#SCB_CCR_DIV_0_TRP_Msk
 (1UL << 
SCB_CCR_DIV_0_TRP_Pos
Ë

	)

454 
	#SCB_CCR_UNALIGN_TRP_Pos
 3

	)

455 
	#SCB_CCR_UNALIGN_TRP_Msk
 (1UL << 
SCB_CCR_UNALIGN_TRP_Pos
Ë

	)

457 
	#SCB_CCR_USERSETMPEND_Pos
 1

	)

458 
	#SCB_CCR_USERSETMPEND_Msk
 (1UL << 
SCB_CCR_USERSETMPEND_Pos
Ë

	)

460 
	#SCB_CCR_NONBASETHRDENA_Pos
 0

	)

461 
	#SCB_CCR_NONBASETHRDENA_Msk
 (1UL << 
SCB_CCR_NONBASETHRDENA_Pos
Ë

	)

464 
	#SCB_SHCSR_USGFAULTENA_Pos
 18

	)

465 
	#SCB_SHCSR_USGFAULTENA_Msk
 (1UL << 
SCB_SHCSR_USGFAULTENA_Pos
Ë

	)

467 
	#SCB_SHCSR_BUSFAULTENA_Pos
 17

	)

468 
	#SCB_SHCSR_BUSFAULTENA_Msk
 (1UL << 
SCB_SHCSR_BUSFAULTENA_Pos
Ë

	)

470 
	#SCB_SHCSR_MEMFAULTENA_Pos
 16

	)

471 
	#SCB_SHCSR_MEMFAULTENA_Msk
 (1UL << 
SCB_SHCSR_MEMFAULTENA_Pos
Ë

	)

473 
	#SCB_SHCSR_SVCALLPENDED_Pos
 15

	)

474 
	#SCB_SHCSR_SVCALLPENDED_Msk
 (1UL << 
SCB_SHCSR_SVCALLPENDED_Pos
Ë

	)

476 
	#SCB_SHCSR_BUSFAULTPENDED_Pos
 14

	)

477 
	#SCB_SHCSR_BUSFAULTPENDED_Msk
 (1UL << 
SCB_SHCSR_BUSFAULTPENDED_Pos
Ë

	)

479 
	#SCB_SHCSR_MEMFAULTPENDED_Pos
 13

	)

480 
	#SCB_SHCSR_MEMFAULTPENDED_Msk
 (1UL << 
SCB_SHCSR_MEMFAULTPENDED_Pos
Ë

	)

482 
	#SCB_SHCSR_USGFAULTPENDED_Pos
 12

	)

483 
	#SCB_SHCSR_USGFAULTPENDED_Msk
 (1UL << 
SCB_SHCSR_USGFAULTPENDED_Pos
Ë

	)

485 
	#SCB_SHCSR_SYSTICKACT_Pos
 11

	)

486 
	#SCB_SHCSR_SYSTICKACT_Msk
 (1UL << 
SCB_SHCSR_SYSTICKACT_Pos
Ë

	)

488 
	#SCB_SHCSR_PENDSVACT_Pos
 10

	)

489 
	#SCB_SHCSR_PENDSVACT_Msk
 (1UL << 
SCB_SHCSR_PENDSVACT_Pos
Ë

	)

491 
	#SCB_SHCSR_MONITORACT_Pos
 8

	)

492 
	#SCB_SHCSR_MONITORACT_Msk
 (1UL << 
SCB_SHCSR_MONITORACT_Pos
Ë

	)

494 
	#SCB_SHCSR_SVCALLACT_Pos
 7

	)

495 
	#SCB_SHCSR_SVCALLACT_Msk
 (1UL << 
SCB_SHCSR_SVCALLACT_Pos
Ë

	)

497 
	#SCB_SHCSR_USGFAULTACT_Pos
 3

	)

498 
	#SCB_SHCSR_USGFAULTACT_Msk
 (1UL << 
SCB_SHCSR_USGFAULTACT_Pos
Ë

	)

500 
	#SCB_SHCSR_BUSFAULTACT_Pos
 1

	)

501 
	#SCB_SHCSR_BUSFAULTACT_Msk
 (1UL << 
SCB_SHCSR_BUSFAULTACT_Pos
Ë

	)

503 
	#SCB_SHCSR_MEMFAULTACT_Pos
 0

	)

504 
	#SCB_SHCSR_MEMFAULTACT_Msk
 (1UL << 
SCB_SHCSR_MEMFAULTACT_Pos
Ë

	)

507 
	#SCB_CFSR_USGFAULTSR_Pos
 16

	)

508 
	#SCB_CFSR_USGFAULTSR_Msk
 (0xFFFFUL << 
SCB_CFSR_USGFAULTSR_Pos
Ë

	)

510 
	#SCB_CFSR_BUSFAULTSR_Pos
 8

	)

511 
	#SCB_CFSR_BUSFAULTSR_Msk
 (0xFFUL << 
SCB_CFSR_BUSFAULTSR_Pos
Ë

	)

513 
	#SCB_CFSR_MEMFAULTSR_Pos
 0

	)

514 
	#SCB_CFSR_MEMFAULTSR_Msk
 (0xFFUL << 
SCB_CFSR_MEMFAULTSR_Pos
Ë

	)

517 
	#SCB_HFSR_DEBUGEVT_Pos
 31

	)

518 
	#SCB_HFSR_DEBUGEVT_Msk
 (1UL << 
SCB_HFSR_DEBUGEVT_Pos
Ë

	)

520 
	#SCB_HFSR_FORCED_Pos
 30

	)

521 
	#SCB_HFSR_FORCED_Msk
 (1UL << 
SCB_HFSR_FORCED_Pos
Ë

	)

523 
	#SCB_HFSR_VECTTBL_Pos
 1

	)

524 
	#SCB_HFSR_VECTTBL_Msk
 (1UL << 
SCB_HFSR_VECTTBL_Pos
Ë

	)

527 
	#SCB_DFSR_EXTERNAL_Pos
 4

	)

528 
	#SCB_DFSR_EXTERNAL_Msk
 (1UL << 
SCB_DFSR_EXTERNAL_Pos
Ë

	)

530 
	#SCB_DFSR_VCATCH_Pos
 3

	)

531 
	#SCB_DFSR_VCATCH_Msk
 (1UL << 
SCB_DFSR_VCATCH_Pos
Ë

	)

533 
	#SCB_DFSR_DWTTRAP_Pos
 2

	)

534 
	#SCB_DFSR_DWTTRAP_Msk
 (1UL << 
SCB_DFSR_DWTTRAP_Pos
Ë

	)

536 
	#SCB_DFSR_BKPT_Pos
 1

	)

537 
	#SCB_DFSR_BKPT_Msk
 (1UL << 
SCB_DFSR_BKPT_Pos
Ë

	)

539 
	#SCB_DFSR_HALTED_Pos
 0

	)

540 
	#SCB_DFSR_HALTED_Msk
 (1UL << 
SCB_DFSR_HALTED_Pos
Ë

	)

555 
uöt32_t
 
	mRESERVED0
[1];

556 
__I
 
uöt32_t
 
	mICTR
;

557 #i‡((
deföed
 
__CM3_REV
) && (__CM3_REV >= 0x200))

558 
__IO
 
uöt32_t
 
	mACTLR
;

560 
uöt32_t
 
	mRESERVED1
[1];

562 } 
	tSCnSCB_Ty≥
;

565 
	#SCnSCB_ICTR_INTLINESNUM_Pos
 0

	)

566 
	#SCnSCB_ICTR_INTLINESNUM_Msk
 (0xFUL << 
SCnSCB_ICTR_INTLINESNUM_Pos
Ë

	)

570 
	#SCnSCB_ACTLR_DISFOLD_Pos
 2

	)

571 
	#SCnSCB_ACTLR_DISFOLD_Msk
 (1UL << 
SCnSCB_ACTLR_DISFOLD_Pos
Ë

	)

573 
	#SCnSCB_ACTLR_DISDEFWBUF_Pos
 1

	)

574 
	#SCnSCB_ACTLR_DISDEFWBUF_Msk
 (1UL << 
SCnSCB_ACTLR_DISDEFWBUF_Pos
Ë

	)

576 
	#SCnSCB_ACTLR_DISMCYCINT_Pos
 0

	)

577 
	#SCnSCB_ACTLR_DISMCYCINT_Msk
 (1UL << 
SCnSCB_ACTLR_DISMCYCINT_Pos
Ë

	)

592 
__IO
 
uöt32_t
 
	mCTRL
;

593 
__IO
 
uöt32_t
 
	mLOAD
;

594 
__IO
 
uöt32_t
 
	mVAL
;

595 
__I
 
uöt32_t
 
	mCALIB
;

596 } 
	tSysTick_Ty≥
;

599 
	#SysTick_CTRL_COUNTFLAG_Pos
 16

	)

600 
	#SysTick_CTRL_COUNTFLAG_Msk
 (1UL << 
SysTick_CTRL_COUNTFLAG_Pos
Ë

	)

602 
	#SysTick_CTRL_CLKSOURCE_Pos
 2

	)

603 
	#SysTick_CTRL_CLKSOURCE_Msk
 (1UL << 
SysTick_CTRL_CLKSOURCE_Pos
Ë

	)

605 
	#SysTick_CTRL_TICKINT_Pos
 1

	)

606 
	#SysTick_CTRL_TICKINT_Msk
 (1UL << 
SysTick_CTRL_TICKINT_Pos
Ë

	)

608 
	#SysTick_CTRL_ENABLE_Pos
 0

	)

609 
	#SysTick_CTRL_ENABLE_Msk
 (1UL << 
SysTick_CTRL_ENABLE_Pos
Ë

	)

612 
	#SysTick_LOAD_RELOAD_Pos
 0

	)

613 
	#SysTick_LOAD_RELOAD_Msk
 (0xFFFFFFUL << 
SysTick_LOAD_RELOAD_Pos
Ë

	)

616 
	#SysTick_VAL_CURRENT_Pos
 0

	)

617 
	#SysTick_VAL_CURRENT_Msk
 (0xFFFFFFUL << 
SysTick_VAL_CURRENT_Pos
Ë

	)

620 
	#SysTick_CALIB_NOREF_Pos
 31

	)

621 
	#SysTick_CALIB_NOREF_Msk
 (1UL << 
SysTick_CALIB_NOREF_Pos
Ë

	)

623 
	#SysTick_CALIB_SKEW_Pos
 30

	)

624 
	#SysTick_CALIB_SKEW_Msk
 (1UL << 
SysTick_CALIB_SKEW_Pos
Ë

	)

626 
	#SysTick_CALIB_TENMS_Pos
 0

	)

627 
	#SysTick_CALIB_TENMS_Msk
 (0xFFFFFFUL << 
SysTick_VAL_CURRENT_Pos
Ë

	)

642 
__O
 union

644 
__O
 
uöt8_t
 
	mu8
;

645 
__O
 
uöt16_t
 
	mu16
;

646 
__O
 
uöt32_t
 
	mu32
;

647 } 
	mPORT
 [32];

648 
uöt32_t
 
	mRESERVED0
[864];

649 
__IO
 
uöt32_t
 
	mTER
;

650 
uöt32_t
 
	mRESERVED1
[15];

651 
__IO
 
uöt32_t
 
	mTPR
;

652 
uöt32_t
 
	mRESERVED2
[15];

653 
__IO
 
uöt32_t
 
	mTCR
;

654 
uöt32_t
 
	mRESERVED3
[29];

655 
__O
 
uöt32_t
 
	mIWR
;

656 
__I
 
uöt32_t
 
	mIRR
;

657 
__IO
 
uöt32_t
 
	mIMCR
;

658 
uöt32_t
 
	mRESERVED4
[43];

659 
__O
 
uöt32_t
 
	mLAR
;

660 
__I
 
uöt32_t
 
	mLSR
;

661 
uöt32_t
 
	mRESERVED5
[6];

662 
__I
 
uöt32_t
 
	mPID4
;

663 
__I
 
uöt32_t
 
	mPID5
;

664 
__I
 
uöt32_t
 
	mPID6
;

665 
__I
 
uöt32_t
 
	mPID7
;

666 
__I
 
uöt32_t
 
	mPID0
;

667 
__I
 
uöt32_t
 
	mPID1
;

668 
__I
 
uöt32_t
 
	mPID2
;

669 
__I
 
uöt32_t
 
	mPID3
;

670 
__I
 
uöt32_t
 
	mCID0
;

671 
__I
 
uöt32_t
 
	mCID1
;

672 
__I
 
uöt32_t
 
	mCID2
;

673 
__I
 
uöt32_t
 
	mCID3
;

674 } 
	tITM_Ty≥
;

677 
	#ITM_TPR_PRIVMASK_Pos
 0

	)

678 
	#ITM_TPR_PRIVMASK_Msk
 (0xFUL << 
ITM_TPR_PRIVMASK_Pos
Ë

	)

681 
	#ITM_TCR_BUSY_Pos
 23

	)

682 
	#ITM_TCR_BUSY_Msk
 (1UL << 
ITM_TCR_BUSY_Pos
Ë

	)

684 
	#ITM_TCR_Tø˚BusID_Pos
 16

	)

685 
	#ITM_TCR_Tø˚BusID_Msk
 (0x7FUL << 
ITM_TCR_Tø˚BusID_Pos
Ë

	)

687 
	#ITM_TCR_GTSFREQ_Pos
 10

	)

688 
	#ITM_TCR_GTSFREQ_Msk
 (3UL << 
ITM_TCR_GTSFREQ_Pos
Ë

	)

690 
	#ITM_TCR_TSPªsˇÀ_Pos
 8

	)

691 
	#ITM_TCR_TSPªsˇÀ_Msk
 (3UL << 
ITM_TCR_TSPªsˇÀ_Pos
Ë

	)

693 
	#ITM_TCR_SWOENA_Pos
 4

	)

694 
	#ITM_TCR_SWOENA_Msk
 (1UL << 
ITM_TCR_SWOENA_Pos
Ë

	)

696 
	#ITM_TCR_DWTENA_Pos
 3

	)

697 
	#ITM_TCR_DWTENA_Msk
 (1UL << 
ITM_TCR_DWTENA_Pos
Ë

	)

699 
	#ITM_TCR_SYNCENA_Pos
 2

	)

700 
	#ITM_TCR_SYNCENA_Msk
 (1UL << 
ITM_TCR_SYNCENA_Pos
Ë

	)

702 
	#ITM_TCR_TSENA_Pos
 1

	)

703 
	#ITM_TCR_TSENA_Msk
 (1UL << 
ITM_TCR_TSENA_Pos
Ë

	)

705 
	#ITM_TCR_ITMENA_Pos
 0

	)

706 
	#ITM_TCR_ITMENA_Msk
 (1UL << 
ITM_TCR_ITMENA_Pos
Ë

	)

709 
	#ITM_IWR_ATVALIDM_Pos
 0

	)

710 
	#ITM_IWR_ATVALIDM_Msk
 (1UL << 
ITM_IWR_ATVALIDM_Pos
Ë

	)

713 
	#ITM_IRR_ATREADYM_Pos
 0

	)

714 
	#ITM_IRR_ATREADYM_Msk
 (1UL << 
ITM_IRR_ATREADYM_Pos
Ë

	)

717 
	#ITM_IMCR_INTEGRATION_Pos
 0

	)

718 
	#ITM_IMCR_INTEGRATION_Msk
 (1UL << 
ITM_IMCR_INTEGRATION_Pos
Ë

	)

721 
	#ITM_LSR_ByãAcc_Pos
 2

	)

722 
	#ITM_LSR_ByãAcc_Msk
 (1UL << 
ITM_LSR_ByãAcc_Pos
Ë

	)

724 
	#ITM_LSR_Ac˚ss_Pos
 1

	)

725 
	#ITM_LSR_Ac˚ss_Msk
 (1UL << 
ITM_LSR_Ac˚ss_Pos
Ë

	)

727 
	#ITM_LSR_Pª£¡_Pos
 0

	)

728 
	#ITM_LSR_Pª£¡_Msk
 (1UL << 
ITM_LSR_Pª£¡_Pos
Ë

	)

743 
__IO
 
uöt32_t
 
	mCTRL
;

744 
__IO
 
uöt32_t
 
	mCYCCNT
;

745 
__IO
 
uöt32_t
 
	mCPICNT
;

746 
__IO
 
uöt32_t
 
	mEXCCNT
;

747 
__IO
 
uöt32_t
 
	mSLEEPCNT
;

748 
__IO
 
uöt32_t
 
	mLSUCNT
;

749 
__IO
 
uöt32_t
 
	mFOLDCNT
;

750 
__I
 
uöt32_t
 
	mPCSR
;

751 
__IO
 
uöt32_t
 
	mCOMP0
;

752 
__IO
 
uöt32_t
 
	mMASK0
;

753 
__IO
 
uöt32_t
 
	mFUNCTION0
;

754 
uöt32_t
 
	mRESERVED0
[1];

755 
__IO
 
uöt32_t
 
	mCOMP1
;

756 
__IO
 
uöt32_t
 
	mMASK1
;

757 
__IO
 
uöt32_t
 
	mFUNCTION1
;

758 
uöt32_t
 
	mRESERVED1
[1];

759 
__IO
 
uöt32_t
 
	mCOMP2
;

760 
__IO
 
uöt32_t
 
	mMASK2
;

761 
__IO
 
uöt32_t
 
	mFUNCTION2
;

762 
uöt32_t
 
	mRESERVED2
[1];

763 
__IO
 
uöt32_t
 
	mCOMP3
;

764 
__IO
 
uöt32_t
 
	mMASK3
;

765 
__IO
 
uöt32_t
 
	mFUNCTION3
;

766 } 
	tDWT_Ty≥
;

769 
	#DWT_CTRL_NUMCOMP_Pos
 28

	)

770 
	#DWT_CTRL_NUMCOMP_Msk
 (0xFUL << 
DWT_CTRL_NUMCOMP_Pos
Ë

	)

772 
	#DWT_CTRL_NOTRCPKT_Pos
 27

	)

773 
	#DWT_CTRL_NOTRCPKT_Msk
 (0x1UL << 
DWT_CTRL_NOTRCPKT_Pos
Ë

	)

775 
	#DWT_CTRL_NOEXTTRIG_Pos
 26

	)

776 
	#DWT_CTRL_NOEXTTRIG_Msk
 (0x1UL << 
DWT_CTRL_NOEXTTRIG_Pos
Ë

	)

778 
	#DWT_CTRL_NOCYCCNT_Pos
 25

	)

779 
	#DWT_CTRL_NOCYCCNT_Msk
 (0x1UL << 
DWT_CTRL_NOCYCCNT_Pos
Ë

	)

781 
	#DWT_CTRL_NOPRFCNT_Pos
 24

	)

782 
	#DWT_CTRL_NOPRFCNT_Msk
 (0x1UL << 
DWT_CTRL_NOPRFCNT_Pos
Ë

	)

784 
	#DWT_CTRL_CYCEVTENA_Pos
 22

	)

785 
	#DWT_CTRL_CYCEVTENA_Msk
 (0x1UL << 
DWT_CTRL_CYCEVTENA_Pos
Ë

	)

787 
	#DWT_CTRL_FOLDEVTENA_Pos
 21

	)

788 
	#DWT_CTRL_FOLDEVTENA_Msk
 (0x1UL << 
DWT_CTRL_FOLDEVTENA_Pos
Ë

	)

790 
	#DWT_CTRL_LSUEVTENA_Pos
 20

	)

791 
	#DWT_CTRL_LSUEVTENA_Msk
 (0x1UL << 
DWT_CTRL_LSUEVTENA_Pos
Ë

	)

793 
	#DWT_CTRL_SLEEPEVTENA_Pos
 19

	)

794 
	#DWT_CTRL_SLEEPEVTENA_Msk
 (0x1UL << 
DWT_CTRL_SLEEPEVTENA_Pos
Ë

	)

796 
	#DWT_CTRL_EXCEVTENA_Pos
 18

	)

797 
	#DWT_CTRL_EXCEVTENA_Msk
 (0x1UL << 
DWT_CTRL_EXCEVTENA_Pos
Ë

	)

799 
	#DWT_CTRL_CPIEVTENA_Pos
 17

	)

800 
	#DWT_CTRL_CPIEVTENA_Msk
 (0x1UL << 
DWT_CTRL_CPIEVTENA_Pos
Ë

	)

802 
	#DWT_CTRL_EXCTRCENA_Pos
 16

	)

803 
	#DWT_CTRL_EXCTRCENA_Msk
 (0x1UL << 
DWT_CTRL_EXCTRCENA_Pos
Ë

	)

805 
	#DWT_CTRL_PCSAMPLENA_Pos
 12

	)

806 
	#DWT_CTRL_PCSAMPLENA_Msk
 (0x1UL << 
DWT_CTRL_PCSAMPLENA_Pos
Ë

	)

808 
	#DWT_CTRL_SYNCTAP_Pos
 10

	)

809 
	#DWT_CTRL_SYNCTAP_Msk
 (0x3UL << 
DWT_CTRL_SYNCTAP_Pos
Ë

	)

811 
	#DWT_CTRL_CYCTAP_Pos
 9

	)

812 
	#DWT_CTRL_CYCTAP_Msk
 (0x1UL << 
DWT_CTRL_CYCTAP_Pos
Ë

	)

814 
	#DWT_CTRL_POSTINIT_Pos
 5

	)

815 
	#DWT_CTRL_POSTINIT_Msk
 (0xFUL << 
DWT_CTRL_POSTINIT_Pos
Ë

	)

817 
	#DWT_CTRL_POSTPRESET_Pos
 1

	)

818 
	#DWT_CTRL_POSTPRESET_Msk
 (0xFUL << 
DWT_CTRL_POSTPRESET_Pos
Ë

	)

820 
	#DWT_CTRL_CYCCNTENA_Pos
 0

	)

821 
	#DWT_CTRL_CYCCNTENA_Msk
 (0x1UL << 
DWT_CTRL_CYCCNTENA_Pos
Ë

	)

824 
	#DWT_CPICNT_CPICNT_Pos
 0

	)

825 
	#DWT_CPICNT_CPICNT_Msk
 (0xFFUL << 
DWT_CPICNT_CPICNT_Pos
Ë

	)

828 
	#DWT_EXCCNT_EXCCNT_Pos
 0

	)

829 
	#DWT_EXCCNT_EXCCNT_Msk
 (0xFFUL << 
DWT_EXCCNT_EXCCNT_Pos
Ë

	)

832 
	#DWT_SLEEPCNT_SLEEPCNT_Pos
 0

	)

833 
	#DWT_SLEEPCNT_SLEEPCNT_Msk
 (0xFFUL << 
DWT_SLEEPCNT_SLEEPCNT_Pos
Ë

	)

836 
	#DWT_LSUCNT_LSUCNT_Pos
 0

	)

837 
	#DWT_LSUCNT_LSUCNT_Msk
 (0xFFUL << 
DWT_LSUCNT_LSUCNT_Pos
Ë

	)

840 
	#DWT_FOLDCNT_FOLDCNT_Pos
 0

	)

841 
	#DWT_FOLDCNT_FOLDCNT_Msk
 (0xFFUL << 
DWT_FOLDCNT_FOLDCNT_Pos
Ë

	)

844 
	#DWT_MASK_MASK_Pos
 0

	)

845 
	#DWT_MASK_MASK_Msk
 (0x1FUL << 
DWT_MASK_MASK_Pos
Ë

	)

848 
	#DWT_FUNCTION_MATCHED_Pos
 24

	)

849 
	#DWT_FUNCTION_MATCHED_Msk
 (0x1UL << 
DWT_FUNCTION_MATCHED_Pos
Ë

	)

851 
	#DWT_FUNCTION_DATAVADDR1_Pos
 16

	)

852 
	#DWT_FUNCTION_DATAVADDR1_Msk
 (0xFUL << 
DWT_FUNCTION_DATAVADDR1_Pos
Ë

	)

854 
	#DWT_FUNCTION_DATAVADDR0_Pos
 12

	)

855 
	#DWT_FUNCTION_DATAVADDR0_Msk
 (0xFUL << 
DWT_FUNCTION_DATAVADDR0_Pos
Ë

	)

857 
	#DWT_FUNCTION_DATAVSIZE_Pos
 10

	)

858 
	#DWT_FUNCTION_DATAVSIZE_Msk
 (0x3UL << 
DWT_FUNCTION_DATAVSIZE_Pos
Ë

	)

860 
	#DWT_FUNCTION_LNK1ENA_Pos
 9

	)

861 
	#DWT_FUNCTION_LNK1ENA_Msk
 (0x1UL << 
DWT_FUNCTION_LNK1ENA_Pos
Ë

	)

863 
	#DWT_FUNCTION_DATAVMATCH_Pos
 8

	)

864 
	#DWT_FUNCTION_DATAVMATCH_Msk
 (0x1UL << 
DWT_FUNCTION_DATAVMATCH_Pos
Ë

	)

866 
	#DWT_FUNCTION_CYCMATCH_Pos
 7

	)

867 
	#DWT_FUNCTION_CYCMATCH_Msk
 (0x1UL << 
DWT_FUNCTION_CYCMATCH_Pos
Ë

	)

869 
	#DWT_FUNCTION_EMITRANGE_Pos
 5

	)

870 
	#DWT_FUNCTION_EMITRANGE_Msk
 (0x1UL << 
DWT_FUNCTION_EMITRANGE_Pos
Ë

	)

872 
	#DWT_FUNCTION_FUNCTION_Pos
 0

	)

873 
	#DWT_FUNCTION_FUNCTION_Msk
 (0xFUL << 
DWT_FUNCTION_FUNCTION_Pos
Ë

	)

888 
__IO
 
uöt32_t
 
	mSSPSR
;

889 
__IO
 
uöt32_t
 
	mCSPSR
;

890 
uöt32_t
 
	mRESERVED0
[2];

891 
__IO
 
uöt32_t
 
	mACPR
;

892 
uöt32_t
 
	mRESERVED1
[55];

893 
__IO
 
uöt32_t
 
	mSPPR
;

894 
uöt32_t
 
	mRESERVED2
[131];

895 
__I
 
uöt32_t
 
	mFFSR
;

896 
__IO
 
uöt32_t
 
	mFFCR
;

897 
__I
 
uöt32_t
 
	mFSCR
;

898 
uöt32_t
 
	mRESERVED3
[759];

899 
__I
 
uöt32_t
 
	mTRIGGER
;

900 
__I
 
uöt32_t
 
	mFIFO0
;

901 
__I
 
uöt32_t
 
	mITATBCTR2
;

902 
uöt32_t
 
	mRESERVED4
[1];

903 
__I
 
uöt32_t
 
	mITATBCTR0
;

904 
__I
 
uöt32_t
 
	mFIFO1
;

905 
__IO
 
uöt32_t
 
	mITCTRL
;

906 
uöt32_t
 
	mRESERVED5
[39];

907 
__IO
 
uöt32_t
 
	mCLAIMSET
;

908 
__IO
 
uöt32_t
 
	mCLAIMCLR
;

909 
uöt32_t
 
	mRESERVED7
[8];

910 
__I
 
uöt32_t
 
	mDEVID
;

911 
__I
 
uöt32_t
 
	mDEVTYPE
;

912 } 
	tTPI_Ty≥
;

915 
	#TPI_ACPR_PRESCALER_Pos
 0

	)

916 
	#TPI_ACPR_PRESCALER_Msk
 (0x1FFFUL << 
TPI_ACPR_PRESCALER_Pos
Ë

	)

919 
	#TPI_SPPR_TXMODE_Pos
 0

	)

920 
	#TPI_SPPR_TXMODE_Msk
 (0x3UL << 
TPI_SPPR_TXMODE_Pos
Ë

	)

923 
	#TPI_FFSR_FtN⁄St›_Pos
 3

	)

924 
	#TPI_FFSR_FtN⁄St›_Msk
 (0x1UL << 
TPI_FFSR_FtN⁄St›_Pos
Ë

	)

926 
	#TPI_FFSR_TCPª£¡_Pos
 2

	)

927 
	#TPI_FFSR_TCPª£¡_Msk
 (0x1UL << 
TPI_FFSR_TCPª£¡_Pos
Ë

	)

929 
	#TPI_FFSR_FtSt›≥d_Pos
 1

	)

930 
	#TPI_FFSR_FtSt›≥d_Msk
 (0x1UL << 
TPI_FFSR_FtSt›≥d_Pos
Ë

	)

932 
	#TPI_FFSR_FlInProg_Pos
 0

	)

933 
	#TPI_FFSR_FlInProg_Msk
 (0x1UL << 
TPI_FFSR_FlInProg_Pos
Ë

	)

936 
	#TPI_FFCR_TrigIn_Pos
 8

	)

937 
	#TPI_FFCR_TrigIn_Msk
 (0x1UL << 
TPI_FFCR_TrigIn_Pos
Ë

	)

939 
	#TPI_FFCR_EnFC⁄t_Pos
 1

	)

940 
	#TPI_FFCR_EnFC⁄t_Msk
 (0x1UL << 
TPI_FFCR_EnFC⁄t_Pos
Ë

	)

943 
	#TPI_TRIGGER_TRIGGER_Pos
 0

	)

944 
	#TPI_TRIGGER_TRIGGER_Msk
 (0x1UL << 
TPI_TRIGGER_TRIGGER_Pos
Ë

	)

947 
	#TPI_FIFO0_ITM_ATVALID_Pos
 29

	)

948 
	#TPI_FIFO0_ITM_ATVALID_Msk
 (0x3UL << 
TPI_FIFO0_ITM_ATVALID_Pos
Ë

	)

950 
	#TPI_FIFO0_ITM_byãcou¡_Pos
 27

	)

951 
	#TPI_FIFO0_ITM_byãcou¡_Msk
 (0x3UL << 
TPI_FIFO0_ITM_byãcou¡_Pos
Ë

	)

953 
	#TPI_FIFO0_ETM_ATVALID_Pos
 26

	)

954 
	#TPI_FIFO0_ETM_ATVALID_Msk
 (0x3UL << 
TPI_FIFO0_ETM_ATVALID_Pos
Ë

	)

956 
	#TPI_FIFO0_ETM_byãcou¡_Pos
 24

	)

957 
	#TPI_FIFO0_ETM_byãcou¡_Msk
 (0x3UL << 
TPI_FIFO0_ETM_byãcou¡_Pos
Ë

	)

959 
	#TPI_FIFO0_ETM2_Pos
 16

	)

960 
	#TPI_FIFO0_ETM2_Msk
 (0xFFUL << 
TPI_FIFO0_ETM2_Pos
Ë

	)

962 
	#TPI_FIFO0_ETM1_Pos
 8

	)

963 
	#TPI_FIFO0_ETM1_Msk
 (0xFFUL << 
TPI_FIFO0_ETM1_Pos
Ë

	)

965 
	#TPI_FIFO0_ETM0_Pos
 0

	)

966 
	#TPI_FIFO0_ETM0_Msk
 (0xFFUL << 
TPI_FIFO0_ETM0_Pos
Ë

	)

969 
	#TPI_ITATBCTR2_ATREADY_Pos
 0

	)

970 
	#TPI_ITATBCTR2_ATREADY_Msk
 (0x1UL << 
TPI_ITATBCTR2_ATREADY_Pos
Ë

	)

973 
	#TPI_FIFO1_ITM_ATVALID_Pos
 29

	)

974 
	#TPI_FIFO1_ITM_ATVALID_Msk
 (0x3UL << 
TPI_FIFO1_ITM_ATVALID_Pos
Ë

	)

976 
	#TPI_FIFO1_ITM_byãcou¡_Pos
 27

	)

977 
	#TPI_FIFO1_ITM_byãcou¡_Msk
 (0x3UL << 
TPI_FIFO1_ITM_byãcou¡_Pos
Ë

	)

979 
	#TPI_FIFO1_ETM_ATVALID_Pos
 26

	)

980 
	#TPI_FIFO1_ETM_ATVALID_Msk
 (0x3UL << 
TPI_FIFO1_ETM_ATVALID_Pos
Ë

	)

982 
	#TPI_FIFO1_ETM_byãcou¡_Pos
 24

	)

983 
	#TPI_FIFO1_ETM_byãcou¡_Msk
 (0x3UL << 
TPI_FIFO1_ETM_byãcou¡_Pos
Ë

	)

985 
	#TPI_FIFO1_ITM2_Pos
 16

	)

986 
	#TPI_FIFO1_ITM2_Msk
 (0xFFUL << 
TPI_FIFO1_ITM2_Pos
Ë

	)

988 
	#TPI_FIFO1_ITM1_Pos
 8

	)

989 
	#TPI_FIFO1_ITM1_Msk
 (0xFFUL << 
TPI_FIFO1_ITM1_Pos
Ë

	)

991 
	#TPI_FIFO1_ITM0_Pos
 0

	)

992 
	#TPI_FIFO1_ITM0_Msk
 (0xFFUL << 
TPI_FIFO1_ITM0_Pos
Ë

	)

995 
	#TPI_ITATBCTR0_ATREADY_Pos
 0

	)

996 
	#TPI_ITATBCTR0_ATREADY_Msk
 (0x1UL << 
TPI_ITATBCTR0_ATREADY_Pos
Ë

	)

999 
	#TPI_ITCTRL_Mode_Pos
 0

	)

1000 
	#TPI_ITCTRL_Mode_Msk
 (0x1UL << 
TPI_ITCTRL_Mode_Pos
Ë

	)

1003 
	#TPI_DEVID_NRZVALID_Pos
 11

	)

1004 
	#TPI_DEVID_NRZVALID_Msk
 (0x1UL << 
TPI_DEVID_NRZVALID_Pos
Ë

	)

1006 
	#TPI_DEVID_MANCVALID_Pos
 10

	)

1007 
	#TPI_DEVID_MANCVALID_Msk
 (0x1UL << 
TPI_DEVID_MANCVALID_Pos
Ë

	)

1009 
	#TPI_DEVID_PTINVALID_Pos
 9

	)

1010 
	#TPI_DEVID_PTINVALID_Msk
 (0x1UL << 
TPI_DEVID_PTINVALID_Pos
Ë

	)

1012 
	#TPI_DEVID_MöBufSz_Pos
 6

	)

1013 
	#TPI_DEVID_MöBufSz_Msk
 (0x7UL << 
TPI_DEVID_MöBufSz_Pos
Ë

	)

1015 
	#TPI_DEVID_AsynClkIn_Pos
 5

	)

1016 
	#TPI_DEVID_AsynClkIn_Msk
 (0x1UL << 
TPI_DEVID_AsynClkIn_Pos
Ë

	)

1018 
	#TPI_DEVID_NrTø˚I≈ut_Pos
 0

	)

1019 
	#TPI_DEVID_NrTø˚I≈ut_Msk
 (0x1FUL << 
TPI_DEVID_NrTø˚I≈ut_Pos
Ë

	)

1022 
	#TPI_DEVTYPE_SubTy≥_Pos
 0

	)

1023 
	#TPI_DEVTYPE_SubTy≥_Msk
 (0xFUL << 
TPI_DEVTYPE_SubTy≥_Pos
Ë

	)

1025 
	#TPI_DEVTYPE_Maj‹Ty≥_Pos
 4

	)

1026 
	#TPI_DEVTYPE_Maj‹Ty≥_Msk
 (0xFUL << 
TPI_DEVTYPE_Maj‹Ty≥_Pos
Ë

	)

1031 #i‡(
__MPU_PRESENT
 == 1)

1042 
__I
 
uöt32_t
 
	mTYPE
;

1043 
__IO
 
uöt32_t
 
	mCTRL
;

1044 
__IO
 
uöt32_t
 
	mRNR
;

1045 
__IO
 
uöt32_t
 
	mRBAR
;

1046 
__IO
 
uöt32_t
 
	mRASR
;

1047 
__IO
 
uöt32_t
 
	mRBAR_A1
;

1048 
__IO
 
uöt32_t
 
	mRASR_A1
;

1049 
__IO
 
uöt32_t
 
	mRBAR_A2
;

1050 
__IO
 
uöt32_t
 
	mRASR_A2
;

1051 
__IO
 
uöt32_t
 
	mRBAR_A3
;

1052 
__IO
 
uöt32_t
 
	mRASR_A3
;

1053 } 
	tMPU_Ty≥
;

1056 
	#MPU_TYPE_IREGION_Pos
 16

	)

1057 
	#MPU_TYPE_IREGION_Msk
 (0xFFUL << 
MPU_TYPE_IREGION_Pos
Ë

	)

1059 
	#MPU_TYPE_DREGION_Pos
 8

	)

1060 
	#MPU_TYPE_DREGION_Msk
 (0xFFUL << 
MPU_TYPE_DREGION_Pos
Ë

	)

1062 
	#MPU_TYPE_SEPARATE_Pos
 0

	)

1063 
	#MPU_TYPE_SEPARATE_Msk
 (1UL << 
MPU_TYPE_SEPARATE_Pos
Ë

	)

1066 
	#MPU_CTRL_PRIVDEFENA_Pos
 2

	)

1067 
	#MPU_CTRL_PRIVDEFENA_Msk
 (1UL << 
MPU_CTRL_PRIVDEFENA_Pos
Ë

	)

1069 
	#MPU_CTRL_HFNMIENA_Pos
 1

	)

1070 
	#MPU_CTRL_HFNMIENA_Msk
 (1UL << 
MPU_CTRL_HFNMIENA_Pos
Ë

	)

1072 
	#MPU_CTRL_ENABLE_Pos
 0

	)

1073 
	#MPU_CTRL_ENABLE_Msk
 (1UL << 
MPU_CTRL_ENABLE_Pos
Ë

	)

1076 
	#MPU_RNR_REGION_Pos
 0

	)

1077 
	#MPU_RNR_REGION_Msk
 (0xFFUL << 
MPU_RNR_REGION_Pos
Ë

	)

1080 
	#MPU_RBAR_ADDR_Pos
 5

	)

1081 
	#MPU_RBAR_ADDR_Msk
 (0x7FFFFFFUL << 
MPU_RBAR_ADDR_Pos
Ë

	)

1083 
	#MPU_RBAR_VALID_Pos
 4

	)

1084 
	#MPU_RBAR_VALID_Msk
 (1UL << 
MPU_RBAR_VALID_Pos
Ë

	)

1086 
	#MPU_RBAR_REGION_Pos
 0

	)

1087 
	#MPU_RBAR_REGION_Msk
 (0xFUL << 
MPU_RBAR_REGION_Pos
Ë

	)

1090 
	#MPU_RASR_ATTRS_Pos
 16

	)

1091 
	#MPU_RASR_ATTRS_Msk
 (0xFFFFUL << 
MPU_RASR_ATTRS_Pos
Ë

	)

1093 
	#MPU_RASR_XN_Pos
 28

	)

1094 
	#MPU_RASR_XN_Msk
 (1UL << 
MPU_RASR_XN_Pos
Ë

	)

1096 
	#MPU_RASR_AP_Pos
 24

	)

1097 
	#MPU_RASR_AP_Msk
 (0x7UL << 
MPU_RASR_AP_Pos
Ë

	)

1099 
	#MPU_RASR_TEX_Pos
 19

	)

1100 
	#MPU_RASR_TEX_Msk
 (0x7UL << 
MPU_RASR_TEX_Pos
Ë

	)

1102 
	#MPU_RASR_S_Pos
 18

	)

1103 
	#MPU_RASR_S_Msk
 (1UL << 
MPU_RASR_S_Pos
Ë

	)

1105 
	#MPU_RASR_C_Pos
 17

	)

1106 
	#MPU_RASR_C_Msk
 (1UL << 
MPU_RASR_C_Pos
Ë

	)

1108 
	#MPU_RASR_B_Pos
 16

	)

1109 
	#MPU_RASR_B_Msk
 (1UL << 
MPU_RASR_B_Pos
Ë

	)

1111 
	#MPU_RASR_SRD_Pos
 8

	)

1112 
	#MPU_RASR_SRD_Msk
 (0xFFUL << 
MPU_RASR_SRD_Pos
Ë

	)

1114 
	#MPU_RASR_SIZE_Pos
 1

	)

1115 
	#MPU_RASR_SIZE_Msk
 (0x1FUL << 
MPU_RASR_SIZE_Pos
Ë

	)

1117 
	#MPU_RASR_ENABLE_Pos
 0

	)

1118 
	#MPU_RASR_ENABLE_Msk
 (1UL << 
MPU_RASR_ENABLE_Pos
Ë

	)

1134 
__IO
 
uöt32_t
 
	mDHCSR
;

1135 
__O
 
uöt32_t
 
	mDCRSR
;

1136 
__IO
 
uöt32_t
 
	mDCRDR
;

1137 
__IO
 
uöt32_t
 
	mDEMCR
;

1138 } 
	tC‹eDebug_Ty≥
;

1141 
	#C‹eDebug_DHCSR_DBGKEY_Pos
 16

	)

1142 
	#C‹eDebug_DHCSR_DBGKEY_Msk
 (0xFFFFUL << 
C‹eDebug_DHCSR_DBGKEY_Pos
Ë

	)

1144 
	#C‹eDebug_DHCSR_S_RESET_ST_Pos
 25

	)

1145 
	#C‹eDebug_DHCSR_S_RESET_ST_Msk
 (1UL << 
C‹eDebug_DHCSR_S_RESET_ST_Pos
Ë

	)

1147 
	#C‹eDebug_DHCSR_S_RETIRE_ST_Pos
 24

	)

1148 
	#C‹eDebug_DHCSR_S_RETIRE_ST_Msk
 (1UL << 
C‹eDebug_DHCSR_S_RETIRE_ST_Pos
Ë

	)

1150 
	#C‹eDebug_DHCSR_S_LOCKUP_Pos
 19

	)

1151 
	#C‹eDebug_DHCSR_S_LOCKUP_Msk
 (1UL << 
C‹eDebug_DHCSR_S_LOCKUP_Pos
Ë

	)

1153 
	#C‹eDebug_DHCSR_S_SLEEP_Pos
 18

	)

1154 
	#C‹eDebug_DHCSR_S_SLEEP_Msk
 (1UL << 
C‹eDebug_DHCSR_S_SLEEP_Pos
Ë

	)

1156 
	#C‹eDebug_DHCSR_S_HALT_Pos
 17

	)

1157 
	#C‹eDebug_DHCSR_S_HALT_Msk
 (1UL << 
C‹eDebug_DHCSR_S_HALT_Pos
Ë

	)

1159 
	#C‹eDebug_DHCSR_S_REGRDY_Pos
 16

	)

1160 
	#C‹eDebug_DHCSR_S_REGRDY_Msk
 (1UL << 
C‹eDebug_DHCSR_S_REGRDY_Pos
Ë

	)

1162 
	#C‹eDebug_DHCSR_C_SNAPSTALL_Pos
 5

	)

1163 
	#C‹eDebug_DHCSR_C_SNAPSTALL_Msk
 (1UL << 
C‹eDebug_DHCSR_C_SNAPSTALL_Pos
Ë

	)

1165 
	#C‹eDebug_DHCSR_C_MASKINTS_Pos
 3

	)

1166 
	#C‹eDebug_DHCSR_C_MASKINTS_Msk
 (1UL << 
C‹eDebug_DHCSR_C_MASKINTS_Pos
Ë

	)

1168 
	#C‹eDebug_DHCSR_C_STEP_Pos
 2

	)

1169 
	#C‹eDebug_DHCSR_C_STEP_Msk
 (1UL << 
C‹eDebug_DHCSR_C_STEP_Pos
Ë

	)

1171 
	#C‹eDebug_DHCSR_C_HALT_Pos
 1

	)

1172 
	#C‹eDebug_DHCSR_C_HALT_Msk
 (1UL << 
C‹eDebug_DHCSR_C_HALT_Pos
Ë

	)

1174 
	#C‹eDebug_DHCSR_C_DEBUGEN_Pos
 0

	)

1175 
	#C‹eDebug_DHCSR_C_DEBUGEN_Msk
 (1UL << 
C‹eDebug_DHCSR_C_DEBUGEN_Pos
Ë

	)

1178 
	#C‹eDebug_DCRSR_REGWnR_Pos
 16

	)

1179 
	#C‹eDebug_DCRSR_REGWnR_Msk
 (1UL << 
C‹eDebug_DCRSR_REGWnR_Pos
Ë

	)

1181 
	#C‹eDebug_DCRSR_REGSEL_Pos
 0

	)

1182 
	#C‹eDebug_DCRSR_REGSEL_Msk
 (0x1FUL << 
C‹eDebug_DCRSR_REGSEL_Pos
Ë

	)

1185 
	#C‹eDebug_DEMCR_TRCENA_Pos
 24

	)

1186 
	#C‹eDebug_DEMCR_TRCENA_Msk
 (1UL << 
C‹eDebug_DEMCR_TRCENA_Pos
Ë

	)

1188 
	#C‹eDebug_DEMCR_MON_REQ_Pos
 19

	)

1189 
	#C‹eDebug_DEMCR_MON_REQ_Msk
 (1UL << 
C‹eDebug_DEMCR_MON_REQ_Pos
Ë

	)

1191 
	#C‹eDebug_DEMCR_MON_STEP_Pos
 18

	)

1192 
	#C‹eDebug_DEMCR_MON_STEP_Msk
 (1UL << 
C‹eDebug_DEMCR_MON_STEP_Pos
Ë

	)

1194 
	#C‹eDebug_DEMCR_MON_PEND_Pos
 17

	)

1195 
	#C‹eDebug_DEMCR_MON_PEND_Msk
 (1UL << 
C‹eDebug_DEMCR_MON_PEND_Pos
Ë

	)

1197 
	#C‹eDebug_DEMCR_MON_EN_Pos
 16

	)

1198 
	#C‹eDebug_DEMCR_MON_EN_Msk
 (1UL << 
C‹eDebug_DEMCR_MON_EN_Pos
Ë

	)

1200 
	#C‹eDebug_DEMCR_VC_HARDERR_Pos
 10

	)

1201 
	#C‹eDebug_DEMCR_VC_HARDERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_HARDERR_Pos
Ë

	)

1203 
	#C‹eDebug_DEMCR_VC_INTERR_Pos
 9

	)

1204 
	#C‹eDebug_DEMCR_VC_INTERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_INTERR_Pos
Ë

	)

1206 
	#C‹eDebug_DEMCR_VC_BUSERR_Pos
 8

	)

1207 
	#C‹eDebug_DEMCR_VC_BUSERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_BUSERR_Pos
Ë

	)

1209 
	#C‹eDebug_DEMCR_VC_STATERR_Pos
 7

	)

1210 
	#C‹eDebug_DEMCR_VC_STATERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_STATERR_Pos
Ë

	)

1212 
	#C‹eDebug_DEMCR_VC_CHKERR_Pos
 6

	)

1213 
	#C‹eDebug_DEMCR_VC_CHKERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_CHKERR_Pos
Ë

	)

1215 
	#C‹eDebug_DEMCR_VC_NOCPERR_Pos
 5

	)

1216 
	#C‹eDebug_DEMCR_VC_NOCPERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_NOCPERR_Pos
Ë

	)

1218 
	#C‹eDebug_DEMCR_VC_MMERR_Pos
 4

	)

1219 
	#C‹eDebug_DEMCR_VC_MMERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_MMERR_Pos
Ë

	)

1221 
	#C‹eDebug_DEMCR_VC_CORERESET_Pos
 0

	)

1222 
	#C‹eDebug_DEMCR_VC_CORERESET_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_CORERESET_Pos
Ë

	)

1234 
	#SCS_BASE
 (0xE000E000ULË

	)

1235 
	#ITM_BASE
 (0xE0000000ULË

	)

1236 
	#DWT_BASE
 (0xE0001000ULË

	)

1237 
	#TPI_BASE
 (0xE0040000ULË

	)

1238 
	#C‹eDebug_BASE
 (0xE000EDF0ULË

	)

1239 
	#SysTick_BASE
 (
SCS_BASE
 + 0x0010ULË

	)

1240 
	#NVIC_BASE
 (
SCS_BASE
 + 0x0100ULË

	)

1241 
	#SCB_BASE
 (
SCS_BASE
 + 0x0D00ULË

	)

1243 
	#SCnSCB
 ((
SCnSCB_Ty≥
 *Ë
SCS_BASE
 )

	)

1244 
	#SCB
 ((
SCB_Ty≥
 *Ë
SCB_BASE
 )

	)

1245 
	#SysTick
 ((
SysTick_Ty≥
 *Ë
SysTick_BASE
 )

	)

1246 
	#NVIC
 ((
NVIC_Ty≥
 *Ë
NVIC_BASE
 )

	)

1247 
	#ITM
 ((
ITM_Ty≥
 *Ë
ITM_BASE
 )

	)

1248 
	#DWT
 ((
DWT_Ty≥
 *Ë
DWT_BASE
 )

	)

1249 
	#TPI
 ((
TPI_Ty≥
 *Ë
TPI_BASE
 )

	)

1250 
	#C‹eDebug
 ((
C‹eDebug_Ty≥
 *Ë
C‹eDebug_BASE
Ë

	)

1252 #i‡(
__MPU_PRESENT
 == 1)

1253 
	#MPU_BASE
 (
SCS_BASE
 + 0x0D90ULË

	)

1254 
	#MPU
 ((
MPU_Ty≥
 *Ë
MPU_BASE
 )

	)

1291 
__STATIC_INLINE
 
	$NVIC_SëPri‹ôyGroupög
(
uöt32_t
 
Pri‹ôyGroup
)

1293 
uöt32_t
 
ªg_vÆue
;

1294 
uöt32_t
 
Pri‹ôyGroupTmp
 = (
Pri‹ôyGroup
 & (uint32_t)0x07);

1296 
ªg_vÆue
 = 
SCB
->
AIRCR
;

1297 
ªg_vÆue
 &~(
SCB_AIRCR_VECTKEY_Msk
 | 
SCB_AIRCR_PRIGROUP_Msk
);

1298 
ªg_vÆue
 = (reg_value |

1299 ((
uöt32_t
)0x5FA << 
SCB_AIRCR_VECTKEY_Pos
) |

1300 (
Pri‹ôyGroupTmp
 << 8));

1301 
SCB
->
AIRCR
 = 
ªg_vÆue
;

1302 
	}
}

1311 
__STATIC_INLINE
 
uöt32_t
 
	$NVIC_GëPri‹ôyGroupög
()

1313  ((
SCB
->
AIRCR
 & 
SCB_AIRCR_PRIGROUP_Msk
Ë>> 
SCB_AIRCR_PRIGROUP_Pos
);

1314 
	}
}

1323 
__STATIC_INLINE
 
	$NVIC_E«bÀIRQ
(
IRQn_Ty≥
 
IRQn
)

1325 
NVIC
->
ISER
[((
uöt32_t
)(
IRQn
) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));

1326 
	}
}

1335 
__STATIC_INLINE
 
	$NVIC_DißbÀIRQ
(
IRQn_Ty≥
 
IRQn
)

1337 
NVIC
->
ICER
[((
uöt32_t
)(
IRQn
) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));

1338 
	}
}

1351 
__STATIC_INLINE
 
uöt32_t
 
	$NVIC_GëPídögIRQ
(
IRQn_Ty≥
 
IRQn
)

1353 ((
uöt32_t
Ë((
NVIC
->
ISPR
[(uöt32_t)(
IRQn
) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0));

1354 
	}
}

1363 
__STATIC_INLINE
 
	$NVIC_SëPídögIRQ
(
IRQn_Ty≥
 
IRQn
)

1365 
NVIC
->
ISPR
[((
uöt32_t
)(
IRQn
) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));

1366 
	}
}

1375 
__STATIC_INLINE
 
	$NVIC_CÀ¨PídögIRQ
(
IRQn_Ty≥
 
IRQn
)

1377 
NVIC
->
ICPR
[((
uöt32_t
)(
IRQn
) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));

1378 
	}
}

1390 
__STATIC_INLINE
 
uöt32_t
 
	$NVIC_GëA˘ive
(
IRQn_Ty≥
 
IRQn
)

1392 ((
uöt32_t
)((
NVIC
->
IABR
[(uöt32_t)(
IRQn
) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0));

1393 
	}
}

1405 
__STATIC_INLINE
 
	$NVIC_SëPri‹ôy
(
IRQn_Ty≥
 
IRQn
, 
uöt32_t
 
¥i‹ôy
)

1407 if(
IRQn
 < 0) {

1408 
SCB
->
SHP
[((
uöt32_t
)(
IRQn
Ë& 0xF)-4] = ((
¥i‹ôy
 << (8 - 
__NVIC_PRIO_BITS
)) & 0xff); }

1410 
NVIC
->
IP
[(
uöt32_t
)(
IRQn
)] = ((
¥i‹ôy
 << (8 - 
__NVIC_PRIO_BITS
)) & 0xff); }

1411 
	}
}

1425 
__STATIC_INLINE
 
uöt32_t
 
	$NVIC_GëPri‹ôy
(
IRQn_Ty≥
 
IRQn
)

1428 if(
IRQn
 < 0) {

1429 ((
uöt32_t
)(
SCB
->
SHP
[((uöt32_t)(
IRQn
Ë& 0xF)-4] >> (8 - 
__NVIC_PRIO_BITS
))); }

1431 ((
uöt32_t
)(
NVIC
->
IP
[(uöt32_t)(
IRQn
)] >> (8 - 
__NVIC_PRIO_BITS
))); }

1432 
	}
}

1447 
__STATIC_INLINE
 
uöt32_t
 
	$NVIC_EncodePri‹ôy
 (
uöt32_t
 
Pri‹ôyGroup
, uöt32_à
Pªem±Pri‹ôy
, uöt32_à
SubPri‹ôy
)

1449 
uöt32_t
 
Pri‹ôyGroupTmp
 = (
Pri‹ôyGroup
 & 0x07);

1450 
uöt32_t
 
Pªem±Pri‹ôyBôs
;

1451 
uöt32_t
 
SubPri‹ôyBôs
;

1453 
Pªem±Pri‹ôyBôs
 = ((7 - 
Pri‹ôyGroupTmp
Ë> 
__NVIC_PRIO_BITS
) ? __NVIC_PRIO_BITS : 7 - PriorityGroupTmp;

1454 
SubPri‹ôyBôs
 = ((
Pri‹ôyGroupTmp
 + 
__NVIC_PRIO_BITS
) < 7) ? 0 : PriorityGroupTmp - 7 + __NVIC_PRIO_BITS;

1457 ((
Pªem±Pri‹ôy
 & ((1 << (
Pªem±Pri‹ôyBôs
)Ë- 1)Ë<< 
SubPri‹ôyBôs
) |

1458 ((
SubPri‹ôy
 & ((1 << (
SubPri‹ôyBôs
 )) - 1)))

1460 
	}
}

1475 
__STATIC_INLINE
 
	$NVIC_DecodePri‹ôy
 (
uöt32_t
 
Pri‹ôy
, uöt32_à
Pri‹ôyGroup
, uöt32_t* 
pPªem±Pri‹ôy
, uöt32_t* 
pSubPri‹ôy
)

1477 
uöt32_t
 
Pri‹ôyGroupTmp
 = (
Pri‹ôyGroup
 & 0x07);

1478 
uöt32_t
 
Pªem±Pri‹ôyBôs
;

1479 
uöt32_t
 
SubPri‹ôyBôs
;

1481 
Pªem±Pri‹ôyBôs
 = ((7 - 
Pri‹ôyGroupTmp
Ë> 
__NVIC_PRIO_BITS
) ? __NVIC_PRIO_BITS : 7 - PriorityGroupTmp;

1482 
SubPri‹ôyBôs
 = ((
Pri‹ôyGroupTmp
 + 
__NVIC_PRIO_BITS
) < 7) ? 0 : PriorityGroupTmp - 7 + __NVIC_PRIO_BITS;

1484 *
pPªem±Pri‹ôy
 = (
Pri‹ôy
 >> 
SubPri‹ôyBôs
Ë& ((1 << (
Pªem±Pri‹ôyBôs
)) - 1);

1485 *
pSubPri‹ôy
 = (
Pri‹ôy
 ) & ((1 << (
SubPri‹ôyBôs
 )) - 1);

1486 
	}
}

1493 
__STATIC_INLINE
 
	$NVIC_Sy°emRe£t
()

1495 
	`__DSB
();

1497 
SCB
->
AIRCR
 = ((0x5FA << 
SCB_AIRCR_VECTKEY_Pos
) |

1498 (
SCB
->
AIRCR
 & 
SCB_AIRCR_PRIGROUP_Msk
) |

1499 
SCB_AIRCR_SYSRESETREQ_Msk
);

1500 
	`__DSB
();

1502 
	}
}

1515 #i‡(
__Víd‹_SysTickC⁄fig
 == 0)

1532 
__STATIC_INLINE
 
uöt32_t
 
	$SysTick_C⁄fig
(
uöt32_t
 
ticks
)

1534 i‡((
ticks
 - 1Ë> 
SysTick_LOAD_RELOAD_Msk
)  (1);

1536 
SysTick
->
LOAD
 = 
ticks
 - 1;

1537 
	`NVIC_SëPri‹ôy
 (
SysTick_IRQn
, (1<<
__NVIC_PRIO_BITS
) - 1);

1538 
SysTick
->
VAL
 = 0;

1539 
SysTick
->
CTRL
 = 
SysTick_CTRL_CLKSOURCE_Msk
 |

1540 
SysTick_CTRL_TICKINT_Msk
 |

1541 
SysTick_CTRL_ENABLE_Msk
;

1543 
	}
}

1558 vﬁ©ûê
öt32_t
 
ITM_RxBuf„r
;

1559 
	#ITM_RXBUFFER_EMPTY
 0x5AA55AA5

	)

1572 
__STATIC_INLINE
 
uöt32_t
 
	$ITM_SídCh¨
 (
uöt32_t
 
ch
)

1574 i‡((
ITM
->
TCR
 & 
ITM_TCR_ITMENA_Msk
) &&

1575 (
ITM
->
TER
 & (1UL << 0) ) )

1577 
ITM
->
PORT
[0].
u32
 == 0);

1578 
ITM
->
PORT
[0].
u8
 = (
uöt8_t
Ë
ch
;

1580  (
ch
);

1581 
	}
}

1591 
__STATIC_INLINE
 
öt32_t
 
	$ITM_Re˚iveCh¨
 () {

1592 
öt32_t
 
ch
 = -1;

1594 i‡(
ITM_RxBuf„r
 !
ITM_RXBUFFER_EMPTY
) {

1595 
ch
 = 
ITM_RxBuf„r
;

1596 
ITM_RxBuf„r
 = 
ITM_RXBUFFER_EMPTY
;

1599  (
ch
);

1600 
	}
}

1610 
__STATIC_INLINE
 
öt32_t
 
	$ITM_CheckCh¨
 () {

1612 i‡(
ITM_RxBuf„r
 =
ITM_RXBUFFER_EMPTY
) {

1617 
	}
}

1625 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\core_cm4.h

38 #i‡
deföed
 ( 
__ICCARM__
 )

39 #¥agm®
sy°em_ö˛ude


42 #ifde‡
__˝lu•lus


46 #i‚de‡
__CORE_CM4_H_GENERIC


47 
	#__CORE_CM4_H_GENERIC


	)

71 
	#__CM4_CMSIS_VERSION_MAIN
 (0x03Ë

	)

72 
	#__CM4_CMSIS_VERSION_SUB
 (0x20Ë

	)

73 
	#__CM4_CMSIS_VERSION
 ((
__CM4_CMSIS_VERSION_MAIN
 << 16) | \

74 
__CM4_CMSIS_VERSION_SUB
 )

	)

76 
	#__CORTEX_M
 (0x04Ë

	)

79 #i‡ 
deföed
 ( 
__CC_ARM
 )

80 
	#__ASM
 
__asm


	)

81 
	#__INLINE
 
__ölöe


	)

82 
	#__STATIC_INLINE
 
__ölöe


	)

84 #ñi‡
deföed
 ( 
__ICCARM__
 )

85 
	#__ASM
 
__asm


	)

86 
	#__INLINE
 
ölöe


	)

87 
	#__STATIC_INLINE
 
ölöe


	)

89 #ñi‡
deföed
 ( 
__TMS470__
 )

90 
	#__ASM
 
__asm


	)

91 
	#__STATIC_INLINE
 
ölöe


	)

93 #ñi‡
deföed
 ( 
__GNUC__
 )

94 
	#__ASM
 
__asm


	)

95 
	#__INLINE
 
ölöe


	)

96 
	#__STATIC_INLINE
 
ölöe


	)

98 #ñi‡
deföed
 ( 
__TASKING__
 )

99 
	#__ASM
 
__asm


	)

100 
	#__INLINE
 
ölöe


	)

101 
	#__STATIC_INLINE
 
ölöe


	)

107 #i‡
deföed
 ( 
__CC_ARM
 )

108 #i‡
deföed
 
__TARGET_FPU_VFP


109 #i‡(
__FPU_PRESENT
 == 1)

110 
	#__FPU_USED
 1

	)

113 
	#__FPU_USED
 0

	)

116 
	#__FPU_USED
 0

	)

119 #ñi‡
deföed
 ( 
__ICCARM__
 )

120 #i‡
deföed
 
__ARMVFP__


121 #i‡(
__FPU_PRESENT
 == 1)

122 
	#__FPU_USED
 1

	)

125 
	#__FPU_USED
 0

	)

128 
	#__FPU_USED
 0

	)

131 #ñi‡
deföed
 ( 
__TMS470__
 )

132 #i‡
deföed
 
__TI_VFP_SUPPORT__


133 #i‡(
__FPU_PRESENT
 == 1)

134 
	#__FPU_USED
 1

	)

137 
	#__FPU_USED
 0

	)

140 
	#__FPU_USED
 0

	)

143 #ñi‡
deföed
 ( 
__GNUC__
 )

144 #i‡
deföed
 (
__VFP_FP__
Ë&& !deföed(
__SOFTFP__
)

145 #i‡(
__FPU_PRESENT
 == 1)

146 
	#__FPU_USED
 1

	)

149 
	#__FPU_USED
 0

	)

152 
	#__FPU_USED
 0

	)

155 #ñi‡
deföed
 ( 
__TASKING__
 )

156 #i‡
deföed
 
__FPU_VFP__


157 #i‡(
__FPU_PRESENT
 == 1)

158 
	#__FPU_USED
 1

	)

161 
	#__FPU_USED
 0

	)

164 
	#__FPU_USED
 0

	)

168 
	~<°döt.h
>

169 
	~<c‹e_cmIn°r.h
>

170 
	~<c‹e_cmFunc.h
>

171 
	~<c‹e_cm4_simd.h
>

175 #i‚de‡
__CMSIS_GENERIC


177 #i‚de‡
__CORE_CM4_H_DEPENDANT


178 
	#__CORE_CM4_H_DEPENDANT


	)

181 #i‡
deföed
 
__CHECK_DEVICE_DEFINES


182 #i‚de‡
__CM4_REV


183 
	#__CM4_REV
 0x0000

	)

187 #i‚de‡
__FPU_PRESENT


188 
	#__FPU_PRESENT
 0

	)

192 #i‚de‡
__MPU_PRESENT


193 
	#__MPU_PRESENT
 0

	)

197 #i‚de‡
__NVIC_PRIO_BITS


198 
	#__NVIC_PRIO_BITS
 4

	)

202 #i‚de‡
__Víd‹_SysTickC⁄fig


203 
	#__Víd‹_SysTickC⁄fig
 0

	)

216 #ifde‡
__˝lu•lus


217 
	#__I
 vﬁ©ûê

	)

219 
	#__I
 vﬁ©ûêc⁄°

	)

221 
	#__O
 vﬁ©ûê

	)

222 
	#__IO
 vﬁ©ûê

	)

255 #i‡(
__CORTEX_M
 != 0x04)

256 
uöt32_t
 
_ª£rved0
:27;

258 
uöt32_t
 
_ª£rved0
:16;

259 
uöt32_t
 
GE
:4;

260 
uöt32_t
 
_ª£rved1
:7;

262 
uöt32_t
 
Q
:1;

263 
uöt32_t
 
V
:1;

264 
uöt32_t
 
C
:1;

265 
uöt32_t
 
Z
:1;

266 
uöt32_t
 
N
:1;

267 } 
b
;

268 
uöt32_t
 
w
;

269 } 
	tAPSR_Ty≥
;

278 
uöt32_t
 
ISR
:9;

279 
uöt32_t
 
_ª£rved0
:23;

280 } 
b
;

281 
uöt32_t
 
w
;

282 } 
	tIPSR_Ty≥
;

291 
uöt32_t
 
ISR
:9;

292 #i‡(
__CORTEX_M
 != 0x04)

293 
uöt32_t
 
_ª£rved0
:15;

295 
uöt32_t
 
_ª£rved0
:7;

296 
uöt32_t
 
GE
:4;

297 
uöt32_t
 
_ª£rved1
:4;

299 
uöt32_t
 
T
:1;

300 
uöt32_t
 
IT
:2;

301 
uöt32_t
 
Q
:1;

302 
uöt32_t
 
V
:1;

303 
uöt32_t
 
C
:1;

304 
uöt32_t
 
Z
:1;

305 
uöt32_t
 
N
:1;

306 } 
b
;

307 
uöt32_t
 
w
;

308 } 
	txPSR_Ty≥
;

317 
uöt32_t
 
nPRIV
:1;

318 
uöt32_t
 
SPSEL
:1;

319 
uöt32_t
 
FPCA
:1;

320 
uöt32_t
 
_ª£rved0
:29;

321 } 
b
;

322 
uöt32_t
 
w
;

323 } 
	tCONTROL_Ty≥
;

338 
__IO
 
uöt32_t
 
ISER
[8];

339 
uöt32_t
 
RESERVED0
[24];

340 
__IO
 
uöt32_t
 
ICER
[8];

341 
uöt32_t
 
RSERVED1
[24];

342 
__IO
 
uöt32_t
 
ISPR
[8];

343 
uöt32_t
 
RESERVED2
[24];

344 
__IO
 
uöt32_t
 
ICPR
[8];

345 
uöt32_t
 
RESERVED3
[24];

346 
__IO
 
uöt32_t
 
IABR
[8];

347 
uöt32_t
 
RESERVED4
[56];

348 
__IO
 
uöt8_t
 
IP
[240];

349 
uöt32_t
 
RESERVED5
[644];

350 
__O
 
uöt32_t
 
STIR
;

351 } 
	tNVIC_Ty≥
;

354 
	#NVIC_STIR_INTID_Pos
 0

	)

355 
	#NVIC_STIR_INTID_Msk
 (0x1FFUL << 
NVIC_STIR_INTID_Pos
Ë

	)

370 
__I
 
uöt32_t
 
CPUID
;

371 
__IO
 
uöt32_t
 
ICSR
;

372 
__IO
 
uöt32_t
 
VTOR
;

373 
__IO
 
uöt32_t
 
AIRCR
;

374 
__IO
 
uöt32_t
 
SCR
;

375 
__IO
 
uöt32_t
 
CCR
;

376 
__IO
 
uöt8_t
 
SHP
[12];

377 
__IO
 
uöt32_t
 
SHCSR
;

378 
__IO
 
uöt32_t
 
CFSR
;

379 
__IO
 
uöt32_t
 
HFSR
;

380 
__IO
 
uöt32_t
 
DFSR
;

381 
__IO
 
uöt32_t
 
MMFAR
;

382 
__IO
 
uöt32_t
 
BFAR
;

383 
__IO
 
uöt32_t
 
AFSR
;

384 
__I
 
uöt32_t
 
PFR
[2];

385 
__I
 
uöt32_t
 
DFR
;

386 
__I
 
uöt32_t
 
ADR
;

387 
__I
 
uöt32_t
 
MMFR
[4];

388 
__I
 
uöt32_t
 
ISAR
[5];

389 
uöt32_t
 
RESERVED0
[5];

390 
__IO
 
uöt32_t
 
CPACR
;

391 } 
	tSCB_Ty≥
;

394 
	#SCB_CPUID_IMPLEMENTER_Pos
 24

	)

395 
	#SCB_CPUID_IMPLEMENTER_Msk
 (0xFFUL << 
SCB_CPUID_IMPLEMENTER_Pos
Ë

	)

397 
	#SCB_CPUID_VARIANT_Pos
 20

	)

398 
	#SCB_CPUID_VARIANT_Msk
 (0xFUL << 
SCB_CPUID_VARIANT_Pos
Ë

	)

400 
	#SCB_CPUID_ARCHITECTURE_Pos
 16

	)

401 
	#SCB_CPUID_ARCHITECTURE_Msk
 (0xFUL << 
SCB_CPUID_ARCHITECTURE_Pos
Ë

	)

403 
	#SCB_CPUID_PARTNO_Pos
 4

	)

404 
	#SCB_CPUID_PARTNO_Msk
 (0xFFFUL << 
SCB_CPUID_PARTNO_Pos
Ë

	)

406 
	#SCB_CPUID_REVISION_Pos
 0

	)

407 
	#SCB_CPUID_REVISION_Msk
 (0xFUL << 
SCB_CPUID_REVISION_Pos
Ë

	)

410 
	#SCB_ICSR_NMIPENDSET_Pos
 31

	)

411 
	#SCB_ICSR_NMIPENDSET_Msk
 (1UL << 
SCB_ICSR_NMIPENDSET_Pos
Ë

	)

413 
	#SCB_ICSR_PENDSVSET_Pos
 28

	)

414 
	#SCB_ICSR_PENDSVSET_Msk
 (1UL << 
SCB_ICSR_PENDSVSET_Pos
Ë

	)

416 
	#SCB_ICSR_PENDSVCLR_Pos
 27

	)

417 
	#SCB_ICSR_PENDSVCLR_Msk
 (1UL << 
SCB_ICSR_PENDSVCLR_Pos
Ë

	)

419 
	#SCB_ICSR_PENDSTSET_Pos
 26

	)

420 
	#SCB_ICSR_PENDSTSET_Msk
 (1UL << 
SCB_ICSR_PENDSTSET_Pos
Ë

	)

422 
	#SCB_ICSR_PENDSTCLR_Pos
 25

	)

423 
	#SCB_ICSR_PENDSTCLR_Msk
 (1UL << 
SCB_ICSR_PENDSTCLR_Pos
Ë

	)

425 
	#SCB_ICSR_ISRPREEMPT_Pos
 23

	)

426 
	#SCB_ICSR_ISRPREEMPT_Msk
 (1UL << 
SCB_ICSR_ISRPREEMPT_Pos
Ë

	)

428 
	#SCB_ICSR_ISRPENDING_Pos
 22

	)

429 
	#SCB_ICSR_ISRPENDING_Msk
 (1UL << 
SCB_ICSR_ISRPENDING_Pos
Ë

	)

431 
	#SCB_ICSR_VECTPENDING_Pos
 12

	)

432 
	#SCB_ICSR_VECTPENDING_Msk
 (0x1FFUL << 
SCB_ICSR_VECTPENDING_Pos
Ë

	)

434 
	#SCB_ICSR_RETTOBASE_Pos
 11

	)

435 
	#SCB_ICSR_RETTOBASE_Msk
 (1UL << 
SCB_ICSR_RETTOBASE_Pos
Ë

	)

437 
	#SCB_ICSR_VECTACTIVE_Pos
 0

	)

438 
	#SCB_ICSR_VECTACTIVE_Msk
 (0x1FFUL << 
SCB_ICSR_VECTACTIVE_Pos
Ë

	)

441 
	#SCB_VTOR_TBLOFF_Pos
 7

	)

442 
	#SCB_VTOR_TBLOFF_Msk
 (0x1FFFFFFUL << 
SCB_VTOR_TBLOFF_Pos
Ë

	)

445 
	#SCB_AIRCR_VECTKEY_Pos
 16

	)

446 
	#SCB_AIRCR_VECTKEY_Msk
 (0xFFFFUL << 
SCB_AIRCR_VECTKEY_Pos
Ë

	)

448 
	#SCB_AIRCR_VECTKEYSTAT_Pos
 16

	)

449 
	#SCB_AIRCR_VECTKEYSTAT_Msk
 (0xFFFFUL << 
SCB_AIRCR_VECTKEYSTAT_Pos
Ë

	)

451 
	#SCB_AIRCR_ENDIANESS_Pos
 15

	)

452 
	#SCB_AIRCR_ENDIANESS_Msk
 (1UL << 
SCB_AIRCR_ENDIANESS_Pos
Ë

	)

454 
	#SCB_AIRCR_PRIGROUP_Pos
 8

	)

455 
	#SCB_AIRCR_PRIGROUP_Msk
 (7UL << 
SCB_AIRCR_PRIGROUP_Pos
Ë

	)

457 
	#SCB_AIRCR_SYSRESETREQ_Pos
 2

	)

458 
	#SCB_AIRCR_SYSRESETREQ_Msk
 (1UL << 
SCB_AIRCR_SYSRESETREQ_Pos
Ë

	)

460 
	#SCB_AIRCR_VECTCLRACTIVE_Pos
 1

	)

461 
	#SCB_AIRCR_VECTCLRACTIVE_Msk
 (1UL << 
SCB_AIRCR_VECTCLRACTIVE_Pos
Ë

	)

463 
	#SCB_AIRCR_VECTRESET_Pos
 0

	)

464 
	#SCB_AIRCR_VECTRESET_Msk
 (1UL << 
SCB_AIRCR_VECTRESET_Pos
Ë

	)

467 
	#SCB_SCR_SEVONPEND_Pos
 4

	)

468 
	#SCB_SCR_SEVONPEND_Msk
 (1UL << 
SCB_SCR_SEVONPEND_Pos
Ë

	)

470 
	#SCB_SCR_SLEEPDEEP_Pos
 2

	)

471 
	#SCB_SCR_SLEEPDEEP_Msk
 (1UL << 
SCB_SCR_SLEEPDEEP_Pos
Ë

	)

473 
	#SCB_SCR_SLEEPONEXIT_Pos
 1

	)

474 
	#SCB_SCR_SLEEPONEXIT_Msk
 (1UL << 
SCB_SCR_SLEEPONEXIT_Pos
Ë

	)

477 
	#SCB_CCR_STKALIGN_Pos
 9

	)

478 
	#SCB_CCR_STKALIGN_Msk
 (1UL << 
SCB_CCR_STKALIGN_Pos
Ë

	)

480 
	#SCB_CCR_BFHFNMIGN_Pos
 8

	)

481 
	#SCB_CCR_BFHFNMIGN_Msk
 (1UL << 
SCB_CCR_BFHFNMIGN_Pos
Ë

	)

483 
	#SCB_CCR_DIV_0_TRP_Pos
 4

	)

484 
	#SCB_CCR_DIV_0_TRP_Msk
 (1UL << 
SCB_CCR_DIV_0_TRP_Pos
Ë

	)

486 
	#SCB_CCR_UNALIGN_TRP_Pos
 3

	)

487 
	#SCB_CCR_UNALIGN_TRP_Msk
 (1UL << 
SCB_CCR_UNALIGN_TRP_Pos
Ë

	)

489 
	#SCB_CCR_USERSETMPEND_Pos
 1

	)

490 
	#SCB_CCR_USERSETMPEND_Msk
 (1UL << 
SCB_CCR_USERSETMPEND_Pos
Ë

	)

492 
	#SCB_CCR_NONBASETHRDENA_Pos
 0

	)

493 
	#SCB_CCR_NONBASETHRDENA_Msk
 (1UL << 
SCB_CCR_NONBASETHRDENA_Pos
Ë

	)

496 
	#SCB_SHCSR_USGFAULTENA_Pos
 18

	)

497 
	#SCB_SHCSR_USGFAULTENA_Msk
 (1UL << 
SCB_SHCSR_USGFAULTENA_Pos
Ë

	)

499 
	#SCB_SHCSR_BUSFAULTENA_Pos
 17

	)

500 
	#SCB_SHCSR_BUSFAULTENA_Msk
 (1UL << 
SCB_SHCSR_BUSFAULTENA_Pos
Ë

	)

502 
	#SCB_SHCSR_MEMFAULTENA_Pos
 16

	)

503 
	#SCB_SHCSR_MEMFAULTENA_Msk
 (1UL << 
SCB_SHCSR_MEMFAULTENA_Pos
Ë

	)

505 
	#SCB_SHCSR_SVCALLPENDED_Pos
 15

	)

506 
	#SCB_SHCSR_SVCALLPENDED_Msk
 (1UL << 
SCB_SHCSR_SVCALLPENDED_Pos
Ë

	)

508 
	#SCB_SHCSR_BUSFAULTPENDED_Pos
 14

	)

509 
	#SCB_SHCSR_BUSFAULTPENDED_Msk
 (1UL << 
SCB_SHCSR_BUSFAULTPENDED_Pos
Ë

	)

511 
	#SCB_SHCSR_MEMFAULTPENDED_Pos
 13

	)

512 
	#SCB_SHCSR_MEMFAULTPENDED_Msk
 (1UL << 
SCB_SHCSR_MEMFAULTPENDED_Pos
Ë

	)

514 
	#SCB_SHCSR_USGFAULTPENDED_Pos
 12

	)

515 
	#SCB_SHCSR_USGFAULTPENDED_Msk
 (1UL << 
SCB_SHCSR_USGFAULTPENDED_Pos
Ë

	)

517 
	#SCB_SHCSR_SYSTICKACT_Pos
 11

	)

518 
	#SCB_SHCSR_SYSTICKACT_Msk
 (1UL << 
SCB_SHCSR_SYSTICKACT_Pos
Ë

	)

520 
	#SCB_SHCSR_PENDSVACT_Pos
 10

	)

521 
	#SCB_SHCSR_PENDSVACT_Msk
 (1UL << 
SCB_SHCSR_PENDSVACT_Pos
Ë

	)

523 
	#SCB_SHCSR_MONITORACT_Pos
 8

	)

524 
	#SCB_SHCSR_MONITORACT_Msk
 (1UL << 
SCB_SHCSR_MONITORACT_Pos
Ë

	)

526 
	#SCB_SHCSR_SVCALLACT_Pos
 7

	)

527 
	#SCB_SHCSR_SVCALLACT_Msk
 (1UL << 
SCB_SHCSR_SVCALLACT_Pos
Ë

	)

529 
	#SCB_SHCSR_USGFAULTACT_Pos
 3

	)

530 
	#SCB_SHCSR_USGFAULTACT_Msk
 (1UL << 
SCB_SHCSR_USGFAULTACT_Pos
Ë

	)

532 
	#SCB_SHCSR_BUSFAULTACT_Pos
 1

	)

533 
	#SCB_SHCSR_BUSFAULTACT_Msk
 (1UL << 
SCB_SHCSR_BUSFAULTACT_Pos
Ë

	)

535 
	#SCB_SHCSR_MEMFAULTACT_Pos
 0

	)

536 
	#SCB_SHCSR_MEMFAULTACT_Msk
 (1UL << 
SCB_SHCSR_MEMFAULTACT_Pos
Ë

	)

539 
	#SCB_CFSR_USGFAULTSR_Pos
 16

	)

540 
	#SCB_CFSR_USGFAULTSR_Msk
 (0xFFFFUL << 
SCB_CFSR_USGFAULTSR_Pos
Ë

	)

542 
	#SCB_CFSR_BUSFAULTSR_Pos
 8

	)

543 
	#SCB_CFSR_BUSFAULTSR_Msk
 (0xFFUL << 
SCB_CFSR_BUSFAULTSR_Pos
Ë

	)

545 
	#SCB_CFSR_MEMFAULTSR_Pos
 0

	)

546 
	#SCB_CFSR_MEMFAULTSR_Msk
 (0xFFUL << 
SCB_CFSR_MEMFAULTSR_Pos
Ë

	)

549 
	#SCB_HFSR_DEBUGEVT_Pos
 31

	)

550 
	#SCB_HFSR_DEBUGEVT_Msk
 (1UL << 
SCB_HFSR_DEBUGEVT_Pos
Ë

	)

552 
	#SCB_HFSR_FORCED_Pos
 30

	)

553 
	#SCB_HFSR_FORCED_Msk
 (1UL << 
SCB_HFSR_FORCED_Pos
Ë

	)

555 
	#SCB_HFSR_VECTTBL_Pos
 1

	)

556 
	#SCB_HFSR_VECTTBL_Msk
 (1UL << 
SCB_HFSR_VECTTBL_Pos
Ë

	)

559 
	#SCB_DFSR_EXTERNAL_Pos
 4

	)

560 
	#SCB_DFSR_EXTERNAL_Msk
 (1UL << 
SCB_DFSR_EXTERNAL_Pos
Ë

	)

562 
	#SCB_DFSR_VCATCH_Pos
 3

	)

563 
	#SCB_DFSR_VCATCH_Msk
 (1UL << 
SCB_DFSR_VCATCH_Pos
Ë

	)

565 
	#SCB_DFSR_DWTTRAP_Pos
 2

	)

566 
	#SCB_DFSR_DWTTRAP_Msk
 (1UL << 
SCB_DFSR_DWTTRAP_Pos
Ë

	)

568 
	#SCB_DFSR_BKPT_Pos
 1

	)

569 
	#SCB_DFSR_BKPT_Msk
 (1UL << 
SCB_DFSR_BKPT_Pos
Ë

	)

571 
	#SCB_DFSR_HALTED_Pos
 0

	)

572 
	#SCB_DFSR_HALTED_Msk
 (1UL << 
SCB_DFSR_HALTED_Pos
Ë

	)

587 
uöt32_t
 
RESERVED0
[1];

588 
__I
 
uöt32_t
 
ICTR
;

589 
__IO
 
uöt32_t
 
ACTLR
;

590 } 
	tSCnSCB_Ty≥
;

593 
	#SCnSCB_ICTR_INTLINESNUM_Pos
 0

	)

594 
	#SCnSCB_ICTR_INTLINESNUM_Msk
 (0xFUL << 
SCnSCB_ICTR_INTLINESNUM_Pos
Ë

	)

597 
	#SCnSCB_ACTLR_DISOOFP_Pos
 9

	)

598 
	#SCnSCB_ACTLR_DISOOFP_Msk
 (1UL << 
SCnSCB_ACTLR_DISOOFP_Pos
Ë

	)

600 
	#SCnSCB_ACTLR_DISFPCA_Pos
 8

	)

601 
	#SCnSCB_ACTLR_DISFPCA_Msk
 (1UL << 
SCnSCB_ACTLR_DISFPCA_Pos
Ë

	)

603 
	#SCnSCB_ACTLR_DISFOLD_Pos
 2

	)

604 
	#SCnSCB_ACTLR_DISFOLD_Msk
 (1UL << 
SCnSCB_ACTLR_DISFOLD_Pos
Ë

	)

606 
	#SCnSCB_ACTLR_DISDEFWBUF_Pos
 1

	)

607 
	#SCnSCB_ACTLR_DISDEFWBUF_Msk
 (1UL << 
SCnSCB_ACTLR_DISDEFWBUF_Pos
Ë

	)

609 
	#SCnSCB_ACTLR_DISMCYCINT_Pos
 0

	)

610 
	#SCnSCB_ACTLR_DISMCYCINT_Msk
 (1UL << 
SCnSCB_ACTLR_DISMCYCINT_Pos
Ë

	)

625 
__IO
 
uöt32_t
 
CTRL
;

626 
__IO
 
uöt32_t
 
LOAD
;

627 
__IO
 
uöt32_t
 
VAL
;

628 
__I
 
uöt32_t
 
CALIB
;

629 } 
	tSysTick_Ty≥
;

632 
	#SysTick_CTRL_COUNTFLAG_Pos
 16

	)

633 
	#SysTick_CTRL_COUNTFLAG_Msk
 (1UL << 
SysTick_CTRL_COUNTFLAG_Pos
Ë

	)

635 
	#SysTick_CTRL_CLKSOURCE_Pos
 2

	)

636 
	#SysTick_CTRL_CLKSOURCE_Msk
 (1UL << 
SysTick_CTRL_CLKSOURCE_Pos
Ë

	)

638 
	#SysTick_CTRL_TICKINT_Pos
 1

	)

639 
	#SysTick_CTRL_TICKINT_Msk
 (1UL << 
SysTick_CTRL_TICKINT_Pos
Ë

	)

641 
	#SysTick_CTRL_ENABLE_Pos
 0

	)

642 
	#SysTick_CTRL_ENABLE_Msk
 (1UL << 
SysTick_CTRL_ENABLE_Pos
Ë

	)

645 
	#SysTick_LOAD_RELOAD_Pos
 0

	)

646 
	#SysTick_LOAD_RELOAD_Msk
 (0xFFFFFFUL << 
SysTick_LOAD_RELOAD_Pos
Ë

	)

649 
	#SysTick_VAL_CURRENT_Pos
 0

	)

650 
	#SysTick_VAL_CURRENT_Msk
 (0xFFFFFFUL << 
SysTick_VAL_CURRENT_Pos
Ë

	)

653 
	#SysTick_CALIB_NOREF_Pos
 31

	)

654 
	#SysTick_CALIB_NOREF_Msk
 (1UL << 
SysTick_CALIB_NOREF_Pos
Ë

	)

656 
	#SysTick_CALIB_SKEW_Pos
 30

	)

657 
	#SysTick_CALIB_SKEW_Msk
 (1UL << 
SysTick_CALIB_SKEW_Pos
Ë

	)

659 
	#SysTick_CALIB_TENMS_Pos
 0

	)

660 
	#SysTick_CALIB_TENMS_Msk
 (0xFFFFFFUL << 
SysTick_VAL_CURRENT_Pos
Ë

	)

675 
__O
 union

677 
__O
 
uöt8_t
 
u8
;

678 
__O
 
uöt16_t
 
u16
;

679 
__O
 
uöt32_t
 
u32
;

680 } 
PORT
 [32];

681 
uöt32_t
 
RESERVED0
[864];

682 
__IO
 
uöt32_t
 
TER
;

683 
uöt32_t
 
RESERVED1
[15];

684 
__IO
 
uöt32_t
 
TPR
;

685 
uöt32_t
 
RESERVED2
[15];

686 
__IO
 
uöt32_t
 
TCR
;

687 
uöt32_t
 
RESERVED3
[29];

688 
__O
 
uöt32_t
 
IWR
;

689 
__I
 
uöt32_t
 
IRR
;

690 
__IO
 
uöt32_t
 
IMCR
;

691 
uöt32_t
 
RESERVED4
[43];

692 
__O
 
uöt32_t
 
LAR
;

693 
__I
 
uöt32_t
 
LSR
;

694 
uöt32_t
 
RESERVED5
[6];

695 
__I
 
uöt32_t
 
PID4
;

696 
__I
 
uöt32_t
 
PID5
;

697 
__I
 
uöt32_t
 
PID6
;

698 
__I
 
uöt32_t
 
PID7
;

699 
__I
 
uöt32_t
 
PID0
;

700 
__I
 
uöt32_t
 
PID1
;

701 
__I
 
uöt32_t
 
PID2
;

702 
__I
 
uöt32_t
 
PID3
;

703 
__I
 
uöt32_t
 
CID0
;

704 
__I
 
uöt32_t
 
CID1
;

705 
__I
 
uöt32_t
 
CID2
;

706 
__I
 
uöt32_t
 
CID3
;

707 } 
	tITM_Ty≥
;

710 
	#ITM_TPR_PRIVMASK_Pos
 0

	)

711 
	#ITM_TPR_PRIVMASK_Msk
 (0xFUL << 
ITM_TPR_PRIVMASK_Pos
Ë

	)

714 
	#ITM_TCR_BUSY_Pos
 23

	)

715 
	#ITM_TCR_BUSY_Msk
 (1UL << 
ITM_TCR_BUSY_Pos
Ë

	)

717 
	#ITM_TCR_Tø˚BusID_Pos
 16

	)

718 
	#ITM_TCR_Tø˚BusID_Msk
 (0x7FUL << 
ITM_TCR_Tø˚BusID_Pos
Ë

	)

720 
	#ITM_TCR_GTSFREQ_Pos
 10

	)

721 
	#ITM_TCR_GTSFREQ_Msk
 (3UL << 
ITM_TCR_GTSFREQ_Pos
Ë

	)

723 
	#ITM_TCR_TSPªsˇÀ_Pos
 8

	)

724 
	#ITM_TCR_TSPªsˇÀ_Msk
 (3UL << 
ITM_TCR_TSPªsˇÀ_Pos
Ë

	)

726 
	#ITM_TCR_SWOENA_Pos
 4

	)

727 
	#ITM_TCR_SWOENA_Msk
 (1UL << 
ITM_TCR_SWOENA_Pos
Ë

	)

729 
	#ITM_TCR_DWTENA_Pos
 3

	)

730 
	#ITM_TCR_DWTENA_Msk
 (1UL << 
ITM_TCR_DWTENA_Pos
Ë

	)

732 
	#ITM_TCR_SYNCENA_Pos
 2

	)

733 
	#ITM_TCR_SYNCENA_Msk
 (1UL << 
ITM_TCR_SYNCENA_Pos
Ë

	)

735 
	#ITM_TCR_TSENA_Pos
 1

	)

736 
	#ITM_TCR_TSENA_Msk
 (1UL << 
ITM_TCR_TSENA_Pos
Ë

	)

738 
	#ITM_TCR_ITMENA_Pos
 0

	)

739 
	#ITM_TCR_ITMENA_Msk
 (1UL << 
ITM_TCR_ITMENA_Pos
Ë

	)

742 
	#ITM_IWR_ATVALIDM_Pos
 0

	)

743 
	#ITM_IWR_ATVALIDM_Msk
 (1UL << 
ITM_IWR_ATVALIDM_Pos
Ë

	)

746 
	#ITM_IRR_ATREADYM_Pos
 0

	)

747 
	#ITM_IRR_ATREADYM_Msk
 (1UL << 
ITM_IRR_ATREADYM_Pos
Ë

	)

750 
	#ITM_IMCR_INTEGRATION_Pos
 0

	)

751 
	#ITM_IMCR_INTEGRATION_Msk
 (1UL << 
ITM_IMCR_INTEGRATION_Pos
Ë

	)

754 
	#ITM_LSR_ByãAcc_Pos
 2

	)

755 
	#ITM_LSR_ByãAcc_Msk
 (1UL << 
ITM_LSR_ByãAcc_Pos
Ë

	)

757 
	#ITM_LSR_Ac˚ss_Pos
 1

	)

758 
	#ITM_LSR_Ac˚ss_Msk
 (1UL << 
ITM_LSR_Ac˚ss_Pos
Ë

	)

760 
	#ITM_LSR_Pª£¡_Pos
 0

	)

761 
	#ITM_LSR_Pª£¡_Msk
 (1UL << 
ITM_LSR_Pª£¡_Pos
Ë

	)

776 
__IO
 
uöt32_t
 
CTRL
;

777 
__IO
 
uöt32_t
 
CYCCNT
;

778 
__IO
 
uöt32_t
 
CPICNT
;

779 
__IO
 
uöt32_t
 
EXCCNT
;

780 
__IO
 
uöt32_t
 
SLEEPCNT
;

781 
__IO
 
uöt32_t
 
LSUCNT
;

782 
__IO
 
uöt32_t
 
FOLDCNT
;

783 
__I
 
uöt32_t
 
PCSR
;

784 
__IO
 
uöt32_t
 
COMP0
;

785 
__IO
 
uöt32_t
 
MASK0
;

786 
__IO
 
uöt32_t
 
FUNCTION0
;

787 
uöt32_t
 
RESERVED0
[1];

788 
__IO
 
uöt32_t
 
COMP1
;

789 
__IO
 
uöt32_t
 
MASK1
;

790 
__IO
 
uöt32_t
 
FUNCTION1
;

791 
uöt32_t
 
RESERVED1
[1];

792 
__IO
 
uöt32_t
 
COMP2
;

793 
__IO
 
uöt32_t
 
MASK2
;

794 
__IO
 
uöt32_t
 
FUNCTION2
;

795 
uöt32_t
 
RESERVED2
[1];

796 
__IO
 
uöt32_t
 
COMP3
;

797 
__IO
 
uöt32_t
 
MASK3
;

798 
__IO
 
uöt32_t
 
FUNCTION3
;

799 } 
	tDWT_Ty≥
;

802 
	#DWT_CTRL_NUMCOMP_Pos
 28

	)

803 
	#DWT_CTRL_NUMCOMP_Msk
 (0xFUL << 
DWT_CTRL_NUMCOMP_Pos
Ë

	)

805 
	#DWT_CTRL_NOTRCPKT_Pos
 27

	)

806 
	#DWT_CTRL_NOTRCPKT_Msk
 (0x1UL << 
DWT_CTRL_NOTRCPKT_Pos
Ë

	)

808 
	#DWT_CTRL_NOEXTTRIG_Pos
 26

	)

809 
	#DWT_CTRL_NOEXTTRIG_Msk
 (0x1UL << 
DWT_CTRL_NOEXTTRIG_Pos
Ë

	)

811 
	#DWT_CTRL_NOCYCCNT_Pos
 25

	)

812 
	#DWT_CTRL_NOCYCCNT_Msk
 (0x1UL << 
DWT_CTRL_NOCYCCNT_Pos
Ë

	)

814 
	#DWT_CTRL_NOPRFCNT_Pos
 24

	)

815 
	#DWT_CTRL_NOPRFCNT_Msk
 (0x1UL << 
DWT_CTRL_NOPRFCNT_Pos
Ë

	)

817 
	#DWT_CTRL_CYCEVTENA_Pos
 22

	)

818 
	#DWT_CTRL_CYCEVTENA_Msk
 (0x1UL << 
DWT_CTRL_CYCEVTENA_Pos
Ë

	)

820 
	#DWT_CTRL_FOLDEVTENA_Pos
 21

	)

821 
	#DWT_CTRL_FOLDEVTENA_Msk
 (0x1UL << 
DWT_CTRL_FOLDEVTENA_Pos
Ë

	)

823 
	#DWT_CTRL_LSUEVTENA_Pos
 20

	)

824 
	#DWT_CTRL_LSUEVTENA_Msk
 (0x1UL << 
DWT_CTRL_LSUEVTENA_Pos
Ë

	)

826 
	#DWT_CTRL_SLEEPEVTENA_Pos
 19

	)

827 
	#DWT_CTRL_SLEEPEVTENA_Msk
 (0x1UL << 
DWT_CTRL_SLEEPEVTENA_Pos
Ë

	)

829 
	#DWT_CTRL_EXCEVTENA_Pos
 18

	)

830 
	#DWT_CTRL_EXCEVTENA_Msk
 (0x1UL << 
DWT_CTRL_EXCEVTENA_Pos
Ë

	)

832 
	#DWT_CTRL_CPIEVTENA_Pos
 17

	)

833 
	#DWT_CTRL_CPIEVTENA_Msk
 (0x1UL << 
DWT_CTRL_CPIEVTENA_Pos
Ë

	)

835 
	#DWT_CTRL_EXCTRCENA_Pos
 16

	)

836 
	#DWT_CTRL_EXCTRCENA_Msk
 (0x1UL << 
DWT_CTRL_EXCTRCENA_Pos
Ë

	)

838 
	#DWT_CTRL_PCSAMPLENA_Pos
 12

	)

839 
	#DWT_CTRL_PCSAMPLENA_Msk
 (0x1UL << 
DWT_CTRL_PCSAMPLENA_Pos
Ë

	)

841 
	#DWT_CTRL_SYNCTAP_Pos
 10

	)

842 
	#DWT_CTRL_SYNCTAP_Msk
 (0x3UL << 
DWT_CTRL_SYNCTAP_Pos
Ë

	)

844 
	#DWT_CTRL_CYCTAP_Pos
 9

	)

845 
	#DWT_CTRL_CYCTAP_Msk
 (0x1UL << 
DWT_CTRL_CYCTAP_Pos
Ë

	)

847 
	#DWT_CTRL_POSTINIT_Pos
 5

	)

848 
	#DWT_CTRL_POSTINIT_Msk
 (0xFUL << 
DWT_CTRL_POSTINIT_Pos
Ë

	)

850 
	#DWT_CTRL_POSTPRESET_Pos
 1

	)

851 
	#DWT_CTRL_POSTPRESET_Msk
 (0xFUL << 
DWT_CTRL_POSTPRESET_Pos
Ë

	)

853 
	#DWT_CTRL_CYCCNTENA_Pos
 0

	)

854 
	#DWT_CTRL_CYCCNTENA_Msk
 (0x1UL << 
DWT_CTRL_CYCCNTENA_Pos
Ë

	)

857 
	#DWT_CPICNT_CPICNT_Pos
 0

	)

858 
	#DWT_CPICNT_CPICNT_Msk
 (0xFFUL << 
DWT_CPICNT_CPICNT_Pos
Ë

	)

861 
	#DWT_EXCCNT_EXCCNT_Pos
 0

	)

862 
	#DWT_EXCCNT_EXCCNT_Msk
 (0xFFUL << 
DWT_EXCCNT_EXCCNT_Pos
Ë

	)

865 
	#DWT_SLEEPCNT_SLEEPCNT_Pos
 0

	)

866 
	#DWT_SLEEPCNT_SLEEPCNT_Msk
 (0xFFUL << 
DWT_SLEEPCNT_SLEEPCNT_Pos
Ë

	)

869 
	#DWT_LSUCNT_LSUCNT_Pos
 0

	)

870 
	#DWT_LSUCNT_LSUCNT_Msk
 (0xFFUL << 
DWT_LSUCNT_LSUCNT_Pos
Ë

	)

873 
	#DWT_FOLDCNT_FOLDCNT_Pos
 0

	)

874 
	#DWT_FOLDCNT_FOLDCNT_Msk
 (0xFFUL << 
DWT_FOLDCNT_FOLDCNT_Pos
Ë

	)

877 
	#DWT_MASK_MASK_Pos
 0

	)

878 
	#DWT_MASK_MASK_Msk
 (0x1FUL << 
DWT_MASK_MASK_Pos
Ë

	)

881 
	#DWT_FUNCTION_MATCHED_Pos
 24

	)

882 
	#DWT_FUNCTION_MATCHED_Msk
 (0x1UL << 
DWT_FUNCTION_MATCHED_Pos
Ë

	)

884 
	#DWT_FUNCTION_DATAVADDR1_Pos
 16

	)

885 
	#DWT_FUNCTION_DATAVADDR1_Msk
 (0xFUL << 
DWT_FUNCTION_DATAVADDR1_Pos
Ë

	)

887 
	#DWT_FUNCTION_DATAVADDR0_Pos
 12

	)

888 
	#DWT_FUNCTION_DATAVADDR0_Msk
 (0xFUL << 
DWT_FUNCTION_DATAVADDR0_Pos
Ë

	)

890 
	#DWT_FUNCTION_DATAVSIZE_Pos
 10

	)

891 
	#DWT_FUNCTION_DATAVSIZE_Msk
 (0x3UL << 
DWT_FUNCTION_DATAVSIZE_Pos
Ë

	)

893 
	#DWT_FUNCTION_LNK1ENA_Pos
 9

	)

894 
	#DWT_FUNCTION_LNK1ENA_Msk
 (0x1UL << 
DWT_FUNCTION_LNK1ENA_Pos
Ë

	)

896 
	#DWT_FUNCTION_DATAVMATCH_Pos
 8

	)

897 
	#DWT_FUNCTION_DATAVMATCH_Msk
 (0x1UL << 
DWT_FUNCTION_DATAVMATCH_Pos
Ë

	)

899 
	#DWT_FUNCTION_CYCMATCH_Pos
 7

	)

900 
	#DWT_FUNCTION_CYCMATCH_Msk
 (0x1UL << 
DWT_FUNCTION_CYCMATCH_Pos
Ë

	)

902 
	#DWT_FUNCTION_EMITRANGE_Pos
 5

	)

903 
	#DWT_FUNCTION_EMITRANGE_Msk
 (0x1UL << 
DWT_FUNCTION_EMITRANGE_Pos
Ë

	)

905 
	#DWT_FUNCTION_FUNCTION_Pos
 0

	)

906 
	#DWT_FUNCTION_FUNCTION_Msk
 (0xFUL << 
DWT_FUNCTION_FUNCTION_Pos
Ë

	)

921 
__IO
 
uöt32_t
 
SSPSR
;

922 
__IO
 
uöt32_t
 
CSPSR
;

923 
uöt32_t
 
RESERVED0
[2];

924 
__IO
 
uöt32_t
 
ACPR
;

925 
uöt32_t
 
RESERVED1
[55];

926 
__IO
 
uöt32_t
 
SPPR
;

927 
uöt32_t
 
RESERVED2
[131];

928 
__I
 
uöt32_t
 
FFSR
;

929 
__IO
 
uöt32_t
 
FFCR
;

930 
__I
 
uöt32_t
 
FSCR
;

931 
uöt32_t
 
RESERVED3
[759];

932 
__I
 
uöt32_t
 
TRIGGER
;

933 
__I
 
uöt32_t
 
FIFO0
;

934 
__I
 
uöt32_t
 
ITATBCTR2
;

935 
uöt32_t
 
RESERVED4
[1];

936 
__I
 
uöt32_t
 
ITATBCTR0
;

937 
__I
 
uöt32_t
 
FIFO1
;

938 
__IO
 
uöt32_t
 
ITCTRL
;

939 
uöt32_t
 
RESERVED5
[39];

940 
__IO
 
uöt32_t
 
CLAIMSET
;

941 
__IO
 
uöt32_t
 
CLAIMCLR
;

942 
uöt32_t
 
RESERVED7
[8];

943 
__I
 
uöt32_t
 
DEVID
;

944 
__I
 
uöt32_t
 
DEVTYPE
;

945 } 
	tTPI_Ty≥
;

948 
	#TPI_ACPR_PRESCALER_Pos
 0

	)

949 
	#TPI_ACPR_PRESCALER_Msk
 (0x1FFFUL << 
TPI_ACPR_PRESCALER_Pos
Ë

	)

952 
	#TPI_SPPR_TXMODE_Pos
 0

	)

953 
	#TPI_SPPR_TXMODE_Msk
 (0x3UL << 
TPI_SPPR_TXMODE_Pos
Ë

	)

956 
	#TPI_FFSR_FtN⁄St›_Pos
 3

	)

957 
	#TPI_FFSR_FtN⁄St›_Msk
 (0x1UL << 
TPI_FFSR_FtN⁄St›_Pos
Ë

	)

959 
	#TPI_FFSR_TCPª£¡_Pos
 2

	)

960 
	#TPI_FFSR_TCPª£¡_Msk
 (0x1UL << 
TPI_FFSR_TCPª£¡_Pos
Ë

	)

962 
	#TPI_FFSR_FtSt›≥d_Pos
 1

	)

963 
	#TPI_FFSR_FtSt›≥d_Msk
 (0x1UL << 
TPI_FFSR_FtSt›≥d_Pos
Ë

	)

965 
	#TPI_FFSR_FlInProg_Pos
 0

	)

966 
	#TPI_FFSR_FlInProg_Msk
 (0x1UL << 
TPI_FFSR_FlInProg_Pos
Ë

	)

969 
	#TPI_FFCR_TrigIn_Pos
 8

	)

970 
	#TPI_FFCR_TrigIn_Msk
 (0x1UL << 
TPI_FFCR_TrigIn_Pos
Ë

	)

972 
	#TPI_FFCR_EnFC⁄t_Pos
 1

	)

973 
	#TPI_FFCR_EnFC⁄t_Msk
 (0x1UL << 
TPI_FFCR_EnFC⁄t_Pos
Ë

	)

976 
	#TPI_TRIGGER_TRIGGER_Pos
 0

	)

977 
	#TPI_TRIGGER_TRIGGER_Msk
 (0x1UL << 
TPI_TRIGGER_TRIGGER_Pos
Ë

	)

980 
	#TPI_FIFO0_ITM_ATVALID_Pos
 29

	)

981 
	#TPI_FIFO0_ITM_ATVALID_Msk
 (0x3UL << 
TPI_FIFO0_ITM_ATVALID_Pos
Ë

	)

983 
	#TPI_FIFO0_ITM_byãcou¡_Pos
 27

	)

984 
	#TPI_FIFO0_ITM_byãcou¡_Msk
 (0x3UL << 
TPI_FIFO0_ITM_byãcou¡_Pos
Ë

	)

986 
	#TPI_FIFO0_ETM_ATVALID_Pos
 26

	)

987 
	#TPI_FIFO0_ETM_ATVALID_Msk
 (0x3UL << 
TPI_FIFO0_ETM_ATVALID_Pos
Ë

	)

989 
	#TPI_FIFO0_ETM_byãcou¡_Pos
 24

	)

990 
	#TPI_FIFO0_ETM_byãcou¡_Msk
 (0x3UL << 
TPI_FIFO0_ETM_byãcou¡_Pos
Ë

	)

992 
	#TPI_FIFO0_ETM2_Pos
 16

	)

993 
	#TPI_FIFO0_ETM2_Msk
 (0xFFUL << 
TPI_FIFO0_ETM2_Pos
Ë

	)

995 
	#TPI_FIFO0_ETM1_Pos
 8

	)

996 
	#TPI_FIFO0_ETM1_Msk
 (0xFFUL << 
TPI_FIFO0_ETM1_Pos
Ë

	)

998 
	#TPI_FIFO0_ETM0_Pos
 0

	)

999 
	#TPI_FIFO0_ETM0_Msk
 (0xFFUL << 
TPI_FIFO0_ETM0_Pos
Ë

	)

1002 
	#TPI_ITATBCTR2_ATREADY_Pos
 0

	)

1003 
	#TPI_ITATBCTR2_ATREADY_Msk
 (0x1UL << 
TPI_ITATBCTR2_ATREADY_Pos
Ë

	)

1006 
	#TPI_FIFO1_ITM_ATVALID_Pos
 29

	)

1007 
	#TPI_FIFO1_ITM_ATVALID_Msk
 (0x3UL << 
TPI_FIFO1_ITM_ATVALID_Pos
Ë

	)

1009 
	#TPI_FIFO1_ITM_byãcou¡_Pos
 27

	)

1010 
	#TPI_FIFO1_ITM_byãcou¡_Msk
 (0x3UL << 
TPI_FIFO1_ITM_byãcou¡_Pos
Ë

	)

1012 
	#TPI_FIFO1_ETM_ATVALID_Pos
 26

	)

1013 
	#TPI_FIFO1_ETM_ATVALID_Msk
 (0x3UL << 
TPI_FIFO1_ETM_ATVALID_Pos
Ë

	)

1015 
	#TPI_FIFO1_ETM_byãcou¡_Pos
 24

	)

1016 
	#TPI_FIFO1_ETM_byãcou¡_Msk
 (0x3UL << 
TPI_FIFO1_ETM_byãcou¡_Pos
Ë

	)

1018 
	#TPI_FIFO1_ITM2_Pos
 16

	)

1019 
	#TPI_FIFO1_ITM2_Msk
 (0xFFUL << 
TPI_FIFO1_ITM2_Pos
Ë

	)

1021 
	#TPI_FIFO1_ITM1_Pos
 8

	)

1022 
	#TPI_FIFO1_ITM1_Msk
 (0xFFUL << 
TPI_FIFO1_ITM1_Pos
Ë

	)

1024 
	#TPI_FIFO1_ITM0_Pos
 0

	)

1025 
	#TPI_FIFO1_ITM0_Msk
 (0xFFUL << 
TPI_FIFO1_ITM0_Pos
Ë

	)

1028 
	#TPI_ITATBCTR0_ATREADY_Pos
 0

	)

1029 
	#TPI_ITATBCTR0_ATREADY_Msk
 (0x1UL << 
TPI_ITATBCTR0_ATREADY_Pos
Ë

	)

1032 
	#TPI_ITCTRL_Mode_Pos
 0

	)

1033 
	#TPI_ITCTRL_Mode_Msk
 (0x1UL << 
TPI_ITCTRL_Mode_Pos
Ë

	)

1036 
	#TPI_DEVID_NRZVALID_Pos
 11

	)

1037 
	#TPI_DEVID_NRZVALID_Msk
 (0x1UL << 
TPI_DEVID_NRZVALID_Pos
Ë

	)

1039 
	#TPI_DEVID_MANCVALID_Pos
 10

	)

1040 
	#TPI_DEVID_MANCVALID_Msk
 (0x1UL << 
TPI_DEVID_MANCVALID_Pos
Ë

	)

1042 
	#TPI_DEVID_PTINVALID_Pos
 9

	)

1043 
	#TPI_DEVID_PTINVALID_Msk
 (0x1UL << 
TPI_DEVID_PTINVALID_Pos
Ë

	)

1045 
	#TPI_DEVID_MöBufSz_Pos
 6

	)

1046 
	#TPI_DEVID_MöBufSz_Msk
 (0x7UL << 
TPI_DEVID_MöBufSz_Pos
Ë

	)

1048 
	#TPI_DEVID_AsynClkIn_Pos
 5

	)

1049 
	#TPI_DEVID_AsynClkIn_Msk
 (0x1UL << 
TPI_DEVID_AsynClkIn_Pos
Ë

	)

1051 
	#TPI_DEVID_NrTø˚I≈ut_Pos
 0

	)

1052 
	#TPI_DEVID_NrTø˚I≈ut_Msk
 (0x1FUL << 
TPI_DEVID_NrTø˚I≈ut_Pos
Ë

	)

1055 
	#TPI_DEVTYPE_SubTy≥_Pos
 0

	)

1056 
	#TPI_DEVTYPE_SubTy≥_Msk
 (0xFUL << 
TPI_DEVTYPE_SubTy≥_Pos
Ë

	)

1058 
	#TPI_DEVTYPE_Maj‹Ty≥_Pos
 4

	)

1059 
	#TPI_DEVTYPE_Maj‹Ty≥_Msk
 (0xFUL << 
TPI_DEVTYPE_Maj‹Ty≥_Pos
Ë

	)

1064 #i‡(
__MPU_PRESENT
 == 1)

1075 
__I
 
uöt32_t
 
TYPE
;

1076 
__IO
 
uöt32_t
 
CTRL
;

1077 
__IO
 
uöt32_t
 
RNR
;

1078 
__IO
 
uöt32_t
 
RBAR
;

1079 
__IO
 
uöt32_t
 
RASR
;

1080 
__IO
 
uöt32_t
 
RBAR_A1
;

1081 
__IO
 
uöt32_t
 
RASR_A1
;

1082 
__IO
 
uöt32_t
 
RBAR_A2
;

1083 
__IO
 
uöt32_t
 
RASR_A2
;

1084 
__IO
 
uöt32_t
 
RBAR_A3
;

1085 
__IO
 
uöt32_t
 
RASR_A3
;

1086 } 
	tMPU_Ty≥
;

1089 
	#MPU_TYPE_IREGION_Pos
 16

	)

1090 
	#MPU_TYPE_IREGION_Msk
 (0xFFUL << 
MPU_TYPE_IREGION_Pos
Ë

	)

1092 
	#MPU_TYPE_DREGION_Pos
 8

	)

1093 
	#MPU_TYPE_DREGION_Msk
 (0xFFUL << 
MPU_TYPE_DREGION_Pos
Ë

	)

1095 
	#MPU_TYPE_SEPARATE_Pos
 0

	)

1096 
	#MPU_TYPE_SEPARATE_Msk
 (1UL << 
MPU_TYPE_SEPARATE_Pos
Ë

	)

1099 
	#MPU_CTRL_PRIVDEFENA_Pos
 2

	)

1100 
	#MPU_CTRL_PRIVDEFENA_Msk
 (1UL << 
MPU_CTRL_PRIVDEFENA_Pos
Ë

	)

1102 
	#MPU_CTRL_HFNMIENA_Pos
 1

	)

1103 
	#MPU_CTRL_HFNMIENA_Msk
 (1UL << 
MPU_CTRL_HFNMIENA_Pos
Ë

	)

1105 
	#MPU_CTRL_ENABLE_Pos
 0

	)

1106 
	#MPU_CTRL_ENABLE_Msk
 (1UL << 
MPU_CTRL_ENABLE_Pos
Ë

	)

1109 
	#MPU_RNR_REGION_Pos
 0

	)

1110 
	#MPU_RNR_REGION_Msk
 (0xFFUL << 
MPU_RNR_REGION_Pos
Ë

	)

1113 
	#MPU_RBAR_ADDR_Pos
 5

	)

1114 
	#MPU_RBAR_ADDR_Msk
 (0x7FFFFFFUL << 
MPU_RBAR_ADDR_Pos
Ë

	)

1116 
	#MPU_RBAR_VALID_Pos
 4

	)

1117 
	#MPU_RBAR_VALID_Msk
 (1UL << 
MPU_RBAR_VALID_Pos
Ë

	)

1119 
	#MPU_RBAR_REGION_Pos
 0

	)

1120 
	#MPU_RBAR_REGION_Msk
 (0xFUL << 
MPU_RBAR_REGION_Pos
Ë

	)

1123 
	#MPU_RASR_ATTRS_Pos
 16

	)

1124 
	#MPU_RASR_ATTRS_Msk
 (0xFFFFUL << 
MPU_RASR_ATTRS_Pos
Ë

	)

1126 
	#MPU_RASR_XN_Pos
 28

	)

1127 
	#MPU_RASR_XN_Msk
 (1UL << 
MPU_RASR_XN_Pos
Ë

	)

1129 
	#MPU_RASR_AP_Pos
 24

	)

1130 
	#MPU_RASR_AP_Msk
 (0x7UL << 
MPU_RASR_AP_Pos
Ë

	)

1132 
	#MPU_RASR_TEX_Pos
 19

	)

1133 
	#MPU_RASR_TEX_Msk
 (0x7UL << 
MPU_RASR_TEX_Pos
Ë

	)

1135 
	#MPU_RASR_S_Pos
 18

	)

1136 
	#MPU_RASR_S_Msk
 (1UL << 
MPU_RASR_S_Pos
Ë

	)

1138 
	#MPU_RASR_C_Pos
 17

	)

1139 
	#MPU_RASR_C_Msk
 (1UL << 
MPU_RASR_C_Pos
Ë

	)

1141 
	#MPU_RASR_B_Pos
 16

	)

1142 
	#MPU_RASR_B_Msk
 (1UL << 
MPU_RASR_B_Pos
Ë

	)

1144 
	#MPU_RASR_SRD_Pos
 8

	)

1145 
	#MPU_RASR_SRD_Msk
 (0xFFUL << 
MPU_RASR_SRD_Pos
Ë

	)

1147 
	#MPU_RASR_SIZE_Pos
 1

	)

1148 
	#MPU_RASR_SIZE_Msk
 (0x1FUL << 
MPU_RASR_SIZE_Pos
Ë

	)

1150 
	#MPU_RASR_ENABLE_Pos
 0

	)

1151 
	#MPU_RASR_ENABLE_Msk
 (1UL << 
MPU_RASR_ENABLE_Pos
Ë

	)

1157 #i‡(
__FPU_PRESENT
 == 1)

1168 
uöt32_t
 
RESERVED0
[1];

1169 
__IO
 
uöt32_t
 
FPCCR
;

1170 
__IO
 
uöt32_t
 
FPCAR
;

1171 
__IO
 
uöt32_t
 
FPDSCR
;

1172 
__I
 
uöt32_t
 
MVFR0
;

1173 
__I
 
uöt32_t
 
MVFR1
;

1174 } 
	tFPU_Ty≥
;

1177 
	#FPU_FPCCR_ASPEN_Pos
 31

	)

1178 
	#FPU_FPCCR_ASPEN_Msk
 (1UL << 
FPU_FPCCR_ASPEN_Pos
Ë

	)

1180 
	#FPU_FPCCR_LSPEN_Pos
 30

	)

1181 
	#FPU_FPCCR_LSPEN_Msk
 (1UL << 
FPU_FPCCR_LSPEN_Pos
Ë

	)

1183 
	#FPU_FPCCR_MONRDY_Pos
 8

	)

1184 
	#FPU_FPCCR_MONRDY_Msk
 (1UL << 
FPU_FPCCR_MONRDY_Pos
Ë

	)

1186 
	#FPU_FPCCR_BFRDY_Pos
 6

	)

1187 
	#FPU_FPCCR_BFRDY_Msk
 (1UL << 
FPU_FPCCR_BFRDY_Pos
Ë

	)

1189 
	#FPU_FPCCR_MMRDY_Pos
 5

	)

1190 
	#FPU_FPCCR_MMRDY_Msk
 (1UL << 
FPU_FPCCR_MMRDY_Pos
Ë

	)

1192 
	#FPU_FPCCR_HFRDY_Pos
 4

	)

1193 
	#FPU_FPCCR_HFRDY_Msk
 (1UL << 
FPU_FPCCR_HFRDY_Pos
Ë

	)

1195 
	#FPU_FPCCR_THREAD_Pos
 3

	)

1196 
	#FPU_FPCCR_THREAD_Msk
 (1UL << 
FPU_FPCCR_THREAD_Pos
Ë

	)

1198 
	#FPU_FPCCR_USER_Pos
 1

	)

1199 
	#FPU_FPCCR_USER_Msk
 (1UL << 
FPU_FPCCR_USER_Pos
Ë

	)

1201 
	#FPU_FPCCR_LSPACT_Pos
 0

	)

1202 
	#FPU_FPCCR_LSPACT_Msk
 (1UL << 
FPU_FPCCR_LSPACT_Pos
Ë

	)

1205 
	#FPU_FPCAR_ADDRESS_Pos
 3

	)

1206 
	#FPU_FPCAR_ADDRESS_Msk
 (0x1FFFFFFFUL << 
FPU_FPCAR_ADDRESS_Pos
Ë

	)

1209 
	#FPU_FPDSCR_AHP_Pos
 26

	)

1210 
	#FPU_FPDSCR_AHP_Msk
 (1UL << 
FPU_FPDSCR_AHP_Pos
Ë

	)

1212 
	#FPU_FPDSCR_DN_Pos
 25

	)

1213 
	#FPU_FPDSCR_DN_Msk
 (1UL << 
FPU_FPDSCR_DN_Pos
Ë

	)

1215 
	#FPU_FPDSCR_FZ_Pos
 24

	)

1216 
	#FPU_FPDSCR_FZ_Msk
 (1UL << 
FPU_FPDSCR_FZ_Pos
Ë

	)

1218 
	#FPU_FPDSCR_RMode_Pos
 22

	)

1219 
	#FPU_FPDSCR_RMode_Msk
 (3UL << 
FPU_FPDSCR_RMode_Pos
Ë

	)

1222 
	#FPU_MVFR0_FP_roundög_modes_Pos
 28

	)

1223 
	#FPU_MVFR0_FP_roundög_modes_Msk
 (0xFUL << 
FPU_MVFR0_FP_roundög_modes_Pos
Ë

	)

1225 
	#FPU_MVFR0_Sh‹t_ve˘‹s_Pos
 24

	)

1226 
	#FPU_MVFR0_Sh‹t_ve˘‹s_Msk
 (0xFUL << 
FPU_MVFR0_Sh‹t_ve˘‹s_Pos
Ë

	)

1228 
	#FPU_MVFR0_Squ¨e_roŸ_Pos
 20

	)

1229 
	#FPU_MVFR0_Squ¨e_roŸ_Msk
 (0xFUL << 
FPU_MVFR0_Squ¨e_roŸ_Pos
Ë

	)

1231 
	#FPU_MVFR0_Divide_Pos
 16

	)

1232 
	#FPU_MVFR0_Divide_Msk
 (0xFUL << 
FPU_MVFR0_Divide_Pos
Ë

	)

1234 
	#FPU_MVFR0_FP_ex˚p_å≠pög_Pos
 12

	)

1235 
	#FPU_MVFR0_FP_ex˚p_å≠pög_Msk
 (0xFUL << 
FPU_MVFR0_FP_ex˚p_å≠pög_Pos
Ë

	)

1237 
	#FPU_MVFR0_DoubÀ_¥ecisi⁄_Pos
 8

	)

1238 
	#FPU_MVFR0_DoubÀ_¥ecisi⁄_Msk
 (0xFUL << 
FPU_MVFR0_DoubÀ_¥ecisi⁄_Pos
Ë

	)

1240 
	#FPU_MVFR0_SögÀ_¥ecisi⁄_Pos
 4

	)

1241 
	#FPU_MVFR0_SögÀ_¥ecisi⁄_Msk
 (0xFUL << 
FPU_MVFR0_SögÀ_¥ecisi⁄_Pos
Ë

	)

1243 
	#FPU_MVFR0_A_SIMD_ªgi°îs_Pos
 0

	)

1244 
	#FPU_MVFR0_A_SIMD_ªgi°îs_Msk
 (0xFUL << 
FPU_MVFR0_A_SIMD_ªgi°îs_Pos
Ë

	)

1247 
	#FPU_MVFR1_FP_fu£d_MAC_Pos
 28

	)

1248 
	#FPU_MVFR1_FP_fu£d_MAC_Msk
 (0xFUL << 
FPU_MVFR1_FP_fu£d_MAC_Pos
Ë

	)

1250 
	#FPU_MVFR1_FP_HPFP_Pos
 24

	)

1251 
	#FPU_MVFR1_FP_HPFP_Msk
 (0xFUL << 
FPU_MVFR1_FP_HPFP_Pos
Ë

	)

1253 
	#FPU_MVFR1_D_NaN_mode_Pos
 4

	)

1254 
	#FPU_MVFR1_D_NaN_mode_Msk
 (0xFUL << 
FPU_MVFR1_D_NaN_mode_Pos
Ë

	)

1256 
	#FPU_MVFR1_FtZ_mode_Pos
 0

	)

1257 
	#FPU_MVFR1_FtZ_mode_Msk
 (0xFUL << 
FPU_MVFR1_FtZ_mode_Pos
Ë

	)

1273 
__IO
 
uöt32_t
 
DHCSR
;

1274 
__O
 
uöt32_t
 
DCRSR
;

1275 
__IO
 
uöt32_t
 
DCRDR
;

1276 
__IO
 
uöt32_t
 
DEMCR
;

1277 } 
	tC‹eDebug_Ty≥
;

1280 
	#C‹eDebug_DHCSR_DBGKEY_Pos
 16

	)

1281 
	#C‹eDebug_DHCSR_DBGKEY_Msk
 (0xFFFFUL << 
C‹eDebug_DHCSR_DBGKEY_Pos
Ë

	)

1283 
	#C‹eDebug_DHCSR_S_RESET_ST_Pos
 25

	)

1284 
	#C‹eDebug_DHCSR_S_RESET_ST_Msk
 (1UL << 
C‹eDebug_DHCSR_S_RESET_ST_Pos
Ë

	)

1286 
	#C‹eDebug_DHCSR_S_RETIRE_ST_Pos
 24

	)

1287 
	#C‹eDebug_DHCSR_S_RETIRE_ST_Msk
 (1UL << 
C‹eDebug_DHCSR_S_RETIRE_ST_Pos
Ë

	)

1289 
	#C‹eDebug_DHCSR_S_LOCKUP_Pos
 19

	)

1290 
	#C‹eDebug_DHCSR_S_LOCKUP_Msk
 (1UL << 
C‹eDebug_DHCSR_S_LOCKUP_Pos
Ë

	)

1292 
	#C‹eDebug_DHCSR_S_SLEEP_Pos
 18

	)

1293 
	#C‹eDebug_DHCSR_S_SLEEP_Msk
 (1UL << 
C‹eDebug_DHCSR_S_SLEEP_Pos
Ë

	)

1295 
	#C‹eDebug_DHCSR_S_HALT_Pos
 17

	)

1296 
	#C‹eDebug_DHCSR_S_HALT_Msk
 (1UL << 
C‹eDebug_DHCSR_S_HALT_Pos
Ë

	)

1298 
	#C‹eDebug_DHCSR_S_REGRDY_Pos
 16

	)

1299 
	#C‹eDebug_DHCSR_S_REGRDY_Msk
 (1UL << 
C‹eDebug_DHCSR_S_REGRDY_Pos
Ë

	)

1301 
	#C‹eDebug_DHCSR_C_SNAPSTALL_Pos
 5

	)

1302 
	#C‹eDebug_DHCSR_C_SNAPSTALL_Msk
 (1UL << 
C‹eDebug_DHCSR_C_SNAPSTALL_Pos
Ë

	)

1304 
	#C‹eDebug_DHCSR_C_MASKINTS_Pos
 3

	)

1305 
	#C‹eDebug_DHCSR_C_MASKINTS_Msk
 (1UL << 
C‹eDebug_DHCSR_C_MASKINTS_Pos
Ë

	)

1307 
	#C‹eDebug_DHCSR_C_STEP_Pos
 2

	)

1308 
	#C‹eDebug_DHCSR_C_STEP_Msk
 (1UL << 
C‹eDebug_DHCSR_C_STEP_Pos
Ë

	)

1310 
	#C‹eDebug_DHCSR_C_HALT_Pos
 1

	)

1311 
	#C‹eDebug_DHCSR_C_HALT_Msk
 (1UL << 
C‹eDebug_DHCSR_C_HALT_Pos
Ë

	)

1313 
	#C‹eDebug_DHCSR_C_DEBUGEN_Pos
 0

	)

1314 
	#C‹eDebug_DHCSR_C_DEBUGEN_Msk
 (1UL << 
C‹eDebug_DHCSR_C_DEBUGEN_Pos
Ë

	)

1317 
	#C‹eDebug_DCRSR_REGWnR_Pos
 16

	)

1318 
	#C‹eDebug_DCRSR_REGWnR_Msk
 (1UL << 
C‹eDebug_DCRSR_REGWnR_Pos
Ë

	)

1320 
	#C‹eDebug_DCRSR_REGSEL_Pos
 0

	)

1321 
	#C‹eDebug_DCRSR_REGSEL_Msk
 (0x1FUL << 
C‹eDebug_DCRSR_REGSEL_Pos
Ë

	)

1324 
	#C‹eDebug_DEMCR_TRCENA_Pos
 24

	)

1325 
	#C‹eDebug_DEMCR_TRCENA_Msk
 (1UL << 
C‹eDebug_DEMCR_TRCENA_Pos
Ë

	)

1327 
	#C‹eDebug_DEMCR_MON_REQ_Pos
 19

	)

1328 
	#C‹eDebug_DEMCR_MON_REQ_Msk
 (1UL << 
C‹eDebug_DEMCR_MON_REQ_Pos
Ë

	)

1330 
	#C‹eDebug_DEMCR_MON_STEP_Pos
 18

	)

1331 
	#C‹eDebug_DEMCR_MON_STEP_Msk
 (1UL << 
C‹eDebug_DEMCR_MON_STEP_Pos
Ë

	)

1333 
	#C‹eDebug_DEMCR_MON_PEND_Pos
 17

	)

1334 
	#C‹eDebug_DEMCR_MON_PEND_Msk
 (1UL << 
C‹eDebug_DEMCR_MON_PEND_Pos
Ë

	)

1336 
	#C‹eDebug_DEMCR_MON_EN_Pos
 16

	)

1337 
	#C‹eDebug_DEMCR_MON_EN_Msk
 (1UL << 
C‹eDebug_DEMCR_MON_EN_Pos
Ë

	)

1339 
	#C‹eDebug_DEMCR_VC_HARDERR_Pos
 10

	)

1340 
	#C‹eDebug_DEMCR_VC_HARDERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_HARDERR_Pos
Ë

	)

1342 
	#C‹eDebug_DEMCR_VC_INTERR_Pos
 9

	)

1343 
	#C‹eDebug_DEMCR_VC_INTERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_INTERR_Pos
Ë

	)

1345 
	#C‹eDebug_DEMCR_VC_BUSERR_Pos
 8

	)

1346 
	#C‹eDebug_DEMCR_VC_BUSERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_BUSERR_Pos
Ë

	)

1348 
	#C‹eDebug_DEMCR_VC_STATERR_Pos
 7

	)

1349 
	#C‹eDebug_DEMCR_VC_STATERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_STATERR_Pos
Ë

	)

1351 
	#C‹eDebug_DEMCR_VC_CHKERR_Pos
 6

	)

1352 
	#C‹eDebug_DEMCR_VC_CHKERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_CHKERR_Pos
Ë

	)

1354 
	#C‹eDebug_DEMCR_VC_NOCPERR_Pos
 5

	)

1355 
	#C‹eDebug_DEMCR_VC_NOCPERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_NOCPERR_Pos
Ë

	)

1357 
	#C‹eDebug_DEMCR_VC_MMERR_Pos
 4

	)

1358 
	#C‹eDebug_DEMCR_VC_MMERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_MMERR_Pos
Ë

	)

1360 
	#C‹eDebug_DEMCR_VC_CORERESET_Pos
 0

	)

1361 
	#C‹eDebug_DEMCR_VC_CORERESET_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_CORERESET_Pos
Ë

	)

1373 
	#SCS_BASE
 (0xE000E000ULË

	)

1374 
	#ITM_BASE
 (0xE0000000ULË

	)

1375 
	#DWT_BASE
 (0xE0001000ULË

	)

1376 
	#TPI_BASE
 (0xE0040000ULË

	)

1377 
	#C‹eDebug_BASE
 (0xE000EDF0ULË

	)

1378 
	#SysTick_BASE
 (
SCS_BASE
 + 0x0010ULË

	)

1379 
	#NVIC_BASE
 (
SCS_BASE
 + 0x0100ULË

	)

1380 
	#SCB_BASE
 (
SCS_BASE
 + 0x0D00ULË

	)

1382 
	#SCnSCB
 ((
SCnSCB_Ty≥
 *Ë
SCS_BASE
 )

	)

1383 
	#SCB
 ((
SCB_Ty≥
 *Ë
SCB_BASE
 )

	)

1384 
	#SysTick
 ((
SysTick_Ty≥
 *Ë
SysTick_BASE
 )

	)

1385 
	#NVIC
 ((
NVIC_Ty≥
 *Ë
NVIC_BASE
 )

	)

1386 
	#ITM
 ((
ITM_Ty≥
 *Ë
ITM_BASE
 )

	)

1387 
	#DWT
 ((
DWT_Ty≥
 *Ë
DWT_BASE
 )

	)

1388 
	#TPI
 ((
TPI_Ty≥
 *Ë
TPI_BASE
 )

	)

1389 
	#C‹eDebug
 ((
C‹eDebug_Ty≥
 *Ë
C‹eDebug_BASE
Ë

	)

1391 #i‡(
__MPU_PRESENT
 == 1)

1392 
	#MPU_BASE
 (
SCS_BASE
 + 0x0D90ULË

	)

1393 
	#MPU
 ((
MPU_Ty≥
 *Ë
MPU_BASE
 )

	)

1396 #i‡(
__FPU_PRESENT
 == 1)

1397 
	#FPU_BASE
 (
SCS_BASE
 + 0x0F30ULË

	)

1398 
	#FPU
 ((
FPU_Ty≥
 *Ë
FPU_BASE
 )

	)

1435 
__STATIC_INLINE
 
NVIC_SëPri‹ôyGroupög
(
uöt32_t
 
Pri‹ôyGroup
)

1437 
uöt32_t
 
ªg_vÆue
;

1438 
uöt32_t
 
Pri‹ôyGroupTmp
 = (
Pri‹ôyGroup
 & (uint32_t)0x07);

1440 
ªg_vÆue
 = 
SCB
->
AIRCR
;

1441 
ªg_vÆue
 &~(
SCB_AIRCR_VECTKEY_Msk
 | 
SCB_AIRCR_PRIGROUP_Msk
);

1442 
ªg_vÆue
 = (reg_value |

1443 ((
uöt32_t
)0x5FA << 
SCB_AIRCR_VECTKEY_Pos
) |

1444 (
Pri‹ôyGroupTmp
 << 8));

1445 
SCB
->
AIRCR
 = 
ªg_vÆue
;

1455 
__STATIC_INLINE
 
uöt32_t
 
NVIC_GëPri‹ôyGroupög
()

1457  ((
SCB
->
AIRCR
 & 
SCB_AIRCR_PRIGROUP_Msk
Ë>> 
SCB_AIRCR_PRIGROUP_Pos
);

1467 
__STATIC_INLINE
 
NVIC_E«bÀIRQ
(
IRQn_Ty≥
 
IRQn
)

1470 
NVIC
->
ISER
[(
uöt32_t
)((
öt32_t
)
IRQn
) >> 5] = (uint32_t)(1 << ((uint32_t)((int32_t)IRQn) & (uint32_t)0x1F));

1480 
__STATIC_INLINE
 
NVIC_DißbÀIRQ
(
IRQn_Ty≥
 
IRQn
)

1482 
NVIC
->
ICER
[((
uöt32_t
)(
IRQn
) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));

1496 
__STATIC_INLINE
 
uöt32_t
 
NVIC_GëPídögIRQ
(
IRQn_Ty≥
 
IRQn
)

1498 ((
uöt32_t
Ë((
NVIC
->
ISPR
[(uöt32_t)(
IRQn
) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0));

1508 
__STATIC_INLINE
 
NVIC_SëPídögIRQ
(
IRQn_Ty≥
 
IRQn
)

1510 
NVIC
->
ISPR
[((
uöt32_t
)(
IRQn
) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));

1520 
__STATIC_INLINE
 
NVIC_CÀ¨PídögIRQ
(
IRQn_Ty≥
 
IRQn
)

1522 
NVIC
->
ICPR
[((
uöt32_t
)(
IRQn
) >> 5)] = (1 << ((uint32_t)(IRQn) & 0x1F));

1535 
__STATIC_INLINE
 
uöt32_t
 
NVIC_GëA˘ive
(
IRQn_Ty≥
 
IRQn
)

1537 ((
uöt32_t
)((
NVIC
->
IABR
[(uöt32_t)(
IRQn
) >> 5] & (1 << ((uint32_t)(IRQn) & 0x1F)))?1:0));

1550 
__STATIC_INLINE
 
NVIC_SëPri‹ôy
(
IRQn_Ty≥
 
IRQn
, 
uöt32_t
 
¥i‹ôy
)

1552 if(
IRQn
 < 0) {

1553 
SCB
->
SHP
[((
uöt32_t
)(
IRQn
Ë& 0xF)-4] = ((
¥i‹ôy
 << (8 - 
__NVIC_PRIO_BITS
)) & 0xff); }

1555 
NVIC
->
IP
[(
uöt32_t
)(
IRQn
)] = ((
¥i‹ôy
 << (8 - 
__NVIC_PRIO_BITS
)) & 0xff); }

1570 
__STATIC_INLINE
 
uöt32_t
 
NVIC_GëPri‹ôy
(
IRQn_Ty≥
 
IRQn
)

1573 if(
IRQn
 < 0) {

1574 ((
uöt32_t
)(
SCB
->
SHP
[((uöt32_t)(
IRQn
Ë& 0xF)-4] >> (8 - 
__NVIC_PRIO_BITS
))); }

1576 ((
uöt32_t
)(
NVIC
->
IP
[(uöt32_t)(
IRQn
)] >> (8 - 
__NVIC_PRIO_BITS
))); }

1592 
__STATIC_INLINE
 
uöt32_t
 
NVIC_EncodePri‹ôy
 (uöt32_à
Pri‹ôyGroup
, uöt32_à
Pªem±Pri‹ôy
, uöt32_à
SubPri‹ôy
)

1594 
uöt32_t
 
Pri‹ôyGroupTmp
 = (
Pri‹ôyGroup
 & 0x07);

1595 
uöt32_t
 
Pªem±Pri‹ôyBôs
;

1596 
uöt32_t
 
SubPri‹ôyBôs
;

1598 
Pªem±Pri‹ôyBôs
 = ((7 - 
Pri‹ôyGroupTmp
Ë> 
__NVIC_PRIO_BITS
) ? __NVIC_PRIO_BITS : 7 - PriorityGroupTmp;

1599 
SubPri‹ôyBôs
 = ((
Pri‹ôyGroupTmp
 + 
__NVIC_PRIO_BITS
) < 7) ? 0 : PriorityGroupTmp - 7 + __NVIC_PRIO_BITS;

1602 ((
Pªem±Pri‹ôy
 & ((1 << (
Pªem±Pri‹ôyBôs
)Ë- 1)Ë<< 
SubPri‹ôyBôs
) |

1603 ((
SubPri‹ôy
 & ((1 << (
SubPri‹ôyBôs
 )) - 1)))

1620 
__STATIC_INLINE
 
NVIC_DecodePri‹ôy
 (
uöt32_t
 
Pri‹ôy
, uöt32_à
Pri‹ôyGroup
, uöt32_t* 
pPªem±Pri‹ôy
, uöt32_t* 
pSubPri‹ôy
)

1622 
uöt32_t
 
Pri‹ôyGroupTmp
 = (
Pri‹ôyGroup
 & 0x07);

1623 
uöt32_t
 
Pªem±Pri‹ôyBôs
;

1624 
uöt32_t
 
SubPri‹ôyBôs
;

1626 
Pªem±Pri‹ôyBôs
 = ((7 - 
Pri‹ôyGroupTmp
Ë> 
__NVIC_PRIO_BITS
) ? __NVIC_PRIO_BITS : 7 - PriorityGroupTmp;

1627 
SubPri‹ôyBôs
 = ((
Pri‹ôyGroupTmp
 + 
__NVIC_PRIO_BITS
) < 7) ? 0 : PriorityGroupTmp - 7 + __NVIC_PRIO_BITS;

1629 *
pPªem±Pri‹ôy
 = (
Pri‹ôy
 >> 
SubPri‹ôyBôs
Ë& ((1 << (
Pªem±Pri‹ôyBôs
)) - 1);

1630 *
pSubPri‹ôy
 = (
Pri‹ôy
 ) & ((1 << (
SubPri‹ôyBôs
 )) - 1);

1638 
__STATIC_INLINE
 
NVIC_Sy°emRe£t
()

1640 
__DSB
();

1642 
SCB
->
AIRCR
 = ((0x5FA << 
SCB_AIRCR_VECTKEY_Pos
) |

1643 (
SCB
->
AIRCR
 & 
SCB_AIRCR_PRIGROUP_Msk
) |

1644 
SCB_AIRCR_SYSRESETREQ_Msk
);

1645 
__DSB
();

1660 #i‡(
__Víd‹_SysTickC⁄fig
 == 0)

1677 
__STATIC_INLINE
 
uöt32_t
 
SysTick_C⁄fig
(uöt32_à
ticks
)

1679 i‡((
ticks
 - 1Ë> 
SysTick_LOAD_RELOAD_Msk
)  (1);

1681 
SysTick
->
LOAD
 = 
ticks
 - 1;

1682 
NVIC_SëPri‹ôy
 (
SysTick_IRQn
, (1<<
__NVIC_PRIO_BITS
) - 1);

1683 
SysTick
->
VAL
 = 0;

1684 
SysTick
->
CTRL
 = 
SysTick_CTRL_CLKSOURCE_Msk
 |

1685 
SysTick_CTRL_TICKINT_Msk
 |

1686 
SysTick_CTRL_ENABLE_Msk
;

1703 vﬁ©ûê
öt32_t
 
ITM_RxBuf„r
;

1704 
	#ITM_RXBUFFER_EMPTY
 0x5AA55AA5

	)

1717 
__STATIC_INLINE
 
uöt32_t
 
ITM_SídCh¨
 (uöt32_à
ch
)

1719 i‡((
	gITM
->
	gTCR
 & 
	gITM_TCR_ITMENA_Msk
) &&

1720 (
	gITM
->
	gTER
 & (1UL << 0) ) )

1722 
	gITM
->
	gPORT
[0].
	gu32
 == 0);

1723 
	gITM
->
	gPORT
[0].
	gu8
 = (
uöt8_t
Ë
ch
;

1725  (
	gch
);

1736 
__STATIC_INLINE
 
öt32_t
 
ITM_Re˚iveCh¨
 () {

1737 
öt32_t
 
	gch
 = -1;

1739 i‡(
	gITM_RxBuf„r
 !
ITM_RXBUFFER_EMPTY
) {

1740 
ch
 = 
ITM_RxBuf„r
;

1741 
	gITM_RxBuf„r
 = 
ITM_RXBUFFER_EMPTY
;

1744  (
	gch
);

1755 
__STATIC_INLINE
 
öt32_t
 
ITM_CheckCh¨
 () {

1757 i‡(
	gITM_RxBuf„r
 =
ITM_RXBUFFER_EMPTY
) {

1770 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\core_cm4_simd.h

38 #ifde‡
__˝lu•lus


42 #i‚de‡
__CORE_CM4_SIMD_H


43 
	#__CORE_CM4_SIMD_H


	)

57 #i‡ 
deföed
 ( 
__CC_ARM
 )

61 
	#__SADD8
 
__ßdd8


	)

62 
	#__QADD8
 
__qadd8


	)

63 
	#__SHADD8
 
__shadd8


	)

64 
	#__UADD8
 
__uadd8


	)

65 
	#__UQADD8
 
__uqadd8


	)

66 
	#__UHADD8
 
__uhadd8


	)

67 
	#__SSUB8
 
__ssub8


	)

68 
	#__QSUB8
 
__qsub8


	)

69 
	#__SHSUB8
 
__shsub8


	)

70 
	#__USUB8
 
__usub8


	)

71 
	#__UQSUB8
 
__uqsub8


	)

72 
	#__UHSUB8
 
__uhsub8


	)

73 
	#__SADD16
 
__ßdd16


	)

74 
	#__QADD16
 
__qadd16


	)

75 
	#__SHADD16
 
__shadd16


	)

76 
	#__UADD16
 
__uadd16


	)

77 
	#__UQADD16
 
__uqadd16


	)

78 
	#__UHADD16
 
__uhadd16


	)

79 
	#__SSUB16
 
__ssub16


	)

80 
	#__QSUB16
 
__qsub16


	)

81 
	#__SHSUB16
 
__shsub16


	)

82 
	#__USUB16
 
__usub16


	)

83 
	#__UQSUB16
 
__uqsub16


	)

84 
	#__UHSUB16
 
__uhsub16


	)

85 
	#__SASX
 
__ßsx


	)

86 
	#__QASX
 
__qasx


	)

87 
	#__SHASX
 
__shasx


	)

88 
	#__UASX
 
__uasx


	)

89 
	#__UQASX
 
__uqasx


	)

90 
	#__UHASX
 
__uhasx


	)

91 
	#__SSAX
 
__sßx


	)

92 
	#__QSAX
 
__qßx


	)

93 
	#__SHSAX
 
__shßx


	)

94 
	#__USAX
 
__ußx


	)

95 
	#__UQSAX
 
__uqßx


	)

96 
	#__UHSAX
 
__uhßx


	)

97 
	#__USAD8
 
__ußd8


	)

98 
	#__USADA8
 
__ußda8


	)

99 
	#__SSAT16
 
__sßt16


	)

100 
	#__USAT16
 
__ußt16


	)

101 
	#__UXTB16
 
__uxtb16


	)

102 
	#__UXTAB16
 
__uxèb16


	)

103 
	#__SXTB16
 
__sxtb16


	)

104 
	#__SXTAB16
 
__sxèb16


	)

105 
	#__SMUAD
 
__smuad


	)

106 
	#__SMUADX
 
__smuadx


	)

107 
	#__SMLAD
 
__smœd


	)

108 
	#__SMLADX
 
__smœdx


	)

109 
	#__SMLALD
 
__smœld


	)

110 
	#__SMLALDX
 
__smœldx


	)

111 
	#__SMUSD
 
__smusd


	)

112 
	#__SMUSDX
 
__smusdx


	)

113 
	#__SMLSD
 
__smlsd


	)

114 
	#__SMLSDX
 
__smlsdx


	)

115 
	#__SMLSLD
 
__sml¶d


	)

116 
	#__SMLSLDX
 
__sml¶dx


	)

117 
	#__SEL
 
__£l


	)

118 
	#__QADD
 
__qadd


	)

119 
	#__QSUB
 
__qsub


	)

121 
	#__PKHBT
(
ARG1
,
ARG2
,
ARG3
Ë–((((
uöt32_t
)(ARG1)) ) & 0x0000FFFFUL) | \

122 ((((
uöt32_t
)(
ARG2
)Ë<< (
ARG3
)Ë& 0xFFFF0000ULË)

	)

124 
	#__PKHTB
(
ARG1
,
ARG2
,
ARG3
Ë–((((
uöt32_t
)(ARG1)) ) & 0xFFFF0000UL) | \

125 ((((
uöt32_t
)(
ARG2
)Ë>> (
ARG3
)Ë& 0x0000FFFFULË)

	)

127 
	#__SMMLA
(
ARG1
,
ARG2
,
ARG3
Ë–(
öt32_t
)((((
öt64_t
)(ARG1) * (ARG2)) + \

128 ((
öt64_t
)(
ARG3
Ë<< 32ËË>> 32))

	)

134 #ñi‡
deföed
 ( 
__ICCARM__
 )

138 
	~<cmsis_ür.h
>

144 #ñi‡
deföed
 ( 
__TMS470__
 )

148 
	~<cmsis_ccs.h
>

154 #ñi‡
deföed
 ( 
__GNUC__
 )

158 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SADD8
(
uöt32_t
 
›1
, uöt32_à
›2
)

160 
uöt32_t
 
ªsu…
;

162 
__ASM
 vﬁ©ûê("ßdd8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

163 (
ªsu…
);

164 
	}
}

166 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__QADD8
(
uöt32_t
 
›1
, uöt32_à
›2
)

168 
uöt32_t
 
ªsu…
;

170 
__ASM
 vﬁ©ûê("qadd8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

171 (
ªsu…
);

172 
	}
}

174 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SHADD8
(
uöt32_t
 
›1
, uöt32_à
›2
)

176 
uöt32_t
 
ªsu…
;

178 
__ASM
 vﬁ©ûê("shadd8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

179 (
ªsu…
);

180 
	}
}

182 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UADD8
(
uöt32_t
 
›1
, uöt32_à
›2
)

184 
uöt32_t
 
ªsu…
;

186 
__ASM
 vﬁ©ûê("uadd8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

187 (
ªsu…
);

188 
	}
}

190 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UQADD8
(
uöt32_t
 
›1
, uöt32_à
›2
)

192 
uöt32_t
 
ªsu…
;

194 
__ASM
 vﬁ©ûê("uqadd8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

195 (
ªsu…
);

196 
	}
}

198 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UHADD8
(
uöt32_t
 
›1
, uöt32_à
›2
)

200 
uöt32_t
 
ªsu…
;

202 
__ASM
 vﬁ©ûê("uhadd8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

203 (
ªsu…
);

204 
	}
}

207 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SSUB8
(
uöt32_t
 
›1
, uöt32_à
›2
)

209 
uöt32_t
 
ªsu…
;

211 
__ASM
 vﬁ©ûê("ssub8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

212 (
ªsu…
);

213 
	}
}

215 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__QSUB8
(
uöt32_t
 
›1
, uöt32_à
›2
)

217 
uöt32_t
 
ªsu…
;

219 
__ASM
 vﬁ©ûê("qsub8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

220 (
ªsu…
);

221 
	}
}

223 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SHSUB8
(
uöt32_t
 
›1
, uöt32_à
›2
)

225 
uöt32_t
 
ªsu…
;

227 
__ASM
 vﬁ©ûê("shsub8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

228 (
ªsu…
);

229 
	}
}

231 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__USUB8
(
uöt32_t
 
›1
, uöt32_à
›2
)

233 
uöt32_t
 
ªsu…
;

235 
__ASM
 vﬁ©ûê("usub8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

236 (
ªsu…
);

237 
	}
}

239 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UQSUB8
(
uöt32_t
 
›1
, uöt32_à
›2
)

241 
uöt32_t
 
ªsu…
;

243 
__ASM
 vﬁ©ûê("uqsub8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

244 (
ªsu…
);

245 
	}
}

247 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UHSUB8
(
uöt32_t
 
›1
, uöt32_à
›2
)

249 
uöt32_t
 
ªsu…
;

251 
__ASM
 vﬁ©ûê("uhsub8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

252 (
ªsu…
);

253 
	}
}

256 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SADD16
(
uöt32_t
 
›1
, uöt32_à
›2
)

258 
uöt32_t
 
ªsu…
;

260 
__ASM
 vﬁ©ûê("ßdd16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

261 (
ªsu…
);

262 
	}
}

264 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__QADD16
(
uöt32_t
 
›1
, uöt32_à
›2
)

266 
uöt32_t
 
ªsu…
;

268 
__ASM
 vﬁ©ûê("qadd16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

269 (
ªsu…
);

270 
	}
}

272 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SHADD16
(
uöt32_t
 
›1
, uöt32_à
›2
)

274 
uöt32_t
 
ªsu…
;

276 
__ASM
 vﬁ©ûê("shadd16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

277 (
ªsu…
);

278 
	}
}

280 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UADD16
(
uöt32_t
 
›1
, uöt32_à
›2
)

282 
uöt32_t
 
ªsu…
;

284 
__ASM
 vﬁ©ûê("uadd16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

285 (
ªsu…
);

286 
	}
}

288 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UQADD16
(
uöt32_t
 
›1
, uöt32_à
›2
)

290 
uöt32_t
 
ªsu…
;

292 
__ASM
 vﬁ©ûê("uqadd16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

293 (
ªsu…
);

294 
	}
}

296 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UHADD16
(
uöt32_t
 
›1
, uöt32_à
›2
)

298 
uöt32_t
 
ªsu…
;

300 
__ASM
 vﬁ©ûê("uhadd16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

301 (
ªsu…
);

302 
	}
}

304 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SSUB16
(
uöt32_t
 
›1
, uöt32_à
›2
)

306 
uöt32_t
 
ªsu…
;

308 
__ASM
 vﬁ©ûê("ssub16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

309 (
ªsu…
);

310 
	}
}

312 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__QSUB16
(
uöt32_t
 
›1
, uöt32_à
›2
)

314 
uöt32_t
 
ªsu…
;

316 
__ASM
 vﬁ©ûê("qsub16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

317 (
ªsu…
);

318 
	}
}

320 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SHSUB16
(
uöt32_t
 
›1
, uöt32_à
›2
)

322 
uöt32_t
 
ªsu…
;

324 
__ASM
 vﬁ©ûê("shsub16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

325 (
ªsu…
);

326 
	}
}

328 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__USUB16
(
uöt32_t
 
›1
, uöt32_à
›2
)

330 
uöt32_t
 
ªsu…
;

332 
__ASM
 vﬁ©ûê("usub16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

333 (
ªsu…
);

334 
	}
}

336 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UQSUB16
(
uöt32_t
 
›1
, uöt32_à
›2
)

338 
uöt32_t
 
ªsu…
;

340 
__ASM
 vﬁ©ûê("uqsub16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

341 (
ªsu…
);

342 
	}
}

344 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UHSUB16
(
uöt32_t
 
›1
, uöt32_à
›2
)

346 
uöt32_t
 
ªsu…
;

348 
__ASM
 vﬁ©ûê("uhsub16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

349 (
ªsu…
);

350 
	}
}

352 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SASX
(
uöt32_t
 
›1
, uöt32_à
›2
)

354 
uöt32_t
 
ªsu…
;

356 
__ASM
 vﬁ©ûê("ßsx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

357 (
ªsu…
);

358 
	}
}

360 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__QASX
(
uöt32_t
 
›1
, uöt32_à
›2
)

362 
uöt32_t
 
ªsu…
;

364 
__ASM
 vﬁ©ûê("qasx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

365 (
ªsu…
);

366 
	}
}

368 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SHASX
(
uöt32_t
 
›1
, uöt32_à
›2
)

370 
uöt32_t
 
ªsu…
;

372 
__ASM
 vﬁ©ûê("shasx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

373 (
ªsu…
);

374 
	}
}

376 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UASX
(
uöt32_t
 
›1
, uöt32_à
›2
)

378 
uöt32_t
 
ªsu…
;

380 
__ASM
 vﬁ©ûê("uasx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

381 (
ªsu…
);

382 
	}
}

384 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UQASX
(
uöt32_t
 
›1
, uöt32_à
›2
)

386 
uöt32_t
 
ªsu…
;

388 
__ASM
 vﬁ©ûê("uqasx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

389 (
ªsu…
);

390 
	}
}

392 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UHASX
(
uöt32_t
 
›1
, uöt32_à
›2
)

394 
uöt32_t
 
ªsu…
;

396 
__ASM
 vﬁ©ûê("uhasx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

397 (
ªsu…
);

398 
	}
}

400 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SSAX
(
uöt32_t
 
›1
, uöt32_à
›2
)

402 
uöt32_t
 
ªsu…
;

404 
__ASM
 vﬁ©ûê("sßx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

405 (
ªsu…
);

406 
	}
}

408 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__QSAX
(
uöt32_t
 
›1
, uöt32_à
›2
)

410 
uöt32_t
 
ªsu…
;

412 
__ASM
 vﬁ©ûê("qßx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

413 (
ªsu…
);

414 
	}
}

416 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SHSAX
(
uöt32_t
 
›1
, uöt32_à
›2
)

418 
uöt32_t
 
ªsu…
;

420 
__ASM
 vﬁ©ûê("shßx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

421 (
ªsu…
);

422 
	}
}

424 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__USAX
(
uöt32_t
 
›1
, uöt32_à
›2
)

426 
uöt32_t
 
ªsu…
;

428 
__ASM
 vﬁ©ûê("ußx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

429 (
ªsu…
);

430 
	}
}

432 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UQSAX
(
uöt32_t
 
›1
, uöt32_à
›2
)

434 
uöt32_t
 
ªsu…
;

436 
__ASM
 vﬁ©ûê("uqßx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

437 (
ªsu…
);

438 
	}
}

440 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UHSAX
(
uöt32_t
 
›1
, uöt32_à
›2
)

442 
uöt32_t
 
ªsu…
;

444 
__ASM
 vﬁ©ûê("uhßx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

445 (
ªsu…
);

446 
	}
}

448 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__USAD8
(
uöt32_t
 
›1
, uöt32_à
›2
)

450 
uöt32_t
 
ªsu…
;

452 
__ASM
 vﬁ©ûê("ußd8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

453 (
ªsu…
);

454 
	}
}

456 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__USADA8
(
uöt32_t
 
›1
, uöt32_à
›2
, uöt32_à
›3
)

458 
uöt32_t
 
ªsu…
;

460 
__ASM
 vﬁ©ûê("ußda8 %0, %1, %2, %3" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
), "r" (
›3
) );

461 (
ªsu…
);

462 
	}
}

464 
	#__SSAT16
(
ARG1
,
ARG2
) \

466 
uöt32_t
 
__RES
, 
__ARG1
 = (
ARG1
); \

467 
	`__ASM
 ("sßt16 %0, %1, %2" : "Ù" (
__RES
Ë: "I" (
ARG2
), "r" (
__ARG1
) ); \

468 
__RES
; \

469 })

	)

471 
	#__USAT16
(
ARG1
,
ARG2
) \

473 
uöt32_t
 
__RES
, 
__ARG1
 = (
ARG1
); \

474 
	`__ASM
 ("ußt16 %0, %1, %2" : "Ù" (
__RES
Ë: "I" (
ARG2
), "r" (
__ARG1
) ); \

475 
__RES
; \

476 })

	)

478 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UXTB16
(
uöt32_t
 
›1
)

480 
uöt32_t
 
ªsu…
;

482 
__ASM
 vﬁ©ûê("uxtb16 %0, %1" : "Ù" (
ªsu…
Ë: "r" (
›1
));

483 (
ªsu…
);

484 
	}
}

486 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UXTAB16
(
uöt32_t
 
›1
, uöt32_à
›2
)

488 
uöt32_t
 
ªsu…
;

490 
__ASM
 vﬁ©ûê("uxèb16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

491 (
ªsu…
);

492 
	}
}

494 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SXTB16
(
uöt32_t
 
›1
)

496 
uöt32_t
 
ªsu…
;

498 
__ASM
 vﬁ©ûê("sxtb16 %0, %1" : "Ù" (
ªsu…
Ë: "r" (
›1
));

499 (
ªsu…
);

500 
	}
}

502 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SXTAB16
(
uöt32_t
 
›1
, uöt32_à
›2
)

504 
uöt32_t
 
ªsu…
;

506 
__ASM
 vﬁ©ûê("sxèb16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

507 (
ªsu…
);

508 
	}
}

510 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SMUAD
 (
uöt32_t
 
›1
, uöt32_à
›2
)

512 
uöt32_t
 
ªsu…
;

514 
__ASM
 vﬁ©ûê("smuad %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

515 (
ªsu…
);

516 
	}
}

518 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SMUADX
 (
uöt32_t
 
›1
, uöt32_à
›2
)

520 
uöt32_t
 
ªsu…
;

522 
__ASM
 vﬁ©ûê("smuadx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

523 (
ªsu…
);

524 
	}
}

526 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SMLAD
 (
uöt32_t
 
›1
, uöt32_à
›2
, uöt32_à
›3
)

528 
uöt32_t
 
ªsu…
;

530 
__ASM
 vﬁ©ûê("smœd %0, %1, %2, %3" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
), "r" (
›3
) );

531 (
ªsu…
);

532 
	}
}

534 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SMLADX
 (
uöt32_t
 
›1
, uöt32_à
›2
, uöt32_à
›3
)

536 
uöt32_t
 
ªsu…
;

538 
__ASM
 vﬁ©ûê("smœdx %0, %1, %2, %3" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
), "r" (
›3
) );

539 (
ªsu…
);

540 
	}
}

542 
	#__SMLALD
(
ARG1
,
ARG2
,
ARG3
) \

544 
uöt32_t
 
__ARG1
 = (
ARG1
), 
__ARG2
 = (
ARG2
), 
__ARG3_H
 = (uöt32_t)((
uöt64_t
)(
ARG3
Ë>> 32), 
__ARG3_L
 = (uint32_t)((uint64_t)(ARG3) & 0xFFFFFFFFUL); \

545 
__ASM
 vﬁ©ûê("smœld %0, %1, %2, %3" : "Ù" (
__ARG3_L
), "Ù" (
__ARG3_H
Ë: "r" (
__ARG1
), "r" (
__ARG2
), "0" (__ARG3_L), "1" (__ARG3_H) ); \

546 (
uöt64_t
)(((uöt64_t)
__ARG3_H
 << 32Ë| 
__ARG3_L
); \

547 })

	)

549 
	#__SMLALDX
(
ARG1
,
ARG2
,
ARG3
) \

551 
uöt32_t
 
__ARG1
 = (
ARG1
), 
__ARG2
 = (
ARG2
), 
__ARG3_H
 = (uöt32_t)((
uöt64_t
)(
ARG3
Ë>> 32), 
__ARG3_L
 = (uint32_t)((uint64_t)(ARG3) & 0xFFFFFFFFUL); \

552 
__ASM
 vﬁ©ûê("smœldx %0, %1, %2, %3" : "Ù" (
__ARG3_L
), "Ù" (
__ARG3_H
Ë: "r" (
__ARG1
), "r" (
__ARG2
), "0" (__ARG3_L), "1" (__ARG3_H) ); \

553 (
uöt64_t
)(((uöt64_t)
__ARG3_H
 << 32Ë| 
__ARG3_L
); \

554 })

	)

556 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SMUSD
 (
uöt32_t
 
›1
, uöt32_à
›2
)

558 
uöt32_t
 
ªsu…
;

560 
__ASM
 vﬁ©ûê("smusd %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

561 (
ªsu…
);

562 
	}
}

564 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SMUSDX
 (
uöt32_t
 
›1
, uöt32_à
›2
)

566 
uöt32_t
 
ªsu…
;

568 
__ASM
 vﬁ©ûê("smusdx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

569 (
ªsu…
);

570 
	}
}

572 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SMLSD
 (
uöt32_t
 
›1
, uöt32_à
›2
, uöt32_à
›3
)

574 
uöt32_t
 
ªsu…
;

576 
__ASM
 vﬁ©ûê("smlsd %0, %1, %2, %3" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
), "r" (
›3
) );

577 (
ªsu…
);

578 
	}
}

580 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SMLSDX
 (
uöt32_t
 
›1
, uöt32_à
›2
, uöt32_à
›3
)

582 
uöt32_t
 
ªsu…
;

584 
__ASM
 vﬁ©ûê("smlsdx %0, %1, %2, %3" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
), "r" (
›3
) );

585 (
ªsu…
);

586 
	}
}

588 
	#__SMLSLD
(
ARG1
,
ARG2
,
ARG3
) \

590 
uöt32_t
 
__ARG1
 = (
ARG1
), 
__ARG2
 = (
ARG2
), 
__ARG3_H
 = (uöt32_t)((
ARG3
Ë>> 32), 
__ARG3_L
 = (uint32_t)((ARG3) & 0xFFFFFFFFUL); \

591 
__ASM
 vﬁ©ûê("sml¶d %0, %1, %2, %3" : "Ù" (
__ARG3_L
), "Ù" (
__ARG3_H
Ë: "r" (
__ARG1
), "r" (
__ARG2
), "0" (__ARG3_L), "1" (__ARG3_H) ); \

592 (
uöt64_t
)(((uöt64_t)
__ARG3_H
 << 32Ë| 
__ARG3_L
); \

593 })

	)

595 
	#__SMLSLDX
(
ARG1
,
ARG2
,
ARG3
) \

597 
uöt32_t
 
__ARG1
 = (
ARG1
), 
__ARG2
 = (
ARG2
), 
__ARG3_H
 = (uöt32_t)((
ARG3
Ë>> 32), 
__ARG3_L
 = (uint32_t)((ARG3) & 0xFFFFFFFFUL); \

598 
__ASM
 vﬁ©ûê("sml¶dx %0, %1, %2, %3" : "Ù" (
__ARG3_L
), "Ù" (
__ARG3_H
Ë: "r" (
__ARG1
), "r" (
__ARG2
), "0" (__ARG3_L), "1" (__ARG3_H) ); \

599 (
uöt64_t
)(((uöt64_t)
__ARG3_H
 << 32Ë| 
__ARG3_L
); \

600 })

	)

602 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SEL
 (
uöt32_t
 
›1
, uöt32_à
›2
)

604 
uöt32_t
 
ªsu…
;

606 
__ASM
 vﬁ©ûê("£»%0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

607 (
ªsu…
);

608 
	}
}

610 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__QADD
(
uöt32_t
 
›1
, uöt32_à
›2
)

612 
uöt32_t
 
ªsu…
;

614 
__ASM
 vﬁ©ûê("qadd %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

615 (
ªsu…
);

616 
	}
}

618 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__QSUB
(
uöt32_t
 
›1
, uöt32_à
›2
)

620 
uöt32_t
 
ªsu…
;

622 
__ASM
 vﬁ©ûê("qsub %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

623 (
ªsu…
);

624 
	}
}

626 
	#__PKHBT
(
ARG1
,
ARG2
,
ARG3
) \

628 
uöt32_t
 
__RES
, 
__ARG1
 = (
ARG1
), 
__ARG2
 = (
ARG2
); \

629 
	`__ASM
 ("pkhbà%0, %1, %2,Ü¶ %3" : "Ù" (
__RES
Ë: "r" (
__ARG1
), "r" (
__ARG2
), "I" (
ARG3
) ); \

630 
__RES
; \

631 })

	)

633 
	#__PKHTB
(
ARG1
,
ARG2
,
ARG3
) \

635 
uöt32_t
 
__RES
, 
__ARG1
 = (
ARG1
), 
__ARG2
 = (
ARG2
); \

636 i‡(
ARG3
 == 0) \

637 
	`__ASM
 ("pkhtb %0, %1, %2" : "Ù" (
__RES
Ë: "r" (
__ARG1
), "r" (
__ARG2
) ); \

639 
	`__ASM
 ("pkhtb %0, %1, %2,á§ %3" : "Ù" (
__RES
Ë: "r" (
__ARG1
), "r" (
__ARG2
), "I" (
ARG3
) ); \

640 
__RES
; \

641 })

	)

643 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SMMLA
 (
öt32_t
 
›1
, i¡32_à
›2
, i¡32_à
›3
)

645 
öt32_t
 
ªsu…
;

647 
__ASM
 vﬁ©ûê("smmœ %0, %1, %2, %3" : "Ù" (
ªsu…
): "r" (
›1
), "r" (
›2
), "r" (
›3
) );

648 (
ªsu…
);

649 
	}
}

655 #ñi‡
deföed
 ( 
__TASKING__
 )

671 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\core_cm7.h

38 #i‡
deföed
 ( 
__ICCARM__
 )

39 #¥agm®
sy°em_ö˛ude


42 #i‚de‡
__CORE_CM7_H_GENERIC


43 
	#__CORE_CM7_H_GENERIC


	)

45 #ifde‡
__˝lu•lus


71 
	#__CM7_CMSIS_VERSION_MAIN
 (0x04Ë

	)

72 
	#__CM7_CMSIS_VERSION_SUB
 (0x00Ë

	)

73 
	#__CM7_CMSIS_VERSION
 ((
__CM7_CMSIS_VERSION_MAIN
 << 16) | \

74 
__CM7_CMSIS_VERSION_SUB
 )

	)

76 
	#__CORTEX_M
 (0x07Ë

	)

79 #i‡ 
deföed
 ( 
__CC_ARM
 )

80 
	#__ASM
 
__asm


	)

81 
	#__INLINE
 
__ölöe


	)

82 
	#__STATIC_INLINE
 
__ölöe


	)

84 #ñi‡
deföed
 ( 
__GNUC__
 )

85 
	#__ASM
 
__asm


	)

86 
	#__INLINE
 
ölöe


	)

87 
	#__STATIC_INLINE
 
ölöe


	)

89 #ñi‡
deföed
 ( 
__ICCARM__
 )

90 
	#__ASM
 
__asm


	)

91 
	#__INLINE
 
ölöe


	)

92 
	#__STATIC_INLINE
 
ölöe


	)

94 #ñi‡
deföed
 ( 
__TMS470__
 )

95 
	#__ASM
 
__asm


	)

96 
	#__STATIC_INLINE
 
ölöe


	)

98 #ñi‡
deföed
 ( 
__TASKING__
 )

99 
	#__ASM
 
__asm


	)

100 
	#__INLINE
 
ölöe


	)

101 
	#__STATIC_INLINE
 
ölöe


	)

103 #ñi‡
deföed
 ( 
__CSMC__
 )

104 
	#__∑cked


	)

105 
	#__ASM
 
_asm


	)

106 
	#__INLINE
 
ölöe


	)

107 
	#__STATIC_INLINE
 
ölöe


	)

114 #i‡
deföed
 ( 
__CC_ARM
 )

115 #i‡
deföed
 
__TARGET_FPU_VFP


116 #i‡(
__FPU_PRESENT
 == 1)

117 
	#__FPU_USED
 1

	)

120 
	#__FPU_USED
 0

	)

123 
	#__FPU_USED
 0

	)

126 #ñi‡
deföed
 ( 
__GNUC__
 )

127 #i‡
deföed
 (
__VFP_FP__
Ë&& !deföed(
__SOFTFP__
)

128 #i‡(
__FPU_PRESENT
 == 1)

129 
	#__FPU_USED
 1

	)

132 
	#__FPU_USED
 0

	)

135 
	#__FPU_USED
 0

	)

138 #ñi‡
deföed
 ( 
__ICCARM__
 )

139 #i‡
deföed
 
__ARMVFP__


140 #i‡(
__FPU_PRESENT
 == 1)

141 
	#__FPU_USED
 1

	)

144 
	#__FPU_USED
 0

	)

147 
	#__FPU_USED
 0

	)

150 #ñi‡
deföed
 ( 
__TMS470__
 )

151 #i‡
deföed
 
__TI_VFP_SUPPORT__


152 #i‡(
__FPU_PRESENT
 == 1)

153 
	#__FPU_USED
 1

	)

156 
	#__FPU_USED
 0

	)

159 
	#__FPU_USED
 0

	)

162 #ñi‡
deföed
 ( 
__TASKING__
 )

163 #i‡
deföed
 
__FPU_VFP__


164 #i‡(
__FPU_PRESENT
 == 1)

165 
	#__FPU_USED
 1

	)

168 
	#__FPU_USED
 0

	)

171 
	#__FPU_USED
 0

	)

174 #ñi‡
deföed
 ( 
__CSMC__
 )

175 #i‡–
__CSMC__
 & 0x400)

176 #i‡(
__FPU_PRESENT
 == 1)

177 
	#__FPU_USED
 1

	)

180 
	#__FPU_USED
 0

	)

183 
	#__FPU_USED
 0

	)

187 
	~<°döt.h
>

188 
	~<c‹e_cmIn°r.h
>

189 
	~<c‹e_cmFunc.h
>

190 
	~<c‹e_cmSimd.h
>

192 #ifde‡
__˝lu•lus


198 #i‚de‡
__CMSIS_GENERIC


200 #i‚de‡
__CORE_CM7_H_DEPENDANT


201 
	#__CORE_CM7_H_DEPENDANT


	)

203 #ifde‡
__˝lu•lus


208 #i‡
deföed
 
__CHECK_DEVICE_DEFINES


209 #i‚de‡
__CM7_REV


210 
	#__CM7_REV
 0x0000

	)

214 #i‚de‡
__FPU_PRESENT


215 
	#__FPU_PRESENT
 0

	)

219 #i‚de‡
__MPU_PRESENT


220 
	#__MPU_PRESENT
 0

	)

224 #i‚de‡
__ICACHE_PRESENT


225 
	#__ICACHE_PRESENT
 0

	)

229 #i‚de‡
__DCACHE_PRESENT


230 
	#__DCACHE_PRESENT
 0

	)

234 #i‚de‡
__DTCM_PRESENT


235 
	#__DTCM_PRESENT
 0

	)

239 #i‚de‡
__NVIC_PRIO_BITS


240 
	#__NVIC_PRIO_BITS
 3

	)

244 #i‚de‡
__Víd‹_SysTickC⁄fig


245 
	#__Víd‹_SysTickC⁄fig
 0

	)

258 #ifde‡
__˝lu•lus


259 
	#__I
 vﬁ©ûê

	)

261 
	#__I
 vﬁ©ûêc⁄°

	)

263 
	#__O
 vﬁ©ûê

	)

264 
	#__IO
 vﬁ©ûê

	)

297 
uöt32_t
 
_ª£rved0
:16;

298 
uöt32_t
 
GE
:4;

299 
uöt32_t
 
_ª£rved1
:7;

300 
uöt32_t
 
Q
:1;

301 
uöt32_t
 
V
:1;

302 
uöt32_t
 
C
:1;

303 
uöt32_t
 
Z
:1;

304 
uöt32_t
 
N
:1;

305 } 
b
;

306 
uöt32_t
 
w
;

307 } 
	tAPSR_Ty≥
;

310 
	#APSR_N_Pos
 31

	)

311 
	#APSR_N_Msk
 (1UL << 
APSR_N_Pos
Ë

	)

313 
	#APSR_Z_Pos
 30

	)

314 
	#APSR_Z_Msk
 (1UL << 
APSR_Z_Pos
Ë

	)

316 
	#APSR_C_Pos
 29

	)

317 
	#APSR_C_Msk
 (1UL << 
APSR_C_Pos
Ë

	)

319 
	#APSR_V_Pos
 28

	)

320 
	#APSR_V_Msk
 (1UL << 
APSR_V_Pos
Ë

	)

322 
	#APSR_Q_Pos
 27

	)

323 
	#APSR_Q_Msk
 (1UL << 
APSR_Q_Pos
Ë

	)

325 
	#APSR_GE_Pos
 16

	)

326 
	#APSR_GE_Msk
 (0xFUL << 
APSR_GE_Pos
Ë

	)

335 
uöt32_t
 
ISR
:9;

336 
uöt32_t
 
_ª£rved0
:23;

337 } 
b
;

338 
uöt32_t
 
w
;

339 } 
	tIPSR_Ty≥
;

342 
	#IPSR_ISR_Pos
 0

	)

343 
	#IPSR_ISR_Msk
 (0x1FFUL )

	)

352 
uöt32_t
 
ISR
:9;

353 
uöt32_t
 
_ª£rved0
:7;

354 
uöt32_t
 
GE
:4;

355 
uöt32_t
 
_ª£rved1
:4;

356 
uöt32_t
 
T
:1;

357 
uöt32_t
 
IT
:2;

358 
uöt32_t
 
Q
:1;

359 
uöt32_t
 
V
:1;

360 
uöt32_t
 
C
:1;

361 
uöt32_t
 
Z
:1;

362 
uöt32_t
 
N
:1;

363 } 
b
;

364 
uöt32_t
 
w
;

365 } 
	txPSR_Ty≥
;

368 
	#xPSR_N_Pos
 31

	)

369 
	#xPSR_N_Msk
 (1UL << 
xPSR_N_Pos
Ë

	)

371 
	#xPSR_Z_Pos
 30

	)

372 
	#xPSR_Z_Msk
 (1UL << 
xPSR_Z_Pos
Ë

	)

374 
	#xPSR_C_Pos
 29

	)

375 
	#xPSR_C_Msk
 (1UL << 
xPSR_C_Pos
Ë

	)

377 
	#xPSR_V_Pos
 28

	)

378 
	#xPSR_V_Msk
 (1UL << 
xPSR_V_Pos
Ë

	)

380 
	#xPSR_Q_Pos
 27

	)

381 
	#xPSR_Q_Msk
 (1UL << 
xPSR_Q_Pos
Ë

	)

383 
	#xPSR_IT_Pos
 25

	)

384 
	#xPSR_IT_Msk
 (3UL << 
xPSR_IT_Pos
Ë

	)

386 
	#xPSR_T_Pos
 24

	)

387 
	#xPSR_T_Msk
 (1UL << 
xPSR_T_Pos
Ë

	)

389 
	#xPSR_GE_Pos
 16

	)

390 
	#xPSR_GE_Msk
 (0xFUL << 
xPSR_GE_Pos
Ë

	)

392 
	#xPSR_ISR_Pos
 0

	)

393 
	#xPSR_ISR_Msk
 (0x1FFUL )

	)

402 
uöt32_t
 
nPRIV
:1;

403 
uöt32_t
 
SPSEL
:1;

404 
uöt32_t
 
FPCA
:1;

405 
uöt32_t
 
_ª£rved0
:29;

406 } 
b
;

407 
uöt32_t
 
w
;

408 } 
	tCONTROL_Ty≥
;

411 
	#CONTROL_FPCA_Pos
 2

	)

412 
	#CONTROL_FPCA_Msk
 (1UL << 
CONTROL_FPCA_Pos
Ë

	)

414 
	#CONTROL_SPSEL_Pos
 1

	)

415 
	#CONTROL_SPSEL_Msk
 (1UL << 
CONTROL_SPSEL_Pos
Ë

	)

417 
	#CONTROL_nPRIV_Pos
 0

	)

418 
	#CONTROL_nPRIV_Msk
 (1UL )

	)

433 
__IO
 
uöt32_t
 
ISER
[8];

434 
uöt32_t
 
RESERVED0
[24];

435 
__IO
 
uöt32_t
 
ICER
[8];

436 
uöt32_t
 
RSERVED1
[24];

437 
__IO
 
uöt32_t
 
ISPR
[8];

438 
uöt32_t
 
RESERVED2
[24];

439 
__IO
 
uöt32_t
 
ICPR
[8];

440 
uöt32_t
 
RESERVED3
[24];

441 
__IO
 
uöt32_t
 
IABR
[8];

442 
uöt32_t
 
RESERVED4
[56];

443 
__IO
 
uöt8_t
 
IP
[240];

444 
uöt32_t
 
RESERVED5
[644];

445 
__O
 
uöt32_t
 
STIR
;

446 } 
	tNVIC_Ty≥
;

449 
	#NVIC_STIR_INTID_Pos
 0

	)

450 
	#NVIC_STIR_INTID_Msk
 (0x1FFUL )

	)

465 
__I
 
uöt32_t
 
CPUID
;

466 
__IO
 
uöt32_t
 
ICSR
;

467 
__IO
 
uöt32_t
 
VTOR
;

468 
__IO
 
uöt32_t
 
AIRCR
;

469 
__IO
 
uöt32_t
 
SCR
;

470 
__IO
 
uöt32_t
 
CCR
;

471 
__IO
 
uöt8_t
 
SHPR
[12];

472 
__IO
 
uöt32_t
 
SHCSR
;

473 
__IO
 
uöt32_t
 
CFSR
;

474 
__IO
 
uöt32_t
 
HFSR
;

475 
__IO
 
uöt32_t
 
DFSR
;

476 
__IO
 
uöt32_t
 
MMFAR
;

477 
__IO
 
uöt32_t
 
BFAR
;

478 
__IO
 
uöt32_t
 
AFSR
;

479 
__I
 
uöt32_t
 
ID_PFR
[2];

480 
__I
 
uöt32_t
 
ID_DFR
;

481 
__I
 
uöt32_t
 
ID_AFR
;

482 
__I
 
uöt32_t
 
ID_MFR
[4];

483 
__I
 
uöt32_t
 
ID_ISAR
[5];

484 
uöt32_t
 
RESERVED0
[1];

485 
__I
 
uöt32_t
 
CLIDR
;

486 
__I
 
uöt32_t
 
CTR
;

487 
__I
 
uöt32_t
 
CCSIDR
;

488 
__IO
 
uöt32_t
 
CSSELR
;

489 
__IO
 
uöt32_t
 
CPACR
;

490 
uöt32_t
 
RESERVED3
[93];

491 
__O
 
uöt32_t
 
STIR
;

492 
uöt32_t
 
RESERVED4
[15];

493 
__I
 
uöt32_t
 
MVFR0
;

494 
__I
 
uöt32_t
 
MVFR1
;

495 
__I
 
uöt32_t
 
MVFR2
;

496 
uöt32_t
 
RESERVED5
[1];

497 
__O
 
uöt32_t
 
ICIALLU
;

498 
uöt32_t
 
RESERVED6
[1];

499 
__O
 
uöt32_t
 
ICIMVAU
;

500 
__O
 
uöt32_t
 
DCIMVAC
;

501 
__O
 
uöt32_t
 
DCISW
;

502 
__O
 
uöt32_t
 
DCCMVAU
;

503 
__O
 
uöt32_t
 
DCCMVAC
;

504 
__O
 
uöt32_t
 
DCCSW
;

505 
__O
 
uöt32_t
 
DCCIMVAC
;

506 
__O
 
uöt32_t
 
DCCISW
;

507 
uöt32_t
 
RESERVED7
[6];

508 
__IO
 
uöt32_t
 
ITCMCR
;

509 
__IO
 
uöt32_t
 
DTCMCR
;

510 
__IO
 
uöt32_t
 
AHBPCR
;

511 
__IO
 
uöt32_t
 
CACR
;

512 
__IO
 
uöt32_t
 
AHBSCR
;

513 
uöt32_t
 
RESERVED8
[1];

514 
__IO
 
uöt32_t
 
ABFSR
;

515 } 
	tSCB_Ty≥
;

518 
	#SCB_CPUID_IMPLEMENTER_Pos
 24

	)

519 
	#SCB_CPUID_IMPLEMENTER_Msk
 (0xFFUL << 
SCB_CPUID_IMPLEMENTER_Pos
Ë

	)

521 
	#SCB_CPUID_VARIANT_Pos
 20

	)

522 
	#SCB_CPUID_VARIANT_Msk
 (0xFUL << 
SCB_CPUID_VARIANT_Pos
Ë

	)

524 
	#SCB_CPUID_ARCHITECTURE_Pos
 16

	)

525 
	#SCB_CPUID_ARCHITECTURE_Msk
 (0xFUL << 
SCB_CPUID_ARCHITECTURE_Pos
Ë

	)

527 
	#SCB_CPUID_PARTNO_Pos
 4

	)

528 
	#SCB_CPUID_PARTNO_Msk
 (0xFFFUL << 
SCB_CPUID_PARTNO_Pos
Ë

	)

530 
	#SCB_CPUID_REVISION_Pos
 0

	)

531 
	#SCB_CPUID_REVISION_Msk
 (0xFUL )

	)

534 
	#SCB_ICSR_NMIPENDSET_Pos
 31

	)

535 
	#SCB_ICSR_NMIPENDSET_Msk
 (1UL << 
SCB_ICSR_NMIPENDSET_Pos
Ë

	)

537 
	#SCB_ICSR_PENDSVSET_Pos
 28

	)

538 
	#SCB_ICSR_PENDSVSET_Msk
 (1UL << 
SCB_ICSR_PENDSVSET_Pos
Ë

	)

540 
	#SCB_ICSR_PENDSVCLR_Pos
 27

	)

541 
	#SCB_ICSR_PENDSVCLR_Msk
 (1UL << 
SCB_ICSR_PENDSVCLR_Pos
Ë

	)

543 
	#SCB_ICSR_PENDSTSET_Pos
 26

	)

544 
	#SCB_ICSR_PENDSTSET_Msk
 (1UL << 
SCB_ICSR_PENDSTSET_Pos
Ë

	)

546 
	#SCB_ICSR_PENDSTCLR_Pos
 25

	)

547 
	#SCB_ICSR_PENDSTCLR_Msk
 (1UL << 
SCB_ICSR_PENDSTCLR_Pos
Ë

	)

549 
	#SCB_ICSR_ISRPREEMPT_Pos
 23

	)

550 
	#SCB_ICSR_ISRPREEMPT_Msk
 (1UL << 
SCB_ICSR_ISRPREEMPT_Pos
Ë

	)

552 
	#SCB_ICSR_ISRPENDING_Pos
 22

	)

553 
	#SCB_ICSR_ISRPENDING_Msk
 (1UL << 
SCB_ICSR_ISRPENDING_Pos
Ë

	)

555 
	#SCB_ICSR_VECTPENDING_Pos
 12

	)

556 
	#SCB_ICSR_VECTPENDING_Msk
 (0x1FFUL << 
SCB_ICSR_VECTPENDING_Pos
Ë

	)

558 
	#SCB_ICSR_RETTOBASE_Pos
 11

	)

559 
	#SCB_ICSR_RETTOBASE_Msk
 (1UL << 
SCB_ICSR_RETTOBASE_Pos
Ë

	)

561 
	#SCB_ICSR_VECTACTIVE_Pos
 0

	)

562 
	#SCB_ICSR_VECTACTIVE_Msk
 (0x1FFUL )

	)

565 
	#SCB_VTOR_TBLOFF_Pos
 7

	)

566 
	#SCB_VTOR_TBLOFF_Msk
 (0x1FFFFFFUL << 
SCB_VTOR_TBLOFF_Pos
Ë

	)

569 
	#SCB_AIRCR_VECTKEY_Pos
 16

	)

570 
	#SCB_AIRCR_VECTKEY_Msk
 (0xFFFFUL << 
SCB_AIRCR_VECTKEY_Pos
Ë

	)

572 
	#SCB_AIRCR_VECTKEYSTAT_Pos
 16

	)

573 
	#SCB_AIRCR_VECTKEYSTAT_Msk
 (0xFFFFUL << 
SCB_AIRCR_VECTKEYSTAT_Pos
Ë

	)

575 
	#SCB_AIRCR_ENDIANESS_Pos
 15

	)

576 
	#SCB_AIRCR_ENDIANESS_Msk
 (1UL << 
SCB_AIRCR_ENDIANESS_Pos
Ë

	)

578 
	#SCB_AIRCR_PRIGROUP_Pos
 8

	)

579 
	#SCB_AIRCR_PRIGROUP_Msk
 (7UL << 
SCB_AIRCR_PRIGROUP_Pos
Ë

	)

581 
	#SCB_AIRCR_SYSRESETREQ_Pos
 2

	)

582 
	#SCB_AIRCR_SYSRESETREQ_Msk
 (1UL << 
SCB_AIRCR_SYSRESETREQ_Pos
Ë

	)

584 
	#SCB_AIRCR_VECTCLRACTIVE_Pos
 1

	)

585 
	#SCB_AIRCR_VECTCLRACTIVE_Msk
 (1UL << 
SCB_AIRCR_VECTCLRACTIVE_Pos
Ë

	)

587 
	#SCB_AIRCR_VECTRESET_Pos
 0

	)

588 
	#SCB_AIRCR_VECTRESET_Msk
 (1UL )

	)

591 
	#SCB_SCR_SEVONPEND_Pos
 4

	)

592 
	#SCB_SCR_SEVONPEND_Msk
 (1UL << 
SCB_SCR_SEVONPEND_Pos
Ë

	)

594 
	#SCB_SCR_SLEEPDEEP_Pos
 2

	)

595 
	#SCB_SCR_SLEEPDEEP_Msk
 (1UL << 
SCB_SCR_SLEEPDEEP_Pos
Ë

	)

597 
	#SCB_SCR_SLEEPONEXIT_Pos
 1

	)

598 
	#SCB_SCR_SLEEPONEXIT_Msk
 (1UL << 
SCB_SCR_SLEEPONEXIT_Pos
Ë

	)

601 
	#SCB_CCR_BP_Pos
 18

	)

602 
	#SCB_CCR_BP_Msk
 (1UL << 
SCB_CCR_BP_Pos
Ë

	)

604 
	#SCB_CCR_IC_Pos
 17

	)

605 
	#SCB_CCR_IC_Msk
 (1UL << 
SCB_CCR_IC_Pos
Ë

	)

607 
	#SCB_CCR_DC_Pos
 16

	)

608 
	#SCB_CCR_DC_Msk
 (1UL << 
SCB_CCR_DC_Pos
Ë

	)

610 
	#SCB_CCR_STKALIGN_Pos
 9

	)

611 
	#SCB_CCR_STKALIGN_Msk
 (1UL << 
SCB_CCR_STKALIGN_Pos
Ë

	)

613 
	#SCB_CCR_BFHFNMIGN_Pos
 8

	)

614 
	#SCB_CCR_BFHFNMIGN_Msk
 (1UL << 
SCB_CCR_BFHFNMIGN_Pos
Ë

	)

616 
	#SCB_CCR_DIV_0_TRP_Pos
 4

	)

617 
	#SCB_CCR_DIV_0_TRP_Msk
 (1UL << 
SCB_CCR_DIV_0_TRP_Pos
Ë

	)

619 
	#SCB_CCR_UNALIGN_TRP_Pos
 3

	)

620 
	#SCB_CCR_UNALIGN_TRP_Msk
 (1UL << 
SCB_CCR_UNALIGN_TRP_Pos
Ë

	)

622 
	#SCB_CCR_USERSETMPEND_Pos
 1

	)

623 
	#SCB_CCR_USERSETMPEND_Msk
 (1UL << 
SCB_CCR_USERSETMPEND_Pos
Ë

	)

625 
	#SCB_CCR_NONBASETHRDENA_Pos
 0

	)

626 
	#SCB_CCR_NONBASETHRDENA_Msk
 (1UL )

	)

629 
	#SCB_SHCSR_USGFAULTENA_Pos
 18

	)

630 
	#SCB_SHCSR_USGFAULTENA_Msk
 (1UL << 
SCB_SHCSR_USGFAULTENA_Pos
Ë

	)

632 
	#SCB_SHCSR_BUSFAULTENA_Pos
 17

	)

633 
	#SCB_SHCSR_BUSFAULTENA_Msk
 (1UL << 
SCB_SHCSR_BUSFAULTENA_Pos
Ë

	)

635 
	#SCB_SHCSR_MEMFAULTENA_Pos
 16

	)

636 
	#SCB_SHCSR_MEMFAULTENA_Msk
 (1UL << 
SCB_SHCSR_MEMFAULTENA_Pos
Ë

	)

638 
	#SCB_SHCSR_SVCALLPENDED_Pos
 15

	)

639 
	#SCB_SHCSR_SVCALLPENDED_Msk
 (1UL << 
SCB_SHCSR_SVCALLPENDED_Pos
Ë

	)

641 
	#SCB_SHCSR_BUSFAULTPENDED_Pos
 14

	)

642 
	#SCB_SHCSR_BUSFAULTPENDED_Msk
 (1UL << 
SCB_SHCSR_BUSFAULTPENDED_Pos
Ë

	)

644 
	#SCB_SHCSR_MEMFAULTPENDED_Pos
 13

	)

645 
	#SCB_SHCSR_MEMFAULTPENDED_Msk
 (1UL << 
SCB_SHCSR_MEMFAULTPENDED_Pos
Ë

	)

647 
	#SCB_SHCSR_USGFAULTPENDED_Pos
 12

	)

648 
	#SCB_SHCSR_USGFAULTPENDED_Msk
 (1UL << 
SCB_SHCSR_USGFAULTPENDED_Pos
Ë

	)

650 
	#SCB_SHCSR_SYSTICKACT_Pos
 11

	)

651 
	#SCB_SHCSR_SYSTICKACT_Msk
 (1UL << 
SCB_SHCSR_SYSTICKACT_Pos
Ë

	)

653 
	#SCB_SHCSR_PENDSVACT_Pos
 10

	)

654 
	#SCB_SHCSR_PENDSVACT_Msk
 (1UL << 
SCB_SHCSR_PENDSVACT_Pos
Ë

	)

656 
	#SCB_SHCSR_MONITORACT_Pos
 8

	)

657 
	#SCB_SHCSR_MONITORACT_Msk
 (1UL << 
SCB_SHCSR_MONITORACT_Pos
Ë

	)

659 
	#SCB_SHCSR_SVCALLACT_Pos
 7

	)

660 
	#SCB_SHCSR_SVCALLACT_Msk
 (1UL << 
SCB_SHCSR_SVCALLACT_Pos
Ë

	)

662 
	#SCB_SHCSR_USGFAULTACT_Pos
 3

	)

663 
	#SCB_SHCSR_USGFAULTACT_Msk
 (1UL << 
SCB_SHCSR_USGFAULTACT_Pos
Ë

	)

665 
	#SCB_SHCSR_BUSFAULTACT_Pos
 1

	)

666 
	#SCB_SHCSR_BUSFAULTACT_Msk
 (1UL << 
SCB_SHCSR_BUSFAULTACT_Pos
Ë

	)

668 
	#SCB_SHCSR_MEMFAULTACT_Pos
 0

	)

669 
	#SCB_SHCSR_MEMFAULTACT_Msk
 (1UL )

	)

672 
	#SCB_CFSR_USGFAULTSR_Pos
 16

	)

673 
	#SCB_CFSR_USGFAULTSR_Msk
 (0xFFFFUL << 
SCB_CFSR_USGFAULTSR_Pos
Ë

	)

675 
	#SCB_CFSR_BUSFAULTSR_Pos
 8

	)

676 
	#SCB_CFSR_BUSFAULTSR_Msk
 (0xFFUL << 
SCB_CFSR_BUSFAULTSR_Pos
Ë

	)

678 
	#SCB_CFSR_MEMFAULTSR_Pos
 0

	)

679 
	#SCB_CFSR_MEMFAULTSR_Msk
 (0xFFUL )

	)

682 
	#SCB_HFSR_DEBUGEVT_Pos
 31

	)

683 
	#SCB_HFSR_DEBUGEVT_Msk
 (1UL << 
SCB_HFSR_DEBUGEVT_Pos
Ë

	)

685 
	#SCB_HFSR_FORCED_Pos
 30

	)

686 
	#SCB_HFSR_FORCED_Msk
 (1UL << 
SCB_HFSR_FORCED_Pos
Ë

	)

688 
	#SCB_HFSR_VECTTBL_Pos
 1

	)

689 
	#SCB_HFSR_VECTTBL_Msk
 (1UL << 
SCB_HFSR_VECTTBL_Pos
Ë

	)

692 
	#SCB_DFSR_EXTERNAL_Pos
 4

	)

693 
	#SCB_DFSR_EXTERNAL_Msk
 (1UL << 
SCB_DFSR_EXTERNAL_Pos
Ë

	)

695 
	#SCB_DFSR_VCATCH_Pos
 3

	)

696 
	#SCB_DFSR_VCATCH_Msk
 (1UL << 
SCB_DFSR_VCATCH_Pos
Ë

	)

698 
	#SCB_DFSR_DWTTRAP_Pos
 2

	)

699 
	#SCB_DFSR_DWTTRAP_Msk
 (1UL << 
SCB_DFSR_DWTTRAP_Pos
Ë

	)

701 
	#SCB_DFSR_BKPT_Pos
 1

	)

702 
	#SCB_DFSR_BKPT_Msk
 (1UL << 
SCB_DFSR_BKPT_Pos
Ë

	)

704 
	#SCB_DFSR_HALTED_Pos
 0

	)

705 
	#SCB_DFSR_HALTED_Msk
 (1UL )

	)

708 
	#SCB_CLIDR_LOUU_Pos
 27

	)

709 
	#SCB_CLIDR_LOUU_Msk
 (7UL << 
SCB_CLIDR_LOUU_Pos
Ë

	)

711 
	#SCB_CLIDR_LOC_Pos
 24

	)

712 
	#SCB_CLIDR_LOC_Msk
 (7UL << 
SCB_CLIDR_FORMAT_Pos
Ë

	)

715 
	#SCB_CTR_FORMAT_Pos
 29

	)

716 
	#SCB_CTR_FORMAT_Msk
 (7UL << 
SCB_CTR_FORMAT_Pos
Ë

	)

718 
	#SCB_CTR_CWG_Pos
 24

	)

719 
	#SCB_CTR_CWG_Msk
 (0xFUL << 
SCB_CTR_CWG_Pos
Ë

	)

721 
	#SCB_CTR_ERG_Pos
 20

	)

722 
	#SCB_CTR_ERG_Msk
 (0xFUL << 
SCB_CTR_ERG_Pos
Ë

	)

724 
	#SCB_CTR_DMINLINE_Pos
 16

	)

725 
	#SCB_CTR_DMINLINE_Msk
 (0xFUL << 
SCB_CTR_DMINLINE_Pos
Ë

	)

727 
	#SCB_CTR_IMINLINE_Pos
 0

	)

728 
	#SCB_CTR_IMINLINE_Msk
 (0xFUL )

	)

731 
	#SCB_CCSIDR_WT_Pos
 31

	)

732 
	#SCB_CCSIDR_WT_Msk
 (7UL << 
SCB_CCSIDR_WT_Pos
Ë

	)

734 
	#SCB_CCSIDR_WB_Pos
 30

	)

735 
	#SCB_CCSIDR_WB_Msk
 (7UL << 
SCB_CCSIDR_WB_Pos
Ë

	)

737 
	#SCB_CCSIDR_RA_Pos
 29

	)

738 
	#SCB_CCSIDR_RA_Msk
 (7UL << 
SCB_CCSIDR_RA_Pos
Ë

	)

740 
	#SCB_CCSIDR_WA_Pos
 28

	)

741 
	#SCB_CCSIDR_WA_Msk
 (7UL << 
SCB_CCSIDR_WA_Pos
Ë

	)

743 
	#SCB_CCSIDR_NUMSETS_Pos
 13

	)

744 
	#SCB_CCSIDR_NUMSETS_Msk
 (0x7FFFUL << 
SCB_CCSIDR_NUMSETS_Pos
Ë

	)

746 
	#SCB_CCSIDR_ASSOCIATIVITY_Pos
 3

	)

747 
	#SCB_CCSIDR_ASSOCIATIVITY_Msk
 (0x3FFUL << 
SCB_CCSIDR_ASSOCIATIVITY_Pos
Ë

	)

749 
	#SCB_CCSIDR_LINESIZE_Pos
 0

	)

750 
	#SCB_CCSIDR_LINESIZE_Msk
 (7UL )

	)

753 
	#SCB_CSSELR_LEVEL_Pos
 1

	)

754 
	#SCB_CSSELR_LEVEL_Msk
 (7UL << 
SCB_CSSELR_LEVEL_Pos
Ë

	)

756 
	#SCB_CSSELR_IND_Pos
 0

	)

757 
	#SCB_CSSELR_IND_Msk
 (1UL )

	)

760 
	#SCB_STIR_INTID_Pos
 0

	)

761 
	#SCB_STIR_INTID_Msk
 (0x1FFUL )

	)

764 
	#SCB_ITCMCR_SZ_Pos
 3

	)

765 
	#SCB_ITCMCR_SZ_Msk
 (0xFUL << 
SCB_ITCMCR_SZ_Pos
Ë

	)

767 
	#SCB_ITCMCR_RETEN_Pos
 2

	)

768 
	#SCB_ITCMCR_RETEN_Msk
 (1UL << 
SCB_ITCMCR_RETEN_Pos
Ë

	)

770 
	#SCB_ITCMCR_RMW_Pos
 1

	)

771 
	#SCB_ITCMCR_RMW_Msk
 (1UL << 
SCB_ITCMCR_RMW_Pos
Ë

	)

773 
	#SCB_ITCMCR_EN_Pos
 0

	)

774 
	#SCB_ITCMCR_EN_Msk
 (1UL )

	)

777 
	#SCB_DTCMCR_SZ_Pos
 3

	)

778 
	#SCB_DTCMCR_SZ_Msk
 (0xFUL << 
SCB_DTCMCR_SZ_Pos
Ë

	)

780 
	#SCB_DTCMCR_RETEN_Pos
 2

	)

781 
	#SCB_DTCMCR_RETEN_Msk
 (1UL << 
SCB_DTCMCR_RETEN_Pos
Ë

	)

783 
	#SCB_DTCMCR_RMW_Pos
 1

	)

784 
	#SCB_DTCMCR_RMW_Msk
 (1UL << 
SCB_DTCMCR_RMW_Pos
Ë

	)

786 
	#SCB_DTCMCR_EN_Pos
 0

	)

787 
	#SCB_DTCMCR_EN_Msk
 (1UL )

	)

790 
	#SCB_AHBPCR_SZ_Pos
 1

	)

791 
	#SCB_AHBPCR_SZ_Msk
 (7UL << 
SCB_AHBPCR_SZ_Pos
Ë

	)

793 
	#SCB_AHBPCR_EN_Pos
 0

	)

794 
	#SCB_AHBPCR_EN_Msk
 (1UL )

	)

797 
	#SCB_CACR_FORCEWT_Pos
 2

	)

798 
	#SCB_CACR_FORCEWT_Msk
 (1UL << 
SCB_CACR_FORCEWT_Pos
Ë

	)

800 
	#SCB_CACR_ECCEN_Pos
 1

	)

801 
	#SCB_CACR_ECCEN_Msk
 (1UL << 
SCB_CACR_ECCEN_Pos
Ë

	)

803 
	#SCB_CACR_SIWT_Pos
 0

	)

804 
	#SCB_CACR_SIWT_Msk
 (1UL )

	)

807 
	#SCB_AHBSCR_INITCOUNT_Pos
 11

	)

808 
	#SCB_AHBSCR_INITCOUNT_Msk
 (0x1FUL << 
SCB_AHBPCR_INITCOUNT_Pos
Ë

	)

810 
	#SCB_AHBSCR_TPRI_Pos
 2

	)

811 
	#SCB_AHBSCR_TPRI_Msk
 (0x1FFUL << 
SCB_AHBPCR_TPRI_Pos
Ë

	)

813 
	#SCB_AHBSCR_CTL_Pos
 0

	)

814 
	#SCB_AHBSCR_CTL_Msk
 (3UL )

	)

817 
	#SCB_ABFSR_AXIMTYPE_Pos
 8

	)

818 
	#SCB_ABFSR_AXIMTYPE_Msk
 (3UL << 
SCB_ABFSR_AXIMTYPE_Pos
Ë

	)

820 
	#SCB_ABFSR_EPPB_Pos
 4

	)

821 
	#SCB_ABFSR_EPPB_Msk
 (1UL << 
SCB_ABFSR_EPPB_Pos
Ë

	)

823 
	#SCB_ABFSR_AXIM_Pos
 3

	)

824 
	#SCB_ABFSR_AXIM_Msk
 (1UL << 
SCB_ABFSR_AXIM_Pos
Ë

	)

826 
	#SCB_ABFSR_AHBP_Pos
 2

	)

827 
	#SCB_ABFSR_AHBP_Msk
 (1UL << 
SCB_ABFSR_AHBP_Pos
Ë

	)

829 
	#SCB_ABFSR_DTCM_Pos
 1

	)

830 
	#SCB_ABFSR_DTCM_Msk
 (1UL << 
SCB_ABFSR_DTCM_Pos
Ë

	)

832 
	#SCB_ABFSR_ITCM_Pos
 0

	)

833 
	#SCB_ABFSR_ITCM_Msk
 (1UL )

	)

848 
uöt32_t
 
RESERVED0
[1];

849 
__I
 
uöt32_t
 
ICTR
;

850 
__IO
 
uöt32_t
 
ACTLR
;

851 } 
	tSCnSCB_Ty≥
;

854 
	#SCnSCB_ICTR_INTLINESNUM_Pos
 0

	)

855 
	#SCnSCB_ICTR_INTLINESNUM_Msk
 (0xFUL )

	)

858 
	#SCnSCB_ACTLR_DISITMATBFLUSH_Pos
 12

	)

859 
	#SCnSCB_ACTLR_DISITMATBFLUSH_Msk
 (1UL << 
SCnSCB_ACTLR_DISITMATBFLUSH_Pos
Ë

	)

861 
	#SCnSCB_ACTLR_DISRAMODE_Pos
 11

	)

862 
	#SCnSCB_ACTLR_DISRAMODE_Msk
 (1UL << 
SCnSCB_ACTLR_DISRAMODE_Pos
Ë

	)

864 
	#SCnSCB_ACTLR_FPEXCODIS_Pos
 10

	)

865 
	#SCnSCB_ACTLR_FPEXCODIS_Msk
 (1UL << 
SCnSCB_ACTLR_FPEXCODIS_Pos
Ë

	)

867 
	#SCnSCB_ACTLR_DISFOLD_Pos
 2

	)

868 
	#SCnSCB_ACTLR_DISFOLD_Msk
 (1UL << 
SCnSCB_ACTLR_DISFOLD_Pos
Ë

	)

870 
	#SCnSCB_ACTLR_DISMCYCINT_Pos
 0

	)

871 
	#SCnSCB_ACTLR_DISMCYCINT_Msk
 (1UL )

	)

886 
__IO
 
uöt32_t
 
CTRL
;

887 
__IO
 
uöt32_t
 
LOAD
;

888 
__IO
 
uöt32_t
 
VAL
;

889 
__I
 
uöt32_t
 
CALIB
;

890 } 
	tSysTick_Ty≥
;

893 
	#SysTick_CTRL_COUNTFLAG_Pos
 16

	)

894 
	#SysTick_CTRL_COUNTFLAG_Msk
 (1UL << 
SysTick_CTRL_COUNTFLAG_Pos
Ë

	)

896 
	#SysTick_CTRL_CLKSOURCE_Pos
 2

	)

897 
	#SysTick_CTRL_CLKSOURCE_Msk
 (1UL << 
SysTick_CTRL_CLKSOURCE_Pos
Ë

	)

899 
	#SysTick_CTRL_TICKINT_Pos
 1

	)

900 
	#SysTick_CTRL_TICKINT_Msk
 (1UL << 
SysTick_CTRL_TICKINT_Pos
Ë

	)

902 
	#SysTick_CTRL_ENABLE_Pos
 0

	)

903 
	#SysTick_CTRL_ENABLE_Msk
 (1UL )

	)

906 
	#SysTick_LOAD_RELOAD_Pos
 0

	)

907 
	#SysTick_LOAD_RELOAD_Msk
 (0xFFFFFFUL )

	)

910 
	#SysTick_VAL_CURRENT_Pos
 0

	)

911 
	#SysTick_VAL_CURRENT_Msk
 (0xFFFFFFUL )

	)

914 
	#SysTick_CALIB_NOREF_Pos
 31

	)

915 
	#SysTick_CALIB_NOREF_Msk
 (1UL << 
SysTick_CALIB_NOREF_Pos
Ë

	)

917 
	#SysTick_CALIB_SKEW_Pos
 30

	)

918 
	#SysTick_CALIB_SKEW_Msk
 (1UL << 
SysTick_CALIB_SKEW_Pos
Ë

	)

920 
	#SysTick_CALIB_TENMS_Pos
 0

	)

921 
	#SysTick_CALIB_TENMS_Msk
 (0xFFFFFFUL )

	)

936 
__O
 union

938 
__O
 
uöt8_t
 
u8
;

939 
__O
 
uöt16_t
 
u16
;

940 
__O
 
uöt32_t
 
u32
;

941 } 
PORT
 [32];

942 
uöt32_t
 
RESERVED0
[864];

943 
__IO
 
uöt32_t
 
TER
;

944 
uöt32_t
 
RESERVED1
[15];

945 
__IO
 
uöt32_t
 
TPR
;

946 
uöt32_t
 
RESERVED2
[15];

947 
__IO
 
uöt32_t
 
TCR
;

948 
uöt32_t
 
RESERVED3
[29];

949 
__O
 
uöt32_t
 
IWR
;

950 
__I
 
uöt32_t
 
IRR
;

951 
__IO
 
uöt32_t
 
IMCR
;

952 
uöt32_t
 
RESERVED4
[43];

953 
__O
 
uöt32_t
 
LAR
;

954 
__I
 
uöt32_t
 
LSR
;

955 
uöt32_t
 
RESERVED5
[6];

956 
__I
 
uöt32_t
 
PID4
;

957 
__I
 
uöt32_t
 
PID5
;

958 
__I
 
uöt32_t
 
PID6
;

959 
__I
 
uöt32_t
 
PID7
;

960 
__I
 
uöt32_t
 
PID0
;

961 
__I
 
uöt32_t
 
PID1
;

962 
__I
 
uöt32_t
 
PID2
;

963 
__I
 
uöt32_t
 
PID3
;

964 
__I
 
uöt32_t
 
CID0
;

965 
__I
 
uöt32_t
 
CID1
;

966 
__I
 
uöt32_t
 
CID2
;

967 
__I
 
uöt32_t
 
CID3
;

968 } 
	tITM_Ty≥
;

971 
	#ITM_TPR_PRIVMASK_Pos
 0

	)

972 
	#ITM_TPR_PRIVMASK_Msk
 (0xFUL )

	)

975 
	#ITM_TCR_BUSY_Pos
 23

	)

976 
	#ITM_TCR_BUSY_Msk
 (1UL << 
ITM_TCR_BUSY_Pos
Ë

	)

978 
	#ITM_TCR_Tø˚BusID_Pos
 16

	)

979 
	#ITM_TCR_Tø˚BusID_Msk
 (0x7FUL << 
ITM_TCR_Tø˚BusID_Pos
Ë

	)

981 
	#ITM_TCR_GTSFREQ_Pos
 10

	)

982 
	#ITM_TCR_GTSFREQ_Msk
 (3UL << 
ITM_TCR_GTSFREQ_Pos
Ë

	)

984 
	#ITM_TCR_TSPªsˇÀ_Pos
 8

	)

985 
	#ITM_TCR_TSPªsˇÀ_Msk
 (3UL << 
ITM_TCR_TSPªsˇÀ_Pos
Ë

	)

987 
	#ITM_TCR_SWOENA_Pos
 4

	)

988 
	#ITM_TCR_SWOENA_Msk
 (1UL << 
ITM_TCR_SWOENA_Pos
Ë

	)

990 
	#ITM_TCR_DWTENA_Pos
 3

	)

991 
	#ITM_TCR_DWTENA_Msk
 (1UL << 
ITM_TCR_DWTENA_Pos
Ë

	)

993 
	#ITM_TCR_SYNCENA_Pos
 2

	)

994 
	#ITM_TCR_SYNCENA_Msk
 (1UL << 
ITM_TCR_SYNCENA_Pos
Ë

	)

996 
	#ITM_TCR_TSENA_Pos
 1

	)

997 
	#ITM_TCR_TSENA_Msk
 (1UL << 
ITM_TCR_TSENA_Pos
Ë

	)

999 
	#ITM_TCR_ITMENA_Pos
 0

	)

1000 
	#ITM_TCR_ITMENA_Msk
 (1UL )

	)

1003 
	#ITM_IWR_ATVALIDM_Pos
 0

	)

1004 
	#ITM_IWR_ATVALIDM_Msk
 (1UL )

	)

1007 
	#ITM_IRR_ATREADYM_Pos
 0

	)

1008 
	#ITM_IRR_ATREADYM_Msk
 (1UL )

	)

1011 
	#ITM_IMCR_INTEGRATION_Pos
 0

	)

1012 
	#ITM_IMCR_INTEGRATION_Msk
 (1UL )

	)

1015 
	#ITM_LSR_ByãAcc_Pos
 2

	)

1016 
	#ITM_LSR_ByãAcc_Msk
 (1UL << 
ITM_LSR_ByãAcc_Pos
Ë

	)

1018 
	#ITM_LSR_Ac˚ss_Pos
 1

	)

1019 
	#ITM_LSR_Ac˚ss_Msk
 (1UL << 
ITM_LSR_Ac˚ss_Pos
Ë

	)

1021 
	#ITM_LSR_Pª£¡_Pos
 0

	)

1022 
	#ITM_LSR_Pª£¡_Msk
 (1UL )

	)

1037 
__IO
 
uöt32_t
 
CTRL
;

1038 
__IO
 
uöt32_t
 
CYCCNT
;

1039 
__IO
 
uöt32_t
 
CPICNT
;

1040 
__IO
 
uöt32_t
 
EXCCNT
;

1041 
__IO
 
uöt32_t
 
SLEEPCNT
;

1042 
__IO
 
uöt32_t
 
LSUCNT
;

1043 
__IO
 
uöt32_t
 
FOLDCNT
;

1044 
__I
 
uöt32_t
 
PCSR
;

1045 
__IO
 
uöt32_t
 
COMP0
;

1046 
__IO
 
uöt32_t
 
MASK0
;

1047 
__IO
 
uöt32_t
 
FUNCTION0
;

1048 
uöt32_t
 
RESERVED0
[1];

1049 
__IO
 
uöt32_t
 
COMP1
;

1050 
__IO
 
uöt32_t
 
MASK1
;

1051 
__IO
 
uöt32_t
 
FUNCTION1
;

1052 
uöt32_t
 
RESERVED1
[1];

1053 
__IO
 
uöt32_t
 
COMP2
;

1054 
__IO
 
uöt32_t
 
MASK2
;

1055 
__IO
 
uöt32_t
 
FUNCTION2
;

1056 
uöt32_t
 
RESERVED2
[1];

1057 
__IO
 
uöt32_t
 
COMP3
;

1058 
__IO
 
uöt32_t
 
MASK3
;

1059 
__IO
 
uöt32_t
 
FUNCTION3
;

1060 
uöt32_t
 
RESERVED3
[981];

1061 
__O
 
uöt32_t
 
LAR
;

1062 
__I
 
uöt32_t
 
LSR
;

1063 } 
	tDWT_Ty≥
;

1066 
	#DWT_CTRL_NUMCOMP_Pos
 28

	)

1067 
	#DWT_CTRL_NUMCOMP_Msk
 (0xFUL << 
DWT_CTRL_NUMCOMP_Pos
Ë

	)

1069 
	#DWT_CTRL_NOTRCPKT_Pos
 27

	)

1070 
	#DWT_CTRL_NOTRCPKT_Msk
 (0x1UL << 
DWT_CTRL_NOTRCPKT_Pos
Ë

	)

1072 
	#DWT_CTRL_NOEXTTRIG_Pos
 26

	)

1073 
	#DWT_CTRL_NOEXTTRIG_Msk
 (0x1UL << 
DWT_CTRL_NOEXTTRIG_Pos
Ë

	)

1075 
	#DWT_CTRL_NOCYCCNT_Pos
 25

	)

1076 
	#DWT_CTRL_NOCYCCNT_Msk
 (0x1UL << 
DWT_CTRL_NOCYCCNT_Pos
Ë

	)

1078 
	#DWT_CTRL_NOPRFCNT_Pos
 24

	)

1079 
	#DWT_CTRL_NOPRFCNT_Msk
 (0x1UL << 
DWT_CTRL_NOPRFCNT_Pos
Ë

	)

1081 
	#DWT_CTRL_CYCEVTENA_Pos
 22

	)

1082 
	#DWT_CTRL_CYCEVTENA_Msk
 (0x1UL << 
DWT_CTRL_CYCEVTENA_Pos
Ë

	)

1084 
	#DWT_CTRL_FOLDEVTENA_Pos
 21

	)

1085 
	#DWT_CTRL_FOLDEVTENA_Msk
 (0x1UL << 
DWT_CTRL_FOLDEVTENA_Pos
Ë

	)

1087 
	#DWT_CTRL_LSUEVTENA_Pos
 20

	)

1088 
	#DWT_CTRL_LSUEVTENA_Msk
 (0x1UL << 
DWT_CTRL_LSUEVTENA_Pos
Ë

	)

1090 
	#DWT_CTRL_SLEEPEVTENA_Pos
 19

	)

1091 
	#DWT_CTRL_SLEEPEVTENA_Msk
 (0x1UL << 
DWT_CTRL_SLEEPEVTENA_Pos
Ë

	)

1093 
	#DWT_CTRL_EXCEVTENA_Pos
 18

	)

1094 
	#DWT_CTRL_EXCEVTENA_Msk
 (0x1UL << 
DWT_CTRL_EXCEVTENA_Pos
Ë

	)

1096 
	#DWT_CTRL_CPIEVTENA_Pos
 17

	)

1097 
	#DWT_CTRL_CPIEVTENA_Msk
 (0x1UL << 
DWT_CTRL_CPIEVTENA_Pos
Ë

	)

1099 
	#DWT_CTRL_EXCTRCENA_Pos
 16

	)

1100 
	#DWT_CTRL_EXCTRCENA_Msk
 (0x1UL << 
DWT_CTRL_EXCTRCENA_Pos
Ë

	)

1102 
	#DWT_CTRL_PCSAMPLENA_Pos
 12

	)

1103 
	#DWT_CTRL_PCSAMPLENA_Msk
 (0x1UL << 
DWT_CTRL_PCSAMPLENA_Pos
Ë

	)

1105 
	#DWT_CTRL_SYNCTAP_Pos
 10

	)

1106 
	#DWT_CTRL_SYNCTAP_Msk
 (0x3UL << 
DWT_CTRL_SYNCTAP_Pos
Ë

	)

1108 
	#DWT_CTRL_CYCTAP_Pos
 9

	)

1109 
	#DWT_CTRL_CYCTAP_Msk
 (0x1UL << 
DWT_CTRL_CYCTAP_Pos
Ë

	)

1111 
	#DWT_CTRL_POSTINIT_Pos
 5

	)

1112 
	#DWT_CTRL_POSTINIT_Msk
 (0xFUL << 
DWT_CTRL_POSTINIT_Pos
Ë

	)

1114 
	#DWT_CTRL_POSTPRESET_Pos
 1

	)

1115 
	#DWT_CTRL_POSTPRESET_Msk
 (0xFUL << 
DWT_CTRL_POSTPRESET_Pos
Ë

	)

1117 
	#DWT_CTRL_CYCCNTENA_Pos
 0

	)

1118 
	#DWT_CTRL_CYCCNTENA_Msk
 (0x1UL )

	)

1121 
	#DWT_CPICNT_CPICNT_Pos
 0

	)

1122 
	#DWT_CPICNT_CPICNT_Msk
 (0xFFUL )

	)

1125 
	#DWT_EXCCNT_EXCCNT_Pos
 0

	)

1126 
	#DWT_EXCCNT_EXCCNT_Msk
 (0xFFUL )

	)

1129 
	#DWT_SLEEPCNT_SLEEPCNT_Pos
 0

	)

1130 
	#DWT_SLEEPCNT_SLEEPCNT_Msk
 (0xFFUL )

	)

1133 
	#DWT_LSUCNT_LSUCNT_Pos
 0

	)

1134 
	#DWT_LSUCNT_LSUCNT_Msk
 (0xFFUL )

	)

1137 
	#DWT_FOLDCNT_FOLDCNT_Pos
 0

	)

1138 
	#DWT_FOLDCNT_FOLDCNT_Msk
 (0xFFUL )

	)

1141 
	#DWT_MASK_MASK_Pos
 0

	)

1142 
	#DWT_MASK_MASK_Msk
 (0x1FUL )

	)

1145 
	#DWT_FUNCTION_MATCHED_Pos
 24

	)

1146 
	#DWT_FUNCTION_MATCHED_Msk
 (0x1UL << 
DWT_FUNCTION_MATCHED_Pos
Ë

	)

1148 
	#DWT_FUNCTION_DATAVADDR1_Pos
 16

	)

1149 
	#DWT_FUNCTION_DATAVADDR1_Msk
 (0xFUL << 
DWT_FUNCTION_DATAVADDR1_Pos
Ë

	)

1151 
	#DWT_FUNCTION_DATAVADDR0_Pos
 12

	)

1152 
	#DWT_FUNCTION_DATAVADDR0_Msk
 (0xFUL << 
DWT_FUNCTION_DATAVADDR0_Pos
Ë

	)

1154 
	#DWT_FUNCTION_DATAVSIZE_Pos
 10

	)

1155 
	#DWT_FUNCTION_DATAVSIZE_Msk
 (0x3UL << 
DWT_FUNCTION_DATAVSIZE_Pos
Ë

	)

1157 
	#DWT_FUNCTION_LNK1ENA_Pos
 9

	)

1158 
	#DWT_FUNCTION_LNK1ENA_Msk
 (0x1UL << 
DWT_FUNCTION_LNK1ENA_Pos
Ë

	)

1160 
	#DWT_FUNCTION_DATAVMATCH_Pos
 8

	)

1161 
	#DWT_FUNCTION_DATAVMATCH_Msk
 (0x1UL << 
DWT_FUNCTION_DATAVMATCH_Pos
Ë

	)

1163 
	#DWT_FUNCTION_CYCMATCH_Pos
 7

	)

1164 
	#DWT_FUNCTION_CYCMATCH_Msk
 (0x1UL << 
DWT_FUNCTION_CYCMATCH_Pos
Ë

	)

1166 
	#DWT_FUNCTION_EMITRANGE_Pos
 5

	)

1167 
	#DWT_FUNCTION_EMITRANGE_Msk
 (0x1UL << 
DWT_FUNCTION_EMITRANGE_Pos
Ë

	)

1169 
	#DWT_FUNCTION_FUNCTION_Pos
 0

	)

1170 
	#DWT_FUNCTION_FUNCTION_Msk
 (0xFUL )

	)

1185 
__IO
 
uöt32_t
 
SSPSR
;

1186 
__IO
 
uöt32_t
 
CSPSR
;

1187 
uöt32_t
 
RESERVED0
[2];

1188 
__IO
 
uöt32_t
 
ACPR
;

1189 
uöt32_t
 
RESERVED1
[55];

1190 
__IO
 
uöt32_t
 
SPPR
;

1191 
uöt32_t
 
RESERVED2
[131];

1192 
__I
 
uöt32_t
 
FFSR
;

1193 
__IO
 
uöt32_t
 
FFCR
;

1194 
__I
 
uöt32_t
 
FSCR
;

1195 
uöt32_t
 
RESERVED3
[759];

1196 
__I
 
uöt32_t
 
TRIGGER
;

1197 
__I
 
uöt32_t
 
FIFO0
;

1198 
__I
 
uöt32_t
 
ITATBCTR2
;

1199 
uöt32_t
 
RESERVED4
[1];

1200 
__I
 
uöt32_t
 
ITATBCTR0
;

1201 
__I
 
uöt32_t
 
FIFO1
;

1202 
__IO
 
uöt32_t
 
ITCTRL
;

1203 
uöt32_t
 
RESERVED5
[39];

1204 
__IO
 
uöt32_t
 
CLAIMSET
;

1205 
__IO
 
uöt32_t
 
CLAIMCLR
;

1206 
uöt32_t
 
RESERVED7
[8];

1207 
__I
 
uöt32_t
 
DEVID
;

1208 
__I
 
uöt32_t
 
DEVTYPE
;

1209 } 
	tTPI_Ty≥
;

1212 
	#TPI_ACPR_PRESCALER_Pos
 0

	)

1213 
	#TPI_ACPR_PRESCALER_Msk
 (0x1FFFUL )

	)

1216 
	#TPI_SPPR_TXMODE_Pos
 0

	)

1217 
	#TPI_SPPR_TXMODE_Msk
 (0x3UL )

	)

1220 
	#TPI_FFSR_FtN⁄St›_Pos
 3

	)

1221 
	#TPI_FFSR_FtN⁄St›_Msk
 (0x1UL << 
TPI_FFSR_FtN⁄St›_Pos
Ë

	)

1223 
	#TPI_FFSR_TCPª£¡_Pos
 2

	)

1224 
	#TPI_FFSR_TCPª£¡_Msk
 (0x1UL << 
TPI_FFSR_TCPª£¡_Pos
Ë

	)

1226 
	#TPI_FFSR_FtSt›≥d_Pos
 1

	)

1227 
	#TPI_FFSR_FtSt›≥d_Msk
 (0x1UL << 
TPI_FFSR_FtSt›≥d_Pos
Ë

	)

1229 
	#TPI_FFSR_FlInProg_Pos
 0

	)

1230 
	#TPI_FFSR_FlInProg_Msk
 (0x1UL )

	)

1233 
	#TPI_FFCR_TrigIn_Pos
 8

	)

1234 
	#TPI_FFCR_TrigIn_Msk
 (0x1UL << 
TPI_FFCR_TrigIn_Pos
Ë

	)

1236 
	#TPI_FFCR_EnFC⁄t_Pos
 1

	)

1237 
	#TPI_FFCR_EnFC⁄t_Msk
 (0x1UL << 
TPI_FFCR_EnFC⁄t_Pos
Ë

	)

1240 
	#TPI_TRIGGER_TRIGGER_Pos
 0

	)

1241 
	#TPI_TRIGGER_TRIGGER_Msk
 (0x1UL )

	)

1244 
	#TPI_FIFO0_ITM_ATVALID_Pos
 29

	)

1245 
	#TPI_FIFO0_ITM_ATVALID_Msk
 (0x3UL << 
TPI_FIFO0_ITM_ATVALID_Pos
Ë

	)

1247 
	#TPI_FIFO0_ITM_byãcou¡_Pos
 27

	)

1248 
	#TPI_FIFO0_ITM_byãcou¡_Msk
 (0x3UL << 
TPI_FIFO0_ITM_byãcou¡_Pos
Ë

	)

1250 
	#TPI_FIFO0_ETM_ATVALID_Pos
 26

	)

1251 
	#TPI_FIFO0_ETM_ATVALID_Msk
 (0x3UL << 
TPI_FIFO0_ETM_ATVALID_Pos
Ë

	)

1253 
	#TPI_FIFO0_ETM_byãcou¡_Pos
 24

	)

1254 
	#TPI_FIFO0_ETM_byãcou¡_Msk
 (0x3UL << 
TPI_FIFO0_ETM_byãcou¡_Pos
Ë

	)

1256 
	#TPI_FIFO0_ETM2_Pos
 16

	)

1257 
	#TPI_FIFO0_ETM2_Msk
 (0xFFUL << 
TPI_FIFO0_ETM2_Pos
Ë

	)

1259 
	#TPI_FIFO0_ETM1_Pos
 8

	)

1260 
	#TPI_FIFO0_ETM1_Msk
 (0xFFUL << 
TPI_FIFO0_ETM1_Pos
Ë

	)

1262 
	#TPI_FIFO0_ETM0_Pos
 0

	)

1263 
	#TPI_FIFO0_ETM0_Msk
 (0xFFUL )

	)

1266 
	#TPI_ITATBCTR2_ATREADY_Pos
 0

	)

1267 
	#TPI_ITATBCTR2_ATREADY_Msk
 (0x1UL )

	)

1270 
	#TPI_FIFO1_ITM_ATVALID_Pos
 29

	)

1271 
	#TPI_FIFO1_ITM_ATVALID_Msk
 (0x3UL << 
TPI_FIFO1_ITM_ATVALID_Pos
Ë

	)

1273 
	#TPI_FIFO1_ITM_byãcou¡_Pos
 27

	)

1274 
	#TPI_FIFO1_ITM_byãcou¡_Msk
 (0x3UL << 
TPI_FIFO1_ITM_byãcou¡_Pos
Ë

	)

1276 
	#TPI_FIFO1_ETM_ATVALID_Pos
 26

	)

1277 
	#TPI_FIFO1_ETM_ATVALID_Msk
 (0x3UL << 
TPI_FIFO1_ETM_ATVALID_Pos
Ë

	)

1279 
	#TPI_FIFO1_ETM_byãcou¡_Pos
 24

	)

1280 
	#TPI_FIFO1_ETM_byãcou¡_Msk
 (0x3UL << 
TPI_FIFO1_ETM_byãcou¡_Pos
Ë

	)

1282 
	#TPI_FIFO1_ITM2_Pos
 16

	)

1283 
	#TPI_FIFO1_ITM2_Msk
 (0xFFUL << 
TPI_FIFO1_ITM2_Pos
Ë

	)

1285 
	#TPI_FIFO1_ITM1_Pos
 8

	)

1286 
	#TPI_FIFO1_ITM1_Msk
 (0xFFUL << 
TPI_FIFO1_ITM1_Pos
Ë

	)

1288 
	#TPI_FIFO1_ITM0_Pos
 0

	)

1289 
	#TPI_FIFO1_ITM0_Msk
 (0xFFUL )

	)

1292 
	#TPI_ITATBCTR0_ATREADY_Pos
 0

	)

1293 
	#TPI_ITATBCTR0_ATREADY_Msk
 (0x1UL )

	)

1296 
	#TPI_ITCTRL_Mode_Pos
 0

	)

1297 
	#TPI_ITCTRL_Mode_Msk
 (0x1UL )

	)

1300 
	#TPI_DEVID_NRZVALID_Pos
 11

	)

1301 
	#TPI_DEVID_NRZVALID_Msk
 (0x1UL << 
TPI_DEVID_NRZVALID_Pos
Ë

	)

1303 
	#TPI_DEVID_MANCVALID_Pos
 10

	)

1304 
	#TPI_DEVID_MANCVALID_Msk
 (0x1UL << 
TPI_DEVID_MANCVALID_Pos
Ë

	)

1306 
	#TPI_DEVID_PTINVALID_Pos
 9

	)

1307 
	#TPI_DEVID_PTINVALID_Msk
 (0x1UL << 
TPI_DEVID_PTINVALID_Pos
Ë

	)

1309 
	#TPI_DEVID_MöBufSz_Pos
 6

	)

1310 
	#TPI_DEVID_MöBufSz_Msk
 (0x7UL << 
TPI_DEVID_MöBufSz_Pos
Ë

	)

1312 
	#TPI_DEVID_AsynClkIn_Pos
 5

	)

1313 
	#TPI_DEVID_AsynClkIn_Msk
 (0x1UL << 
TPI_DEVID_AsynClkIn_Pos
Ë

	)

1315 
	#TPI_DEVID_NrTø˚I≈ut_Pos
 0

	)

1316 
	#TPI_DEVID_NrTø˚I≈ut_Msk
 (0x1FUL )

	)

1319 
	#TPI_DEVTYPE_Maj‹Ty≥_Pos
 4

	)

1320 
	#TPI_DEVTYPE_Maj‹Ty≥_Msk
 (0xFUL << 
TPI_DEVTYPE_Maj‹Ty≥_Pos
Ë

	)

1322 
	#TPI_DEVTYPE_SubTy≥_Pos
 0

	)

1323 
	#TPI_DEVTYPE_SubTy≥_Msk
 (0xFUL )

	)

1328 #i‡(
__MPU_PRESENT
 == 1)

1339 
__I
 
uöt32_t
 
TYPE
;

1340 
__IO
 
uöt32_t
 
CTRL
;

1341 
__IO
 
uöt32_t
 
RNR
;

1342 
__IO
 
uöt32_t
 
RBAR
;

1343 
__IO
 
uöt32_t
 
RASR
;

1344 
__IO
 
uöt32_t
 
RBAR_A1
;

1345 
__IO
 
uöt32_t
 
RASR_A1
;

1346 
__IO
 
uöt32_t
 
RBAR_A2
;

1347 
__IO
 
uöt32_t
 
RASR_A2
;

1348 
__IO
 
uöt32_t
 
RBAR_A3
;

1349 
__IO
 
uöt32_t
 
RASR_A3
;

1350 } 
	tMPU_Ty≥
;

1353 
	#MPU_TYPE_IREGION_Pos
 16

	)

1354 
	#MPU_TYPE_IREGION_Msk
 (0xFFUL << 
MPU_TYPE_IREGION_Pos
Ë

	)

1356 
	#MPU_TYPE_DREGION_Pos
 8

	)

1357 
	#MPU_TYPE_DREGION_Msk
 (0xFFUL << 
MPU_TYPE_DREGION_Pos
Ë

	)

1359 
	#MPU_TYPE_SEPARATE_Pos
 0

	)

1360 
	#MPU_TYPE_SEPARATE_Msk
 (1UL )

	)

1363 
	#MPU_CTRL_PRIVDEFENA_Pos
 2

	)

1364 
	#MPU_CTRL_PRIVDEFENA_Msk
 (1UL << 
MPU_CTRL_PRIVDEFENA_Pos
Ë

	)

1366 
	#MPU_CTRL_HFNMIENA_Pos
 1

	)

1367 
	#MPU_CTRL_HFNMIENA_Msk
 (1UL << 
MPU_CTRL_HFNMIENA_Pos
Ë

	)

1369 
	#MPU_CTRL_ENABLE_Pos
 0

	)

1370 
	#MPU_CTRL_ENABLE_Msk
 (1UL )

	)

1373 
	#MPU_RNR_REGION_Pos
 0

	)

1374 
	#MPU_RNR_REGION_Msk
 (0xFFUL )

	)

1377 
	#MPU_RBAR_ADDR_Pos
 5

	)

1378 
	#MPU_RBAR_ADDR_Msk
 (0x7FFFFFFUL << 
MPU_RBAR_ADDR_Pos
Ë

	)

1380 
	#MPU_RBAR_VALID_Pos
 4

	)

1381 
	#MPU_RBAR_VALID_Msk
 (1UL << 
MPU_RBAR_VALID_Pos
Ë

	)

1383 
	#MPU_RBAR_REGION_Pos
 0

	)

1384 
	#MPU_RBAR_REGION_Msk
 (0xFUL )

	)

1387 
	#MPU_RASR_ATTRS_Pos
 16

	)

1388 
	#MPU_RASR_ATTRS_Msk
 (0xFFFFUL << 
MPU_RASR_ATTRS_Pos
Ë

	)

1390 
	#MPU_RASR_XN_Pos
 28

	)

1391 
	#MPU_RASR_XN_Msk
 (1UL << 
MPU_RASR_XN_Pos
Ë

	)

1393 
	#MPU_RASR_AP_Pos
 24

	)

1394 
	#MPU_RASR_AP_Msk
 (0x7UL << 
MPU_RASR_AP_Pos
Ë

	)

1396 
	#MPU_RASR_TEX_Pos
 19

	)

1397 
	#MPU_RASR_TEX_Msk
 (0x7UL << 
MPU_RASR_TEX_Pos
Ë

	)

1399 
	#MPU_RASR_S_Pos
 18

	)

1400 
	#MPU_RASR_S_Msk
 (1UL << 
MPU_RASR_S_Pos
Ë

	)

1402 
	#MPU_RASR_C_Pos
 17

	)

1403 
	#MPU_RASR_C_Msk
 (1UL << 
MPU_RASR_C_Pos
Ë

	)

1405 
	#MPU_RASR_B_Pos
 16

	)

1406 
	#MPU_RASR_B_Msk
 (1UL << 
MPU_RASR_B_Pos
Ë

	)

1408 
	#MPU_RASR_SRD_Pos
 8

	)

1409 
	#MPU_RASR_SRD_Msk
 (0xFFUL << 
MPU_RASR_SRD_Pos
Ë

	)

1411 
	#MPU_RASR_SIZE_Pos
 1

	)

1412 
	#MPU_RASR_SIZE_Msk
 (0x1FUL << 
MPU_RASR_SIZE_Pos
Ë

	)

1414 
	#MPU_RASR_ENABLE_Pos
 0

	)

1415 
	#MPU_RASR_ENABLE_Msk
 (1UL )

	)

1421 #i‡(
__FPU_PRESENT
 == 1)

1432 
uöt32_t
 
RESERVED0
[1];

1433 
__IO
 
uöt32_t
 
FPCCR
;

1434 
__IO
 
uöt32_t
 
FPCAR
;

1435 
__IO
 
uöt32_t
 
FPDSCR
;

1436 
__I
 
uöt32_t
 
MVFR0
;

1437 
__I
 
uöt32_t
 
MVFR1
;

1438 
__I
 
uöt32_t
 
MVFR2
;

1439 } 
	tFPU_Ty≥
;

1442 
	#FPU_FPCCR_ASPEN_Pos
 31

	)

1443 
	#FPU_FPCCR_ASPEN_Msk
 (1UL << 
FPU_FPCCR_ASPEN_Pos
Ë

	)

1445 
	#FPU_FPCCR_LSPEN_Pos
 30

	)

1446 
	#FPU_FPCCR_LSPEN_Msk
 (1UL << 
FPU_FPCCR_LSPEN_Pos
Ë

	)

1448 
	#FPU_FPCCR_MONRDY_Pos
 8

	)

1449 
	#FPU_FPCCR_MONRDY_Msk
 (1UL << 
FPU_FPCCR_MONRDY_Pos
Ë

	)

1451 
	#FPU_FPCCR_BFRDY_Pos
 6

	)

1452 
	#FPU_FPCCR_BFRDY_Msk
 (1UL << 
FPU_FPCCR_BFRDY_Pos
Ë

	)

1454 
	#FPU_FPCCR_MMRDY_Pos
 5

	)

1455 
	#FPU_FPCCR_MMRDY_Msk
 (1UL << 
FPU_FPCCR_MMRDY_Pos
Ë

	)

1457 
	#FPU_FPCCR_HFRDY_Pos
 4

	)

1458 
	#FPU_FPCCR_HFRDY_Msk
 (1UL << 
FPU_FPCCR_HFRDY_Pos
Ë

	)

1460 
	#FPU_FPCCR_THREAD_Pos
 3

	)

1461 
	#FPU_FPCCR_THREAD_Msk
 (1UL << 
FPU_FPCCR_THREAD_Pos
Ë

	)

1463 
	#FPU_FPCCR_USER_Pos
 1

	)

1464 
	#FPU_FPCCR_USER_Msk
 (1UL << 
FPU_FPCCR_USER_Pos
Ë

	)

1466 
	#FPU_FPCCR_LSPACT_Pos
 0

	)

1467 
	#FPU_FPCCR_LSPACT_Msk
 (1UL )

	)

1470 
	#FPU_FPCAR_ADDRESS_Pos
 3

	)

1471 
	#FPU_FPCAR_ADDRESS_Msk
 (0x1FFFFFFFUL << 
FPU_FPCAR_ADDRESS_Pos
Ë

	)

1474 
	#FPU_FPDSCR_AHP_Pos
 26

	)

1475 
	#FPU_FPDSCR_AHP_Msk
 (1UL << 
FPU_FPDSCR_AHP_Pos
Ë

	)

1477 
	#FPU_FPDSCR_DN_Pos
 25

	)

1478 
	#FPU_FPDSCR_DN_Msk
 (1UL << 
FPU_FPDSCR_DN_Pos
Ë

	)

1480 
	#FPU_FPDSCR_FZ_Pos
 24

	)

1481 
	#FPU_FPDSCR_FZ_Msk
 (1UL << 
FPU_FPDSCR_FZ_Pos
Ë

	)

1483 
	#FPU_FPDSCR_RMode_Pos
 22

	)

1484 
	#FPU_FPDSCR_RMode_Msk
 (3UL << 
FPU_FPDSCR_RMode_Pos
Ë

	)

1487 
	#FPU_MVFR0_FP_roundög_modes_Pos
 28

	)

1488 
	#FPU_MVFR0_FP_roundög_modes_Msk
 (0xFUL << 
FPU_MVFR0_FP_roundög_modes_Pos
Ë

	)

1490 
	#FPU_MVFR0_Sh‹t_ve˘‹s_Pos
 24

	)

1491 
	#FPU_MVFR0_Sh‹t_ve˘‹s_Msk
 (0xFUL << 
FPU_MVFR0_Sh‹t_ve˘‹s_Pos
Ë

	)

1493 
	#FPU_MVFR0_Squ¨e_roŸ_Pos
 20

	)

1494 
	#FPU_MVFR0_Squ¨e_roŸ_Msk
 (0xFUL << 
FPU_MVFR0_Squ¨e_roŸ_Pos
Ë

	)

1496 
	#FPU_MVFR0_Divide_Pos
 16

	)

1497 
	#FPU_MVFR0_Divide_Msk
 (0xFUL << 
FPU_MVFR0_Divide_Pos
Ë

	)

1499 
	#FPU_MVFR0_FP_ex˚p_å≠pög_Pos
 12

	)

1500 
	#FPU_MVFR0_FP_ex˚p_å≠pög_Msk
 (0xFUL << 
FPU_MVFR0_FP_ex˚p_å≠pög_Pos
Ë

	)

1502 
	#FPU_MVFR0_DoubÀ_¥ecisi⁄_Pos
 8

	)

1503 
	#FPU_MVFR0_DoubÀ_¥ecisi⁄_Msk
 (0xFUL << 
FPU_MVFR0_DoubÀ_¥ecisi⁄_Pos
Ë

	)

1505 
	#FPU_MVFR0_SögÀ_¥ecisi⁄_Pos
 4

	)

1506 
	#FPU_MVFR0_SögÀ_¥ecisi⁄_Msk
 (0xFUL << 
FPU_MVFR0_SögÀ_¥ecisi⁄_Pos
Ë

	)

1508 
	#FPU_MVFR0_A_SIMD_ªgi°îs_Pos
 0

	)

1509 
	#FPU_MVFR0_A_SIMD_ªgi°îs_Msk
 (0xFUL )

	)

1512 
	#FPU_MVFR1_FP_fu£d_MAC_Pos
 28

	)

1513 
	#FPU_MVFR1_FP_fu£d_MAC_Msk
 (0xFUL << 
FPU_MVFR1_FP_fu£d_MAC_Pos
Ë

	)

1515 
	#FPU_MVFR1_FP_HPFP_Pos
 24

	)

1516 
	#FPU_MVFR1_FP_HPFP_Msk
 (0xFUL << 
FPU_MVFR1_FP_HPFP_Pos
Ë

	)

1518 
	#FPU_MVFR1_D_NaN_mode_Pos
 4

	)

1519 
	#FPU_MVFR1_D_NaN_mode_Msk
 (0xFUL << 
FPU_MVFR1_D_NaN_mode_Pos
Ë

	)

1521 
	#FPU_MVFR1_FtZ_mode_Pos
 0

	)

1522 
	#FPU_MVFR1_FtZ_mode_Msk
 (0xFUL )

	)

1540 
__IO
 
uöt32_t
 
DHCSR
;

1541 
__O
 
uöt32_t
 
DCRSR
;

1542 
__IO
 
uöt32_t
 
DCRDR
;

1543 
__IO
 
uöt32_t
 
DEMCR
;

1544 } 
	tC‹eDebug_Ty≥
;

1547 
	#C‹eDebug_DHCSR_DBGKEY_Pos
 16

	)

1548 
	#C‹eDebug_DHCSR_DBGKEY_Msk
 (0xFFFFUL << 
C‹eDebug_DHCSR_DBGKEY_Pos
Ë

	)

1550 
	#C‹eDebug_DHCSR_S_RESET_ST_Pos
 25

	)

1551 
	#C‹eDebug_DHCSR_S_RESET_ST_Msk
 (1UL << 
C‹eDebug_DHCSR_S_RESET_ST_Pos
Ë

	)

1553 
	#C‹eDebug_DHCSR_S_RETIRE_ST_Pos
 24

	)

1554 
	#C‹eDebug_DHCSR_S_RETIRE_ST_Msk
 (1UL << 
C‹eDebug_DHCSR_S_RETIRE_ST_Pos
Ë

	)

1556 
	#C‹eDebug_DHCSR_S_LOCKUP_Pos
 19

	)

1557 
	#C‹eDebug_DHCSR_S_LOCKUP_Msk
 (1UL << 
C‹eDebug_DHCSR_S_LOCKUP_Pos
Ë

	)

1559 
	#C‹eDebug_DHCSR_S_SLEEP_Pos
 18

	)

1560 
	#C‹eDebug_DHCSR_S_SLEEP_Msk
 (1UL << 
C‹eDebug_DHCSR_S_SLEEP_Pos
Ë

	)

1562 
	#C‹eDebug_DHCSR_S_HALT_Pos
 17

	)

1563 
	#C‹eDebug_DHCSR_S_HALT_Msk
 (1UL << 
C‹eDebug_DHCSR_S_HALT_Pos
Ë

	)

1565 
	#C‹eDebug_DHCSR_S_REGRDY_Pos
 16

	)

1566 
	#C‹eDebug_DHCSR_S_REGRDY_Msk
 (1UL << 
C‹eDebug_DHCSR_S_REGRDY_Pos
Ë

	)

1568 
	#C‹eDebug_DHCSR_C_SNAPSTALL_Pos
 5

	)

1569 
	#C‹eDebug_DHCSR_C_SNAPSTALL_Msk
 (1UL << 
C‹eDebug_DHCSR_C_SNAPSTALL_Pos
Ë

	)

1571 
	#C‹eDebug_DHCSR_C_MASKINTS_Pos
 3

	)

1572 
	#C‹eDebug_DHCSR_C_MASKINTS_Msk
 (1UL << 
C‹eDebug_DHCSR_C_MASKINTS_Pos
Ë

	)

1574 
	#C‹eDebug_DHCSR_C_STEP_Pos
 2

	)

1575 
	#C‹eDebug_DHCSR_C_STEP_Msk
 (1UL << 
C‹eDebug_DHCSR_C_STEP_Pos
Ë

	)

1577 
	#C‹eDebug_DHCSR_C_HALT_Pos
 1

	)

1578 
	#C‹eDebug_DHCSR_C_HALT_Msk
 (1UL << 
C‹eDebug_DHCSR_C_HALT_Pos
Ë

	)

1580 
	#C‹eDebug_DHCSR_C_DEBUGEN_Pos
 0

	)

1581 
	#C‹eDebug_DHCSR_C_DEBUGEN_Msk
 (1UL )

	)

1584 
	#C‹eDebug_DCRSR_REGWnR_Pos
 16

	)

1585 
	#C‹eDebug_DCRSR_REGWnR_Msk
 (1UL << 
C‹eDebug_DCRSR_REGWnR_Pos
Ë

	)

1587 
	#C‹eDebug_DCRSR_REGSEL_Pos
 0

	)

1588 
	#C‹eDebug_DCRSR_REGSEL_Msk
 (0x1FUL )

	)

1591 
	#C‹eDebug_DEMCR_TRCENA_Pos
 24

	)

1592 
	#C‹eDebug_DEMCR_TRCENA_Msk
 (1UL << 
C‹eDebug_DEMCR_TRCENA_Pos
Ë

	)

1594 
	#C‹eDebug_DEMCR_MON_REQ_Pos
 19

	)

1595 
	#C‹eDebug_DEMCR_MON_REQ_Msk
 (1UL << 
C‹eDebug_DEMCR_MON_REQ_Pos
Ë

	)

1597 
	#C‹eDebug_DEMCR_MON_STEP_Pos
 18

	)

1598 
	#C‹eDebug_DEMCR_MON_STEP_Msk
 (1UL << 
C‹eDebug_DEMCR_MON_STEP_Pos
Ë

	)

1600 
	#C‹eDebug_DEMCR_MON_PEND_Pos
 17

	)

1601 
	#C‹eDebug_DEMCR_MON_PEND_Msk
 (1UL << 
C‹eDebug_DEMCR_MON_PEND_Pos
Ë

	)

1603 
	#C‹eDebug_DEMCR_MON_EN_Pos
 16

	)

1604 
	#C‹eDebug_DEMCR_MON_EN_Msk
 (1UL << 
C‹eDebug_DEMCR_MON_EN_Pos
Ë

	)

1606 
	#C‹eDebug_DEMCR_VC_HARDERR_Pos
 10

	)

1607 
	#C‹eDebug_DEMCR_VC_HARDERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_HARDERR_Pos
Ë

	)

1609 
	#C‹eDebug_DEMCR_VC_INTERR_Pos
 9

	)

1610 
	#C‹eDebug_DEMCR_VC_INTERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_INTERR_Pos
Ë

	)

1612 
	#C‹eDebug_DEMCR_VC_BUSERR_Pos
 8

	)

1613 
	#C‹eDebug_DEMCR_VC_BUSERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_BUSERR_Pos
Ë

	)

1615 
	#C‹eDebug_DEMCR_VC_STATERR_Pos
 7

	)

1616 
	#C‹eDebug_DEMCR_VC_STATERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_STATERR_Pos
Ë

	)

1618 
	#C‹eDebug_DEMCR_VC_CHKERR_Pos
 6

	)

1619 
	#C‹eDebug_DEMCR_VC_CHKERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_CHKERR_Pos
Ë

	)

1621 
	#C‹eDebug_DEMCR_VC_NOCPERR_Pos
 5

	)

1622 
	#C‹eDebug_DEMCR_VC_NOCPERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_NOCPERR_Pos
Ë

	)

1624 
	#C‹eDebug_DEMCR_VC_MMERR_Pos
 4

	)

1625 
	#C‹eDebug_DEMCR_VC_MMERR_Msk
 (1UL << 
C‹eDebug_DEMCR_VC_MMERR_Pos
Ë

	)

1627 
	#C‹eDebug_DEMCR_VC_CORERESET_Pos
 0

	)

1628 
	#C‹eDebug_DEMCR_VC_CORERESET_Msk
 (1UL )

	)

1640 
	#SCS_BASE
 (0xE000E000ULË

	)

1641 
	#ITM_BASE
 (0xE0000000ULË

	)

1642 
	#DWT_BASE
 (0xE0001000ULË

	)

1643 
	#TPI_BASE
 (0xE0040000ULË

	)

1644 
	#C‹eDebug_BASE
 (0xE000EDF0ULË

	)

1645 
	#SysTick_BASE
 (
SCS_BASE
 + 0x0010ULË

	)

1646 
	#NVIC_BASE
 (
SCS_BASE
 + 0x0100ULË

	)

1647 
	#SCB_BASE
 (
SCS_BASE
 + 0x0D00ULË

	)

1649 
	#SCnSCB
 ((
SCnSCB_Ty≥
 *Ë
SCS_BASE
 )

	)

1650 
	#SCB
 ((
SCB_Ty≥
 *Ë
SCB_BASE
 )

	)

1651 
	#SysTick
 ((
SysTick_Ty≥
 *Ë
SysTick_BASE
 )

	)

1652 
	#NVIC
 ((
NVIC_Ty≥
 *Ë
NVIC_BASE
 )

	)

1653 
	#ITM
 ((
ITM_Ty≥
 *Ë
ITM_BASE
 )

	)

1654 
	#DWT
 ((
DWT_Ty≥
 *Ë
DWT_BASE
 )

	)

1655 
	#TPI
 ((
TPI_Ty≥
 *Ë
TPI_BASE
 )

	)

1656 
	#C‹eDebug
 ((
C‹eDebug_Ty≥
 *Ë
C‹eDebug_BASE
Ë

	)

1658 #i‡(
__MPU_PRESENT
 == 1)

1659 
	#MPU_BASE
 (
SCS_BASE
 + 0x0D90ULË

	)

1660 
	#MPU
 ((
MPU_Ty≥
 *Ë
MPU_BASE
 )

	)

1663 #i‡(
__FPU_PRESENT
 == 1)

1664 
	#FPU_BASE
 (
SCS_BASE
 + 0x0F30ULË

	)

1665 
	#FPU
 ((
FPU_Ty≥
 *Ë
FPU_BASE
 )

	)

1702 
__STATIC_INLINE
 
NVIC_SëPri‹ôyGroupög
(
uöt32_t
 
Pri‹ôyGroup
)

1704 
uöt32_t
 
ªg_vÆue
;

1705 
uöt32_t
 
Pri‹ôyGroupTmp
 = (
Pri‹ôyGroup
 & (uint32_t)0x07UL);

1707 
ªg_vÆue
 = 
SCB
->
AIRCR
;

1708 
ªg_vÆue
 &~((
uöt32_t
)(
SCB_AIRCR_VECTKEY_Msk
 | 
SCB_AIRCR_PRIGROUP_Msk
));

1709 
ªg_vÆue
 = (reg_value |

1710 ((
uöt32_t
)0x5FAUL << 
SCB_AIRCR_VECTKEY_Pos
) |

1711 (
Pri‹ôyGroupTmp
 << 8) );

1712 
SCB
->
AIRCR
 = 
ªg_vÆue
;

1722 
__STATIC_INLINE
 
uöt32_t
 
NVIC_GëPri‹ôyGroupög
()

1724  ((
uöt32_t
)((
SCB
->
AIRCR
 & 
SCB_AIRCR_PRIGROUP_Msk
Ë>> 
SCB_AIRCR_PRIGROUP_Pos
));

1734 
__STATIC_INLINE
 
NVIC_E«bÀIRQ
(
IRQn_Ty≥
 
IRQn
)

1736 
NVIC
->
ISER
[(((
uöt32_t
)(
öt32_t
)
IRQn
) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));

1746 
__STATIC_INLINE
 
NVIC_DißbÀIRQ
(
IRQn_Ty≥
 
IRQn
)

1748 
NVIC
->
ICER
[(((
uöt32_t
)(
öt32_t
)
IRQn
) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));

1762 
__STATIC_INLINE
 
uöt32_t
 
NVIC_GëPídögIRQ
(
IRQn_Ty≥
 
IRQn
)

1764 ((
uöt32_t
)(((
NVIC
->
ISPR
[(((uöt32_t)(
öt32_t
)
IRQn
) >> 5UL)] & (1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL));

1774 
__STATIC_INLINE
 
NVIC_SëPídögIRQ
(
IRQn_Ty≥
 
IRQn
)

1776 
NVIC
->
ISPR
[(((
uöt32_t
)(
öt32_t
)
IRQn
) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));

1786 
__STATIC_INLINE
 
NVIC_CÀ¨PídögIRQ
(
IRQn_Ty≥
 
IRQn
)

1788 
NVIC
->
ICPR
[(((
uöt32_t
)(
öt32_t
)
IRQn
) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL));

1801 
__STATIC_INLINE
 
uöt32_t
 
NVIC_GëA˘ive
(
IRQn_Ty≥
 
IRQn
)

1803 ((
uöt32_t
)(((
NVIC
->
IABR
[(((uöt32_t)(
öt32_t
)
IRQn
) >> 5UL)] & (1UL << (((uint32_t)(int32_t)IRQn) & 0x1FUL))) != 0UL) ? 1UL : 0UL));

1816 
__STATIC_INLINE
 
NVIC_SëPri‹ôy
(
IRQn_Ty≥
 
IRQn
, 
uöt32_t
 
¥i‹ôy
)

1818 if((
öt32_t
)
IRQn
 < 0) {

1819 
SCB
->
SHPR
[(((
uöt32_t
)(
öt32_t
)
IRQn
Ë& 0xFUL)-4UL] = (
uöt8_t
)((
¥i‹ôy
 << (8 - 
__NVIC_PRIO_BITS
)) & (uint32_t)0xFFUL);

1822 
NVIC
->
IP
[((
uöt32_t
)(
öt32_t
)
IRQn
)] = (
uöt8_t
)((
¥i‹ôy
 << (8 - 
__NVIC_PRIO_BITS
)) & (uint32_t)0xFFUL);

1838 
__STATIC_INLINE
 
uöt32_t
 
NVIC_GëPri‹ôy
(
IRQn_Ty≥
 
IRQn
)

1841 if((
öt32_t
)
IRQn
 < 0) {

1842 (((
uöt32_t
)
SCB
->
SHPR
[(((uöt32_t)(
öt32_t
)
IRQn
Ë& 0xFUL)-4UL] >> (8 - 
__NVIC_PRIO_BITS
)));

1845 (((
uöt32_t
)
NVIC
->
IP
[((uöt32_t)(
öt32_t
)
IRQn
)] >> (8 - 
__NVIC_PRIO_BITS
)));

1862 
__STATIC_INLINE
 
uöt32_t
 
NVIC_EncodePri‹ôy
 (uöt32_à
Pri‹ôyGroup
, uöt32_à
Pªem±Pri‹ôy
, uöt32_à
SubPri‹ôy
)

1864 
uöt32_t
 
Pri‹ôyGroupTmp
 = (
Pri‹ôyGroup
 & (uint32_t)0x07UL);

1865 
uöt32_t
 
Pªem±Pri‹ôyBôs
;

1866 
uöt32_t
 
SubPri‹ôyBôs
;

1868 
Pªem±Pri‹ôyBôs
 = ((7UL - 
Pri‹ôyGroupTmp
Ë> (
uöt32_t
)(
__NVIC_PRIO_BITS
)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);

1869 
SubPri‹ôyBôs
 = ((
Pri‹ôyGroupTmp
 + (
uöt32_t
)(
__NVIC_PRIO_BITS
)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));

1872 ((
Pªem±Pri‹ôy
 & (
uöt32_t
)((1UL << (
Pªem±Pri‹ôyBôs
)Ë- 1UL)Ë<< 
SubPri‹ôyBôs
) |

1873 ((
SubPri‹ôy
 & (
uöt32_t
)((1UL << (
SubPri‹ôyBôs
 )) - 1UL)))

1890 
__STATIC_INLINE
 
NVIC_DecodePri‹ôy
 (
uöt32_t
 
Pri‹ôy
, uöt32_à
Pri‹ôyGroup
, uöt32_t* 
pPªem±Pri‹ôy
, uöt32_t* 
pSubPri‹ôy
)

1892 
uöt32_t
 
Pri‹ôyGroupTmp
 = (
Pri‹ôyGroup
 & (uint32_t)0x07UL);

1893 
uöt32_t
 
Pªem±Pri‹ôyBôs
;

1894 
uöt32_t
 
SubPri‹ôyBôs
;

1896 
Pªem±Pri‹ôyBôs
 = ((7UL - 
Pri‹ôyGroupTmp
Ë> (
uöt32_t
)(
__NVIC_PRIO_BITS
)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);

1897 
SubPri‹ôyBôs
 = ((
Pri‹ôyGroupTmp
 + (
uöt32_t
)(
__NVIC_PRIO_BITS
)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));

1899 *
pPªem±Pri‹ôy
 = (
Pri‹ôy
 >> 
SubPri‹ôyBôs
Ë& (
uöt32_t
)((1UL << (
Pªem±Pri‹ôyBôs
)) - 1UL);

1900 *
pSubPri‹ôy
 = (
Pri‹ôy
 ) & (
uöt32_t
)((1UL << (
SubPri‹ôyBôs
 )) - 1UL);

1908 
__STATIC_INLINE
 
NVIC_Sy°emRe£t
()

1910 
__DSB
();

1912 
SCB
->
AIRCR
 = (
uöt32_t
)((0x5FAUL << 
SCB_AIRCR_VECTKEY_Pos
) |

1913 (
SCB
->
AIRCR
 & 
SCB_AIRCR_PRIGROUP_Msk
) |

1914 
SCB_AIRCR_SYSRESETREQ_Msk
 );

1915 
__DSB
();

1916 1Ë{ 
__NOP
(); }

1937 
__STATIC_INLINE
 
uöt32_t
 
SCB_GëFPUTy≥
()

1939 
uöt32_t
 
mv‰0
;

1941 
mv‰0
 = 
SCB
->
MVFR0
;

1942 i‡((
mv‰0
 & 0x00000FF0UL) == 0x220UL) {

1944 } i‡((
mv‰0
 & 0x00000FF0UL) == 0x020UL) {

1964 
	#CCSIDR_WAYS
(
x
Ë(((xË& 
SCB_CCSIDR_ASSOCIATIVITY_Msk
Ë>> 
SCB_CCSIDR_ASSOCIATIVITY_Pos
)

	)

1965 
	#CCSIDR_SETS
(
x
Ë(((xË& 
SCB_CCSIDR_NUMSETS_Msk
 ) >> 
SCB_CCSIDR_NUMSETS_Pos
 )

	)

1966 
	#CCSIDR_LSSHIFT
(
x
Ë(((xË& 
SCB_CCSIDR_LINESIZE_Msk
 ) )

	)

1973 
__STATIC_INLINE
 
SCB_E«bÀICache
 ()

1975 #i‡(
__ICACHE_PRESENT
 == 1)

1976 
__DSB
();

1977 
__ISB
();

1978 
SCB
->
ICIALLU
 = 0UL;

1979 
SCB
->
CCR
 |(
uöt32_t
)
SCB_CCR_IC_Msk
;

1980 
__DSB
();

1981 
__ISB
();

1990 
__STATIC_INLINE
 
SCB_DißbÀICache
 ()

1992 #i‡(
__ICACHE_PRESENT
 == 1)

1993 
__DSB
();

1994 
__ISB
();

1995 
SCB
->
CCR
 &~(
uöt32_t
)
SCB_CCR_IC_Msk
;

1996 
SCB
->
ICIALLU
 = 0UL;

1997 
__DSB
();

1998 
__ISB
();

2007 
__STATIC_INLINE
 
SCB_InvÆid©eICache
 ()

2009 #i‡(
__ICACHE_PRESENT
 == 1)

2010 
__DSB
();

2011 
__ISB
();

2012 
SCB
->
ICIALLU
 = 0UL;

2013 
__DSB
();

2014 
__ISB
();

2023 
__STATIC_INLINE
 
SCB_E«bÀDCache
 ()

2025 #i‡(
__DCACHE_PRESENT
 == 1)

2026 
uöt32_t
 
ccsidr
, 
sshi·
, 
wshi·
, 
sw
;

2027 
uöt32_t
 
£ts
, 
ways
;

2029 
SCB
->
CSSELR
 = (0UL << 1) | 0UL;

2030 
ccsidr
 = 
SCB
->
CCSIDR
;

2031 
£ts
 = (
uöt32_t
)(
CCSIDR_SETS
(
ccsidr
));

2032 
sshi·
 = (
uöt32_t
)(
CCSIDR_LSSHIFT
(
ccsidr
) + 4UL);

2033 
ways
 = (
uöt32_t
)(
CCSIDR_WAYS
(
ccsidr
));

2034 
wshi·
 = (
uöt32_t
)((uöt32_t)
__CLZ
(
ways
) & 0x1FUL);

2036 
__DSB
();

2039 
uöt32_t
 
tmpways
 = 
ways
;

2041 
sw
 = ((
tmpways
 << 
wshi·
Ë| (
£ts
 << 
sshi·
));

2042 
SCB
->
DCISW
 = 
sw
;

2043 } 
tmpways
--);

2044 } 
£ts
--);

2045 
__DSB
();

2047 
SCB
->
CCR
 |(
uöt32_t
)
SCB_CCR_DC_Msk
;

2049 
__DSB
();

2050 
__ISB
();

2059 
__STATIC_INLINE
 
SCB_DißbÀDCache
 ()

2061 #i‡(
__DCACHE_PRESENT
 == 1)

2062 
uöt32_t
 
ccsidr
, 
sshi·
, 
wshi·
, 
sw
;

2063 
uöt32_t
 
£ts
, 
ways
;

2065 
SCB
->
CSSELR
 = (0UL << 1) | 0UL;

2066 
ccsidr
 = 
SCB
->
CCSIDR
;

2067 
£ts
 = (
uöt32_t
)(
CCSIDR_SETS
(
ccsidr
));

2068 
sshi·
 = (
uöt32_t
)(
CCSIDR_LSSHIFT
(
ccsidr
) + 4UL);

2069 
ways
 = (
uöt32_t
)(
CCSIDR_WAYS
(
ccsidr
));

2070 
wshi·
 = (
uöt32_t
)((uöt32_t)
__CLZ
(
ways
) & 0x1FUL);

2072 
__DSB
();

2074 
SCB
->
CCR
 &~(
uöt32_t
)
SCB_CCR_DC_Msk
;

2077 
uöt32_t
 
tmpways
 = 
ways
;

2079 
sw
 = ((
tmpways
 << 
wshi·
Ë| (
£ts
 << 
sshi·
));

2080 
SCB
->
DCCISW
 = 
sw
;

2081 } 
tmpways
--);

2082 } 
£ts
--);

2085 
__DSB
();

2086 
__ISB
();

2095 
__STATIC_INLINE
 
SCB_InvÆid©eDCache
 ()

2097 #i‡(
__DCACHE_PRESENT
 == 1)

2098 
uöt32_t
 
ccsidr
, 
sshi·
, 
wshi·
, 
sw
;

2099 
uöt32_t
 
£ts
, 
ways
;

2101 
SCB
->
CSSELR
 = (0UL << 1) | 0UL;

2102 
ccsidr
 = 
SCB
->
CCSIDR
;

2103 
£ts
 = (
uöt32_t
)(
CCSIDR_SETS
(
ccsidr
));

2104 
sshi·
 = (
uöt32_t
)(
CCSIDR_LSSHIFT
(
ccsidr
) + 4UL);

2105 
ways
 = (
uöt32_t
)(
CCSIDR_WAYS
(
ccsidr
));

2106 
wshi·
 = (
uöt32_t
)((uöt32_t)
__CLZ
(
ways
) & 0x1FUL);

2108 
__DSB
();

2111 
uöt32_t
 
tmpways
 = 
ways
;

2113 
sw
 = ((
tmpways
 << 
wshi·
Ë| (
£ts
 << 
sshi·
));

2114 
SCB
->
DCISW
 = 
sw
;

2115 } 
tmpways
--);

2116 } 
£ts
--);

2118 
__DSB
();

2119 
__ISB
();

2128 
__STATIC_INLINE
 
SCB_CÀ™DCache
 ()

2130 #i‡(
__DCACHE_PRESENT
 == 1)

2131 
uöt32_t
 
ccsidr
, 
sshi·
, 
wshi·
, 
sw
;

2132 
uöt32_t
 
£ts
, 
ways
;

2134 
SCB
->
CSSELR
 = (0UL << 1) | 0UL;

2135 
ccsidr
 = 
SCB
->
CCSIDR
;

2136 
£ts
 = (
uöt32_t
)(
CCSIDR_SETS
(
ccsidr
));

2137 
sshi·
 = (
uöt32_t
)(
CCSIDR_LSSHIFT
(
ccsidr
) + 4UL);

2138 
ways
 = (
uöt32_t
)(
CCSIDR_WAYS
(
ccsidr
));

2139 
wshi·
 = (
uöt32_t
)((uöt32_t)
__CLZ
(
ways
) & 0x1FUL);

2141 
__DSB
();

2144 
uöt32_t
 
tmpways
 = 
ways
;

2146 
sw
 = ((
tmpways
 << 
wshi·
Ë| (
£ts
 << 
sshi·
));

2147 
SCB
->
DCCSW
 = 
sw
;

2148 } 
tmpways
--);

2149 } 
£ts
--);

2151 
__DSB
();

2152 
__ISB
();

2161 
__STATIC_INLINE
 
SCB_CÀ™InvÆid©eDCache
 ()

2163 #i‡(
__DCACHE_PRESENT
 == 1)

2164 
uöt32_t
 
ccsidr
, 
sshi·
, 
wshi·
, 
sw
;

2165 
uöt32_t
 
£ts
, 
ways
;

2167 
SCB
->
CSSELR
 = (0UL << 1) | 0UL;

2168 
ccsidr
 = 
SCB
->
CCSIDR
;

2169 
£ts
 = (
uöt32_t
)(
CCSIDR_SETS
(
ccsidr
));

2170 
sshi·
 = (
uöt32_t
)(
CCSIDR_LSSHIFT
(
ccsidr
) + 4UL);

2171 
ways
 = (
uöt32_t
)(
CCSIDR_WAYS
(
ccsidr
));

2172 
wshi·
 = (
uöt32_t
)((uöt32_t)
__CLZ
(
ways
) & 0x1FUL);

2174 
__DSB
();

2177 
uöt32_t
 
tmpways
 = 
ways
;

2179 
sw
 = ((
tmpways
 << 
wshi·
Ë| (
£ts
 << 
sshi·
));

2180 
SCB
->
DCCISW
 = 
sw
;

2181 } 
tmpways
--);

2182 } 
£ts
--);

2184 
__DSB
();

2185 
__ISB
();

2196 
__STATIC_INLINE
 
SCB_InvÆid©eDCache_by_Addr
 (
uöt32_t
 *
addr
, 
öt32_t
 
dsize
)

2198 #i‡(
__DCACHE_PRESENT
 == 1)

2199 
öt32_t
 
›_size
 = 
dsize
;

2200 
uöt32_t
 
›_addr
 = (uöt32_t)
addr
;

2201 
uöt32_t
 
löesize
 = 32UL;

2203 
__DSB
();

2205 
›_size
 > 0) {

2206 
SCB
->
DCIMVAC
 = 
›_addr
;

2207 
›_addr
 +
löesize
;

2208 
›_size
 -(
öt32_t
)
löesize
;

2211 
__DSB
();

2212 
__ISB
();

2223 
__STATIC_INLINE
 
SCB_CÀ™DCache_by_Addr
 (
uöt32_t
 *
addr
, 
öt32_t
 
dsize
)

2225 #i‡(
__DCACHE_PRESENT
 == 1)

2226 
öt32_t
 
›_size
 = 
dsize
;

2227 
uöt32_t
 
›_addr
 = (uöt32_tË
addr
;

2228 
uöt32_t
 
löesize
 = 32UL;

2230 
__DSB
();

2232 
›_size
 > 0) {

2233 
SCB
->
DCCMVAC
 = 
›_addr
;

2234 
›_addr
 +
löesize
;

2235 
›_size
 -(
öt32_t
)
löesize
;

2238 
__DSB
();

2239 
__ISB
();

2250 
__STATIC_INLINE
 
SCB_CÀ™InvÆid©eDCache_by_Addr
 (
uöt32_t
 *
addr
, 
öt32_t
 
dsize
)

2252 #i‡(
__DCACHE_PRESENT
 == 1)

2253 
öt32_t
 
›_size
 = 
dsize
;

2254 
uöt32_t
 
›_addr
 = (uöt32_tË
addr
;

2255 
uöt32_t
 
löesize
 = 32UL;

2257 
__DSB
();

2259 
›_size
 > 0) {

2260 
SCB
->
DCCIMVAC
 = 
›_addr
;

2261 
›_addr
 +
löesize
;

2262 
›_size
 -(
öt32_t
)
löesize
;

2265 
__DSB
();

2266 
__ISB
();

2282 #i‡(
__Víd‹_SysTickC⁄fig
 == 0)

2299 
__STATIC_INLINE
 
uöt32_t
 
SysTick_C⁄fig
(uöt32_à
ticks
)

2301 i‡((
ticks
 - 1ULË> 
SysTick_LOAD_RELOAD_Msk
) {  (1UL); }

2303 
SysTick
->
LOAD
 = (
uöt32_t
)(
ticks
 - 1UL);

2304 
NVIC_SëPri‹ôy
 (
SysTick_IRQn
, (1UL << 
__NVIC_PRIO_BITS
) - 1UL);

2305 
SysTick
->
VAL
 = 0UL;

2306 
SysTick
->
CTRL
 = 
SysTick_CTRL_CLKSOURCE_Msk
 |

2307 
SysTick_CTRL_TICKINT_Msk
 |

2308 
SysTick_CTRL_ENABLE_Msk
;

2325 vﬁ©ûê
öt32_t
 
ITM_RxBuf„r
;

2326 
	#ITM_RXBUFFER_EMPTY
 0x5AA55AA5

	)

2339 
__STATIC_INLINE
 
uöt32_t
 
ITM_SídCh¨
 (uöt32_à
ch
)

2341 i‡(((
	gITM
->
	gTCR
 & 
	gITM_TCR_ITMENA_Msk
) != 0UL) &&

2342 ((
ITM
->
TER
 & 1UL ) != 0UL) )

2344 
ITM
->
PORT
[0].
u32
 =0ULË{ 
__NOP
(); }

2345 
	gITM
->
	gPORT
[0].
	gu8
 = (
uöt8_t
)
ch
;

2347  (
	gch
);

2358 
__STATIC_INLINE
 
öt32_t
 
ITM_Re˚iveCh¨
 () {

2359 
öt32_t
 
	gch
 = -1;

2361 i‡(
	gITM_RxBuf„r
 !
ITM_RXBUFFER_EMPTY
) {

2362 
ch
 = 
ITM_RxBuf„r
;

2363 
	gITM_RxBuf„r
 = 
ITM_RXBUFFER_EMPTY
;

2366  (
	gch
);

2377 
__STATIC_INLINE
 
öt32_t
 
ITM_CheckCh¨
 () {

2379 i‡(
	gITM_RxBuf„r
 =
ITM_RXBUFFER_EMPTY
) {

2391 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\core_cmFunc.h

38 #i‚de‡
__CORE_CMFUNC_H


39 
	#__CORE_CMFUNC_H


	)

48 #i‡ 
deföed
 ( 
__CC_ARM
 )

51 #i‡(
__ARMCC_VERSION
 < 400677)

64 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_CONTROL
()

66 
uöt32_t
 
__ªgC⁄åﬁ
 
	`__ASM
("control");

67 (
__ªgC⁄åﬁ
);

68 
	}
}

77 
__STATIC_INLINE
 
	$__£t_CONTROL
(
uöt32_t
 
c⁄åﬁ
)

79 
uöt32_t
 
__ªgC⁄åﬁ
 
	`__ASM
("control");

80 
__ªgC⁄åﬁ
 = 
c⁄åﬁ
;

81 
	}
}

90 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_IPSR
()

92 
uöt32_t
 
__ªgIPSR
 
	`__ASM
("ipsr");

93 (
__ªgIPSR
);

94 
	}
}

103 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_APSR
()

105 
uöt32_t
 
__ªgAPSR
 
	`__ASM
("apsr");

106 (
__ªgAPSR
);

107 
	}
}

116 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_xPSR
()

118 
uöt32_t
 
__ªgXPSR
 
	`__ASM
("xpsr");

119 (
__ªgXPSR
);

120 
	}
}

129 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_PSP
()

131 
uöt32_t
 
__ªgPro˚ssSèckPoöãr
 
	`__ASM
("psp");

132 (
__ªgPro˚ssSèckPoöãr
);

133 
	}
}

142 
__STATIC_INLINE
 
	$__£t_PSP
(
uöt32_t
 
t›OfProcSèck
)

144 
uöt32_t
 
__ªgPro˚ssSèckPoöãr
 
	`__ASM
("psp");

145 
__ªgPro˚ssSèckPoöãr
 = 
t›OfProcSèck
;

146 
	}
}

155 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_MSP
()

157 
uöt32_t
 
__ªgMaöSèckPoöãr
 
	`__ASM
("msp");

158 (
__ªgMaöSèckPoöãr
);

159 
	}
}

168 
__STATIC_INLINE
 
	$__£t_MSP
(
uöt32_t
 
t›OfMaöSèck
)

170 
uöt32_t
 
__ªgMaöSèckPoöãr
 
	`__ASM
("msp");

171 
__ªgMaöSèckPoöãr
 = 
t›OfMaöSèck
;

172 
	}
}

181 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_PRIMASK
()

183 
uöt32_t
 
__ªgPriMask
 
	`__ASM
("primask");

184 (
__ªgPriMask
);

185 
	}
}

194 
__STATIC_INLINE
 
	$__£t_PRIMASK
(
uöt32_t
 
¥iMask
)

196 
uöt32_t
 
__ªgPriMask
 
	`__ASM
("primask");

197 
__ªgPriMask
 = (
¥iMask
);

198 
	}
}

201 #i‡ (
__CORTEX_M
 >= 0x03)

208 
	#__íabÀ_Áu…_úq
 
__íabÀ_fiq


	)

216 
	#__dißbÀ_Áu…_úq
 
__dißbÀ_fiq


	)

225 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_BASEPRI
()

227 
uöt32_t
 
__ªgBa£Pri
 
	`__ASM
("basepri");

228 (
__ªgBa£Pri
);

229 
	}
}

238 
__STATIC_INLINE
 
	$__£t_BASEPRI
(
uöt32_t
 
ba£Pri
)

240 
uöt32_t
 
__ªgBa£Pri
 
	`__ASM
("basepri");

241 
__ªgBa£Pri
 = (
ba£Pri
 & 0xff);

242 
	}
}

251 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_FAULTMASK
()

253 
uöt32_t
 
__ªgFau…Mask
 
	`__ASM
("faultmask");

254 (
__ªgFau…Mask
);

255 
	}
}

264 
__STATIC_INLINE
 
	$__£t_FAULTMASK
(
uöt32_t
 
Áu…Mask
)

266 
uöt32_t
 
__ªgFau…Mask
 
	`__ASM
("faultmask");

267 
__ªgFau…Mask
 = (
Áu…Mask
 & (
uöt32_t
)1);

268 
	}
}

273 #i‡ (
__CORTEX_M
 == 0x04)

281 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_FPSCR
()

283 #i‡(
__FPU_PRESENT
 =1Ë&& (
__FPU_USED
 == 1)

284 
uöt32_t
 
__ªgÂs¸
 
	`__ASM
("fpscr");

285 (
__ªgÂs¸
);

289 
	}
}

298 
__STATIC_INLINE
 
	$__£t_FPSCR
(
uöt32_t
 
Âs¸
)

300 #i‡(
__FPU_PRESENT
 =1Ë&& (
__FPU_USED
 == 1)

301 
uöt32_t
 
__ªgÂs¸
 
	`__ASM
("fpscr");

302 
__ªgÂs¸
 = (
Âs¸
);

304 
	}
}

309 #ñi‡
deföed
 ( 
__ICCARM__
 )

312 
	~<cmsis_ür.h
>

315 #ñi‡
deföed
 ( 
__TMS470__
 )

318 
	~<cmsis_ccs.h
>

321 #ñi‡
deföed
 ( 
__GNUC__
 )

329 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__íabÀ_úq
()

331 
__ASM
 volatile ("cpsie i" : : : "memory");

332 
	}
}

340 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__dißbÀ_úq
()

342 
__ASM
 volatile ("cpsid i" : : : "memory");

343 
	}
}

352 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_CONTROL
()

354 
uöt32_t
 
ªsu…
;

356 
__ASM
 vﬁ©ûê("MRS %0, c⁄åﬁ" : "Ù" (
ªsu…
) );

357 (
ªsu…
);

358 
	}
}

367 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__£t_CONTROL
(
uöt32_t
 
c⁄åﬁ
)

369 
__ASM
 vﬁ©ûê("MSR c⁄åﬁ, %0" : : "r" (
c⁄åﬁ
) : "memory");

370 
	}
}

379 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_IPSR
()

381 
uöt32_t
 
ªsu…
;

383 
__ASM
 vﬁ©ûê("MRS %0, ip§" : "Ù" (
ªsu…
) );

384 (
ªsu…
);

385 
	}
}

394 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_APSR
()

396 
uöt32_t
 
ªsu…
;

398 
__ASM
 vﬁ©ûê("MRS %0,áp§" : "Ù" (
ªsu…
) );

399 (
ªsu…
);

400 
	}
}

409 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_xPSR
()

411 
uöt32_t
 
ªsu…
;

413 
__ASM
 vﬁ©ûê("MRS %0, xp§" : "Ù" (
ªsu…
) );

414 (
ªsu…
);

415 
	}
}

424 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_PSP
()

426 
uöt32_t
 
ªsu…
;

428 
__ASM
 vﬁ©ûê("MRS %0,Ö•\n" : "Ù" (
ªsu…
) );

429 (
ªsu…
);

430 
	}
}

439 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__£t_PSP
(
uöt32_t
 
t›OfProcSèck
)

441 
__ASM
 vﬁ©ûê("MSRÖ•, %0\n" : : "r" (
t›OfProcSèck
) : "sp");

442 
	}
}

451 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_MSP
()

453 
uöt32_t
 
ªsu…
;

455 
__ASM
 vﬁ©ûê("MRS %0, m•\n" : "Ù" (
ªsu…
) );

456 (
ªsu…
);

457 
	}
}

466 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__£t_MSP
(
uöt32_t
 
t›OfMaöSèck
)

468 
__ASM
 vﬁ©ûê("MSR m•, %0\n" : : "r" (
t›OfMaöSèck
) : "sp");

469 
	}
}

478 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_PRIMASK
()

480 
uöt32_t
 
ªsu…
;

482 
__ASM
 vﬁ©ûê("MRS %0,Örimask" : "Ù" (
ªsu…
) );

483 (
ªsu…
);

484 
	}
}

493 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__£t_PRIMASK
(
uöt32_t
 
¥iMask
)

495 
__ASM
 vﬁ©ûê("MSRÖrimask, %0" : : "r" (
¥iMask
) : "memory");

496 
	}
}

499 #i‡ (
__CORTEX_M
 >= 0x03)

506 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__íabÀ_Áu…_úq
()

508 
__ASM
 volatile ("cpsie f" : : : "memory");

509 
	}
}

517 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__dißbÀ_Áu…_úq
()

519 
__ASM
 volatile ("cpsid f" : : : "memory");

520 
	}
}

529 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_BASEPRI
()

531 
uöt32_t
 
ªsu…
;

533 
__ASM
 vﬁ©ûê("MRS %0, ba£¥i_max" : "Ù" (
ªsu…
) );

534 (
ªsu…
);

535 
	}
}

544 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__£t_BASEPRI
(
uöt32_t
 
vÆue
)

546 
__ASM
 vﬁ©ûê("MSR ba£¥i, %0" : : "r" (
vÆue
) : "memory");

547 
	}
}

556 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_FAULTMASK
()

558 
uöt32_t
 
ªsu…
;

560 
__ASM
 vﬁ©ûê("MRS %0, fau…mask" : "Ù" (
ªsu…
) );

561 (
ªsu…
);

562 
	}
}

571 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__£t_FAULTMASK
(
uöt32_t
 
Áu…Mask
)

573 
__ASM
 vﬁ©ûê("MSR fau…mask, %0" : : "r" (
Áu…Mask
) : "memory");

574 
	}
}

579 #i‡ (
__CORTEX_M
 == 0x04)

587 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__gë_FPSCR
()

589 #i‡(
__FPU_PRESENT
 =1Ë&& (
__FPU_USED
 == 1)

590 
uöt32_t
 
ªsu…
;

593 
__ASM
 volatile ("");

594 
__ASM
 vﬁ©ûê("VMRS %0, fps¸" : "Ù" (
ªsu…
) );

595 
__ASM
 volatile ("");

596 (
ªsu…
);

600 
	}
}

609 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__£t_FPSCR
(
uöt32_t
 
Âs¸
)

611 #i‡(
__FPU_PRESENT
 =1Ë&& (
__FPU_USED
 == 1)

613 
__ASM
 volatile ("");

614 
__ASM
 vﬁ©ûê("VMSR fps¸, %0" : : "r" (
Âs¸
) : "vfpcc");

615 
__ASM
 volatile ("");

617 
	}
}

622 #ñi‡
deföed
 ( 
__TASKING__
 )

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\core_cmInstr.h

38 #i‚de‡
__CORE_CMINSTR_H


39 
	#__CORE_CMINSTR_H


	)

48 #i‡ 
deföed
 ( 
__CC_ARM
 )

51 #i‡(
__ARMCC_VERSION
 < 400677)

60 
	#__NOP
 
__n›


	)

68 
	#__WFI
 
__wfi


	)

76 
	#__WFE
 
__w„


	)

83 
	#__SEV
 
__£v


	)

92 
	#__ISB
(Ë
	`__isb
(0xF)

	)

100 
	#__DSB
(Ë
	`__dsb
(0xF)

	)

108 
	#__DMB
(Ë
	`__dmb
(0xF)

	)

118 
	#__REV
 
__ªv


	)

128 #i‚de‡
__NO_EMBEDDED_ASM


129 
__©åibuã__
((
£˘i⁄
(".ªv16_ãxt"))Ë
__STATIC_INLINE
 
__ASM
 
uöt32_t
 
	$__REV16
(
uöt32_t
 
vÆue
)

131 
ªv16
 
r0
,Ñ0

132 
bx
 
Ã


133 
	}
}

143 #i‚de‡
__NO_EMBEDDED_ASM


144 
__©åibuã__
((
£˘i⁄
(".ªvsh_ãxt"))Ë
__STATIC_INLINE
 
__ASM
 
öt32_t
 
	$__REVSH
(
öt32_t
 
vÆue
)

146 
ªvsh
 
r0
,Ñ0

147 
bx
 
Ã


148 
	}
}

160 
	#__ROR
 
__r‹


	)

171 
	#__BKPT
(
vÆue
Ë
	`__bªakpoöt
(vÆue)

	)

174 #i‡ (
__CORTEX_M
 >= 0x03)

183 
	#__RBIT
 
__rbô


	)

193 
	#__LDREXB
(
±r
Ë((
uöt8_t
 ) 
	`__ldªx
’å))

	)

203 
	#__LDREXH
(
±r
Ë((
uöt16_t
Ë
	`__ldªx
’å))

	)

213 
	#__LDREXW
(
±r
Ë((
uöt32_t
 ) 
	`__ldªx
’å))

	)

225 
	#__STREXB
(
vÆue
, 
±r
Ë
	`__°ªx
(vÆue,Öå)

	)

237 
	#__STREXH
(
vÆue
, 
±r
Ë
	`__°ªx
(vÆue,Öå)

	)

249 
	#__STREXW
(
vÆue
, 
±r
Ë
	`__°ªx
(vÆue,Öå)

	)

257 
	#__CLREX
 
__˛ªx


	)

268 
	#__SSAT
 
__sßt


	)

279 
	#__USAT
 
__ußt


	)

289 
	#__CLZ
 
__˛z


	)

295 #ñi‡
deföed
 ( 
__ICCARM__
 )

298 
	~<cmsis_ür.h
>

301 #ñi‡
deföed
 ( 
__TMS470__
 )

304 
	~<cmsis_ccs.h
>

307 #ñi‡
deföed
 ( 
__GNUC__
 )

313 #i‡
deföed
 (
__thumb__
Ë&& !deföed (
__thumb2__
)

314 
	#__CMSIS_GCC_OUT_REG
(
r
Ë"ˆ" (r)

	)

315 
	#__CMSIS_GCC_USE_REG
(
r
Ë"l" (r)

	)

317 
	#__CMSIS_GCC_OUT_REG
(
r
Ë"Ù" (r)

	)

318 
	#__CMSIS_GCC_USE_REG
(
r
Ë"r" (r)

	)

325 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__NOP
()

327 
__ASM
 volatile ("nop");

328 
	}
}

336 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__WFI
()

338 
__ASM
 volatile ("wfi");

339 
	}
}

347 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__WFE
()

349 
__ASM
 volatile ("wfe");

350 
	}
}

357 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__SEV
()

359 
__ASM
 volatile ("sev");

360 
	}
}

369 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__ISB
()

371 
__ASM
 volatile ("isb");

372 
	}
}

380 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__DSB
()

382 
__ASM
 volatile ("dsb");

383 
	}
}

391 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__DMB
()

393 
__ASM
 volatile ("dmb");

394 
	}
}

404 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__REV
(
uöt32_t
 
vÆue
)

406 #i‡(
__GNUC__
 > 4Ë|| (__GNUC__ =4 && 
__GNUC_MINOR__
 >= 5)

407  
	`__buûtö_bsw≠32
(
vÆue
);

409 
uöt32_t
 
ªsu…
;

411 
__ASM
 vﬁ©ûê("ªv %0, %1" : 
	`__CMSIS_GCC_OUT_REG
 (
ªsu…
Ë: 
	`__CMSIS_GCC_USE_REG
 (
vÆue
) );

412 (
ªsu…
);

414 
	}
}

424 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__REV16
(
uöt32_t
 
vÆue
)

426 
uöt32_t
 
ªsu…
;

428 
__ASM
 vﬁ©ûê("ªv16 %0, %1" : 
	`__CMSIS_GCC_OUT_REG
 (
ªsu…
Ë: 
	`__CMSIS_GCC_USE_REG
 (
vÆue
) );

429 (
ªsu…
);

430 
	}
}

440 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
öt32_t
 
	$__REVSH
(
öt32_t
 
vÆue
)

442 #i‡(
__GNUC__
 > 4Ë|| (__GNUC__ =4 && 
__GNUC_MINOR__
 >= 8)

443  ()
	`__buûtö_bsw≠16
(
vÆue
);

445 
uöt32_t
 
ªsu…
;

447 
__ASM
 vﬁ©ûê("ªvsh %0, %1" : 
	`__CMSIS_GCC_OUT_REG
 (
ªsu…
Ë: 
	`__CMSIS_GCC_USE_REG
 (
vÆue
) );

448 (
ªsu…
);

450 
	}
}

461 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__ROR
(
uöt32_t
 
›1
, uöt32_à
›2
)

463  (
›1
 >> 
›2
) | (op1 << (32 - op2));

464 
	}
}

475 
	#__BKPT
(
vÆue
Ë
__ASM
 vﬁ©ûê("bk± "#vÆue)

	)

478 #i‡ (
__CORTEX_M
 >= 0x03)

487 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__RBIT
(
uöt32_t
 
vÆue
)

489 
uöt32_t
 
ªsu…
;

491 
__ASM
 vﬁ©ûê("rbô %0, %1" : "Ù" (
ªsu…
Ë: "r" (
vÆue
) );

492 (
ªsu…
);

493 
	}
}

503 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt8_t
 
	$__LDREXB
(vﬁ©ûê
uöt8_t
 *
addr
)

505 
uöt32_t
 
ªsu…
;

507 #i‡(
__GNUC__
 > 4Ë|| (__GNUC__ =4 && 
__GNUC_MINOR__
 >= 8)

508 
__ASM
 vﬁ©ûê("ldªxb %0, %1" : "Ù" (
ªsu…
Ë: "Q" (*
addr
) );

513 
__ASM
 vﬁ©ûê("ldªxb %0, [%1]" : "Ù" (
ªsu…
Ë: "r" (
addr
) : "memory" );

515 (
ªsu…
);

516 
	}
}

526 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt16_t
 
	$__LDREXH
(vﬁ©ûê
uöt16_t
 *
addr
)

528 
uöt32_t
 
ªsu…
;

530 #i‡(
__GNUC__
 > 4Ë|| (__GNUC__ =4 && 
__GNUC_MINOR__
 >= 8)

531 
__ASM
 vﬁ©ûê("ldªxh %0, %1" : "Ù" (
ªsu…
Ë: "Q" (*
addr
) );

536 
__ASM
 vﬁ©ûê("ldªxh %0, [%1]" : "Ù" (
ªsu…
Ë: "r" (
addr
) : "memory" );

538 (
ªsu…
);

539 
	}
}

549 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__LDREXW
(vﬁ©ûê
uöt32_t
 *
addr
)

551 
uöt32_t
 
ªsu…
;

553 
__ASM
 vﬁ©ûê("ldªx %0, %1" : "Ù" (
ªsu…
Ë: "Q" (*
addr
) );

554 (
ªsu…
);

555 
	}
}

567 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__STREXB
(
uöt8_t
 
vÆue
, vﬁ©ûêuöt8_à*
addr
)

569 
uöt32_t
 
ªsu…
;

571 
__ASM
 vﬁ©ûê("°ªxb %0, %2, %1" : "=&r" (
ªsu…
), "=Q" (*
addr
Ë: "r" (
vÆue
) );

572 (
ªsu…
);

573 
	}
}

585 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__STREXH
(
uöt16_t
 
vÆue
, vﬁ©ûêuöt16_à*
addr
)

587 
uöt32_t
 
ªsu…
;

589 
__ASM
 vﬁ©ûê("°ªxh %0, %2, %1" : "=&r" (
ªsu…
), "=Q" (*
addr
Ë: "r" (
vÆue
) );

590 (
ªsu…
);

591 
	}
}

603 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__STREXW
(
uöt32_t
 
vÆue
, vﬁ©ûêuöt32_à*
addr
)

605 
uöt32_t
 
ªsu…
;

607 
__ASM
 vﬁ©ûê("°ªx %0, %2, %1" : "=&r" (
ªsu…
), "=Q" (*
addr
Ë: "r" (
vÆue
) );

608 (
ªsu…
);

609 
	}
}

617 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
	$__CLREX
()

619 
__ASM
 volatile ("clrex" ::: "memory");

620 
	}
}

631 
	#__SSAT
(
ARG1
,
ARG2
) \

633 
uöt32_t
 
__RES
, 
__ARG1
 = (
ARG1
); \

634 
	`__ASM
 ("sßà%0, %1, %2" : "Ù" (
__RES
Ë: "I" (
ARG2
), "r" (
__ARG1
) ); \

635 
__RES
; \

636 })

	)

647 
	#__USAT
(
ARG1
,
ARG2
) \

649 
uöt32_t
 
__RES
, 
__ARG1
 = (
ARG1
); \

650 
	`__ASM
 ("ußà%0, %1, %2" : "Ù" (
__RES
Ë: "I" (
ARG2
), "r" (
__ARG1
) ); \

651 
__RES
; \

652 })

	)

662 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt8_t
 
	$__CLZ
(
uöt32_t
 
vÆue
)

664 
uöt32_t
 
ªsu…
;

666 
__ASM
 vﬁ©ûê("˛z %0, %1" : "Ù" (
ªsu…
Ë: "r" (
vÆue
) );

667 (
ªsu…
);

668 
	}
}

675 #ñi‡
deföed
 ( 
__TASKING__
 )

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\core_cmSimd.h

38 #i‡
deföed
 ( 
__ICCARM__
 )

39 #¥agm®
sy°em_ö˛ude


42 #i‚de‡
__CORE_CMSIMD_H


43 
	#__CORE_CMSIMD_H


	)

45 #ifde‡
__˝lu•lus


61 #i‡ 
deföed
 ( 
__CC_ARM
 )

63 
	#__SADD8
 
__ßdd8


	)

64 
	#__QADD8
 
__qadd8


	)

65 
	#__SHADD8
 
__shadd8


	)

66 
	#__UADD8
 
__uadd8


	)

67 
	#__UQADD8
 
__uqadd8


	)

68 
	#__UHADD8
 
__uhadd8


	)

69 
	#__SSUB8
 
__ssub8


	)

70 
	#__QSUB8
 
__qsub8


	)

71 
	#__SHSUB8
 
__shsub8


	)

72 
	#__USUB8
 
__usub8


	)

73 
	#__UQSUB8
 
__uqsub8


	)

74 
	#__UHSUB8
 
__uhsub8


	)

75 
	#__SADD16
 
__ßdd16


	)

76 
	#__QADD16
 
__qadd16


	)

77 
	#__SHADD16
 
__shadd16


	)

78 
	#__UADD16
 
__uadd16


	)

79 
	#__UQADD16
 
__uqadd16


	)

80 
	#__UHADD16
 
__uhadd16


	)

81 
	#__SSUB16
 
__ssub16


	)

82 
	#__QSUB16
 
__qsub16


	)

83 
	#__SHSUB16
 
__shsub16


	)

84 
	#__USUB16
 
__usub16


	)

85 
	#__UQSUB16
 
__uqsub16


	)

86 
	#__UHSUB16
 
__uhsub16


	)

87 
	#__SASX
 
__ßsx


	)

88 
	#__QASX
 
__qasx


	)

89 
	#__SHASX
 
__shasx


	)

90 
	#__UASX
 
__uasx


	)

91 
	#__UQASX
 
__uqasx


	)

92 
	#__UHASX
 
__uhasx


	)

93 
	#__SSAX
 
__sßx


	)

94 
	#__QSAX
 
__qßx


	)

95 
	#__SHSAX
 
__shßx


	)

96 
	#__USAX
 
__ußx


	)

97 
	#__UQSAX
 
__uqßx


	)

98 
	#__UHSAX
 
__uhßx


	)

99 
	#__USAD8
 
__ußd8


	)

100 
	#__USADA8
 
__ußda8


	)

101 
	#__SSAT16
 
__sßt16


	)

102 
	#__USAT16
 
__ußt16


	)

103 
	#__UXTB16
 
__uxtb16


	)

104 
	#__UXTAB16
 
__uxèb16


	)

105 
	#__SXTB16
 
__sxtb16


	)

106 
	#__SXTAB16
 
__sxèb16


	)

107 
	#__SMUAD
 
__smuad


	)

108 
	#__SMUADX
 
__smuadx


	)

109 
	#__SMLAD
 
__smœd


	)

110 
	#__SMLADX
 
__smœdx


	)

111 
	#__SMLALD
 
__smœld


	)

112 
	#__SMLALDX
 
__smœldx


	)

113 
	#__SMUSD
 
__smusd


	)

114 
	#__SMUSDX
 
__smusdx


	)

115 
	#__SMLSD
 
__smlsd


	)

116 
	#__SMLSDX
 
__smlsdx


	)

117 
	#__SMLSLD
 
__sml¶d


	)

118 
	#__SMLSLDX
 
__sml¶dx


	)

119 
	#__SEL
 
__£l


	)

120 
	#__QADD
 
__qadd


	)

121 
	#__QSUB
 
__qsub


	)

123 
	#__PKHBT
(
ARG1
,
ARG2
,
ARG3
Ë–((((
uöt32_t
)(ARG1)) ) & 0x0000FFFFUL) | \

124 ((((
uöt32_t
)(
ARG2
)Ë<< (
ARG3
)Ë& 0xFFFF0000ULË)

	)

126 
	#__PKHTB
(
ARG1
,
ARG2
,
ARG3
Ë–((((
uöt32_t
)(ARG1)) ) & 0xFFFF0000UL) | \

127 ((((
uöt32_t
)(
ARG2
)Ë>> (
ARG3
)Ë& 0x0000FFFFULË)

	)

129 
	#__SMMLA
(
ARG1
,
ARG2
,
ARG3
Ë–(
öt32_t
)((((
öt64_t
)(ARG1) * (ARG2)) + \

130 ((
öt64_t
)(
ARG3
Ë<< 32ËË>> 32))

	)

133 #ñi‡
deföed
 ( 
__GNUC__
 )

135 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SADD8
(
uöt32_t
 
›1
, uöt32_à
›2
)

137 
uöt32_t
 
ªsu…
;

139 
__ASM
 vﬁ©ûê("ßdd8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

140 (
ªsu…
);

141 
	}
}

143 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__QADD8
(
uöt32_t
 
›1
, uöt32_à
›2
)

145 
uöt32_t
 
ªsu…
;

147 
__ASM
 vﬁ©ûê("qadd8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

148 (
ªsu…
);

149 
	}
}

151 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SHADD8
(
uöt32_t
 
›1
, uöt32_à
›2
)

153 
uöt32_t
 
ªsu…
;

155 
__ASM
 vﬁ©ûê("shadd8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

156 (
ªsu…
);

157 
	}
}

159 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UADD8
(
uöt32_t
 
›1
, uöt32_à
›2
)

161 
uöt32_t
 
ªsu…
;

163 
__ASM
 vﬁ©ûê("uadd8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

164 (
ªsu…
);

165 
	}
}

167 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UQADD8
(
uöt32_t
 
›1
, uöt32_à
›2
)

169 
uöt32_t
 
ªsu…
;

171 
__ASM
 vﬁ©ûê("uqadd8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

172 (
ªsu…
);

173 
	}
}

175 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UHADD8
(
uöt32_t
 
›1
, uöt32_à
›2
)

177 
uöt32_t
 
ªsu…
;

179 
__ASM
 vﬁ©ûê("uhadd8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

180 (
ªsu…
);

181 
	}
}

184 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SSUB8
(
uöt32_t
 
›1
, uöt32_à
›2
)

186 
uöt32_t
 
ªsu…
;

188 
__ASM
 vﬁ©ûê("ssub8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

189 (
ªsu…
);

190 
	}
}

192 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__QSUB8
(
uöt32_t
 
›1
, uöt32_à
›2
)

194 
uöt32_t
 
ªsu…
;

196 
__ASM
 vﬁ©ûê("qsub8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

197 (
ªsu…
);

198 
	}
}

200 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SHSUB8
(
uöt32_t
 
›1
, uöt32_à
›2
)

202 
uöt32_t
 
ªsu…
;

204 
__ASM
 vﬁ©ûê("shsub8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

205 (
ªsu…
);

206 
	}
}

208 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__USUB8
(
uöt32_t
 
›1
, uöt32_à
›2
)

210 
uöt32_t
 
ªsu…
;

212 
__ASM
 vﬁ©ûê("usub8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

213 (
ªsu…
);

214 
	}
}

216 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UQSUB8
(
uöt32_t
 
›1
, uöt32_à
›2
)

218 
uöt32_t
 
ªsu…
;

220 
__ASM
 vﬁ©ûê("uqsub8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

221 (
ªsu…
);

222 
	}
}

224 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UHSUB8
(
uöt32_t
 
›1
, uöt32_à
›2
)

226 
uöt32_t
 
ªsu…
;

228 
__ASM
 vﬁ©ûê("uhsub8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

229 (
ªsu…
);

230 
	}
}

233 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SADD16
(
uöt32_t
 
›1
, uöt32_à
›2
)

235 
uöt32_t
 
ªsu…
;

237 
__ASM
 vﬁ©ûê("ßdd16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

238 (
ªsu…
);

239 
	}
}

241 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__QADD16
(
uöt32_t
 
›1
, uöt32_à
›2
)

243 
uöt32_t
 
ªsu…
;

245 
__ASM
 vﬁ©ûê("qadd16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

246 (
ªsu…
);

247 
	}
}

249 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SHADD16
(
uöt32_t
 
›1
, uöt32_à
›2
)

251 
uöt32_t
 
ªsu…
;

253 
__ASM
 vﬁ©ûê("shadd16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

254 (
ªsu…
);

255 
	}
}

257 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UADD16
(
uöt32_t
 
›1
, uöt32_à
›2
)

259 
uöt32_t
 
ªsu…
;

261 
__ASM
 vﬁ©ûê("uadd16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

262 (
ªsu…
);

263 
	}
}

265 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UQADD16
(
uöt32_t
 
›1
, uöt32_à
›2
)

267 
uöt32_t
 
ªsu…
;

269 
__ASM
 vﬁ©ûê("uqadd16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

270 (
ªsu…
);

271 
	}
}

273 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UHADD16
(
uöt32_t
 
›1
, uöt32_à
›2
)

275 
uöt32_t
 
ªsu…
;

277 
__ASM
 vﬁ©ûê("uhadd16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

278 (
ªsu…
);

279 
	}
}

281 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SSUB16
(
uöt32_t
 
›1
, uöt32_à
›2
)

283 
uöt32_t
 
ªsu…
;

285 
__ASM
 vﬁ©ûê("ssub16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

286 (
ªsu…
);

287 
	}
}

289 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__QSUB16
(
uöt32_t
 
›1
, uöt32_à
›2
)

291 
uöt32_t
 
ªsu…
;

293 
__ASM
 vﬁ©ûê("qsub16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

294 (
ªsu…
);

295 
	}
}

297 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SHSUB16
(
uöt32_t
 
›1
, uöt32_à
›2
)

299 
uöt32_t
 
ªsu…
;

301 
__ASM
 vﬁ©ûê("shsub16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

302 (
ªsu…
);

303 
	}
}

305 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__USUB16
(
uöt32_t
 
›1
, uöt32_à
›2
)

307 
uöt32_t
 
ªsu…
;

309 
__ASM
 vﬁ©ûê("usub16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

310 (
ªsu…
);

311 
	}
}

313 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UQSUB16
(
uöt32_t
 
›1
, uöt32_à
›2
)

315 
uöt32_t
 
ªsu…
;

317 
__ASM
 vﬁ©ûê("uqsub16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

318 (
ªsu…
);

319 
	}
}

321 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UHSUB16
(
uöt32_t
 
›1
, uöt32_à
›2
)

323 
uöt32_t
 
ªsu…
;

325 
__ASM
 vﬁ©ûê("uhsub16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

326 (
ªsu…
);

327 
	}
}

329 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SASX
(
uöt32_t
 
›1
, uöt32_à
›2
)

331 
uöt32_t
 
ªsu…
;

333 
__ASM
 vﬁ©ûê("ßsx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

334 (
ªsu…
);

335 
	}
}

337 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__QASX
(
uöt32_t
 
›1
, uöt32_à
›2
)

339 
uöt32_t
 
ªsu…
;

341 
__ASM
 vﬁ©ûê("qasx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

342 (
ªsu…
);

343 
	}
}

345 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SHASX
(
uöt32_t
 
›1
, uöt32_à
›2
)

347 
uöt32_t
 
ªsu…
;

349 
__ASM
 vﬁ©ûê("shasx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

350 (
ªsu…
);

351 
	}
}

353 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UASX
(
uöt32_t
 
›1
, uöt32_à
›2
)

355 
uöt32_t
 
ªsu…
;

357 
__ASM
 vﬁ©ûê("uasx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

358 (
ªsu…
);

359 
	}
}

361 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UQASX
(
uöt32_t
 
›1
, uöt32_à
›2
)

363 
uöt32_t
 
ªsu…
;

365 
__ASM
 vﬁ©ûê("uqasx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

366 (
ªsu…
);

367 
	}
}

369 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UHASX
(
uöt32_t
 
›1
, uöt32_à
›2
)

371 
uöt32_t
 
ªsu…
;

373 
__ASM
 vﬁ©ûê("uhasx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

374 (
ªsu…
);

375 
	}
}

377 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SSAX
(
uöt32_t
 
›1
, uöt32_à
›2
)

379 
uöt32_t
 
ªsu…
;

381 
__ASM
 vﬁ©ûê("sßx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

382 (
ªsu…
);

383 
	}
}

385 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__QSAX
(
uöt32_t
 
›1
, uöt32_à
›2
)

387 
uöt32_t
 
ªsu…
;

389 
__ASM
 vﬁ©ûê("qßx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

390 (
ªsu…
);

391 
	}
}

393 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SHSAX
(
uöt32_t
 
›1
, uöt32_à
›2
)

395 
uöt32_t
 
ªsu…
;

397 
__ASM
 vﬁ©ûê("shßx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

398 (
ªsu…
);

399 
	}
}

401 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__USAX
(
uöt32_t
 
›1
, uöt32_à
›2
)

403 
uöt32_t
 
ªsu…
;

405 
__ASM
 vﬁ©ûê("ußx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

406 (
ªsu…
);

407 
	}
}

409 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UQSAX
(
uöt32_t
 
›1
, uöt32_à
›2
)

411 
uöt32_t
 
ªsu…
;

413 
__ASM
 vﬁ©ûê("uqßx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

414 (
ªsu…
);

415 
	}
}

417 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UHSAX
(
uöt32_t
 
›1
, uöt32_à
›2
)

419 
uöt32_t
 
ªsu…
;

421 
__ASM
 vﬁ©ûê("uhßx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

422 (
ªsu…
);

423 
	}
}

425 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__USAD8
(
uöt32_t
 
›1
, uöt32_à
›2
)

427 
uöt32_t
 
ªsu…
;

429 
__ASM
 vﬁ©ûê("ußd8 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

430 (
ªsu…
);

431 
	}
}

433 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__USADA8
(
uöt32_t
 
›1
, uöt32_à
›2
, uöt32_à
›3
)

435 
uöt32_t
 
ªsu…
;

437 
__ASM
 vﬁ©ûê("ußda8 %0, %1, %2, %3" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
), "r" (
›3
) );

438 (
ªsu…
);

439 
	}
}

441 
	#__SSAT16
(
ARG1
,
ARG2
) \

443 
uöt32_t
 
__RES
, 
__ARG1
 = (
ARG1
); \

444 
	`__ASM
 ("sßt16 %0, %1, %2" : "Ù" (
__RES
Ë: "I" (
ARG2
), "r" (
__ARG1
) ); \

445 
__RES
; \

446 })

	)

448 
	#__USAT16
(
ARG1
,
ARG2
) \

450 
uöt32_t
 
__RES
, 
__ARG1
 = (
ARG1
); \

451 
	`__ASM
 ("ußt16 %0, %1, %2" : "Ù" (
__RES
Ë: "I" (
ARG2
), "r" (
__ARG1
) ); \

452 
__RES
; \

453 })

	)

455 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UXTB16
(
uöt32_t
 
›1
)

457 
uöt32_t
 
ªsu…
;

459 
__ASM
 vﬁ©ûê("uxtb16 %0, %1" : "Ù" (
ªsu…
Ë: "r" (
›1
));

460 (
ªsu…
);

461 
	}
}

463 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__UXTAB16
(
uöt32_t
 
›1
, uöt32_à
›2
)

465 
uöt32_t
 
ªsu…
;

467 
__ASM
 vﬁ©ûê("uxèb16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

468 (
ªsu…
);

469 
	}
}

471 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SXTB16
(
uöt32_t
 
›1
)

473 
uöt32_t
 
ªsu…
;

475 
__ASM
 vﬁ©ûê("sxtb16 %0, %1" : "Ù" (
ªsu…
Ë: "r" (
›1
));

476 (
ªsu…
);

477 
	}
}

479 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SXTAB16
(
uöt32_t
 
›1
, uöt32_à
›2
)

481 
uöt32_t
 
ªsu…
;

483 
__ASM
 vﬁ©ûê("sxèb16 %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

484 (
ªsu…
);

485 
	}
}

487 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SMUAD
 (
uöt32_t
 
›1
, uöt32_à
›2
)

489 
uöt32_t
 
ªsu…
;

491 
__ASM
 vﬁ©ûê("smuad %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

492 (
ªsu…
);

493 
	}
}

495 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SMUADX
 (
uöt32_t
 
›1
, uöt32_à
›2
)

497 
uöt32_t
 
ªsu…
;

499 
__ASM
 vﬁ©ûê("smuadx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

500 (
ªsu…
);

501 
	}
}

503 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SMLAD
 (
uöt32_t
 
›1
, uöt32_à
›2
, uöt32_à
›3
)

505 
uöt32_t
 
ªsu…
;

507 
__ASM
 vﬁ©ûê("smœd %0, %1, %2, %3" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
), "r" (
›3
) );

508 (
ªsu…
);

509 
	}
}

511 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SMLADX
 (
uöt32_t
 
›1
, uöt32_à
›2
, uöt32_à
›3
)

513 
uöt32_t
 
ªsu…
;

515 
__ASM
 vﬁ©ûê("smœdx %0, %1, %2, %3" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
), "r" (
›3
) );

516 (
ªsu…
);

517 
	}
}

519 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt64_t
 
	$__SMLALD
 (
uöt32_t
 
›1
, uöt32_à
›2
, 
uöt64_t
 
acc
)

521 
	uŒªg_u
{

522 
uöt32_t
 
w32
[2];

523 
uöt64_t
 
w64
;

524 } 
Œr
;

525 
Œr
.
w64
 = 
acc
;

527 #i‚de‡
__ARMEB__


528 
__ASM
 vﬁ©ûê("smœld %0, %1, %2, %3" : "Ù" (
Œr
.
w32
[0]), "Ù" (Œr.w32[1]): "r" (
›1
), "r" (
›2
) , "0" (llr.w32[0]), "1" (llr.w32[1]) );

530 
__ASM
 vﬁ©ûê("smœld %0, %1, %2, %3" : "Ù" (
Œr
.
w32
[1]), "Ù" (Œr.w32[0]): "r" (
›1
), "r" (
›2
) , "0" (llr.w32[1]), "1" (llr.w32[0]) );

533 (
Œr
.
w64
);

534 
	}
}

536 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt64_t
 
	$__SMLALDX
 (
uöt32_t
 
›1
, uöt32_à
›2
, 
uöt64_t
 
acc
)

538 
	uŒªg_u
{

539 
uöt32_t
 
w32
[2];

540 
uöt64_t
 
w64
;

541 } 
Œr
;

542 
Œr
.
w64
 = 
acc
;

544 #i‚de‡
__ARMEB__


545 
__ASM
 vﬁ©ûê("smœldx %0, %1, %2, %3" : "Ù" (
Œr
.
w32
[0]), "Ù" (Œr.w32[1]): "r" (
›1
), "r" (
›2
) , "0" (llr.w32[0]), "1" (llr.w32[1]) );

547 
__ASM
 vﬁ©ûê("smœldx %0, %1, %2, %3" : "Ù" (
Œr
.
w32
[1]), "Ù" (Œr.w32[0]): "r" (
›1
), "r" (
›2
) , "0" (llr.w32[1]), "1" (llr.w32[0]) );

550 (
Œr
.
w64
);

551 
	}
}

553 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SMUSD
 (
uöt32_t
 
›1
, uöt32_à
›2
)

555 
uöt32_t
 
ªsu…
;

557 
__ASM
 vﬁ©ûê("smusd %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

558 (
ªsu…
);

559 
	}
}

561 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SMUSDX
 (
uöt32_t
 
›1
, uöt32_à
›2
)

563 
uöt32_t
 
ªsu…
;

565 
__ASM
 vﬁ©ûê("smusdx %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

566 (
ªsu…
);

567 
	}
}

569 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SMLSD
 (
uöt32_t
 
›1
, uöt32_à
›2
, uöt32_à
›3
)

571 
uöt32_t
 
ªsu…
;

573 
__ASM
 vﬁ©ûê("smlsd %0, %1, %2, %3" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
), "r" (
›3
) );

574 (
ªsu…
);

575 
	}
}

577 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SMLSDX
 (
uöt32_t
 
›1
, uöt32_à
›2
, uöt32_à
›3
)

579 
uöt32_t
 
ªsu…
;

581 
__ASM
 vﬁ©ûê("smlsdx %0, %1, %2, %3" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
), "r" (
›3
) );

582 (
ªsu…
);

583 
	}
}

585 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt64_t
 
	$__SMLSLD
 (
uöt32_t
 
›1
, uöt32_à
›2
, 
uöt64_t
 
acc
)

587 
	uŒªg_u
{

588 
uöt32_t
 
w32
[2];

589 
uöt64_t
 
w64
;

590 } 
Œr
;

591 
Œr
.
w64
 = 
acc
;

593 #i‚de‡
__ARMEB__


594 
__ASM
 vﬁ©ûê("sml¶d %0, %1, %2, %3" : "Ù" (
Œr
.
w32
[0]), "Ù" (Œr.w32[1]): "r" (
›1
), "r" (
›2
) , "0" (llr.w32[0]), "1" (llr.w32[1]) );

596 
__ASM
 vﬁ©ûê("sml¶d %0, %1, %2, %3" : "Ù" (
Œr
.
w32
[1]), "Ù" (Œr.w32[0]): "r" (
›1
), "r" (
›2
) , "0" (llr.w32[1]), "1" (llr.w32[0]) );

599 (
Œr
.
w64
);

600 
	}
}

602 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt64_t
 
	$__SMLSLDX
 (
uöt32_t
 
›1
, uöt32_à
›2
, 
uöt64_t
 
acc
)

604 
	uŒªg_u
{

605 
uöt32_t
 
w32
[2];

606 
uöt64_t
 
w64
;

607 } 
Œr
;

608 
Œr
.
w64
 = 
acc
;

610 #i‚de‡
__ARMEB__


611 
__ASM
 vﬁ©ûê("sml¶dx %0, %1, %2, %3" : "Ù" (
Œr
.
w32
[0]), "Ù" (Œr.w32[1]): "r" (
›1
), "r" (
›2
) , "0" (llr.w32[0]), "1" (llr.w32[1]) );

613 
__ASM
 vﬁ©ûê("sml¶dx %0, %1, %2, %3" : "Ù" (
Œr
.
w32
[1]), "Ù" (Œr.w32[0]): "r" (
›1
), "r" (
›2
) , "0" (llr.w32[1]), "1" (llr.w32[0]) );

616 (
Œr
.
w64
);

617 
	}
}

619 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SEL
 (
uöt32_t
 
›1
, uöt32_à
›2
)

621 
uöt32_t
 
ªsu…
;

623 
__ASM
 vﬁ©ûê("£»%0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

624 (
ªsu…
);

625 
	}
}

627 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__QADD
(
uöt32_t
 
›1
, uöt32_à
›2
)

629 
uöt32_t
 
ªsu…
;

631 
__ASM
 vﬁ©ûê("qadd %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

632 (
ªsu…
);

633 
	}
}

635 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__QSUB
(
uöt32_t
 
›1
, uöt32_à
›2
)

637 
uöt32_t
 
ªsu…
;

639 
__ASM
 vﬁ©ûê("qsub %0, %1, %2" : "Ù" (
ªsu…
Ë: "r" (
›1
), "r" (
›2
) );

640 (
ªsu…
);

641 
	}
}

643 
	#__PKHBT
(
ARG1
,
ARG2
,
ARG3
) \

645 
uöt32_t
 
__RES
, 
__ARG1
 = (
ARG1
), 
__ARG2
 = (
ARG2
); \

646 
	`__ASM
 ("pkhbà%0, %1, %2,Ü¶ %3" : "Ù" (
__RES
Ë: "r" (
__ARG1
), "r" (
__ARG2
), "I" (
ARG3
) ); \

647 
__RES
; \

648 })

	)

650 
	#__PKHTB
(
ARG1
,
ARG2
,
ARG3
) \

652 
uöt32_t
 
__RES
, 
__ARG1
 = (
ARG1
), 
__ARG2
 = (
ARG2
); \

653 i‡(
ARG3
 == 0) \

654 
	`__ASM
 ("pkhtb %0, %1, %2" : "Ù" (
__RES
Ë: "r" (
__ARG1
), "r" (
__ARG2
) ); \

656 
	`__ASM
 ("pkhtb %0, %1, %2,á§ %3" : "Ù" (
__RES
Ë: "r" (
__ARG1
), "r" (
__ARG2
), "I" (
ARG3
) ); \

657 
__RES
; \

658 })

	)

660 
__©åibuã__
––
Æways_ölöe
 ) ) 
__STATIC_INLINE
 
uöt32_t
 
	$__SMMLA
 (
öt32_t
 
›1
, i¡32_à
›2
, i¡32_à
›3
)

662 
öt32_t
 
ªsu…
;

664 
__ASM
 vﬁ©ûê("smmœ %0, %1, %2, %3" : "Ù" (
ªsu…
): "r" (
›1
), "r" (
›2
), "r" (
›3
) );

665 (
ªsu…
);

666 
	}
}

669 #ñi‡
deföed
 ( 
__ICCARM__
 )

671 
	~<cmsis_ür.h
>

674 #ñi‡
deföed
 ( 
__TMS470__
 )

676 
	~<cmsis_ccs.h
>

679 #ñi‡
deföed
 ( 
__TASKING__
 )

684 #ñi‡
deföed
 ( 
__CSMC__
 )

686 
	~<cmsis_csm.h
>

693 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\PeripheralNames.h

16 #i‚de‡
MBED_PERIPHERALNAMES_H


17 
	#MBED_PERIPHERALNAMES_H


	)

19 
	~"cmsis.h
"

21 #ifde‡
__˝lu•lus


27 
UART_0
 = ()
LPC_USART0_BASE
,

28 
UART_1
 = ()
LPC_USART1_BASE
,

29 
UART_2
 = ()
LPC_USART2_BASE
,

30 
UART_3
 = ()
LPC_USART3_BASE
,

31 
UART_4
 = ()
LPC_USART4_BASE
,

32 } 
	tUARTName
;

35 
ADC_0
 = 0,

36 
ADC_1
,

37 
ADC_2
,

38 
ADC_3
,

39 
ADC_4
,

40 
ADC_5
,

41 
ADC_6
,

42 
ADC_7
,

43 
ADC_8
,

44 
ADC_9
,

45 
ADC_10
,

46 
ADC_11
,

47 } 
	tADCName
;

50 
SPI_0
 = ()
LPC_SSP0_BASE
,

51 
SPI_1
 = ()
LPC_SSP1_BASE


52 } 
	tSPIName
;

55 
I2C_0
 = ()
LPC_I2C0_BASE
,

56 
I2C_1
 = ()
LPC_I2C1_BASE


57 } 
	tI2CName
;

60 
SCT0_0
 = 0,

61 
SCT0_1
,

62 
SCT0_2
,

63 
SCT0_3
,

64 
SCT1_0
,

65 
SCT1_1
,

66 
SCT1_2
,

67 
SCT1_3
,

68 } 
	tPWMName
;

70 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\PinNames.h

16 #i‚de‡
MBED_PINNAMES_H


17 
	#MBED_PINNAMES_H


	)

19 
	~"cmsis.h
"

21 #ifde‡
__˝lu•lus


26 
PIN_INPUT
,

27 
PIN_OUTPUT


28 } 
	tPöDúe˘i⁄
;

30 
	#PORT_SHIFT
 16

	)

31 
	#PIN_SHIFT
 9

	)

36 
P0_0
 = (0 << 
PORT_SHIFT
Ë| (0 << 
PIN_SHIFT
) | 0x000,

37 
P0_1
 = (0 << 
PORT_SHIFT
Ë| (1 << 
PIN_SHIFT
) | 0x004,

38 
P0_2
 = (0 << 
PORT_SHIFT
Ë| (2 << 
PIN_SHIFT
) | 0x008,

39 
P0_3
 = (0 << 
PORT_SHIFT
Ë| (3 << 
PIN_SHIFT
) | 0x00C,

40 
P0_4
 = (0 << 
PORT_SHIFT
Ë| (4 << 
PIN_SHIFT
) | 0x010,

41 
P0_5
 = (0 << 
PORT_SHIFT
Ë| (5 << 
PIN_SHIFT
) | 0x014,

42 
P0_6
 = (0 << 
PORT_SHIFT
Ë| (6 << 
PIN_SHIFT
) | 0x018,

43 
P0_7
 = (0 << 
PORT_SHIFT
Ë| (7 << 
PIN_SHIFT
) | 0x01C,

44 
P0_8
 = (0 << 
PORT_SHIFT
Ë| (8 << 
PIN_SHIFT
) | 0x020,

45 
P0_9
 = (0 << 
PORT_SHIFT
Ë| (9 << 
PIN_SHIFT
) | 0x024,

46 
P0_10
(0 << 
PORT_SHIFT
Ë| (10<< 
PIN_SHIFT
) | 0x028,

47 
P0_11
(0 << 
PORT_SHIFT
Ë| (11<< 
PIN_SHIFT
) | 0x02C,

48 
P0_12
(0 << 
PORT_SHIFT
Ë| (12<< 
PIN_SHIFT
) | 0x030,

49 
P0_13
(0 << 
PORT_SHIFT
Ë| (13<< 
PIN_SHIFT
) | 0x034,

50 
P0_14
(0 << 
PORT_SHIFT
Ë| (14<< 
PIN_SHIFT
) | 0x038,

51 
P0_15
(0 << 
PORT_SHIFT
Ë| (15<< 
PIN_SHIFT
) | 0x03C,

52 
P0_16
(0 << 
PORT_SHIFT
Ë| (16<< 
PIN_SHIFT
) | 0x040,

53 
P0_17
(0 << 
PORT_SHIFT
Ë| (17<< 
PIN_SHIFT
) | 0x044,

54 
P0_18
(0 << 
PORT_SHIFT
Ë| (18<< 
PIN_SHIFT
) | 0x048,

55 
P0_19
(0 << 
PORT_SHIFT
Ë| (19<< 
PIN_SHIFT
) | 0x04C,

56 
P0_20
(0 << 
PORT_SHIFT
Ë| (20<< 
PIN_SHIFT
) | 0x050,

57 
P0_21
(0 << 
PORT_SHIFT
Ë| (21<< 
PIN_SHIFT
) | 0x054,

58 
P0_22
(0 << 
PORT_SHIFT
Ë| (22<< 
PIN_SHIFT
) | 0x058,

59 
P0_23
(0 << 
PORT_SHIFT
Ë| (23<< 
PIN_SHIFT
) | 0x05C,

61 
P1_0
 = (1 << 
PORT_SHIFT
Ë| (0 << 
PIN_SHIFT
) | 0x060,

62 
P1_1
 = (1 << 
PORT_SHIFT
Ë| (1 << 
PIN_SHIFT
) | 0x064,

63 
P1_2
 = (1 << 
PORT_SHIFT
Ë| (2 << 
PIN_SHIFT
) | 0x068,

64 
P1_3
 = (1 << 
PORT_SHIFT
Ë| (3 << 
PIN_SHIFT
) | 0x06C,

65 
P1_4
 = (1 << 
PORT_SHIFT
Ë| (4 << 
PIN_SHIFT
) | 0x070,

66 
P1_5
 = (1 << 
PORT_SHIFT
Ë| (5 << 
PIN_SHIFT
) | 0x074,

67 
P1_6
 = (1 << 
PORT_SHIFT
Ë| (6 << 
PIN_SHIFT
) | 0x078,

68 
P1_7
 = (1 << 
PORT_SHIFT
Ë| (7 << 
PIN_SHIFT
) | 0x07C,

69 
P1_8
 = (1 << 
PORT_SHIFT
Ë| (8 << 
PIN_SHIFT
) | 0x080,

70 
P1_9
 = (1 << 
PORT_SHIFT
Ë| (9 << 
PIN_SHIFT
) | 0x084,

71 
P1_10
(1 << 
PORT_SHIFT
Ë| (10<< 
PIN_SHIFT
) | 0x088,

72 
P1_11
(1 << 
PORT_SHIFT
Ë| (11<< 
PIN_SHIFT
) | 0x08C,

73 
P1_12
(1 << 
PORT_SHIFT
Ë| (12<< 
PIN_SHIFT
) | 0x090,

74 
P1_13
(1 << 
PORT_SHIFT
Ë| (13<< 
PIN_SHIFT
) | 0x094,

75 
P1_14
(1 << 
PORT_SHIFT
Ë| (14<< 
PIN_SHIFT
) | 0x098,

76 
P1_15
(1 << 
PORT_SHIFT
Ë| (15<< 
PIN_SHIFT
) | 0x09C,

77 
P1_16
(1 << 
PORT_SHIFT
Ë| (16<< 
PIN_SHIFT
) | 0x0A0,

78 
P1_17
(1 << 
PORT_SHIFT
Ë| (17<< 
PIN_SHIFT
) | 0x0A4,

79 
P1_18
(1 << 
PORT_SHIFT
Ë| (18<< 
PIN_SHIFT
) | 0x0A8,

80 
P1_19
(1 << 
PORT_SHIFT
Ë| (19<< 
PIN_SHIFT
) | 0x0AC,

81 
P1_20
(1 << 
PORT_SHIFT
Ë| (20<< 
PIN_SHIFT
) | 0x0B0,

82 
P1_21
(1 << 
PORT_SHIFT
Ë| (21<< 
PIN_SHIFT
) | 0x0B4,

83 
P1_22
(1 << 
PORT_SHIFT
Ë| (22<< 
PIN_SHIFT
) | 0x0B8,

84 
P1_23
(1 << 
PORT_SHIFT
Ë| (23<< 
PIN_SHIFT
) | 0x0BC,

85 
P1_24
(1 << 
PORT_SHIFT
Ë| (24<< 
PIN_SHIFT
) | 0x0C0,

86 
P1_25
(1 << 
PORT_SHIFT
Ë| (25<< 
PIN_SHIFT
) | 0x0C4,

87 
P1_26
(1 << 
PORT_SHIFT
Ë| (26<< 
PIN_SHIFT
) | 0x0C8,

88 
P1_27
(1 << 
PORT_SHIFT
Ë| (27<< 
PIN_SHIFT
) | 0x0CC,

89 
P1_28
(1 << 
PORT_SHIFT
Ë| (28<< 
PIN_SHIFT
) | 0x0D0,

90 
P1_29
(1 << 
PORT_SHIFT
Ë| (29<< 
PIN_SHIFT
) | 0x0D4,

91 
P1_30
(1 << 
PORT_SHIFT
Ë| (30<< 
PIN_SHIFT
) | 0x0D8,

92 
P1_31
(1 << 
PORT_SHIFT
Ë| (31<< 
PIN_SHIFT
) | 0x0DC,

94 
P2_0
 = (2 << 
PORT_SHIFT
Ë| (0 << 
PIN_SHIFT
) | 0x0F0,

95 
P2_1
 = (2 << 
PORT_SHIFT
Ë| (1 << 
PIN_SHIFT
) | 0x0F4,

96 
P2_2
 = (2 << 
PORT_SHIFT
Ë| (2 << 
PIN_SHIFT
) | 0x0FC,

97 
P2_3
 = (2 << 
PORT_SHIFT
Ë| (3 << 
PIN_SHIFT
) | 0x100,

98 
P2_4
 = (2 << 
PORT_SHIFT
Ë| (4 << 
PIN_SHIFT
) | 0x104,

99 
P2_5
 = (2 << 
PORT_SHIFT
Ë| (5 << 
PIN_SHIFT
) | 0x108,

100 
P2_6
 = (2 << 
PORT_SHIFT
Ë| (6 << 
PIN_SHIFT
) | 0x10C,

101 
P2_7
 = (2 << 
PORT_SHIFT
Ë| (7 << 
PIN_SHIFT
) | 0x110,

102 
P2_8
 = (2 << 
PORT_SHIFT
Ë| (8 << 
PIN_SHIFT
) | 0x114,

103 
P2_9
 = (2 << 
PORT_SHIFT
Ë| (9 << 
PIN_SHIFT
) | 0x118,

104 
P2_10
(2 << 
PORT_SHIFT
Ë| (10<< 
PIN_SHIFT
) | 0x11C,

105 
P2_11
(2 << 
PORT_SHIFT
Ë| (11<< 
PIN_SHIFT
) | 0x120,

106 
P2_12
(2 << 
PORT_SHIFT
Ë| (12<< 
PIN_SHIFT
) | 0x124,

107 
P2_13
(2 << 
PORT_SHIFT
Ë| (13<< 
PIN_SHIFT
) | 0x128,

108 
P2_14
(2 << 
PORT_SHIFT
Ë| (14<< 
PIN_SHIFT
) | 0x12C,

109 
P2_15
(2 << 
PORT_SHIFT
Ë| (15<< 
PIN_SHIFT
) | 0x130,

110 
P2_16
(2 << 
PORT_SHIFT
Ë| (16<< 
PIN_SHIFT
) | 0x134,

111 
P2_17
(2 << 
PORT_SHIFT
Ë| (17<< 
PIN_SHIFT
) | 0x138,

112 
P2_18
(2 << 
PORT_SHIFT
Ë| (18<< 
PIN_SHIFT
) | 0x13C,

113 
P2_19
(2 << 
PORT_SHIFT
Ë| (19<< 
PIN_SHIFT
) | 0x140,

114 
P2_20
(2 << 
PORT_SHIFT
Ë| (20<< 
PIN_SHIFT
) | 0x144,

115 
P2_21
(2 << 
PORT_SHIFT
Ë| (21<< 
PIN_SHIFT
) | 0x148,

116 
P2_22
(2 << 
PORT_SHIFT
Ë| (22<< 
PIN_SHIFT
) | 0x14C,

117 
P2_23
(2 << 
PORT_SHIFT
Ë| (23<< 
PIN_SHIFT
) | 0x150,

119 
LED_RED
 = 
P2_17
,

120 
LED_GREEN
 = 
P2_16
,

121 
LED_BLUE
 = 
P2_18
,

124 
LED1
 = 
LED_RED
,

125 
LED2
 = 
LED_GREEN
,

126 
LED3
 = 
LED_BLUE
,

127 
LED4
 = 
LED_BLUE
,

130 
USBTX
 = 
P0_19
,

131 
USBRX
 = 
P0_18
,

134 
D0
 = 
P0_18
,

135 
D1
 = 
P0_19
,

136 
D2
 = 
P1_18
,

137 
D3
 = 
P1_24
,

138 
D4
 = 
P1_19
,

139 
D5
 = 
P1_26
,

140 
D6
 = 
P1_27
,

141 
D7
 = 
P1_25
,

142 
D8
 = 
P1_28
,

143 
D9
 = 
P2_3
,

144 
D10

P0_2
,

145 
D11

P0_9
,

146 
D12

P0_8
,

147 
D13

P1_29
,

148 
D14

P0_5
,

149 
D15

P0_4
,

151 
A0
 = 
P1_9
,

152 
A1
 = 
P0_14
,

153 
A2
 = 
P0_13
,

154 
A3
 = 
P0_12
,

155 
A4
 = 
P0_5
,

156 
A5
 = 
P0_4
,

157 
SDA

P0_5
,

158 
SCL

P0_4
,

161 
NC
 = ()0xFFFFFFFF,

162 } 
	tPöName
;

165 
PuŒUp
 = 2,

166 
PuŒDown
 = 1,

167 
PuŒN⁄e
 = 0,

168 
Rïóãr
 = 3,

169 
O≥nDøö
 = 4,

170 
PuŒDeÁu…
 = 
PuŒDown


171 } 
	tPöMode
;

173 
	#STDIO_UART_TX
 
USBTX


	)

174 
	#STDIO_UART_RX
 
USBRX


	)

175 
	#STDIO_UART
 
UART_0


	)

177 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\PortNames.h

16 #i‚de‡
MBED_PORTNAMES_H


17 
	#MBED_PORTNAMES_H


	)

19 #ifde‡
__˝lu•lus


24 
P‹t0
 = 0,

25 
P‹t1
 = 1,

26 
P‹t2
 = 2

27 } 
	tP‹tName
;

29 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\analogin_api.c

16 
	~"mbed_as£π.h
"

17 
	~"™Æogö_≠i.h
"

18 
	~"cmsis.h
"

19 
	~"pöm≠.h
"

20 
	~"mbed_îr‹.h
"

22 #i‡
DEVICE_ANALOGIN


24 
	#ANALOGIN_MEDIAN_FILTER
 1

	)

26 
	#ADC_10BIT_RANGE
 0x3FF

	)

27 
	#ADC_12BIT_RANGE
 0xFFF

	)

28 
	#PDRUN_VALID_BITS
 0x000025FFL

	)

29 
	#PDRUN_RESERVED_ONE
 0x0000C800L

	)

31 
	#ADC_RANGE
 
ADC_12BIT_RANGE


	)

33 c⁄° 
PöM≠
 
	gPöM≠_ADC
[] = {

34 {
P1_9
 , 
ADC_0
, 3},

35 {
P0_23
, 
ADC_1
, 1},

36 {
P0_16
, 
ADC_2
, 1},

37 {
P0_15
, 
ADC_3
, 3},

38 {
P1_22
, 
ADC_4
, 3},

39 {
P1_3
 , 
ADC_5
, 4},

40 {
P0_14
, 
ADC_6
, 2},

41 {
P0_13
, 
ADC_7
, 2},

42 {
P0_12
, 
ADC_8
, 2},

43 {
P0_11
, 
ADC_9
, 2},

44 {
P1_29
, 
ADC_10
,4},

45 {
P0_22
, 
ADC_11
,1},

46 {
NC
 , NC ,0}

50 
	$™Æogö_öô
(
™Æogö_t
 *
obj
, 
PöName
 
pö
) {

51 vﬁ©ûê
uöt32_t
 
tmp
;

52 
obj
->
adc
 = (
ADCName
)
	`pöm≠_≥rùhîÆ
(
pö
, 
PöM≠_ADC
);

53 
	`MBED_ASSERT
(
obj
->
adc
 !(
ADCName
)
NC
);

55 
	`pöm≠_pöout
(
pö
, 
PöM≠_ADC
);

57 
__IO
 
uöt32_t
 *
ªg
 = (__IO uöt32_t*)(
LPC_IOCON_BASE
 + (
pö
 & 0x1FF));

59 *
ªg
 &= ~(1 << 7);

62 
tmp
 = (
LPC_SYSCON
->
PDRUNCFG
 & 
PDRUN_VALID_BITS
);

63 
tmp
 &~((1 << 4Ë& 
PDRUN_VALID_BITS
);

64 
LPC_SYSCON
->
PDRUNCFG
 = (
tmp
 | 
PDRUN_RESERVED_ONE
);

67 
LPC_SYSCON
->
SYSAHBCLKCTRL
 |= (1 << 13);

70 
uöt32_t
 
˛kdiv
 = (
Sy°emC‹eClock
 / 500000) - 1;

73 
LPC_ADC
->
CTRL
 = (1UL << 30Ë| (
˛kdiv
 & 0xFF);

74 (
LPC_ADC
->
CTRL
 & (1UL << 30)) != 0);

77 
LPC_ADC
->
CTRL
 = 0;

78 
	}
}

80 
ölöe
 
uöt32_t
 
	$adc_ªad
(
™Æogö_t
 *
obj
) {

83 
LPC_ADC
->
SEQA_CTRL
 &= ~(0xFFF);

84 
LPC_ADC
->
SEQA_CTRL
 |(1UL << 
obj
->
adc
);

87 
LPC_ADC
->
SEQA_CTRL
 |= ((1UL << 26) | (1UL << 31) | (1UL << 19));

90 vﬁ©ûê
uöt32_t
 
d©a
;

92 
d©a
 = 
LPC_ADC
->
SEQA_GDAT
;

93 } (
d©a
 & (1UL << 31)) == 0);

94 
d©a
 = 
LPC_ADC
->
DAT
[
obj
->
adc
];

97 
LPC_ADC
->
SEQA_CTRL
 &= ~(1UL << 31);

99  ((
d©a
 >> 4Ë& 
ADC_RANGE
);

100 
	}
}

102 
ölöe
 
	$‹dî
(
uöt32_t
 *
a
, uöt32_à*
b
) {

103 i‡(*
a
 > *
b
) {

104 
uöt32_t
 
t
 = *
a
;

105 *
a
 = *
b
;

106 *
b
 = 
t
;

108 
	}
}

110 
ölöe
 
uöt32_t
 
	$adc_ªad_u32
(
™Æogö_t
 *
obj
) {

111 
uöt32_t
 
vÆue
;

112 #i‡
ANALOGIN_MEDIAN_FILTER


113 
uöt32_t
 
v1
 = 
	`adc_ªad
(
obj
);

114 
uöt32_t
 
v2
 = 
	`adc_ªad
(
obj
);

115 
uöt32_t
 
v3
 = 
	`adc_ªad
(
obj
);

116 
	`‹dî
(&
v1
, &
v2
);

117 
	`‹dî
(&
v2
, &
v3
);

118 
	`‹dî
(&
v1
, &
v2
);

119 
vÆue
 = 
v2
;

121 
vÆue
 = 
	`adc_ªad
(
obj
);

123  
vÆue
;

124 
	}
}

126 
uöt16_t
 
	$™Æogö_ªad_u16
(
™Æogö_t
 *
obj
) {

127 
uöt32_t
 
vÆue
 = 
	`adc_ªad_u32
(
obj
);

128  (
vÆue
 << 4) | ((value >> 8) & 0x000F);

129 
	}
}

131 
	$™Æogö_ªad
(
™Æogö_t
 *
obj
) {

132 
uöt32_t
 
vÆue
 = 
	`adc_ªad_u32
(
obj
);

133  ()
vÆue
 * (1.0‡/ ()
ADC_RANGE
);

134 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\device.h

16 #i‚de‡
MBED_DEVICE_H


17 
	#MBED_DEVICE_H


	)

19 
	#DEVICE_PORTIN
 0

	)

20 
	#DEVICE_PORTOUT
 0

	)

21 
	#DEVICE_PORTINOUT
 0

	)

23 
	#DEVICE_INTERRUPTIN
 1

	)

25 
	#DEVICE_ANALOGIN
 1

	)

26 
	#DEVICE_ANALOGOUT
 0

	)

28 
	#DEVICE_SERIAL
 1

	)

30 
	#DEVICE_I2C
 1

	)

31 
	#DEVICE_I2CSLAVE
 1

	)

33 
	#DEVICE_SPI
 1

	)

34 
	#DEVICE_SPISLAVE
 0

	)

36 
	#DEVICE_CAN
 0

	)

38 
	#DEVICE_RTC
 1

	)

40 
	#DEVICE_ETHERNET
 0

	)

42 
	#DEVICE_PWMOUT
 1

	)

44 
	#DEVICE_SEMIHOST
 0

	)

45 
	#DEVICE_LOCALFILESYSTEM
 0

	)

47 
	#DEVICE_SLEEP
 1

	)

49 
	#DEVICE_DEBUG_AWARENESS
 0

	)

51 
	#DEVICE_STDIO_MESSAGES
 0

	)

53 
	#DEVICE_ERROR_RED
 1

	)

55 
	~"obje˘s.h
"

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\gpio_api.c

16 
	~"mbed_as£π.h
"

17 
	~"gpio_≠i.h
"

18 
	~"pöm≠.h
"

20 
	ggpio_íabÀd
 = 0;

22 
	$gpio_íabÀ
() {

23 
gpio_íabÀd
 = 1;

26 
LPC_SYSCON
->
SYSAHBCLKCTRL
 |= ((1 << 16) | (1 << 6));

27 
	}
}

29 
uöt32_t
 
	$gpio_£t
(
PöName
 
pö
) {

30 
	`MBED_ASSERT
(
pö
 !(
PöName
)
NC
);

31 i‡(!
gpio_íabÀd
)

32 
	`gpio_íabÀ
();

34 
func
 = ((
pö
 =
P0_0
) ||

35 (
pö
 =
P0_10
) ||

36 (
pö
 =
P0_11
) ||

37 (
pö
 =
P0_12
) ||

38 (
pö
 =
P0_13
) ||

39 (
pö
 =
P0_14
) ||

40 (
pö
 =
P0_15
)) ? (1) : (0);

42 
	`pö_fun˘i⁄
(
pö
, 
func
);

44  (1UL << (()
pö
 >> 
PIN_SHIFT
 & 0x1F));

45 
	}
}

47 
	$gpio_öô
(
gpio_t
 *
obj
, 
PöName
 
pö
) {

48 
obj
->
pö
 =Öin;

49 i‡(
pö
 =(
PöName
)
NC
)

52 
obj
->
mask
 = 
	`gpio_£t
(
pö
);

54 
p‹t
 = ()(
pö
 >> 
PORT_SHIFT
);

56 
obj
->
ªg_£t
 = &
LPC_GPIO_PORT
->
SET
[
p‹t
];

57 
obj
->
ªg_˛r
 = &
LPC_GPIO_PORT
->
CLR
[
p‹t
];

58 
obj
->
ªg_ö
 = &
LPC_GPIO_PORT
->
PIN
[
p‹t
];

59 
obj
->
ªg_dú
 = &
LPC_GPIO_PORT
->
DIR
[
p‹t
];

60 
	}
}

62 
	$gpio_mode
(
gpio_t
 *
obj
, 
PöMode
 
mode
) {

63 
	`pö_mode
(
obj
->
pö
, 
mode
);

64 
	}
}

66 
	$gpio_dú
(
gpio_t
 *
obj
, 
PöDúe˘i⁄
 
dúe˘i⁄
) {

67 
	`MBED_ASSERT
(
obj
->
pö
 !(
PöName
)
NC
);

68 
dúe˘i⁄
) {

69 
PIN_INPUT
 :

70 *
obj
->
ªg_dú
 &~obj->
mask
;

72 
PIN_OUTPUT
:

73 *
obj
->
ªg_dú
 |obj->
mask
;

76 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\gpio_irq_api.c

16 
	~<°ddef.h
>

18 
	~"cmsis.h
"

19 
	~"gpio_úq_≠i.h
"

20 
	~"mbed_îr‹.h
"

22 #i‡
DEVICE_INTERRUPTIN


24 
	#CHANNEL_NUM
 8

	)

25 
	#LPC_GPIO_X
 
LPC_PINT


	)

26 
	#PININT_IRQ
 
PIN_INT0_IRQn


	)

28 
uöt32_t
 
	gch™√l_ids
[
CHANNEL_NUM
] = {0};

29 
gpio_úq_h™dÀr
 
	gúq_h™dÀr
;

31 
ölöe
 
	$h™dÀ_öãºu±_ö
(
uöt32_t
 
ch™√l
) {

32 
uöt32_t
 
ch_bô
 = (1 << 
ch™√l
);

37 i‡–((
LPC_GPIO_X
->
IST
 & 
ch_bô
) == 0) ||

38 (
ch™√l_ids
[
ch™√l
] == 0 ) ||

39 (
LPC_GPIO_X
->
ISEL
 & 
ch_bô
 ) ) ;

41 i‡((
LPC_GPIO_X
->
IENR
 & 
ch_bô
Ë&& (LPC_GPIO_X->
RISE
 & ch_bit)) {

42 
	`úq_h™dÀr
(
ch™√l_ids
[
ch™√l
], 
IRQ_RISE
);

43 
LPC_GPIO_X
->
RISE
 = 
ch_bô
;

45 i‡((
LPC_GPIO_X
->
IENF
 & 
ch_bô
Ë&& (LPC_GPIO_X->
FALL
 & ch_bit)) {

46 
	`úq_h™dÀr
(
ch™√l_ids
[
ch™√l
], 
IRQ_FALL
);

47 
LPC_GPIO_X
->
FALL
 = 
ch_bô
;

49 
LPC_GPIO_X
->
IST
 = 
ch_bô
;

50 
	}
}

52 
	$gpio_úq0
(Ë{
	`h™dÀ_öãºu±_ö
(0);
	}
}

53 
	$gpio_úq1
(Ë{
	`h™dÀ_öãºu±_ö
(1);
	}
}

54 
	$gpio_úq2
(Ë{
	`h™dÀ_öãºu±_ö
(2);
	}
}

55 
	$gpio_úq3
(Ë{
	`h™dÀ_öãºu±_ö
(3);
	}
}

56 
	$gpio_úq4
(Ë{
	`h™dÀ_öãºu±_ö
(4);
	}
}

57 
	$gpio_úq5
(Ë{
	`h™dÀ_öãºu±_ö
(5);
	}
}

58 
	$gpio_úq6
(Ë{
	`h™dÀ_öãºu±_ö
(6);
	}
}

59 
	$gpio_úq7
(Ë{
	`h™dÀ_öãºu±_ö
(7);
	}
}

61 
	$gpio_úq_öô
(
gpio_úq_t
 *
obj
, 
PöName
 
pö
, 
gpio_úq_h™dÀr
 
h™dÀr
, 
uöt32_t
 
id
) {

63 i‡(
pö
 >
P2_8
)  -1;

65 
úq_h™dÀr
 = 
h™dÀr
;

67 
found_‰ì_ch™√l
 = 0;

68 
i
 = 0;

69 
i
=0; i<
CHANNEL_NUM
; i++) {

70 i‡(
ch™√l_ids
[
i
] == 0) {

71 
ch™√l_ids
[
i
] = 
id
;

72 
obj
->
ch
 = 
i
;

73 
found_‰ì_ch™√l
 = 1;

77 i‡(!
found_‰ì_ch™√l
)  -1;

80 
LPC_SYSCON
->
SYSAHBCLKCTRL
 |= ((1 << 19) | (1 << 16) | (1 << 7));

82 
LPC_SYSCON
->
PINTSEL
[
obj
->
ch
] = ((((
pö
 >> 
PORT_SHIFT
Ë& 0x3Ë* 24Ë+ (’ö >> 
PIN_SHIFT
) & 0x1F));

85 
LPC_SYSCON
->
STARTERP0
 |(1 << 
obj
->
ch
);

87 
LPC_GPIO_PORT
->
DIR
[(
pö
 >> 
PORT_SHIFT
Ë& 0x3] &~(1 << (’ö >> 
PIN_SHIFT
) & 0x1F));

89 (*
ch™√ls_úq
)(Ë
NULL
;

90 
obj
->
ch
) {

91 0: 
ch™√ls_úq
 = &
gpio_úq0
; ;

92 1: 
ch™√ls_úq
 = &
gpio_úq1
; ;

93 2: 
ch™√ls_úq
 = &
gpio_úq2
; ;

94 3: 
ch™√ls_úq
 = &
gpio_úq3
; ;

95 4: 
ch™√ls_úq
 = &
gpio_úq4
; ;

96 5: 
ch™√ls_úq
 = &
gpio_úq5
; ;

97 6: 
ch™√ls_úq
 = &
gpio_úq6
; ;

98 7: 
ch™√ls_úq
 = &
gpio_úq7
; ;

100 
	`NVIC_SëVe˘‹
((
IRQn_Ty≥
)(
PININT_IRQ
 + 
obj
->
ch
), (
uöt32_t
)
ch™√ls_úq
);

101 
	`NVIC_E«bÀIRQ
((
IRQn_Ty≥
)(
PININT_IRQ
 + 
obj
->
ch
));

104 
	}
}

106 
	$gpio_úq_‰ì
(
gpio_úq_t
 *
obj
) {

107 
ch™√l_ids
[
obj
->
ch
] = 0;

108 
LPC_SYSCON
->
STARTERP0
 &~(1 << 
obj
->
ch
);

109 
	}
}

111 
	$gpio_úq_£t
(
gpio_úq_t
 *
obj
, 
gpio_úq_evít
 
evít
, 
uöt32_t
 
íabÀ
) {

112 
ch_bô
 = (1 << 
obj
->
ch
);

115 i‡(!(
LPC_GPIO_X
->
ISEL
 & 
ch_bô
))

116 
LPC_GPIO_X
->
IST
 = 
ch_bô
;

119 
LPC_GPIO_X
->
ISEL
 &~
ch_bô
;

120 i‡(
evít
 =
IRQ_RISE
) {

121 i‡(
íabÀ
) {

122 
LPC_GPIO_X
->
IENR
 |
ch_bô
;

124 
LPC_GPIO_X
->
IENR
 &~
ch_bô
;

127 i‡(
íabÀ
) {

128 
LPC_GPIO_X
->
IENF
 |
ch_bô
;

130 
LPC_GPIO_X
->
IENF
 &~
ch_bô
;

133 
	}
}

135 
	$gpio_úq_íabÀ
(
gpio_úq_t
 *
obj
) {

136 
	`NVIC_E«bÀIRQ
((
IRQn_Ty≥
)(
PININT_IRQ
 + 
obj
->
ch
));

137 
	}
}

139 
	$gpio_úq_dißbÀ
(
gpio_úq_t
 *
obj
) {

140 
	`NVIC_DißbÀIRQ
((
IRQn_Ty≥
)(
PININT_IRQ
 + 
obj
->
ch
));

141 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\gpio_object.h

16 #i‚de‡
MBED_GPIO_OBJECT_H


17 
	#MBED_GPIO_OBJECT_H


	)

19 
	~"mbed_as£π.h
"

21 #ifde‡
__˝lu•lus


26 
PöName
 
pö
;

27 
uöt32_t
 
mask
;

29 
__IO
 
uöt32_t
 *
ªg_dú
;

30 
__IO
 
uöt32_t
 *
ªg_£t
;

31 
__IO
 
uöt32_t
 *
ªg_˛r
;

32 
__I
 
uöt32_t
 *
ªg_ö
;

33 } 
	tgpio_t
;

35 
ölöe
 
gpio_wrôe
(
gpio_t
 *
obj
, 
vÆue
) {

36 
MBED_ASSERT
(
obj
->
pö
 !(
PöName
)
NC
);

37 i‡(
vÆue
)

38 *
obj
->
ªg_£t
 = obj->
mask
;

40 *
obj
->
ªg_˛r
 = obj->
mask
;

43 
ölöe
 
gpio_ªad
(
gpio_t
 *
obj
) {

44 
MBED_ASSERT
(
obj
->
pö
 !(
PöName
)
NC
);

45  ((*
obj
->
ªg_ö
 & obj->
mask
) ? 1 : 0);

48 
ölöe
 
gpio_is_c⁄√˘ed
(c⁄° 
gpio_t
 *
obj
) {

49  
obj
->
pö
 !(
PöName
)
NC
;

52 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\i2c_api.c

16 
	~"mbed_as£π.h
"

17 
	~"i2c_≠i.h
"

18 
	~"cmsis.h
"

19 
	~"pöm≠.h
"

21 #i‡
DEVICE_I2C


23 c⁄° 
PöM≠
 
	gPöM≠_I2C_SDA
[] = {

24 {
P0_5
 , 
I2C_0
, 1},

25 {
P1_3
 , 
I2C_1
, 3},

26 {
P1_14
, 
I2C_1
, 1},

27 {
P1_24
, 
I2C_1
, 2},

28 {
NC
 , NC , 0}

31 c⁄° 
PöM≠
 
	gPöM≠_I2C_SCL
[] = {

32 {
P0_4
 , 
I2C_0
, 1},

33 {
P0_7
 , 
I2C_1
, 3},

34 {
P1_11
, 
I2C_1
, 1},

35 {
P1_30
, 
I2C_1
, 1},

36 {
NC
 , NC, 0}

39 
	#I2C_CONSET
(
x
Ë(x->
i2c
->
CONSET
)

	)

40 
	#I2C_CONCLR
(
x
Ë(x->
i2c
->
CONCLR
)

	)

41 
	#I2C_STAT
(
x
Ë(x->
i2c
->
STAT
)

	)

42 
	#I2C_DAT
(
x
Ë(x->
i2c
->
DAT
)

	)

43 
	#I2C_SCLL
(
x
, 
vÆ
Ë(x->
i2c
->
SCLL
 = vÆ)

	)

44 
	#I2C_SCLH
(
x
, 
vÆ
Ë(x->
i2c
->
SCLH
 = vÆ)

	)

46 c⁄° 
uöt32_t
 
	gI2C_addr_off£t
[2][4] = {

51 
ölöe
 
	$i2c_c⁄˛r
(
i2c_t
 *
obj
, 
°¨t
, 
°›
, 
öãºu±
, 
acknowÀdge
) {

52 
	`I2C_CONCLR
(
obj
Ë(
°¨t
 << 5)

53 | (
°›
 << 4)

54 | (
öãºu±
 << 3)

55 | (
acknowÀdge
 << 2);

56 
	}
}

58 
ölöe
 
	$i2c_c⁄£t
(
i2c_t
 *
obj
, 
°¨t
, 
°›
, 
öãºu±
, 
acknowÀdge
) {

59 
	`I2C_CONSET
(
obj
Ë(
°¨t
 << 5)

60 | (
°›
 << 4)

61 | (
öãºu±
 << 3)

62 | (
acknowÀdge
 << 2);

63 
	}
}

66 
ölöe
 
	$i2c_˛ór_SI
(
i2c_t
 *
obj
) {

67 
	`i2c_c⁄˛r
(
obj
, 0, 0, 1, 0);

68 
	}
}

70 
ölöe
 
	$i2c_°©us
(
i2c_t
 *
obj
) {

71  
	`I2C_STAT
(
obj
);

72 
	}
}

75 
	$i2c_waô_SI
(
i2c_t
 *
obj
) {

76 vﬁ©ûê
timeout
 = 0;

77 !(
	`I2C_CONSET
(
obj
) & (1 << 3))) {

78 
timeout
++;

79 i‡(
timeout
 > 100000)  -1;

82 
	}
}

84 
ölöe
 
	$i2c_öãrÁ˚_íabÀ
(
i2c_t
 *
obj
) {

85 
	`I2C_CONSET
(
obj
) = 0x40;

86 
	}
}

88 
ölöe
 
	$i2c_powî_íabÀ
(
i2c_t
 *
obj
) {

89 
LPC_SYSCON
->
SYSAHBCLKCTRL
 |= ((1 << 5) | (1 << 25));

90 
LPC_SYSCON
->
PRESETCTRL
 |= ((1 << 1) | (1 << 3));

91 
	}
}

93 
	$i2c_öô
(
i2c_t
 *
obj
, 
PöName
 
sda
, PöNamê
s˛
) {

95 
I2CName
 
i2c_sda
 = (I2CName)
	`pöm≠_≥rùhîÆ
(
sda
, 
PöM≠_I2C_SDA
);

96 
I2CName
 
i2c_s˛
 = (I2CName)
	`pöm≠_≥rùhîÆ
(
s˛
, 
PöM≠_I2C_SCL
);

97 
obj
->
i2c
 = (
LPC_I2C0_Ty≥
 *)
	`pöm≠_mîge
(
i2c_sda
, 
i2c_s˛
);

98 
	`MBED_ASSERT
(()
obj
->
i2c
 !
NC
);

101 
	`i2c_powî_íabÀ
(
obj
);

104 
	`i2c_‰equícy
(
obj
, 100000);

105 
	`i2c_c⁄˛r
(
obj
, 1, 1, 1, 1);

106 
	`i2c_öãrÁ˚_íabÀ
(
obj
);

108 
	`pöm≠_pöout
(
sda
, 
PöM≠_I2C_SDA
);

109 
	`pöm≠_pöout
(
s˛
, 
PöM≠_I2C_SCL
);

110 
	}
}

112 
ölöe
 
	$i2c_°¨t
(
i2c_t
 *
obj
) {

113 
°©us
 = 0;

118 
	`i2c_c⁄˛r
(
obj
, 1, 1, 1, 1);

122 
	`i2c_c⁄£t
(
obj
, 1, 0, 0, 1);

124 
	`i2c_waô_SI
(
obj
);

125 
°©us
 = 
	`i2c_°©us
(
obj
);

128 
	`i2c_c⁄˛r
(
obj
, 1, 0, 0, 0);

129  
°©us
;

130 
	}
}

132 
ölöe
 
	$i2c_°›
(
i2c_t
 *
obj
) {

133 
timeout
 = 0;

136 
	`i2c_c⁄£t
(
obj
, 0, 1, 0, 0);

137 
	`i2c_˛ór_SI
(
obj
);

140 
	`I2C_CONSET
(
obj
) & (1 << 4)) {

141 
timeout
 ++;

142 i‡(
timeout
 > 100000)  1;

146 
	}
}

149 
ölöe
 
	$i2c_do_wrôe
(
i2c_t
 *
obj
, 
vÆue
, 
uöt8_t
 
addr
) {

151 
	`I2C_DAT
(
obj
Ë
vÆue
;

154 
	`i2c_˛ór_SI
(
obj
);

157 
	`i2c_waô_SI
(
obj
);

158  
	`i2c_°©us
(
obj
);

159 
	}
}

161 
ölöe
 
	$i2c_do_ªad
(
i2c_t
 *
obj
, 
œ°
) {

163 i‡(
œ°
) {

164 
	`i2c_c⁄˛r
(
obj
, 0, 0, 0, 1);

166 
	`i2c_c⁄£t
(
obj
, 0, 0, 0, 1);

170 
	`i2c_˛ór_SI
(
obj
);

173 
	`i2c_waô_SI
(
obj
);

176  (
	`I2C_DAT
(
obj
) & 0xFF);

177 
	}
}

179 
	$i2c_‰equícy
(
i2c_t
 *
obj
, 
hz
) {

181 
uöt32_t
 
PCLK
 = 
Sy°emC‹eClock
;

183 
uöt32_t
 
pul£
 = 
PCLK
 / (
hz
 * 2);

186 
	`I2C_SCLL
(
obj
, 
pul£
);

187 
	`I2C_SCLH
(
obj
, 
pul£
);

188 
	}
}

204 
	$i2c_ªad
(
i2c_t
 *
obj
, 
addªss
, *
d©a
, 
Àngth
, 
°›
) {

205 
cou¡
, 
°©us
;

207 
°©us
 = 
	`i2c_°¨t
(
obj
);

209 i‡((
°©us
 != 0x10) && (status != 0x08)) {

210 
	`i2c_°›
(
obj
);

211  
I2C_ERROR_BUS_BUSY
;

214 
°©us
 = 
	`i2c_do_wrôe
(
obj
, (
addªss
 | 0x01), 1);

215 i‡(
°©us
 != 0x40) {

216 
	`i2c_°›
(
obj
);

217  
I2C_ERROR_NO_SLAVE
;

221 
cou¡
 = 0; cou¡ < (
Àngth
 - 1); count++) {

222 
vÆue
 = 
	`i2c_do_ªad
(
obj
, 0);

223 
°©us
 = 
	`i2c_°©us
(
obj
);

224 i‡(
°©us
 != 0x50) {

225 
	`i2c_°›
(
obj
);

226  
cou¡
;

228 
d©a
[
cou¡
] = (Ë
vÆue
;

232 
vÆue
 = 
	`i2c_do_ªad
(
obj
, 1);

233 
°©us
 = 
	`i2c_°©us
(
obj
);

234 i‡(
°©us
 != 0x58) {

235 
	`i2c_°›
(
obj
);

236  
Àngth
 - 1;

239 
d©a
[
cou¡
] = (Ë
vÆue
;

242 i‡(
°›
) {

243 
	`i2c_°›
(
obj
);

246  
Àngth
;

247 
	}
}

249 
	$i2c_wrôe
(
i2c_t
 *
obj
, 
addªss
, c⁄° *
d©a
, 
Àngth
, 
°›
) {

250 
i
, 
°©us
;

252 
°©us
 = 
	`i2c_°¨t
(
obj
);

254 i‡((
°©us
 != 0x10) && (status != 0x08)) {

255 
	`i2c_°›
(
obj
);

256  
I2C_ERROR_BUS_BUSY
;

259 
°©us
 = 
	`i2c_do_wrôe
(
obj
, (
addªss
 & 0xFE), 1);

260 i‡(
°©us
 != 0x18) {

261 
	`i2c_°›
(
obj
);

262  
I2C_ERROR_NO_SLAVE
;

265 
i
=0; i<
Àngth
; i++) {

266 
°©us
 = 
	`i2c_do_wrôe
(
obj
, 
d©a
[
i
], 0);

267 if(
°©us
 != 0x28) {

268 
	`i2c_°›
(
obj
);

269  
i
;

278 i‡(
°›
) {

279 
	`i2c_°›
(
obj
);

282  
Àngth
;

283 
	}
}

285 
	$i2c_ª£t
(
i2c_t
 *
obj
) {

286 
	`i2c_°›
(
obj
);

287 
	}
}

289 
	$i2c_byã_ªad
(
i2c_t
 *
obj
, 
œ°
) {

290  (
	`i2c_do_ªad
(
obj
, 
œ°
) & 0xFF);

291 
	}
}

293 
	$i2c_byã_wrôe
(
i2c_t
 *
obj
, 
d©a
) {

294 
ack
;

295 
°©us
 = 
	`i2c_do_wrôe
(
obj
, (
d©a
 & 0xFF), 0);

297 
°©us
) {

299 
ack
 = 1;

302 
ack
 = 1;

305 
ack
 = 1;

308 
ack
 = 0;

312  
ack
;

313 
	}
}

315 
	$i2c_¶ave_mode
(
i2c_t
 *
obj
, 
íabÀ_¶ave
) {

316 i‡(
íabÀ_¶ave
 != 0) {

317 
	`i2c_c⁄˛r
(
obj
, 1, 1, 1, 0);

318 
	`i2c_c⁄£t
(
obj
, 0, 0, 0, 1);

320 
	`i2c_c⁄˛r
(
obj
, 1, 1, 1, 1);

322 
	}
}

324 
	$i2c_¶ave_ª˚ive
(
i2c_t
 *
obj
) {

325 
°©us
;

326 
ªtvÆ
;

328 
°©us
 = 
	`i2c_°©us
(
obj
);

329 
°©us
) {

330 0x60: 
ªtvÆ
 = 3; ;

331 0x70: 
ªtvÆ
 = 2; ;

332 0xA8: 
ªtvÆ
 = 1; ;

333  : 
ªtvÆ
 = 0; ;

336 (
ªtvÆ
);

337 
	}
}

339 
	$i2c_¶ave_ªad
(
i2c_t
 *
obj
, *
d©a
, 
Àngth
) {

340 
cou¡
 = 0;

341 
°©us
;

344 
	`i2c_˛ór_SI
(
obj
);

345 
	`i2c_waô_SI
(
obj
);

346 
°©us
 = 
	`i2c_°©us
(
obj
);

347 if((
°©us
 == 0x80) || (status == 0x90)) {

348 
d©a
[
cou¡
] = 
	`I2C_DAT
(
obj
) & 0xFF;

350 
cou¡
++;

351 } ((
°©us
 == 0x80) || (status == 0x90) ||

352 (
°©us
 =0x060Ë|| (°©u†=0x70)Ë&& (
cou¡
 < 
Àngth
));

354 if(
°©us
 != 0xA0) {

355 
	`i2c_°›
(
obj
);

358 
	`i2c_˛ór_SI
(
obj
);

360  
cou¡
;

361 
	}
}

363 
	$i2c_¶ave_wrôe
(
i2c_t
 *
obj
, c⁄° *
d©a
, 
Àngth
) {

364 
cou¡
 = 0;

365 
°©us
;

367 if(
Àngth
 <= 0) {

372 
°©us
 = 
	`i2c_do_wrôe
(
obj
, 
d©a
[
cou¡
], 0);

373 
cou¡
++;

374 } (
cou¡
 < 
Àngth
Ë&& (
°©us
 == 0xB8));

376 if((
°©us
 != 0xC0) && (status != 0xC8)) {

377 
	`i2c_°›
(
obj
);

380 
	`i2c_˛ór_SI
(
obj
);

382 (
cou¡
);

383 
	}
}

385 
	$i2c_¶ave_addªss
(
i2c_t
 *
obj
, 
idx
, 
uöt32_t
 
addªss
, uöt32_à
mask
) {

386 
uöt32_t
 
addr
;

388 i‡((
idx
 >= 0) && (idx <= 3)) {

389 
addr
 = ((
uöt32_t
)
obj
->
i2c
Ë+ 
I2C_addr_off£t
[0][
idx
];

390 *((
uöt32_t
 *Ë
addr
Ë
addªss
 & 0xFF;

392 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\objects.h

16 #i‚de‡
MBED_OBJECTS_H


17 
	#MBED_OBJECTS_H


	)

19 
	~"cmsis.h
"

20 
	~"P‹tNames.h
"

21 
	~"PîùhîÆNames.h
"

22 
	~"PöNames.h
"

24 #ifde‡
__˝lu•lus


28 #i‡
DEVICE_INTERRUPTIN


29 
	sgpio_úq_s
 {

30 
uöt32_t
 
ch
;

34 #i‡
DEVICE_PWMOUT


35 
	spwmout_s
 {

36 
LPC_SCT0_Ty≥
* 
	mpwm
;

37 
uöt32_t
 
	mpwm_ch
;

41 #i‡
DEVICE_SERIAL


42 
	s£rül_s
 {

43 
LPC_USART0_Ty≥
 *
	mu¨t
;

44 
LPC_USART4_Ty≥
 *
	mmöi_u¨t
;

45 
	mödex
;

49 #i‡
DEVICE_ANALOGIN


50 
	s™Æogö_s
 {

51 
ADCName
 
	madc
;

55 #i‡
DEVICE_ANALOGOUT


56 
	sdac_s
 {

57 
DACName
 
	mdac
;

61 #i‡
DEVICE_I2C


62 
	si2c_s
 {

63 
LPC_I2C0_Ty≥
 *
	mi2c
;

67 #i‡
DEVICE_SPI


68 
	s•i_s
 {

69 
LPC_SSP0_Ty≥
 *
	m•i
;

70 
	m•i_n
;

74 
	~"gpio_obje˘.h
"

76 #ifde‡
__˝lu•lus


	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\pinmap.c

16 
	~"mbed_as£π.h
"

17 
	~"pöm≠.h
"

18 
	~"mbed_îr‹.h
"

20 
	$pö_fun˘i⁄
(
PöName
 
pö
, 
fun˘i⁄
) {

21 
	`MBED_ASSERT
(
pö
 !(
PöName
)
NC
);

22 
__IO
 
uöt32_t
 *
ªg
 = (__IO uöt32_t*)(
LPC_IOCON_BASE
 + (
pö
 & 0x1FF));

25 *
ªg
 = (*ªg & ~0x7Ë| (
fun˘i⁄
 & 0x7);

26 
	}
}

28 
	$pö_mode
(
PöName
 
pö
, 
PöMode
 
mode
) {

29 
	`MBED_ASSERT
(
pö
 !(
PöName
)
NC
);

30 i‡((
pö
 =
P0_4
Ë|| (pö =
P0_5
)) {

35 
__IO
 
uöt32_t
 *
ªg
 = (__IO uöt32_t*)(
LPC_IOCON_BASE
 + (
pö
 & 0x1FF));

37 i‡(
mode
 =
O≥nDøö
) {

38 *
ªg
 |= (1 << 10);

40 
uöt32_t
 
tmp
 = *
ªg
;

41 
tmp
 &= ~(0x3 << 3);

42 
tmp
 |(
mode
 & 0x3) << 3;

43 *
ªg
 = 
tmp
;

45 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\pwmout_api.c

17 
	~"pwmout_≠i.h
"

18 
	~"cmsis.h
"

19 
	~"pöm≠.h
"

20 
	~"mbed_îr‹.h
"

22 #i‡
DEVICE_PWMOUT


24 
	#SCT_CHANNELS
 2

	)

26 c⁄° 
PöM≠
 
	gPöM≠_PWM
[] = {

27 {
P1_19
, 
SCT0_0
, 2},

28 {
P2_2
 , 
SCT0_1
, 3},

29 {
P2_7
 , 
SCT0_2
, 2},

30 {
P1_13
, 
SCT0_3
, 2},

31 {
P2_16
, 
SCT1_0
, 1},

32 {
P2_17
, 
SCT1_1
, 1},

33 {
P2_18
, 
SCT1_2
, 1},

34 {
P2_19
, 
SCT1_3
, 1},

35 {
NC
 , NC ,0}

39 
LPC_SCT0_Ty≥
 *
	gSCTs
[
SCT_CHANNELS
] = {

40 (
LPC_SCT0_Ty≥
*)
LPC_SCT0
,

41 (
LPC_SCT0_Ty≥
*)
LPC_SCT1
,

46 
	gs˘_u£d
 = 0;

48 
	$gë_avaûabÀ_s˘
() {

49 
i
;

50 
i
=0; i<
SCT_CHANNELS
; i++) {

51 i‡((
s˘_u£d
 & (1 << 
i
)) == 0)

52  
i
;

55 
	}
}

57 
	$pwmout_öô
(
pwmout_t
* 
obj
, 
PöName
 
pö
) {

59 
PWMName
 
pwm_m≠≥d
 = (PWMName)
	`pöm≠_≥rùhîÆ
(
pö
, 
PöM≠_PWM
);

60 i‡(
pwm_m≠≥d
 =(
PWMName
)
NC
) {

61 
	`îr‹
("PwmOutÖin mapping failed");

63 
s˘_n
 = 
	`gë_avaûabÀ_s˘
();

64 i‡(
s˘_n
 == -1) {

65 
	`îr‹
("Noávailable SCT");

68 
s˘_u£d
 |(1 << 
s˘_n
);

69 
obj
->
pwm
 = 
SCTs
[
s˘_n
];

70 
obj
->
pwm_ch
 = 
s˘_n
;

73 
LPC_SYSCON
->
SYSAHBCLKCTRL
 |= (1UL << 31);

76 
LPC_SYSCON
->
PRESETCTRL
 |(1 << (
obj
->
pwm_ch
 + 9));

77 
	`pöm≠_pöout
(
pö
, 
PöM≠_PWM
);

78 
LPC_SCT0_Ty≥
* 
pwm
 = 
obj
->pwm;

81 
pwm
->
CONFIG
 |= ((0x3 << 17) | 0x01);

84 
pwm
->
CTRL
 |= (1 << 2) | (1 << 3);

87 
pwm
->
CTRL
 &= ~(0x7F << 5);

88 
pwm
->
CTRL
 |(((
Sy°emC‹eClock
/1000000 - 1) & 0x7F) << 5);

90 
pwm_m≠≥d
) {

91 
SCT0_0
:

92 
SCT1_0
:

93 
pwm
->
OUT0_SET
 = (1 << 0);

94 
pwm
->
OUT0_CLR
 = (1 << 1);

96 
SCT0_1
:

97 
SCT1_1
:

98 
pwm
->
OUT1_SET
 = (1 << 0);

99 
pwm
->
OUT1_CLR
 = (1 << 1);

101 
SCT0_2
:

102 
SCT1_2
:

103 
pwm
->
OUT2_SET
 = (1 << 0);

104 
pwm
->
OUT2_CLR
 = (1 << 1);

106 
SCT0_3
:

107 
SCT1_3
:

108 
pwm
->
OUT3_SET
 = (1 << 0);

109 
pwm
->
OUT3_CLR
 = (1 << 1);

115 
pwm
->
EV0_CTRL
 = (1 << 12);

116 
pwm
->
EV0_STATE
 = 0xFFFFFFFF;

118 
pwm
->
EV1_CTRL
 = (1 << 12) | (1 << 0);

119 
pwm
->
EV1_STATE
 = 0xFFFFFFFF;

122 
pwm
->
MATCHREL0
 = 20000;

123 
pwm
->
MATCHREL1
 = (pwm->
MATCHREL0
 / 4);

127 
pwm
->
CTRL
 &= ~(1 << 2);

130 
	`pwmout_≥riod_ms
(
obj
, 20);

131 
	`pwmout_wrôe
 (
obj
, 0);

132 
	}
}

134 
	$pwmout_‰ì
(
pwmout_t
* 
obj
) {

135 
s˘_u£d
 &~(1 << 
obj
->
pwm_ch
);

136 i‡(
s˘_u£d
 == 0) {

138 
LPC_SYSCON
->
SYSAHBCLKCTRL
 &= ~(1UL << 31);

140 
	}
}

142 
	$pwmout_wrôe
(
pwmout_t
* 
obj
, 
vÆue
) {

143 i‡(
vÆue
 < 0.0f) {

144 
vÆue
 = 0.0;

145 } i‡(
vÆue
 > 1.0f) {

146 
vÆue
 = 1.0;

148 
uöt32_t
 
t_⁄
 = (uöt32_t)(()(
obj
->
pwm
->
MATCHREL0
Ë* 
vÆue
);

149 
obj
->
pwm
->
MATCHREL1
 = 
t_⁄
;

150 
	}
}

152 
	$pwmout_ªad
(
pwmout_t
* 
obj
) {

153 
uöt32_t
 
t_off
 = 
obj
->
pwm
->
MATCHREL0
;

154 
uöt32_t
 
t_⁄
 = 
obj
->
pwm
->
MATCHREL1
;

155 
v
 = ()
t_⁄
/()
t_off
;

156  (
v
 > 1.0f) ? (1.0f) : (v);

157 
	}
}

159 
	$pwmout_≥riod
(
pwmout_t
* 
obj
, 
£c⁄ds
) {

160 
	`pwmout_≥riod_us
(
obj
, 
£c⁄ds
 * 1000000.0f);

161 
	}
}

163 
	$pwmout_≥riod_ms
(
pwmout_t
* 
obj
, 
ms
) {

164 
	`pwmout_≥riod_us
(
obj
, 
ms
 * 1000);

165 
	}
}

168 
	$pwmout_≥riod_us
(
pwmout_t
* 
obj
, 
us
) {

169 
uöt32_t
 
t_off
 = 
obj
->
pwm
->
MATCHREL0
;

170 
uöt32_t
 
t_⁄
 = 
obj
->
pwm
->
MATCHREL1
;

171 
v
 = ()
t_⁄
/()
t_off
;

172 
obj
->
pwm
->
MATCHREL0
 = (
uöt32_t
)
us
;

173 
obj
->
pwm
->
MATCHREL1
 = (
uöt32_t
)(()
us
 * ()
v
);

174 
	}
}

176 
	$pwmout_pul£width
(
pwmout_t
* 
obj
, 
£c⁄ds
) {

177 
	`pwmout_pul£width_us
(
obj
, 
£c⁄ds
 * 1000000.0f);

178 
	}
}

180 
	$pwmout_pul£width_ms
(
pwmout_t
* 
obj
, 
ms
) {

181 
	`pwmout_pul£width_us
(
obj
, 
ms
 * 1000);

182 
	}
}

184 
	$pwmout_pul£width_us
(
pwmout_t
* 
obj
, 
us
) {

185 
obj
->
pwm
->
MATCHREL1
 = (
uöt32_t
)
us
;

186 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\rtc_api.c

16 
	~"πc_≠i.h
"

18 #i‡
DEVICE_RTC


20 
	$πc_öô
()

23 
LPC_SYSCON
->
SYSAHBCLKCTRL
 |= (1 << 30);

26 
LPC_RTC
->
CTRL
 |= 1;

28 
LPC_RTC
->
COUNT
 = 0;

31 
LPC_RTC
->
CTRL
 |= (1 << 7);

33 
LPC_RTC
->
CTRL
 &= ~1;

34 
	}
}

36 
	$πc_‰ì
()

38 
LPC_SYSCON
->
SYSAHBCLKCTRL
 &= ~(1 << 30);

39 
LPC_RTC
->
CTRL
 &= ~(1 << 7);

40 
	}
}

42 
	$πc_i£«bÀd
()

44  (((
LPC_RTC
->
CTRL
) & 0x80) != 0);

45 
	}
}

47 
time_t
 
	$πc_ªad
()

49  (
time_t
)
LPC_RTC
->
COUNT
;

50 
	}
}

52 
	$πc_wrôe
(
time_t
 
t
)

55 
LPC_RTC
->
CTRL
 &= ~(1 << 7);

58 
LPC_RTC
->
COUNT
 = 
t
;

61 
LPC_RTC
->
CTRL
 |= (1 << 7);

62 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\serial_api.c

18 
	~"mbed_as£π.h
"

19 
	~<m©h.h
>

20 
	~<°rög.h
>

21 
	~<°dlib.h
>

23 
	~"£rül_≠i.h
"

24 
	~"cmsis.h
"

25 
	~"pöm≠.h
"

27 #i‡
DEVICE_SERIAL


33 
	#UART_NUM
 5

	)

36 
	#UART_EN
 (0x01<<0)

	)

39 
	#TXBRKEN
 (0x01<<1)

	)

42 
	#RXRDY
 (0x01<<0)

	)

43 
	#TXRDY
 (0x01<<2)

	)

44 
	#DELTACTS
 (0x01<<5)

	)

45 
	#RXBRK
 (0x01<<10)

	)

46 
	#DELTARXBRK
 (0x01<<11)

	)

48 c⁄° 
PöM≠
 
	gPöM≠_UART_TX
[] = {

49 {
P0_19
, 
UART_0
, 1},

50 {
P1_18
, 
UART_0
, 2},

51 {
P1_27
, 
UART_0
, 2},

52 {
P1_8
 , 
UART_1
, 2},

53 {
P0_14
, 
UART_1
, 4},

54 {
P1_0
 , 
UART_2
, 3},

55 {
P1_23
, 
UART_2
, 3},

56 {
P2_4
 , 
UART_3
, 1},

57 {
P2_12
, 
UART_4
, 1},

58 { 
NC
 , NC , 0}

61 c⁄° 
PöM≠
 
	gPöM≠_UART_RX
[] = {

62 {
P0_18
, 
UART_0
, 1},

63 {
P1_17
, 
UART_0
, 2},

64 {
P1_26
, 
UART_0
, 2},

65 {
P1_2
 , 
UART_1
, 3},

66 {
P0_13
, 
UART_1
, 4},

67 {
P0_20
, 
UART_2
, 2},

68 {
P1_6
 , 
UART_2
, 2},

69 {
P2_3
 , 
UART_3
, 1},

70 {
P2_11
, 
UART_4
, 1},

71 {
NC
 , NC , 0}

74 
uöt32_t
 
	g£rül_úq_ids
[
UART_NUM
] = {0};

75 
u¨t_úq_h™dÀr
 
	gúq_h™dÀr
;

77 
	g°dio_u¨t_öôed
 = 0;

78 
£rül_t
 
	g°dio_u¨t
;

80 
	$£rül_öô
(
£rül_t
 *
obj
, 
PöName
 
tx
, PöNamê
rx
) {

81 
is_°dio_u¨t
 = 0;

84 
UARTName
 
u¨t_tx
 = (UARTName)
	`pöm≠_≥rùhîÆ
(
tx
, 
PöM≠_UART_TX
);

85 
UARTName
 
u¨t_rx
 = (UARTName)
	`pöm≠_≥rùhîÆ
(
rx
, 
PöM≠_UART_RX
);

86 
UARTName
 
u¨t
 = (UARTName)
	`pöm≠_mîge
(
u¨t_tx
, 
u¨t_rx
);

87 
	`MBED_ASSERT
(()
u¨t
 !
NC
);

89 
u¨t
) {

90 
UART_0
:

91 
obj
->
ödex
 = 0;

92 
LPC_SYSCON
->
SYSAHBCLKCTRL
 |= (1 << 12);

94 
UART_1
:

95 
obj
->
ödex
 = 1;

96 
LPC_SYSCON
->
SYSAHBCLKCTRL
 |= (1 << 20);

97 
LPC_SYSCON
->
PRESETCTRL
 |= (1 << 5);

99 
UART_2
:

100 
obj
->
ödex
 = 2;

101 
LPC_SYSCON
->
SYSAHBCLKCTRL
 |= (1 << 21);

102 
LPC_SYSCON
->
PRESETCTRL
 |= (1 << 6);

104 
UART_3
:

105 
obj
->
ödex
 = 3;

106 
LPC_SYSCON
->
SYSAHBCLKCTRL
 |= (1 << 22);

107 
LPC_SYSCON
->
PRESETCTRL
 |= (1 << 7);

109 
UART_4
:

110 
obj
->
ödex
 = 4;

111 
LPC_SYSCON
->
SYSAHBCLKCTRL
 |= (1 << 22);

112 
LPC_SYSCON
->
PRESETCTRL
 |= (1 << 8);

116 i‡(
obj
->
ödex
 == 0)

117 
obj
->
u¨t
 = (
LPC_USART0_Ty≥
 *)uart;

119 
obj
->
möi_u¨t
 = (
LPC_USART4_Ty≥
 *)
u¨t
;

121 i‡(
obj
->
ödex
 == 0) {

123 
obj
->
u¨t
->
FCR
 = 1 << 0

128 
obj
->
u¨t
->
IER
 = 0 << 0

134 
obj
->
möi_u¨t
->
STAT
 = (
DELTACTS
 | 
DELTARXBRK
);

136 
obj
->
möi_u¨t
->
CFG
 |
UART_EN
;

139 
	`£rül_baud
 (
obj
, 9600);

140 
	`£rül_f‹m©
(
obj
, 8, 
P¨ôyN⁄e
, 1);

143 
	`pöm≠_pöout
(
tx
, 
PöM≠_UART_TX
);

144 
	`pöm≠_pöout
(
rx
, 
PöM≠_UART_RX
);

147 i‡(
tx
 !
NC
) {

148 
	`pö_mode
(
tx
, 
PuŒUp
);

150 i‡(
rx
 !
NC
) {

151 
	`pö_mode
(
rx
, 
PuŒUp
);

154 
is_°dio_u¨t
 = (
u¨t
 =
STDIO_UART
) ? (1) : (0);

156 i‡(
is_°dio_u¨t
 && (
obj
->
ödex
 == 0)) {

157 
°dio_u¨t_öôed
 = 1;

158 
	`mem˝y
(&
°dio_u¨t
, 
obj
, (
£rül_t
));

160 
	}
}

162 
	$£rül_‰ì
(
£rül_t
 *
obj
) {

163 
£rül_úq_ids
[
obj
->
ödex
] = 0;

164 
	}
}

168 
	$£rül_baud
(
£rül_t
 *
obj
, 
baudøã
) {

169 
LPC_SYSCON
->
USART0CLKDIV
 = 1;

170 
LPC_SYSCON
->
FRGCLKDIV
 = 1;

172 i‡(
obj
->
ödex
 == 0) {

173 
uöt32_t
 
PCLK
 = 
Sy°emC‹eClock
;

180 
uöt16_t
 
DL
 = 
PCLK
 / (16 * 
baudøã
);

182 
uöt8_t
 
DivAddVÆ
 = 0;

183 
uöt8_t
 
MulVÆ
 = 1;

184 
hô
 = 0;

185 
uöt16_t
 
dlv
;

186 
uöt8_t
 
mv
, 
dav
;

187 i‡((
PCLK
 % (16 * 
baudøã
)) != 0) {

188 
îr_be°
 = 
baudøã
, 
b
;

189 
mv
 = 1; mv < 16 && !
hô
; mv++)

191 
dav
 = 0; dav < 
mv
; dav++)

199 i‡((
mv
 * 
PCLK
 * 2) & 0x80000000)

200 
dlv
 = ((((2 * 
mv
 * 
PCLK
Ë/ (
baudøã
 * (
dav
 + mv))) / 16) + 1) / 2;

202 
dlv
 = ((((4 * 
mv
 * 
PCLK
Ë/ (
baudøã
 * (
dav
 + mv))) / 32) + 1) / 2;

205 i‡(
dlv
 == 0)

206 
dlv
 = 1;

209 i‡((
dav
 > 0Ë&& (
dlv
 < 2))

210 
dlv
 = 2;

213 
b
 = ((
PCLK
 * 
mv
 / (
dlv
 * (
dav
 + mv) * 8)) + 1) / 2;

216 
b
 = 
	`abs
(b - 
baudøã
);

217 i‡(
b
 < 
îr_be°
)

219 
îr_be°
 = 
b
;

221 
DL
 = 
dlv
;

222 
MulVÆ
 = 
mv
;

223 
DivAddVÆ
 = 
dav
;

225 i‡(
b
 =
baudøã
)

227 
hô
 = 1;

236 
obj
->
u¨t
->
LCR
 |= (1 << 7);

239 
obj
->
u¨t
->
DLM
 = (
DL
 >> 8) & 0xFF;

240 
obj
->
u¨t
->
DLL
 = (
DL
 >> 0) & 0xFF;

241 
obj
->
u¨t
->
FDR
 = (
uöt32_t
Ë
DivAddVÆ
 << 0

242 | (
uöt32_t
Ë
MulVÆ
 << 4;

245 
obj
->
u¨t
->
LCR
 &= ~(1 << 7);

248 
uöt32_t
 
UARTSysClk
 = 
Sy°emC‹eClock
 / 
LPC_SYSCON
->
FRGCLKDIV
;

249 
obj
->
möi_u¨t
->
BRG
 = 
UARTSysClk
 / 16 / 
baudøã
 - 1;

251 
LPC_SYSCON
->
UARTFRGDIV
 = 0xFF;

252 
LPC_SYSCON
->
UARTFRGMULT
 = ( ((
UARTSysClk
 / 16Ë* (LPC_SYSCON->
UARTFRGDIV
 + 1)) /

253 (
baudøã
 * (
obj
->
möi_u¨t
->
BRG
 + 1))

254 Ë- (
LPC_SYSCON
->
UARTFRGDIV
 + 1);

256 
	}
}

258 
	$£rül_f‹m©
(
£rül_t
 *
obj
, 
d©a_bôs
, 
SîülP¨ôy
 
∑rôy
, 
°›_bôs
) {

259 
	`MBED_ASSERT
((
°›_bôs
 == 1) || (stop_bits == 2));

261 
°›_bôs
 -= 1;

263 i‡(
obj
->
ödex
 == 0) {

264 
	`MBED_ASSERT
((
d©a_bôs
 > 4) && (data_bits < 9));

265 
	`MBED_ASSERT
((
∑rôy
 =
P¨ôyN⁄e
Ë|| (∑rôy =
P¨ôyOdd
Ë|| (∑rôy =
P¨ôyEví
) ||

266 (
∑rôy
 =
P¨ôyF‹˚d1
Ë|| (∑rôy =
P¨ôyF‹˚d0
));

267 
d©a_bôs
 -= 5;

269 
∑rôy_íabÀ
, 
∑rôy_£À˘
;

270 
∑rôy
) {

271 
P¨ôyN⁄e
: 
∑rôy_íabÀ
 = 0; 
∑rôy_£À˘
 = 0; ;

272 
P¨ôyOdd
 : 
∑rôy_íabÀ
 = 1; 
∑rôy_£À˘
 = 0; ;

273 
P¨ôyEví
: 
∑rôy_íabÀ
 = 1; 
∑rôy_£À˘
 = 1; ;

274 
P¨ôyF‹˚d1
: 
∑rôy_íabÀ
 = 1; 
∑rôy_£À˘
 = 2; ;

275 
P¨ôyF‹˚d0
: 
∑rôy_íabÀ
 = 1; 
∑rôy_£À˘
 = 3; ;

280 
obj
->
u¨t
->
LCR
 = 
d©a_bôs
 << 0

281 | 
°›_bôs
 << 2

282 | 
∑rôy_íabÀ
 << 3

283 | 
∑rôy_£À˘
 << 4;

287 
	`MBED_ASSERT
((
d©a_bôs
 > 6) && (data_bits < 10));

288 
	`MBED_ASSERT
((
∑rôy
 =
P¨ôyN⁄e
Ë|| (∑rôy =
P¨ôyOdd
Ë|| (∑rôy =
P¨ôyEví
));

289 
d©a_bôs
 -= 7;

291 
∑rôy£l
;

292 
∑rôy
) {

293 
P¨ôyN⁄e
: 
∑rôy£l
 = 0; ;

294 
P¨ôyEví
: 
∑rôy£l
 = 2; ;

295 
P¨ôyOdd
 : 
∑rôy£l
 = 3; ;

299 
obj
->
möi_u¨t
->
CFG
 = (
d©a_bôs
 << 2)

300 | (
∑rôy£l
 << 4)

301 | (
°›_bôs
 << 6)

302 | 
UART_EN
;

304 
	}
}

309 
ölöe
 
	$u¨t_úq
(
uöt32_t
 
iú
, uöt32_à
ödex
) {

310 
SîülIrq
 
úq_ty≥
;

311 
iú
) {

312 1: 
úq_ty≥
 = 
TxIrq
; ;

313 2: 
úq_ty≥
 = 
RxIrq
; ;

317 i‡(
£rül_úq_ids
[
ödex
] != 0)

318 
	`úq_h™dÀr
(
£rül_úq_ids
[
ödex
], 
úq_ty≥
);

319 
	}
}

321 
	$u¨t0_úq
()

323 
	`u¨t_úq
((
LPC_USART0
->
IIR
 >> 1) & 0x7, 0);

324 
	}
}

326 
	$u¨t1_úq
()

328 if(
LPC_USART1
->
STAT
 & (1 << 2)){

329 
	`u¨t_úq
(1, 1);

331 if(
LPC_USART1
->
STAT
 & (1 << 0)){

332 
	`u¨t_úq
(2, 1);

334 
	}
}

336 
	$u¨t2_úq
()

338 if(
LPC_USART2
->
STAT
 & (1 << 2)){

339 
	`u¨t_úq
(1, 2);

341 if(
LPC_USART2
->
STAT
 & (1 << 0)){

342 
	`u¨t_úq
(2, 2);

344 
	}
}

346 
	$u¨t3_úq
()

348 if(
LPC_USART3
->
STAT
 & (1 << 2)){

349 
	`u¨t_úq
(1, 3);

351 if(
LPC_USART3
->
STAT
 & (1 << 0)){

352 
	`u¨t_úq
(2, 3);

354 
	}
}

356 
	$u¨t4_úq
()

358 if(
LPC_USART4
->
STAT
 & (1 << 2)){

359 
	`u¨t_úq
(1, 4);

361 if(
LPC_USART4
->
STAT
 & (1 << 0)){

362 
	`u¨t_úq
(2, 4);

364 
	}
}

366 
	$£rül_úq_h™dÀr
(
£rül_t
 *
obj
, 
u¨t_úq_h™dÀr
 
h™dÀr
, 
uöt32_t
 
id
) {

367 
úq_h™dÀr
 = 
h™dÀr
;

368 
£rül_úq_ids
[
obj
->
ödex
] = 
id
;

369 
	}
}

371 
	$£rül_úq_£t
(
£rül_t
 *
obj
, 
SîülIrq
 
úq
, 
uöt32_t
 
íabÀ
) {

372 
IRQn_Ty≥
 
úq_n
 = (IRQn_Type)0;

373 
uöt32_t
 
ve˘‹
 = 0;

374 if(
obj
->
ödex
 == 0){

375 
úq_n
 = 
USART0_IRQn
; 
ve˘‹
 = (
uöt32_t
)&
u¨t0_úq
;

378 ()
obj
->
möi_u¨t
) {

379 
UART_0
: 
úq_n
 = 
USART0_IRQn
; 
ve˘‹
 = (
uöt32_t
)&
u¨t0_úq
; ;

380 
UART_1
: 
úq_n
 = 
USART1_4_IRQn
; 
ve˘‹
 = (
uöt32_t
)&
u¨t1_úq
; ;

381 
UART_2
: 
úq_n
 = 
USART2_3_IRQn
; 
ve˘‹
 = (
uöt32_t
)&
u¨t2_úq
; ;

382 
UART_3
: 
úq_n
 = 
USART2_3_IRQn
; 
ve˘‹
 = (
uöt32_t
)&
u¨t3_úq
; ;

383 
UART_4
: 
úq_n
 = 
USART1_4_IRQn
; 
ve˘‹
 = (
uöt32_t
)&
u¨t4_úq
; ;

387 i‡(
íabÀ
) {

388 i‡(
obj
->
ödex
 == 0) {

389 
obj
->
u¨t
->
IER
 |(1 << 
úq
);

392 
obj
->
möi_u¨t
->
INTENSET
 = (1 << ((
úq
 =
RxIrq
) ? 0 : 2));

394 
	`NVIC_SëVe˘‹
(
úq_n
, 
ve˘‹
);

395 
	`NVIC_E«bÀIRQ
(
úq_n
);

397 
Æl_dißbÀd
 = 0;

398 
SîülIrq
 
Ÿhî_úq
 = (
úq
 =
RxIrq
Ë? (RxIrqË: (
TxIrq
);

400 i‡(
obj
->
ödex
 == 0) {

401 
obj
->
u¨t
->
IER
 &~(1 << 
úq
);

402 
Æl_dißbÀd
 = (
obj
->
u¨t
->
IER
 & (1 << 
Ÿhî_úq
)) == 0;

405 
obj
->
möi_u¨t
->
INTENCLR
 = (1 << ((
úq
 =
RxIrq
) ? 0 : 2));

406 
Æl_dißbÀd
 = (
obj
->
möi_u¨t
->
INTENSET
) == 0;

409 i‡(
Æl_dißbÀd
)

410 
	`NVIC_DißbÀIRQ
(
úq_n
);

412 
	}
}

417 
	$£rül_gëc
(
£rül_t
 *
obj
) {

418 !
	`£rül_ªadabÀ
(
obj
));

419 i‡(
obj
->
ödex
 == 0) {

420  
obj
->
u¨t
->
RBR
;

423  
obj
->
möi_u¨t
->
RXDAT
;

425 
	}
}

427 
	$£rül_putc
(
£rül_t
 *
obj
, 
c
) {

428 !
	`£rül_wrôabÀ
(
obj
));

429 i‡(
obj
->
ödex
 == 0) {

430 
obj
->
u¨t
->
THR
 = 
c
;

433 
obj
->
möi_u¨t
->
TXDAT
 = 
c
;

435 
	}
}

437 
	$£rül_ªadabÀ
(
£rül_t
 *
obj
) {

438 i‡(
obj
->
ödex
 == 0) {

439  
obj
->
u¨t
->
LSR
 & 0x01;

442  
obj
->
möi_u¨t
->
STAT
 & 
RXRDY
;

444 
	}
}

446 
	$£rül_wrôabÀ
(
£rül_t
 *
obj
) {

447 i‡(
obj
->
ödex
 == 0) {

448  
obj
->
u¨t
->
LSR
 & 0x20;

451  
obj
->
möi_u¨t
->
STAT
 & 
TXRDY
;

453 
	}
}

455 
	$£rül_˛ór
(
£rül_t
 *
obj
) {

456 i‡(
obj
->
ödex
 == 0) {

457 
obj
->
u¨t
->
FCR
 = 1 << 1

462 
obj
->
möi_u¨t
->
STAT
 = 0;

464 
	}
}

466 
	$£rül_pöout_tx
(
PöName
 
tx
) {

467 
	`pöm≠_pöout
(
tx
, 
PöM≠_UART_TX
);

468 
	}
}

470 
	$£rül_bªak_£t
(
£rül_t
 *
obj
) {

471 i‡(
obj
->
ödex
 == 0) {

472 
obj
->
u¨t
->
LCR
 |= (1 << 6);

475 
obj
->
möi_u¨t
->
CTL
 |
TXBRKEN
;

477 
	}
}

479 
	$£rül_bªak_˛ór
(
£rül_t
 *
obj
) {

480 i‡(
obj
->
ödex
 == 0) {

481 
obj
->
u¨t
->
LCR
 &= ~(1 << 6);

484 
obj
->
möi_u¨t
->
CTL
 &~
TXBRKEN
;

486 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\sleep.c

16 
	~"¶ìp_≠i.h
"

17 
	~"cmsis.h
"

18 
	~"mbed_öãrÁ˚.h
"

20 #i‡
DEVICE_SLEEP


22 
	$¶ìp
() {

24 #i‡(
DEVICE_SEMIHOST
 == 1)

26 
	`mbed_öãrÁ˚_disc⁄√˘
();

30 
LPC_PMU
->
PCON
 &= ~0x03;

33 
SCB
->
SCR
 &~
SCB_SCR_SLEEPDEEP_Msk
;

36 
	`__WFI
();

37 
	}
}

40 
	$dìp¶ìp
() {

42 #i‡(
DEVICE_SEMIHOST
 == 1)

44 
	`mbed_öãrÁ˚_disc⁄√˘
();

48 
LPC_PMU
->
PCON
 &= ~0x03;

49 
LPC_PMU
->
PCON
 |= 0x01;

53 
LPC_SYSCON
->
PDSLEEPCFG
 = 0x00000037 | (LPC_SYSCON->
PDRUNCFG
 & (0x00000048));

56 
LPC_SYSCON
->
PDAWAKECFG
 = LPC_SYSCON->
PDRUNCFG
;

59 
LPC_SYSCON
->
STARTERP0
 = 0xFF;

60 
LPC_SYSCON
->
STARTERP1
 = 0xFFFFFFFF;

63 
SCB
->
SCR
 |
SCB_SCR_SLEEPDEEP_Msk
;

66 
	`__WFI
();

67 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\spi_api.c

16 
	~"mbed_as£π.h
"

17 
	~<m©h.h
>

19 
	~"•i_≠i.h
"

20 
	~"cmsis.h
"

21 
	~"pöm≠.h
"

22 
	~"mbed_îr‹.h
"

24 #i‡
DEVICE_SPI


26 c⁄° 
PöM≠
 
	gPöM≠_SPI_SCLK
[] = {

27 {
P0_6
 , 
SPI_0
, 0x02},

28 {
P1_29
, 
SPI_0
, 0x01},

29 {
P2_7
 , 
SPI_0
, 0x01},

30 {
P1_20
, 
SPI_1
, 0x02},

31 {
P1_27
, 
SPI_1
, 0x04},

32 {
NC
 , NC , 0}

35 c⁄° 
PöM≠
 
	gPöM≠_SPI_MOSI
[] = {

36 {
P0_9
 , 
SPI_0
, 0x01},

37 {
P1_12
, 
SPI_0
, 0x01},

38 {
P0_21
, 
SPI_1
, 0x02},

39 {
P1_22
, 
SPI_1
, 0x01},

40 {
NC
 , NC , 0}

43 c⁄° 
PöM≠
 
	gPöM≠_SPI_MISO
[] = {

44 {
P0_8
 , 
SPI_0
, 0x01},

45 {
P1_16
, 
SPI_0
, 0x01},

46 {
P0_22
, 
SPI_1
, 0x03},

47 {
P1_21
, 
SPI_1
, 0x02},

48 {
NC
 , NC , 0}

51 c⁄° 
PöM≠
 
	gPöM≠_SPI_SSEL
[] = {

52 {
P0_2
 , 
SPI_0
, 0x01},

53 {
P1_15
, 
SPI_0
, 0x01},

54 {
P0_23
, 
SPI_1
, 0x04},

55 {
P1_23
, 
SPI_1
, 0x02},

56 {
NC
 , NC , 0}

59 
ölöe
 
s•_dißbÀ
(
•i_t
 *
obj
);

60 
ölöe
 
s•_íabÀ
(
•i_t
 *
obj
);

62 
	$•i_öô
(
•i_t
 *
obj
, 
PöName
 
mosi
, PöNamê
miso
, PöNamê
s˛k
, PöNamê
s£l
) {

64 
SPIName
 
•i_mosi
 = (SPIName)
	`pöm≠_≥rùhîÆ
(
mosi
, 
PöM≠_SPI_MOSI
);

65 
SPIName
 
•i_miso
 = (SPIName)
	`pöm≠_≥rùhîÆ
(
miso
, 
PöM≠_SPI_MISO
);

66 
SPIName
 
•i_s˛k
 = (SPIName)
	`pöm≠_≥rùhîÆ
(
s˛k
, 
PöM≠_SPI_SCLK
);

67 
SPIName
 
•i_s£l
 = (SPIName)
	`pöm≠_≥rùhîÆ
(
s£l
, 
PöM≠_SPI_SSEL
);

68 
SPIName
 
•i_d©a
 = (SPIName)
	`pöm≠_mîge
(
•i_mosi
, 
•i_miso
);

69 
SPIName
 
•i_˙é
 = (SPIName)
	`pöm≠_mîge
(
•i_s˛k
, 
•i_s£l
);

71 
obj
->
•i
 = (
LPC_SSP0_Ty≥
*)
	`pöm≠_mîge
(
•i_d©a
, 
•i_˙é
);

72 
	`MBED_ASSERT
(()
obj
->
•i
 !
NC
);

75 ()
obj
->
•i
) {

76 
SPI_0
:

77 
LPC_SYSCON
->
SYSAHBCLKCTRL
 |= 1 << 11;

78 
LPC_SYSCON
->
SSP0CLKDIV
 = 0x01;

79 
LPC_SYSCON
->
PRESETCTRL
 |= 1 << 0;

81 
SPI_1
:

82 
LPC_SYSCON
->
SYSAHBCLKCTRL
 |= 1 << 18;

83 
LPC_SYSCON
->
SSP1CLKDIV
 = 0x01;

84 
LPC_SYSCON
->
PRESETCTRL
 |= 1 << 2;

89 
	`pöm≠_pöout
(
mosi
, 
PöM≠_SPI_MOSI
);

90 
	`pöm≠_pöout
(
miso
, 
PöM≠_SPI_MISO
);

91 
	`pöm≠_pöout
(
s˛k
, 
PöM≠_SPI_SCLK
);

92 i‡(
s£l
 !
NC
) {

93 
	`pöm≠_pöout
(
s£l
, 
PöM≠_SPI_SSEL
);

95 
	}
}

97 
	$•i_‰ì
(
•i_t
 *
obj
Ë{
	}
}

99 
	$•i_f‹m©
(
•i_t
 *
obj
, 
bôs
, 
mode
, 
¶ave
) {

100 
	`s•_dißbÀ
(
obj
);

101 
	`MBED_ASSERT
(((
bôs
 >4Ë&& (bô†<16)Ë|| ((
mode
 >= 0) && (mode <= 3)));

103 
pﬁ¨ôy
 = (
mode
 & 0x2) ? 1 : 0;

104 
pha£
 = (
mode
 & 0x1) ? 1 : 0;

107 
DSS
 = 
bôs
 - 1;

108 
SPO
 = (
pﬁ¨ôy
) ? 1 : 0;

109 
SPH
 = (
pha£
) ? 1 : 0;

111 
FRF
 = 0;

112 
uöt32_t
 
tmp
 = 
obj
->
•i
->
CR0
;

113 
tmp
 &= ~(0xFFFF);

114 
tmp
 |
DSS
 << 0

115 | 
FRF
 << 4

116 | 
SPO
 << 6

117 | 
SPH
 << 7;

118 
obj
->
•i
->
CR0
 = 
tmp
;

120 
tmp
 = 
obj
->
•i
->
CR1
;

121 
tmp
 &= ~(0xD);

122 
tmp
 |= 0 << 0

123 | ((
¶ave
) ? 1 : 0) << 2

125 
obj
->
•i
->
CR1
 = 
tmp
;

127 
	`s•_íabÀ
(
obj
);

128 
	}
}

130 
	$•i_‰equícy
(
•i_t
 *
obj
, 
hz
) {

131 
	`s•_dißbÀ
(
obj
);

133 
uöt32_t
 
PCLK
 = 
Sy°emC‹eClock
;

135 
¥esˇÀr
;

137 
¥esˇÀr
 = 2;Örescaler <= 254;Örescaler += 2) {

138 
¥esˇÀ_hz
 = 
PCLK
 / 
¥esˇÀr
;

141 
dividî
 = 
	`Êo‹
((()
¥esˇÀ_hz
 / ()
hz
) + 0.5f);

144 i‡(
dividî
 < 256) {

146 
obj
->
•i
->
CPSR
 = 
¥esˇÀr
;

149 
obj
->
•i
->
CR0
 &= ~(0xFFFF << 8);

150 
obj
->
•i
->
CR0
 |(
dividî
 - 1) << 8;

151 
	`s•_íabÀ
(
obj
);

155 
	`îr‹
("Couldn't setupÑequested SPI frequency");

156 
	}
}

158 
ölöe
 
	$s•_dißbÀ
(
•i_t
 *
obj
) {

159  
obj
->
•i
->
CR1
 &= ~(1 << 1);

160 
	}
}

162 
ölöe
 
	$s•_íabÀ
(
•i_t
 *
obj
) {

163  
obj
->
•i
->
CR1
 |= (1 << 1);

164 
	}
}

166 
ölöe
 
	$s•_ªadabÀ
(
•i_t
 *
obj
) {

167  
obj
->
•i
->
SR
 & (1 << 2);

168 
	}
}

170 
ölöe
 
	$s•_wrôóbÀ
(
•i_t
 *
obj
) {

171  
obj
->
•i
->
SR
 & (1 << 1);

172 
	}
}

174 
ölöe
 
	$s•_wrôe
(
•i_t
 *
obj
, 
vÆue
) {

175 !
	`s•_wrôóbÀ
(
obj
));

176 
obj
->
•i
->
DR
 = 
vÆue
;

177 
	}
}

179 
ölöe
 
	$s•_ªad
(
•i_t
 *
obj
) {

180 !
	`s•_ªadabÀ
(
obj
));

181  
obj
->
•i
->
DR
;

182 
	}
}

184 
ölöe
 
	$s•_busy
(
•i_t
 *
obj
) {

185  (
obj
->
•i
->
SR
 & (1 << 4)) ? (1) : (0);

186 
	}
}

188 
	$•i_ma°î_wrôe
(
•i_t
 *
obj
, 
vÆue
) {

189 
	`s•_wrôe
(
obj
, 
vÆue
);

190  
	`s•_ªad
(
obj
);

191 
	}
}

193 
	$•i_¶ave_ª˚ive
(
•i_t
 *
obj
) {

194  (
	`s•_ªadabÀ
(
obj
Ë&& !
	`s•_busy
(obj)) ? (1) : (0);

195 
	}
}

197 
	$•i_¶ave_ªad
(
•i_t
 *
obj
) {

198  
obj
->
•i
->
DR
;

199 
	}
}

201 
	$•i_¶ave_wrôe
(
•i_t
 *
obj
, 
vÆue
) {

202 
	`s•_wrôóbÀ
(
obj
) == 0) ;

203 
obj
->
•i
->
DR
 = 
vÆue
;

204 
	}
}

206 
	$•i_busy
(
•i_t
 *
obj
) {

207  
	`s•_busy
(
obj
);

208 
	}
}

	@C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\us_ticker.c

16 
	~<°ddef.h
>

17 
	~"us_tickî_≠i.h
"

18 
	~"PîùhîÆNames.h
"

20 
	#US_TICKER_TIMER
 ((
LPC_CT32B0_Ty≥
 *)
LPC_CT32B1_BASE
)

	)

21 
	#US_TICKER_TIMER_IRQn
 
CT32B1_IRQn


	)

23 
	gus_tickî_öôed
 = 0;

25 
	$us_tickî_öô
() {

26 i‡(
us_tickî_öôed
) ;

27 
us_tickî_öôed
 = 1;

29 
LPC_SYSCON
->
SYSAHBCLKCTRL
 |= (1<<10);

30 
uöt32_t
 
PCLK
 = 
Sy°emC‹eClock
;

32 
US_TICKER_TIMER
->
TCR
 = 0x2;

34 
uöt32_t
 
¥esˇÀ
 = 
PCLK
 / 1000000;

35 
US_TICKER_TIMER
->
PR
 = 
¥esˇÀ
 - 1;

36 
US_TICKER_TIMER
->
TCR
 = 1;

38 
	`NVIC_SëVe˘‹
(
US_TICKER_TIMER_IRQn
, (
uöt32_t
)
us_tickî_úq_h™dÀr
);

39 
	`NVIC_E«bÀIRQ
(
US_TICKER_TIMER_IRQn
);

40 
	}
}

42 
uöt32_t
 
	$us_tickî_ªad
() {

43 i‡(!
us_tickî_öôed
)

44 
	`us_tickî_öô
();

46  
US_TICKER_TIMER
->
TC
;

47 
	}
}

49 
	$us_tickî_£t_öãºu±
(
time°amp_t
 
time°amp
) {

51 
US_TICKER_TIMER
->
MR0
 = (
uöt32_t
)
time°amp
;

53 
US_TICKER_TIMER
->
MCR
 |= 1;

54 
	}
}

56 
	$us_tickî_dißbÀ_öãºu±
() {

57 
US_TICKER_TIMER
->
MCR
 &= ~1;

58 
	}
}

60 
	$us_tickî_˛ór_öãºu±
() {

61 
US_TICKER_TIMER
->
IR
 = 1;

62 
	}
}

	@
1
.
0
464
34264
C:\PokittoLib_Git\PokittoLib_curr\Examples\3Dblobs\3Dblobs.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Aquarium256\My_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Aquarium256\PokittoMicro.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Aquarium256\PokittoMicro.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Aquarium256\bitmaps.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Aquarium256\main.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Bitmap\My_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Bitmap\bitmap.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Bitmap\pokitto_icon.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Chip8\CHIP8Editor.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Chip8\CHIP8Editor.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Chip8\CHIP8Player.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Chip8\CHIP8Player.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Chip8\FieldsList.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Chip8\FieldsList.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Chip8\Hello.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Chip8\ListBox.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Chip8\ListBox.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Chip8\My_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Chip8\SpriteEditor.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Chip8\SpriteEditor.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Coffins\My_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Coffins\classes.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Coffins\crapai.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Coffins\gui.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Coffins\main.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Coffins\mapgen.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\Coffins\sprites.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Crabator\Crabator.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Crabator\Crabator.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Crabator\My_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Crabator\main.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\DrawDemo\My_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\DrawDemo\drawdemo.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\Animation.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\Animation.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\My_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_cheeks.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_dreamy.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_eyepupil.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_flat.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_grin.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_halfpupil.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_heart.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_lefteye.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_lids_closed.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_lids_halfeyes.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_lids_smug.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_oh.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_professoreyes.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_righteye.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_smile.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_smile_open.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_squint.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\FeelGood\m_tongue.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\HelloWorld\My_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\HelloWorld\main.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\Animation.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\Animation.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\My_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_cheeks.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_dreamy.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_eyepupil.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_flat.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_grin.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_halfpupil.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_heart.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_lefteye.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_lids_closed.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_lids_halfeyes.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_lids_smug.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_oh.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_professoreyes.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_righteye.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_smile.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_smile_open.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_squint.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\Introduction\m_tongue.c
C:\PokittoLib_Git\PokittoLib_curr\Examples\Mode13\My_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Mode13\mode13.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Mode14\My_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Mode14\lemm.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Mode14\mode14.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Mode15\Mode15.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Mode15\My_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\My_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\Pixonia.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\anim_blue_flag1.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\anim_blue_flag2.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\dirt_pillar.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\gameover.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\gold.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\gold2.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\main.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\night_palette.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\pixelman_nw_1.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\pixelman_nw_2.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\pixelman_se_1.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\pixelman_se_2.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\pixonia.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\splatter.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_beach_se.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_beach_sw.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_bump_e.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_bump_n.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_bump_ne.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_bump_nw.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_bump_s.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_bump_se.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_bump_sw.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_bump_w.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_earth.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_gold.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_grain.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_hut.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_plain.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_stone.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_tree.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_water1.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\ter_water2.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\theresgold.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\werewolf_nw_1.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\werewolf_nw_2.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\werewolf_se_1.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pixonia\werewolf_se_2.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pokittris\My_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pokittris\easing.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pokittris\tetris.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Pokittris\tetris_gfx.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\PolarParcel\My_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\PolarParcel\bear_sprites.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\PolarParcel\polar.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\PolarParcel\sprites.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\SDCardFileIO\My_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\SDCardFileIO\main.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\SaveHighscore\My_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\SaveHighscore\savehi.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Sprites\My_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Sprites\gfxdata.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Sprites\main.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Squiddy\My_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Squiddy\Squiddy.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Squiddy\qdatatables.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\SynthTest\My_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\SynthTest\SynthTest.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\SynthTest\beat_11025.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\TestCrashScreen\My_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\TestCrashScreen\main.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Tracker\Arrays.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Tracker\Arrays.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Tracker\My_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Tracker\PatchSettings.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Tracker\Tracker.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\Tracker\Tracker.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Tracker\main.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\UpdateAndClipRect\My_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\UpdateAndClipRect\gfxdata.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\UpdateAndClipRect\main.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\WavePlayer\My_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\WavePlayer\main.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\WavePlayer\wave_player.cpp
C:\PokittoLib_Git\PokittoLib_curr\Examples\WavePlayer\wave_player.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Zuzupong\My_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Zuzupong\textures.h
C:\PokittoLib_Git\PokittoLib_curr\Examples\Zuzupong\zuzupong.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\TIC806x6.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\ZXSpec.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\adventurer12x16.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\donut7x10.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\dragon6x8.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\font3x3.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\font3x5.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\font5x7.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\fontC64.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\fontC64UIGfx.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\fontMonkey.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\karateka8x11.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\koubit7x7.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\mini4x6.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\runes6x8.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\tight4x7.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\FONTS\tiny5x7.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\GBcompatibility.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\Localization.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\Macros_LCD.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PALETTES\palAction.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PALETTES\palCGA.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PALETTES\palDB16.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PALETTES\palDefault.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PALETTES\palGameboy.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PALETTES\palMagma.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PALETTES\palMono.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PALETTES\palPico.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PALETTES\palRainbow.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PALETTES\palZXSpec.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoBacklight.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoBacklight.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoBattery.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoBattery.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoButtons.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoButtons.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoConsole.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoConsole.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoCookie.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoCookie.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoCore.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoCore.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoDisk.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoDisk.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoDisplay.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoDisplay.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoFakeavr.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoFonts.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoGlobs.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoItoa.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoItoa.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoLogos.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoLogos.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoPalette.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoPalettes.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoSound.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoSound.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\PokittoTimer.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_CORE\binary.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\HWButtons.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\HWButtons.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\HWLCD.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\HWLCD.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\HWSound.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\HWSound.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\PokittoClock.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\PokittoEEPROM.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\PokittoHW.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\Pokitto_extport.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\Pokitto_extport.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\SoftwareI2C.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\SoftwareI2C.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\clock_11u6x.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\dma_11u6x.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\dma_11u6x.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\iap.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\iap.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\loader.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\lpc_defs.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_HW\timer_11u6x.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\MicroPython\My_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\MicroPython\PythonBindings.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\MicroPython\PythonBindings.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\MicroPython\UsbSerialPrint.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\MicroPython\main.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\MicroPython\src_py\sprite.py
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\CRC16.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\CRC16.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\CRC7.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\CRC7.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\ChaN\ccsbcs.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\ChaN\diskio.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\ChaN\ff.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\ChaN\ff.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\ChaN\ffconf.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\ChaN\sdfs_diskio.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\ChaN\sdfs_integer.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\FATDirHandle.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\FATDirHandle.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\FATFileHandle.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\FATFileHandle.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\FATFileSystem.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\FATFileSystem.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\FATFileSystem\MemFileSystem.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\SDFileSystem.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\SDFileSystem\SDFileSystem.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\Synth\Synth.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\Synth\Synth.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\Synth\Synth_envfuncs.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\Synth\Synth_helpers.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\Synth\Synth_mixfuncs.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\Synth\Synth_osc.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\Synth\Synth_oscfuncs.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\Synth\Synth_song.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\Synth\Synth_songfuncs.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\Synth\Synth_wavefuncs.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBDescriptor.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBDevice.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBDevice.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBDevice_Types.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBEndpoints.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBEndpoints_EFM32.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBEndpoints_KL25Z.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBEndpoints_LPC11U.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBEndpoints_LPC17_LPC23.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBEndpoints_Maxim.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBEndpoints_RZ_A1H.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBEndpoints_STM32F4.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBHAL.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBHAL_EFM32.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBHAL_KL25Z.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBHAL_LPC11U.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBHAL_LPC17.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBHAL_LPC40.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBHAL_Maxim.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBHAL_RZ_A1H.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBHAL_STM32F4.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBDevice\USBRegs_STM32.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBSerial\CircBuffer.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBSerial\USBCDC.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBSerial\USBCDC.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBSerial\USBSerial.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\POKITTO_LIBS\USBDevice\USBSerial\USBSerial.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\Pokitto.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\Pokitto_settings.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\libpff\connect.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\libpff\diskio.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\libpff\integer.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\libpff\mmc.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\libpff\pff.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\libpff\pff.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\AnalogIn.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\AnalogOut.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\BusIn.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\BusInOut.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\BusOut.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\CAN.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\CThunk.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\CallChain.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\CircularBuffer.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\DigitalIn.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\DigitalInOut.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\DigitalOut.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\DirHandle.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\Ethernet.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\FileBase.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\FileHandle.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\FileLike.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\FilePath.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\FileSystemLike.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\FunctionPointer.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\I2C.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\I2CSlave.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\InterruptIn.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\InterruptManager.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\LocalFileSystem.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\LowPowerTicker.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\LowPowerTimeout.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\LowPowerTimer.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\PortIn.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\PortInOut.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\PortOut.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\PwmOut.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\RawSerial.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\SPI.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\SPISlave.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\Serial.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\SerialBase.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\Stream.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\Ticker.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\Timeout.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\Timer.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\TimerEvent.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\Transaction.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\can_helper.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\mbed.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\mbed_assert.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\mbed_debug.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\mbed_error.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\mbed_interface.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\platform.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\rtc_time.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\semihost_api.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\toolchain.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\api\wait_api.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\BusIn.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\BusInOut.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\BusOut.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\CAN.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\CallChain.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\Ethernet.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\FileBase.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\FileLike.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\FilePath.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\FileSystemLike.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\I2C.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\I2CSlave.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\InterruptIn.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\InterruptManager.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\LocalFileSystem.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\RawSerial.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\SPI.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\SPISlave.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\Serial.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\SerialBase.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\Stream.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\Ticker.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\Timeout.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\Timer.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\TimerEvent.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\assert.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\board.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\error.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\gpio.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\lp_ticker_api.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\mbed_interface.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\pinmap_common.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\retarget.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\rtc_time.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\semihost_api.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\ticker_api.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\us_ticker_api.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\common\wait_api.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\analogin_api.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\analogout_api.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\buffer.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\can_api.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\dma_api.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\ethernet_api.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\gpio_api.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\gpio_irq_api.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\i2c_api.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\lp_ticker_api.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\pinmap.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\port_api.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\pwmout_api.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\rtc_api.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\serial_api.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\sleep_api.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\spi_api.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\ticker_api.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\hal\us_ticker_api.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\TARGET_NXP\TARGET_LPC11U6X\LPC11U6x.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\TARGET_NXP\TARGET_LPC11U6X\TOOLCHAIN_GCC_ARM\TARGET_LPC11U68\startup_LPC11U68.cpp
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\TARGET_NXP\TARGET_LPC11U6X\cmsis.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\TARGET_NXP\TARGET_LPC11U6X\cmsis_nvic.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\TARGET_NXP\TARGET_LPC11U6X\cmsis_nvic.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\TARGET_NXP\TARGET_LPC11U6X\system_LPC11U6x.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\TARGET_NXP\TARGET_LPC11U6X\system_LPC11U6x.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\core_ca9.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\core_caFunc.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\core_caInstr.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\core_ca_mmu.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\core_cm0.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\core_cm0plus.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\core_cm3.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\core_cm4.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\core_cm4_simd.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\core_cm7.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\core_cmFunc.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\core_cmInstr.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\cmsis\core_cmSimd.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\PeripheralNames.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\PinNames.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\PortNames.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\analogin_api.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\device.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\gpio_api.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\gpio_irq_api.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\gpio_object.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\i2c_api.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\objects.h
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\pinmap.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\pwmout_api.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\rtc_api.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\serial_api.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\sleep.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\spi_api.c
C:\PokittoLib_Git\PokittoLib_curr\Pokitto\mbed-pokitto\targets\hal\TARGET_NXP\TARGET_LPC11U6X\us_ticker.c
